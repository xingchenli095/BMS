#ifndef RTE_HOOK_H
#define RTE_HOOK_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.8.4
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2022 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains Rte hook declarations
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.8.4
 * on Mon Sep 11 17:27:20 CST 2023. !!!IGNORE-LINE!!!
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Rte_Cfg.h>
#include <Os.h>
#include <Rte_Type.h>
#include <Rte_BswM_Hook.h>
#include <Rte_ComM_Hook.h>
#include <Rte_Dcm_Hook.h>
#include <Rte_Dem_Hook.h>
#include <Rte_DevelopmentErrorTracer_Hook.h>
#include <Rte_NvM_Hook.h>
#include <Rte_SWC_E2ESafety_Hook.h>
#include <Rte_SWC_SPI_Hook.h>
#include <Rte_SecOC_Hook.h>
#include <Rte_SWC_AppStateHandler_Hook.h>
#include <Rte_SWC_CyclicCounter_Hook.h>
#include <Rte_SWC_IoHwAbs_Hook.h>
#include <Rte_SWC_ModifyEcho_Hook.h>
#include <Rte_ServiceSwComponentDcm_Hook.h>
#include <Rte_SWC_Secured_Hook.h>
#include <Rte_ServiceSwComponentSecOC_Hook.h>
#include <Rte_ServiceSwComponentDem_Hook.h>
#include <SchM_WdgM_ApplHook.h>
#include <SchM_WdgMHook.h>
#include <SchM_WdgIfHook.h>
#include <SchM_SpiHook.h>
#include <SchM_SecOCHook.h>
#include <SchM_SCrcHook.h>
#include <SchM_PortHook.h>
#include <SchM_PduRHook.h>
#include <SchM_PbcfgMHook.h>
#include <SchM_NvMHook.h>
#include <SchM_NmHook.h>
#include <SchM_MemIfHook.h>
#include <SchM_McuHook.h>
#include <SchM_FlsHook.h>
#include <SchM_FeeHook.h>
#include <SchM_EcuMHook.h>
#include <SchM_EcuCHook.h>
#include <SchM_E2EHook.h>
#include <SchM_E2EXfHook.h>
#include <SchM_DioHook.h>
#include <SchM_DetHook.h>
#include <SchM_DemHook.h>
#include <SchM_DcmHook.h>
#include <SchM_CsmHook.h>
#include <SchM_CryptoHook.h>
#include <SchM_CryIfHook.h>
#include <SchM_CrcHook.h>
#include <SchM_ComHook.h>
#include <SchM_ComXfHook.h>
#include <SchM_ComMHook.h>
#include <SchM_CanHook.h>
#include <SchM_CanTrcvHook.h>
#include <SchM_CanTpHook.h>
#include <SchM_CanSMHook.h>
#include <SchM_CanNmHook.h>
#include <SchM_CanIfHook.h>
#include <SchM_BswMHook.h>
#include <SchM_BaseHook.h>
#include <SchM_BaseNXPHook.h>
#include <SchM_AtomicsHook.h>
#include <SchM_AdcHook.h>

/* ==================[Macros]================================================= */
#ifndef RTE_VFB_TRACE
#define RTE_VFB_TRACE FALSE
#endif
#if (defined(Rte_ComHook_SGCounterOut_CAN_FD_273T_SigTx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGCounterOut_CAN_FD_273T_SigTx
#endif
#if defined(Rte_ComHook_SGCounterOut_CAN_FD_273T_SigTx)
#undef Rte_ComHook_SGCounterOut_CAN_FD_273T_SigTx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGCounterOut_CAN_FD_273T_SigTx (P2CONST(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGCounterOut_CAN_FD_273T_SigTx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGCounterOut_272T_SigTx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGCounterOut_272T_SigTx
#endif
#if defined(Rte_ComHook_SGCounterOut_272T_SigTx)
#undef Rte_ComHook_SGCounterOut_272T_SigTx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGCounterOut_272T_SigTx (P2CONST(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGCounterOut_272T_SigTx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGSecuredDataOut_285T_SigTx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGSecuredDataOut_285T_SigTx
#endif
#if defined(Rte_ComHook_SGSecuredDataOut_285T_SigTx)
#undef Rte_ComHook_SGSecuredDataOut_285T_SigTx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGSecuredDataOut_285T_SigTx (P2CONST(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGSecuredDataOut_285T_SigTx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGCounterIn_CAN_FD_257R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGCounterIn_CAN_FD_257R_SigRx
#endif
#if defined(Rte_ComHook_SGCounterIn_CAN_FD_257R_SigRx)
#undef Rte_ComHook_SGCounterIn_CAN_FD_257R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGCounterIn_CAN_FD_257R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGCounterIn_CAN_FD_257R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGCounterIn_256R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGCounterIn_256R_SigRx
#endif
#if defined(Rte_ComHook_SGCounterIn_256R_SigRx)
#undef Rte_ComHook_SGCounterIn_256R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGCounterIn_256R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGCounterIn_256R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SGSecuredDataIn_281R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SGSecuredDataIn_281R_SigRx
#endif
#if defined(Rte_ComHook_SGSecuredDataIn_281R_SigRx)
#undef Rte_ComHook_SGSecuredDataIn_281R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SGSecuredDataIn_281R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SGSecuredDataIn_281R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SafetyE2E_DataOut_284T_SigTx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SafetyE2E_DataOut_284T_SigTx
#endif
#if defined(Rte_ComHook_SafetyE2E_DataOut_284T_SigTx)
#undef Rte_ComHook_SafetyE2E_DataOut_284T_SigTx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SafetyE2E_DataOut_284T_SigTx (P2CONST(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SafetyE2E_DataOut_284T_SigTx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SafetyE2E_DataOut_CRC_284T_SigTx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SafetyE2E_DataOut_CRC_284T_SigTx
#endif
#if defined(Rte_ComHook_SafetyE2E_DataOut_CRC_284T_SigTx)
#undef Rte_ComHook_SafetyE2E_DataOut_CRC_284T_SigTx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SafetyE2E_DataOut_CRC_284T_SigTx (P2CONST(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SafetyE2E_DataOut_CRC_284T_SigTx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SafetyE2E_DataOut_SQC_Counter_284T_SigTx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SafetyE2E_DataOut_SQC_Counter_284T_SigTx
#endif
#if defined(Rte_ComHook_SafetyE2E_DataOut_SQC_Counter_284T_SigTx)
#undef Rte_ComHook_SafetyE2E_DataOut_SQC_Counter_284T_SigTx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SafetyE2E_DataOut_SQC_Counter_284T_SigTx (P2CONST(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SafetyE2E_DataOut_SQC_Counter_284T_SigTx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SafetyE2E_DataIn_280R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SafetyE2E_DataIn_280R_SigRx
#endif
#if defined(Rte_ComHook_SafetyE2E_DataIn_280R_SigRx)
#undef Rte_ComHook_SafetyE2E_DataIn_280R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SafetyE2E_DataIn_280R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SafetyE2E_DataIn_280R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SafetyE2E_DataIn_CRC_280R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SafetyE2E_DataIn_CRC_280R_SigRx
#endif
#if defined(Rte_ComHook_SafetyE2E_DataIn_CRC_280R_SigRx)
#undef Rte_ComHook_SafetyE2E_DataIn_CRC_280R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SafetyE2E_DataIn_CRC_280R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SafetyE2E_DataIn_CRC_280R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHook_SafetyE2E_DataIn_SQC_Counter_280R_SigRx)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHook_SafetyE2E_DataIn_SQC_Counter_280R_SigRx
#endif
#if defined(Rte_ComHook_SafetyE2E_DataIn_SQC_Counter_280R_SigRx)
#undef Rte_ComHook_SafetyE2E_DataIn_SQC_Counter_280R_SigRx
extern FUNC(void, RTE_APPL_CODE) Rte_ComHook_SafetyE2E_DataIn_SQC_Counter_280R_SigRx (P2VAR(void, AUTOMATIC, RTE_APPL_DATA) data);
#else
#define Rte_ComHook_SafetyE2E_DataIn_SQC_Counter_280R_SigRx(data) ((void)0)
#endif
#if (defined(Rte_ComHookRx_SGCounterIn_CAN_FD_257R)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHookRx_SGCounterIn_CAN_FD_257R
#endif
#if defined(Rte_ComHookRx_SGCounterIn_CAN_FD_257R)
#undef Rte_ComHookRx_SGCounterIn_CAN_FD_257R
extern FUNC(void, RTE_APPL_CODE) Rte_ComHookRx_SGCounterIn_CAN_FD_257R (void);
#else
#define Rte_ComHookRx_SGCounterIn_CAN_FD_257R() ((void)0)
#endif
#if (defined(Rte_ComHookRx_SGCounterIn_256R)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHookRx_SGCounterIn_256R
#endif
#if defined(Rte_ComHookRx_SGCounterIn_256R)
#undef Rte_ComHookRx_SGCounterIn_256R
extern FUNC(void, RTE_APPL_CODE) Rte_ComHookRx_SGCounterIn_256R (void);
#else
#define Rte_ComHookRx_SGCounterIn_256R() ((void)0)
#endif
#if (defined(Rte_ComHookRx_SGSecuredDataIn_281R)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHookRx_SGSecuredDataIn_281R
#endif
#if defined(Rte_ComHookRx_SGSecuredDataIn_281R)
#undef Rte_ComHookRx_SGSecuredDataIn_281R
extern FUNC(void, RTE_APPL_CODE) Rte_ComHookRx_SGSecuredDataIn_281R (void);
#else
#define Rte_ComHookRx_SGSecuredDataIn_281R() ((void)0)
#endif
#if (defined(Rte_ComHookRx_GRsigGroup_E2EProt_DataIn_280R)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ComHookRx_GRsigGroup_E2EProt_DataIn_280R
#endif
#if defined(Rte_ComHookRx_GRsigGroup_E2EProt_DataIn_280R)
#undef Rte_ComHookRx_GRsigGroup_E2EProt_DataIn_280R
extern FUNC(void, RTE_APPL_CODE) Rte_ComHookRx_GRsigGroup_E2EProt_DataIn_280R (void);
#else
#define Rte_ComHookRx_GRsigGroup_E2EProt_DataIn_280R() ((void)0)
#endif
#if (defined(Rte_Task_Activate)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Activate
#endif
#if defined(Rte_Task_Activate)
#undef Rte_Task_Activate
extern FUNC(void, RTE_APPL_CODE) Rte_Task_Activate (TaskType task);
#else
#define Rte_Task_Activate(task) ((void)0)
#endif
#if (defined(Rte_Task_Dispatch)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Dispatch
#endif
#if defined(Rte_Task_Dispatch)
#undef Rte_Task_Dispatch
extern FUNC(void, RTE_APPL_CODE) Rte_Task_Dispatch (TaskType task);
#else
#define Rte_Task_Dispatch(task) ((void)0)
#endif
#if (defined(Rte_Task_SetEvent)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_SetEvent
#endif
#if defined(Rte_Task_SetEvent)
#undef Rte_Task_SetEvent
extern FUNC(void, RTE_APPL_CODE) Rte_Task_SetEvent (TaskType task, EventMaskType ev);
#else
#define Rte_Task_SetEvent(task, ev) ((void)0)
#endif
#if (defined(Rte_Task_WaitEvent)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_WaitEvent
#endif
#if defined(Rte_Task_WaitEvent)
#undef Rte_Task_WaitEvent
extern FUNC(void, RTE_APPL_CODE) Rte_Task_WaitEvent (TaskType task, EventMaskType ev);
#else
#define Rte_Task_WaitEvent(task, ev) ((void)0)
#endif
#if (defined(Rte_Task_WaitEventRet)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_WaitEventRet
#endif
#if defined(Rte_Task_WaitEventRet)
#undef Rte_Task_WaitEventRet
extern FUNC(void, RTE_APPL_CODE) Rte_Task_WaitEventRet (TaskType task, EventMaskType ev);
#else
#define Rte_Task_WaitEventRet(task, ev) ((void)0)
#endif
#if (defined(Rte_Task_EndHook)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_EndHook
#endif
#if defined(Rte_Task_EndHook)
#undef Rte_Task_EndHook
extern FUNC(void, RTE_APPL_CODE) Rte_Task_EndHook (TaskType task);
#else
#define Rte_Task_EndHook(task) ((void)0)
#endif
#if (defined(Rte_Task_Terminate)) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Terminate
#endif
#if defined(Rte_Task_Terminate)
#undef Rte_Task_Terminate
extern FUNC(void, RTE_APPL_CODE) Rte_Task_Terminate (TaskType task);
#else
#define Rte_Task_Terminate(task) ((void)0)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */
