#ifndef RTE_INTERN_H
#define RTE_INTERN_H
/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \version 6.8.4
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2022 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

/*
 * This file contains internal Rte declarations
 *
 * This file has been automatically generated by
 * EB tresos AutoCore Rte Generator Version 6.8.4
 * on Wed Oct 11 14:59:35 CST 2023. !!!IGNORE-LINE!!!
 */

/*
 * \addtogroup Rte Runtime Environment
 * @{
 */

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* ==================[Includes]=============================================== */
#include <Os.h>
#include <TSMem.h>
#include <Atomics.h>
#include <Rte_Type.h>
#include <Com.h>
#include <Rte_Cbk.h>
#include <Rte_Components_Shared.h>

/* ==================[Macros]================================================= */
#define RTE_XFRM_ERROR_SERVERITY_MASK 0x80U
#define RTE_XFRM_IS_HARD_ERROR(x) (((x) & RTE_XFRM_ERROR_SERVERITY_MASK) != 0U)
#define RTE_XFRM_IS_SOFT_ERROR(x) (((x) != E_OK) && (((x) & RTE_XFRM_ERROR_SERVERITY_MASK) == 0U))
#define RTE_XFRM_UPDATE_STATUS_AND_XFRM_ERROR(xfrmErrorCode, status, xfrmError, xfrmClass) \
    do { \
    if ((xfrmErrorCode) != E_OK) \
    { \
    if (((xfrmErrorCode) & RTE_XFRM_ERROR_SERVERITY_MASK) != 0U) \
    { \
    (status) = RTE_E_HARD_TRANSFORMER_ERROR; \
    (xfrmError).transformerClass = (xfrmClass); \
    (xfrmError).errorCode = (xfrmErrorCode); \
    } \
    else if ((status) == E_OK) \
    { \
    (status) = RTE_E_SOFT_TRANSFORMER_ERROR; \
    (xfrmError).transformerClass = (xfrmClass); \
    (xfrmError).errorCode = (xfrmErrorCode); \
    } \
    else \
    { \
    /* no action required (see MISRA rule 14.10) */ \
    } \
    } \
    \
    } while (0)
#define RTE_XFRM_UPDATE_STATUS(xfrmErrorCode, status) \
    do { \
    if ((xfrmErrorCode) != E_OK) \
    { \
    if (((xfrmErrorCode) & RTE_XFRM_ERROR_SERVERITY_MASK) != 0U) \
    { \
    (status) = RTE_E_HARD_TRANSFORMER_ERROR; \
    } \
    else if ((status) == E_OK) \
    { \
    (status) = RTE_E_SOFT_TRANSFORMER_ERROR; \
    } \
    else \
    { \
    /* no action required (see MISRA rule 14.10) */ \
    } \
    } \
    \
    } while (0)
#ifdef OS_NsToTicks_Rte_Counter
#define RTE_NS_TO_TICKS OS_NsToTicks_Rte_Counter
#else
#define RTE_NS_TO_TICKS(ns) ((TickType)((ns) / 1000000))
#endif
#define Rte_StartScheduleTable_SchM_DefaultScheduleTable() StartScheduleTableRel(SchM_DefaultScheduleTable, 10U)
#define Rte_StartScheduleTable_Rte_DefaultScheduleTable() StartScheduleTableRel(Rte_DefaultScheduleTable, 10U)
#define Rte_SetEvent_DRE_8A730602D267F5074564E9C3C0C4F41A() \
    do { \
    Rte_Task_Activate(Rte_Event_Task); \
    (void)ActivateTask(Rte_Event_Task); \
    \
    } while (0)
#define Rte_SetEvent_MSE_831149911D4AFB986520CB15F08ED93A() \
    do { \
    Rte_Task_Activate(TASK_RTE_ModeSwitchEvent); \
    (void)ActivateTask(TASK_RTE_ModeSwitchEvent); \
    \
    } while (0)
#ifndef ComConf_ComSignal_SGPowerPackStatus_122R
#define ComConf_ComSignal_SGPowerPackStatus_122R 0U
#endif
#ifndef ComConf_ComSignal_SGPowerPackStatus_UB_122R
#define ComConf_ComSignal_SGPowerPackStatus_UB_122R 1U
#endif
#ifndef ComConf_ComSignal_SGCarMode_165R
#define ComConf_ComSignal_SGCarMode_165R 2U
#endif
#ifndef ComConf_ComSignal_SGPowerMode_165R
#define ComConf_ComSignal_SGPowerMode_165R 3U
#endif
#ifndef ComConf_ComSignal_SGGWMEL2Threshold_262R
#define ComConf_ComSignal_SGGWMEL2Threshold_262R 4U
#endif
#ifndef ComConf_ComSignal_SGGWMEL3Threshold_262R
#define ComConf_ComSignal_SGGWMEL3Threshold_262R 5U
#endif
#ifndef ComConf_ComSignal_SGGWMWakeUpToChargeThr_262R
#define ComConf_ComSignal_SGGWMWakeUpToChargeThr_262R 6U
#endif
#ifndef ComConf_ComSignal_SGOdometerMasterValue_262R
#define ComConf_ComSignal_SGOdometerMasterValue_262R 7U
#endif
#ifndef ComConf_ComSignal_SGOdometerMasterValue_UB_262R
#define ComConf_ComSignal_SGOdometerMasterValue_UB_262R 8U
#endif
#ifndef ComConf_ComSignal_SGSBShortVehID_262R
#define ComConf_ComSignal_SGSBShortVehID_262R 9U
#endif
#ifndef ComConf_ComSignal_SGSOTAPrepRequest_267R
#define ComConf_ComSignal_SGSOTAPrepRequest_267R 10U
#endif
#ifndef ComConf_ComSignal_SGTST_PhysicalReqPBU_RIO_PDU_1911R
#define ComConf_ComSignal_SGTST_PhysicalReqPBU_RIO_PDU_1911R 11U
#endif
#ifndef ComConf_ComSignal_SGTST_FunctionalReq_RIO_PDU_2015R
#define ComConf_ComSignal_SGTST_FunctionalReq_RIO_PDU_2015R 12U
#endif
#ifndef ComConf_ComSignal_SGPBBatCurr_172T
#define ComConf_ComSignal_SGPBBatCurr_172T 0U
#endif
#ifndef ComConf_ComSignal_SGPBBatCurrFlt_172T
#define ComConf_ComSignal_SGPBBatCurrFlt_172T 1U
#endif
#ifndef ComConf_ComSignal_SGPBBatVolt_172T
#define ComConf_ComSignal_SGPBBatVolt_172T 2U
#endif
#ifndef ComConf_ComSignal_SGPBBatVoltFlt_172T
#define ComConf_ComSignal_SGPBBatVoltFlt_172T 3U
#endif
#ifndef ComConf_ComSignal_SGPBCriticErr_172T
#define ComConf_ComSignal_SGPBCriticErr_172T 4U
#endif
#ifndef ComConf_ComSignal_SGPBMaxChrgCurrLmt_172T
#define ComConf_ComSignal_SGPBMaxChrgCurrLmt_172T 5U
#endif
#ifndef ComConf_ComSignal_SGPBMaxChrgVoltLmt_172T
#define ComConf_ComSignal_SGPBMaxChrgVoltLmt_172T 6U
#endif
#ifndef ComConf_ComSignal_SGPBMaxDchgCurrLmt_172T
#define ComConf_ComSignal_SGPBMaxDchgCurrLmt_172T 7U
#endif
#ifndef ComConf_ComSignal_SGPBAgeing_323T
#define ComConf_ComSignal_SGPBAgeing_323T 8U
#endif
#ifndef ComConf_ComSignal_SGPBAhChange_323T
#define ComConf_ComSignal_SGPBAhChange_323T 9U
#endif
#ifndef ComConf_ComSignal_SGPBAliveCounter_323T
#define ComConf_ComSignal_SGPBAliveCounter_323T 10U
#endif
#ifndef ComConf_ComSignal_SGPBBalActvCell1_323T
#define ComConf_ComSignal_SGPBBalActvCell1_323T 11U
#endif
#ifndef ComConf_ComSignal_SGPBBalActvCell2_323T
#define ComConf_ComSignal_SGPBBalActvCell2_323T 12U
#endif
#ifndef ComConf_ComSignal_SGPBBalActvCell3_323T
#define ComConf_ComSignal_SGPBBalActvCell3_323T 13U
#endif
#ifndef ComConf_ComSignal_SGPBBalActvCell4_323T
#define ComConf_ComSignal_SGPBBalActvCell4_323T 14U
#endif
#ifndef ComConf_ComSignal_SGPBBattQd_323T
#define ComConf_ComSignal_SGPBBattQd_323T 15U
#endif
#ifndef ComConf_ComSignal_SGPBCell1Volt_323T
#define ComConf_ComSignal_SGPBCell1Volt_323T 16U
#endif
#ifndef ComConf_ComSignal_SGPBCell1VoltFlt_323T
#define ComConf_ComSignal_SGPBCell1VoltFlt_323T 17U
#endif
#ifndef ComConf_ComSignal_SGPBCell2Volt_323T
#define ComConf_ComSignal_SGPBCell2Volt_323T 18U
#endif
#ifndef ComConf_ComSignal_SGPBCell2VoltFlt_323T
#define ComConf_ComSignal_SGPBCell2VoltFlt_323T 19U
#endif
#ifndef ComConf_ComSignal_SGPBCell3Volt_323T
#define ComConf_ComSignal_SGPBCell3Volt_323T 20U
#endif
#ifndef ComConf_ComSignal_SGPBCell3VoltFlt_323T
#define ComConf_ComSignal_SGPBCell3VoltFlt_323T 21U
#endif
#ifndef ComConf_ComSignal_SGPBCell4Volt_323T
#define ComConf_ComSignal_SGPBCell4Volt_323T 22U
#endif
#ifndef ComConf_ComSignal_SGPBCell4VoltFlt_323T
#define ComConf_ComSignal_SGPBCell4VoltFlt_323T 23U
#endif
#ifndef ComConf_ComSignal_SGPBCpctyAbsolute_323T
#define ComConf_ComSignal_SGPBCpctyAbsolute_323T 24U
#endif
#ifndef ComConf_ComSignal_SGPBCpctyRelative_323T
#define ComConf_ComSignal_SGPBCpctyRelative_323T 25U
#endif
#ifndef ComConf_ComSignal_SGPBECUFlt_323T
#define ComConf_ComSignal_SGPBECUFlt_323T 26U
#endif
#ifndef ComConf_ComSignal_SGPBECUSerial_323T
#define ComConf_ComSignal_SGPBECUSerial_323T 27U
#endif
#ifndef ComConf_ComSignal_SGPBErsoStatus_323T
#define ComConf_ComSignal_SGPBErsoStatus_323T 28U
#endif
#ifndef ComConf_ComSignal_SGPBMinBatCurr_323T
#define ComConf_ComSignal_SGPBMinBatCurr_323T 29U
#endif
#ifndef ComConf_ComSignal_SGPBMinBatVolt_323T
#define ComConf_ComSignal_SGPBMinBatVolt_323T 30U
#endif
#ifndef ComConf_ComSignal_SGPBMinCrnkSOCLmt_323T
#define ComConf_ComSignal_SGPBMinCrnkSOCLmt_323T 31U
#endif
#ifndef ComConf_ComSignal_SGPBPackVolt_323T
#define ComConf_ComSignal_SGPBPackVolt_323T 32U
#endif
#ifndef ComConf_ComSignal_SGPBPackVoltFlt_323T
#define ComConf_ComSignal_SGPBPackVoltFlt_323T 33U
#endif
#ifndef ComConf_ComSignal_SGPBParkingTime_323T
#define ComConf_ComSignal_SGPBParkingTime_323T 34U
#endif
#ifndef ComConf_ComSignal_SGPBPos1Temp_323T
#define ComConf_ComSignal_SGPBPos1Temp_323T 35U
#endif
#ifndef ComConf_ComSignal_SGPBPos1TempFlt_323T
#define ComConf_ComSignal_SGPBPos1TempFlt_323T 36U
#endif
#ifndef ComConf_ComSignal_SGPBPos2Temp_323T
#define ComConf_ComSignal_SGPBPos2Temp_323T 37U
#endif
#ifndef ComConf_ComSignal_SGPBPos2TempFlt_323T
#define ComConf_ComSignal_SGPBPos2TempFlt_323T 38U
#endif
#ifndef ComConf_ComSignal_SGPBQChaRideCn_323T
#define ComConf_ComSignal_SGPBQChaRideCn_323T 39U
#endif
#ifndef ComConf_ComSignal_SGPBQChaRunCn_323T
#define ComConf_ComSignal_SGPBQChaRunCn_323T 40U
#endif
#ifndef ComConf_ComSignal_SGPBQDchActCn_323T
#define ComConf_ComSignal_SGPBQDchActCn_323T 41U
#endif
#ifndef ComConf_ComSignal_SGPBQDchActHiCn_323T
#define ComConf_ComSignal_SGPBQDchActHiCn_323T 42U
#endif
#ifndef ComConf_ComSignal_SGPBQDchEcoStpCn_323T
#define ComConf_ComSignal_SGPBQDchEcoStpCn_323T 43U
#endif
#ifndef ComConf_ComSignal_SGPBQDchQdCn_323T
#define ComConf_ComSignal_SGPBQDchQdCn_323T 44U
#endif
#ifndef ComConf_ComSignal_SGPBQDchaRideCn_323T
#define ComConf_ComSignal_SGPBQDchaRideCn_323T 45U
#endif
#ifndef ComConf_ComSignal_SGPBQDchaRunCn_323T
#define ComConf_ComSignal_SGPBQDchaRunCn_323T 46U
#endif
#ifndef ComConf_ComSignal_SGPBRelayClsFlt_323T
#define ComConf_ComSignal_SGPBRelayClsFlt_323T 47U
#endif
#ifndef ComConf_ComSignal_SGPBRelayOpenFlt_323T
#define ComConf_ComSignal_SGPBRelayOpenFlt_323T 48U
#endif
#ifndef ComConf_ComSignal_SGPBRelayStatus_323T
#define ComConf_ComSignal_SGPBRelayStatus_323T 49U
#endif
#ifndef ComConf_ComSignal_SGPBSOHCapFade_323T
#define ComConf_ComSignal_SGPBSOHCapFade_323T 50U
#endif
#ifndef ComConf_ComSignal_SGPBSOHImpGrowth_323T
#define ComConf_ComSignal_SGPBSOHImpGrowth_323T 51U
#endif
#ifndef ComConf_ComSignal_SGPBSOHImpedanceAbs_323T
#define ComConf_ComSignal_SGPBSOHImpedanceAbs_323T 52U
#endif
#ifndef ComConf_ComSignal_SGPBSWVer_323T
#define ComConf_ComSignal_SGPBSWVer_323T 53U
#endif
#ifndef ComConf_ComSignal_SGPBSoCAbsolute_323T
#define ComConf_ComSignal_SGPBSoCAbsolute_323T 54U
#endif
#ifndef ComConf_ComSignal_SGPBSoCRelative_323T
#define ComConf_ComSignal_SGPBSoCRelative_323T 55U
#endif
#ifndef ComConf_ComSignal_SGPBTIS_323T
#define ComConf_ComSignal_SGPBTIS_323T 56U
#endif
#ifndef ComConf_ComSignal_SGPBTOCReq_323T
#define ComConf_ComSignal_SGPBTOCReq_323T 57U
#endif
#ifndef ComConf_ComSignal_SGPBVehCount_323T
#define ComConf_ComSignal_SGPBVehCount_323T 58U
#endif
#ifndef ComConf_ComSignal_SGPBVehQd_323T
#define ComConf_ComSignal_SGPBVehQd_323T 59U
#endif
#ifndef ComConf_ComSignal_SGPBWURLowChargeLmt_323T
#define ComConf_ComSignal_SGPBWURLowChargeLmt_323T 60U
#endif
#ifndef ComConf_ComSignal_SGPBWURMinChargeLmt_323T
#define ComConf_ComSignal_SGPBWURMinChargeLmt_323T 61U
#endif
#ifndef ComConf_ComSignal_SGPBWakeUpToChgReq_323T
#define ComConf_ComSignal_SGPBWakeUpToChgReq_323T 62U
#endif
#ifndef ComConf_ComSignal_SGPBWakeupStat_323T
#define ComConf_ComSignal_SGPBWakeupStat_323T 63U
#endif
#ifndef ComConf_ComSignal_SGTST_PhysicalRespPBU_RIO_PDU_1919T
#define ComConf_ComSignal_SGTST_PhysicalRespPBU_RIO_PDU_1919T 64U
#endif
#ifndef ComConf_ComSignalGroup_GRVehMovement_78R
#define ComConf_ComSignalGroup_GRVehMovement_78R 0U
#endif
#ifndef ComConf_ComGroupSignal_VehMovementChecksum_78R
#define ComConf_ComGroupSignal_VehMovementChecksum_78R 13U
#endif
#ifndef ComConf_ComGroupSignal_VehMovementCounter_78R
#define ComConf_ComGroupSignal_VehMovementCounter_78R 14U
#endif
#ifndef ComConf_ComGroupSignal_VehMovementDirection_78R
#define ComConf_ComGroupSignal_VehMovementDirection_78R 15U
#endif
#ifndef ComConf_ComGroupSignal_VehMovementStatus_78R
#define ComConf_ComGroupSignal_VehMovementStatus_78R 16U
#endif
#ifndef ComConf_ComGroupSignal_WheelDirectionFL_78R
#define ComConf_ComGroupSignal_WheelDirectionFL_78R 17U
#endif
#ifndef ComConf_ComGroupSignal_WheelDirectionFR_78R
#define ComConf_ComGroupSignal_WheelDirectionFR_78R 18U
#endif
#ifndef ComConf_ComGroupSignal_WheelDirectionRL_78R
#define ComConf_ComGroupSignal_WheelDirectionRL_78R 19U
#endif
#ifndef ComConf_ComGroupSignal_WheelDirectionRR_78R
#define ComConf_ComGroupSignal_WheelDirectionRR_78R 20U
#endif
#ifndef ComConf_ComSignalGroup_GRPBCriticErrGp_172T
#define ComConf_ComSignalGroup_GRPBCriticErrGp_172T 0U
#endif
#ifndef ComConf_ComGroupSignal_PBCriticErrGpAC_172T
#define ComConf_ComGroupSignal_PBCriticErrGpAC_172T 65U
#endif
#ifndef ComConf_ComGroupSignal_PBCriticErrGpCS_172T
#define ComConf_ComGroupSignal_PBCriticErrGpCS_172T 66U
#endif
#ifndef ComConf_ComGroupSignal_PBCriticErrProtd_172T
#define ComConf_ComGroupSignal_PBCriticErrProtd_172T 67U
#endif
#ifndef ComConf_ComSignalGroup_GRPBDegradationGp_172T
#define ComConf_ComSignalGroup_GRPBDegradationGp_172T 1U
#endif
#ifndef ComConf_ComGroupSignal_PB1FETStatus_172T
#define ComConf_ComGroupSignal_PB1FETStatus_172T 68U
#endif
#ifndef ComConf_ComGroupSignal_PB2Degradation_172T
#define ComConf_ComGroupSignal_PB2Degradation_172T 69U
#endif
#ifndef ComConf_ComGroupSignal_PB2FETStatus_172T
#define ComConf_ComGroupSignal_PB2FETStatus_172T 70U
#endif
#ifndef ComConf_ComGroupSignal_PBDegradation_172T
#define ComConf_ComGroupSignal_PBDegradation_172T 71U
#endif
#ifndef ComConf_ComGroupSignal_PBDegradationGpAC_172T
#define ComConf_ComGroupSignal_PBDegradationGpAC_172T 72U
#endif
#ifndef ComConf_ComGroupSignal_PBDegradationGpCS_172T
#define ComConf_ComGroupSignal_PBDegradationGpCS_172T 73U
#endif
#define Rte_IntLock() SuspendAllInterrupts()
#define Rte_IntUnlock() ResumeAllInterrupts()
#define RTE_PARTITION_UNINITIALIZED 0x0U
#define RTE_PARTITION_ACTIVE 0x1U
#define RTE_PARTITION_STOPPED 0x2U
#define RTE_PARTITION_TERMINATED 0x3U
#define RTE_PARTITION_RESTARTING 0x4U
#define RTE_PARTITION_STARTING 0x5U
#define SCHM_PARTITION_UNINITIALIZED 0xAU
#define SCHM_PARTITION_ACTIVE 0xBU
#define SCHM_PARTITION_STOPPED 0xCU
#define SCHM_PARTITION_STARTING 0xDU
#define RTE_TRANSITION_BswM_BSWM_BswMModeGroup 9U
#define RTE_MODE_BswM_BSWM_BswMModeGroup_EB_INTGR_BSWM_GO_OFF_ONE_A 0U
#define RTE_MODE_BswM_BSWM_BswMModeGroup_EB_INTGR_BSWM_GO_OFF_ONE_B 1U
#define RTE_MODE_BswM_BSWM_BswMModeGroup_EB_INTGR_BSWM_POST_RUN 2U
#define RTE_MODE_BswM_BSWM_BswMModeGroup_EB_INTGR_BSWM_PRP_SHUTDOWN 3U
#define RTE_MODE_BswM_BSWM_BswMModeGroup_EB_INTGR_BSWM_RUN_TWO 4U
#define RTE_MODE_BswM_BSWM_BswMModeGroup_EB_INTGR_BSWM_SLEEP 5U
#define RTE_MODE_BswM_BSWM_BswMModeGroup_EB_INTGR_BSWM_STARTUP_TWO_A 6U
#define RTE_MODE_BswM_BSWM_BswMModeGroup_EB_INTGR_BSWM_STARTUP_TWO_B 7U
#define RTE_MODE_BswM_BSWM_BswMModeGroup_EB_INTGR_BSWM_WAKEUP_TWO 8U
#define RTE_TRANSITION_BswM_BSWM_AppStateModeGroup 9U
#define RTE_MODE_BswM_BSWM_AppStateModeGroup_EB_INTGR_APP_ACTIVE 2U
#define RTE_MODE_BswM_BSWM_AppStateModeGroup_EB_INTGR_APP_INACTIVE 3U
#define RTE_MODE_BswM_BSWM_AppStateModeGroup_EB_INTGR_APP_SLEEP 4U
#define RTE_MODE_BswM_BSWM_AppStateModeGroup_EB_INTGR_APP_STARTUP 1U
#define RTE_MODE_BswM_BSWM_AppStateModeGroup_EB_INTGR_APP_WAKEUP 5U
#define RTE_TRANSITION_ComM_ComMMode 3U
#define RTE_MODE_ComM_ComMMode_COMM_NO_COMMUNICATION 0U
#define RTE_MODE_ComM_ComMMode_COMM_SILENT_COMMUNICATION 1U
#define RTE_MODE_ComM_ComMMode_COMM_FULL_COMMUNICATION 2U
#define RTE_TRANSITION_SWC_AppStateHandler_AppStateModeGroup 9U
#define RTE_MODE_SWC_AppStateHandler_AppStateModeGroup_EB_INTGR_APP_ACTIVE 2U
#define RTE_MODE_SWC_AppStateHandler_AppStateModeGroup_EB_INTGR_APP_INACTIVE 3U
#define RTE_MODE_SWC_AppStateHandler_AppStateModeGroup_EB_INTGR_APP_SLEEP 4U
#define RTE_MODE_SWC_AppStateHandler_AppStateModeGroup_EB_INTGR_APP_STARTUP 1U
#define RTE_MODE_SWC_AppStateHandler_AppStateModeGroup_EB_INTGR_APP_WAKEUP 5U

/* ==================[Types]================================================== */
typedef struct
{
  volatile VAR(uint8, TYPEDEF) head;
  volatile VAR(uint8, TYPEDEF) tail;
  VAR(uint8, TYPEDEF) queue[2];
} Rte_ModeReceiveQueue_81BDDEB4CD24A86696072807BF330C6D_Type;

/* ==================[Definition of functions with external linkage]========== */
#define RTE_START_SEC_CODE
#include <Rte_MemMap.h>
DeclareTask(SchMMemTask_10ms);
DeclareTask(SchMComTask_10ms);
DeclareTask(Rte_Time_Task);
DeclareTask(SchMDiagStateTask_20ms);
DeclareTask(SchMComTask_5ms);
DeclareTask(Rte_Event_Task);
DeclareTask(TASK_RTE_ModeSwitchEvent);
DeclareEvent(SchM_OSShutdownEvent);
DeclareEvent(Rte_OSTimingEvent_Rte_Time_Task_TE_D3499F3675C83D894764E034B9E1C95A);
DeclareEvent(Rte_OSTimingEvent_Rte_Time_Task_TE_09949D2EF70F7870E5AC33D18A3F29C8);
DeclareEvent(Rte_OSTimingEvent_Rte_Time_Task_TE_FB569F32E86BE9DE6593E2D9B5D6CB4E);
DeclareEvent(Rte_OSTimingEvent_Rte_Time_Task_TE_59EBA845D7BAF6524BFCB941DB91C3D6);
DeclareEvent(Rte_OSTimingEvent_Rte_Time_Task_TE_6E112CFF2BCB051EBE4C32AE20F72131);
#ifdef OS_HAS_WAITGETCLEAREVENT
#define Rte_WaitGetClearEvent(e, ep, tid) (Rte_Task_WaitEvent(tid, e), OS_WaitGetClearEvent(e, ep), Rte_Task_WaitEventRet(tid, e), (*(ep) & (EventMaskType)~(EventMaskType)(e)) != 0U ? (SetEvent(tid, *(ep) & (EventMaskType)~(EventMaskType)(e)), *(ep) &= (e), E_OK) : E_OK)
#else
extern FUNC(StatusType, RTE_CODE) Rte_WaitGetClearEvent (EventMaskType eventToWait, P2VAR(EventMaskType, AUTOMATIC, RTE_APPL_DATA) eventReceived, TaskType myTaskId);
#endif

#define RTE_STOP_SEC_CODE
#include <Rte_MemMap.h>
#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif
/** @} doxygen end group definition  */
/* ==================[end of file]============================================ */
