__attribute__((target ("general-regs-only")))
OS_GetIsrMaxRuntime (os_isrid_t i, os_tick_t * out)
{
  struct os_israccounting_t * ia;
  const struct os_isr_t * isr;
  os_result_t r;
  short unsigned int OS_nInterrupts.0_1;
  const struct os_isr_t * OS_isrTableBase.1_2;
  unsigned int _3;
  unsigned int _4;
  unsigned char _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  os_result_t _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  r_11 = 3;
  # DEBUG r => r_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_nInterrupts.0_1 = OS_nInterrupts;
  if (i_13(D) < OS_nInterrupts.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.1_2 = OS_isrTableBase;
  _3 = (unsigned int) i_13(D);
  _4 = _3 * 68;
  isr_14 = OS_isrTableBase.1_2 + _4;
  # DEBUG isr => isr_14
  # DEBUG BEGIN_STMT
  ia_15 = isr_14->accounting;
  # DEBUG ia => ia_15
  # DEBUG BEGIN_STMT
  _5 = isr_14->flags;
  _6 = (unsigned int) _5;
  _7 = _6 & 64;
  if (_7 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = ia_15->etMax;
  *out_16(D) = _8;
  # DEBUG BEGIN_STMT
  r_18 = 0;
  # DEBUG r => r_18

  <bb 5> :
  # r_9 = PHI <r_11(2), r_11(3), r_18(4)>
  # DEBUG r => r_9
  # DEBUG BEGIN_STMT
  _19 = r_9;
  return _19;

}


