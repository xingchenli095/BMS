Det_ASR40_ReportError (uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 ErrorId)
{
  Std_ReturnType retVal;
  Std_ReturnType _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal_1 = 1;
  # DEBUG retVal => retVal_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retVal_8 = Det_ReportErrorStatus (0, ModuleId_3(D), InstanceId_4(D), ApiId_5(D), ErrorId_6(D));
  # DEBUG retVal => retVal_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = retVal_8;
  return _9;

}


Det_ASR43_ReportRuntimeError (uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 ErrorId)
{
  Std_ReturnType retVal;
  Std_ReturnType _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal_1 = 1;
  # DEBUG retVal => retVal_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retVal_8 = Det_ReportErrorStatus (1, ModuleId_3(D), InstanceId_4(D), ApiId_5(D), ErrorId_6(D));
  # DEBUG retVal => retVal_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = retVal_8;
  return _9;

}


Det_ASR43_ReportTransientFault (uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 FaultId)
{
  Std_ReturnType retVal;
  Std_ReturnType _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal_1 = 1;
  # DEBUG retVal => retVal_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retVal_8 = Det_ReportErrorStatus (2, ModuleId_3(D), InstanceId_4(D), ApiId_5(D), FaultId_6(D));
  # DEBUG retVal => retVal_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = retVal_8;
  return _9;

}


Det_ReportErrorStatus (uint8 ErrorType, uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 ErrorId)
{
  uint16 * Det_ErrorLost;
  uint16 * Det_UsedSlots;
  uint16 * Det_WriteIndex;
  Std_ReturnType transientFaultRetVal;
  unsigned char Det_State.1_1;
  int _2;
  int _3;
  short unsigned int _4;
  int _5;
  int _6;
  short unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  int _11;
  int _12;
  short unsigned int _13;
  int _14;
  short unsigned int _15;
  short unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  short unsigned int _23;
  short unsigned int _24;
  Std_ReturnType _59;

  <bb 2> :
  # DEBUG BEGIN_STMT
  transientFaultRetVal_30 = 0;
  # DEBUG transientFaultRetVal => transientFaultRetVal_30
  # DEBUG BEGIN_STMT
  Det_WriteIndex_31 = 0B;
  # DEBUG Det_WriteIndex => Det_WriteIndex_31
  # DEBUG BEGIN_STMT
  Det_UsedSlots_32 = 0B;
  # DEBUG Det_UsedSlots => Det_UsedSlots_32
  # DEBUG BEGIN_STMT
  Det_ErrorLost_33 = 0B;
  # DEBUG Det_ErrorLost => Det_ErrorLost_33
  # DEBUG BEGIN_STMT
  Det_State.1_1 = Det_State;
  if (Det_State.1_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = (int) ErrorType_35(D);
  switch (_2) <default: <L13> [INV], case 0: <L1> [INV], case 1: <L2> [INV], case 2: <L3> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Det_WriteIndex_42 = &Det_WriteIndex_DevelopmentError;
  # DEBUG Det_WriteIndex => Det_WriteIndex_42
  # DEBUG BEGIN_STMT
  Det_UsedSlots_43 = &Det_UsedSlots_DevelopmentError;
  # DEBUG Det_UsedSlots => Det_UsedSlots_43
  # DEBUG BEGIN_STMT
  Det_ErrorLost_44 = &Det_ErrorLost_DevelopmentError;
  # DEBUG Det_ErrorLost => Det_ErrorLost_44
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Det_WriteIndex_39 = &Det_WriteIndex_RuntimeError;
  # DEBUG Det_WriteIndex => Det_WriteIndex_39
  # DEBUG BEGIN_STMT
  Det_UsedSlots_40 = &Det_UsedSlots_RuntimeError;
  # DEBUG Det_UsedSlots => Det_UsedSlots_40
  # DEBUG BEGIN_STMT
  Det_ErrorLost_41 = &Det_ErrorLost_RuntimeError;
  # DEBUG Det_ErrorLost => Det_ErrorLost_41
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Det_WriteIndex_36 = &Det_WriteIndex_TransientFault;
  # DEBUG Det_WriteIndex => Det_WriteIndex_36
  # DEBUG BEGIN_STMT
  Det_UsedSlots_37 = &Det_UsedSlots_TransientFault;
  # DEBUG Det_UsedSlots => Det_UsedSlots_37
  # DEBUG BEGIN_STMT
  Det_ErrorLost_38 = &Det_FaultLost_TransientFault;
  # DEBUG Det_ErrorLost => Det_ErrorLost_38
  # DEBUG BEGIN_STMT

  <bb 7> :
  # Det_WriteIndex_25 = PHI <Det_WriteIndex_42(4), Det_WriteIndex_39(5), Det_WriteIndex_36(6), Det_WriteIndex_31(3)>
  # Det_UsedSlots_26 = PHI <Det_UsedSlots_43(4), Det_UsedSlots_40(5), Det_UsedSlots_37(6), Det_UsedSlots_32(3)>
  # Det_ErrorLost_27 = PHI <Det_ErrorLost_44(4), Det_ErrorLost_41(5), Det_ErrorLost_38(6), Det_ErrorLost_33(3)>
<L13>:
  # DEBUG Det_ErrorLost => Det_ErrorLost_27
  # DEBUG Det_UsedSlots => Det_UsedSlots_26
  # DEBUG Det_WriteIndex => Det_WriteIndex_25
  # DEBUG BEGIN_STMT
  Det_Enter_SCHM_DET_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = (int) ErrorType_35(D);
  _4 = *Det_WriteIndex_25;
  _5 = (int) _4;
  Det_ErrorBuffer[_3][_5].ModuleId = ModuleId_46(D);
  # DEBUG BEGIN_STMT
  _6 = (int) ErrorType_35(D);
  _7 = *Det_WriteIndex_25;
  _8 = (int) _7;
  Det_ErrorBuffer[_6][_8].InstanceId = InstanceId_48(D);
  # DEBUG BEGIN_STMT
  _9 = (int) ErrorType_35(D);
  _10 = *Det_WriteIndex_25;
  _11 = (int) _10;
  Det_ErrorBuffer[_9][_11].ApiId = ApiId_50(D);
  # DEBUG BEGIN_STMT
  _12 = (int) ErrorType_35(D);
  _13 = *Det_WriteIndex_25;
  _14 = (int) _13;
  Det_ErrorBuffer[_12][_14].ErrorId = ErrorId_52(D);
  # DEBUG BEGIN_STMT
  _15 = *Det_WriteIndex_25;
  _16 = _15 + 1;
  *Det_WriteIndex_25 = _16;
  # DEBUG BEGIN_STMT
  _17 = *Det_WriteIndex_25;
  _18 = _17 % 10;
  *Det_WriteIndex_25 = _18;
  # DEBUG BEGIN_STMT
  _19 = *Det_UsedSlots_26;
  if (_19 <= 9)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _20 = *Det_UsedSlots_26;
  _21 = _20 + 1;
  *Det_UsedSlots_26 = _21;
  goto <bb 11>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _22 = *Det_ErrorLost_27;
  if (_22 != 65535)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _23 = *Det_ErrorLost_27;
  _24 = _23 + 1;
  *Det_ErrorLost_27 = _24;

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_Exit_SCHM_DET_EXCLUSIVE_AREA_0 ();

  <bb 12> :
  # DEBUG BEGIN_STMT
  _59 = transientFaultRetVal_30;
  return _59;

}


Det_Start ()
{
  unsigned char Det_State.0_1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Det_State.0_1 = Det_State;
  if (Det_State.0_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_State = 2;

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Det_Init ()
{
  uint8 Det_ErrorType;
  uint16 Det_ErrorNumber;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Det_ErrorType_13 = 0;
  # DEBUG Det_ErrorType => Det_ErrorType_13
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ErrorNumber_25 = 0;
  # DEBUG Det_ErrorNumber => Det_ErrorNumber_25
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = (int) Det_ErrorType_10;
  _2 = (int) Det_ErrorNumber_9;
  Det_ErrorBuffer[_1][_2].ModuleId = 0;
  # DEBUG BEGIN_STMT
  _3 = (int) Det_ErrorType_10;
  _4 = (int) Det_ErrorNumber_9;
  Det_ErrorBuffer[_3][_4].InstanceId = 0;
  # DEBUG BEGIN_STMT
  _5 = (int) Det_ErrorType_10;
  _6 = (int) Det_ErrorNumber_9;
  Det_ErrorBuffer[_5][_6].ApiId = 0;
  # DEBUG BEGIN_STMT
  _7 = (int) Det_ErrorType_10;
  _8 = (int) Det_ErrorNumber_9;
  Det_ErrorBuffer[_7][_8].ErrorId = 0;
  # DEBUG BEGIN_STMT
  Det_ErrorNumber_31 = Det_ErrorNumber_9 + 1;
  # DEBUG Det_ErrorNumber => Det_ErrorNumber_31

  <bb 5> :
  # Det_ErrorNumber_9 = PHI <Det_ErrorNumber_25(3), Det_ErrorNumber_31(4)>
  # DEBUG Det_ErrorNumber => Det_ErrorNumber_9
  # DEBUG BEGIN_STMT
  if (Det_ErrorNumber_9 <= 9)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ErrorType_26 = Det_ErrorType_10 + 1;
  # DEBUG Det_ErrorType => Det_ErrorType_26

  <bb 7> :
  # Det_ErrorType_10 = PHI <Det_ErrorType_13(2), Det_ErrorType_26(6)>
  # DEBUG Det_ErrorType => Det_ErrorType_10
  # DEBUG BEGIN_STMT
  if (Det_ErrorType_10 <= 2)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_WriteIndex_DevelopmentError = 0;
  # DEBUG BEGIN_STMT
  Det_WriteIndex_RuntimeError = 0;
  # DEBUG BEGIN_STMT
  Det_WriteIndex_TransientFault = 0;
  # DEBUG BEGIN_STMT
  Det_ErrorLost_DevelopmentError = 0;
  # DEBUG BEGIN_STMT
  Det_ErrorLost_RuntimeError = 0;
  # DEBUG BEGIN_STMT
  Det_FaultLost_TransientFault = 0;
  # DEBUG BEGIN_STMT
  Det_UsedSlots_DevelopmentError = 0;
  # DEBUG BEGIN_STMT
  Det_UsedSlots_RuntimeError = 0;
  # DEBUG BEGIN_STMT
  Det_UsedSlots_TransientFault = 0;
  # DEBUG BEGIN_STMT
  Det_State = 1;
  # DEBUG BEGIN_STMT
  return;

}


