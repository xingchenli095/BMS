IPA function summary for Crypto_LNModulo.part.0/42 inlinable
  global time:     158.454546
  self size:       12
  global size:     12
  min size:       12
  self stack:      0
  global stack:    0
    size:2.500000, time:22.727273
    size:3.500000, time:6.545455,  executed if:(not inlined)
  calls:
    Crypto_LNSModuloShift/29 function not considered for inlining
      loop depth: 1 freq:9.09 size: 4 time: 13callee size:11 stack: 0
       op0 change 10.990000% of time
       op1 change 10.990000% of time
       op2 change 10.990000% of time
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time

IPA function summary for Crypto_LNSModuloCarry/33 inlinable
  global time:     13.000000
  self size:       14
  global size:     14
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 288] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 288] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 160] changed || op1[ref offset: 288] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 384] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 384] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 384] changed || op0 changed)
  calls:

IPA function summary for Crypto_LNSModuloSubtract2/32 inlinable
  global time:     351.886365
  self size:       53
  global size:     53
  min size:       0
  self stack:      0
  global stack:    0
    size:41.000000, time:285.170456
    size:12.000000, time:66.715910,  executed if:(not inlined)
  calls:

IPA function summary for Crypto_LNSModuloSubtract/31 inlinable
  global time:     20.152800
  self size:       19
  global size:     19
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 320] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 320] changed)
    size:2.000000, time:0.977600,  executed if:(op2[ref offset: 320] != 4) && (not inlined)
    size:2.000000, time:0.977600,  executed if:(op2[ref offset: 320] != 4)
    size:0.500000, time:0.244400,  executed if:(op2[ref offset: 320] != 4) && (not inlined),  nonconst if:(op2[ref offset: 352] changed) && (op2[ref offset: 320] != 4) && (not inlined)
    size:1.500000, time:0.733200,  executed if:(op2[ref offset: 320] != 4),  nonconst if:(op2[ref offset: 352] changed) && (op2[ref offset: 320] != 4)
  calls:
    Crypto_LNSModuloCarry/33 function not considered for inlining
      loop depth: 0 freq:0.49 size: 3 time: 12callee size: 7 stack: 0 predicate: (op2[ref offset: 320] != 4)
    Crypto_LNSModuloSubtract2/32 function not considered for inlining
      loop depth: 0 freq:0.49 size: 4 time: 13callee size:26 stack: 0 predicate: (op2[ref offset: 320] != 4)

IPA function summary for Crypto_LNSModuloShift2/30 inlinable
  global time:     318.569292
  self size:       52
  global size:     52
  min size:       0
  self stack:      0
  global stack:    0
    size:28.000000, time:205.281608
    size:10.000000, time:51.076887,  executed if:(not inlined)
    size:0.500000, time:4.673989,  executed if:(not inlined),  nonconst if:(op2[ref offset: 328] changed) && (not inlined)
    size:2.500000, time:23.369946,  nonconst if:(op2[ref offset: 328] changed)
    size:9.000000, time:28.651554,  executed if:(op2[ref offset: 328] != 0)
    size:1.000000, time:2.757654,  executed if:(op2[ref offset: 328] != 0) && (not inlined)
    size:1.000000, time:2.757654,  executed if:(op2[ref offset: 328] != 0),  nonconst if:(op2[ref offset: 328] changed) && (op2[ref offset: 328] != 0)
  calls:

IPA function summary for Crypto_LNSModuloShift/29 inlinable
  global time:     40.000000
  self size:       23
  global size:     23
  min size:       16
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:6.000000, time:5.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 256] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 256] changed)
  calls:
    Crypto_LNSModuloSubtract/31 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size: 9 stack: 0
    Crypto_LNSModuloShift2/30 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:26 stack: 0

IPA function summary for Crypto_LNBarretSubtractNumbers/28 inlinable
  global time:     417.533304
  self size:       55
  global size:     55
  min size:       4
  self stack:      0
  global stack:    0
    size:48.500000, time:394.813860
    size:4.500000, time:11.719444,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0

IPA function summary for Crypto_AL_Init/27 inlinable
  global time:     493.164284
  self size:       28
  global size:     28
  min size:       14
  self stack:      0
  global stack:    0
    size:18.000000, time:242.581542
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Crypto_AL_AESCMAC_PrecalculateKeys/41 function body not available
      loop depth: 1 freq:2.00 size: 2 time: 11
    Crypto_AL_KeyElementSet/40 function body not available
      loop depth: 2 freq:16.18 size: 5 time: 14
       op0 change 18.530000% of time

IPA function summary for Crypto_LNInversion/26 inlinable
  global time:     10977.315842
  self size:       129
  global size:     129
  min size:       112
  self stack:      0
  global stack:    0
    size:62.000000, time:2224.077808
    size:11.000000, time:302.977575,  executed if:(not inlined)
  calls:
    Crypto_LNModulo/17 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
    Crypto_LNSubtractionModular/25 function not considered for inlining
      loop depth: 1 freq:6.06 size: 5 time: 14callee size:21 stack: 0
       op0 change 16.490000% of time
       op1 change 16.490000% of time
       op2 change 16.490000% of time
       op3 change 16.490000% of time
    Crypto_LNSubtractionModular/25 function not considered for inlining
      loop depth: 1 freq:6.06 size: 5 time: 14callee size:21 stack: 0
       op0 change 16.490000% of time
       op1 change 16.490000% of time
       op2 change 16.490000% of time
       op3 change 16.490000% of time
    Crypto_LNSubtractionModular/25 function not considered for inlining
      loop depth: 1 freq:9.49 size: 5 time: 14callee size:21 stack: 0
       op0 change 10.540000% of time
       op1 change 10.540000% of time
       op2 change 10.540000% of time
       op3 change 10.540000% of time
    Crypto_LNSubtractionModular/25 function not considered for inlining
      loop depth: 1 freq:9.49 size: 5 time: 14callee size:21 stack: 0
       op0 change 10.540000% of time
       op1 change 10.540000% of time
       op2 change 10.540000% of time
       op3 change 10.540000% of time
    Crypto_LNCompareNumbers/16 function not considered for inlining
      loop depth: 1 freq:15.55 size: 4 time: 13callee size:11 stack: 0
       op0 change 6.430000% of time
       op1 change 6.430000% of time
    Crypto_LNDivByTwo/22 function not considered for inlining
      loop depth: 2 freq:62.90 size: 3 time: 12callee size: 8 stack: 0
       op0 change 1.580000% of time
    Crypto_LNAddition/23 function not considered for inlining
      loop depth: 2 freq:62.90 size: 5 time: 14callee size:16 stack: 0
       op0 change 1.580000% of time
       op1 change 1.580000% of time
       op2 change 1.580000% of time
    Crypto_LNDivByTwo/22 function not considered for inlining
      loop depth: 2 freq:62.90 size: 3 time: 12callee size: 8 stack: 0
       op0 change 1.580000% of time
       op1 is compile time invariant
    Crypto_LNDivByTwo/22 function not considered for inlining
      loop depth: 2 freq:125.80 size: 3 time: 12callee size: 8 stack: 0
       op0 change 0.790000% of time
       op1 is compile time invariant
    Crypto_LNDivByTwo/22 function not considered for inlining
      loop depth: 2 freq:62.90 size: 3 time: 12callee size: 8 stack: 0
       op0 change 1.580000% of time
    Crypto_LNAddition/23 function not considered for inlining
      loop depth: 2 freq:62.90 size: 5 time: 14callee size:16 stack: 0
       op0 change 1.580000% of time
       op1 change 1.580000% of time
       op2 change 1.580000% of time
    Crypto_LNDivByTwo/22 function not considered for inlining
      loop depth: 2 freq:62.90 size: 3 time: 12callee size: 8 stack: 0
       op0 change 1.580000% of time
       op1 is compile time invariant
    Crypto_LNDivByTwo/22 function not considered for inlining
      loop depth: 2 freq:125.80 size: 3 time: 12callee size: 8 stack: 0
       op0 change 0.790000% of time
       op1 is compile time invariant

IPA function summary for Crypto_LNSubtractionModular/25 inlinable
  global time:     242.409093
  self size:       42
  global size:     42
  min size:       14
  self stack:      0
  global stack:    0
    size:30.000000, time:173.000001
    size:5.000000, time:15.136364,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time
    Crypto_LNAddition/23 function not considered for inlining
      loop depth: 1 freq:3.09 size: 5 time: 14callee size:16 stack: 0
       op0 change 32.350000% of time
       op1 change 32.350000% of time
       op2 change 32.350000% of time

IPA function summary for Crypto_LNAdditionModular/24 inlinable
  global time:     191.768114
  self size:       56
  global size:     56
  min size:       22
  self stack:      0
  global stack:    0
    size:39.500000, time:145.421532
    size:5.500000, time:10.556582,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time
    Crypto_LNCompareNumbers/16 function not considered for inlining
      loop depth: 0 freq:0.83 size: 4 time: 13callee size:11 stack: 0
    Crypto_LNAddition/23 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:16 stack: 0

IPA function summary for Crypto_LNAddition/23 inlinable
  global time:     205.181818
  self size:       32
  global size:     32
  min size:       0
  self stack:      0
  global stack:    0
    size:24.500000, time:198.681818
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1[ref offset: 0] changed || op2[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNDivByTwo/22 inlinable
  global time:     105.000001
  self size:       17
  global size:     17
  min size:       4
  self stack:      0
  global stack:    0
    size:11.000000, time:91.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  loop iterations:(op0[ref offset: 0] changed)
  calls:
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time

IPA function summary for Crypto_LNNumberToLEByteArray/21 inlinable
  global time:     219.863643
  self size:       27
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
    size:18.000000, time:210.340915
    size:4.000000, time:4.522727,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op2[ref offset: 0] changed || op0[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNLEByteArrayToNumber/20 inlinable
  global time:     122.750003
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 == 0),  nonconst if:(op3 changed) && (op1 == 0)
    size:0.500000, time:0.125000,  executed if:(op3 != 0) && (op1 == 0) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op3 != 0) && (op1 == 0)
    size:4.000000, time:3.772727,  executed if:(op1 != 0),  nonconst if:(op1 changed) && (op1 != 0)
    size:2.000000, time:1.000000,  executed if:(op1 != 0),  nonconst if:(op1 changed || op3 changed) && (op1 != 0)
    size:21.500000, time:109.852276,  executed if:(op1 != 0)
    size:0.500000, time:0.125000,  executed if:(op1 != 0) && (not inlined)
  loop iterations:(op1 changed) && (op1 != 0)
  calls:
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:0.25 size: 2 time: 11callee size: 6 stack: 0 predicate: (op1 != 0)

IPA function summary for Crypto_LNNumberToBEByteArray/19 inlinable
  global time:     223.909097
  self size:       28
  global size:     28
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:214.386370
    size:4.000000, time:4.522727,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op2[ref offset: 0] changed || op0[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNBEByteArrayToNumber/18 inlinable
  global time:     138.931822
  self size:       40
  global size:     40
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 == 0),  nonconst if:(op3 changed) && (op1 == 0)
    size:0.500000, time:0.125000,  executed if:(op3 != 0) && (op1 == 0) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op3 != 0) && (op1 == 0)
    size:4.000000, time:3.772727,  executed if:(op1 != 0),  nonconst if:(op1 changed) && (op1 != 0)
    size:2.000000, time:1.000000,  executed if:(op1 != 0),  nonconst if:(op1 changed || op3 changed) && (op1 != 0)
    size:23.500000, time:126.034094,  executed if:(op1 != 0)
    size:0.500000, time:0.125000,  executed if:(op1 != 0) && (not inlined)
  loop iterations:(op1 changed) && (op1 != 0)
  calls:
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:0.25 size: 2 time: 11callee size: 6 stack: 0 predicate: (op1 != 0)

IPA function summary for Crypto_LNModulo/17 inlinable
  global time:     36.675000
  self size:       23
  global size:     23
  min size:       24
  self stack:      0
  global stack:    0
    size:7.000000, time:4.087500
    size:4.000000, time:2.417500,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:0.16 size: 2 time: 11callee size: 6 stack: 0
    Crypto_LNModulo.part.0/42 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size: 6 stack: 0
    Crypto_LNBitLengthOfNumber/8 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 7 stack: 0
    Crypto_LNBitLengthOfNumber/8 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 7 stack: 0

IPA function summary for Crypto_LNCompareNumbers/16 inlinable
  global time:     54.406825
  self size:       23
  global size:     23
  min size:       0
  self stack:      0
  global stack:    0
    size:14.000000, time:47.106825
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:4.000000, time:3.300000,  nonconst if:(op0[ref offset: 0] changed || op1[ref offset: 0] changed)
  loop iterations:(op0[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNSubtraction/15 inlinable
  global time:     247.545454
  self size:       35
  global size:     35
  min size:       4
  self stack:      0
  global stack:    0
    size:28.500000, time:224.954545
    size:4.500000, time:11.590909,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time

IPA function summary for Crypto_LNMontgomeryReduction/14 inlinable
  global time:     1627.519899
  self size:       70
  global size:     70
  min size:       26
  self stack:      0
  global stack:    0
    size:50.000000, time:1571.074585
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:9.590910,  nonconst if:(op2[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  loop iterations:(op2[ref offset: 0] changed)
  calls:
    Crypto_LNSubtraction/15 function not considered for inlining
      loop depth: 0 freq:0.49 size: 4 time: 13callee size:17 stack: 0
    Crypto_LNCompareNumbers/16 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time
    TS_MemBZero32/36 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Crypto_LNMontgomeryNormalization/13 inlinable
  global time:     360.815602
  self size:       51
  global size:     51
  min size:       28
  self stack:      0
  global stack:    0
    size:9.000000, time:46.454546
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:1.000000, time:0.410000,  executed if:(op1[ref offset: 0] <= 1) && (not inlined)
    size:1.000000, time:0.410000,  executed if:(op1[ref offset: 0] <= 1)
    size:2.000000, time:1.180000,  executed if:(op1[ref offset: 0] > 1),  nonconst if:(op1[ref offset: 0] changed) && (op1[ref offset: 0] > 1)
    size:17.000000, time:38.698637,  executed if:(op1[ref offset: 0] > 1)
    size:1.000000, time:2.976818,  executed if:(op1[ref offset: 0] > 1) && (not inlined)
  calls:
    Crypto_LNSubtraction/15 function not considered for inlining
      loop depth: 1 freq:3.95 size: 4 time: 13callee size:17 stack: 0
       op0 change 25.280000% of time
       op1 change 25.280000% of time
       op2 change 25.280000% of time
    Crypto_LNCompareNumbers/16 function not considered for inlining
      loop depth: 1 freq:8.09 size: 4 time: 13callee size:11 stack: 0
       op0 change 12.350000% of time
       op1 change 12.350000% of time
    Crypto_LNMultByTwo/11 function not considered for inlining
      loop depth: 1 freq:8.09 size: 3 time: 12callee size:18 stack: 0
       op0 change 12.350000% of time
       op1 change 12.350000% of time
    Crypto_LNBitLengthOfNumber/8 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 7 stack: 0

IPA function summary for Crypto_LNMontgomerySetup/12 inlinable
  global time:     18.000000
  self size:       19
  global size:     19
  min size:       0
  self stack:      0
  global stack:    0
    size:15.000000, time:15.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:

IPA function summary for Crypto_LNMultByTwo/11 inlinable
  global time:     179.818182
  self size:       37
  global size:     37
  min size:       0
  self stack:      0
  global stack:    0
    size:28.500000, time:168.772727
    size:5.500000, time:8.045455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Crypto_LNMultiplyNumbers/10 inlinable
  global time:     1395.975300
  self size:       49
  global size:     49
  min size:       18
  self stack:      0
  global stack:    0
    size:31.500000, time:1341.838934
    size:4.500000, time:7.045455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:8.590910,  nonconst if:(op2[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 0] changed || op2[ref offset: 0] changed)
  loop iterations:(op1[ref offset: 0] changed || op2[ref offset: 0] changed)
  calls:
    TS_MemCpy32/37 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
    Crypto_LNNormalizeNumber/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time
    TS_MemBZero32/36 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Crypto_LNNormalizeNumber/9 inlinable
  global time:     76.755550
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:8.500000, time:73.255550
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  loop iterations:(op0[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNBitLengthOfNumber/8 inlinable
  global time:     24.681818
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 0] changed || op0 changed) && (op0[ref offset: 0] != 0)
    size:5.000000, time:17.681818,  executed if:(op0[ref offset: 0] != 0)
  calls:

IPA function summary for Crypto_LNIsValid/7 inlinable
  global time:     7.250000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 0] changed || op0 changed) && (op0[ref offset: 0] != 0)
    size:3.000000, time:0.750000,  executed if:(op0[ref offset: 0] != 0)
  calls:

IPA function summary for Crypto_CommonXOR/6 inlinable
  global time:     76.818182
  self size:       12
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:74.818182
    size:3.000000, time:2.000000,  executed if:(not inlined)
  loop iterations:(op2 changed)
  calls:

IPA function summary for Crypto_LNModuloBarrett/5 inlinable
  global time:     337.127633
  self size:       98
  global size:     98
  min size:       48
  self stack:      0
  global stack:    0
    size:64.500000, time:185.483713
    size:8.500000, time:11.988182,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Crypto_LNCompareNumbers/16 function not considered for inlining
      loop depth: 1 freq:4.10 size: 4 time: 13callee size:11 stack: 0
       op0 change 24.390000% of time
       op1 change 24.390000% of time
    Crypto_LNBarretSubtractNumbers/28 function not considered for inlining
      loop depth: 1 freq:3.10 size: 5 time: 14callee size:27 stack: 0
       op0 change 32.270000% of time
       op1 change 32.270000% of time
       op2 change 32.270000% of time
       op3 is compile time invariant
    Crypto_LNBarretSubtractNumbers/28 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:27 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
       op3 change 99.990000% of time
    Crypto_LNMultiplyNumbers/10 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:24 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
       op3 change 99.990000% of time
    Crypto_LNMultiplyNumbers/10 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:24 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
       op3 change 99.990000% of time

IPA function summary for Crypto_CheckSkipMain/4 inlinable
  global time:     4.870000
  self size:       10
  global size:     10
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:0.600000,  executed if:(op0 == 0B),  nonconst if:(op1 changed) && (op0 == 0B)
    size:3.000000, time:0.270000,  executed if:(op1 == 0B) && (op0 == 0B)
  calls:

IPA function summary for Crypto_StateMachineIdle/3 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Crypto_MemCmp_Sec/2 inlinable
  global time:     78.818182
  self size:       14
  global size:     14
  min size:       0
  self stack:      0
  global stack:    0
    size:11.000000, time:76.818182
    size:3.000000, time:2.000000,  executed if:(not inlined)
  loop iterations:(op2 changed)
  calls:

IPA function summary for Crypto_MemCmp/1 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    TS_MemCmp32/34 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14


Flattening functions:
Overall time estimate: 18784.967651 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Crypto_LNModulo.part.0/42.
Enqueueing calls in Crypto_LNSModuloCarry/33.
Enqueueing calls in Crypto_LNSModuloSubtract2/32.
Enqueueing calls in Crypto_LNSModuloSubtract/31.
Enqueueing calls in Crypto_LNSModuloShift2/30.
Enqueueing calls in Crypto_LNSModuloShift/29.
Enqueueing calls in Crypto_LNBarretSubtractNumbers/28.
Enqueueing calls in Crypto_AL_Init/27.
Enqueueing calls in Crypto_LNInversion/26.
Enqueueing calls in Crypto_LNSubtractionModular/25.
Enqueueing calls in Crypto_LNAdditionModular/24.
Enqueueing calls in Crypto_LNAddition/23.
Enqueueing calls in Crypto_LNDivByTwo/22.
Enqueueing calls in Crypto_LNNumberToLEByteArray/21.
Enqueueing calls in Crypto_LNLEByteArrayToNumber/20.
Enqueueing calls in Crypto_LNNumberToBEByteArray/19.
Enqueueing calls in Crypto_LNBEByteArrayToNumber/18.
Enqueueing calls in Crypto_LNModulo/17.
Enqueueing calls in Crypto_LNCompareNumbers/16.
Enqueueing calls in Crypto_LNSubtraction/15.
Enqueueing calls in Crypto_LNMontgomeryReduction/14.
Enqueueing calls in Crypto_LNMontgomeryNormalization/13.
Enqueueing calls in Crypto_LNMontgomerySetup/12.
Enqueueing calls in Crypto_LNMultByTwo/11.
Enqueueing calls in Crypto_LNMultiplyNumbers/10.
Enqueueing calls in Crypto_LNNormalizeNumber/9.
Enqueueing calls in Crypto_LNBitLengthOfNumber/8.
Enqueueing calls in Crypto_LNIsValid/7.
Enqueueing calls in Crypto_CommonXOR/6.
Enqueueing calls in Crypto_LNModuloBarrett/5.
Enqueueing calls in Crypto_CheckSkipMain/4.
Enqueueing calls in Crypto_StateMachineIdle/3.
Enqueueing calls in Crypto_MemCmp_Sec/2.
Enqueueing calls in Crypto_MemCmp/1.

Considering Crypto_LNSModuloShift/29 with 23 size
 to be inlined into Crypto_LNModulo.part.0/42 in C:/Users/DELL/Desktop/new/Application_Can/output/generated/instance/Crypto/src/Crypto_AL_Common.c:2720
 Estimated badness is -2.418501, frequency 9.09.

Considering Crypto_LNSModuloSubtract/31 with 19 size
 to be inlined into Crypto_LNSModuloShift/29 in C:/Users/DELL/Desktop/new/Application_Can/output/generated/instance/Crypto/src/Crypto_AL_Common.c:4437
 Estimated badness is -3.771019, frequency 9.09.

Considering Crypto_LNSModuloCarry/33 with 14 size
 to be inlined into Crypto_LNSModuloSubtract/31 in C:/Users/DELL/Desktop/new/Application_Can/output/generated/instance/Crypto/src/Crypto_AL_Common.c:4550
 Estimated badness is -3.374769, frequency 4.44.

Considering Crypto_LNSModuloShift2/30 with 52 size
 to be inlined into Crypto_LNSModuloShift/29 in C:/Users/DELL/Desktop/new/Application_Can/output/generated/instance/Crypto/src/Crypto_AL_Common.c:4436
 Estimated badness is -1.900711, frequency 9.09.

Considering Crypto_LNSModuloSubtract2/32 with 53 size
 to be inlined into Crypto_LNSModuloSubtract/31 in C:/Users/DELL/Desktop/new/Application_Can/output/generated/instance/Crypto/src/Crypto_AL_Common.c:4549
 Estimated badness is -0.781530, frequency 4.44.

Considering Crypto_LNModulo.part.0/42 with 113 size
 to be inlined into Crypto_LNModulo/17 in unknown:0
 Estimated badness is -0.001949, frequency 0.33.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 19062.684601 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :        6 calls, 22.184546 freq, 0 count
--param max-inline-insns-auto limit reached       :        9 calls, 38.195652 freq, 0 count
call is unlikely and code size would grow         :       32 calls, 686.206758 freq, 0 count
IPA function summary for Crypto_LNBarretSubtractNumbers/28 inlinable
  global time:     417.533304
  self size:       55
  global size:     55
  min size:       49
  self stack:      0
  global stack:    0
  estimated growth:37
    size:48.500000, time:394.813860
    size:4.500000, time:11.719444,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0

IPA function summary for Crypto_AL_Init/27 inlinable
  global time:     493.164284
  self size:       28
  global size:     28
  min size:       14
  self stack:      0
  global stack:    0
    size:18.000000, time:242.581542
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Crypto_AL_AESCMAC_PrecalculateKeys/41 function body not available
      loop depth: 1 freq:2.00 size: 2 time: 11
    Crypto_AL_KeyElementSet/40 function body not available
      loop depth: 2 freq:16.18 size: 5 time: 14
       op0 change 18.530000% of time

IPA function summary for Crypto_LNInversion/26 inlinable
  global time:     10977.315842
  self size:       129
  global size:     129
  min size:       112
  self stack:      0
  global stack:    0
    size:62.000000, time:2224.077808
    size:11.000000, time:302.977575,  executed if:(not inlined)
  calls:
    Crypto_LNModulo/17 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:64 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
    Crypto_LNSubtractionModular/25 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:6.06 size: 5 time: 14callee size:21 stack: 0
       op0 change 16.490000% of time
       op1 change 16.490000% of time
       op2 change 16.490000% of time
       op3 change 16.490000% of time
    Crypto_LNSubtractionModular/25 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:6.06 size: 5 time: 14callee size:21 stack: 0
       op0 change 16.490000% of time
       op1 change 16.490000% of time
       op2 change 16.490000% of time
       op3 change 16.490000% of time
    Crypto_LNSubtractionModular/25 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:9.49 size: 5 time: 14callee size:21 stack: 0
       op0 change 10.540000% of time
       op1 change 10.540000% of time
       op2 change 10.540000% of time
       op3 change 10.540000% of time
    Crypto_LNSubtractionModular/25 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:9.49 size: 5 time: 14callee size:21 stack: 0
       op0 change 10.540000% of time
       op1 change 10.540000% of time
       op2 change 10.540000% of time
       op3 change 10.540000% of time
    Crypto_LNCompareNumbers/16 call is unlikely and code size would grow
      loop depth: 1 freq:15.55 size: 4 time: 13callee size:11 stack: 0
       op0 change 6.430000% of time
       op1 change 6.430000% of time
    Crypto_LNDivByTwo/22 call is unlikely and code size would grow
      loop depth: 2 freq:62.90 size: 3 time: 12callee size: 8 stack: 0
       op0 change 1.580000% of time
    Crypto_LNAddition/23 call is unlikely and code size would grow
      loop depth: 2 freq:62.90 size: 5 time: 14callee size:16 stack: 0
       op0 change 1.580000% of time
       op1 change 1.580000% of time
       op2 change 1.580000% of time
    Crypto_LNDivByTwo/22 call is unlikely and code size would grow
      loop depth: 2 freq:62.90 size: 3 time: 12callee size: 8 stack: 0
       op0 change 1.580000% of time
       op1 is compile time invariant
    Crypto_LNDivByTwo/22 call is unlikely and code size would grow
      loop depth: 2 freq:125.80 size: 3 time: 12callee size: 8 stack: 0
       op0 change 0.790000% of time
       op1 is compile time invariant
    Crypto_LNDivByTwo/22 call is unlikely and code size would grow
      loop depth: 2 freq:62.90 size: 3 time: 12callee size: 8 stack: 0
       op0 change 1.580000% of time
    Crypto_LNAddition/23 call is unlikely and code size would grow
      loop depth: 2 freq:62.90 size: 5 time: 14callee size:16 stack: 0
       op0 change 1.580000% of time
       op1 change 1.580000% of time
       op2 change 1.580000% of time
    Crypto_LNDivByTwo/22 call is unlikely and code size would grow
      loop depth: 2 freq:62.90 size: 3 time: 12callee size: 8 stack: 0
       op0 change 1.580000% of time
       op1 is compile time invariant
    Crypto_LNDivByTwo/22 call is unlikely and code size would grow
      loop depth: 2 freq:125.80 size: 3 time: 12callee size: 8 stack: 0
       op0 change 0.790000% of time
       op1 is compile time invariant

IPA function summary for Crypto_LNSubtractionModular/25 inlinable
  global time:     242.409093
  self size:       42
  global size:     42
  min size:       30
  self stack:      0
  global stack:    0
  estimated growth:128
    size:30.000000, time:173.000001
    size:5.000000, time:15.136364,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time
    Crypto_LNAddition/23 call is unlikely and code size would grow
      loop depth: 1 freq:3.09 size: 5 time: 14callee size:16 stack: 0
       op0 change 32.350000% of time
       op1 change 32.350000% of time
       op2 change 32.350000% of time

IPA function summary for Crypto_LNAdditionModular/24 inlinable
  global time:     191.768114
  self size:       56
  global size:     56
  min size:       22
  self stack:      0
  global stack:    0
    size:39.500000, time:145.421532
    size:5.500000, time:10.556582,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time
    Crypto_LNCompareNumbers/16 call is unlikely and code size would grow
      loop depth: 0 freq:0.83 size: 4 time: 13callee size:11 stack: 0
    Crypto_LNAddition/23 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:16 stack: 0

IPA function summary for Crypto_LNAddition/23 inlinable
  global time:     205.181818
  self size:       32
  global size:     32
  min size:       25
  self stack:      0
  global stack:    0
  estimated growth:92
    size:24.500000, time:198.681818
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1[ref offset: 0] changed || op2[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNDivByTwo/22 inlinable
  global time:     105.000001
  self size:       17
  global size:     17
  min size:       11
  self stack:      0
  global stack:    0
  estimated growth:66
    size:11.000000, time:91.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  loop iterations:(op0[ref offset: 0] changed)
  calls:
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time

IPA function summary for Crypto_LNNumberToLEByteArray/21 inlinable
  global time:     219.863643
  self size:       27
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
    size:18.000000, time:210.340915
    size:4.000000, time:4.522727,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op2[ref offset: 0] changed || op0[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNLEByteArrayToNumber/20 inlinable
  global time:     122.750003
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 == 0),  nonconst if:(op3 changed) && (op1 == 0)
    size:0.500000, time:0.125000,  executed if:(op3 != 0) && (op1 == 0) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op3 != 0) && (op1 == 0)
    size:4.000000, time:3.772727,  executed if:(op1 != 0),  nonconst if:(op1 changed) && (op1 != 0)
    size:2.000000, time:1.000000,  executed if:(op1 != 0),  nonconst if:(op1 changed || op3 changed) && (op1 != 0)
    size:21.500000, time:109.852276,  executed if:(op1 != 0)
    size:0.500000, time:0.125000,  executed if:(op1 != 0) && (not inlined)
  loop iterations:(op1 changed) && (op1 != 0)
  calls:
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.25 size: 2 time: 11callee size: 6 stack: 0 predicate: (op1 != 0)

IPA function summary for Crypto_LNNumberToBEByteArray/19 inlinable
  global time:     223.909097
  self size:       28
  global size:     28
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:214.386370
    size:4.000000, time:4.522727,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op2[ref offset: 0] changed || op0[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNBEByteArrayToNumber/18 inlinable
  global time:     138.931822
  self size:       40
  global size:     40
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 == 0),  nonconst if:(op3 changed) && (op1 == 0)
    size:0.500000, time:0.125000,  executed if:(op3 != 0) && (op1 == 0) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op3 != 0) && (op1 == 0)
    size:4.000000, time:3.772727,  executed if:(op1 != 0),  nonconst if:(op1 changed) && (op1 != 0)
    size:2.000000, time:1.000000,  executed if:(op1 != 0),  nonconst if:(op1 changed || op3 changed) && (op1 != 0)
    size:23.500000, time:126.034094,  executed if:(op1 != 0)
    size:0.500000, time:0.125000,  executed if:(op1 != 0) && (not inlined)
  loop iterations:(op1 changed) && (op1 != 0)
  calls:
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.25 size: 2 time: 11callee size: 6 stack: 0 predicate: (op1 != 0)

IPA function summary for Crypto_LNModulo/17 inlinable
  global time:     1216.454918
  self size:       23
  global size:     128
  min size:       114
  self stack:      0
  global stack:    0
  estimated growth:15
    size:114.000000, time:1184.537418
    size:4.000000, time:2.417500,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.16 size: 2 time: 11callee size: 6 stack: 0
    Crypto_LNModulo.part.0/42 inlined
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:56 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Crypto_LNSModuloShift/29 inlined
        loop depth: 1 freq:3.05 size: 4 time: 13callee size:11 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Crypto_LNSModuloSubtract/31 inlined
          loop depth: 1 freq:3.05 size: 4 time: 13callee size: 9 stack: 0
          Stack frame offset 0, callee self size 0, callee size 0
          Crypto_LNSModuloCarry/33 inlined
            loop depth: 1 freq:1.49 size: 3 time: 12callee size: 7 stack: 0
            Stack frame offset 0, callee self size 0, callee size 0
          Crypto_LNSModuloSubtract2/32 inlined
            loop depth: 1 freq:1.49 size: 4 time: 13callee size:26 stack: 0
            Stack frame offset 0, callee self size 0, callee size 0
        Crypto_LNSModuloShift2/30 inlined
          loop depth: 1 freq:3.05 size: 4 time: 13callee size:26 stack: 0
          Stack frame offset 0, callee self size 0, callee size 0
      Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
        loop depth: 0 freq:0.34 size: 2 time: 11callee size: 6 stack: 0
         op0 change 99.990000% of time
    Crypto_LNBitLengthOfNumber/8 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 7 stack: 0
    Crypto_LNBitLengthOfNumber/8 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 7 stack: 0

IPA function summary for Crypto_LNCompareNumbers/16 inlinable
  global time:     54.406825
  self size:       23
  global size:     23
  min size:       14
  self stack:      0
  global stack:    0
  estimated growth:75
    size:14.000000, time:47.106825
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:4.000000, time:3.300000,  nonconst if:(op0[ref offset: 0] changed || op1[ref offset: 0] changed)
  loop iterations:(op0[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNSubtraction/15 inlinable
  global time:     247.545454
  self size:       35
  global size:     35
  min size:       29
  self stack:      0
  global stack:    0
  estimated growth:54
    size:28.500000, time:224.954545
    size:4.500000, time:11.590909,  executed if:(not inlined)
  calls:
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time

IPA function summary for Crypto_LNMontgomeryReduction/14 inlinable
  global time:     1627.519899
  self size:       70
  global size:     70
  min size:       26
  self stack:      0
  global stack:    0
    size:50.000000, time:1571.074585
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:9.590910,  nonconst if:(op2[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  loop iterations:(op2[ref offset: 0] changed)
  calls:
    Crypto_LNSubtraction/15 call is unlikely and code size would grow
      loop depth: 0 freq:0.49 size: 4 time: 13callee size:17 stack: 0
    Crypto_LNCompareNumbers/16 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time
    TS_MemBZero32/36 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Crypto_LNMontgomeryNormalization/13 inlinable
  global time:     360.815602
  self size:       51
  global size:     51
  min size:       28
  self stack:      0
  global stack:    0
    size:9.000000, time:46.454546
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:1.000000, time:0.410000,  executed if:(op1[ref offset: 0] <= 1) && (not inlined)
    size:1.000000, time:0.410000,  executed if:(op1[ref offset: 0] <= 1)
    size:2.000000, time:1.180000,  executed if:(op1[ref offset: 0] > 1),  nonconst if:(op1[ref offset: 0] changed) && (op1[ref offset: 0] > 1)
    size:17.000000, time:38.698637,  executed if:(op1[ref offset: 0] > 1)
    size:1.000000, time:2.976818,  executed if:(op1[ref offset: 0] > 1) && (not inlined)
  calls:
    Crypto_LNSubtraction/15 call is unlikely and code size would grow
      loop depth: 1 freq:3.95 size: 4 time: 13callee size:17 stack: 0
       op0 change 25.280000% of time
       op1 change 25.280000% of time
       op2 change 25.280000% of time
    Crypto_LNCompareNumbers/16 call is unlikely and code size would grow
      loop depth: 1 freq:8.09 size: 4 time: 13callee size:11 stack: 0
       op0 change 12.350000% of time
       op1 change 12.350000% of time
    Crypto_LNMultByTwo/11 call is unlikely and code size would grow
      loop depth: 1 freq:8.09 size: 3 time: 12callee size:18 stack: 0
       op0 change 12.350000% of time
       op1 change 12.350000% of time
    Crypto_LNBitLengthOfNumber/8 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 7 stack: 0

IPA function summary for Crypto_LNMontgomerySetup/12 inlinable
  global time:     18.000000
  self size:       19
  global size:     19
  min size:       0
  self stack:      0
  global stack:    0
    size:15.000000, time:15.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:

IPA function summary for Crypto_LNMultByTwo/11 inlinable
  global time:     179.818182
  self size:       37
  global size:     37
  min size:       29
  self stack:      0
  global stack:    0
  estimated growth:28
    size:28.500000, time:168.772727
    size:5.500000, time:8.045455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Crypto_LNMultiplyNumbers/10 inlinable
  global time:     1395.975300
  self size:       49
  global size:     49
  min size:       32
  self stack:      0
  global stack:    0
  estimated growth:78
    size:31.500000, time:1341.838934
    size:4.500000, time:7.045455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:8.590910,  nonconst if:(op2[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 0] changed || op2[ref offset: 0] changed)
  loop iterations:(op1[ref offset: 0] changed || op2[ref offset: 0] changed)
  calls:
    TS_MemCpy32/37 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
    Crypto_LNNormalizeNumber/9 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 6 stack: 0
       op0 change 99.990000% of time
    TS_MemBZero32/36 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Crypto_LNNormalizeNumber/9 inlinable
  global time:     76.755550
  self size:       13
  global size:     13
  min size:       9
  self stack:      0
  global stack:    0
  estimated growth:77
    size:8.500000, time:73.255550
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  loop iterations:(op0[ref offset: 0] changed)
  calls:

IPA function summary for Crypto_LNBitLengthOfNumber/8 inlinable
  global time:     24.681818
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:27
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 0] changed || op0 changed) && (op0[ref offset: 0] != 0)
    size:5.000000, time:17.681818,  executed if:(op0[ref offset: 0] != 0)
  calls:

IPA function summary for Crypto_LNIsValid/7 inlinable
  global time:     7.250000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 0] changed || op0 changed) && (op0[ref offset: 0] != 0)
    size:3.000000, time:0.750000,  executed if:(op0[ref offset: 0] != 0)
  calls:

IPA function summary for Crypto_CommonXOR/6 inlinable
  global time:     76.818182
  self size:       12
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:74.818182
    size:3.000000, time:2.000000,  executed if:(not inlined)
  loop iterations:(op2 changed)
  calls:

IPA function summary for Crypto_LNModuloBarrett/5 inlinable
  global time:     337.127633
  self size:       98
  global size:     98
  min size:       48
  self stack:      0
  global stack:    0
    size:64.500000, time:185.483713
    size:8.500000, time:11.988182,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Crypto_LNCompareNumbers/16 call is unlikely and code size would grow
      loop depth: 1 freq:4.10 size: 4 time: 13callee size:11 stack: 0
       op0 change 24.390000% of time
       op1 change 24.390000% of time
    Crypto_LNBarretSubtractNumbers/28 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:3.10 size: 5 time: 14callee size:27 stack: 0
       op0 change 32.270000% of time
       op1 change 32.270000% of time
       op2 change 32.270000% of time
       op3 is compile time invariant
    Crypto_LNBarretSubtractNumbers/28 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:27 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
       op3 change 99.990000% of time
    Crypto_LNMultiplyNumbers/10 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:24 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
       op3 change 99.990000% of time
    Crypto_LNMultiplyNumbers/10 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:24 stack: 0
       op0 change 99.990000% of time
       op1 change 99.990000% of time
       op2 change 99.990000% of time
       op3 change 99.990000% of time

IPA function summary for Crypto_CheckSkipMain/4 inlinable
  global time:     4.870000
  self size:       10
  global size:     10
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:0.600000,  executed if:(op0 == 0B),  nonconst if:(op1 changed) && (op0 == 0B)
    size:3.000000, time:0.270000,  executed if:(op1 == 0B) && (op0 == 0B)
  calls:

IPA function summary for Crypto_StateMachineIdle/3 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Crypto_MemCmp_Sec/2 inlinable
  global time:     78.818182
  self size:       14
  global size:     14
  min size:       0
  self stack:      0
  global stack:    0
    size:11.000000, time:76.818182
    size:3.000000, time:2.000000,  executed if:(not inlined)
  loop iterations:(op2 changed)
  calls:

IPA function summary for Crypto_MemCmp/1 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    TS_MemCmp32/34 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14

Symbol table:

Crypto_LNModulo.part.0/42 (Crypto_LNModulo.part.0) @06e24000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Crypto_LNModulo.part.0/42 is inline copy in Crypto_LNModulo/17
  Availability: local
  Function flags: count:118111600 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Crypto_LNModulo/17 (inlined) (118111600 (estimated locally),0.33 per call) 
  Calls: Crypto_LNSModuloShift/29 (inlined) (1073741824 (estimated locally),3.05 per call) Crypto_LNNormalizeNumber/9 (118111601 (estimated locally),0.34 per call) 
Crypto_AL_AESCMAC_PrecalculateKeys/41 (Crypto_AL_AESCMAC_PrecalculateKeys) @06cc67e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Crypto_AL_Init/27 (118111601 (estimated locally),2.00 per call) 
  Calls: 
Crypto_AL_KeyElementSet/40 (Crypto_AL_KeyElementSet) @06cc6700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Crypto_AL_Init/27 (955630223 (estimated locally),16.18 per call) 
  Calls: 
Crypto_AL_Keys_Data/39 (Crypto_AL_Keys_Data) @06cd6c18
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Crypto_AL_Init/27 (read)Crypto_AL_Init/27 (read)
  Availability: not_available
  Varpool flags:
Crypto_Keys/38 (Crypto_Keys) @06cd6bd0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Crypto_AL_Init/27 (read)Crypto_AL_Init/27 (write)
  Availability: not_available
  Varpool flags:
TS_MemCpy32/37 (TS_MemCpy32) @068611c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Crypto_LNMultiplyNumbers/10 (14598063 (estimated locally),1.00 per call) 
  Calls: 
TS_MemBZero32/36 (TS_MemBZero32) @068610e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Crypto_LNMontgomeryReduction/14 (14598061 (estimated locally),1.00 per call) Crypto_LNMultiplyNumbers/10 (14598062 (estimated locally),1.00 per call) 
  Calls: 
Crypto_DriverObjects/35 (Crypto_DriverObjects) @06c7a318
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Crypto_CheckSkipMain/4 (read)
  Availability: not_available
  Varpool flags:
TS_MemCmp32/34 (TS_MemCmp32) @06c73700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Crypto_MemCmp/1 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Crypto_LNSModuloCarry/33 (Crypto_LNSModuloCarry) @06c73540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Crypto_LNSModuloCarry/33 is inline copy in Crypto_LNModulo/17
  Availability: local
  Function flags: count:524845004 (estimated locally) body local optimize_size
  Called by: Crypto_LNSModuloSubtract/31 (inlined) (524845004 (estimated locally),1.49 per call) 
  Calls: 
Crypto_LNSModuloSubtract2/32 (Crypto_LNSModuloSubtract2) @06c73380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Crypto_LNSModuloSubtract2/32 is inline copy in Crypto_LNModulo/17
  Availability: local
  Function flags: count:524845004 (estimated locally) body local optimize_size
  Called by: Crypto_LNSModuloSubtract/31 (inlined) (524845004 (estimated locally),1.49 per call) 
  Calls: 
Crypto_LNSModuloSubtract/31 (Crypto_LNSModuloSubtract) @06c731c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Crypto_LNSModuloSubtract/31 is inline copy in Crypto_LNModulo/17
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Crypto_LNSModuloShift/29 (inlined) (1073741824 (estimated locally),3.05 per call) 
  Calls: Crypto_LNSModuloCarry/33 (inlined) (524845004 (estimated locally),1.49 per call) Crypto_LNSModuloSubtract2/32 (inlined) (524845004 (estimated locally),1.49 per call) 
Crypto_LNSModuloShift2/30 (Crypto_LNSModuloShift2) @06c73000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Crypto_LNSModuloShift2/30 is inline copy in Crypto_LNModulo/17
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Crypto_LNSModuloShift/29 (inlined) (1073741824 (estimated locally),3.05 per call) 
  Calls: 
Crypto_LNSModuloShift/29 (Crypto_LNSModuloShift) @06bf6e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Crypto_LNSModuloShift/29 is inline copy in Crypto_LNModulo/17
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Crypto_LNModulo.part.0/42 (inlined) (1073741824 (estimated locally),3.05 per call) 
  Calls: Crypto_LNSModuloSubtract/31 (inlined) (1073741824 (estimated locally),3.05 per call) Crypto_LNSModuloShift2/30 (inlined) (1073741824 (estimated locally),3.05 per call) 
Crypto_LNBarretSubtractNumbers/28 (Crypto_LNBarretSubtractNumbers) @06bf6b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:114863532 (estimated locally) body local optimize_size
  Called by: Crypto_LNModuloBarrett/5 (365952336 (estimated locally),3.10 per call) Crypto_LNModuloBarrett/5 (118111601 (estimated locally),1.00 per call) 
  Calls: Crypto_LNNormalizeNumber/9 (114863532 (estimated locally),1.00 per call) 
Crypto_AL_Init/27 (Crypto_AL_Init) @06bf6460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Crypto_Keys/38 (read)Crypto_AL_Keys_Data/39 (read)Crypto_AL_Keys_Data/39 (read)Crypto_Keys/38 (write)
  Referring: 
  Availability: available
  Function flags: count:59046942 (estimated locally) body optimize_size
  Called by: 
  Calls: Crypto_AL_AESCMAC_PrecalculateKeys/41 (118111601 (estimated locally),2.00 per call) Crypto_AL_KeyElementSet/40 (955630223 (estimated locally),16.18 per call) 
Crypto_LNInversion/26 (Crypto_LNInversion) @06bf62a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:7596263 (estimated locally) body optimize_size
  Called by: 
  Calls: Crypto_LNModulo/17 (7596264 (estimated locally),1.00 per call) Crypto_LNSubtractionModular/25 (46047801 (estimated locally),6.06 per call) Crypto_LNSubtractionModular/25 (46047801 (estimated locally),6.06 per call) Crypto_LNSubtractionModular/25 (72063799 (estimated locally),9.49 per call) Crypto_LNSubtractionModular/25 (72063799 (estimated locally),9.49 per call) Crypto_LNCompareNumbers/16 (118111601 (estimated locally),15.55 per call) Crypto_LNDivByTwo/22 (477815112 (estimated locally),62.90 per call) Crypto_LNAddition/23 (477815112 (estimated locally),62.90 per call) Crypto_LNDivByTwo/22 (477815112 (estimated locally),62.90 per call) Crypto_LNDivByTwo/22 (955630225 (estimated locally),125.80 per call) Crypto_LNDivByTwo/22 (477815109 (estimated locally),62.90 per call) Crypto_LNAddition/23 (477815109 (estimated locally),62.90 per call) Crypto_LNDivByTwo/22 (477815109 (estimated locally),62.90 per call) Crypto_LNDivByTwo/22 (955630219 (estimated locally),125.80 per call) 
Crypto_LNSubtractionModular/25 (Crypto_LNSubtractionModular) @06bf60e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Crypto_LNInversion/26 (46047801 (estimated locally),6.06 per call) Crypto_LNInversion/26 (46047801 (estimated locally),6.06 per call) Crypto_LNInversion/26 (72063799 (estimated locally),9.49 per call) Crypto_LNInversion/26 (72063799 (estimated locally),9.49 per call) 
  Calls: Crypto_LNNormalizeNumber/9 (118111601 (estimated locally),1.00 per call) Crypto_LNAddition/23 (365072222 (estimated locally),3.09 per call) 
Crypto_LNAdditionModular/24 (Crypto_LNAdditionModular) @06be9ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: Crypto_LNNormalizeNumber/9 (118111601 (estimated locally),1.00 per call) Crypto_LNCompareNumbers/16 (98032628 (estimated locally),0.83 per call) Crypto_LNAddition/23 (118111600 (estimated locally),1.00 per call) 
Crypto_LNAddition/23 (Crypto_LNAddition) @06be9d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Crypto_LNInversion/26 (477815112 (estimated locally),62.90 per call) Crypto_LNInversion/26 (477815109 (estimated locally),62.90 per call) Crypto_LNSubtractionModular/25 (365072222 (estimated locally),3.09 per call) Crypto_LNAdditionModular/24 (118111600 (estimated locally),1.00 per call) 
  Calls: 
Crypto_LNDivByTwo/22 (Crypto_LNDivByTwo) @06be9b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Crypto_LNInversion/26 (477815112 (estimated locally),62.90 per call) Crypto_LNInversion/26 (477815112 (estimated locally),62.90 per call) Crypto_LNInversion/26 (955630225 (estimated locally),125.80 per call) Crypto_LNInversion/26 (477815109 (estimated locally),62.90 per call) Crypto_LNInversion/26 (477815109 (estimated locally),62.90 per call) Crypto_LNInversion/26 (955630219 (estimated locally),125.80 per call) 
  Calls: Crypto_LNNormalizeNumber/9 (118111601 (estimated locally),1.00 per call) 
Crypto_LNNumberToLEByteArray/21 (Crypto_LNNumberToLEByteArray) @06be99a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:53083864 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Crypto_LNLEByteArrayToNumber/20 (Crypto_LNLEByteArrayToNumber) @06be97e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:106167728 (estimated locally) body optimize_size
  Called by: 
  Calls: Crypto_LNNormalizeNumber/9 (26541933 (estimated locally),0.25 per call) 
Crypto_LNNumberToBEByteArray/19 (Crypto_LNNumberToBEByteArray) @06be9380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:53083864 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Crypto_LNBEByteArrayToNumber/18 (Crypto_LNBEByteArrayToNumber) @06be91c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:106167728 (estimated locally) body optimize_size
  Called by: 
  Calls: Crypto_LNNormalizeNumber/9 (26541933 (estimated locally),0.25 per call) 
Crypto_LNModulo/17 (Crypto_LNModulo) @06bd3d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:352571941 (estimated locally) body optimize_size
  Called by: Crypto_LNInversion/26 (7596264 (estimated locally),1.00 per call) 
  Calls: Crypto_LNNormalizeNumber/9 (58174370 (estimated locally),0.16 per call) Crypto_LNModulo.part.0/42 (inlined) (118111600 (estimated locally),0.33 per call) Crypto_LNBitLengthOfNumber/8 (352571941 (estimated locally),1.00 per call) Crypto_LNBitLengthOfNumber/8 (352571941 (estimated locally),1.00 per call) 
Crypto_LNCompareNumbers/16 (Crypto_LNCompareNumbers) @06bd3b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:271866348 (estimated locally) body optimize_size
  Called by: Crypto_LNInversion/26 (118111601 (estimated locally),15.55 per call) Crypto_LNAdditionModular/24 (98032628 (estimated locally),0.83 per call) Crypto_LNMontgomeryReduction/14 (14598063 (estimated locally),1.00 per call) Crypto_LNMontgomeryNormalization/13 (955630224 (estimated locally),8.09 per call) Crypto_LNModuloBarrett/5 (484063937 (estimated locally),4.10 per call) 
  Calls: 
Crypto_LNSubtraction/15 (Crypto_LNSubtraction) @06bd39a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Crypto_LNMontgomeryReduction/14 (7135533 (estimated locally),0.49 per call) Crypto_LNMontgomeryNormalization/13 (467112053 (estimated locally),3.95 per call) 
  Calls: Crypto_LNNormalizeNumber/9 (118111601 (estimated locally),1.00 per call) 
Crypto_LNMontgomeryReduction/14 (Crypto_LNMontgomeryReduction) @06bd37e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Crypto_MontgomeryReductionC/0 (addr)Crypto_MontgomeryReductionC/0 (write)Crypto_MontgomeryReductionC/0 (read)Crypto_MontgomeryReductionC/0 (addr)Crypto_MontgomeryReductionC/0 (addr)
  Referring: 
  Availability: available
  Function flags: count:14598061 (estimated locally) body optimize_size
  Called by: 
  Calls: Crypto_LNSubtraction/15 (7135533 (estimated locally),0.49 per call) Crypto_LNCompareNumbers/16 (14598063 (estimated locally),1.00 per call) Crypto_LNNormalizeNumber/9 (14598063 (estimated locally),1.00 per call) TS_MemBZero32/36 (14598061 (estimated locally),1.00 per call) 
Crypto_LNMontgomeryNormalization/13 (Crypto_LNMontgomeryNormalization) @06bd3540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: Crypto_LNSubtraction/15 (467112053 (estimated locally),3.95 per call) Crypto_LNCompareNumbers/16 (955630224 (estimated locally),8.09 per call) Crypto_LNMultByTwo/11 (955630224 (estimated locally),8.09 per call) Crypto_LNBitLengthOfNumber/8 (118111600 (estimated locally),1.00 per call) 
Crypto_LNMontgomerySetup/12 (Crypto_LNMontgomerySetup) @06bd3380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Crypto_LNMultByTwo/11 (Crypto_LNMultByTwo) @06bd31c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Crypto_LNMontgomeryNormalization/13 (955630224 (estimated locally),8.09 per call) 
  Calls: 
Crypto_LNMultiplyNumbers/10 (Crypto_LNMultiplyNumbers) @06bd3000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:14598062 (estimated locally) body optimize_size
  Called by: Crypto_LNModuloBarrett/5 (118111601 (estimated locally),1.00 per call) Crypto_LNModuloBarrett/5 (118111601 (estimated locally),1.00 per call) 
  Calls: TS_MemCpy32/37 (14598063 (estimated locally),1.00 per call) Crypto_LNNormalizeNumber/9 (14598063 (estimated locally),1.00 per call) TS_MemBZero32/36 (14598062 (estimated locally),1.00 per call) 
Crypto_LNNormalizeNumber/9 (Crypto_LNNormalizeNumber) @06aefe00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:114863532 (estimated locally) body optimize_size
  Called by: Crypto_LNSubtractionModular/25 (118111601 (estimated locally),1.00 per call) Crypto_LNAdditionModular/24 (118111601 (estimated locally),1.00 per call) Crypto_LNDivByTwo/22 (118111601 (estimated locally),1.00 per call) Crypto_LNLEByteArrayToNumber/20 (26541933 (estimated locally),0.25 per call) Crypto_LNBEByteArrayToNumber/18 (26541933 (estimated locally),0.25 per call) Crypto_LNModulo/17 (58174370 (estimated locally),0.16 per call) Crypto_LNModulo.part.0/42 (118111601 (estimated locally),0.34 per call) Crypto_LNMontgomeryReduction/14 (14598063 (estimated locally),1.00 per call) Crypto_LNSubtraction/15 (118111601 (estimated locally),1.00 per call) Crypto_LNMultiplyNumbers/10 (14598063 (estimated locally),1.00 per call) Crypto_LNBarretSubtractNumbers/28 (114863532 (estimated locally),1.00 per call) 
  Calls: 
Crypto_LNBitLengthOfNumber/8 (Crypto_LNBitLengthOfNumber) @06aefc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:236223200 (estimated locally) body optimize_size
  Called by: Crypto_LNModulo/17 (352571941 (estimated locally),1.00 per call) Crypto_LNModulo/17 (352571941 (estimated locally),1.00 per call) Crypto_LNMontgomeryNormalization/13 (118111600 (estimated locally),1.00 per call) 
  Calls: 
Crypto_LNIsValid/7 (Crypto_LNIsValid) @06aefa80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Crypto_CommonXOR/6 (Crypto_CommonXOR) @06aef8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Crypto_LNModuloBarrett/5 (Crypto_LNModuloBarrett) @06aef700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: Crypto_LNCompareNumbers/16 (484063937 (estimated locally),4.10 per call) Crypto_LNBarretSubtractNumbers/28 (365952336 (estimated locally),3.10 per call) Crypto_LNBarretSubtractNumbers/28 (118111601 (estimated locally),1.00 per call) Crypto_LNMultiplyNumbers/10 (118111601 (estimated locally),1.00 per call) Crypto_LNMultiplyNumbers/10 (118111601 (estimated locally),1.00 per call) 
Crypto_CheckSkipMain/4 (Crypto_CheckSkipMain) @06aef540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Crypto_DriverObjects/35 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Crypto_StateMachineIdle/3 (Crypto_StateMachineIdle) @06aef380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Crypto_MemCmp_Sec/2 (Crypto_MemCmp_Sec) @06aef1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Crypto_MemCmp/1 (Crypto_MemCmp) @06aef000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: TS_MemCmp32/34 (1073741824 (estimated locally),1.00 per call) 
Crypto_MontgomeryReductionC/0 (Crypto_MontgomeryReductionC) @06b96120
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Crypto_LNMontgomeryReduction/14 (addr)Crypto_LNMontgomeryReduction/14 (write)Crypto_LNMontgomeryReduction/14 (read)Crypto_LNMontgomeryReduction/14 (addr)Crypto_LNMontgomeryReduction/14 (addr)
  Availability: available
  Varpool flags: initialized

;; Function Crypto_MemCmp (Crypto_MemCmp, funcdef_no=0, decl_uid=5900, cgraph_uid=1, symbol_order=1)

Crypto_MemCmp (const uint8 * const A, const uint8 * const B, uint32 Length)
{
  Std_ReturnType _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _6 = TS_MemCmp32 (A_2(D), B_3(D), Length_4(D));
  return _6;

}



;; Function Crypto_MemCmp_Sec (Crypto_MemCmp_Sec, funcdef_no=1, decl_uid=5904, cgraph_uid=2, symbol_order=2)

Crypto_MemCmp_Sec (const uint8 * const A, const uint8 * const B, uint32 Length)
{
  uint32 Counter;
  uint8 Result;
  Std_ReturnType RetVal;
  const uint8 * _1;
  unsigned char _2;
  const uint8 * _3;
  unsigned char _4;
  unsigned char _5;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Result => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Counter => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = A_12(D) + Counter_8;
  _2 = *_1;
  _3 = B_13(D) + Counter_8;
  _4 = *_3;
  _5 = _2 ^ _4;
  Result_14 = _5 | Result_7;
  # DEBUG Result => Result_14
  # DEBUG BEGIN_STMT
  Counter_15 = Counter_8 + 1;
  # DEBUG Counter => Counter_15

  <bb 4> [local count: 1073741824]:
  # Result_7 = PHI <0(2), Result_14(3)>
  # Counter_8 = PHI <0(2), Counter_15(3)>
  # DEBUG Counter => Counter_8
  # DEBUG Result => Result_7
  # DEBUG BEGIN_STMT
  if (Counter_8 < Length_9(D))
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Result_10 = PHI <Result_7(4)>
  # DEBUG BEGIN_STMT
  if (Result_10 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1

  <bb 7> [local count: 118111601]:
  # RetVal_6 = PHI <0(5), 1(6)>
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  return RetVal_6;

}



;; Function Crypto_StateMachineIdle (Crypto_StateMachineIdle, funcdef_no=2, decl_uid=5906, cgraph_uid=3, symbol_order=3)

Crypto_StateMachineIdle ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return 0;

}



;; Function Crypto_CheckSkipMain (Crypto_CheckSkipMain, funcdef_no=3, decl_uid=5910, cgraph_uid=4, symbol_order=4)

Crypto_CheckSkipMain (Std_ReturnType * Result, boolean * Busy, const uint32 ObjId)
{
  boolean SkipMain;
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SkipMain => 0
  # DEBUG BEGIN_STMT
  if (Result_3(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 3> [local count: 322122547]:
  if (Busy_4(D) == 0B)
    goto <bb 4>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 4> [local count: 96636764]:
  _1 = Crypto_DriverObjects[ObjId_6(D)].SkipPeriodicMainFunction;
  if (_1 == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 32856500]:
  # DEBUG BEGIN_STMT
  # DEBUG SkipMain => 1

  <bb 6> [local count: 1073741824]:
  # SkipMain_2 = PHI <0(2), 0(3), 0(4), 1(5)>
  # DEBUG SkipMain => SkipMain_2
  # DEBUG BEGIN_STMT
  return SkipMain_2;

}



;; Function Crypto_CommonXOR (Crypto_CommonXOR, funcdef_no=5, decl_uid=5925, cgraph_uid=6, symbol_order=6)

Crypto_CommonXOR (void * Destination, const void * Source, uint32 ByteLength)
{
  uint32_least Len;
  uint8 * _1;
  unsigned char _2;
  const uint8 * _3;
  unsigned char _4;
  unsigned char _5;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Len => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = Destination_10(D) + Len_6;
  _2 = *_1;
  _3 = Source_11(D) + Len_6;
  _4 = *_3;
  _5 = _2 ^ _4;
  *_1 = _5;
  # DEBUG BEGIN_STMT
  Len_13 = Len_6 + 1;
  # DEBUG Len => Len_13

  <bb 4> [local count: 1073741824]:
  # Len_6 = PHI <0(2), Len_13(3)>
  # DEBUG Len => Len_6
  # DEBUG BEGIN_STMT
  if (Len_6 < ByteLength_9(D))
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  return;

}



;; Function Crypto_LNIsValid (Crypto_LNIsValid, funcdef_no=6, decl_uid=5918, cgraph_uid=7, symbol_order=7)

Crypto_LNIsValid (const Crypto_LNWordType * LongNumber, uint32 PermittedMaxLength)
{
  boolean Status;
  long unsigned int _1;
  long unsigned int _2;
  const Crypto_LNWordType * _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Status => 0
  # DEBUG BEGIN_STMT
  _1 = *LongNumber_7(D);
  if (_1 < PermittedMaxLength_8(D))
    goto <bb 3>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 3> [local count: 536870913]:
  if (_1 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 4> [local count: 268435456]:
  _2 = _1 * 4;
  _3 = LongNumber_7(D) + _2;
  _4 = *_3;
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  # DEBUG Status => 1

  <bb 6> [local count: 1073741824]:
  # Status_5 = PHI <0(2), 0(3), 0(4), 1(5)>
  # DEBUG Status => Status_5
  # DEBUG BEGIN_STMT
  return Status_5;

}



;; Function Crypto_LNBitLengthOfNumber (Crypto_LNBitLengthOfNumber, funcdef_no=7, decl_uid=5927, cgraph_uid=8, symbol_order=8)

Crypto_LNBitLengthOfNumber (const Crypto_LNWordType * Number)
{
  Crypto_LNWordType Length;
  Crypto_LNWordType TempWord;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  const Crypto_LNWordType * _4;

  <bb 2> [local count: 236223200]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = *Number_9(D);
  if (_1 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _2 = _1 + 4294967295;
  Length_10 = _2 * 32;
  # DEBUG Length => Length_10
  # DEBUG BEGIN_STMT
  _3 = _1 * 4;
  _4 = Number_9(D) + _3;
  TempWord_11 = *_4;
  # DEBUG TempWord => TempWord_11
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Length_12 = Length_6 + 1;
  # DEBUG Length => Length_12
  # DEBUG BEGIN_STMT
  TempWord_13 = TempWord_5 >> 1;
  # DEBUG TempWord => TempWord_13

  <bb 5> [local count: 1073741824]:
  # TempWord_5 = PHI <TempWord_11(3), TempWord_13(4)>
  # Length_6 = PHI <Length_10(3), Length_12(4)>
  # DEBUG Length => Length_6
  # DEBUG TempWord => TempWord_5
  # DEBUG BEGIN_STMT
  if (TempWord_5 != 0)
    goto <bb 4>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 236223201]:
  # Length_7 = PHI <0(2), Length_6(5)>
  # DEBUG Length => Length_7
  # DEBUG BEGIN_STMT
  return Length_7;

}



;; Function Crypto_LNNormalizeNumber (Crypto_LNNormalizeNumber, funcdef_no=8, decl_uid=5929, cgraph_uid=9, symbol_order=9)

Crypto_LNNormalizeNumber (Crypto_LNWordType * Number)
{
  Crypto_LNWordType i;
  long unsigned int _1;
  Crypto_LNWordType * _2;
  long unsigned int _3;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_7 = *Number_6(D);
  # DEBUG i => i_7
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 958878293]:
  # DEBUG BEGIN_STMT
  i_8 = i_4 + 4294967295;
  # DEBUG i => i_8

  <bb 4> [local count: 1073741824]:
  # i_4 = PHI <i_7(2), i_8(3)>
  # DEBUG i => i_4
  # DEBUG BEGIN_STMT
  _1 = i_4 * 4;
  _2 = Number_6(D) + _1;
  _3 = *_2;
  if (_3 == 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686025]:
  if (i_4 != 0)
    goto <bb 3>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 6> [local count: 114863532]:
  # i_10 = PHI <i_4(4), i_4(5)>
  # DEBUG BEGIN_STMT
  *Number_6(D) = i_10;
  return;

}



;; Function Crypto_LNBarretSubtractNumbers (Crypto_LNBarretSubtractNumbers, funcdef_no=27, decl_uid=6068, cgraph_uid=28, symbol_order=28)

Crypto_LNBarretSubtractNumbers (Crypto_LNWordType * Result, const Crypto_LNWordType * Minuend, const Crypto_LNWordType * Subtrahend, Crypto_LNWordType CutOff)
{
  Crypto_LNWordType UpperDifference;
  Crypto_LNWordType LowerDifference;
  Crypto_LNWordType UpperDifference;
  Crypto_LNWordType LowerDifference;
  Crypto_LNWordType Borrow;
  Crypto_LNWordType LoopCount;
  long unsigned int _1;
  const Crypto_LNWordType * _2;
  long unsigned int _3;
  long unsigned int _4;
  const Crypto_LNWordType * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  Crypto_LNWordType * _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  const Crypto_LNWordType * _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  Crypto_LNWordType * _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _37;
  long unsigned int _38;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 0
  # DEBUG BEGIN_STMT
  # DEBUG LoopCount => 1
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 958878293]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = LoopCount_31 * 4;
  _2 = Minuend_42(D) + _1;
  _3 = *_2;
  _4 = _3 & 65535;
  _6 = Subtrahend_40(D) + _1;
  _7 = *_6;
  _8 = _7 & 65535;
  _9 = _4 - _8;
  LowerDifference_43 = _9 - Borrow_33;
  # DEBUG LowerDifference => LowerDifference_43
  # DEBUG BEGIN_STMT
  _10 = LowerDifference_43 >> 16;
  Borrow_44 = _10 & 1;
  # DEBUG Borrow => Borrow_44
  # DEBUG BEGIN_STMT
  LowerDifference_45 = LowerDifference_43 & 65535;
  # DEBUG LowerDifference => LowerDifference_45
  # DEBUG BEGIN_STMT
  _13 = _3 >> 16;
  _14 = _7 >> 16;
  _15 = _13 - _14;
  UpperDifference_46 = _15 - Borrow_44;
  # DEBUG UpperDifference => UpperDifference_46
  # DEBUG BEGIN_STMT
  _16 = UpperDifference_46 >> 16;
  Borrow_47 = _16 & 1;
  # DEBUG Borrow => Borrow_47
  # DEBUG BEGIN_STMT
  # DEBUG UpperDifference => UpperDifference_46 & 65535
  # DEBUG BEGIN_STMT
  _38 = UpperDifference_46 << 16;
  _17 = Result_48(D) + _1;
  _18 = _38 | LowerDifference_45;
  *_17 = _18;
  # DEBUG BEGIN_STMT
  LoopCount_50 = LoopCount_31 + 1;
  # DEBUG LoopCount => LoopCount_50

  <bb 4> [local count: 1073741824]:
  # LoopCount_31 = PHI <1(2), LoopCount_50(3)>
  # Borrow_33 = PHI <0(2), Borrow_47(3)>
  # DEBUG Borrow => Borrow_33
  # DEBUG LoopCount => LoopCount_31
  # DEBUG BEGIN_STMT
  _19 = *Subtrahend_40(D);
  if (_19 >= LoopCount_31)
    goto <bb 6>; [94.50%]
  else
    goto <bb 5>; [5.50%]

  <bb 5> [local count: 114863532]:
  # LoopCount_12 = PHI <LoopCount_31(4), LoopCount_31(6)>
  # Borrow_5 = PHI <Borrow_33(4), Borrow_33(6)>
  goto <bb 8>; [100.00%]

  <bb 6> [local count: 1014686025]:
  if (LoopCount_31 <= CutOff_41(D))
    goto <bb 3>; [94.50%]
  else
    goto <bb 5>; [5.50%]

  <bb 7> [local count: 929350398]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = LoopCount_32 * 4;
  _21 = Minuend_42(D) + _20;
  _22 = *_21;
  _23 = _22 & 65535;
  LowerDifference_53 = _23 - Borrow_34;
  # DEBUG LowerDifference => LowerDifference_53
  # DEBUG BEGIN_STMT
  _24 = LowerDifference_53 >> 16;
  Borrow_54 = _24 & 1;
  # DEBUG Borrow => Borrow_54
  # DEBUG BEGIN_STMT
  LowerDifference_55 = LowerDifference_53 & 65535;
  # DEBUG LowerDifference => LowerDifference_55
  # DEBUG BEGIN_STMT
  _25 = _22 >> 16;
  UpperDifference_56 = _25 - Borrow_54;
  # DEBUG UpperDifference => UpperDifference_56
  # DEBUG BEGIN_STMT
  _26 = UpperDifference_56 >> 16;
  Borrow_57 = _26 & 1;
  # DEBUG Borrow => Borrow_57
  # DEBUG BEGIN_STMT
  # DEBUG UpperDifference => UpperDifference_56 & 65535
  # DEBUG BEGIN_STMT
  _37 = UpperDifference_56 << 16;
  _27 = Result_48(D) + _20;
  _28 = _37 | LowerDifference_55;
  *_27 = _28;
  # DEBUG BEGIN_STMT
  LoopCount_59 = LoopCount_32 + 1;
  # DEBUG LoopCount => LoopCount_59

  <bb 8> [local count: 1044213930]:
  # LoopCount_32 = PHI <LoopCount_12(5), LoopCount_59(7)>
  # Borrow_34 = PHI <Borrow_5(5), Borrow_57(7)>
  # DEBUG Borrow => Borrow_34
  # DEBUG LoopCount => LoopCount_32
  # DEBUG BEGIN_STMT
  _29 = *Minuend_42(D);
  if (_29 >= LoopCount_32)
    goto <bb 7>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 114863532]:
  # LoopCount_11 = PHI <LoopCount_32(8)>
  # DEBUG BEGIN_STMT
  _30 = LoopCount_11 + 4294967295;
  *Result_48(D) = _30;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Result_48(D));
  return;

}



;; Function Crypto_LNMultiplyNumbers (Crypto_LNMultiplyNumbers, funcdef_no=9, decl_uid=5934, cgraph_uid=10, symbol_order=10)

Crypto_LNMultiplyNumbers (Crypto_LNWordType * Result, const Crypto_LNWordType * Multiplicand, const Crypto_LNWordType * Multiplicator, struct Crypto_LNCtxType * CtxPtr)
{
  Crypto_LNDoubleWordType Temp;
  Crypto_LNWordType C2;
  Crypto_LNWordType C1;
  Crypto_LNWordType C0;
  Crypto_LNWordType ProdLen;
  Crypto_LNWordType MultiplicatorLength;
  Crypto_LNWordType MultiplicandLength;
  Crypto_LNWordType Ty;
  Crypto_LNWordType Tx;
  Crypto_LNWordType NumMultiplications;
  Crypto_LNWordType j;
  Crypto_LNWordType i;
  Crypto_LNWordType[47] * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long long unsigned int _5;
  long unsigned int _6;
  sizetype _7;
  sizetype _8;
  const Crypto_LNWordType * _9;
  long unsigned int _10;
  long long unsigned int _11;
  long unsigned int _12;
  sizetype _13;
  sizetype _14;
  const Crypto_LNWordType * _15;
  long unsigned int _16;
  long long unsigned int _17;
  long long unsigned int _18;
  long long unsigned int _19;
  long long unsigned int _20;
  long long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _44;

  <bb 2> [local count: 14598062]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MultiplicandLength_40 = *Multiplicand_39(D);
  # DEBUG MultiplicandLength => MultiplicandLength_40
  # DEBUG BEGIN_STMT
  MultiplicatorLength_42 = *Multiplicator_41(D);
  # DEBUG MultiplicatorLength => MultiplicatorLength_42
  # DEBUG BEGIN_STMT
  ProdLen_43 = MultiplicandLength_40 + MultiplicatorLength_42;
  # DEBUG ProdLen => ProdLen_43
  # DEBUG BEGIN_STMT
  # DEBUG C0 => 0
  # DEBUG BEGIN_STMT
  # DEBUG C1 => 0
  # DEBUG BEGIN_STMT
  # DEBUG C2 => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = &CtxPtr_45(D)->LocalResultMultiply;
  TS_MemBZero32 (_1, 47);
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _2 = MultiplicatorLength_42 + 4294967295;
  Ty_51 = MIN_EXPR <_2, i_30>;
  # DEBUG Ty => Ty_51
  # DEBUG BEGIN_STMT
  Tx_52 = i_30 - Ty_51;
  # DEBUG Tx => Tx_52
  # DEBUG BEGIN_STMT
  _3 = Ty_51 + 1;
  _44 = Ty_51 - i_30;
  _4 = MultiplicandLength_40 + _44;
  NumMultiplications_53 = MIN_EXPR <_3, _4>;
  # DEBUG NumMultiplications => NumMultiplications_53
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG C0 => C1_34
  # DEBUG BEGIN_STMT
  # DEBUG C1 => C2_36
  # DEBUG BEGIN_STMT
  # DEBUG C2 => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG j => 0
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (long long unsigned int) C0_32;
  _6 = j_31 + Tx_52;
  _7 = _6 + 1;
  _8 = _7 * 4;
  _9 = Multiplicand_39(D) + _8;
  _10 = *_9;
  _11 = (long long unsigned int) _10;
  _12 = Ty_51 - j_31;
  _13 = _12 + 1;
  _14 = _13 * 4;
  _15 = Multiplicator_41(D) + _14;
  _16 = *_15;
  _17 = (long long unsigned int) _16;
  _18 = _11 * _17;
  Temp_55 = _5 + _18;
  # DEBUG Temp => Temp_55
  # DEBUG BEGIN_STMT
  C0_56 = (Crypto_LNWordType) Temp_55;
  # DEBUG C0 => C0_56
  # DEBUG BEGIN_STMT
  _19 = (long long unsigned int) C1_33;
  _20 = Temp_55 >> 32;
  Temp_57 = _19 + _20;
  # DEBUG Temp => Temp_57
  # DEBUG BEGIN_STMT
  C1_58 = (Crypto_LNWordType) Temp_57;
  # DEBUG C1 => C1_58
  # DEBUG BEGIN_STMT
  _21 = Temp_57 >> 32;
  _22 = (long unsigned int) _21;
  C2_59 = _22 + C2_35;
  # DEBUG C2 => C2_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_60 = j_31 + 1;
  # DEBUG j => j_60

  <bb 5> [local count: 1073741824]:
  # j_31 = PHI <0(3), j_60(4)>
  # C0_32 = PHI <C1_34(3), C0_56(4)>
  # C1_33 = PHI <C2_36(3), C1_58(4)>
  # C2_35 = PHI <0(3), C2_59(4)>
  # DEBUG C2 => C2_35
  # DEBUG C1 => C1_33
  # DEBUG C0 => C0_32
  # DEBUG j => j_31
  # DEBUG BEGIN_STMT
  if (j_31 < NumMultiplications_53)
    goto <bb 4>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 118111601]:
  # C0_24 = PHI <C0_32(5)>
  # C1_25 = PHI <C1_33(5)>
  # C2_26 = PHI <C2_35(5)>
  # DEBUG BEGIN_STMT
  _23 = i_30 + 1;
  CtxPtr_45(D)->LocalResultMultiply[_23] = C0_24;
  # DEBUG BEGIN_STMT
  # DEBUG i => _23

  <bb 7> [local count: 132709663]:
  # i_30 = PHI <0(2), _23(6)>
  # C1_34 = PHI <0(2), C1_25(6)>
  # C2_36 = PHI <0(2), C2_26(6)>
  # DEBUG C2 => C2_36
  # DEBUG C1 => C1_34
  # DEBUG i => i_30
  # DEBUG BEGIN_STMT
  if (i_30 < ProdLen_43)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 14598063]:
  # DEBUG BEGIN_STMT
  CtxPtr_45(D)->LocalResultMultiply[0] = ProdLen_43;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (_1);
  # DEBUG BEGIN_STMT
  _27 = CtxPtr_45(D)->LocalResultMultiply[0];
  _28 = _27 + 1;
  _29 = _28 * 4;
  TS_MemCpy32 (Result_49(D), _1, _29);
  return;

}



;; Function Crypto_LNMultByTwo (Crypto_LNMultByTwo, funcdef_no=10, decl_uid=5921, cgraph_uid=11, symbol_order=11)

Crypto_LNMultByTwo (Crypto_LNWordType * Result, Crypto_LNWordType * Number)
{
  Crypto_LNWordType * DestPtr;
  Crypto_LNWordType NextCarry;
  Crypto_LNWordType Carry;
  Crypto_LNWordType OldUsed;
  Crypto_LNWordType x;
  long unsigned int _1;
  long unsigned int _2;
  Crypto_LNWordType * _3;
  long unsigned int _4;
  sizetype _6;
  long unsigned int _7;
  Crypto_LNWordType * _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  Crypto_LNWordType * _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  sizetype _16;
  Crypto_LNWordType * _17;
  sizetype _30;
  sizetype _31;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OldUsed_26 = *Result_25(D);
  # DEBUG OldUsed => OldUsed_26
  # DEBUG BEGIN_STMT
  _1 = *Number_27(D);
  *Result_25(D) = _1;
  # DEBUG BEGIN_STMT
  # DEBUG SrcPtr => Number_27(D) + 4
  # DEBUG BEGIN_STMT
  DestPtr_29 = Result_25(D) + 4;
  # DEBUG DestPtr => DestPtr_29
  # DEBUG BEGIN_STMT
  # DEBUG Carry => 0
  # DEBUG BEGIN_STMT
  # DEBUG x => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630220]:
  # DEBUG BEGIN_STMT
  _2 = x_18 * 4;
  _6 = _2 + 4;
  _3 = Number_27(D) + _6;
  _4 = *_3;
  NextCarry_37 = _4 >> 31;
  # DEBUG NextCarry => NextCarry_37
  # DEBUG BEGIN_STMT
  _7 = _4 << 1;
  _8 = DestPtr_29 + _2;
  _9 = _7 | Carry_20;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  # DEBUG Carry => NextCarry_37
  # DEBUG BEGIN_STMT
  x_39 = x_18 + 1;
  # DEBUG x => x_39

  <bb 4> [local count: 1073741821]:
  # x_18 = PHI <0(2), x_39(3)>
  # Carry_20 = PHI <0(2), NextCarry_37(3)>
  # DEBUG Carry => Carry_20
  # DEBUG x => x_18
  # DEBUG BEGIN_STMT
  _10 = *Number_27(D);
  if (_10 > x_18)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  # x_34 = PHI <x_18(4)>
  # Carry_5 = PHI <Carry_20(4)>
  # DEBUG BEGIN_STMT
  if (Carry_5 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _11 = x_34 * 4;
  _12 = DestPtr_29 + _11;
  *_12 = 1;
  # DEBUG BEGIN_STMT
  _13 = *Result_25(D);
  _14 = _13 + 1;
  *Result_25(D) = _14;

  <bb 7> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _15 = *Result_25(D);
  _16 = _15 + 1;
  # DEBUG D#1 => _16 * 4
  # DEBUG DestPtr => Result_25(D) + D#1
  # DEBUG BEGIN_STMT
  # DEBUG x => _15
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _30 = _16 + x_19;
  _31 = _30 * 4;
  _17 = Result_25(D) + _31;
  *_17 = 0;
  # DEBUG BEGIN_STMT
  x_36 = x_19 + 1;
  # DEBUG x => x_36

  <bb 9> [local count: 1073741824]:
  # x_19 = PHI <_15(7), x_36(8)>
  # DEBUG x => x_19
  # DEBUG BEGIN_STMT
  if (x_19 < OldUsed_26)
    goto <bb 8>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  return;

}



;; Function Crypto_LNMontgomerySetup (Crypto_LNMontgomerySetup, funcdef_no=11, decl_uid=5993, cgraph_uid=12, symbol_order=12)

Crypto_LNMontgomerySetup (const Crypto_LNWordType * Modulo, Crypto_LNWordType * Rho)
{
  Crypto_LNWordType B;
  Crypto_LNWordType X;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  B_13 = MEM[(const Crypto_LNWordType *)Modulo_12(D) + 4B];
  # DEBUG B => B_13
  # DEBUG BEGIN_STMT
  _1 = B_13 + 2;
  _2 = _1 << 1;
  _3 = _2 & 8;
  X_14 = _3 + B_13;
  # DEBUG X => X_14
  # DEBUG BEGIN_STMT
  _4 = B_13 * X_14;
  _5 = 2 - _4;
  X_15 = _5 * X_14;
  # DEBUG X => X_15
  # DEBUG BEGIN_STMT
  _6 = B_13 * X_15;
  _7 = 2 - _6;
  X_16 = _7 * X_15;
  # DEBUG X => X_16
  # DEBUG BEGIN_STMT
  _8 = B_13 * X_16;
  _9 = 2 - _8;
  X_17 = _9 * X_16;
  # DEBUG X => X_17
  # DEBUG BEGIN_STMT
  _10 = -X_17;
  *Rho_18(D) = _10;
  return;

}



;; Function Crypto_LNSubtraction (Crypto_LNSubtraction, funcdef_no=14, decl_uid=5975, cgraph_uid=15, symbol_order=15)

Crypto_LNSubtraction (Crypto_LNWordType * Result, const Crypto_LNWordType * Minuend, const Crypto_LNWordType * Subtrahend)
{
  Crypto_LNWordType Borrow;
  Crypto_LNWordType LoopCount;
  Crypto_LNDoubleWordType TempDifference;
  long unsigned int _1;
  const Crypto_LNWordType * _2;
  long unsigned int _3;
  long long unsigned int _4;
  const Crypto_LNWordType * _6;
  long unsigned int _7;
  long long unsigned int _8;
  long long unsigned int _9;
  long long unsigned int _10;
  long long unsigned int _11;
  long unsigned int _12;
  Crypto_LNWordType * _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  const Crypto_LNWordType * _17;
  long unsigned int _18;
  long long unsigned int _19;
  long long unsigned int _20;
  long long unsigned int _21;
  long unsigned int _22;
  Crypto_LNWordType * _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 0
  # DEBUG BEGIN_STMT
  # DEBUG LoopCount => 1
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630220]:
  # DEBUG BEGIN_STMT
  _1 = LoopCount_27 * 4;
  _2 = Minuend_35(D) + _1;
  _3 = *_2;
  _4 = (long long unsigned int) _3;
  _6 = Subtrahend_34(D) + _1;
  _7 = *_6;
  _8 = (long long unsigned int) _7;
  _9 = _4 - _8;
  _10 = (long long unsigned int) Borrow_29;
  TempDifference_43 = _9 - _10;
  # DEBUG TempDifference => TempDifference_43
  # DEBUG BEGIN_STMT
  _11 = TempDifference_43 >> 32;
  _12 = (long unsigned int) _11;
  Borrow_44 = _12 & 1;
  # DEBUG Borrow => Borrow_44
  # DEBUG BEGIN_STMT
  _13 = Result_36(D) + _1;
  _14 = (long unsigned int) TempDifference_43;
  *_13 = _14;
  # DEBUG BEGIN_STMT
  LoopCount_46 = LoopCount_27 + 1;
  # DEBUG LoopCount => LoopCount_46

  <bb 4> [local count: 1073741821]:
  # LoopCount_27 = PHI <1(2), LoopCount_46(3)>
  # Borrow_29 = PHI <0(2), Borrow_44(3)>
  # DEBUG Borrow => Borrow_29
  # DEBUG LoopCount => LoopCount_27
  # DEBUG BEGIN_STMT
  _15 = *Subtrahend_34(D);
  if (_15 >= LoopCount_27)
    goto <bb 3>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111600]:
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _16 = LoopCount_28 * 4;
  _17 = Minuend_35(D) + _16;
  _18 = *_17;
  _19 = (long long unsigned int) _18;
  _20 = (long long unsigned int) Borrow_30;
  TempDifference_39 = _19 - _20;
  # DEBUG TempDifference => TempDifference_39
  # DEBUG BEGIN_STMT
  _21 = TempDifference_39 >> 32;
  _22 = (long unsigned int) _21;
  Borrow_40 = _22 & 1;
  # DEBUG Borrow => Borrow_40
  # DEBUG BEGIN_STMT
  _23 = Result_36(D) + _16;
  _24 = _18 - Borrow_30;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  LoopCount_42 = LoopCount_28 + 1;
  # DEBUG LoopCount => LoopCount_42

  <bb 7> [local count: 1073741824]:
  # LoopCount_28 = PHI <LoopCount_42(6), LoopCount_27(9)>
  # Borrow_30 = PHI <Borrow_40(6), Borrow_29(9)>
  # DEBUG Borrow => Borrow_30
  # DEBUG LoopCount => LoopCount_28
  # DEBUG BEGIN_STMT
  _25 = *Minuend_35(D);
  if (_25 >= LoopCount_28)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111601]:
  # LoopCount_5 = PHI <LoopCount_28(7)>
  # DEBUG BEGIN_STMT
  _26 = LoopCount_5 + 4294967295;
  *Result_36(D) = _26;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Result_36(D));
  return;

}



;; Function Crypto_LNCompareNumbers (Crypto_LNCompareNumbers, funcdef_no=15, decl_uid=5937, cgraph_uid=16, symbol_order=16)

Crypto_LNCompareNumbers (const Crypto_LNWordType * Number1, const Crypto_LNWordType * Number2)
{
  Crypto_ReturnType Compare;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  const Crypto_LNWordType * _4;
  long unsigned int _5;
  const Crypto_LNWordType * _6;
  long unsigned int _7;

  <bb 2> [local count: 271866348]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = *Number1_13(D);
  _2 = *Number2_14(D);
  if (_1 > _2)
    goto <bb 10>; [35.00%]
  else
    goto <bb 3>; [65.00%]

  <bb 3> [local count: 176713126]:
  # DEBUG BEGIN_STMT
  if (_1 < _2)
    goto <bb 10>; [35.00%]
  else
    goto <bb 11>; [65.00%]

  <bb 11> [local count: 114863532]:
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 958878294]:
  # DEBUG BEGIN_STMT
  _3 = NumberPos_8 * 4;
  _4 = Number1_13(D) + _3;
  _5 = *_4;
  _6 = Number2_14(D) + _3;
  _7 = *_6;
  if (_5 > _7)
    goto <bb 7>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 479439147]:
  # DEBUG BEGIN_STMT
  if (_5 < _7)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 239719573]:
  # DEBUG BEGIN_STMT
  # DEBUG Compare => 4

  <bb 7> [local count: 958878294]:
  # Compare_9 = PHI <5(4), 2(5), 4(6)>
  # DEBUG Compare => Compare_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NumberPos_15 = NumberPos_8 + 4294967295;
  # DEBUG NumberPos => NumberPos_15

  <bb 8> [local count: 1073741824]:
  # NumberPos_8 = PHI <NumberPos_15(7), _1(11)>
  # Compare_10 = PHI <Compare_9(7), 2(11)>
  # DEBUG Compare => Compare_10
  # DEBUG NumberPos => NumberPos_8
  # DEBUG BEGIN_STMT
  if (NumberPos_8 != 0)
    goto <bb 9>; [94.50%]
  else
    goto <bb 10>; [5.50%]

  <bb 9> [local count: 1014686025]:
  if (Compare_10 == 2)
    goto <bb 4>; [94.50%]
  else
    goto <bb 10>; [5.50%]

  <bb 10> [local count: 271866348]:
  # Compare_11 = PHI <5(2), 4(3), Compare_10(8), Compare_10(9)>
  # DEBUG Compare => Compare_11
  # DEBUG BEGIN_STMT
  return Compare_11;

}



;; Function Crypto_LNModuloBarrett (Crypto_LNModuloBarrett, funcdef_no=4, decl_uid=5915, cgraph_uid=5, symbol_order=5)

Crypto_LNModuloBarrett (Crypto_LNWordType * Number, const Crypto_LNWordType * Modulus, const Crypto_LNWordType * Barrett, struct Crypto_LNCtxType * CtxPtr)
{
  Crypto_LNWordType * TempNumber;
  Crypto_LNWordType LoopCount;
  long unsigned int _1;
  Crypto_LNWordType * _2;
  sizetype _3;
  sizetype _4;
  Crypto_LNWordType * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  sizetype _10;
  sizetype _11;
  Crypto_LNWordType * _12;
  long unsigned int _13;
  long unsigned int _15;
  sizetype _16;
  sizetype _17;
  Crypto_LNWordType * _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  sizetype _23;
  sizetype _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  Crypto_LNWordType * _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  Crypto_LNWordType * _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  unsigned char _44;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LoopCount_57 = *Number_56(D);
  # DEBUG LoopCount => LoopCount_57
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = LoopCount_45 * 4;
  _2 = Number_56(D) + _1;
  _3 = LoopCount_45 + 3;
  _4 = _3 * 4;
  _5 = Number_56(D) + _4;
  _6 = *_2;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  LoopCount_78 = LoopCount_45 + 4294967295;
  # DEBUG LoopCount => LoopCount_78

  <bb 4> [local count: 1073741824]:
  # LoopCount_45 = PHI <LoopCount_57(2), LoopCount_78(3)>
  # DEBUG LoopCount => LoopCount_45
  # DEBUG BEGIN_STMT
  _7 = *Modulus_58(D);
  if (_7 <= LoopCount_45)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # _8 = PHI <_7(4)>
  # DEBUG BEGIN_STMT
  _9 = *Number_56(D);
  if (_8 > _9)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _10 = _8 + 2;
  _11 = _10 * 4;
  _12 = Number_56(D) + _11;
  *_12 = 0;
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _15 = _9 - _8;
  _16 = _8 + 2;
  _17 = _16 * 4;
  _18 = Number_56(D) + _17;
  _19 = _15 + 1;
  *_18 = _19;
  # DEBUG BEGIN_STMT
  _20 = *Modulus_58(D);
  _21 = _20 + 1;
  *Number_56(D) = _21;

  <bb 8> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _22 = *Modulus_58(D);
  _23 = _22 + 2;
  _24 = _23 * 4;
  TempNumber_62 = Number_56(D) + _24;
  # DEBUG TempNumber => TempNumber_62
  # DEBUG BEGIN_STMT
  Crypto_LNMultiplyNumbers (TempNumber_62, TempNumber_62, Barrett_63(D), CtxPtr_64(D));
  # DEBUG BEGIN_STMT
  _25 = *Modulus_58(D);
  _26 = *TempNumber_62;
  if (_25 >= _26)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  *TempNumber_62 = 0;
  goto <bb 14>; [100.00%]

  <bb 10> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  LoopCount_66 = _25 + 2;
  # DEBUG LoopCount => LoopCount_66
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 477815113]:
  # DEBUG BEGIN_STMT
  _27 = LoopCount_46 * 4;
  _28 = TempNumber_62 + _27;
  _29 = *Modulus_58(D);
  _30 = LoopCount_46 - _29;
  _31 = _30 + 4294967295;
  _32 = _31 * 4;
  _33 = TempNumber_62 + _32;
  _34 = *_28;
  *_33 = _34;
  # DEBUG BEGIN_STMT
  LoopCount_69 = LoopCount_46 + 1;
  # DEBUG LoopCount => LoopCount_69

  <bb 12> [local count: 536870915]:
  # LoopCount_46 = PHI <LoopCount_66(10), LoopCount_69(11)>
  # DEBUG LoopCount => LoopCount_46
  # DEBUG BEGIN_STMT
  _35 = *TempNumber_62;
  if (_35 >= LoopCount_46)
    goto <bb 11>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 59055801]:
  # _13 = PHI <_35(12)>
  # DEBUG BEGIN_STMT
  _36 = *Modulus_58(D);
  _37 = _13 - _36;
  _38 = _37 + 4294967295;
  *TempNumber_62 = _38;

  <bb 14> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_LNMultiplyNumbers (TempNumber_62, TempNumber_62, Modulus_58(D), CtxPtr_64(D));
  # DEBUG BEGIN_STMT
  _39 = *Modulus_58(D);
  _40 = _39 + 1;
  _41 = *TempNumber_62;
  if (_40 < _41)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  *TempNumber_62 = _40;

  <bb 16> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _42 = *Modulus_58(D);
  _43 = _42 + 1;
  Crypto_LNBarretSubtractNumbers (Number_56(D), Number_56(D), TempNumber_62, _43);
  # DEBUG BEGIN_STMT
  # DEBUG LoopCount => 0
  # DEBUG BEGIN_STMT
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 365952336]:
  # DEBUG BEGIN_STMT
  Crypto_LNBarretSubtractNumbers (Number_56(D), Number_56(D), Modulus_58(D), 4294967295);
  # DEBUG BEGIN_STMT
  LoopCount_75 = LoopCount_47 + 1;
  # DEBUG LoopCount => LoopCount_75

  <bb 18> [local count: 484063937]:
  # LoopCount_47 = PHI <0(16), LoopCount_75(17)>
  # DEBUG LoopCount => LoopCount_47
  # DEBUG BEGIN_STMT
  _44 = Crypto_LNCompareNumbers (Number_56(D), Modulus_58(D));
  if (_44 != 4)
    goto <bb 19>; [94.50%]
  else
    goto <bb 20>; [5.50%]

  <bb 19> [local count: 457440420]:
  if (LoopCount_47 != 4)
    goto <bb 17>; [80.00%]
  else
    goto <bb 20>; [20.00%]

  <bb 20> [local count: 118111601]:
  # LoopCount_14 = PHI <LoopCount_47(18), LoopCount_47(19)>
  # DEBUG BEGIN_STMT
  if (LoopCount_14 == 4)
    goto <bb 21>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 21> [local count: 40157944]:
  # DEBUG BEGIN_STMT
  *Number_56(D) = 0;

  <bb 22> [local count: 118111601]:
  return;

}



;; Function Crypto_LNMontgomeryNormalization (Crypto_LNMontgomeryNormalization, funcdef_no=12, decl_uid=5996, cgraph_uid=13, symbol_order=13)

Crypto_LNMontgomeryNormalization (Crypto_LNWordType * Result, const Crypto_LNWordType * Modulo)
{
  Crypto_LNWordType WordOffset;
  uint32 Exponent;
  Crypto_LNWordType x;
  uint32 Bits;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  Crypto_LNWordType * _7;
  long unsigned int _8;
  long unsigned int _9;
  _Bool _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  Crypto_LNWordType * _14;
  long unsigned int _15;
  unsigned char _16;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Crypto_LNBitLengthOfNumber (Modulo_26(D));
  Bits_27 = _1 & 31;
  # DEBUG Bits => Bits_27
  # DEBUG BEGIN_STMT
  if (Bits_27 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  # DEBUG Bits => 32

  <bb 4> [local count: 118111600]:
  # Bits_17 = PHI <Bits_27(2), 32(3)>
  # DEBUG Bits => Bits_17
  # DEBUG BEGIN_STMT
  _2 = *Modulo_26(D);
  if (_2 > 1)
    goto <bb 5>; [59.00%]
  else
    goto <bb 9>; [41.00%]

  <bb 5> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  _3 = _2 + 4294967295;
  _4 = _3 * 32;
  _5 = _4 + Bits_17;
  Exponent_31 = _5 + 4294967295;
  # DEBUG Exponent => Exponent_31
  # DEBUG BEGIN_STMT
  # DEBUG x => 1
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 563821832]:
  # DEBUG BEGIN_STMT
  _6 = x_19 * 4;
  _7 = Result_28(D) + _6;
  *_7 = 0;
  # DEBUG BEGIN_STMT
  x_36 = x_19 + 1;
  # DEBUG x => x_36

  <bb 7> [local count: 633507676]:
  # x_19 = PHI <1(5), x_36(6)>
  # DEBUG x => x_19
  # DEBUG BEGIN_STMT
  _8 = *Result_28(D);
  if (_8 >= x_19)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = Exponent_31 & 31;
  _10 = _9 != 0;
  # DEBUG Carry => (uint8) _10
  # DEBUG BEGIN_STMT
  WordOffset_32 = Exponent_31 >> 5;
  # DEBUG WordOffset => WordOffset_32
  # DEBUG BEGIN_STMT
  _11 = (long unsigned int) _10;
  _12 = _11 + WordOffset_32;
  _13 = _12 * 4;
  _14 = Result_28(D) + _13;
  _15 = 1 << _9;
  *_14 = _15;
  # DEBUG BEGIN_STMT
  *Result_28(D) = _12;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 48425756]:
  # DEBUG BEGIN_STMT
  *Result_28(D) = 1;
  # DEBUG BEGIN_STMT
  MEM[(Crypto_LNWordType *)Result_28(D) + 4B] = 1;
  # DEBUG BEGIN_STMT
  # DEBUG Bits => 1

  <bb 10> [local count: 118111600]:
  # Bits_18 = PHI <Bits_17(8), 1(9)>
  # DEBUG Bits => Bits_18
  # DEBUG BEGIN_STMT
  x_37 = Bits_18 + 4294967295;
  # DEBUG x => x_37
  goto <bb 14>; [100.00%]

  <bb 11> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  Crypto_LNMultByTwo (Result_28(D), Result_28(D));
  # DEBUG BEGIN_STMT
  _16 = Crypto_LNCompareNumbers (Result_28(D), Modulo_26(D));
  if (_16 != 4)
    goto <bb 12>; [48.88%]
  else
    goto <bb 13>; [51.12%]

  <bb 12> [local count: 467112053]:
  # DEBUG BEGIN_STMT
  Crypto_LNSubtraction (Result_28(D), Result_28(D), Modulo_26(D));

  <bb 13> [local count: 955630226]:
  # DEBUG BEGIN_STMT
  x_40 = x_20 + 1;
  # DEBUG x => x_40

  <bb 14> [local count: 1073741824]:
  # x_20 = PHI <x_37(10), x_40(13)>
  # DEBUG x => x_20
  # DEBUG BEGIN_STMT
  if (x_20 <= 31)
    goto <bb 11>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 15> [local count: 118111601]:
  return;

}



;; Function Crypto_LNMontgomeryReduction (Crypto_LNMontgomeryReduction, funcdef_no=13, decl_uid=6001, cgraph_uid=14, symbol_order=14)

Removing basic block 22
Removing basic block 23
Crypto_LNMontgomeryReduction (Crypto_LNWordType * Remainder, const Crypto_LNWordType * Number, const Crypto_LNWordType * Modulo, Crypto_LNWordType Rho)
{
  Crypto_LNDoubleWordType Temp;
  Crypto_LNWordType Pa;
  Crypto_LNWordType * DestPtr;
  Crypto_LNWordType * CPtr;
  Crypto_LNWordType Carry;
  Crypto_LNWordType OldUsed;
  Crypto_LNWordType y;
  Crypto_LNWordType x;
  Crypto_LNWordType Mu;
  long unsigned int _1;
  const Crypto_LNWordType * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long long unsigned int _7;
  long long unsigned int _8;
  long long unsigned int _9;
  long long unsigned int _10;
  sizetype _11;
  sizetype _12;
  const Crypto_LNWordType * _13;
  long unsigned int _14;
  long long unsigned int _15;
  long long unsigned int _16;
  long unsigned int _17;
  long long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  _Bool _21;
  long unsigned int _22;
  Crypto_LNWordType * _23;
  Crypto_LNWordType * _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  Crypto_LNWordType * _29;
  long unsigned int _30;
  unsigned char _31;

  <bb 2> [local count: 14598061]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Pa_50 = *Modulo_49(D);
  # DEBUG Pa => Pa_50
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (&Crypto_MontgomeryReductionC, 36);
  # DEBUG BEGIN_STMT
  OldUsed_53 = *Number_52(D);
  # DEBUG OldUsed => OldUsed_53
  # DEBUG BEGIN_STMT
  # DEBUG x => 1
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 118111589]:
  # DEBUG BEGIN_STMT
  _1 = x_32 * 4;
  _2 = Number_52(D) + _1;
  _3 = x_32 + 4294967295;
  _4 = *_2;
  Crypto_MontgomeryReductionC[_3] = _4;
  # DEBUG BEGIN_STMT
  x_76 = x_32 + 1;
  # DEBUG x => x_76

  <bb 4> [local count: 132709650]:
  # x_32 = PHI <1(2), x_76(3)>
  # DEBUG x => x_32
  # DEBUG BEGIN_STMT
  if (x_32 <= OldUsed_53)
    goto <bb 3>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 5> [local count: 118111599]:
  # DEBUG BEGIN_STMT
  # DEBUG Carry => 0
  # DEBUG BEGIN_STMT
  _5 = Crypto_MontgomeryReductionC[x_33];
  Mu_65 = _5 * Rho_64(D);
  # DEBUG Mu => Mu_65
  # DEBUG BEGIN_STMT
  CPtr_66 = &Crypto_MontgomeryReductionC[x_33];
  # DEBUG CPtr => CPtr_66
  # DEBUG BEGIN_STMT
  # DEBUG y => 0
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 955630217]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = *CPtr_39;
  _7 = (long long unsigned int) _6;
  _8 = (long long unsigned int) Carry_37;
  _9 = _7 + _8;
  _10 = (long long unsigned int) Mu_65;
  _11 = y_36 + 1;
  _12 = _11 * 4;
  _13 = Modulo_49(D) + _12;
  _14 = *_13;
  _15 = (long long unsigned int) _14;
  _16 = _10 * _15;
  Temp_71 = _9 + _16;
  # DEBUG Temp => Temp_71
  # DEBUG BEGIN_STMT
  _17 = (long unsigned int) Temp_71;
  *CPtr_39 = _17;
  # DEBUG BEGIN_STMT
  _18 = Temp_71 >> 32;
  Carry_73 = (Crypto_LNWordType) _18;
  # DEBUG Carry => Carry_73
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CPtr_74 = CPtr_39 + 4;
  # DEBUG CPtr => CPtr_74
  # DEBUG BEGIN_STMT
  # DEBUG y => _11

  <bb 7> [local count: 1073741818]:
  # y_36 = PHI <0(5), _11(6)>
  # Carry_37 = PHI <0(5), Carry_73(6)>
  # CPtr_39 = PHI <CPtr_66(5), CPtr_74(6)>
  # DEBUG CPtr => CPtr_39
  # DEBUG Carry => Carry_37
  # DEBUG y => y_36
  # DEBUG BEGIN_STMT
  if (y_36 < Pa_50)
    goto <bb 6>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 8> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _19 = *CPtr_40;
  _20 = _19 + Carry_38;
  *CPtr_40 = _20;
  # DEBUG BEGIN_STMT
  # DEBUG Temp => _20
  # DEBUG BEGIN_STMT
  _21 = _20 < Carry_38;
  Carry_69 = (Crypto_LNWordType) _21;
  # DEBUG Carry => Carry_69
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CPtr_70 = CPtr_40 + 4;
  # DEBUG CPtr => CPtr_70

  <bb 9> [local count: 1073741824]:
  # Carry_38 = PHI <Carry_69(8), Carry_37(7)>
  # CPtr_40 = PHI <CPtr_70(8), CPtr_39(7)>
  # DEBUG CPtr => CPtr_40
  # DEBUG Carry => Carry_38
  # DEBUG BEGIN_STMT
  if (Carry_38 != 0)
    goto <bb 8>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  x_67 = x_33 + 1;
  # DEBUG x => x_67

  <bb 11> [local count: 132709662]:
  # x_33 = PHI <x_67(10), 0(4)>
  # DEBUG x => x_33
  # DEBUG BEGIN_STMT
  if (x_33 < Pa_50)
    goto <bb 5>; [89.00%]
  else
    goto <bb 12>; [11.00%]

  <bb 12> [local count: 14598063]:
  # DEBUG BEGIN_STMT
  CPtr_54 = &Crypto_MontgomeryReductionC[Pa_50];
  # DEBUG CPtr => CPtr_54
  # DEBUG BEGIN_STMT
  DestPtr_56 = Remainder_55(D) + 4;
  # DEBUG DestPtr => DestPtr_56
  # DEBUG BEGIN_STMT
  # DEBUG x => 0
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _22 = x_34 * 4;
  _23 = CPtr_54 + _22;
  _25 = DestPtr_56 + _22;
  _26 = *_23;
  *_25 = _26;
  # DEBUG BEGIN_STMT
  x_63 = x_34 + 1;
  # DEBUG x => x_63

  <bb 14> [local count: 132709663]:
  # x_34 = PHI <0(12), x_63(13)>
  # DEBUG x => x_34
  # DEBUG BEGIN_STMT
  _27 = Pa_50 + 1;
  if (_27 > x_34)
    goto <bb 13>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 15> [local count: 14598063]:
  # _30 = PHI <_27(14)>
  # x_24 = PHI <x_34(14)>
  goto <bb 17>; [100.00%]

  <bb 16> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _28 = x_35 * 4;
  _29 = DestPtr_56 + _28;
  *_29 = 0;
  # DEBUG BEGIN_STMT
  x_61 = x_35 + 1;
  # DEBUG x => x_61

  <bb 17> [local count: 132709663]:
  # x_35 = PHI <x_61(16), x_24(15)>
  # DEBUG x => x_35
  # DEBUG BEGIN_STMT
  if (x_35 < OldUsed_53)
    goto <bb 16>; [89.00%]
  else
    goto <bb 18>; [11.00%]

  <bb 18> [local count: 14598063]:
  # DEBUG BEGIN_STMT
  *Remainder_55(D) = _30;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Remainder_55(D));
  # DEBUG BEGIN_STMT
  _31 = Crypto_LNCompareNumbers (Remainder_55(D), Modulo_49(D));
  if (_31 != 4)
    goto <bb 19>; [48.88%]
  else
    goto <bb 20>; [51.12%]

  <bb 19> [local count: 7135533]:
  # DEBUG BEGIN_STMT
  Crypto_LNSubtraction (Remainder_55(D), Remainder_55(D), Modulo_49(D));

  <bb 20> [local count: 14598063]:
  return;

}



;; Function Crypto_LNModulo (Crypto_LNModulo, funcdef_no=16, decl_uid=5941, cgraph_uid=17, symbol_order=17)


Symbols to be put in SSA form
{ D.6711 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 53
Number of blocks to update: 52 ( 98%)


Merging blocks 5 and 9
Removing basic block 8
Merging blocks 10 and 15
Removing basic block 11
Merging blocks 12 and 13
Removing basic block 16
Merging blocks 18 and 42
Merging blocks 19 and 14
Removing basic block 20
Removing basic block 21
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 41
Removing basic block 52
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
;;
;; Loop 2
;;  header 6, latch 34
;;  depth 1, outer 0
;;  nodes: 6 34 22 33 32 23 31 29 30 28 24 26 27 25 21 20 16 18 19 17 15 13 14 10 11 12 8 9 7
;;
;; Loop 4
;;  header 32, latch 31
;;  depth 2, outer 2
;;  nodes: 32 31 29 30 28 24 26 27 25
;;
;; Loop 3
;;  header 7, latch 21
;;  depth 2, outer 2
;;  nodes: 7 21 20 16 18 19 17 15 13 14 10 11 12 8 9
;; 2 succs { 3 4 }
;; 3 succs { 37 }
;; 4 succs { 5 36 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 13 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 20 }
;; 17 succs { 18 19 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 7 22 }
;; 22 succs { 23 34 }
;; 23 succs { 32 }
;; 24 succs { 25 28 }
;; 25 succs { 27 26 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 24 33 }
;; 33 succs { 34 }
;; 34 succs { 6 35 }
;; 35 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 1 }
Crypto_LNModulo (Crypto_LNWordType * Number, const Crypto_LNWordType * Modulus, struct Crypto_LNCtxType * CtxPtr)
{
  uint8 TempCarry;
  Crypto_LNWordType WordOfNumber;
  uint32 LengthOfMod;
  uint32 LengthOfNum;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  unsigned char _18;
  unsigned char _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  unsigned char _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  const Crypto_LNWordType * _29;
  long unsigned int _30;
  unsigned char _31;
  int _32;
  long unsigned int _33;
  unsigned char _34;
  long unsigned int _35;
  sizetype _36;
  sizetype _37;
  const Crypto_LNWordType * _38;
  long unsigned int _39;
  unsigned char _40;
  int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  Crypto_LNWordType * _47;
  long unsigned int _49;
  long unsigned int _51;
  long unsigned int _52;
  unsigned char _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  Crypto_LNWordType * _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  const Crypto_LNWordType * _65;
  long unsigned int _66;
  unsigned char _67;
  int _68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _72;
  Crypto_LNWordType * _73;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _77;
  long unsigned int _78;
  Crypto_LNWordType * _79;
  long unsigned int _80;
  long unsigned int _81;
  long unsigned int _82;
  long unsigned int _84;
  unsigned char _85;
  long unsigned int _86;
  long unsigned int _87;
  const Crypto_LNWordType * _88;
  long unsigned int _89;
  unsigned char _90;
  int _91;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int _96;
  long unsigned int _97;

  <bb 2> [local count: 37716383]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LengthOfNum_6 = Crypto_LNBitLengthOfNumber (Number_4(D));
  # DEBUG LengthOfNum => LengthOfNum_6
  # DEBUG BEGIN_STMT
  LengthOfMod_9 = Crypto_LNBitLengthOfNumber (Modulus_7(D));
  # DEBUG LengthOfMod => LengthOfMod_9
  # DEBUG BEGIN_STMT
  if (LengthOfMod_9 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 18858192]:
  # DEBUG BEGIN_STMT
  *Number_4(D) = 0;
  goto <bb 37>; [100.00%]

  <bb 4> [local count: 18858192]:
  # DEBUG BEGIN_STMT
  if (LengthOfNum_6 >= LengthOfMod_9)
    goto <bb 5>; [67.00%]
  else
    goto <bb 36>; [33.00%]

  <bb 5> [local count: 12634988]:
  # DEBUG BEGIN_STMT
  _1 = LengthOfNum_6 - LengthOfMod_9;
  _2 = _1 + 1;
  CtxPtr_11(D)->LengthDifference = _2;
  # DEBUG Number => Number_4(D)
  # DEBUG Modulus => Modulus_7(D)
  # DEBUG CtxPtr => CtxPtr_11(D)
  # DEBUG INLINE_ENTRY Crypto_LNModulo

  <bb 6> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Number => Number_4(D)
  # DEBUG Modulus => Modulus_7(D)
  # DEBUG CtxPtr => CtxPtr_11(D)
  # DEBUG INLINE_ENTRY Crypto_LNSModuloShift
  # DEBUG BEGIN_STMT
  _15 = CtxPtr_11(D)->LengthDifference;
  _16 = _15 + 4294967295;
  CtxPtr_11(D)->LengthDifference = _16;
  # DEBUG BEGIN_STMT
  _17 = _16 >> 5;
  CtxPtr_11(D)->ShiftWords = _17;
  # DEBUG BEGIN_STMT
  _18 = (unsigned char) _16;
  _19 = _18 & 31;
  CtxPtr_11(D)->ShiftBits = _19;
  # DEBUG BEGIN_STMT
  _20 = *Modulus_7(D);
  _21 = _20 + 1;
  CtxPtr_11(D)->PosInMod = _21;
  # DEBUG BEGIN_STMT
  _22 = _17 + _21;
  CtxPtr_11(D)->PosInNum = _22;
  # DEBUG BEGIN_STMT
  # DEBUG Number => Number_4(D)
  # DEBUG Modulus => Modulus_7(D)
  # DEBUG CtxPtr => CtxPtr_11(D)
  # DEBUG INLINE_ENTRY Crypto_LNSModuloShift2

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = CtxPtr_11(D)->PosInMod;
  _27 = *Modulus_7(D);
  if (_26 <= _27)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 536870912]:
  # DEBUG BEGIN_STMT
  _28 = _26 * 4;
  _29 = Modulus_7(D) + _28;
  _30 = *_29;
  _31 = CtxPtr_11(D)->ShiftBits;
  _32 = (int) _31;
  _33 = _30 << _32;
  CtxPtr_11(D)->WordOfShiftedMod = _33;
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 536870912]:
  # DEBUG BEGIN_STMT
  CtxPtr_11(D)->WordOfShiftedMod = 0;

  <bb 10> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _34 = CtxPtr_11(D)->ShiftBits;
  if (_34 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 11> [local count: 536870912]:
  if (_26 > 1)
    goto <bb 12>; [59.00%]
  else
    goto <bb 13>; [41.00%]

  <bb 12> [local count: 316753838]:
  # DEBUG BEGIN_STMT
  _35 = CtxPtr_11(D)->WordOfShiftedMod;
  _36 = _26 + 1073741823;
  _37 = _36 * 4;
  _38 = Modulus_7(D) + _37;
  _39 = *_38;
  _40 = 32 - _34;
  _41 = (int) _40;
  _42 = _39 >> _41;
  _43 = _35 | _42;
  CtxPtr_11(D)->WordOfShiftedMod = _43;

  <bb 13> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _44 = CtxPtr_11(D)->PosInNum;
  _45 = *Number_4(D);
  if (_44 > _45)
    goto <bb 15>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 536870912]:
  # DEBUG BEGIN_STMT
  _46 = _44 * 4;
  _47 = Number_4(D) + _46;
  WordOfNumber_48 = *_47;
  # DEBUG WordOfNumber => WordOfNumber_48

  <bb 15> [local count: 1073741824]:
  # WordOfNumber_50 = PHI <0(13), WordOfNumber_48(14)>
  # DEBUG WordOfNumber => WordOfNumber_50
  # DEBUG BEGIN_STMT
  _49 = CtxPtr_11(D)->WordOfShiftedMod;
  if (_49 == WordOfNumber_50)
    goto <bb 16>; [34.00%]
  else
    goto <bb 17>; [66.00%]

  <bb 16> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  CtxPtr_11(D)->CmpNumMod = 2;
  goto <bb 20>; [100.00%]

  <bb 17> [local count: 708669603]:
  # DEBUG BEGIN_STMT
  if (_49 > WordOfNumber_50)
    goto <bb 18>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 18> [local count: 354334801]:
  # DEBUG BEGIN_STMT
  CtxPtr_11(D)->CmpNumMod = 4;
  goto <bb 20>; [100.00%]

  <bb 19> [local count: 354334801]:
  # DEBUG BEGIN_STMT
  CtxPtr_11(D)->CmpNumMod = 5;

  <bb 20> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _51 = _26 + 4294967295;
  CtxPtr_11(D)->PosInMod = _51;
  # DEBUG BEGIN_STMT
  _52 = _44 + 4294967295;
  CtxPtr_11(D)->PosInNum = _52;
  # DEBUG BEGIN_STMT
  _53 = CtxPtr_11(D)->CmpNumMod;
  if (_53 == 2)
    goto <bb 21>; [94.50%]
  else
    goto <bb 22>; [5.50%]

  <bb 21> [local count: 1014686023]:
  if (_51 != 0)
    goto <bb 7>; [94.50%]
  else
    goto <bb 22>; [5.50%]

  <bb 22> [local count: 114863531]:
  # DEBUG Number => NULL
  # DEBUG Modulus => NULL
  # DEBUG CtxPtr => NULL
  # DEBUG WordOfNumber => NULL
  # DEBUG BEGIN_STMT
  # DEBUG Number => Number_4(D)
  # DEBUG Modulus => Modulus_7(D)
  # DEBUG CtxPtr => CtxPtr_11(D)
  # DEBUG INLINE_ENTRY Crypto_LNSModuloSubtract
  # DEBUG BEGIN_STMT
  _23 = CtxPtr_11(D)->CmpNumMod;
  if (_23 != 4)
    goto <bb 23>; [48.88%]
  else
    goto <bb 34>; [51.12%]

  <bb 23> [local count: 56145294]:
  # DEBUG BEGIN_STMT
  CtxPtr_11(D)->WordOfShiftedMod = 0;
  # DEBUG BEGIN_STMT
  CtxPtr_11(D)->Carry = 0;
  # DEBUG BEGIN_STMT
  _24 = CtxPtr_11(D)->ShiftWords;
  _25 = _24 + 1;
  CtxPtr_11(D)->PosInNum = _25;
  # DEBUG BEGIN_STMT
  CtxPtr_11(D)->PosInMod = 1;
  # DEBUG BEGIN_STMT
  # DEBUG Number => Number_4(D)
  # DEBUG Modulus => Modulus_7(D)
  # DEBUG CtxPtr => CtxPtr_11(D)
  # DEBUG INLINE_ENTRY Crypto_LNSModuloSubtract2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 32>; [100.00%]

  <bb 24> [local count: 454266474]:
  # DEBUG BEGIN_STMT
  # DEBUG TempCarry => 0
  # DEBUG BEGIN_STMT
  _62 = CtxPtr_11(D)->WordOfShiftedMod;
  _64 = _63 * 4;
  _65 = Modulus_7(D) + _64;
  _66 = *_65;
  _67 = CtxPtr_11(D)->ShiftBits;
  _68 = (int) _67;
  _69 = _66 << _68;
  _70 = _62 | _69;
  CtxPtr_11(D)->WordOfShiftedMod = _70;
  # DEBUG BEGIN_STMT
  _71 = CtxPtr_11(D)->PosInNum;
  _72 = _71 * 4;
  _73 = Number_4(D) + _72;
  _74 = *_73;
  if (_70 >= _74)
    goto <bb 25>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 25> [local count: 227133237]:
  if (_70 > _74)
    goto <bb 27>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 26> [local count: 113566618]:
  _75 = CtxPtr_11(D)->Carry;
  if (_75 != 0)
    goto <bb 27>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 27> [local count: 170349928]:
  # DEBUG BEGIN_STMT
  # DEBUG TempCarry => 1

  <bb 28> [local count: 454266474]:
  # TempCarry_83 = PHI <0(24), 0(26), 1(27)>
  # DEBUG TempCarry => TempCarry_83
  # DEBUG BEGIN_STMT
  _76 = _74 - _70;
  *_73 = _76;
  # DEBUG BEGIN_STMT
  _77 = CtxPtr_11(D)->PosInNum;
  _78 = _77 * 4;
  _79 = Number_4(D) + _78;
  _80 = *_79;
  _81 = CtxPtr_11(D)->Carry;
  _82 = _80 - _81;
  *_79 = _82;
  # DEBUG BEGIN_STMT
  _84 = (long unsigned int) TempCarry_83;
  CtxPtr_11(D)->Carry = _84;
  # DEBUG BEGIN_STMT
  _85 = CtxPtr_11(D)->ShiftBits;
  if (_85 == 0)
    goto <bb 29>; [50.00%]
  else
    goto <bb 30>; [50.00%]

  <bb 29> [local count: 227133237]:
  # DEBUG BEGIN_STMT
  CtxPtr_11(D)->WordOfShiftedMod = 0;
  goto <bb 31>; [100.00%]

  <bb 30> [local count: 227133237]:
  # DEBUG BEGIN_STMT
  _86 = CtxPtr_11(D)->PosInMod;
  _87 = _86 * 4;
  _88 = Modulus_7(D) + _87;
  _89 = *_88;
  _90 = 32 - _85;
  _91 = (int) _90;
  _92 = _89 >> _91;
  CtxPtr_11(D)->WordOfShiftedMod = _92;

  <bb 31> [local count: 454266474]:
  # DEBUG BEGIN_STMT
  _93 = CtxPtr_11(D)->PosInNum;
  _94 = _93 + 1;
  CtxPtr_11(D)->PosInNum = _94;
  # DEBUG BEGIN_STMT
  _95 = CtxPtr_11(D)->PosInMod;
  _96 = _95 + 1;
  CtxPtr_11(D)->PosInMod = _96;

  <bb 32> [local count: 510411768]:
  # DEBUG BEGIN_STMT
  _63 = CtxPtr_11(D)->PosInMod;
  _97 = *Modulus_7(D);
  if (_63 <= _97)
    goto <bb 24>; [89.00%]
  else
    goto <bb 33>; [11.00%]

  <bb 33> [local count: 56145295]:
  # DEBUG Number => NULL
  # DEBUG Modulus => NULL
  # DEBUG CtxPtr => NULL
  # DEBUG TempCarry => NULL
  # DEBUG BEGIN_STMT
  # DEBUG Number => Number_4(D)
  # DEBUG CtxPtr => CtxPtr_11(D)
  # DEBUG INLINE_ENTRY Crypto_LNSModuloCarry
  # DEBUG BEGIN_STMT
  _54 = CtxPtr_11(D)->Carry;
  _55 = CtxPtr_11(D)->WordOfShiftedMod;
  _56 = _54 + _55;
  CtxPtr_11(D)->Carry = _56;
  # DEBUG BEGIN_STMT
  _57 = CtxPtr_11(D)->PosInNum;
  _58 = _57 * 4;
  _59 = Number_4(D) + _58;
  _60 = *_59;
  _61 = _60 - _56;
  *_59 = _61;
  # DEBUG BEGIN_STMT
  CtxPtr_11(D)->Carry = 0;

  <bb 34> [local count: 114863532]:
  # DEBUG Number => NULL
  # DEBUG CtxPtr => NULL
  # DEBUG Number => NULL
  # DEBUG Modulus => NULL
  # DEBUG CtxPtr => NULL
  # DEBUG Number => NULL
  # DEBUG Modulus => NULL
  # DEBUG CtxPtr => NULL
  # DEBUG BEGIN_STMT
  _14 = CtxPtr_11(D)->LengthDifference;
  if (_14 != 0)
    goto <bb 6>; [89.00%]
  else
    goto <bb 35>; [11.00%]

  <bb 35> [local count: 12634989]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Number_4(D));
  goto <bb 37>; [100.00%]

  <bb 36> [local count: 6223203]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Number_4(D));

  <bb 37> [local count: 37716384]:
  # DEBUG Number => NULL
  # DEBUG Modulus => NULL
  # DEBUG CtxPtr => NULL
  # DEBUG LengthOfNum => NULL
  # DEBUG LengthOfMod => NULL
  return;

}



;; Function Crypto_LNBEByteArrayToNumber (Crypto_LNBEByteArrayToNumber, funcdef_no=17, decl_uid=5946, cgraph_uid=18, symbol_order=18)

Crypto_LNBEByteArrayToNumber (const uint8 * Array, uint32 ArrayLength, Crypto_LNWordType * Number, Crypto_LNWordType NumberLength)
{
  Std_ReturnType RetVal;
  uint32 ArrayPos;
  Crypto_LNWordType WordPos;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  Crypto_LNWordType * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  const uint8 * _9;
  unsigned char _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;

  <bb 2> [local count: 106167728]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  if (ArrayLength_24(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 3> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  _1 = ArrayLength_24(D) + 4294967295;
  _2 = _1 >> 2;
  _3 = _2 + 2;
  if (_3 > NumberLength_25(D))
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 26541932]:
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  _4 = NumberPos_17 * 4;
  _5 = Number_27(D) + _4;
  *_5 = 0;
  # DEBUG BEGIN_STMT
  # DEBUG WordPos => 0
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  # DEBUG ArrayPos => 4
  # DEBUG BEGIN_STMT
  _6 = NumberPos_17 + 4294967295;
  ArrayPos_33 = _6 * 4;
  # DEBUG ArrayPos => ArrayPos_33
  # DEBUG BEGIN_STMT
  ArrayPos_34 = WordPos_18 + ArrayPos_33;
  # DEBUG ArrayPos => ArrayPos_34
  # DEBUG BEGIN_STMT
  _7 = ArrayLength_24(D) - ArrayPos_34;
  ArrayPos_35 = _7 + 4294967295;
  # DEBUG ArrayPos => ArrayPos_35
  # DEBUG BEGIN_STMT
  if (ArrayLength_24(D) > ArrayPos_35)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 429496730]:
  # DEBUG BEGIN_STMT
  _8 = *_5;
  _9 = Array_36(D) + ArrayPos_35;
  _10 = *_9;
  _11 = (long unsigned int) _10;
  _12 = WordPos_18 << 3;
  _13 = _11 << _12;
  _14 = _8 | _13;
  *_5 = _14;

  <bb 7> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  WordPos_38 = WordPos_18 + 1;
  # DEBUG WordPos => WordPos_38

  <bb 8> [local count: 1073741824]:
  # WordPos_18 = PHI <0(4), WordPos_38(7)>
  # DEBUG WordPos => WordPos_18
  # DEBUG BEGIN_STMT
  if (WordPos_18 != 4)
    goto <bb 5>; [80.00%]
  else
    goto <bb 9>; [20.00%]

  <bb 9> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  NumberPos_32 = NumberPos_17 + 1;
  # DEBUG NumberPos => NumberPos_32

  <bb 10> [local count: 241290297]:
  # NumberPos_17 = PHI <NumberPos_32(9), 1(15)>
  # DEBUG NumberPos => NumberPos_17
  # DEBUG BEGIN_STMT
  _16 = _2 + 1;
  if (_16 >= NumberPos_17)
    goto <bb 4>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 26541933]:
  # _15 = PHI <_16(10)>
  # DEBUG BEGIN_STMT
  *Number_27(D) = _15;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Number_27(D));
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  goto <bb 14>; [100.00%]

  <bb 12> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  if (NumberLength_25(D) == 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 26541932]:
  # DEBUG BEGIN_STMT
  *Number_27(D) = 0;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 14> [local count: 106167729]:
  # RetVal_19 = PHI <0(11), 1(12), 0(13), 1(3)>
  # DEBUG RetVal => RetVal_19
  # DEBUG BEGIN_STMT
  return RetVal_19;

}



;; Function Crypto_LNNumberToBEByteArray (Crypto_LNNumberToBEByteArray, funcdef_no=18, decl_uid=5950, cgraph_uid=19, symbol_order=19)

Crypto_LNNumberToBEByteArray (const Crypto_LNWordType * Number, uint8 * Array, uint32 * ArrayLengthPtr)
{
  Std_ReturnType RetVal;
  Crypto_LNWordType ArrayPos;
  Crypto_LNWordType WordPos;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  const Crypto_LNWordType * _5;
  long unsigned int _6;
  unsigned char _7;
  unsigned char _8;
  int _9;
  long unsigned int _10;
  uint8 * _11;
  unsigned char _12;
  long unsigned int _13;
  long unsigned int _14;
  short unsigned int _15;
  short unsigned int _16;
  long unsigned int _17;

  <bb 2> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _1 = *ArrayLengthPtr_26(D);
  _2 = _1 >> 2;
  _3 = *Number_27(D);
  if (_2 < _3)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 26541932]:
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  # DEBUG ArrayPos => _13
  # DEBUG BEGIN_STMT
  ArrayPos_29 = _13 - NumberPos_18;
  # DEBUG ArrayPos => ArrayPos_29
  # DEBUG BEGIN_STMT
  ArrayPos_30 = ArrayPos_29 + 1;
  # DEBUG ArrayPos => ArrayPos_30
  # DEBUG BEGIN_STMT
  ArrayPos_31 = ArrayPos_30 * 4;
  # DEBUG ArrayPos => ArrayPos_31
  # DEBUG BEGIN_STMT
  # DEBUG WordPos => 0
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  ArrayPos_33 = ArrayPos_20 + 4294967295;
  # DEBUG ArrayPos => ArrayPos_33
  # DEBUG BEGIN_STMT
  _4 = NumberPos_18 * 4;
  _5 = Number_27(D) + _4;
  _6 = *_5;
  _7 = (unsigned char) WordPos_19;
  _8 = _7 << 3;
  _9 = (int) _8;
  _10 = _6 >> _9;
  _11 = Array_34(D) + ArrayPos_33;
  _12 = (unsigned char) _10;
  *_11 = _12;
  # DEBUG BEGIN_STMT
  WordPos_36 = WordPos_19 + 1;
  # DEBUG WordPos => WordPos_36

  <bb 5> [local count: 1073741824]:
  # WordPos_19 = PHI <0(3), WordPos_36(4)>
  # ArrayPos_20 = PHI <ArrayPos_31(3), ArrayPos_33(4)>
  # DEBUG ArrayPos => ArrayPos_20
  # DEBUG WordPos => WordPos_19
  # DEBUG BEGIN_STMT
  if (WordPos_19 != 4)
    goto <bb 4>; [80.00%]
  else
    goto <bb 6>; [20.00%]

  <bb 6> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  NumberPos_32 = NumberPos_18 + 1;
  # DEBUG NumberPos => NumberPos_32

  <bb 7> [local count: 241290297]:
  # NumberPos_18 = PHI <NumberPos_32(6), 1(10)>
  # DEBUG NumberPos => NumberPos_18
  # DEBUG BEGIN_STMT
  _13 = *Number_27(D);
  if (_13 >= NumberPos_18)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 26541933]:
  # _14 = PHI <_13(7)>
  # DEBUG BEGIN_STMT
  _15 = (short unsigned int) _14;
  _16 = _15 * 4;
  _17 = (long unsigned int) _16;
  *ArrayLengthPtr_26(D) = _17;

  <bb 9> [local count: 53083865]:
  # RetVal_21 = PHI <1(2), 0(8)>
  # DEBUG RetVal => RetVal_21
  # DEBUG BEGIN_STMT
  return RetVal_21;

}



;; Function Crypto_LNLEByteArrayToNumber (Crypto_LNLEByteArrayToNumber, funcdef_no=19, decl_uid=5955, cgraph_uid=20, symbol_order=20)

Crypto_LNLEByteArrayToNumber (const uint8 * Array, uint32 ArrayLength, Crypto_LNWordType * Number, Crypto_LNWordType NumberLength)
{
  Std_ReturnType RetVal;
  uint16 ArrayPos;
  Crypto_LNWordType WordPos;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  Crypto_LNWordType * _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  const uint8 * _11;
  unsigned char _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;

  <bb 2> [local count: 106167728]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  if (ArrayLength_26(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 3> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  _1 = ArrayLength_26(D) + 4294967295;
  _2 = _1 >> 2;
  _3 = _2 + 2;
  if (_3 > NumberLength_27(D))
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 26541932]:
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  _4 = NumberPos_19 * 4;
  _5 = Number_29(D) + _4;
  *_5 = 0;
  # DEBUG BEGIN_STMT
  # DEBUG WordPos => 0
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  # DEBUG ArrayPos => 4
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) NumberPos_19;
  _7 = _6 + 65535;
  ArrayPos_35 = _7 * 4;
  # DEBUG ArrayPos => ArrayPos_35
  # DEBUG BEGIN_STMT
  _8 = (short unsigned int) WordPos_20;
  ArrayPos_36 = _8 + ArrayPos_35;
  # DEBUG ArrayPos => ArrayPos_36
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) ArrayPos_36;
  if (_9 < ArrayLength_26(D))
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 429496730]:
  # DEBUG BEGIN_STMT
  _10 = *_5;
  _11 = Array_37(D) + _9;
  _12 = *_11;
  _13 = (long unsigned int) _12;
  _14 = WordPos_20 << 3;
  _15 = _13 << _14;
  _16 = _10 | _15;
  *_5 = _16;

  <bb 7> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  WordPos_39 = WordPos_20 + 1;
  # DEBUG WordPos => WordPos_39

  <bb 8> [local count: 1073741824]:
  # WordPos_20 = PHI <0(4), WordPos_39(7)>
  # DEBUG WordPos => WordPos_20
  # DEBUG BEGIN_STMT
  if (WordPos_20 != 4)
    goto <bb 5>; [80.00%]
  else
    goto <bb 9>; [20.00%]

  <bb 9> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  NumberPos_34 = NumberPos_19 + 1;
  # DEBUG NumberPos => NumberPos_34

  <bb 10> [local count: 241290297]:
  # NumberPos_19 = PHI <NumberPos_34(9), 1(15)>
  # DEBUG NumberPos => NumberPos_19
  # DEBUG BEGIN_STMT
  _18 = _2 + 1;
  if (_18 >= NumberPos_19)
    goto <bb 4>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 26541933]:
  # _17 = PHI <_18(10)>
  # DEBUG BEGIN_STMT
  *Number_29(D) = _17;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Number_29(D));
  goto <bb 14>; [100.00%]

  <bb 12> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  if (NumberLength_27(D) == 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 26541932]:
  # DEBUG BEGIN_STMT
  *Number_29(D) = 0;

  <bb 14> [local count: 106167729]:
  # RetVal_21 = PHI <0(11), 1(12), 0(13), 1(3)>
  # DEBUG RetVal => RetVal_21
  # DEBUG BEGIN_STMT
  return RetVal_21;

}



;; Function Crypto_LNNumberToLEByteArray (Crypto_LNNumberToLEByteArray, funcdef_no=20, decl_uid=5959, cgraph_uid=21, symbol_order=21)

Crypto_LNNumberToLEByteArray (const Crypto_LNWordType * Number, uint8 * Array, uint32 * ArrayLengthPtr)
{
  Std_ReturnType RetVal;
  Crypto_LNWordType ArrayPos;
  Crypto_LNWordType WordPos;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  const Crypto_LNWordType * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  uint8 * _9;
  unsigned char _10;
  long unsigned int _11;
  long unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  long unsigned int _15;

  <bb 2> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _1 = *ArrayLengthPtr_24(D);
  _2 = _1 >> 2;
  _3 = *Number_25(D);
  if (_2 < _3)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 26541932]:
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  # DEBUG ArrayPos => NumberPos_16
  # DEBUG BEGIN_STMT
  ArrayPos_27 = NumberPos_16 + 4294967295;
  # DEBUG ArrayPos => ArrayPos_27
  # DEBUG BEGIN_STMT
  ArrayPos_28 = ArrayPos_27 * 4;
  # DEBUG ArrayPos => ArrayPos_28
  # DEBUG BEGIN_STMT
  # DEBUG WordPos => 0
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  _4 = NumberPos_16 * 4;
  _5 = Number_25(D) + _4;
  _6 = *_5;
  _7 = WordPos_17 << 3;
  _8 = _6 >> _7;
  _9 = Array_30(D) + ArrayPos_18;
  _10 = (unsigned char) _8;
  *_9 = _10;
  # DEBUG BEGIN_STMT
  ArrayPos_32 = ArrayPos_18 + 1;
  # DEBUG ArrayPos => ArrayPos_32
  # DEBUG BEGIN_STMT
  WordPos_33 = WordPos_17 + 1;
  # DEBUG WordPos => WordPos_33

  <bb 5> [local count: 1073741824]:
  # WordPos_17 = PHI <0(3), WordPos_33(4)>
  # ArrayPos_18 = PHI <ArrayPos_28(3), ArrayPos_32(4)>
  # DEBUG ArrayPos => ArrayPos_18
  # DEBUG WordPos => WordPos_17
  # DEBUG BEGIN_STMT
  if (WordPos_17 != 4)
    goto <bb 4>; [80.00%]
  else
    goto <bb 6>; [20.00%]

  <bb 6> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  NumberPos_29 = NumberPos_16 + 1;
  # DEBUG NumberPos => NumberPos_29

  <bb 7> [local count: 241290297]:
  # NumberPos_16 = PHI <NumberPos_29(6), 1(10)>
  # DEBUG NumberPos => NumberPos_16
  # DEBUG BEGIN_STMT
  _11 = *Number_25(D);
  if (_11 >= NumberPos_16)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 26541933]:
  # _12 = PHI <_11(7)>
  # DEBUG BEGIN_STMT
  _13 = (short unsigned int) _12;
  _14 = _13 * 4;
  _15 = (long unsigned int) _14;
  *ArrayLengthPtr_24(D) = _15;

  <bb 9> [local count: 53083865]:
  # RetVal_19 = PHI <1(2), 0(8)>
  # DEBUG RetVal => RetVal_19
  # DEBUG BEGIN_STMT
  return RetVal_19;

}



;; Function Crypto_LNDivByTwo (Crypto_LNDivByTwo, funcdef_no=21, decl_uid=5962, cgraph_uid=22, symbol_order=22)

Crypto_LNDivByTwo (Crypto_LNWordType * Value, Crypto_LNWordType Overflow)
{
  Crypto_LNWordType DiffTmpVal2;
  Crypto_LNWordType DiffTmpVal1;
  Crypto_LNWordType i;
  long unsigned int _1;
  Crypto_LNWordType * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG DiffTmpVal2 => Overflow_10(D)
  # DEBUG BEGIN_STMT
  i_13 = *Value_12(D);
  # DEBUG i => i_13
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = i_7 * 4;
  _2 = Value_12(D) + _1;
  _3 = *_2;
  DiffTmpVal1_15 = _3 & 1;
  # DEBUG DiffTmpVal1 => DiffTmpVal1_15
  # DEBUG BEGIN_STMT
  _4 = _3 >> 1;
  # DEBUG BEGIN_STMT
  _5 = DiffTmpVal2_8 << 31;
  _6 = _4 | _5;
  *_2 = _6;
  # DEBUG BEGIN_STMT
  # DEBUG DiffTmpVal2 => DiffTmpVal1_15
  # DEBUG BEGIN_STMT
  i_17 = i_7 + 4294967295;
  # DEBUG i => i_17

  <bb 4> [local count: 1073741824]:
  # i_7 = PHI <i_13(2), i_17(3)>
  # DiffTmpVal2_8 = PHI <Overflow_10(D)(2), DiffTmpVal1_15(3)>
  # DEBUG DiffTmpVal2 => DiffTmpVal2_8
  # DEBUG i => i_7
  # DEBUG BEGIN_STMT
  if (i_7 != 0)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Value_12(D));
  return;

}



;; Function Crypto_LNAddition (Crypto_LNAddition, funcdef_no=22, decl_uid=5966, cgraph_uid=23, symbol_order=23)

Crypto_LNAddition (Crypto_LNWordType * Sum, const Crypto_LNWordType * Addend1, const Crypto_LNWordType * Addend2)
{
  Crypto_LNWordType Carry;
  Crypto_LNWordType MaxLength;
  Crypto_LNWordType MinLength;
  Crypto_LNWordType LoopCount;
  Crypto_LNDoubleWordType TempSum;
  const Crypto_LNWordType * LargestOperand;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  const Crypto_LNWordType * _4;
  long unsigned int _5;
  long long unsigned int _6;
  const Crypto_LNWordType * _7;
  long unsigned int _8;
  long long unsigned int _9;
  long long unsigned int _10;
  long long unsigned int _11;
  Crypto_LNWordType * _12;
  long unsigned int _13;
  long long unsigned int _14;
  long unsigned int _15;
  const Crypto_LNWordType * _16;
  long unsigned int _17;
  long long unsigned int _18;
  long long unsigned int _19;
  Crypto_LNWordType * _20;
  long unsigned int _21;
  long long unsigned int _22;
  uint8 _38;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Carry => 0
  # DEBUG BEGIN_STMT
  _1 = *Addend1_33(D);
  _2 = *Addend2_34(D);
  if (_1 > _2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  # DEBUG MinLength => _1
  # DEBUG BEGIN_STMT
  # DEBUG MaxLength => _2
  # DEBUG BEGIN_STMT
  # DEBUG LargestOperand => Addend2_34(D)

  <bb 4> [local count: 118111600]:
  # LargestOperand_23 = PHI <Addend1_33(D)(2), Addend2_34(D)(3)>
  # MinLength_26 = PHI <_2(2), _1(3)>
  # MaxLength_27 = PHI <_1(2), _2(3)>
  # DEBUG MaxLength => MaxLength_27
  # DEBUG MinLength => MinLength_26
  # DEBUG LargestOperand => LargestOperand_23
  # DEBUG BEGIN_STMT
  # DEBUG LoopCount => 1
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 955630220]:
  # DEBUG BEGIN_STMT
  _3 = LoopCount_24 * 4;
  _4 = Addend1_33(D) + _3;
  _5 = *_4;
  _6 = (long long unsigned int) _5;
  _7 = Addend2_34(D) + _3;
  _8 = *_7;
  _9 = (long long unsigned int) _8;
  _10 = _6 + _9;
  _11 = (long long unsigned int) Carry_28;
  TempSum_43 = _10 + _11;
  # DEBUG TempSum => TempSum_43
  # DEBUG BEGIN_STMT
  _12 = Sum_36(D) + _3;
  _13 = (long unsigned int) TempSum_43;
  *_12 = _13;
  # DEBUG BEGIN_STMT
  _14 = TempSum_43 >> 32;
  Carry_45 = (Crypto_LNWordType) _14;
  # DEBUG Carry => Carry_45
  # DEBUG BEGIN_STMT
  LoopCount_46 = LoopCount_24 + 1;
  # DEBUG LoopCount => LoopCount_46

  <bb 6> [local count: 1073741821]:
  # LoopCount_24 = PHI <1(4), LoopCount_46(5)>
  # Carry_28 = PHI <0(4), Carry_45(5)>
  # DEBUG Carry => Carry_28
  # DEBUG LoopCount => LoopCount_24
  # DEBUG BEGIN_STMT
  if (LoopCount_24 <= MinLength_26)
    goto <bb 5>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 118111600]:
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _15 = LoopCount_25 * 4;
  _16 = LargestOperand_23 + _15;
  _17 = *_16;
  _18 = (long long unsigned int) _17;
  _19 = (long long unsigned int) Carry_29;
  TempSum_39 = _18 + _19;
  # DEBUG TempSum => TempSum_39
  # DEBUG BEGIN_STMT
  _20 = Sum_36(D) + _15;
  _21 = _17 + Carry_29;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  _22 = TempSum_39 >> 32;
  Carry_41 = (Crypto_LNWordType) _22;
  # DEBUG Carry => Carry_41
  # DEBUG BEGIN_STMT
  LoopCount_42 = LoopCount_25 + 1;
  # DEBUG LoopCount => LoopCount_42

  <bb 9> [local count: 1073741824]:
  # LoopCount_25 = PHI <LoopCount_42(8), LoopCount_24(11)>
  # Carry_29 = PHI <Carry_41(8), Carry_28(11)>
  # DEBUG Carry => Carry_29
  # DEBUG LoopCount => LoopCount_25
  # DEBUG BEGIN_STMT
  if (LoopCount_25 <= MaxLength_27)
    goto <bb 8>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # Carry_35 = PHI <Carry_29(9)>
  # DEBUG BEGIN_STMT
  *Sum_36(D) = MaxLength_27;
  # DEBUG BEGIN_STMT
  _38 = (uint8) Carry_35;
  return _38;

}



;; Function Crypto_LNAdditionModular (Crypto_LNAdditionModular, funcdef_no=23, decl_uid=5971, cgraph_uid=24, symbol_order=24)

Crypto_LNAdditionModular (Crypto_LNWordType * Sum, const Crypto_LNWordType * Addend1, const Crypto_LNWordType * Addend2, const Crypto_LNWordType * Modulus)
{
  uint8 Borrow;
  uint8 Carry;
  Crypto_LNWordType Tmp;
  Crypto_LNWordType i;
  long unsigned int _1;
  long unsigned int _2;
  Crypto_LNWordType * _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _8;
  long unsigned int _9;
  Crypto_LNWordType * _10;
  unsigned char _11;
  long unsigned int _12;
  Crypto_LNWordType * _13;
  const Crypto_LNWordType * _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Carry => 0
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 0
  # DEBUG BEGIN_STMT
  Carry_33 = Crypto_LNAddition (Sum_29(D), Addend1_30(D), Addend2_31(D));
  # DEBUG Carry => Carry_33
  # DEBUG BEGIN_STMT
  _1 = *Sum_29(D);
  i_34 = _1 + 1;
  # DEBUG i => i_34
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _2 = i_21 * 4;
  _3 = Sum_29(D) + _2;
  *_3 = 0;
  # DEBUG BEGIN_STMT
  i_44 = i_21 + 1;
  # DEBUG i => i_44

  <bb 4> [local count: 1073741824]:
  # i_21 = PHI <i_34(2), i_44(3)>
  # DEBUG i => i_21
  # DEBUG BEGIN_STMT
  _4 = *Modulus_35(D);
  if (_4 >= i_21)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # _6 = PHI <_4(4)>
  # DEBUG BEGIN_STMT
  _5 = *Sum_29(D);
  if (_5 < _6)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 59055800]:
  if (Carry_33 == 1)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 20078972]:
  # DEBUG BEGIN_STMT
  _8 = _5 + 1;
  *Sum_29(D) = _8;
  # DEBUG BEGIN_STMT
  _9 = _8 * 4;
  _10 = Sum_29(D) + _9;
  *_10 = 1;
  goto <bb 17>; [100.00%]

  <bb 8> [local count: 98032628]:
  # DEBUG BEGIN_STMT
  _11 = Crypto_LNCompareNumbers (Sum_29(D), Modulus_35(D));
  if (_11 != 4)
    goto <bb 9>; [66.00%]
  else
    goto <bb 10>; [34.00%]

  <bb 9> [local count: 76034107]:
  # i_38 = PHI <1(8), 1(10)>
  # Borrow_7 = PHI <0(8), 0(10)>
  goto <bb 16>; [100.00%]

  <bb 10> [local count: 33331094]:
  if (Carry_33 == 1)
    goto <bb 9>; [34.00%]
  else
    goto <bb 17>; [66.00%]

  <bb 11> [local count: 615185048]:
  # DEBUG BEGIN_STMT
  _12 = i_22 * 4;
  _13 = Sum_29(D) + _12;
  Tmp_39 = *_13;
  # DEBUG Tmp => Tmp_39
  # DEBUG BEGIN_STMT
  _14 = Modulus_35(D) + _12;
  _15 = *_14;
  _16 = Tmp_39 - _15;
  _17 = (long unsigned int) Borrow_24;
  _18 = _16 - _17;
  *_13 = _18;
  # DEBUG BEGIN_STMT
  if (_18 >= Tmp_39)
    goto <bb 12>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 12> [local count: 307592524]:
  # DEBUG BEGIN_STMT
  _19 = *_14;
  if (_19 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 153796262]:
  if (Borrow_24 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [local count: 230694393]:
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 1

  <bb 15> [local count: 615185048]:
  # Borrow_23 = PHI <1(14), 0(11), Borrow_24(13)>
  # DEBUG Borrow => Borrow_23
  # DEBUG BEGIN_STMT
  i_41 = i_22 + 1;
  # DEBUG i => i_41

  <bb 16> [local count: 691219155]:
  # i_22 = PHI <i_38(9), i_41(15)>
  # Borrow_24 = PHI <Borrow_7(9), Borrow_23(15)>
  # DEBUG Borrow => Borrow_24
  # DEBUG i => i_22
  # DEBUG BEGIN_STMT
  _20 = *Modulus_35(D);
  if (_20 >= i_22)
    goto <bb 11>; [89.00%]
  else
    goto <bb 17>; [11.00%]

  <bb 17> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Sum_29(D));
  return;

}



;; Function Crypto_LNSubtractionModular (Crypto_LNSubtractionModular, funcdef_no=24, decl_uid=5980, cgraph_uid=25, symbol_order=25)

Crypto_LNSubtractionModular (Crypto_LNWordType * Difference, const Crypto_LNWordType * Minuend, const Crypto_LNWordType * Subtrahend, const Crypto_LNWordType * Modulus)
{
  Crypto_LNWordType Tmp2;
  Crypto_LNWordType Tmp;
  uint8 Borrow;
  Crypto_LNWordType i;
  long unsigned int _1;
  long unsigned int _2;
  const Crypto_LNWordType * _3;
  long unsigned int _4;
  long unsigned int _5;
  const Crypto_LNWordType * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  Crypto_LNWordType * _10;
  long unsigned int _11;
  long unsigned int _13;
  long unsigned int _14;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG i => 1
  goto <bb 12>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = *Minuend_30(D);
  if (_1 < i_15)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  _2 = i_15 * 4;
  _3 = Minuend_30(D) + _2;
  Tmp_31 = *_3;
  # DEBUG Tmp => Tmp_31

  <bb 5> [local count: 955630223]:
  # Tmp_18 = PHI <0(3), Tmp_31(4)>
  # DEBUG Tmp => Tmp_18
  # DEBUG BEGIN_STMT
  _4 = *Subtrahend_32(D);
  if (_4 < i_15)
    goto <bb 7>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  _5 = i_15 * 4;
  _6 = Subtrahend_32(D) + _5;
  Tmp2_33 = *_6;
  # DEBUG Tmp2 => Tmp2_33

  <bb 7> [local count: 955630223]:
  # Tmp2_19 = PHI <0(5), Tmp2_33(6)>
  # DEBUG Tmp2 => Tmp2_19
  # DEBUG BEGIN_STMT
  _7 = Tmp_18 - Tmp2_19;
  _8 = (long unsigned int) Borrow_17;
  _9 = i_15 * 4;
  _10 = Difference_25(D) + _9;
  _11 = _7 - _8;
  *_10 = _11;
  # DEBUG BEGIN_STMT
  if (_11 >= Tmp_18)
    goto <bb 8>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 8> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  if (Tmp2_19 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 238907556]:
  if (Borrow_17 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 358361334]:
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 1

  <bb 11> [local count: 955630223]:
  # Borrow_16 = PHI <1(10), 0(7), Borrow_17(9)>
  # DEBUG Borrow => Borrow_16
  # DEBUG BEGIN_STMT
  i_35 = i_15 + 1;
  # DEBUG i => i_35

  <bb 12> [local count: 1073741824]:
  # i_15 = PHI <1(2), i_35(11)>
  # Borrow_17 = PHI <0(2), Borrow_16(11)>
  # DEBUG Borrow => Borrow_17
  # DEBUG i => i_15
  # DEBUG BEGIN_STMT
  _13 = *Modulus_24(D);
  if (_13 >= i_15)
    goto <bb 3>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 118111601]:
  # _14 = PHI <_13(12)>
  # Borrow_12 = PHI <Borrow_17(12)>
  # DEBUG BEGIN_STMT
  *Difference_25(D) = _14;
  # DEBUG BEGIN_STMT
  if (Borrow_12 == 1)
    goto <bb 16>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 16> [local count: 40157944]:

  <bb 14> [local count: 365072222]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Borrow_28 = Crypto_LNAddition (Difference_25(D), Difference_25(D), Modulus_24(D));
  # DEBUG Borrow => Borrow_28
  # DEBUG BEGIN_STMT
  if (Borrow_28 == 0)
    goto <bb 17>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 17> [local count: 324914277]:
  goto <bb 14>; [100.00%]

  <bb 15> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Difference_25(D));
  return;

}



;; Function Crypto_LNInversion (Crypto_LNInversion, funcdef_no=25, decl_uid=5988, cgraph_uid=26, symbol_order=26)

Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Crypto_LNInversion (Crypto_LNWordType * InvValue, const Crypto_LNWordType * Value, Crypto_LNWordType * Tmp1Value, Crypto_LNWordType * Tmp2Value, Crypto_LNWordType * Tmp3Value, const Crypto_LNWordType * Modulus, struct Crypto_LNCtxType * CtxPtr)
{
  Crypto_ReturnType CompNumRes;
  Crypto_LNWordType i;
  Crypto_LNWordType AddResult;
  long unsigned int _1;
  const Crypto_LNWordType * _2;
  Crypto_LNWordType * _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  const Crypto_LNWordType * _7;
  long unsigned int _8;
  Crypto_LNWordType * _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  unsigned char _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _28;
  long unsigned int _29;
  Crypto_LNWordType * _30;
  Crypto_LNWordType * _32;
  long unsigned int _33;
  long unsigned int _34;

  <bb 2> [local count: 7596263]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 61460671]:
  # DEBUG BEGIN_STMT
  _1 = i_35 * 4;
  _2 = Value_46(D) + _1;
  _3 = Tmp1Value_54(D) + _1;
  _4 = *_2;
  *_3 = _4;
  # DEBUG BEGIN_STMT
  i_78 = i_35 + 1;
  # DEBUG i => i_78

  <bb 4> [local count: 69056934]:
  # i_35 = PHI <0(2), i_78(3)>
  # DEBUG i => i_35
  # DEBUG BEGIN_STMT
  _5 = *Value_46(D);
  if (_5 >= i_35)
    goto <bb 3>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 5> [local count: 61460671]:
  # DEBUG BEGIN_STMT
  _6 = i_36 * 4;
  _7 = Modulus_47(D) + _6;
  _9 = Tmp2Value_55(D) + _6;
  _10 = *_7;
  *_9 = _10;
  # DEBUG BEGIN_STMT
  i_76 = i_36 + 1;
  # DEBUG i => i_76

  <bb 6> [local count: 69056934]:
  # i_36 = PHI <i_76(5), 0(4)>
  # DEBUG i => i_36
  # DEBUG BEGIN_STMT
  _11 = *Modulus_47(D);
  if (_11 >= i_36)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 7596263]:
  # DEBUG BEGIN_STMT
  *Tmp3Value_48(D) = 1;
  # DEBUG BEGIN_STMT
  MEM[(Crypto_LNWordType *)Tmp3Value_48(D) + 4B] = 1;
  # DEBUG BEGIN_STMT
  *InvValue_51(D) = 0;
  # DEBUG BEGIN_STMT
  MEM[(Crypto_LNWordType *)InvValue_51(D) + 4B] = 0;
  # DEBUG BEGIN_STMT
  goto <bb 23>; [100.00%]

  <bb 8> [local count: 955630219]:
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (Tmp1Value_54(D), 0);
  # DEBUG BEGIN_STMT
  _12 = MEM[(Crypto_LNWordType *)Tmp3Value_48(D) + 4B];
  _13 = _12 & 1;
  if (_13 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 477815109]:
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (Tmp3Value_48(D), 0);
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 477815109]:
  # DEBUG BEGIN_STMT
  _14 = Crypto_LNAddition (Tmp3Value_48(D), Tmp3Value_48(D), Modulus_47(D));
  AddResult_68 = (Crypto_LNWordType) _14;
  # DEBUG AddResult => AddResult_68
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (Tmp3Value_48(D), AddResult_68);

  <bb 11> [local count: 955630219]:

  <bb 12> [local count: 1073741820]:
  # DEBUG BEGIN_STMT
  _15 = MEM[(Crypto_LNWordType *)Tmp1Value_54(D) + 4B];
  _16 = _15 & 1;
  if (_16 == 0)
    goto <bb 8>; [89.00%]
  else
    goto <bb 17>; [11.00%]

  <bb 13> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (Tmp2Value_55(D), 0);
  # DEBUG BEGIN_STMT
  _17 = MEM[(Crypto_LNWordType *)InvValue_51(D) + 4B];
  _18 = _17 & 1;
  if (_18 == 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [local count: 477815112]:
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (InvValue_51(D), 0);
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 477815112]:
  # DEBUG BEGIN_STMT
  _19 = Crypto_LNAddition (InvValue_51(D), InvValue_51(D), Modulus_47(D));
  AddResult_63 = (Crypto_LNWordType) _19;
  # DEBUG AddResult => AddResult_63
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (InvValue_51(D), AddResult_63);

  <bb 16> [local count: 955630225]:

  <bb 17> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _20 = MEM[(Crypto_LNWordType *)Tmp2Value_55(D) + 4B];
  _21 = _20 & 1;
  if (_21 == 0)
    goto <bb 13>; [89.00%]
  else
    goto <bb 18>; [11.00%]

  <bb 18> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  CompNumRes_56 = Crypto_LNCompareNumbers (Tmp1Value_54(D), Tmp2Value_55(D));
  # DEBUG CompNumRes => CompNumRes_56
  # DEBUG BEGIN_STMT
  if (CompNumRes_56 == 5)
    goto <bb 20>; [20.24%]
  else
    goto <bb 19>; [79.76%]

  <bb 19> [local count: 94205813]:
  if (CompNumRes_56 == 2)
    goto <bb 20>; [51.12%]
  else
    goto <bb 21>; [48.88%]

  <bb 20> [local count: 72063799]:
  # DEBUG BEGIN_STMT
  Crypto_LNSubtractionModular (Tmp1Value_54(D), Tmp1Value_54(D), Tmp2Value_55(D), Modulus_47(D));
  # DEBUG BEGIN_STMT
  Crypto_LNSubtractionModular (Tmp3Value_48(D), Tmp3Value_48(D), InvValue_51(D), Modulus_47(D));
  goto <bb 22>; [100.00%]

  <bb 21> [local count: 46047801]:
  # DEBUG BEGIN_STMT
  Crypto_LNSubtractionModular (Tmp2Value_55(D), Tmp2Value_55(D), Tmp1Value_54(D), Modulus_47(D));
  # DEBUG BEGIN_STMT
  Crypto_LNSubtractionModular (InvValue_51(D), InvValue_51(D), Tmp3Value_48(D), Modulus_47(D));

  <bb 22> [local count: 118111601]:

  <bb 23> [local count: 125707863]:
  # DEBUG BEGIN_STMT
  _22 = *Tmp1Value_54(D);
  if (_22 != 1)
    goto <bb 25>; [66.00%]
  else
    goto <bb 24>; [34.00%]

  <bb 24> [local count: 42740674]:
  _23 = MEM[(Crypto_LNWordType *)Tmp1Value_54(D) + 4B];
  if (_23 != 1)
    goto <bb 25>; [96.34%]
  else
    goto <bb 28>; [3.66%]

  <bb 25> [local count: 124143555]:
  _24 = *Tmp2Value_55(D);
  if (_24 != 1)
    goto <bb 27>; [66.00%]
  else
    goto <bb 26>; [34.00%]

  <bb 26> [local count: 42208809]:
  _25 = MEM[(Crypto_LNWordType *)Tmp2Value_55(D) + 4B];
  if (_25 != 1)
    goto <bb 27>; [96.34%]
  else
    goto <bb 28>; [3.66%]

  <bb 27> [local count: 122598712]:
  if (_22 != 0)
    goto <bb 12>; [96.34%]
  else
    goto <bb 28>; [3.66%]

  <bb 28> [local count: 7596264]:
  # _8 = PHI <1(24), _22(26), _22(27)>
  # DEBUG BEGIN_STMT
  if (_8 == 1)
    goto <bb 29>; [34.00%]
  else
    goto <bb 32>; [66.00%]

  <bb 29> [local count: 2582730]:
  _28 = MEM[(Crypto_LNWordType *)Tmp1Value_54(D) + 4B];
  if (_28 == 1)
    goto <bb 31>; [34.00%]
  else
    goto <bb 32>; [66.00%]

  <bb 30> [local count: 7104855]:
  # DEBUG BEGIN_STMT
  _29 = i_37 * 4;
  _30 = Tmp3Value_48(D) + _29;
  _32 = InvValue_51(D) + _29;
  _33 = *_30;
  *_32 = _33;
  # DEBUG BEGIN_STMT
  i_72 = i_37 + 1;
  # DEBUG i => i_72

  <bb 31> [local count: 7982983]:
  # i_37 = PHI <i_72(30), 0(29)>
  # DEBUG i => i_37
  # DEBUG BEGIN_STMT
  _34 = *Tmp3Value_48(D);
  if (_34 >= i_37)
    goto <bb 30>; [89.00%]
  else
    goto <bb 32>; [11.00%]

  <bb 32> [local count: 7596264]:
  # DEBUG BEGIN_STMT
  Crypto_LNModulo (InvValue_51(D), Modulus_47(D), CtxPtr_73(D));
  return;

}



;; Function Crypto_AL_Init (Crypto_AL_Init, funcdef_no=26, decl_uid=5990, cgraph_uid=27, symbol_order=27)

Crypto_AL_Init ()
{
  uint32 KeyElementId;
  uint32 KeyElementIndex;
  uint32 CryptoKeyId;
  struct Crypto_KeyElement * const * _1;
  long unsigned int _2;
  struct Crypto_KeyElement * const * _3;
  struct Crypto_KeyElement * _4;
  struct Crypto_AL_KeyDataType * _5;
  long unsigned int _6;
  struct Crypto_AL_KeyDataType * _7;
  const uint8 * _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 59046942]:
  # DEBUG BEGIN_STMT
  # DEBUG CryptoKeyId => 0
  # DEBUG BEGIN_STMT
  # DEBUG KeyElementIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG KeyElementId => 0
  # DEBUG BEGIN_STMT
  # DEBUG CryptoKeyId => 0
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = Crypto_Keys[CryptoKeyId_11].KeyType;
  _2 = KeyElementIndex_12 * 4;
  _3 = _1 + _2;
  _4 = *_3;
  KeyElementId_19 = _4->Id;
  # DEBUG KeyElementId => KeyElementId_19
  # DEBUG BEGIN_STMT
  _5 = Crypto_AL_Keys_Data[CryptoKeyId_11].KeyData;
  _6 = KeyElementIndex_12 * 12;
  _7 = _5 + _6;
  _8 = _7->RfKeyElemDataInit;
  _9 = _7->RfKeyElemDataSize;
  Crypto_AL_KeyElementSet (CryptoKeyId_11, KeyElementId_19, _8, _9);
  # DEBUG BEGIN_STMT
  KeyElementIndex_21 = KeyElementIndex_12 + 1;
  # DEBUG KeyElementIndex => KeyElementIndex_21

  <bb 4> [local count: 1073741824]:
  # KeyElementIndex_12 = PHI <KeyElementIndex_21(3), 0(8)>
  # DEBUG KeyElementIndex => KeyElementIndex_12
  # DEBUG BEGIN_STMT
  _10 = Crypto_AL_Keys_Data[CryptoKeyId_11].NumKeyData;
  if (_10 > KeyElementIndex_12)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_AL_AESCMAC_PrecalculateKeys (CryptoKeyId_11);
  # DEBUG BEGIN_STMT
  Crypto_Keys[CryptoKeyId_11].KeyState = 1;
  # DEBUG BEGIN_STMT
  CryptoKeyId_18 = CryptoKeyId_11 + 1;
  # DEBUG CryptoKeyId => CryptoKeyId_18

  <bb 6> [local count: 177158543]:
  # CryptoKeyId_11 = PHI <0(2), CryptoKeyId_18(5)>
  # DEBUG CryptoKeyId => CryptoKeyId_11
  # DEBUG BEGIN_STMT
  if (CryptoKeyId_11 != 2)
    goto <bb 8>; [66.67%]
  else
    goto <bb 7>; [33.33%]

  <bb 8> [local count: 118111600]:
  goto <bb 4>; [100.00%]

  <bb 7> [local count: 59046942]:
  return;

}


