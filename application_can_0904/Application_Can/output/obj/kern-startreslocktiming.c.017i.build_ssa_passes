__attribute__((target ("general-regs-only")))
OS_StartResLockTiming (struct os_resourcedynamic_t * rd, os_tick_t tLim)
{
  os_tick_t OS_hwtStartDelta;
  const struct os_isr_t * isr;
  const struct os_task_t * const taskCurrent;
  os_tick_t remaining;
  os_tick_t used;
  struct os_kerneldata_t * const kernel_data;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_executionTimer[0];
  _2 = _1->driver;
  _3 = _2->hwtStop;
  _4 = OS_executionTimer[0];
  _3 (_4);
  # DEBUG BEGIN_STMT
  used = OS_GetTimeUsed ();
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.accounting.etUsed;
  _6 = used + _5;
  OS_kernelData.accounting.etUsed = _6;
  # DEBUG BEGIN_STMT
  _7 = OS_kernelData.accounting.inFunction;
  if (_7 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  taskCurrent = OS_kernelData.taskCurrent;
  # DEBUG BEGIN_STMT
  _8 = taskCurrent->flags;
  _9 = (unsigned int) _8;
  _10 = _9 & 64;
  if (_10 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  _11 = taskCurrent->accounting;
  _12 = _11->etMax;
  _13 = OS_kernelData.accounting.etUsed;
  if (_12 < _13)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = taskCurrent->accounting;
  _15 = OS_kernelData.accounting.etUsed;
  _14->etMax = _15;
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _16 = OS_kernelData.accounting.inFunction;
  if (_16 == 3)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.0_17 = OS_isrTableBase;
  _18 = OS_kernelData.isrCurrent;
  _19 = (unsigned int) _18;
  _20 = _19 * 68;
  isr = OS_isrTableBase.0_17 + _20;
  # DEBUG BEGIN_STMT
  _21 = isr->flags;
  _22 = (unsigned int) _21;
  _23 = _22 & 64;
  if (_23 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _24 = isr->accounting;
  _25 = _24->etMax;
  _26 = OS_kernelData.accounting.etUsed;
  if (_25 < _26)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _27 = isr->accounting;
  _28 = OS_kernelData.accounting.etUsed;
  _27->etMax = _28;

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = OS_kernelData.accounting.etLimit;
  if (_29 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  _30 = OS_kernelData.accounting.etUsed;
  _31 = OS_kernelData.accounting.etLimit;
  if (_30 >= _31)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_ExceedExecTime ();
  goto <bb 22>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _32 = OS_kernelData.accounting.etLimit;
  if (_32 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  remaining = 4294967295;
  goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _33 = OS_kernelData.accounting.etLimit;
  _34 = OS_kernelData.accounting.etUsed;
  remaining = _33 - _34;

  <bb 16> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _35 = OS_kernelData.accounting.etUsed;
  rd->etUsed = _35;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = OS_kernelData.accounting.etLimit;
  rd->etLimit = _36;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _37 = OS_kernelData.accounting.etType;
  rd->etType = _37;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = OS_kernelData.inFunction;
  OS_kernelData.accounting.inFunction = _38;
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etUsed = 0;
  # DEBUG BEGIN_STMT
  if (tLim >= remaining)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etLimit = remaining;
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etLimit = tLim;
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etType = 2;

  <bb 19> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_hwtStartDelta = OS_kernelData.accounting.etLimit;
  # DEBUG BEGIN_STMT
  _39 = OS_executionTimer[0];
  _40 = _39->maxDelta;
  if (OS_hwtStartDelta > _40)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _41 = OS_executionTimer[0];
  OS_hwtStartDelta = _41->defDelta;

  <bb 21> :
  # DEBUG BEGIN_STMT
  _42 = OS_executionTimer[0];
  _43 = _42->driver;
  _44 = _43->hwtStart;
  _45 = OS_executionTimer[0];
  _46 = OS_kernelData.accounting.frc;
  _44 (_45, _46, OS_hwtStartDelta);

  <bb 22> :
  # DEBUG BEGIN_STMT
  return;

}


