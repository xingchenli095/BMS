Can_Ipw_ProcessRxMesgBuffer (const struct Can_ControllerConfigType * Can_pControllerConfig, const struct Can_HwObjectConfigType * Can_pHwObjectConfig, uint8 u8MbIdx)
{
  struct Flexcan_Ip_MsgBuffType * pReceivedDataBuffer;
  const struct Can_HwObjectConfigType * Can_pHwObject;
  static struct PduInfoType CanIf_PduInfo;
  static struct Can_HwType CanIf_Mailbox;
  Can_HwHandleType u8HwObjectID;
  unsigned char _1;
  int _2;
  int _3;
  unsigned int _4;
  unsigned int _5;
  const struct Can_HwObjectConfigType * _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  <unnamed type> _10;
  unsigned char _11;
  int _12;
  struct Flexcan_Ip_StateType * _13;
  unsigned char _14;
  int _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  <unnamed type> _19;
  void (*<T4c8>) (void) _20;
  void (*<T4c8>) (void) _21;
  void (*<T4c8>) (void) _22;
  void (*<T4c8>) (void) _23;
  unsigned char _24;
  int _25;
  struct Flexcan_Ip_StateType * _26;
  unsigned char _27;
  int _28;
  unsigned char _29;

  <bb 2> :
  # DEBUG BEGIN_STMT
  u8HwObjectID_31 = 0;
  # DEBUG u8HwObjectID => u8HwObjectID_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Can_pHwObject_32 = 0B;
  # DEBUG Can_pHwObject => Can_pHwObject_32
  # DEBUG BEGIN_STMT
  pReceivedDataBuffer_33 = 0B;
  # DEBUG pReceivedDataBuffer => pReceivedDataBuffer_33
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_35(D)->Can_u8ControllerID;
  _2 = (int) _1;
  _3 = (int) u8MbIdx_36(D);
  u8HwObjectID_37 = Can_Ipw_au16MbIdxToObjIDMap[_2][_3];
  # DEBUG u8HwObjectID => u8HwObjectID_37
  # DEBUG BEGIN_STMT
  if (u8HwObjectID_37 != 255)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 3> :
  _4 = (unsigned int) u8HwObjectID_37;
  _5 = _4 * 36;
  _6 = Can_pHwObjectConfig_38(D) + _5;
  _7 = _6->Can_bHwObjectUsesPolling;
  if (_7 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = (unsigned int) u8HwObjectID_37;
  _9 = _8 * 36;
  Can_pHwObject_39 = Can_pHwObjectConfig_38(D) + _9;
  # DEBUG Can_pHwObject => Can_pHwObject_39
  # DEBUG BEGIN_STMT
  _10 = Can_pHwObject_39->Can_eReceiveType;
  if (_10 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _11 = Can_pControllerConfig_35(D)->Can_u8ControllerID;
  _12 = (int) _11;
  _13 = &Can_Ipw_xStatus0;
  _14 = Can_pHwObject_39->Can_u8HwBufferIndex;
  _15 = (int) _14;
  pReceivedDataBuffer_46 = _13->mbs[_15].pMBmessage;
  # DEBUG pReceivedDataBuffer => pReceivedDataBuffer_46
  # DEBUG BEGIN_STMT
  Can_Ipw_ParseData (&CanIf_Mailbox, &CanIf_PduInfo, pReceivedDataBuffer_46, Can_pControllerConfig_35(D), Can_pHwObject_39);
  # DEBUG BEGIN_STMT
  _16 = Can_pControllerConfig_35(D)->Can_u8ControllerOffset;
  _17 = Can_pHwObject_39->Can_u8HwBufferIndex;
  _18 = Can_pHwObject_39->Can_bHwObjectUsesPolling;
  FlexCAN_Ip_Receive (_16, _17, 0B, _18);
  goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _19 = Can_pHwObject_39->Can_eReceiveType;
  if (_19 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (u8MbIdx_36(D) == 7)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (80, 0, 8, 1);
  # DEBUG BEGIN_STMT
  _20 = Can_pControllerConfig_35(D)->Can_pLegacyFiFoOvfNotif;
  if (_20 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _21 = Can_pControllerConfig_35(D)->Can_pLegacyFiFoOvfNotif;
  _21 ();
  goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (u8MbIdx_36(D) == 6)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _22 = Can_pControllerConfig_35(D)->Can_pLegacyFiFoWarnNotif;
  if (_22 != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _23 = Can_pControllerConfig_35(D)->Can_pLegacyFiFoWarnNotif;
  _23 ();
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _24 = Can_pControllerConfig_35(D)->Can_u8ControllerID;
  _25 = (int) _24;
  _26 = &Can_Ipw_xStatus0;
  _27 = Can_pHwObject_39->Can_u8HwBufferIndex;
  _28 = (int) _27;
  pReceivedDataBuffer_40 = _26->mbs[_28].pMBmessage;
  # DEBUG pReceivedDataBuffer => pReceivedDataBuffer_40
  # DEBUG BEGIN_STMT
  Can_Ipw_ParseData (&CanIf_Mailbox, &CanIf_PduInfo, pReceivedDataBuffer_40, Can_pControllerConfig_35(D), Can_pHwObject_39);
  # DEBUG BEGIN_STMT
  _29 = Can_pControllerConfig_35(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_RxFifo (_29, 0B);

  <bb 14> :
  # DEBUG BEGIN_STMT
  return;

}


Can_Ipw_ProcessTxMesgBuffer (const struct Can_ControllerConfigType * Can_pControllerConfig, const struct Can_HwObjectConfigType * Can_pHwObjectConfig, uint8 u8MbIdx)
{
  Can_HwHandleType u8HwObjectID;
  unsigned char _1;
  int _2;
  int _3;
  unsigned int _4;
  unsigned int _5;
  const struct Can_HwObjectConfigType * _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  const struct Can_HwObjectConfigType * _10;
  <unnamed type> _11;
  unsigned char _12;
  int _13;
  int _14;
  short unsigned int _15;

  <bb 2> :
  # DEBUG BEGIN_STMT
  u8HwObjectID_17 = 0;
  # DEBUG u8HwObjectID => u8HwObjectID_17
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_19(D)->Can_u8ControllerID;
  _2 = (int) _1;
  _3 = (int) u8MbIdx_20(D);
  u8HwObjectID_21 = Can_Ipw_au16MbIdxToObjIDMap[_2][_3];
  # DEBUG u8HwObjectID => u8HwObjectID_21
  # DEBUG BEGIN_STMT
  if (u8HwObjectID_21 != 255)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _4 = (unsigned int) u8HwObjectID_21;
  _5 = _4 * 36;
  _6 = Can_pHwObjectConfig_22(D) + _5;
  _7 = _6->Can_bHwObjectUsesPolling;
  if (_7 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = (unsigned int) u8HwObjectID_21;
  _9 = _8 * 36;
  _10 = Can_pHwObjectConfig_22(D) + _9;
  _11 = _10->Can_eReceiveType;
  if (_11 == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _12 = Can_pControllerConfig_19(D)->Can_u8ControllerID;
  _13 = (int) _12;
  _14 = (int) u8MbIdx_20(D);
  _15 = Can_Ipw_au16TxPduId[_13][_14];
  CanIf_TxConfirmation (_15);

  <bb 6> :
  return;

}


Can_Ipw_MainFunction_Mode (const struct Can_ControllerConfigType * Can_pControllerConfig, Can_ControllerStateType * Can_pControllerState)
{
  <unnamed type> _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  <unnamed type> _5;
  unsigned char _6;
  unsigned char _7;
  unsigned char _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = *Can_pControllerState_11(D);
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = Can_pControllerConfig_12(D)->Can_u8ControllerOffset;
  _3 = FlexCAN_Ip_GetStartMode_Privileged (_2);
  if (_3 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  *Can_pControllerState_11(D) = 2;
  # DEBUG BEGIN_STMT
  _4 = Can_pControllerConfig_12(D)->Can_u8AbstControllerID;
  CanIf_ControllerModeIndication (_4, 2);
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _5 = *Can_pControllerState_11(D);
  if (_5 == 2)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _6 = Can_pControllerConfig_12(D)->Can_u8ControllerOffset;
  _7 = FlexCAN_Ip_GetStartMode_Privileged (_6);
  if (_7 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  *Can_pControllerState_11(D) = 1;
  # DEBUG BEGIN_STMT
  _8 = Can_pControllerConfig_12(D)->Can_u8AbstControllerID;
  CanIf_ControllerModeIndication (_8, 1);

  <bb 8> :
  # DEBUG BEGIN_STMT
  return;

}


Can_Ipw_InitRx (const struct Can_ControllerConfigType * Can_pController)
{
  struct Flexcan_Ip_DataInfoType DataInfo;
  const struct Can_HwObjectConfigType * Can_pHwObject;
  uint8 u8HwObjRefIdx;
  unsigned char _1;
  const struct Can_HwObjectConfigType * const * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Can_HwObjectConfigType * const * _5;
  <unnamed type> _6;
  <unnamed type> _7;
  unsigned char _8;
  unsigned char _9;
  const struct Can_HwFilterType * _10;
  long unsigned int _11;
  unsigned char _12;
  unsigned char _13;
  const struct Can_HwFilterType * _14;
  long unsigned int _15;
  <unnamed type> _16;
  unsigned char u8HwObjRefIdx.3_17;
  unsigned char _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx_24 = 0;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Can_pController_26(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_SetRxMaskType_Privileged (_1, 1);
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx_28 = 0;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_28
  goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = Can_pController_26(D)->Can_ppHwObject;
  _3 = (unsigned int) u8HwObjRefIdx_19;
  _4 = _3 * 4;
  _5 = _2 + _4;
  Can_pHwObject_30 = *_5;
  # DEBUG Can_pHwObject => Can_pHwObject_30
  # DEBUG BEGIN_STMT
  _6 = Can_pHwObject_30->Can_eReceiveType;
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  DataInfo.fd_enable = 0;
  # DEBUG BEGIN_STMT
  DataInfo.data_length = 0;
  # DEBUG BEGIN_STMT
  _7 = Can_pHwObject_30->Can_IdMessage;
  if (_7 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DataInfo.msg_id_type = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  DataInfo.msg_id_type = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  _8 = Can_pController_26(D)->Can_u8ControllerOffset;
  _9 = Can_pHwObject_30->Can_u8HwBufferIndex;
  _10 = Can_pHwObject_30->Can_pHwFilterConfig;
  _11 = _10->Can_u32HwFilterCode;
  FlexCAN_Ip_ConfigRxMb (_8, _9, &DataInfo, _11);
  # DEBUG BEGIN_STMT
  _12 = Can_pController_26(D)->Can_u8ControllerOffset;
  _13 = Can_pHwObject_30->Can_u8HwBufferIndex;
  _14 = Can_pHwObject_30->Can_pHwFilterConfig;
  _15 = _14->Can_u32HwFilterMask;
  FlexCAN_Ip_SetRxIndividualMask_Privileged (_12, _13, _15);

  <bb 8> :
  # DEBUG BEGIN_STMT
  _16 = Can_pHwObject_30->Can_eReceiveType;
  if (_16 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Can_Ipw_InitLegacyFifoFilter (Can_pController_26(D), Can_pHwObject_30);

  <bb 10> :
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx.3_17 = u8HwObjRefIdx_19;
  u8HwObjRefIdx_38 = u8HwObjRefIdx.3_17 + 1;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_38

  <bb 11> :
  # u8HwObjRefIdx_19 = PHI <u8HwObjRefIdx_28(2), u8HwObjRefIdx_38(10)>
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_19
  # DEBUG BEGIN_STMT
  _18 = Can_pController_26(D)->Can_u8HwObjectRefCount;
  if (u8HwObjRefIdx_19 < _18)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  DataInfo ={v} {CLOBBER};
  return;

}


Can_Ipw_Write (const struct Can_ControllerConfigType * Can_pControllerConfig, const struct Can_HwObjectConfigType * Can_pHwObjectConfig, const struct Can_PduType * PduInfo)
{
  uint8 u8ObjIdx;
  struct Flexcan_Ip_DataInfoType DataInfo;
  Flexcan_Ip_StatusType eRetVal;
  <unnamed type> _1;
  long unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  long unsigned int _5;
  unsigned char _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char _9;
  unsigned char _10;
  const struct Can_BaudrateConfigType * _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  const struct Can_BaudrateConfigType * _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  int _22;
  unsigned char _23;
  int _24;
  int _25;
  int _26;
  short unsigned int _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  long unsigned int _31;
  uint8 * _32;
  unsigned char u8ObjIdx.9_33;
  unsigned char _34;
  Std_ReturnType iftmp.10_39;
  Std_ReturnType iftmp.10_70;
  Std_ReturnType iftmp.10_71;
  Std_ReturnType _72;

  <bb 2> :
  # DEBUG BEGIN_STMT
  eRetVal_43 = 1;
  # DEBUG eRetVal => eRetVal_43
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u8ObjIdx_44 = 0;
  # DEBUG u8ObjIdx => u8ObjIdx_44
  # DEBUG BEGIN_STMT
  DataInfo.msg_id_type = 0;
  # DEBUG BEGIN_STMT
  DataInfo.data_length = 0;
  # DEBUG BEGIN_STMT
  DataInfo.fd_padding = 0;
  # DEBUG BEGIN_STMT
  DataInfo.fd_enable = 0;
  # DEBUG BEGIN_STMT
  DataInfo.enable_brs = 0;
  # DEBUG BEGIN_STMT
  DataInfo.is_remote = 0;
  # DEBUG BEGIN_STMT
  DataInfo.is_polling = 0;
  # DEBUG BEGIN_STMT
  _1 = Can_pHwObjectConfig_53(D)->Can_eReceiveType;
  if (_1 == 3)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = PduInfo_54(D)->id;
  _3 = _2 >> 31;
  DataInfo.msg_id_type = _3;
  # DEBUG BEGIN_STMT
  _4 = PduInfo_54(D)->length;
  _5 = (long unsigned int) _4;
  DataInfo.data_length = _5;
  # DEBUG BEGIN_STMT
  _6 = Can_pHwObjectConfig_53(D)->Can_u8PaddingValue;
  DataInfo.fd_padding = _6;
  # DEBUG BEGIN_STMT
  _7 = PduInfo_54(D)->id;
  _8 = _7 >> 30;
  _9 = (unsigned char) _8;
  _10 = _9 & 1;
  DataInfo.fd_enable = _10;
  # DEBUG BEGIN_STMT
  _11 = Can_pControllerConfig_59(D)->Can_pBaudrateConfig;
  _12 = Can_pControllerConfig_59(D)->Can_u16DefaultBaudrateID;
  _13 = (unsigned int) _12;
  _14 = _13 * 24;
  _15 = _11 + _14;
  _16 = _15->Can_bBitRateSwitch;
  DataInfo.enable_brs = _16;
  # DEBUG BEGIN_STMT
  DataInfo.is_remote = 0;
  # DEBUG BEGIN_STMT
  _17 = Can_pHwObjectConfig_53(D)->Can_bHwObjectUsesPolling;
  DataInfo.is_polling = _17;

  <bb 4> :
  # u8ObjIdx_38 = PHI <u8ObjIdx_44(3), u8ObjIdx_68(7)>
  # DEBUG u8ObjIdx => u8ObjIdx_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _18 = Can_pControllerConfig_59(D)->Can_u8ControllerOffset;
  _19 = Can_pHwObjectConfig_53(D)->Can_u8HwBufferIndex;
  _20 = u8ObjIdx_38 + _19;
  eRetVal_64 = FlexCAN_Ip_GetTransferStatus (_18, _20);
  # DEBUG eRetVal => eRetVal_64
  # DEBUG BEGIN_STMT
  if (eRetVal_64 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _21 = Can_pControllerConfig_59(D)->Can_u8ControllerID;
  _22 = (int) _21;
  _23 = Can_pHwObjectConfig_53(D)->Can_u8HwBufferIndex;
  _24 = (int) _23;
  _25 = (int) u8ObjIdx_38;
  _26 = _24 + _25;
  _27 = PduInfo_54(D)->swPduHandle;
  Can_Ipw_au16TxPduId[_22][_26] = _27;
  # DEBUG BEGIN_STMT
  _28 = Can_pControllerConfig_59(D)->Can_u8ControllerOffset;
  _29 = Can_pHwObjectConfig_53(D)->Can_u8HwBufferIndex;
  _30 = u8ObjIdx_38 + _29;
  _31 = PduInfo_54(D)->id;
  _32 = PduInfo_54(D)->sdu;
  eRetVal_67 = FlexCAN_Ip_Send (_28, _30, &DataInfo, _31, _32);
  # DEBUG eRetVal => eRetVal_67

  <bb 6> :
  # eRetVal_35 = PHI <eRetVal_64(4), eRetVal_67(5)>
  # DEBUG eRetVal => eRetVal_35
  # DEBUG BEGIN_STMT
  u8ObjIdx.9_33 = u8ObjIdx_38;
  u8ObjIdx_68 = u8ObjIdx.9_33 + 1;
  # DEBUG u8ObjIdx => u8ObjIdx_68
  # DEBUG BEGIN_STMT
  _34 = Can_pHwObjectConfig_53(D)->Can_u8ObjectCount;
  if (u8ObjIdx_68 < _34)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  if (eRetVal_35 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # eRetVal_36 = PHI <eRetVal_43(2), eRetVal_35(6), eRetVal_35(7)>
  # DEBUG eRetVal => eRetVal_36
  # DEBUG BEGIN_STMT
  if (eRetVal_36 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  if (eRetVal_36 != 2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  eRetVal_69 = 1;
  # DEBUG eRetVal => eRetVal_69

  <bb 11> :
  # eRetVal_37 = PHI <eRetVal_36(8), eRetVal_36(9), eRetVal_69(10)>
  # DEBUG eRetVal => eRetVal_37
  # DEBUG BEGIN_STMT
  if (eRetVal_37 != 2)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  iftmp.10_71 = (Std_ReturnType) eRetVal_37;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.10_70 = 2;

  <bb 14> :
  # iftmp.10_39 = PHI <iftmp.10_71(12), iftmp.10_70(13)>
  _72 = iftmp.10_39;
  DataInfo ={v} {CLOBBER};
  return _72;

}


Can_Ipw_GetControllerRxErrorCounter (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  unsigned char _1;
  uint8 _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_3(D)->Can_u8ControllerOffset;
  _5 = FlexCAN_Ip_GetControllerRxErrorCounter (_1);
  return _5;

}


Can_Ipw_GetControllerTxErrorCounter (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  unsigned char _1;
  uint8 _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_3(D)->Can_u8ControllerOffset;
  _5 = FlexCAN_Ip_GetControllerTxErrorCounter (_1);
  return _5;

}


Can_Ipw_GetControllerErrorState (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  uint32 Error;
  unsigned char _1;
  long unsigned int _2;
  unsigned char _3;
  uint8 _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Error_4 = 0;
  # DEBUG Error => Error_4
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_6(D)->Can_u8ControllerOffset;
  Error_8 = FlexCAN_Ip_GetErrorStatus (_1);
  # DEBUG Error => Error_8
  # DEBUG BEGIN_STMT
  _2 = Error_8 >> 4;
  _3 = (unsigned char) _2;
  _9 = _3 & 3;
  return _9;

}


Can_Ipw_EnableControllerInterrupts (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  unsigned char _1;
  int _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _7;
  int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_12(D)->Can_u8ControllerID;
  _2 = (int) _1;
  _3 = Can_Ipw_abIsInterruptEnabled[_2];
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = Can_pControllerConfig_12(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_EnableInterrupts_Privileged (_4);
  # DEBUG BEGIN_STMT
  _5 = Can_pControllerConfig_12(D)->Can_bBusOffUsesPolling;
  if (_5 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = Can_pControllerConfig_12(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_SetErrorInt_Privileged (_6, 4, 1);

  <bb 5> :
  # DEBUG BEGIN_STMT
  _7 = Can_pControllerConfig_12(D)->Can_u8ControllerID;
  _8 = (int) _7;
  Can_Ipw_abIsInterruptEnabled[_8] = 1;

  <bb 6> :
  return;

}


Can_Ipw_DisableControllerInterrupts (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  unsigned char _1;
  int _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  int _6;
  unsigned char _7;
  unsigned char _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_11(D)->Can_u8ControllerID;
  _2 = (int) _1;
  _3 = Can_Ipw_abIsInterruptEnabled[_2];
  if (_3 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = Can_pControllerConfig_11(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_DisableInterrupts_Privileged (_4);
  # DEBUG BEGIN_STMT
  _5 = Can_pControllerConfig_11(D)->Can_u8ControllerID;
  _6 = (int) _5;
  Can_Ipw_abIsInterruptEnabled[_6] = 0;
  # DEBUG BEGIN_STMT
  _7 = Can_pControllerConfig_11(D)->Can_bBusOffUsesPolling;
  if (_7 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = Can_pControllerConfig_11(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_SetErrorInt_Privileged (_8, 4, 0);

  <bb 5> :
  return;

}


Can_Ipw_SetControllerToStopMode (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  uint8 u8Idx;
  const struct Can_HwObjectConfigType * Can_pHwObject;
  uint8 u8HwObjRefIdx;
  Std_ReturnType eReturnValue;
  unsigned char _1;
  <unnamed type> _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _7;
  unsigned char _8;
  const struct Can_HwObjectConfigType * const * _9;
  unsigned int _10;
  unsigned int _11;
  const struct Can_HwObjectConfigType * const * _12;
  <unnamed type> _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char u8Idx.7_17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char u8HwObjRefIdx.8_21;
  unsigned char _22;
  unsigned char _23;
  <unnamed type> _24;
  Std_ReturnType _50;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx_33 = 0;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u8Idx_34 = 0;
  # DEBUG u8Idx => u8Idx_34
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_36(D)->Can_u8ControllerOffset;
  _2 = FlexCAN_Ip_EnterFreezeMode_Privileged (_1);
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = Can_pControllerConfig_36(D)->Can_u8ControllerID;
  _4 = (int) _3;
  _5 = Can_Ipw_abIsInterruptEnabled[_4];
  if (_5 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = Can_pControllerConfig_36(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_DisableInterrupts_Privileged (_6);
  # DEBUG BEGIN_STMT
  _7 = Can_pControllerConfig_36(D)->Can_bBusOffUsesPolling;
  if (_7 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _8 = Can_pControllerConfig_36(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_SetErrorInt_Privileged (_8, 4, 0);

  <bb 6> :
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx_41 = 0;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_41
  goto <bb 12>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _9 = Can_pControllerConfig_36(D)->Can_ppHwObject;
  _10 = (unsigned int) u8HwObjRefIdx_26;
  _11 = _10 * 4;
  _12 = _9 + _11;
  Can_pHwObject_44 = *_12;
  # DEBUG Can_pHwObject => Can_pHwObject_44
  # DEBUG BEGIN_STMT
  _13 = Can_pHwObject_44->Can_eReceiveType;
  if (_13 == 3)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  u8Idx_46 = 0;
  # DEBUG u8Idx => u8Idx_46

  <bb 9> :
  # u8Idx_27 = PHI <u8Idx_46(8), u8Idx_48(9)>
  # DEBUG u8Idx => u8Idx_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = Can_pControllerConfig_36(D)->Can_u8ControllerOffset;
  _15 = Can_pHwObject_44->Can_u8HwBufferIndex;
  _16 = u8Idx_27 + _15;
  FlexCAN_Ip_AbortTransfer (_14, _16);
  # DEBUG BEGIN_STMT
  u8Idx.7_17 = u8Idx_27;
  u8Idx_48 = u8Idx.7_17 + 1;
  # DEBUG u8Idx => u8Idx_48
  # DEBUG BEGIN_STMT
  _18 = Can_pHwObject_44->Can_u8ObjectCount;
  if (u8Idx_48 < _18)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _19 = Can_pControllerConfig_36(D)->Can_u8ControllerOffset;
  _20 = Can_pHwObject_44->Can_u8HwBufferIndex;
  FlexCAN_Ip_AbortTransfer (_19, _20);

  <bb 11> :
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx.8_21 = u8HwObjRefIdx_26;
  u8HwObjRefIdx_49 = u8HwObjRefIdx.8_21 + 1;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_49

  <bb 12> :
  # u8HwObjRefIdx_26 = PHI <u8HwObjRefIdx_41(6), u8HwObjRefIdx_49(11)>
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_26
  # DEBUG BEGIN_STMT
  _22 = Can_pControllerConfig_36(D)->Can_u8HwObjectRefCount;
  if (u8HwObjRefIdx_26 < _22)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _23 = Can_pControllerConfig_36(D)->Can_u8ControllerOffset;
  _24 = FlexCAN_Ip_SetStopMode_Privileged (_23);
  eReturnValue_43 = (Std_ReturnType) _24;
  # DEBUG eReturnValue => eReturnValue_43
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  eReturnValue_38 = 1;
  # DEBUG eReturnValue => eReturnValue_38

  <bb 15> :
  # eReturnValue_25 = PHI <eReturnValue_43(13), eReturnValue_38(14)>
  # DEBUG eReturnValue => eReturnValue_25
  # DEBUG BEGIN_STMT
  _50 = eReturnValue_25;
  return _50;

}


Can_Ipw_SetControllerToStartMode (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  Flexcan_Ip_StatusType eRetVal;
  const struct Can_HwObjectConfigType * Can_pHwObject;
  uint8 u8HwObjRefIdx;
  unsigned char _1;
  unsigned char _2;
  int _3;
  struct Flexcan_Ip_StateType * _4;
  const struct Can_Ipw_HwChannelConfigType * _5;
  const struct Flexcan_Ip_ConfigType * _6;
  unsigned char _7;
  const struct Can_HwObjectConfigType * const * _8;
  unsigned int _9;
  unsigned int _10;
  const struct Can_HwObjectConfigType * const * _11;
  unsigned char _12;
  <unnamed type> _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char u8HwObjRefIdx.6_18;
  unsigned char _19;
  unsigned char _20;
  _Bool _21;
  Std_ReturnType _43;

  <bb 2> :
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx_27 = 0;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_27
  # DEBUG BEGIN_STMT
  Can_pHwObject_28 = 0B;
  # DEBUG Can_pHwObject => Can_pHwObject_28
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_30(D)->Can_u8ControllerOffset;
  _2 = Can_pControllerConfig_30(D)->Can_u8ControllerID;
  _3 = (int) _2;
  _4 = &Can_Ipw_xStatus0;
  _5 = Can_pControllerConfig_30(D)->HwChannelIpConfig;
  _6 = _5->pFlexcanIpHwConfig;
  eRetVal_32 = FlexCAN_Ip_Init_Privileged (_1, _4, _6);
  # DEBUG eRetVal => eRetVal_32
  # DEBUG BEGIN_STMT
  if (eRetVal_32 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _7 = Can_pControllerConfig_30(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_DisableInterrupts_Privileged (_7);
  # DEBUG BEGIN_STMT
  Can_Ipw_InitBaudrate (Can_pControllerConfig_30(D));
  # DEBUG BEGIN_STMT
  Can_Ipw_InitRx (Can_pControllerConfig_30(D));
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx_36 = 0;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_36
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = Can_pControllerConfig_30(D)->Can_ppHwObject;
  _9 = (unsigned int) u8HwObjRefIdx_22;
  _10 = _9 * 4;
  _11 = _8 + _10;
  Can_pHwObject_39 = *_11;
  # DEBUG Can_pHwObject => Can_pHwObject_39
  # DEBUG BEGIN_STMT
  _12 = Can_pHwObject_39->Can_bHwObjectUsesPolling;
  if (_12 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _13 = Can_pHwObject_39->Can_eReceiveType;
  switch (_13) <default: <L13> [INV], case 0: <L3> [INV], case 1 ... 2: <L4> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  _14 = Can_pControllerConfig_30(D)->Can_u8ControllerOffset;
  _15 = Can_pHwObject_39->Can_u8HwBufferIndex;
  _16 = Can_pHwObject_39->Can_bHwObjectUsesPolling;
  FlexCAN_Ip_Receive (_14, _15, 0B, _16);
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  _17 = Can_pControllerConfig_30(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_RxFifo (_17, 0B);
  # DEBUG BEGIN_STMT

  <bb 8> :
<L13>:
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx.6_18 = u8HwObjRefIdx_22;
  u8HwObjRefIdx_42 = u8HwObjRefIdx.6_18 + 1;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_42

  <bb 9> :
  # u8HwObjRefIdx_22 = PHI <u8HwObjRefIdx_36(3), u8HwObjRefIdx_42(8)>
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_22
  # DEBUG BEGIN_STMT
  _19 = Can_pControllerConfig_30(D)->Can_u8HwObjectRefCount;
  if (u8HwObjRefIdx_22 < _19)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _20 = Can_Ipw_SetControlerErrorInit (Can_pControllerConfig_30(D));
  _21 = _20 != 0;
  eRetVal_38 = (Flexcan_Ip_StatusType) _21;
  # DEBUG eRetVal => eRetVal_38

  <bb 11> :
  # eRetVal_23 = PHI <eRetVal_32(2), eRetVal_38(10)>
  # DEBUG eRetVal => eRetVal_23
  # DEBUG BEGIN_STMT
  _43 = (Std_ReturnType) eRetVal_23;
  return _43;

}


Can_Ipw_SetControlerErrorInit (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  Flexcan_Ip_StatusType eRetVal;
  unsigned char _1;
  int _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _7;
  Std_ReturnType _17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  eRetVal_10 = 0;
  # DEBUG eRetVal => eRetVal_10
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_12(D)->Can_u8ControllerID;
  _2 = (int) _1;
  _3 = Can_Ipw_abIsInterruptEnabled[_2];
  if (_3 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = Can_pControllerConfig_12(D)->Can_bBusOffUsesPolling;
  if (_4 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = Can_pControllerConfig_12(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_SetErrorInt_Privileged (_5, 4, 1);

  <bb 5> :
  # DEBUG BEGIN_STMT
  _6 = Can_pControllerConfig_12(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_EnableInterrupts_Privileged (_6);

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = Can_pControllerConfig_12(D)->Can_u8ControllerOffset;
  eRetVal_16 = FlexCAN_Ip_SetStartMode_Privileged (_7);
  # DEBUG eRetVal => eRetVal_16
  # DEBUG BEGIN_STMT
  _17 = (Std_ReturnType) eRetVal_16;
  return _17;

}


Can_Ipw_DeInit (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  unsigned char _1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_3(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_Deinit_Privileged (_1);
  return;

}


Can_Ipw_Init (const struct Can_ControllerConfigType * Can_pControllerConfig)
{
  uint8 u8HwBufferCount;
  const struct Can_HwObjectConfigType * Can_pHwObject;
  uint8 u8ObjIdx;
  uint8 u8HwObjRefIdx;
  Std_ReturnType eRetVal;
  unsigned char _1;
  unsigned char _2;
  int _3;
  struct Flexcan_Ip_StateType * _4;
  const struct Can_Ipw_HwChannelConfigType * _5;
  const struct Flexcan_Ip_ConfigType * _6;
  <unnamed type> _7;
  unsigned char _8;
  int _9;
  unsigned char _10;
  const struct Can_BaudrateConfigType * _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  const struct Can_BaudrateConfigType * _15;
  unsigned char _16;
  unsigned char _17;
  const struct Can_BaudrateConfigType * _18;
  short unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  const struct Can_BaudrateConfigType * _22;
  unsigned char _23;
  const struct Can_BaudrateConfigType * _24;
  short unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  const struct Can_BaudrateConfigType * _28;
  unsigned char _29;
  unsigned char _30;
  const struct Can_BaudrateConfigType * _31;
  short unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  const struct Can_BaudrateConfigType * _35;
  unsigned char _36;
  unsigned char _37;
  int _38;
  int _39;
  unsigned char u8HwBufferCount.0_40;
  const struct Can_HwObjectConfigType * const * _41;
  unsigned int _42;
  unsigned int _43;
  const struct Can_HwObjectConfigType * const * _44;
  <unnamed type> _45;
  unsigned char _46;
  int _47;
  unsigned char _48;
  int _49;
  int _50;
  int _51;
  unsigned char _52;
  unsigned char u8ObjIdx.1_53;
  unsigned char _54;
  unsigned char _55;
  int _56;
  unsigned char _57;
  int _58;
  unsigned char _59;
  unsigned char _60;
  int _61;
  unsigned char _62;
  int _63;
  unsigned char _64;
  unsigned char _65;
  int _66;
  unsigned char _67;
  unsigned char _68;
  int _69;
  unsigned char _70;
  unsigned char u8HwObjRefIdx.2_71;
  unsigned char _72;
  unsigned char _73;
  <unnamed type> _74;
  Std_ReturnType _102;

  <bb 2> :
  # DEBUG BEGIN_STMT
  eRetVal_84 = 1;
  # DEBUG eRetVal => eRetVal_84
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx_85 = 0;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_85
  # DEBUG BEGIN_STMT
  u8ObjIdx_86 = 0;
  # DEBUG u8ObjIdx => u8ObjIdx_86
  # DEBUG BEGIN_STMT
  Can_pHwObject_87 = 0B;
  # DEBUG Can_pHwObject => Can_pHwObject_87
  # DEBUG BEGIN_STMT
  u8HwBufferCount_88 = 0;
  # DEBUG u8HwBufferCount => u8HwBufferCount_88
  # DEBUG BEGIN_STMT
  _1 = Can_pControllerConfig_90(D)->Can_u8ControllerOffset;
  _2 = Can_pControllerConfig_90(D)->Can_u8ControllerID;
  _3 = (int) _2;
  _4 = &Can_Ipw_xStatus0;
  _5 = Can_pControllerConfig_90(D)->HwChannelIpConfig;
  _6 = _5->pFlexcanIpHwConfig;
  _7 = FlexCAN_Ip_Init_Privileged (_1, _4, _6);
  eRetVal_92 = (Std_ReturnType) _7;
  # DEBUG eRetVal => eRetVal_92
  # DEBUG BEGIN_STMT
  _8 = Can_pControllerConfig_90(D)->Can_u8ControllerID;
  _9 = (int) _8;
  Can_Ipw_abIsInterruptEnabled[_9] = 1;
  # DEBUG BEGIN_STMT
  if (eRetVal_92 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _10 = Can_pControllerConfig_90(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_DisableInterrupts_Privileged (_10);
  # DEBUG BEGIN_STMT
  _11 = Can_pControllerConfig_90(D)->Can_pBaudrateConfig;
  _12 = Can_pControllerConfig_90(D)->Can_u16DefaultBaudrateID;
  _13 = (unsigned int) _12;
  _14 = _13 * 24;
  _15 = _11 + _14;
  _16 = _15->Can_bFDFrame;
  if (_16 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _17 = Can_pControllerConfig_90(D)->Can_u8ControllerOffset;
  _18 = Can_pControllerConfig_90(D)->Can_pBaudrateConfig;
  _19 = Can_pControllerConfig_90(D)->Can_u16DefaultBaudrateID;
  _20 = (unsigned int) _19;
  _21 = _20 * 24;
  _22 = _18 + _21;
  _23 = _22->Can_bTrcvDelayEnable;
  _24 = Can_pControllerConfig_90(D)->Can_pBaudrateConfig;
  _25 = Can_pControllerConfig_90(D)->Can_u16DefaultBaudrateID;
  _26 = (unsigned int) _25;
  _27 = _26 * 24;
  _28 = _24 + _27;
  _29 = _28->Can_u8TrcvDelayCompOffset;
  FlexCAN_Ip_SetTDCOffset_Privileged (_17, _23, _29);

  <bb 5> :
  # DEBUG BEGIN_STMT
  _30 = Can_pControllerConfig_90(D)->Can_u8ControllerOffset;
  _31 = Can_pControllerConfig_90(D)->Can_pBaudrateConfig;
  _32 = Can_pControllerConfig_90(D)->Can_u16DefaultBaudrateID;
  _33 = (unsigned int) _32;
  _34 = _33 * 24;
  _35 = _31 + _34;
  _36 = _35->Can_u8TxArbitrationStartDelay;
  FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged (_30, _36);
  # DEBUG BEGIN_STMT
  Can_Ipw_InitRx (Can_pControllerConfig_90(D));

  <bb 6> :
  # DEBUG BEGIN_STMT
  u8HwBufferCount_98 = 0;
  # DEBUG u8HwBufferCount => u8HwBufferCount_98
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _37 = Can_pControllerConfig_90(D)->Can_u8ControllerID;
  _38 = (int) _37;
  _39 = (int) u8HwBufferCount_77;
  Can_Ipw_au16MbIdxToObjIDMap[_38][_39] = 255;
  # DEBUG BEGIN_STMT
  u8HwBufferCount.0_40 = u8HwBufferCount_77;
  u8HwBufferCount_113 = u8HwBufferCount.0_40 + 1;
  # DEBUG u8HwBufferCount => u8HwBufferCount_113

  <bb 8> :
  # u8HwBufferCount_77 = PHI <u8HwBufferCount_98(6), u8HwBufferCount_113(7)>
  # DEBUG u8HwBufferCount => u8HwBufferCount_77
  # DEBUG BEGIN_STMT
  if (u8HwBufferCount_77 <= 63)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx_99 = 0;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_99
  goto <bb 17>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _41 = Can_pControllerConfig_90(D)->Can_ppHwObject;
  _42 = (unsigned int) u8HwObjRefIdx_75;
  _43 = _42 * 4;
  _44 = _41 + _43;
  Can_pHwObject_103 = *_44;
  # DEBUG Can_pHwObject => Can_pHwObject_103
  # DEBUG BEGIN_STMT
  _45 = Can_pHwObject_103->Can_eReceiveType;
  switch (_45) <default: <L19> [INV], case 0: <L12> [INV], case 1: <L13> [INV], case 3: <L8> [INV]>

  <bb 11> :
<L8>:
  # DEBUG BEGIN_STMT
  u8ObjIdx_104 = 0;
  # DEBUG u8ObjIdx => u8ObjIdx_104
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _46 = Can_pControllerConfig_90(D)->Can_u8ControllerID;
  _47 = (int) _46;
  _48 = Can_pHwObject_103->Can_u8HwBufferIndex;
  _49 = (int) _48;
  _50 = (int) u8ObjIdx_76;
  _51 = _49 + _50;
  _52 = Can_pHwObject_103->Can_HwObjectID;
  Can_Ipw_au16MbIdxToObjIDMap[_47][_51] = _52;
  # DEBUG BEGIN_STMT
  u8ObjIdx.1_53 = u8ObjIdx_76;
  u8ObjIdx_106 = u8ObjIdx.1_53 + 1;
  # DEBUG u8ObjIdx => u8ObjIdx_106

  <bb 13> :
  # u8ObjIdx_76 = PHI <u8ObjIdx_104(11), u8ObjIdx_106(12)>
  # DEBUG u8ObjIdx => u8ObjIdx_76
  # DEBUG BEGIN_STMT
  _54 = Can_pHwObject_103->Can_u8ObjectCount;
  if (u8ObjIdx_76 < _54)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
<L12>:
  # DEBUG BEGIN_STMT
  _55 = Can_pControllerConfig_90(D)->Can_u8ControllerID;
  _56 = (int) _55;
  _57 = Can_pHwObject_103->Can_u8HwBufferIndex;
  _58 = (int) _57;
  _59 = Can_pHwObject_103->Can_HwObjectID;
  Can_Ipw_au16MbIdxToObjIDMap[_56][_58] = _59;
  # DEBUG BEGIN_STMT
  goto <bb 16>; [INV]

  <bb 15> :
<L13>:
  # DEBUG BEGIN_STMT
  _60 = Can_pControllerConfig_90(D)->Can_u8ControllerID;
  _61 = (int) _60;
  _62 = Can_pHwObject_103->Can_u8HwBufferIndex;
  _63 = (int) _62;
  _64 = Can_pHwObject_103->Can_HwObjectID;
  Can_Ipw_au16MbIdxToObjIDMap[_61][_63] = _64;
  # DEBUG BEGIN_STMT
  _65 = Can_pControllerConfig_90(D)->Can_u8ControllerID;
  _66 = (int) _65;
  _67 = Can_pHwObject_103->Can_HwObjectID;
  Can_Ipw_au16MbIdxToObjIDMap[_66][6] = _67;
  # DEBUG BEGIN_STMT
  _68 = Can_pControllerConfig_90(D)->Can_u8ControllerID;
  _69 = (int) _68;
  _70 = Can_pHwObject_103->Can_HwObjectID;
  Can_Ipw_au16MbIdxToObjIDMap[_69][7] = _70;
  # DEBUG BEGIN_STMT

  <bb 16> :
<L19>:
  # DEBUG BEGIN_STMT
  u8HwObjRefIdx.2_71 = u8HwObjRefIdx_75;
  u8HwObjRefIdx_111 = u8HwObjRefIdx.2_71 + 1;
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_111

  <bb 17> :
  # u8HwObjRefIdx_75 = PHI <u8HwObjRefIdx_99(9), u8HwObjRefIdx_111(16)>
  # DEBUG u8HwObjRefIdx => u8HwObjRefIdx_75
  # DEBUG BEGIN_STMT
  _72 = Can_pControllerConfig_90(D)->Can_u8HwObjectRefCount;
  if (u8HwObjRefIdx_75 < _72)
    goto <bb 10>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _73 = Can_pControllerConfig_90(D)->Can_u8ControllerOffset;
  _74 = FlexCAN_Ip_SetStopMode_Privileged (_73);
  eRetVal_101 = (Std_ReturnType) _74;
  # DEBUG eRetVal => eRetVal_101
  # DEBUG BEGIN_STMT
  _102 = eRetVal_101;
  return _102;

}


Can_Ipw_InitBaudrate (const struct Can_ControllerConfigType * ControllerConfig)
{
  uint16 BaudRateConfigID;
  const struct Can_BaudrateConfigType * _1;
  unsigned int _2;
  unsigned int _3;
  const struct Can_BaudrateConfigType * _4;
  unsigned char _5;
  unsigned char _6;
  const struct Can_BaudrateConfigType * _7;
  unsigned int _8;
  unsigned int _9;
  const struct Can_BaudrateConfigType * _10;
  unsigned char _11;
  const struct Can_BaudrateConfigType * _12;
  unsigned int _13;
  unsigned int _14;
  const struct Can_BaudrateConfigType * _15;
  unsigned char _16;
  unsigned char _17;
  const struct Can_BaudrateConfigType * _18;
  unsigned int _19;
  unsigned int _20;
  const struct Can_BaudrateConfigType * _21;
  unsigned char _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  BaudRateConfigID_26 = ControllerConfig_25(D)->Can_u16DefaultBaudrateID;
  # DEBUG BaudRateConfigID => BaudRateConfigID_26
  # DEBUG BEGIN_STMT
  _1 = ControllerConfig_25(D)->Can_pBaudrateConfig;
  _2 = (unsigned int) BaudRateConfigID_26;
  _3 = _2 * 24;
  _4 = _1 + _3;
  _5 = _4->Can_bFDFrame;
  if (_5 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _6 = ControllerConfig_25(D)->Can_u8ControllerOffset;
  _7 = ControllerConfig_25(D)->Can_pBaudrateConfig;
  _8 = (unsigned int) BaudRateConfigID_26;
  _9 = _8 * 24;
  _10 = _7 + _9;
  _11 = _10->Can_bTrcvDelayEnable;
  _12 = ControllerConfig_25(D)->Can_pBaudrateConfig;
  _13 = (unsigned int) BaudRateConfigID_26;
  _14 = _13 * 24;
  _15 = _12 + _14;
  _16 = _15->Can_u8TrcvDelayCompOffset;
  FlexCAN_Ip_SetTDCOffset_Privileged (_6, _11, _16);

  <bb 4> :
  # DEBUG BEGIN_STMT
  _17 = ControllerConfig_25(D)->Can_u8ControllerOffset;
  _18 = ControllerConfig_25(D)->Can_pBaudrateConfig;
  _19 = (unsigned int) BaudRateConfigID_26;
  _20 = _19 * 24;
  _21 = _18 + _20;
  _22 = _21->Can_u8TxArbitrationStartDelay;
  FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged (_17, _22);
  return;

}


Can_Ipw_InitLegacyFifoFilter (const struct Can_ControllerConfigType * Can_pController, const struct Can_HwObjectConfigType * Can_pHwObject)
{
  struct Flexcan_Ip_IdTableType RxFifoFilters[128];
  Flexcan_Ip_RxFifoIdElementFormatType eElementFormat;
  uint8 u8FiFoFilterIndvCount;
  uint32 u32HwFilterMask;
  uint8 u8HwFilterCount;
  uint8 u8FilterIdx;
  unsigned char _1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  unsigned char _5;
  unsigned char _6;
  <unnamed type> _7;
  <unnamed type> _8;
  const struct Can_HwFilterType * _9;
  unsigned int _10;
  unsigned int _11;
  const struct Can_HwFilterType * _12;
  long unsigned int _13;
  long unsigned int _14;
  const struct Can_HwFilterType * _15;
  unsigned int _16;
  unsigned int _17;
  const struct Can_HwFilterType * _18;
  long unsigned int _19;
  long unsigned int _20;
  <unnamed type> _21;
  unsigned char _22;
  <unnamed type> _23;
  const struct Can_HwFilterType * _24;
  unsigned int _25;
  unsigned int _26;
  const struct Can_HwFilterType * _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  const struct Can_HwFilterType * _31;
  unsigned int _32;
  unsigned int _33;
  sizetype _34;
  const struct Can_HwFilterType * _35;
  long unsigned int _36;
  long unsigned int _37;
  const struct Can_HwFilterType * _38;
  unsigned int _39;
  unsigned int _40;
  const struct Can_HwFilterType * _41;
  long unsigned int _42;
  long unsigned int _43;
  const struct Can_HwFilterType * _44;
  unsigned int _45;
  unsigned int _46;
  sizetype _47;
  const struct Can_HwFilterType * _48;
  long unsigned int _49;
  long unsigned int _50;
  unsigned char _51;
  <unnamed type> _52;
  const struct Can_HwFilterType * _53;
  unsigned int _54;
  unsigned int _55;
  const struct Can_HwFilterType * _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  const struct Can_HwFilterType * _60;
  unsigned int _61;
  unsigned int _62;
  sizetype _63;
  const struct Can_HwFilterType * _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  const struct Can_HwFilterType * _68;
  unsigned int _69;
  unsigned int _70;
  sizetype _71;
  const struct Can_HwFilterType * _72;
  long unsigned int _73;
  long unsigned int _74;
  long unsigned int _75;
  const struct Can_HwFilterType * _76;
  unsigned int _77;
  unsigned int _78;
  sizetype _79;
  const struct Can_HwFilterType * _80;
  long unsigned int _81;
  long unsigned int _82;
  const struct Can_HwFilterType * _83;
  unsigned int _84;
  unsigned int _85;
  const struct Can_HwFilterType * _86;
  long unsigned int _87;
  long unsigned int _88;
  long unsigned int _89;
  const struct Can_HwFilterType * _90;
  unsigned int _91;
  unsigned int _92;
  sizetype _93;
  const struct Can_HwFilterType * _94;
  long unsigned int _95;
  long unsigned int _96;
  long unsigned int _97;
  const struct Can_HwFilterType * _98;
  unsigned int _99;
  unsigned int _100;
  sizetype _101;
  const struct Can_HwFilterType * _102;
  long unsigned int _103;
  long unsigned int _104;
  long unsigned int _105;
  const struct Can_HwFilterType * _106;
  unsigned int _107;
  unsigned int _108;
  sizetype _109;
  const struct Can_HwFilterType * _110;
  long unsigned int _111;
  long unsigned int _112;
  unsigned char _113;
  unsigned char u8FilterIdx.4_114;
  unsigned char _115;
  unsigned char _116;
  long unsigned int _117;
  const struct Can_HwFilterType * _118;
  unsigned int _119;
  unsigned int _120;
  const struct Can_HwFilterType * _121;
  int _122;
  long unsigned int _123;
  <unnamed type> _124;
  int _125;
  int _126;
  int _127;
  unsigned char u8FilterIdx.5_128;
  unsigned char _129;

  <bb 2> :
  # DEBUG BEGIN_STMT
  u8FilterIdx_141 = 0;
  # DEBUG u8FilterIdx => u8FilterIdx_141
  # DEBUG BEGIN_STMT
  u8HwFilterCount_142 = 0;
  # DEBUG u8HwFilterCount => u8HwFilterCount_142
  # DEBUG BEGIN_STMT
  u32HwFilterMask_143 = 0;
  # DEBUG u32HwFilterMask => u32HwFilterMask_143
  # DEBUG BEGIN_STMT
  u8FiFoFilterIndvCount_144 = 0;
  # DEBUG u8FiFoFilterIndvCount => u8FiFoFilterIndvCount_144
  # DEBUG BEGIN_STMT
  eElementFormat_145 = 0;
  # DEBUG eElementFormat => eElementFormat_145
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Can_pHwObject_147(D)->Can_u8HwFilterCount;
  _2 = _1 / 4;
  _3 = (unsigned int) _2;
  _4 = _3 + 6;
  if (_4 <= 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _5 = Can_pHwObject_147(D)->Can_u8HwFilterCount;
  _6 = _5 / 4;
  u8FiFoFilterIndvCount_149 = _6 + 6;
  # DEBUG u8FiFoFilterIndvCount => u8FiFoFilterIndvCount_149
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  u8FiFoFilterIndvCount_148 = 32;
  # DEBUG u8FiFoFilterIndvCount => u8FiFoFilterIndvCount_148

  <bb 5> :
  # u8FiFoFilterIndvCount_135 = PHI <u8FiFoFilterIndvCount_149(3), u8FiFoFilterIndvCount_148(4)>
  # DEBUG u8FiFoFilterIndvCount => u8FiFoFilterIndvCount_135
  # DEBUG BEGIN_STMT
  u8FilterIdx_150 = 0;
  # DEBUG u8FilterIdx => u8FilterIdx_150
  goto <bb 18>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = Can_pController_151(D)->Can_eLegacyAcceptanceMode;
  if (_7 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  u8HwFilterCount_170 = Can_pHwObject_147(D)->Can_u8HwFilterCount;
  # DEBUG u8HwFilterCount => u8HwFilterCount_170
  # DEBUG BEGIN_STMT
  u32HwFilterMask_171 = 3221225472;
  # DEBUG u32HwFilterMask => u32HwFilterMask_171
  # DEBUG BEGIN_STMT
  eElementFormat_172 = 0;
  # DEBUG eElementFormat => eElementFormat_172
  # DEBUG BEGIN_STMT
  _8 = Can_pHwObject_147(D)->Can_IdMessage;
  if (_8 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _9 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _10 = (unsigned int) u8FilterIdx_130;
  _11 = _10 * 8;
  _12 = _9 + _11;
  _13 = _12->Can_u32HwFilterMask;
  _14 = _13 << 1;
  u32HwFilterMask_174 = u32HwFilterMask_171 | _14;
  # DEBUG u32HwFilterMask => u32HwFilterMask_174
  goto <bb 17>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _15 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _16 = (unsigned int) u8FilterIdx_130;
  _17 = _16 * 8;
  _18 = _15 + _17;
  _19 = _18->Can_u32HwFilterMask;
  _20 = _19 << 19;
  u32HwFilterMask_173 = u32HwFilterMask_171 | _20;
  # DEBUG u32HwFilterMask => u32HwFilterMask_173
  goto <bb 17>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _21 = Can_pController_151(D)->Can_eLegacyAcceptanceMode;
  if (_21 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _22 = Can_pHwObject_147(D)->Can_u8HwFilterCount;
  u8HwFilterCount_163 = _22 * 2;
  # DEBUG u8HwFilterCount => u8HwFilterCount_163
  # DEBUG BEGIN_STMT
  u32HwFilterMask_164 = 3221274624;
  # DEBUG u32HwFilterMask => u32HwFilterMask_164
  # DEBUG BEGIN_STMT
  eElementFormat_165 = 1;
  # DEBUG eElementFormat => eElementFormat_165
  # DEBUG BEGIN_STMT
  _23 = Can_pHwObject_147(D)->Can_IdMessage;
  if (_23 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _24 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _25 = (unsigned int) u8FilterIdx_130;
  _26 = _25 * 16;
  _27 = _24 + _26;
  _28 = _27->Can_u32HwFilterMask;
  _29 = _28 >> 15;
  _30 = _29 << 16;
  u32HwFilterMask_168 = u32HwFilterMask_164 | _30;
  # DEBUG u32HwFilterMask => u32HwFilterMask_168
  # DEBUG BEGIN_STMT
  _31 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _32 = (unsigned int) u8FilterIdx_130;
  _33 = _32 * 16;
  _34 = _33 + 8;
  _35 = _31 + _34;
  _36 = _35->Can_u32HwFilterMask;
  _37 = _36 >> 15;
  u32HwFilterMask_169 = u32HwFilterMask_168 | _37;
  # DEBUG u32HwFilterMask => u32HwFilterMask_169
  goto <bb 17>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _38 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _39 = (unsigned int) u8FilterIdx_130;
  _40 = _39 * 16;
  _41 = _38 + _40;
  _42 = _41->Can_u32HwFilterMask;
  _43 = _42 << 19;
  u32HwFilterMask_166 = u32HwFilterMask_164 | _43;
  # DEBUG u32HwFilterMask => u32HwFilterMask_166
  # DEBUG BEGIN_STMT
  _44 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _45 = (unsigned int) u8FilterIdx_130;
  _46 = _45 * 16;
  _47 = _46 + 8;
  _48 = _44 + _47;
  _49 = _48->Can_u32HwFilterMask;
  _50 = _49 << 3;
  u32HwFilterMask_167 = u32HwFilterMask_166 | _50;
  # DEBUG u32HwFilterMask => u32HwFilterMask_167
  goto <bb 17>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _51 = Can_pHwObject_147(D)->Can_u8HwFilterCount;
  u8HwFilterCount_152 = _51 * 4;
  # DEBUG u8HwFilterCount => u8HwFilterCount_152
  # DEBUG BEGIN_STMT
  u32HwFilterMask_153 = 0;
  # DEBUG u32HwFilterMask => u32HwFilterMask_153
  # DEBUG BEGIN_STMT
  eElementFormat_154 = 2;
  # DEBUG eElementFormat => eElementFormat_154
  # DEBUG BEGIN_STMT
  _52 = Can_pHwObject_147(D)->Can_IdMessage;
  if (_52 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _53 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _54 = (unsigned int) u8FilterIdx_130;
  _55 = _54 * 32;
  _56 = _53 + _55;
  _57 = _56->Can_u32HwFilterMask;
  _58 = _57 >> 21;
  _59 = _58 << 24;
  u32HwFilterMask_159 = u32HwFilterMask_153 | _59;
  # DEBUG u32HwFilterMask => u32HwFilterMask_159
  # DEBUG BEGIN_STMT
  _60 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _61 = (unsigned int) u8FilterIdx_130;
  _62 = _61 * 32;
  _63 = _62 + 8;
  _64 = _60 + _63;
  _65 = _64->Can_u32HwFilterMask;
  _66 = _65 >> 21;
  _67 = _66 << 16;
  u32HwFilterMask_160 = u32HwFilterMask_159 | _67;
  # DEBUG u32HwFilterMask => u32HwFilterMask_160
  # DEBUG BEGIN_STMT
  _68 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _69 = (unsigned int) u8FilterIdx_130;
  _70 = _69 * 32;
  _71 = _70 + 16;
  _72 = _68 + _71;
  _73 = _72->Can_u32HwFilterMask;
  _74 = _73 >> 21;
  _75 = _74 << 8;
  u32HwFilterMask_161 = u32HwFilterMask_160 | _75;
  # DEBUG u32HwFilterMask => u32HwFilterMask_161
  # DEBUG BEGIN_STMT
  _76 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _77 = (unsigned int) u8FilterIdx_130;
  _78 = _77 * 32;
  _79 = _78 + 24;
  _80 = _76 + _79;
  _81 = _80->Can_u32HwFilterMask;
  _82 = _81 >> 21;
  u32HwFilterMask_162 = u32HwFilterMask_161 | _82;
  # DEBUG u32HwFilterMask => u32HwFilterMask_162
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _83 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _84 = (unsigned int) u8FilterIdx_130;
  _85 = _84 * 32;
  _86 = _83 + _85;
  _87 = _86->Can_u32HwFilterMask;
  _88 = _87 >> 3;
  _89 = _88 << 24;
  u32HwFilterMask_155 = u32HwFilterMask_153 | _89;
  # DEBUG u32HwFilterMask => u32HwFilterMask_155
  # DEBUG BEGIN_STMT
  _90 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _91 = (unsigned int) u8FilterIdx_130;
  _92 = _91 * 32;
  _93 = _92 + 8;
  _94 = _90 + _93;
  _95 = _94->Can_u32HwFilterMask;
  _96 = _95 >> 3;
  _97 = _96 << 16;
  u32HwFilterMask_156 = u32HwFilterMask_155 | _97;
  # DEBUG u32HwFilterMask => u32HwFilterMask_156
  # DEBUG BEGIN_STMT
  _98 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _99 = (unsigned int) u8FilterIdx_130;
  _100 = _99 * 32;
  _101 = _100 + 16;
  _102 = _98 + _101;
  _103 = _102->Can_u32HwFilterMask;
  _104 = _103 >> 3;
  _105 = _104 << 8;
  u32HwFilterMask_157 = u32HwFilterMask_156 | _105;
  # DEBUG u32HwFilterMask => u32HwFilterMask_157
  # DEBUG BEGIN_STMT
  _106 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _107 = (unsigned int) u8FilterIdx_130;
  _108 = _107 * 32;
  _109 = _108 + 24;
  _110 = _106 + _109;
  _111 = _110->Can_u32HwFilterMask;
  _112 = _111 >> 3;
  u32HwFilterMask_158 = u32HwFilterMask_157 | _112;
  # DEBUG u32HwFilterMask => u32HwFilterMask_158

  <bb 17> :
  # u8HwFilterCount_132 = PHI <u8HwFilterCount_170(9), u8HwFilterCount_163(13), u8HwFilterCount_152(15), u8HwFilterCount_152(16), u8HwFilterCount_170(8), u8HwFilterCount_163(12)>
  # u32HwFilterMask_134 = PHI <u32HwFilterMask_173(9), u32HwFilterMask_167(13), u32HwFilterMask_162(15), u32HwFilterMask_158(16), u32HwFilterMask_174(8), u32HwFilterMask_169(12)>
  # eElementFormat_136 = PHI <eElementFormat_172(9), eElementFormat_165(13), eElementFormat_154(15), eElementFormat_154(16), eElementFormat_172(8), eElementFormat_165(12)>
  # DEBUG eElementFormat => eElementFormat_136
  # DEBUG u32HwFilterMask => u32HwFilterMask_134
  # DEBUG u8HwFilterCount => u8HwFilterCount_132
  # DEBUG BEGIN_STMT
  _113 = Can_pController_151(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_SetRxIndividualMask_Privileged (_113, u8FilterIdx_130, u32HwFilterMask_134);
  # DEBUG BEGIN_STMT
  u8FilterIdx.4_114 = u8FilterIdx_130;
  u8FilterIdx_176 = u8FilterIdx.4_114 + 1;
  # DEBUG u8FilterIdx => u8FilterIdx_176

  <bb 18> :
  # u8FilterIdx_130 = PHI <u8FilterIdx_150(5), u8FilterIdx_176(17)>
  # u8HwFilterCount_133 = PHI <u8HwFilterCount_142(5), u8HwFilterCount_132(17)>
  # eElementFormat_137 = PHI <eElementFormat_145(5), eElementFormat_136(17)>
  # DEBUG eElementFormat => eElementFormat_137
  # DEBUG u8HwFilterCount => u8HwFilterCount_133
  # DEBUG u8FilterIdx => u8FilterIdx_130
  # DEBUG BEGIN_STMT
  if (u8FilterIdx_130 < u8FiFoFilterIndvCount_135)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _115 = Can_pHwObject_147(D)->Can_u8HwFilterCount;
  if (u8FilterIdx_130 < _115)
    goto <bb 6>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _116 = Can_pController_151(D)->Can_u8ControllerOffset;
  _117 = Can_pController_151(D)->Can_u32LegacyGlobalMask;
  FlexCAN_Ip_SetRxFifoGlobalMask_Privileged (_116, _117);
  # DEBUG BEGIN_STMT
  u8FilterIdx_178 = 0;
  # DEBUG u8FilterIdx => u8FilterIdx_178
  goto <bb 25>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  _118 = Can_pHwObject_147(D)->Can_pHwFilterConfig;
  _119 = (unsigned int) u8FilterIdx_131;
  _120 = _119 * 8;
  _121 = _118 + _120;
  _122 = (int) u8FilterIdx_131;
  _123 = _121->Can_u32HwFilterCode;
  RxFifoFilters[_122].id = _123;
  # DEBUG BEGIN_STMT
  _124 = Can_pHwObject_147(D)->Can_IdMessage;
  if (_124 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  _125 = (int) u8FilterIdx_131;
  RxFifoFilters[_125].isExtendedFrame = 1;
  goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  _126 = (int) u8FilterIdx_131;
  RxFifoFilters[_126].isExtendedFrame = 0;

  <bb 24> :
  # DEBUG BEGIN_STMT
  _127 = (int) u8FilterIdx_131;
  RxFifoFilters[_127].isRemoteFrame = 0;
  # DEBUG BEGIN_STMT
  u8FilterIdx.5_128 = u8FilterIdx_131;
  u8FilterIdx_185 = u8FilterIdx.5_128 + 1;
  # DEBUG u8FilterIdx => u8FilterIdx_185

  <bb 25> :
  # u8FilterIdx_131 = PHI <u8FilterIdx_178(20), u8FilterIdx_185(24)>
  # DEBUG u8FilterIdx => u8FilterIdx_131
  # DEBUG BEGIN_STMT
  if (u8FilterIdx_131 < u8HwFilterCount_133)
    goto <bb 21>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  _129 = Can_pController_151(D)->Can_u8ControllerOffset;
  FlexCAN_Ip_ConfigRxFifo_Privileged (_129, eElementFormat_137, &RxFifoFilters[0]);
  RxFifoFilters ={v} {CLOBBER};
  return;

}


Can_Ipw_ParseData (struct Can_HwType * CanIf_Mailbox, struct PduInfoType * CanIf_PduInfo, struct Flexcan_Ip_MsgBuffType * pReceivedDataBuffer, const struct Can_ControllerConfigType * Can_pControllerConfig, const struct Can_HwObjectConfigType * Can_pHwObjectConfig)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  <unnamed type> _6;
  long unsigned int _7;
  long unsigned int _8;
  <unnamed type> _9;
  long unsigned int _10;
  signed int _11;
  long unsigned int _12;
  long unsigned int _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  short unsigned int _17;
  uint8 * _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pReceivedDataBuffer_23(D)->msgId;
  CanIf_Mailbox_24(D)->CanId = _1;
  # DEBUG BEGIN_STMT
  _2 = pReceivedDataBuffer_23(D)->cs;
  _3 = _2 & 2097152;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = CanIf_Mailbox_24(D)->CanId;
  _5 = _4 | 2147483648;
  CanIf_Mailbox_24(D)->CanId = _5;

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = Can_pHwObjectConfig_27(D)->Can_eReceiveType;
  if (_6 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _7 = pReceivedDataBuffer_23(D)->cs;
  _8 = _7 & 251658240;
  if (_8 == 100663296)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (80, 0, 8, 1);

  <bb 7> :
  # DEBUG BEGIN_STMT
  _9 = Can_pHwObjectConfig_27(D)->Can_eReceiveType;
  if (_9 != 1)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _10 = pReceivedDataBuffer_23(D)->cs;
  _11 = (signed int) _10;
  if (_11 < 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _12 = CanIf_Mailbox_24(D)->CanId;
  _13 = _12 | 1073741824;
  CanIf_Mailbox_24(D)->CanId = _13;

  <bb 10> :
  # DEBUG BEGIN_STMT
  _14 = Can_pHwObjectConfig_27(D)->Can_HwObjectID;
  CanIf_Mailbox_24(D)->Hoh = _14;
  # DEBUG BEGIN_STMT
  _15 = Can_pControllerConfig_31(D)->Can_u8AbstControllerID;
  CanIf_Mailbox_24(D)->ControllerId = _15;
  # DEBUG BEGIN_STMT
  _16 = pReceivedDataBuffer_23(D)->dataLen;
  _17 = (short unsigned int) _16;
  CanIf_PduInfo_33(D)->SduLength = _17;
  # DEBUG BEGIN_STMT
  _18 = &pReceivedDataBuffer_23(D)->data[0];
  CanIf_PduInfo_33(D)->SduDataPtr = _18;
  # DEBUG BEGIN_STMT
  CanIf_RxIndication (CanIf_Mailbox_24(D), CanIf_PduInfo_33(D));
  return;

}


