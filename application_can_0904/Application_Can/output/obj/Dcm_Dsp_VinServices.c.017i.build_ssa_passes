Dcm_Dsp_VinServices_UnlockService ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Internal_ReleaseLock (&Dcm_Dsp_VinServices_ServiceBusy);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_Dsp_VinServices_LockService ()
{
  Std_ReturnType RetVal;
  Std_ReturnType D.6675;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 31;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RetVal = Dcm_Internal_GetLock (&Dcm_Dsp_VinServices_ServiceBusy);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.6675 = RetVal;
  return D.6675;

}


Dcm_Dsp_VinServices_HelperCancel (struct Dcm_DspReqVehInfoContextType * svcContext)
{
  uint8 * const pBuffer;
  const struct Dcm_DspVehInfoDataType * const pVehInfoData;
  const uint8 currDataIdx;
  const struct Dcm_DspVehInfoType * const pVehInfo;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = svcContext->currentVehInfoIdx;
  if (_1 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = svcContext->currentVehInfoIdx;
  _3 = (int) _2;
  pVehInfo = &Dcm_DspVehInfo[_3];
  # DEBUG BEGIN_STMT
  currDataIdx = svcContext->currentVehInfoDataIdx;
  # DEBUG BEGIN_STMT
  _4 = pVehInfo->NumOfVehInfoData;
  if (currDataIdx < _4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = pVehInfo->StartIndexOfVehInfoData;
  _6 = (int) _5;
  _7 = (int) currDataIdx;
  _8 = _6 + _7;
  pVehInfoData = &Dcm_DspVehInfoData[_8];
  # DEBUG BEGIN_STMT
  _9 = svcContext->BufferCfgPtr;
  pBuffer = _9->BufferPtr;
  # DEBUG BEGIN_STMT
  _10 = pVehInfoData->GetInfotypeValueDataFunctionPointer;
  _10 (2, pBuffer);

  <bb 5> :
  # DEBUG BEGIN_STMT
  svcContext->currentVehInfoIdx = 2;
  # DEBUG BEGIN_STMT
  svcContext->currentVehInfoDataIdx = 0;
  # DEBUG BEGIN_STMT
  svcContext->BufferCfgPtr = 0B;
  # DEBUG BEGIN_STMT
  svcContext->nrc = 0;
  # DEBUG BEGIN_STMT
  return;

}


Dcm_Dsp_VinServices_HelperExecute (Dcm_OpStatusType OpStatus, Dcm_DspVehInfoInfoTypeType VehInfoInfoType, struct Dcm_DspReqVehInfoContextType * svcContext)
{
  Std_ReturnType retVal;
  Std_ReturnType D.6669;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = VehInfoInfoType & 31;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = svcContext->BufferCfgPtr;
  retVal = Dcm_RequestVehicleInformation_HelperExecuteAvailableInfoType (VehInfoInfoType, _2);
  # DEBUG BEGIN_STMT
  if (retVal == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = Dcm_DspReqVehInfoContext.nrc;
  svcContext->nrc = _3;
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  retVal = Dcm_RequestVehicleInformation_HelperExecuteNonAvailableInfoType (OpStatus, svcContext);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.6669 = retVal;
  return D.6669;

}


Dcm_Dsp_VinServices_HelperInit (Dcm_DspVehInfoInfoTypeType VehInfoInfoType, struct Dcm_DspReqVehInfoContextType * svcContext, struct Dcm_DspMsgBufferCfgType * ResBuffer)
{
  uint16_least VehInfoDataIndex;
  const uint16 EndIndexOfVehInfoData;
  const uint16 StartIndexOfVehInfoData;
  uint16_least VehInfoDataSize;
  uint8_least vehInfoIndex;
  Std_ReturnType retVal;
  Std_ReturnType D.6662;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = VehInfoInfoType & 31;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = ResBuffer->Size;
  if (_2 > 3)
    goto <bb 4>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  svcContext->BufferCfgPtr = ResBuffer;
  # DEBUG BEGIN_STMT
  retVal = 0;
  goto <bb 15>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  vehInfoIndex = 0;
  goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _3 = Dcm_DspVehInfo[vehInfoIndex].VehInfoInfoType;
  if (VehInfoInfoType == _3)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _4 = vehInfoIndex / 8;
  _5 = Dcm_DspVehInfoUsed[_4];
  _6 = vehInfoIndex & 7;
  _7 = 1 << _6;
  _8 = (unsigned char) _7;
  _9 = _5 & _8;
  if (_9 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  VehInfoDataSize = 0;
  # DEBUG BEGIN_STMT
  _10 = Dcm_DspVehInfo[vehInfoIndex].StartIndexOfVehInfoData;
  StartIndexOfVehInfoData = (const uint16) _10;
  # DEBUG BEGIN_STMT
  _11 = Dcm_DspVehInfo[vehInfoIndex].NumOfVehInfoData;
  _12 = (short unsigned int) _11;
  EndIndexOfVehInfoData = StartIndexOfVehInfoData + _12;
  # DEBUG BEGIN_STMT
  VehInfoDataIndex = 2;
  # DEBUG BEGIN_STMT
  VehInfoDataIndex = (uint16_least) StartIndexOfVehInfoData;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _13 = Dcm_DspVehInfoData[VehInfoDataIndex].VehInfoDataSize;
  _14 = (long unsigned int) _13;
  VehInfoDataSize = VehInfoDataSize + _14;
  # DEBUG BEGIN_STMT
  VehInfoDataIndex = VehInfoDataIndex + 1;

  <bb 10> :
  # DEBUG BEGIN_STMT
  _15 = (long unsigned int) EndIndexOfVehInfoData;
  if (VehInfoDataIndex < _15)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _16 = ResBuffer->Size;
  if (VehInfoDataSize <= _16)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _17 = (unsigned char) vehInfoIndex;
  svcContext->currentVehInfoIdx = _17;
  # DEBUG BEGIN_STMT
  svcContext->currentVehInfoDataIdx = 0;
  # DEBUG BEGIN_STMT
  svcContext->BufferCfgPtr = ResBuffer;
  # DEBUG BEGIN_STMT
  retVal = 0;
  # DEBUG BEGIN_STMT
  goto <bb 15>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  vehInfoIndex = vehInfoIndex + 1;

  <bb 14> :
  # DEBUG BEGIN_STMT
  if (vehInfoIndex <= 1)
    goto <bb 6>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (retVal == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  svcContext->nrc = 49;

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.6662 = retVal;
  return D.6662;

}


