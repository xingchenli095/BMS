SecOC_Rx_ShiftLeft (uint8 * array, uint32 bitLength, uint8 shift)
{
  const uint32 byteLength_shifted;
  uint16 arrayIdx;
  long unsigned int _1;
  long unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  int _6;
  int _7;
  int _8;
  unsigned char _9;
  sizetype _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  int _14;
  unsigned int _15;
  unsigned int _16;
  int _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  short unsigned int arrayIdx.62_22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  uint8 * _27;
  unsigned char _28;
  int _29;
  int _30;
  int _31;
  uint8 * _32;
  unsigned char _33;
  uint8 * _34;
  unsigned char _35;
  int _36;
  int _37;
  int _38;
  signed char _39;
  sizetype _40;
  uint8 * _41;
  unsigned char _42;
  int _43;
  unsigned int _44;
  unsigned int _45;
  int _46;
  signed char _47;
  signed char _48;
  uint8 * _49;
  unsigned char _50;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (long unsigned int) shift_54(D);
  _2 = bitLength_55(D) - _1;
  byteLength_shifted_56 = _2 / 8;
  # DEBUG byteLength_shifted => byteLength_shifted_56
  # DEBUG BEGIN_STMT
  arrayIdx_57 = 0;
  # DEBUG arrayIdx => arrayIdx_57
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (sizetype) arrayIdx_51;
  _4 = array_59(D) + _3;
  _5 = *_4;
  _6 = (int) _5;
  _7 = (int) shift_54(D);
  _8 = _6 << _7;
  _9 = (unsigned char) _8;
  _10 = (sizetype) arrayIdx_51;
  _11 = _10 + 1;
  _12 = array_59(D) + _11;
  _13 = *_12;
  _14 = (int) _13;
  _15 = (unsigned int) shift_54(D);
  _16 = 8 - _15;
  _17 = _14 >> _16;
  _18 = (unsigned char) _17;
  _19 = (sizetype) arrayIdx_51;
  _20 = array_59(D) + _19;
  _21 = _9 | _18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  arrayIdx.62_22 = arrayIdx_51;
  arrayIdx_63 = arrayIdx.62_22 + 1;
  # DEBUG arrayIdx => arrayIdx_63

  <bb 4> :
  # arrayIdx_51 = PHI <arrayIdx_57(2), arrayIdx_63(3)>
  # DEBUG arrayIdx => arrayIdx_51
  # DEBUG BEGIN_STMT
  _23 = (long unsigned int) arrayIdx_51;
  if (byteLength_shifted_56 > _23)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _24 = bitLength_55(D) & 7;
  _25 = (long unsigned int) shift_54(D);
  if (_24 >= _25)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _26 = bitLength_55(D) & 7;
  if (_26 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _27 = array_59(D) + byteLength_shifted_56;
  _28 = *_27;
  _29 = (int) _28;
  _30 = (int) shift_54(D);
  _31 = _29 << _30;
  _32 = array_59(D) + byteLength_shifted_56;
  _33 = (unsigned char) _31;
  *_32 = _33;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _34 = array_59(D) + byteLength_shifted_56;
  _35 = *_34;
  _36 = (int) _35;
  _37 = (int) shift_54(D);
  _38 = _36 << _37;
  _39 = (signed char) _38;
  _40 = byteLength_shifted_56 + 1;
  _41 = array_59(D) + _40;
  _42 = *_41;
  _43 = (int) _42;
  _44 = (unsigned int) shift_54(D);
  _45 = 8 - _44;
  _46 = _43 >> _45;
  _47 = (signed char) _46;
  _48 = _39 | _47;
  _49 = array_59(D) + byteLength_shifted_56;
  _50 = (unsigned char) _48;
  *_49 = _50;

  <bb 9> :
  return;

}


SecOC_Rx_CheckStatusOverridePostVerify (uint16 instId)
{
  uint16 pduIdx;
  int _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.16_5;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.17_6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const struct SecOC_RxPduConfigType * _11;
  short unsigned int _12;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.18_13;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.19_14;
  long unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  sizetype _18;
  const struct SecOC_RxPduConfigType * _19;
  short unsigned int _20;
  int _21;
  short unsigned int pduIdx.20_22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_27(D);
  _2 = SecOC_RxData[_1].VerifyStatusOverride;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  _3 = (int) instId_27(D);
  _4 = SecOC_RxData[_3].NumMsgToOverride;
  if (_4 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pduIdx_29 = 0;
  # DEBUG pduIdx => pduIdx_29
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.16_5 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.17_6 = SecOC_ConfigPtr;
  _7 = SecOC_ConfigPtr.17_6->RxPduConfigPtr;
  _8 = (unsigned int) instId_27(D);
  _9 = _8 * 32;
  _10 = _7 + _9;
  _11 = SecOC_ConfigPtr.16_5 + _10;
  _12 = _11->FreshnessValueId;
  SecOC_ConfigPtr.18_13 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.19_14 = SecOC_ConfigPtr;
  _15 = SecOC_ConfigPtr.19_14->RxPduConfigPtr;
  _16 = (unsigned int) pduIdx_23;
  _17 = _16 * 32;
  _18 = _15 + _17;
  _19 = SecOC_ConfigPtr.18_13 + _18;
  _20 = _19->FreshnessValueId;
  if (_12 == _20)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Enter_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _21 = (int) pduIdx_23;
  SecOC_RxData[_21].VerifyStatusOverride = 2;
  # DEBUG BEGIN_STMT
  SchM_Exit_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();

  <bb 7> :
  # DEBUG BEGIN_STMT
  pduIdx.20_22 = pduIdx_23;
  pduIdx_33 = pduIdx.20_22 + 1;
  # DEBUG pduIdx => pduIdx_33

  <bb 8> :
  # pduIdx_23 = PHI <pduIdx_29(4), pduIdx_33(7)>
  # DEBUG pduIdx => pduIdx_23
  # DEBUG BEGIN_STMT
  if (pduIdx_23 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  return;

}


SecOC_Rx_RenewStatusOverride (uint16 instId, boolean * passData)
{
  uint16 pduIdx;
  int _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  int _5;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.28_6;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.29_7;
  long unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  const struct SecOC_RxPduConfigType * _12;
  short unsigned int _13;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.30_14;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.31_15;
  long unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  sizetype _19;
  const struct SecOC_RxPduConfigType * _20;
  short unsigned int _21;
  int _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  short unsigned int pduIdx.32_26;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instId_31(D);
  _2 = SecOC_RxData[_1].VerifyStatusOverride;
  if (_2 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  *passData_33(D) = 0;
  # DEBUG BEGIN_STMT
  _3 = (int) instId_31(D);
  _4 = SecOC_RxData[_3].VerifyStatusOverride;
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = (int) instId_31(D);
  SecOC_RxData[_5].RenewedVerStatus = 1;
  # DEBUG BEGIN_STMT
  pduIdx_36 = 0;
  # DEBUG pduIdx => pduIdx_36
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.28_6 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.29_7 = SecOC_ConfigPtr;
  _8 = SecOC_ConfigPtr.29_7->RxPduConfigPtr;
  _9 = (unsigned int) instId_31(D);
  _10 = _9 * 32;
  _11 = _8 + _10;
  _12 = SecOC_ConfigPtr.28_6 + _11;
  _13 = _12->FreshnessValueId;
  SecOC_ConfigPtr.30_14 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.31_15 = SecOC_ConfigPtr;
  _16 = SecOC_ConfigPtr.31_15->RxPduConfigPtr;
  _17 = (unsigned int) pduIdx_27;
  _18 = _17 * 32;
  _19 = _16 + _18;
  _20 = SecOC_ConfigPtr.30_14 + _19;
  _21 = _20->FreshnessValueId;
  if (_13 == _21)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Enter_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _22 = (int) pduIdx_27;
  _23 = SecOC_RxData[_22].NumMsgToOverride;
  _24 = _23;
  _25 = _24 + 255;
  SecOC_RxData[_22].NumMsgToOverride = _25;
  # DEBUG BEGIN_STMT
  SchM_Exit_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();

  <bb 7> :
  # DEBUG BEGIN_STMT
  pduIdx.32_26 = pduIdx_27;
  pduIdx_40 = pduIdx.32_26 + 1;
  # DEBUG pduIdx => pduIdx_40

  <bb 8> :
  # pduIdx_27 = PHI <pduIdx_36(4), pduIdx_40(7)>
  # DEBUG pduIdx => pduIdx_27
  # DEBUG BEGIN_STMT
  if (pduIdx_27 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  return;

}


SecOC_Rx_CheckStatusOverridePreVerify (uint16 instId)
{
  int _1;
  unsigned char _2;
  int _3;
  int _4;
  int _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_7(D);
  _2 = SecOC_RxData[_1].VerifyStatusOverride;
  _3 = (int) _2;
  if (_3 == 43)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _4 = (int) instId_7(D);
  SecOC_RxData[_4].CsmVerificationResult = 0;
  # DEBUG BEGIN_STMT
  _5 = (int) instId_7(D);
  SecOC_RxData[_5].State = 3;
  # DEBUG BEGIN_STMT

  <bb 4> :
  return;

}


SecOC_Rx_CheckFreshnessFuncResult (uint16 instId, Std_ReturnType retVal)
{
  const uint32 freshnessRemainingBitsLen;
  int _1;
  int _2;
  short unsigned int _3;
  int _4;
  short unsigned int _5;
  int _6;
  short unsigned int _7;
  short unsigned int _8;
  short unsigned int _9;
  int _10;
  int _11;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.51_12;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.52_13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  const struct SecOC_RxPduConfigType * _18;
  unsigned char _19;
  long unsigned int _20;
  int _21;
  int _22;
  uint8 * _23;
  int _24;
  uint8 * _25;
  int _26;
  short unsigned int _27;
  unsigned int _28;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.53_29;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.54_30;
  long unsigned int _31;
  unsigned int _32;
  unsigned int _33;
  sizetype _34;
  const struct SecOC_RxPduConfigType * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned int _38;
  unsigned int _39;
  uint8 * _40;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.55_41;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.56_42;
  long unsigned int _43;
  unsigned int _44;
  unsigned int _45;
  sizetype _46;
  const struct SecOC_RxPduConfigType * _47;
  short unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.58_52;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.59_53;
  long unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  sizetype _57;
  const struct SecOC_RxPduConfigType * _58;
  short unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  int _64;
  uint8 * _65;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.60_66;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.61_67;
  long unsigned int _68;
  unsigned int _69;
  unsigned int _70;
  sizetype _71;
  const struct SecOC_RxPduConfigType * _72;
  short unsigned int _73;
  long unsigned int _74;
  long unsigned int _75;
  unsigned char _76;
  int _77;
  int _78;
  int _79;
  int _80;
  long unsigned int iftmp.57_81;
  long unsigned int iftmp.57_92;
  long unsigned int iftmp.57_93;

  <bb 2> :
  # DEBUG BEGIN_STMT
  if (retVal_84(D) == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_85(D);
  SecOC_RxData[_1].ProcessingVerification = 0;
  # DEBUG BEGIN_STMT
  _2 = (int) instId_85(D);
  _3 = SecOC_RxConfig[_2].MaxAuthAttempts;
  _4 = (int) instId_85(D);
  _5 = SecOC_RxData[_4].AuthAttempts;
  if (_3 > _5)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = (int) instId_85(D);
  _7 = SecOC_RxData[_6].AuthAttempts;
  _8 = _7;
  _9 = _8 + 1;
  SecOC_RxData[_6].AuthAttempts = _9;
  # DEBUG BEGIN_STMT
  _10 = (int) instId_85(D);
  SecOC_RxData[_10].State = 1;
  goto <bb 14>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _11 = (int) instId_85(D);
  SecOC_RxData[_11].VerificationResult = 2;
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_85(D), 0, 1);
  goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (retVal_84(D) == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.51_12 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.52_13 = SecOC_ConfigPtr;
  _14 = SecOC_ConfigPtr.52_13->RxPduConfigPtr;
  _15 = (unsigned int) instId_85(D);
  _16 = _15 * 32;
  _17 = _14 + _16;
  _18 = SecOC_ConfigPtr.51_12 + _17;
  _19 = _18->FreshnessValueTxLength;
  _20 = (long unsigned int) _19;
  freshnessRemainingBitsLen_90 = _20 & 7;
  # DEBUG freshnessRemainingBitsLen => freshnessRemainingBitsLen_90
  # DEBUG BEGIN_STMT
  _21 = (int) instId_85(D);
  SecOC_RxData[_21].AuthAttempts = 0;
  # DEBUG BEGIN_STMT
  _22 = (int) instId_85(D);
  _23 = SecOC_RxData[_22].Authenticator;
  _24 = (int) instId_85(D);
  _25 = SecOC_RxData[_24].SecuredPdu.SduDataPtr;
  _26 = (int) instId_85(D);
  _27 = SecOC_RxData[_26].DataLength;
  _28 = (unsigned int) _27;
  SecOC_ConfigPtr.53_29 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.54_30 = SecOC_ConfigPtr;
  _31 = SecOC_ConfigPtr.54_30->RxPduConfigPtr;
  _32 = (unsigned int) instId_85(D);
  _33 = _32 * 32;
  _34 = _31 + _33;
  _35 = SecOC_ConfigPtr.53_29 + _34;
  _36 = _35->FreshnessValueTxLength;
  _37 = _36 / 8;
  _38 = (unsigned int) _37;
  _39 = _28 + _38;
  _40 = _25 + _39;
  SecOC_ConfigPtr.55_41 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.56_42 = SecOC_ConfigPtr;
  _43 = SecOC_ConfigPtr.56_42->RxPduConfigPtr;
  _44 = (unsigned int) instId_85(D);
  _45 = _44 * 32;
  _46 = _43 + _45;
  _47 = SecOC_ConfigPtr.55_41 + _46;
  _48 = _47->AuthInfoTxLength;
  _49 = (long unsigned int) _48;
  _50 = freshnessRemainingBitsLen_90 + _49;
  _51 = _50 / 8;
  SecOC_ConfigPtr.58_52 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.59_53 = SecOC_ConfigPtr;
  _54 = SecOC_ConfigPtr.59_53->RxPduConfigPtr;
  _55 = (unsigned int) instId_85(D);
  _56 = _55 * 32;
  _57 = _54 + _56;
  _58 = SecOC_ConfigPtr.58_52 + _57;
  _59 = _58->AuthInfoTxLength;
  _60 = (long unsigned int) _59;
  _61 = freshnessRemainingBitsLen_90 + _60;
  _62 = _61 & 7;
  if (_62 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  iftmp.57_93 = 1;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.57_92 = 0;

  <bb 10> :
  # iftmp.57_81 = PHI <iftmp.57_93(8), iftmp.57_92(9)>
  _63 = iftmp.57_81 + _51;
  TS_MemCpy32 (_23, _40, _63);
  # DEBUG BEGIN_STMT
  if (freshnessRemainingBitsLen_90 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _64 = (int) instId_85(D);
  _65 = SecOC_RxData[_64].Authenticator;
  SecOC_ConfigPtr.60_66 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.61_67 = SecOC_ConfigPtr;
  _68 = SecOC_ConfigPtr.61_67->RxPduConfigPtr;
  _69 = (unsigned int) instId_85(D);
  _70 = _69 * 32;
  _71 = _68 + _70;
  _72 = SecOC_ConfigPtr.60_66 + _71;
  _73 = _72->AuthInfoTxLength;
  _74 = (long unsigned int) _73;
  _75 = freshnessRemainingBitsLen_90 + _74;
  _76 = (unsigned char) freshnessRemainingBitsLen_90;
  SecOC_Rx_ShiftLeft (_65, _75, _76);

  <bb 12> :
  # DEBUG BEGIN_STMT
  _77 = (int) instId_85(D);
  SecOC_RxData[_77].ProcessingVerification = 1;
  # DEBUG BEGIN_STMT
  _78 = (int) instId_85(D);
  SecOC_RxData[_78].State = 2;
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _79 = (int) instId_85(D);
  SecOC_RxData[_79].VerificationResult = 2;
  # DEBUG BEGIN_STMT
  _80 = (int) instId_85(D);
  SecOC_RxData[_80].ProcessingVerification = 0;
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_85(D), 0, 1);

  <bb 14> :
  return;

}


SecOC_Rx_ExtractAuthenticDataLen (uint16 instId)
{
  int _1;
  short unsigned int _2;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.72_3;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.73_4;
  long unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  sizetype _8;
  const struct SecOC_RxPduConfigType * _9;
  short unsigned int _10;
  long unsigned int _11;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.74_12;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.75_13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  const struct SecOC_RxPduConfigType * _18;
  unsigned char _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  short unsigned int _23;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.77_24;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.78_25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  sizetype _29;
  const struct SecOC_RxPduConfigType * _30;
  short unsigned int _31;
  long unsigned int _32;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.79_33;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.80_34;
  long unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  sizetype _38;
  const struct SecOC_RxPduConfigType * _39;
  unsigned char _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  short unsigned int _44;
  int _45;
  short unsigned int _46;
  short unsigned int iftmp.76_47;
  short unsigned int iftmp.76_51;
  short unsigned int iftmp.76_52;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SchM_Enter_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = (int) instId_50(D);
  _2 = SecOC_RxData[_1].SecuredPdu.SduLength;
  SecOC_ConfigPtr.72_3 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.73_4 = SecOC_ConfigPtr;
  _5 = SecOC_ConfigPtr.73_4->RxPduConfigPtr;
  _6 = (unsigned int) instId_50(D);
  _7 = _6 * 32;
  _8 = _5 + _7;
  _9 = SecOC_ConfigPtr.72_3 + _8;
  _10 = _9->AuthInfoTxLength;
  _11 = (long unsigned int) _10;
  SecOC_ConfigPtr.74_12 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.75_13 = SecOC_ConfigPtr;
  _14 = SecOC_ConfigPtr.75_13->RxPduConfigPtr;
  _15 = (unsigned int) instId_50(D);
  _16 = _15 * 32;
  _17 = _14 + _16;
  _18 = SecOC_ConfigPtr.74_12 + _17;
  _19 = _18->FreshnessValueTxLength;
  _20 = (long unsigned int) _19;
  _21 = _11 + _20;
  _22 = _21 / 8;
  _23 = (short unsigned int) _22;
  SecOC_ConfigPtr.77_24 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.78_25 = SecOC_ConfigPtr;
  _26 = SecOC_ConfigPtr.78_25->RxPduConfigPtr;
  _27 = (unsigned int) instId_50(D);
  _28 = _27 * 32;
  _29 = _26 + _28;
  _30 = SecOC_ConfigPtr.77_24 + _29;
  _31 = _30->AuthInfoTxLength;
  _32 = (long unsigned int) _31;
  SecOC_ConfigPtr.79_33 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.80_34 = SecOC_ConfigPtr;
  _35 = SecOC_ConfigPtr.80_34->RxPduConfigPtr;
  _36 = (unsigned int) instId_50(D);
  _37 = _36 * 32;
  _38 = _35 + _37;
  _39 = SecOC_ConfigPtr.79_33 + _38;
  _40 = _39->FreshnessValueTxLength;
  _41 = (long unsigned int) _40;
  _42 = _32 + _41;
  _43 = _42 & 7;
  if (_43 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.76_52 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.76_51 = 0;

  <bb 5> :
  # iftmp.76_47 = PHI <iftmp.76_52(3), iftmp.76_51(4)>
  _44 = iftmp.76_47 + _23;
  _45 = (int) instId_50(D);
  _46 = _2 - _44;
  SecOC_RxData[_45].DataLength = _46;
  # DEBUG BEGIN_STMT
  SchM_Exit_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  return;

}


SecOC_Rx_CheckSecPduContent (uint16 instId)
{
  const uint32 authInfoLen;
  Std_ReturnType retVal;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.63_1;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.64_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct SecOC_RxPduConfigType * _7;
  short unsigned int _8;
  long unsigned int _9;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.65_10;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.66_11;
  long unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  sizetype _15;
  const struct SecOC_RxPduConfigType * _16;
  unsigned char _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.68_21;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.69_22;
  long unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  sizetype _26;
  const struct SecOC_RxPduConfigType * _27;
  short unsigned int _28;
  long unsigned int _29;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.70_30;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.71_31;
  long unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  sizetype _35;
  const struct SecOC_RxPduConfigType * _36;
  unsigned char _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  int _41;
  short unsigned int _42;
  long unsigned int _43;
  long unsigned int iftmp.67_45;
  long unsigned int iftmp.67_49;
  long unsigned int iftmp.67_50;
  Std_ReturnType _53;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal_46 = 1;
  # DEBUG retVal => retVal_46
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.63_1 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.64_2 = SecOC_ConfigPtr;
  _3 = SecOC_ConfigPtr.64_2->RxPduConfigPtr;
  _4 = (unsigned int) instId_48(D);
  _5 = _4 * 32;
  _6 = _3 + _5;
  _7 = SecOC_ConfigPtr.63_1 + _6;
  _8 = _7->AuthInfoTxLength;
  _9 = (long unsigned int) _8;
  SecOC_ConfigPtr.65_10 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.66_11 = SecOC_ConfigPtr;
  _12 = SecOC_ConfigPtr.66_11->RxPduConfigPtr;
  _13 = (unsigned int) instId_48(D);
  _14 = _13 * 32;
  _15 = _12 + _14;
  _16 = SecOC_ConfigPtr.65_10 + _15;
  _17 = _16->FreshnessValueTxLength;
  _18 = (long unsigned int) _17;
  _19 = _9 + _18;
  _20 = _19 / 8;
  SecOC_ConfigPtr.68_21 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.69_22 = SecOC_ConfigPtr;
  _23 = SecOC_ConfigPtr.69_22->RxPduConfigPtr;
  _24 = (unsigned int) instId_48(D);
  _25 = _24 * 32;
  _26 = _23 + _25;
  _27 = SecOC_ConfigPtr.68_21 + _26;
  _28 = _27->AuthInfoTxLength;
  _29 = (long unsigned int) _28;
  SecOC_ConfigPtr.70_30 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.71_31 = SecOC_ConfigPtr;
  _32 = SecOC_ConfigPtr.71_31->RxPduConfigPtr;
  _33 = (unsigned int) instId_48(D);
  _34 = _33 * 32;
  _35 = _32 + _34;
  _36 = SecOC_ConfigPtr.70_30 + _35;
  _37 = _36->FreshnessValueTxLength;
  _38 = (long unsigned int) _37;
  _39 = _29 + _38;
  _40 = _39 & 7;
  if (_40 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.67_50 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.67_49 = 0;

  <bb 5> :
  # iftmp.67_45 = PHI <iftmp.67_50(3), iftmp.67_49(4)>
  authInfoLen_51 = iftmp.67_45 + _20;
  # DEBUG authInfoLen => authInfoLen_51
  # DEBUG BEGIN_STMT
  _41 = (int) instId_48(D);
  _42 = SecOC_RxData[_41].ReceivedSecuredPdu.SduLength;
  _43 = (long unsigned int) _42;
  if (authInfoLen_51 < _43)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  retVal_52 = 0;
  # DEBUG retVal => retVal_52

  <bb 7> :
  # retVal_44 = PHI <retVal_46(5), retVal_52(6)>
  # DEBUG retVal => retVal_44
  # DEBUG BEGIN_STMT
  _53 = retVal_44;
  return _53;

}


SecOC_Rx_CheckPduContent (uint16 instId)
{
  Std_ReturnType retVal;
  Std_ReturnType _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal_1 = 1;
  # DEBUG retVal => retVal_1
  # DEBUG BEGIN_STMT
  retVal_5 = SecOC_Rx_CheckSecPduContent (instId_3(D));
  # DEBUG retVal => retVal_5
  # DEBUG BEGIN_STMT
  _6 = retVal_5;
  return _6;

}


SecOC_Rx_PrepareSecuredPdu (uint16 instId)
{
  int _1;
  unsigned char _2;
  int _3;
  uint8 * _4;
  int _5;
  uint8 * _6;
  int _7;
  short unsigned int _8;
  long unsigned int _9;
  int _10;
  int _11;
  short unsigned int _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SchM_Enter_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = (int) instId_16(D);
  _2 = SecOC_RxConfig[_1].ReceptionStrategy;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (int) instId_16(D);
  _4 = SecOC_RxData[_3].SecuredPdu.SduDataPtr;
  _5 = (int) instId_16(D);
  _6 = SecOC_RxData[_5].ReceivedSecuredPdu.SduDataPtr;
  _7 = (int) instId_16(D);
  _8 = SecOC_RxData[_7].ReceivedSecuredPdu.SduLength;
  _9 = (long unsigned int) _8;
  TS_MemCpy32 (_4, _6, _9);

  <bb 4> :
  # DEBUG BEGIN_STMT
  _10 = (int) instId_16(D);
  _11 = (int) instId_16(D);
  _12 = SecOC_RxData[_10].ReceivedSecuredPdu.SduLength;
  SecOC_RxData[_11].SecuredPdu.SduLength = _12;
  # DEBUG BEGIN_STMT
  SchM_Exit_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  return;

}


SecOC_Rx_CheckForCsmRetry (uint16 instId)
{
  int _1;
  int _2;
  int _3;
  short unsigned int _4;
  int _5;
  short unsigned int _6;
  int _7;
  short unsigned int _8;
  short unsigned int _9;
  short unsigned int _10;
  int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_13(D);
  SecOC_RxData[_1].ProcessingVerification = 0;
  # DEBUG BEGIN_STMT
  _2 = (int) instId_13(D);
  SecOC_RxData[_2].VerificationResult = 1;
  # DEBUG BEGIN_STMT
  _3 = (int) instId_13(D);
  _4 = SecOC_RxConfig[_3].MaxFVSyncAttempts;
  _5 = (int) instId_13(D);
  _6 = SecOC_RxData[_5].FVSyncAttempts;
  if (_4 > _6)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _7 = (int) instId_13(D);
  _8 = SecOC_RxData[_7].FVSyncAttempts;
  _9 = _8;
  _10 = _9 + 1;
  SecOC_RxData[_7].FVSyncAttempts = _10;
  # DEBUG BEGIN_STMT
  _11 = (int) instId_13(D);
  SecOC_RxData[_11].State = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_13(D), 0, 1);

  <bb 5> :
  return;

}


SecOC_Rx_ResetSm (uint16 instId, boolean continueExec, boolean notifyUpperLayer)
{
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  unsigned char _7;
  int _8;
  int _9;
  int _10;
  int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_14(D);
  SecOC_RxData[_1].State = 0;
  # DEBUG BEGIN_STMT
  _2 = (int) instId_14(D);
  SecOC_RxData[_2].AuthAttempts = 0;
  # DEBUG BEGIN_STMT
  _3 = (int) instId_14(D);
  SecOC_RxData[_3].FVSyncAttempts = 0;
  # DEBUG BEGIN_STMT
  _4 = (int) instId_14(D);
  SecOC_RxData[_4].VerificationResult = 4;
  # DEBUG BEGIN_STMT
  _5 = (int) instId_14(D);
  SecOC_RxData[_5].CsmVerificationResult = 1;
  # DEBUG BEGIN_STMT
  _6 = (int) instId_14(D);
  _7 = SecOC_RxData[_6].RenewedVerStatus;
  if (_7 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_CheckStatusOverridePostVerify (instId_14(D));
  # DEBUG BEGIN_STMT
  _8 = (int) instId_14(D);
  SecOC_RxData[_8].RenewedVerStatus = 0;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (continueExec_24(D) == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _9 = (int) instId_14(D);
  SecOC_RxData[_9].ProcessingVerification = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _10 = (int) instId_14(D);
  SecOC_RxData[_10].ProcessingVerification = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  _11 = (int) instId_14(D);
  SecOC_RxData[_11].PduInProcess = 0;
  # DEBUG BEGIN_STMT
  SchM_Exit_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  return;

}


SecOC_Rx_StateRetryToObtainFreshness (uint16 instId)
{
  uint32 freshnessValueLength;
  Std_ReturnType retVal;
  int _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.10_5;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.11_6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const struct SecOC_RxPduConfigType * _11;
  unsigned char _12;
  long unsigned int _13;
  int _14;
  unsigned char _15;
  int _16;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.12_17;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.13_18;
  long unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  const struct SecOC_RxPduConfigType * _23;
  short unsigned int _24;
  int _25;
  uint8 * _26;
  int _27;
  short unsigned int _28;
  sizetype _29;
  uint8 * _30;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.14_31;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.15_32;
  long unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  sizetype _36;
  const struct SecOC_RxPduConfigType * _37;
  unsigned char _38;
  long unsigned int _39;
  int _40;
  short unsigned int _41;
  short unsigned int _42;
  int _43;
  uint8 * _44;
  int _45;
  short unsigned int _46;
  int _47;
  short unsigned int _48;
  int _49;
  short unsigned int _50;
  short unsigned int _51;
  short unsigned int _52;
  int _53;
  int _54;
  int _55;
  short unsigned int _56;
  short unsigned int _57;
  short unsigned int _58;
  int _59;
  int _60;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_65(D);
  _2 = SecOC_RxData[_1].PduREvent;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _3 = (int) instId_65(D);
  _4 = SecOC_RxConfig[_3].ReceptionStrategy;
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_65(D), 1, 1);
  goto <bb 15>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  retVal_68 = 1;
  # DEBUG retVal => retVal_68
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.10_5 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.11_6 = SecOC_ConfigPtr;
  _7 = SecOC_ConfigPtr.11_6->RxPduConfigPtr;
  _8 = (unsigned int) instId_65(D);
  _9 = _8 * 32;
  _10 = _7 + _9;
  _11 = SecOC_ConfigPtr.10_5 + _10;
  _12 = _11->FreshnessValueLength;
  _13 = (long unsigned int) _12;
  freshnessValueLength = _13;
  # DEBUG BEGIN_STMT
  _14 = (int) instId_65(D);
  _15 = SecOC_RxConfig[_14].GetRxFreshnessFuncType;
  _16 = (int) _15;
  if (_16 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.12_17 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.13_18 = SecOC_ConfigPtr;
  _19 = SecOC_ConfigPtr.13_18->RxPduConfigPtr;
  _20 = (unsigned int) instId_65(D);
  _21 = _20 * 32;
  _22 = _19 + _21;
  _23 = SecOC_ConfigPtr.12_17 + _22;
  _24 = _23->FreshnessValueId;
  _25 = (int) instId_65(D);
  _26 = SecOC_RxData[_25].SecuredPdu.SduDataPtr;
  _27 = (int) instId_65(D);
  _28 = SecOC_RxData[_27].DataLength;
  _29 = (sizetype) _28;
  _30 = _26 + _29;
  SecOC_ConfigPtr.14_31 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.15_32 = SecOC_ConfigPtr;
  _33 = SecOC_ConfigPtr.15_32->RxPduConfigPtr;
  _34 = (unsigned int) instId_65(D);
  _35 = _34 * 32;
  _36 = _33 + _35;
  _37 = SecOC_ConfigPtr.14_31 + _36;
  _38 = _37->FreshnessValueTxLength;
  _39 = (long unsigned int) _38;
  _40 = (int) instId_65(D);
  _41 = SecOC_RxData[_40].FVSyncAttempts;
  _42 = _41 + 1;
  _43 = (int) instId_65(D);
  _44 = SecOC_RxData[_43].FreshnessVerifyValue;
  retVal_71 = SecOC_Rx_Get_Freshness (instId_65(D), _24, _30, _39, _42, _44, &freshnessValueLength);
  # DEBUG retVal => retVal_71
  # DEBUG BEGIN_STMT

  <bb 7> :
  # retVal_61 = PHI <retVal_71(6), retVal_68(5)>
  # DEBUG retVal => retVal_61
  # DEBUG BEGIN_STMT
  if (retVal_61 == 2)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _45 = (int) instId_65(D);
  _46 = SecOC_RxConfig[_45].MaxAuthAttempts;
  _47 = (int) instId_65(D);
  _48 = SecOC_RxData[_47].AuthAttempts;
  if (_46 > _48)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _49 = (int) instId_65(D);
  _50 = SecOC_RxData[_49].AuthAttempts;
  _51 = _50;
  _52 = _51 + 1;
  SecOC_RxData[_49].AuthAttempts = _52;
  goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _53 = (int) instId_65(D);
  SecOC_RxData[_53].VerificationResult = 2;
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_65(D), 0, 1);
  goto <bb 14>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (retVal_61 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _54 = (int) instId_65(D);
  SecOC_RxData[_54].State = 2;
  # DEBUG BEGIN_STMT
  _55 = (int) instId_65(D);
  _56 = SecOC_RxData[_55].FVSyncAttempts;
  _57 = _56;
  _58 = _57 + 1;
  SecOC_RxData[_55].FVSyncAttempts = _58;
  # DEBUG BEGIN_STMT
  _59 = (int) instId_65(D);
  SecOC_RxData[_59].AuthAttempts = 0;
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _60 = (int) instId_65(D);
  SecOC_RxData[_60].VerificationResult = 2;
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_65(D), 0, 1);

  <bb 14> :
  freshnessValueLength ={v} {CLOBBER};

  <bb 15> :
  return;

}


SecOC_Rx_StateBroadcastPdu (uint16 instId)
{
  struct PduInfoType SecOC_RxPduInfo;
  int _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  int _7;
  uint8 * _8;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.21_9;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.22_10;
  long unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  sizetype _14;
  const struct SecOC_RxPduConfigType * _15;
  short unsigned int _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_18(D);
  _2 = SecOC_RxData[_1].PduREvent;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _3 = (int) instId_18(D);
  _4 = SecOC_RxConfig[_3].ReceptionStrategy;
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_18(D), 1, 1);
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) instId_18(D);
  _6 = SecOC_RxData[_5].DataLength;
  SecOC_RxPduInfo.SduLength = _6;
  # DEBUG BEGIN_STMT
  _7 = (int) instId_18(D);
  _8 = SecOC_RxData[_7].SecuredPdu.SduDataPtr;
  SecOC_RxPduInfo.SduDataPtr = _8;
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.21_9 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.22_10 = SecOC_ConfigPtr;
  _11 = SecOC_ConfigPtr.22_10->RxPduConfigPtr;
  _12 = (unsigned int) instId_18(D);
  _13 = _12 * 32;
  _14 = _11 + _13;
  _15 = SecOC_ConfigPtr.21_9 + _14;
  _16 = _15->AuthenticLayerPduIdAtPduR;
  PduR_SecOCRxIndication (_16, &SecOC_RxPduInfo);
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_18(D), 0, 0);
  SecOC_RxPduInfo ={v} {CLOBBER};

  <bb 6> :
  return;

}


SecOC_Rx_StateCheckVerificationResult (uint16 instId)
{
  boolean passPdu;
  int _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  int _5;
  unsigned char _6;
  int _7;
  unsigned char _8;
  int _9;
  int _10;
  int _11;
  unsigned char _12;
  int _13;
  int _14;
  int _15;
  unsigned char _16;
  unsigned char passPdu.25_17;
  int _18;
  int _19;
  int _20;
  short unsigned int _21;
  int _22;
  short unsigned int _23;
  int _24;
  unsigned char _25;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.26_26;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.27_27;
  long unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  sizetype _31;
  const struct SecOC_RxPduConfigType * _32;
  unsigned char _33;
  int _34;
  int _35;
  SecOC_VerificationResultType iftmp.23_36;
  SecOC_VerificationResultType iftmp.24_37;
  SecOC_VerificationResultType iftmp.24_45;
  SecOC_VerificationResultType iftmp.24_46;
  SecOC_VerificationResultType iftmp.23_49;
  SecOC_VerificationResultType iftmp.23_50;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_42(D);
  _2 = SecOC_RxData[_1].PduREvent;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _3 = (int) instId_42(D);
  _4 = SecOC_RxConfig[_3].ReceptionStrategy;
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_42(D), 1, 1);
  goto <bb 24>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) instId_42(D);
  _6 = SecOC_RxData[_5].CsmVerificationResult;
  if (_6 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = (int) instId_42(D);
  _8 = SecOC_RxData[_7].RenewedVerStatus;
  if (_8 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _9 = (int) instId_42(D);
  iftmp.23_50 = SecOC_RxData[_9].VerificationResult;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.23_49 = 0;

  <bb 9> :
  # iftmp.23_36 = PHI <iftmp.23_50(7), iftmp.23_49(8)>
  _10 = (int) instId_42(D);
  SecOC_RxData[_10].VerificationResult = iftmp.23_36;
  # DEBUG BEGIN_STMT
  passPdu = 1;
  goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _11 = (int) instId_42(D);
  _12 = SecOC_RxData[_11].RenewedVerStatus;
  if (_12 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _13 = (int) instId_42(D);
  iftmp.24_46 = SecOC_RxData[_13].VerificationResult;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.24_45 = 1;

  <bb 13> :
  # iftmp.24_37 = PHI <iftmp.24_46(11), iftmp.24_45(12)>
  _14 = (int) instId_42(D);
  SecOC_RxData[_14].VerificationResult = iftmp.24_37;
  # DEBUG BEGIN_STMT
  passPdu = 0;

  <bb 14> :
  # DEBUG BEGIN_STMT
  _15 = (int) instId_42(D);
  _16 = SecOC_RxData[_15].RenewedVerStatus;
  if (_16 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_RenewStatusOverride (instId_42(D), &passPdu);

  <bb 16> :
  # DEBUG BEGIN_STMT
  passPdu.25_17 = passPdu;
  if (passPdu.25_17 == 1)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _18 = (int) instId_42(D);
  SecOC_RxData[_18].ProcessingVerification = 1;
  # DEBUG BEGIN_STMT
  _19 = (int) instId_42(D);
  SecOC_RxData[_19].State = 4;
  goto <bb 23>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _20 = (int) instId_42(D);
  _21 = SecOC_RxConfig[_20].MaxFVSyncAttempts;
  _22 = (int) instId_42(D);
  _23 = SecOC_RxData[_22].FVSyncAttempts;
  if (_21 > _23)
    goto <bb 19>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 19> :
  _24 = (int) instId_42(D);
  _25 = SecOC_RxData[_24].VerifyStatusOverride;
  if (_25 == 2)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  SecOC_ConfigPtr.26_26 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.27_27 = SecOC_ConfigPtr;
  _28 = SecOC_ConfigPtr.27_27->RxPduConfigPtr;
  _29 = (unsigned int) instId_42(D);
  _30 = _29 * 32;
  _31 = _28 + _30;
  _32 = SecOC_ConfigPtr.26_26 + _31;
  _33 = _32->FreshnessValueLength;
  if (_33 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  _34 = (int) instId_42(D);
  SecOC_RxData[_34].ProcessingVerification = 1;
  # DEBUG BEGIN_STMT
  _35 = (int) instId_42(D);
  SecOC_RxData[_35].State = 5;
  goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_42(D), 0, 1);

  <bb 23> :
  passPdu ={v} {CLOBBER};

  <bb 24> :
  return;

}


SecOC_Rx_StateVerification (uint16 instId)
{
  uint32 dataLength;
  Std_ReturnType retVal;
  int _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  long unsigned int _7;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.33_8;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.34_9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  const struct SecOC_RxPduConfigType * _14;
  unsigned char _15;
  unsigned char _16;
  long unsigned int _17;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.36_18;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.37_19;
  long unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  sizetype _23;
  const struct SecOC_RxPduConfigType * _24;
  unsigned char _25;
  unsigned char _26;
  long unsigned int _27;
  long unsigned int _28;
  int _29;
  int _30;
  int _31;
  unsigned char _32;
  int _33;
  int _34;
  long unsigned int _35;
  short unsigned int _36;
  long unsigned int _37;
  int _38;
  uint8 * _39;
  int _40;
  uint8 * _41;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.38_42;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.39_43;
  long unsigned int _44;
  unsigned int _45;
  unsigned int _46;
  sizetype _47;
  const struct SecOC_RxPduConfigType * _48;
  short unsigned int _49;
  long unsigned int _50;
  int _51;
  Crypto_VerifyResultType * _52;
  long unsigned int iftmp.35_54;
  long unsigned int iftmp.35_61;
  long unsigned int iftmp.35_62;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_57(D);
  _2 = SecOC_RxData[_1].PduREvent;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _3 = (int) instId_57(D);
  _4 = SecOC_RxConfig[_3].ReceptionStrategy;
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_57(D), 1, 1);
  goto <bb 12>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  retVal_60 = 1;
  # DEBUG retVal => retVal_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) instId_57(D);
  _6 = SecOC_RxData[_5].DataLength;
  _7 = (long unsigned int) _6;
  SecOC_ConfigPtr.33_8 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.34_9 = SecOC_ConfigPtr;
  _10 = SecOC_ConfigPtr.34_9->RxPduConfigPtr;
  _11 = (unsigned int) instId_57(D);
  _12 = _11 * 32;
  _13 = _10 + _12;
  _14 = SecOC_ConfigPtr.33_8 + _13;
  _15 = _14->FreshnessValueLength;
  _16 = _15 / 8;
  _17 = (long unsigned int) _16;
  SecOC_ConfigPtr.36_18 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.37_19 = SecOC_ConfigPtr;
  _20 = SecOC_ConfigPtr.37_19->RxPduConfigPtr;
  _21 = (unsigned int) instId_57(D);
  _22 = _21 * 32;
  _23 = _20 + _22;
  _24 = SecOC_ConfigPtr.36_18 + _23;
  _25 = _24->FreshnessValueLength;
  _26 = _25 & 7;
  if (_26 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.35_62 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.35_61 = 0;

  <bb 8> :
  # iftmp.35_54 = PHI <iftmp.35_62(6), iftmp.35_61(7)>
  _27 = iftmp.35_54 + _17;
  _28 = _7 + _27;
  dataLength_63 = _28 + 2;
  # DEBUG dataLength => dataLength_63
  # DEBUG BEGIN_STMT
  _29 = (int) instId_57(D);
  SecOC_RxData[_29].State = 3;
  # DEBUG BEGIN_STMT
  _30 = (int) instId_57(D);
  SecOC_RxData[_30].ProcessingVerification = 1;
  # DEBUG BEGIN_STMT
  _31 = (int) instId_57(D);
  _32 = SecOC_RxConfig[_31].CsmFuncType;
  _33 = (int) _32;
  if (_33 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  _34 = (int) instId_57(D);
  _35 = SecOC_RxConfig[_34].CsmJobId;
  _36 = (short unsigned int) _35;
  _37 = (long unsigned int) _36;
  _38 = (int) instId_57(D);
  _39 = SecOC_RxData[_38].DataToAuthenticator;
  _40 = (int) instId_57(D);
  _41 = SecOC_RxData[_40].Authenticator;
  SecOC_ConfigPtr.38_42 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.39_43 = SecOC_ConfigPtr;
  _44 = SecOC_ConfigPtr.39_43->RxPduConfigPtr;
  _45 = (unsigned int) instId_57(D);
  _46 = _45 * 32;
  _47 = _44 + _46;
  _48 = SecOC_ConfigPtr.38_42 + _47;
  _49 = _48->AuthInfoTxLength;
  _50 = (long unsigned int) _49;
  _51 = (int) instId_57(D);
  _52 = &SecOC_RxData[_51].CsmVerificationResult;
  retVal_67 = Csm_MacVerify (_37, 7, _39, dataLength_63, _41, _50, _52);
  # DEBUG retVal => retVal_67
  # DEBUG BEGIN_STMT

  <bb 10> :
  # retVal_53 = PHI <retVal_67(9), retVal_60(8)>
  # DEBUG retVal => retVal_53
  # DEBUG BEGIN_STMT
  if (retVal_53 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_CheckForCsmRetry (instId_57(D));

  <bb 12> :
  return;

}


SecOC_Rx_StateConstructDataToAuthenticator (uint16 instId)
{
  uint32 freshnessValueLength;
  uint8 index;
  Std_ReturnType retVal;
  int _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.40_7;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.41_8;
  long unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  const struct SecOC_RxPduConfigType * _13;
  short unsigned int _14;
  int _15;
  unsigned int _16;
  unsigned int _17;
  int _18;
  int _19;
  uint8 * _20;
  sizetype _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  unsigned char index.42_25;
  int _26;
  uint8 * _27;
  uint8 * _28;
  int _29;
  uint8 * _30;
  int _31;
  short unsigned int _32;
  long unsigned int _33;
  int _34;
  int _35;
  uint8 * _36;
  int _37;
  short unsigned int _38;
  unsigned int _39;
  unsigned int _40;
  int _41;
  uint8 * _42;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.43_43;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.44_44;
  long unsigned int _45;
  unsigned int _46;
  unsigned int _47;
  sizetype _48;
  const struct SecOC_RxPduConfigType * _49;
  unsigned char _50;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.45_51;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.46_52;
  long unsigned int _53;
  unsigned int _54;
  unsigned int _55;
  sizetype _56;
  const struct SecOC_RxPduConfigType * _57;
  unsigned char _58;
  long unsigned int _59;
  int _60;
  unsigned char _61;
  int _62;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.47_63;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.48_64;
  long unsigned int _65;
  unsigned int _66;
  unsigned int _67;
  sizetype _68;
  const struct SecOC_RxPduConfigType * _69;
  short unsigned int _70;
  int _71;
  uint8 * _72;
  int _73;
  short unsigned int _74;
  sizetype _75;
  uint8 * _76;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.49_77;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.50_78;
  long unsigned int _79;
  unsigned int _80;
  unsigned int _81;
  sizetype _82;
  const struct SecOC_RxPduConfigType * _83;
  unsigned char _84;
  long unsigned int _85;
  int _86;
  short unsigned int _87;
  int _88;
  uint8 * _89;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_98(D);
  _2 = SecOC_RxData[_1].PduREvent;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _3 = (int) instId_98(D);
  _4 = SecOC_RxConfig[_3].ReceptionStrategy;
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_98(D), 1, 1);
  goto <bb 16>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  retVal_101 = 1;
  # DEBUG retVal => retVal_101
  # DEBUG BEGIN_STMT
  _5 = (int) instId_98(D);
  _6 = SecOC_RxData[_5].AuthAttempts;
  if (_6 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_102 = 0;
  # DEBUG index => index_102
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.40_7 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.41_8 = SecOC_ConfigPtr;
  _9 = SecOC_ConfigPtr.41_8->RxPduConfigPtr;
  _10 = (unsigned int) instId_98(D);
  _11 = _10 * 32;
  _12 = _9 + _11;
  _13 = SecOC_ConfigPtr.40_7 + _12;
  _14 = _13->DataId;
  _15 = (int) _14;
  _16 = (unsigned int) index_92;
  _17 = _16 * 8;
  _18 = _15 >> _17;
  _19 = (int) instId_98(D);
  _20 = SecOC_RxData[_19].DataToAuthenticator;
  _21 = (sizetype) index_92;
  _22 = 1 - _21;
  _23 = _20 + _22;
  _24 = (unsigned char) _18;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  index.42_25 = index_92;
  index_107 = index.42_25 + 1;
  # DEBUG index => index_107

  <bb 8> :
  # index_92 = PHI <index_102(6), index_107(7)>
  # DEBUG index => index_92
  # DEBUG BEGIN_STMT
  if (index_92 <= 1)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _26 = (int) instId_98(D);
  _27 = SecOC_RxData[_26].DataToAuthenticator;
  _28 = _27 + 2;
  _29 = (int) instId_98(D);
  _30 = SecOC_RxData[_29].SecuredPdu.SduDataPtr;
  _31 = (int) instId_98(D);
  _32 = SecOC_RxData[_31].DataLength;
  _33 = (long unsigned int) _32;
  TS_MemCpy32 (_28, _30, _33);
  # DEBUG BEGIN_STMT
  _34 = (int) instId_98(D);
  SecOC_RxData[_34].FVSyncAttempts = 0;
  # DEBUG BEGIN_STMT
  _35 = (int) instId_98(D);
  _36 = SecOC_RxData[_35].DataToAuthenticator;
  _37 = (int) instId_98(D);
  _38 = SecOC_RxData[_37].DataLength;
  _39 = (unsigned int) _38;
  _40 = _39 + 2;
  _41 = (int) instId_98(D);
  _42 = _36 + _40;
  SecOC_RxData[_41].FreshnessVerifyValue = _42;

  <bb 10> :
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.43_43 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.44_44 = SecOC_ConfigPtr;
  _45 = SecOC_ConfigPtr.44_44->RxPduConfigPtr;
  _46 = (unsigned int) instId_98(D);
  _47 = _46 * 32;
  _48 = _45 + _47;
  _49 = SecOC_ConfigPtr.43_43 + _48;
  _50 = _49->FreshnessValueLength;
  if (_50 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.45_51 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.46_52 = SecOC_ConfigPtr;
  _53 = SecOC_ConfigPtr.46_52->RxPduConfigPtr;
  _54 = (unsigned int) instId_98(D);
  _55 = _54 * 32;
  _56 = _53 + _55;
  _57 = SecOC_ConfigPtr.45_51 + _56;
  _58 = _57->FreshnessValueLength;
  _59 = (long unsigned int) _58;
  freshnessValueLength = _59;
  # DEBUG BEGIN_STMT
  _60 = (int) instId_98(D);
  _61 = SecOC_RxConfig[_60].GetRxFreshnessFuncType;
  _62 = (int) _61;
  if (_62 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
<L9>:
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.47_63 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.48_64 = SecOC_ConfigPtr;
  _65 = SecOC_ConfigPtr.48_64->RxPduConfigPtr;
  _66 = (unsigned int) instId_98(D);
  _67 = _66 * 32;
  _68 = _65 + _67;
  _69 = SecOC_ConfigPtr.47_63 + _68;
  _70 = _69->FreshnessValueId;
  _71 = (int) instId_98(D);
  _72 = SecOC_RxData[_71].SecuredPdu.SduDataPtr;
  _73 = (int) instId_98(D);
  _74 = SecOC_RxData[_73].DataLength;
  _75 = (sizetype) _74;
  _76 = _72 + _75;
  SecOC_ConfigPtr.49_77 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.50_78 = SecOC_ConfigPtr;
  _79 = SecOC_ConfigPtr.50_78->RxPduConfigPtr;
  _80 = (unsigned int) instId_98(D);
  _81 = _80 * 32;
  _82 = _79 + _81;
  _83 = SecOC_ConfigPtr.49_77 + _82;
  _84 = _83->FreshnessValueTxLength;
  _85 = (long unsigned int) _84;
  _86 = (int) instId_98(D);
  _87 = SecOC_RxData[_86].FVSyncAttempts;
  _88 = (int) instId_98(D);
  _89 = SecOC_RxData[_88].FreshnessVerifyValue;
  retVal_111 = SecOC_Rx_Get_Freshness (instId_98(D), _70, _76, _85, _87, _89, &freshnessValueLength);
  # DEBUG retVal => retVal_111
  # DEBUG BEGIN_STMT

  <bb 13> :
  # retVal_90 = PHI <retVal_111(12), retVal_101(11)>
  # DEBUG retVal => retVal_90
  freshnessValueLength ={v} {CLOBBER};
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  retVal_108 = 0;
  # DEBUG retVal => retVal_108

  <bb 15> :
  # retVal_91 = PHI <retVal_90(13), retVal_108(14)>
  # DEBUG retVal => retVal_91
  # DEBUG BEGIN_STMT
  SecOC_Rx_CheckFreshnessFuncResult (instId_98(D), retVal_91);

  <bb 16> :
  return;

}


SecOC_Rx_StateIdle (uint16 instId)
{
  Std_ReturnType operationResult;
  int _1;
  unsigned char _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  unsigned char _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instId_11(D);
  _2 = SecOC_RxData[_1].PduREvent;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  operationResult_13 = 1;
  # DEBUG operationResult => operationResult_13
  # DEBUG BEGIN_STMT
  _3 = (int) instId_11(D);
  SecOC_RxData[_3].ProcessingVerification = 1;
  # DEBUG BEGIN_STMT
  SchM_Enter_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _4 = (int) instId_11(D);
  SecOC_RxData[_4].PduInProcess = 1;
  # DEBUG BEGIN_STMT
  _5 = (int) instId_11(D);
  SecOC_RxData[_5].PduREvent = 0;
  # DEBUG BEGIN_STMT
  operationResult_19 = SecOC_Rx_CheckPduContent (instId_11(D));
  # DEBUG operationResult => operationResult_19
  # DEBUG BEGIN_STMT
  SchM_Exit_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (operationResult_19 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_PrepareSecuredPdu (instId_11(D));
  # DEBUG BEGIN_STMT
  SecOC_Rx_ExtractAuthenticDataLen (instId_11(D));
  # DEBUG BEGIN_STMT
  _6 = (int) instId_11(D);
  SecOC_RxData[_6].State = 1;
  # DEBUG BEGIN_STMT
  SecOC_Rx_CheckStatusOverridePreVerify (instId_11(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  _7 = (int) instId_11(D);
  _8 = SecOC_RxData[_7].State;
  if (_8 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SecOC_Rx_ResetSm (instId_11(D), 0, 0);

  <bb 7> :
  return;

}


SecOC_Rx_VerifyStatusOverride_43 (const uint16 * rxInstIdxList, uint16 numberOfRxPdus, uint16 freshnessValueId, uint8 overrideStatus, uint8 numberOfMessagesToOverride)
{
  Std_ReturnType idFound;
  uint16 i;
  uint16 pduIdx;
  long unsigned int SecOC_InitStatus.81_1;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.82_2;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.83_3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct SecOC_RxPduConfigType * _8;
  short unsigned int _9;
  int _10;
  int _11;
  short unsigned int i.84_12;
  Std_ReturnType _37;

  <bb 2> :
  # DEBUG BEGIN_STMT
  pduIdx_21 = 0;
  # DEBUG pduIdx => pduIdx_21
  # DEBUG BEGIN_STMT
  i_22 = 0;
  # DEBUG i => i_22
  # DEBUG BEGIN_STMT
  idFound_23 = 1;
  # DEBUG idFound => idFound_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SecOC_InitStatus.81_1 ={v} SecOC_InitStatus;
  if (SecOC_InitStatus.81_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (overrideStatus_25(D) <= 2)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  i_26 = 0;
  # DEBUG i => i_26
  goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  pduIdx_28 = i_13;
  # DEBUG pduIdx => pduIdx_28
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.82_2 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.83_3 = SecOC_ConfigPtr;
  _4 = SecOC_ConfigPtr.83_3->RxPduConfigPtr;
  _5 = (unsigned int) pduIdx_28;
  _6 = _5 * 32;
  _7 = _4 + _6;
  _8 = SecOC_ConfigPtr.82_2 + _7;
  _9 = _8->FreshnessValueId;
  if (freshnessValueId_29(D) == _9)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Enter_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (overrideStatus_25(D) == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _10 = (int) pduIdx_28;
  SecOC_RxData[_10].NumMsgToOverride = numberOfMessagesToOverride_31(D);

  <bb 8> :
  # DEBUG BEGIN_STMT
  _11 = (int) pduIdx_28;
  SecOC_RxData[_11].VerifyStatusOverride = overrideStatus_25(D);
  # DEBUG BEGIN_STMT
  SchM_Exit_SecOC_SCHM_SECOC_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  idFound_35 = 0;
  # DEBUG idFound => idFound_35

  <bb 9> :
  # idFound_14 = PHI <idFound_15(5), idFound_35(8)>
  # DEBUG idFound => idFound_14
  # DEBUG BEGIN_STMT
  i.84_12 = i_13;
  i_36 = i.84_12 + 1;
  # DEBUG i => i_36

  <bb 10> :
  # i_13 = PHI <i_26(4), i_36(9)>
  # idFound_15 = PHI <idFound_23(4), idFound_14(9)>
  # DEBUG idFound => idFound_15
  # DEBUG i => i_13
  # DEBUG BEGIN_STMT
  if (i_13 < numberOfRxPdus_27(D))
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # idFound_16 = PHI <idFound_23(2), idFound_23(3), idFound_15(10)>
  # DEBUG idFound => idFound_16
  # DEBUG BEGIN_STMT
  _37 = idFound_16;
  return _37;

}


SecOC_Rx_ProcessPduStates (uint16 pduIdx)
{
  int _1;
  int _2;
  unsigned char _3;
  int _4;
  void (*<T586>) (uint16) _5;
  int _6;
  unsigned char _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) pduIdx_10(D);
  SecOC_RxData[_1].ProcessingVerification = 0;
  # DEBUG BEGIN_STMT
  _2 = (int) pduIdx_10(D);
  _3 = SecOC_RxData[_2].State;
  _4 = (int) _3;
  _5 = SecOC_Rx_StateMachine[_4];
  _5 (pduIdx_10(D));
  # DEBUG BEGIN_STMT
  _6 = (int) pduIdx_10(D);
  _7 = SecOC_RxData[_6].ProcessingVerification;
  if (_7 == 1)
    goto <bb 2>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  return;

}


SecOC_Rx_DeInit ()
{
  uint16 pduIdx;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  short unsigned int pduIdx.9_8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pduIdx_11 = 0;
  # DEBUG pduIdx => pduIdx_11
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) pduIdx_9;
  SecOC_RxData[_1].ReceivedSecuredPdu.SduDataPtr = 0B;
  # DEBUG BEGIN_STMT
  _2 = (int) pduIdx_9;
  SecOC_RxData[_2].SecuredPdu.SduDataPtr = 0B;
  # DEBUG BEGIN_STMT
  _3 = (int) pduIdx_9;
  SecOC_RxData[_3].Authenticator = 0B;
  # DEBUG BEGIN_STMT
  _4 = (int) pduIdx_9;
  SecOC_RxData[_4].DataToAuthenticator = 0B;
  # DEBUG BEGIN_STMT
  _5 = (int) pduIdx_9;
  SecOC_RxData[_5].SecuredPdu.SduLength = 0;
  # DEBUG BEGIN_STMT
  _6 = (int) pduIdx_9;
  SecOC_RxData[_6].DataLength = 0;
  # DEBUG BEGIN_STMT
  _7 = (int) pduIdx_9;
  SecOC_RxData[_7].ReceivedSecuredPdu.SduLength = 0;
  # DEBUG BEGIN_STMT
  pduIdx.9_8 = pduIdx_9;
  pduIdx_20 = pduIdx.9_8 + 1;
  # DEBUG pduIdx => pduIdx_20

  <bb 4> :
  # pduIdx_9 = PHI <pduIdx_11(2), pduIdx_20(3)>
  # DEBUG pduIdx => pduIdx_9
  # DEBUG BEGIN_STMT
  if (pduIdx_9 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


SecOC_Rx_Init ()
{
  uint16 pduIdx;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.0_11;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.1_12;
  long unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  sizetype _16;
  const struct SecOC_RxPduConfigType * _17;
  long unsigned int _18;
  int _19;
  uint8 * _20;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.2_21;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.3_22;
  long unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  sizetype _26;
  const struct SecOC_RxPduConfigType * _27;
  long unsigned int _28;
  int _29;
  uint8 * _30;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.4_31;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.5_32;
  long unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  sizetype _36;
  const struct SecOC_RxPduConfigType * _37;
  long unsigned int _38;
  int _39;
  uint8 * _40;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.6_41;
  const struct SecOC_ConfigType * SecOC_ConfigPtr.7_42;
  long unsigned int _43;
  unsigned int _44;
  unsigned int _45;
  sizetype _46;
  const struct SecOC_RxPduConfigType * _47;
  long unsigned int _48;
  int _49;
  uint8 * _50;
  int _51;
  int _52;
  int _53;
  short unsigned int pduIdx.8_54;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pduIdx_57 = 0;
  # DEBUG pduIdx => pduIdx_57
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) pduIdx_55;
  SecOC_RxData[_1].State = 0;
  # DEBUG BEGIN_STMT
  _2 = (int) pduIdx_55;
  SecOC_RxData[_2].PduREvent = 0;
  # DEBUG BEGIN_STMT
  _3 = (int) pduIdx_55;
  SecOC_RxData[_3].PduInProcess = 0;
  # DEBUG BEGIN_STMT
  _4 = (int) pduIdx_55;
  SecOC_RxData[_4].ProcessingVerification = 0;
  # DEBUG BEGIN_STMT
  _5 = (int) pduIdx_55;
  SecOC_RxData[_5].CsmVerificationResult = 1;
  # DEBUG BEGIN_STMT
  _6 = (int) pduIdx_55;
  SecOC_RxData[_6].AuthAttempts = 0;
  # DEBUG BEGIN_STMT
  _7 = (int) pduIdx_55;
  SecOC_RxData[_7].FVSyncAttempts = 0;
  # DEBUG BEGIN_STMT
  _8 = (int) pduIdx_55;
  SecOC_RxData[_8].VerificationResult = 1;
  # DEBUG BEGIN_STMT
  _9 = (int) pduIdx_55;
  SecOC_RxData[_9].VerifyStatusOverride = 2;
  # DEBUG BEGIN_STMT
  _10 = (int) pduIdx_55;
  SecOC_RxData[_10].NumMsgToOverride = 0;
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.0_11 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.1_12 = SecOC_ConfigPtr;
  _13 = SecOC_ConfigPtr.1_12->RxPduConfigPtr;
  _14 = (unsigned int) pduIdx_55;
  _15 = _14 * 32;
  _16 = _13 + _15;
  _17 = SecOC_ConfigPtr.0_11 + _16;
  _18 = _17->BuffersConfig.ReceivedSecuredPduBufferIndex;
  _19 = (int) pduIdx_55;
  _20 = &SecOC_PB_PduBuffer[_18];
  SecOC_RxData[_19].ReceivedSecuredPdu.SduDataPtr = _20;
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.2_21 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.3_22 = SecOC_ConfigPtr;
  _23 = SecOC_ConfigPtr.3_22->RxPduConfigPtr;
  _24 = (unsigned int) pduIdx_55;
  _25 = _24 * 32;
  _26 = _23 + _25;
  _27 = SecOC_ConfigPtr.2_21 + _26;
  _28 = _27->BuffersConfig.SecuredPduBufferIndex;
  _29 = (int) pduIdx_55;
  _30 = &SecOC_PB_PduBuffer[_28];
  SecOC_RxData[_29].SecuredPdu.SduDataPtr = _30;
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.4_31 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.5_32 = SecOC_ConfigPtr;
  _33 = SecOC_ConfigPtr.5_32->RxPduConfigPtr;
  _34 = (unsigned int) pduIdx_55;
  _35 = _34 * 32;
  _36 = _33 + _35;
  _37 = SecOC_ConfigPtr.4_31 + _36;
  _38 = _37->BuffersConfig.AuthenticatorIndex;
  _39 = (int) pduIdx_55;
  _40 = &SecOC_PB_IntBuffer[_38];
  SecOC_RxData[_39].Authenticator = _40;
  # DEBUG BEGIN_STMT
  SecOC_ConfigPtr.6_41 = SecOC_ConfigPtr;
  SecOC_ConfigPtr.7_42 = SecOC_ConfigPtr;
  _43 = SecOC_ConfigPtr.7_42->RxPduConfigPtr;
  _44 = (unsigned int) pduIdx_55;
  _45 = _44 * 32;
  _46 = _43 + _45;
  _47 = SecOC_ConfigPtr.6_41 + _46;
  _48 = _47->BuffersConfig.DataToAuthenticatorIndex;
  _49 = (int) pduIdx_55;
  _50 = &SecOC_PB_IntBuffer[_48];
  SecOC_RxData[_49].DataToAuthenticator = _50;
  # DEBUG BEGIN_STMT
  _51 = (int) pduIdx_55;
  SecOC_RxData[_51].SecuredPdu.SduLength = 0;
  # DEBUG BEGIN_STMT
  _52 = (int) pduIdx_55;
  SecOC_RxData[_52].DataLength = 0;
  # DEBUG BEGIN_STMT
  _53 = (int) pduIdx_55;
  SecOC_RxData[_53].ReceivedSecuredPdu.SduLength = 0;
  # DEBUG BEGIN_STMT
  pduIdx.8_54 = pduIdx_55;
  pduIdx_76 = pduIdx.8_54 + 1;
  # DEBUG pduIdx => pduIdx_76

  <bb 4> :
  # pduIdx_55 = PHI <pduIdx_57(2), pduIdx_76(3)>
  # DEBUG pduIdx => pduIdx_55
  # DEBUG BEGIN_STMT
  if (pduIdx_55 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


