__attribute__((target ("general-regs-only")))
OS_ShutdownNoHooks ()
{
  os_unsigned_t confusion;

  <bb 2> :
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 6;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  confusion = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  confusion = confusion ^ 2;

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (confusion != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


__attribute__((target ("general-regs-only")))
OS_Shutdown (os_result_t code, os_boolean_t sync)
{
  const struct os_appcontext_t * casdhApp;
  os_unsigned_t casdhI;
  const os_coreid_t _myCoreId;
  struct os_kerneldata_t * const OS_kd;
  struct os_kerneldata_t * const kernel_data;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;
  # DEBUG BEGIN_STMT
  OS_intDisableLevelAll.0_1 = OS_intDisableLevelAll;
  OS_CORTEXM_IntSetDisablingLevel (OS_intDisableLevelAll.0_1);
  # DEBUG BEGIN_STMT
  OS_IntDisableConditional ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = OS_executionTimer[0];
  if (_2 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = OS_executionTimer[0];
  _4 = _3->driver;
  _5 = _4->hwtStop;
  _6 = OS_executionTimer[0];
  _5 (_6);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = OS_kernelData.appsStarted;
  if (_7 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd = &OS_kernelData;
  # DEBUG BEGIN_STMT
  _myCoreId = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  casdhApp = OS_appTableBase;
  # DEBUG BEGIN_STMT
  casdhI = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _8 = casdhApp->shutdownHook;
  if (_8 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 9;
  # DEBUG BEGIN_STMT
  OS_CallShutdownHook (casdhApp, code);
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;

  <bb 8> :
  # DEBUG BEGIN_STMT
  casdhApp = casdhApp + 64;
  # DEBUG BEGIN_STMT
  casdhI = casdhI + 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  OS_nApps.1_9 = OS_nApps;
  _10 = (unsigned int) OS_nApps.1_9;
  if (casdhI < _10)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_HandleShutdownHook (code);
  return;

}


__attribute__((target ("general-regs-only")))
OS_HandleShutdownHook (os_result_t code)
{
  os_uint8_t Os_CallHookTmp;
  struct os_kerneldata_t * const OS_kd;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd = &OS_kernelData;
  # DEBUG BEGIN_STMT
  Os_CallHookTmp = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 9;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ptrShutdownHook.2_1 = OS_ptrShutdownHook;
  OS_ptrShutdownHook.2_1 (code);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = Os_CallHookTmp;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ShutdownNoHooks ();
  return;

}


