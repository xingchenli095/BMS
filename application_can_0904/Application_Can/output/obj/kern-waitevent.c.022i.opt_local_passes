__attribute__((target ("general-regs-only")))
OS_KernWaitEvent (os_eventmask_t e)
{
  os_uint8_t Os_CallHookTmp;
  struct os_kerneldata_t * const OS_kd;
  os_uint8_t Os_CallHookTmp;
  struct os_kerneldata_t * const OS_kd;
  os_paramtype_t p[3];
  os_result_t r;
  struct os_taskdynamic_t * td;
  const struct os_task_t * ts;
  os_intstatus_t is;
  struct os_kerneldata_t * const kernel_data;
  unsigned char _1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  unsigned char OS_iecMode.0_5;
  short unsigned int _6;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  short unsigned int OS_kernDisableLevel.1_11;
  unsigned char _12;
  void (*<T62f>) (const struct os_task_t *) OS_stopTaskExecTimingFp.2_13;
  unsigned char _14;
  unsigned int _15;
  unsigned int _16;
  void (*<T467>) (void) OS_ptrPostTaskHook.3_17;
  short unsigned int _18;
  short unsigned int _19;
  os_boolean_t (*<T68c>) (os_ratemonitorid_t) OS_rateMonitorFunc.4_20;
  short unsigned int _21;
  int _22;
  unsigned char _23;
  void (*<T467>) (void) OS_ptrPostTaskHook.5_24;
  short unsigned int _25;
  struct os_taskaccounting_t * _26;
  struct os_taskaccounting_t * _27;
  struct os_taskaccounting_t * _28;
  void (*<T62f>) (const struct os_task_t *) OS_startTaskExecTimingFp.6_29;
  os_result_t _82;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_38 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  r_39 = 0;
  # DEBUG r => r_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  p[0] = e_41(D);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.inFunction;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ts_45 = OS_kernelData.taskCurrent;
  # DEBUG ts => ts_45
  # DEBUG BEGIN_STMT
  _2 = ts_45->flags;
  _3 = (unsigned int) _2;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  td_48 = ts_45->dynamic;
  # DEBUG td => td_48
  # DEBUG BEGIN_STMT
  OS_iecMode.0_5 = OS_iecMode;
  if (OS_iecMode.0_5 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _6 = BIT_FIELD_REF <MEM[(void *)td_48], 16, 160>;
  _7 = _6;
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  r_50 = OS_Error (&OS_svc_WaitEvent, 55, 0B);
  # DEBUG r => r_50
  goto <bb 29>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _8 = td_48->lastLock;
  if (_8 != 4294967295)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _9 = td_48->lastLock;
  _10 = _9 >> 24;
  if (_10 == 9)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  r_81 = OS_Error (&OS_svc_WaitEvent, 156, &p);
  # DEBUG r => r_81
  goto <bb 29>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  r_79 = OS_Error (&OS_svc_WaitEvent, 13, &p);
  # DEBUG r => r_79
  goto <bb 29>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.1_11 = OS_kernDisableLevel;
  is_52 = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.1_11);
  # DEBUG is => is_52
  # DEBUG BEGIN_STMT
  _12 = td_48->state;
  if (_12 == 5)
    goto <bb 12>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (e_41(D) == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  r_54 = OS_Error (&OS_svc_WaitEvent, 14, &p);
  # DEBUG r => r_54

  <bb 14> :
  # r_30 = PHI <r_39(12), r_54(13)>
  # DEBUG r => r_30
  # DEBUG BEGIN_STMT
  if (r_30 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  OS_stopTaskExecTimingFp.2_13 = OS_stopTaskExecTimingFp;
  OS_stopTaskExecTimingFp.2_13 (ts_45);
  # DEBUG BEGIN_STMT
  _14 = td_48->state;
  if (_14 == 5)
    goto <bb 16>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _15 = td_48->pEvents;
  _16 = e_41(D) & _15;
  if (_16 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd_69 = &OS_kernelData;
  # DEBUG OS_kd => OS_kd_69
  # DEBUG BEGIN_STMT
  Os_CallHookTmp_70 = OS_kernelData.inFunction;
  # DEBUG Os_CallHookTmp => Os_CallHookTmp_70
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 12;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ptrPostTaskHook.3_17 = OS_ptrPostTaskHook;
  OS_ptrPostTaskHook.3_17 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = Os_CallHookTmp_70;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _18 = ts_45->linkBase;
  OS_Dequeue (_18);
  # DEBUG BEGIN_STMT
  td_48->wEvents = e_41(D);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td_48->state = 6;
  goto <bb 26>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _19 = ts_45->rateMonitor;
  if (_19 != 65535)
    goto <bb 19>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 19> :
  OS_rateMonitorFunc.4_20 = OS_rateMonitorFunc;
  _21 = ts_45->rateMonitor;
  _22 = OS_rateMonitorFunc.4_20 (_21);
  if (_22 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  r_58 = OS_Error (&OS_svc_WaitEvent, 54, &p);
  # DEBUG r => r_58
  # DEBUG BEGIN_STMT
  if (r_58 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 21> :
  _23 = td_48->state;
  if (_23 == 5)
    goto <bb 22>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd_59 = &OS_kernelData;
  # DEBUG OS_kd => OS_kd_59
  # DEBUG BEGIN_STMT
  Os_CallHookTmp_60 = OS_kernelData.inFunction;
  # DEBUG Os_CallHookTmp => Os_CallHookTmp_60
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 12;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ptrPostTaskHook.5_24 = OS_ptrPostTaskHook;
  OS_ptrPostTaskHook.5_24 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = Os_CallHookTmp_60;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = ts_45->linkBase;
  OS_Dequeue (_25);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td_48->state = 1;
  goto <bb 26>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = ts_45->accounting;
  if (_26 != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  _27 = ts_45->accounting;
  _27->etUsed = 0;
  # DEBUG BEGIN_STMT
  _28 = ts_45->accounting;
  _28->etType = 1;

  <bb 25> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_startTaskExecTimingFp.6_29 = OS_startTaskExecTimingFp;
  OS_startTaskExecTimingFp.6_29 (ts_45);

  <bb 26> :
  # r_31 = PHI <r_39(11), r_30(14), r_30(15), r_30(17), r_58(21), r_30(25), r_58(20), r_58(22)>
  # DEBUG r => r_31
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_52);
  goto <bb 29>; [INV]

  <bb 27> :
  # DEBUG BEGIN_STMT
  r_47 = OS_Error (&OS_svc_WaitEvent, 15, &p);
  # DEBUG r => r_47
  goto <bb 29>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  r_44 = OS_Error (&OS_svc_WaitEvent, 12, &p);
  # DEBUG r => r_44

  <bb 29> :
  # r_32 = PHI <r_47(27), r_44(28), r_79(10), r_31(26), r_81(9), r_50(6)>
  # DEBUG r => r_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _82 = r_32;
  p ={v} {CLOBBER};
  return _82;

}


