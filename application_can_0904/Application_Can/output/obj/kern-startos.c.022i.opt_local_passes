__attribute__((target ("general-regs-only")))
OS_KernStartOs (os_appmodeid_t mode)
{
  const struct os_appcontext_t * casuhApp;
  os_unsigned_t casuhI;
  const os_coreid_t _myCoreId;
  struct os_kerneldata_t * const OS_kd;
  os_uint8_t Os_CallHookTmp;
  struct os_kerneldata_t * const OS_kd;
  os_paramtype_t p[3];
  struct os_kerneldata_t * const kernel_data;
  os_boolean_t panic;
  void (*os_initfunc_t) (void) * fct;
  os_intstatus_t is;
  unsigned int _1;
  short unsigned int OS_intDisableLevelAll.0_2;
  unsigned char _3;
  unsigned int OS_configMode.1_4;
  unsigned int _5;
  unsigned char OS_iecMode.2_6;
  short unsigned int _7;
  short unsigned int _8;
  unsigned int OS_configMode.3_9;
  unsigned int _10;
  unsigned char OS_nStartModes.4_11;
  unsigned int OS_configMode.5_12;
  unsigned int _13;
  void (*<T467>) (void) _14;
  void (*<T467>) (void) _15;
  void (*<T467>) (void) OS_ptrStartupHook.6_16;
  void (*<T467>) (void) _17;
  unsigned char OS_nApps.7_18;
  unsigned int _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  panic_32 = 0;
  # DEBUG panic => panic_32
  # DEBUG BEGIN_STMT
  kernel_data_33 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) mode_34(D);
  p[0] = _1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_intDisableLevelAll.0_2 = OS_intDisableLevelAll;
  is_38 = OS_CORTEXM_IntSetDisablingLevel (OS_intDisableLevelAll.0_2);
  # DEBUG is => is_38
  # DEBUG BEGIN_STMT
  _3 = OS_kernelData.inFunction;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_configMode.1_4 = OS_configMode;
  _5 = OS_configMode.1_4 & 1024;
  if (_5 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_StartOs, 12, &p);

  <bb 5> :
  # DEBUG BEGIN_STMT
  panic_44 = 1;
  # DEBUG panic => panic_44
  goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  OS_iecMode.2_6 = OS_iecMode;
  if (OS_iecMode.2_6 > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  _7 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _8 = _7;
  if (_8 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  OS_configMode.3_9 = OS_configMode;
  _10 = OS_configMode.3_9 & 1024;
  if (_10 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_StartOs, 55, 0B);

  <bb 10> :
  # DEBUG BEGIN_STMT
  panic_40 = 1;
  # DEBUG panic => panic_40
  goto <bb 15>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_nStartModes.4_11 = OS_nStartModes;
  if (mode_34(D) >= OS_nStartModes.4_11)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_configMode.5_12 = OS_configMode;
  _13 = OS_configMode.5_12 & 1024;
  if (_13 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_StartOs, 22, &p);

  <bb 14> :
  # DEBUG BEGIN_STMT
  panic_42 = 1;
  # DEBUG panic => panic_42

  <bb 15> :
  # panic_21 = PHI <panic_44(5), panic_40(10), panic_32(11), panic_42(14)>
  # DEBUG panic => panic_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (panic_21 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_38);
  # DEBUG BEGIN_STMT
  OS_Panic (5);
  goto <bb 26>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  OS_appMode = mode_34(D);
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;
  # DEBUG BEGIN_STMT
  fct_47 = &OS_initFunc[0];
  # DEBUG fct => fct_47
  # DEBUG BEGIN_STMT
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _14 = *fct_20;
  _14 ();
  # DEBUG BEGIN_STMT
  fct_65 = fct_20 + 4;
  # DEBUG fct => fct_65

  <bb 19> :
  # fct_20 = PHI <fct_47(17), fct_65(18)>
  # DEBUG fct => fct_20
  # DEBUG BEGIN_STMT
  _15 = *fct_20;
  if (_15 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_kernelData.appsStarted = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd_49 = &OS_kernelData;
  # DEBUG OS_kd => OS_kd_49
  # DEBUG BEGIN_STMT
  Os_CallHookTmp_50 = OS_kernelData.inFunction;
  # DEBUG Os_CallHookTmp => Os_CallHookTmp_50
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 8;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ptrStartupHook.6_16 = OS_ptrStartupHook;
  OS_ptrStartupHook.6_16 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = Os_CallHookTmp_50;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd_54 = &OS_kernelData;
  # DEBUG OS_kd => OS_kd_54
  # DEBUG BEGIN_STMT
  _myCoreId_55 = 0;
  # DEBUG _myCoreId => _myCoreId_55
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  casuhApp_56 = OS_appTableBase;
  # DEBUG casuhApp => casuhApp_56
  # DEBUG BEGIN_STMT
  casuhI_57 = 0;
  # DEBUG casuhI => casuhI_57
  goto <bb 24>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  _17 = casuhApp_23->startupHook;
  if (_17 != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 8;
  # DEBUG BEGIN_STMT
  OS_CallStartupHook (casuhApp_23);
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;

  <bb 23> :
  # DEBUG BEGIN_STMT
  casuhApp_62 = casuhApp_23 + 64;
  # DEBUG casuhApp => casuhApp_62
  # DEBUG BEGIN_STMT
  casuhI_63 = casuhI_22 + 1;
  # DEBUG casuhI => casuhI_63

  <bb 24> :
  # casuhI_22 = PHI <casuhI_57(20), casuhI_63(23)>
  # casuhApp_23 = PHI <casuhApp_56(20), casuhApp_62(23)>
  # DEBUG casuhApp => casuhApp_23
  # DEBUG casuhI => casuhI_22
  # DEBUG BEGIN_STMT
  OS_nApps.7_18 = OS_nApps;
  _19 = (unsigned int) OS_nApps.7_18;
  if (casuhI_22 < _19)
    goto <bb 21>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.hookApp = 0B;

  <bb 26> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  p ={v} {CLOBBER};
  return;

}


