
Analyzing function: OS_KillIsr/0
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: OS_KillIsr

IPA function summary for OS_KillIsr/0 inlinable
  global time:     21.000000
  self size:       13
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:6.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    OS_KillCalledContext/2 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12

Symbol table:

OS_KillCalledContext/2 (OS_KillCalledContext) @06cb8d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KillIsr/0 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
OS_isrTableBase/1 (OS_isrTableBase) @06c98630
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KillIsr/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_KillIsr/0 (OS_KillIsr) @06cb8b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_isrTableBase/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: OS_KillCalledContext/2 (1073741824 (estimated locally),1.00 per call) 
__attribute__((target ("general-regs-only")))
OS_KillIsr (os_isrid_t i)
{
  struct os_isrdynamic_t * const id;
  const struct os_isr_t * OS_isrTableBase.0_1;
  unsigned int _2;
  unsigned int _3;
  const struct os_isr_t * _4;
  unsigned char _5;
  unsigned char _6;
  struct os_savedcontext_t * _7;
  os_result_t _13;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  OS_isrTableBase.0_1 = OS_isrTableBase;
  _2 = (unsigned int) i_9(D);
  _3 = _2 * 68;
  _4 = OS_isrTableBase.0_1 + _3;
  id_10 = _4->dynamic;
  # DEBUG id => id_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = id_10->statusflags;
  _6 = _5 | 64;
  id_10->statusflags = _6;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = &id_10->c;
  _13 = OS_KillCalledContext (_7);
  return _13;

}


