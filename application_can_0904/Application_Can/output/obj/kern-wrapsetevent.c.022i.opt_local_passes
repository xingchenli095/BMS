__attribute__((target ("general-regs-only")))
OS_WrapSetEvent (const struct os_alarm_t * a)
{
  os_paramtype_t p[3];
  os_errorresult_t e;
  os_uint8_t save;
  const os_eventmask_t evt;
  const struct os_task_t * ts;
  const os_taskid_t t;
  struct os_kerneldata_t * const kernel_data;
  unsigned int _1;
  const struct os_task_t * OS_taskTableBase.0_2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_7 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_7
  # DEBUG BEGIN_STMT
  _1 = a_9(D)->object;
  t_10 = (const os_taskid_t) _1;
  # DEBUG t => t_10
  # DEBUG BEGIN_STMT
  OS_taskTableBase.0_2 = OS_taskTableBase;
  _3 = (unsigned int) t_10;
  _4 = _3 * 76;
  ts_11 = OS_taskTableBase.0_2 + _4;
  # DEBUG ts => ts_11
  # DEBUG BEGIN_STMT
  evt_12 = a_9(D)->event;
  # DEBUG evt => evt_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  save_13 = OS_kernelData.inFunction;
  # DEBUG save => save_13
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;
  # DEBUG BEGIN_STMT
  e_16 = OS_LocalSetEvent (ts_11, evt_12);
  # DEBUG e => e_16
  # DEBUG BEGIN_STMT
  if (e_16 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) t_10;
  p[0] = _5;
  # DEBUG BEGIN_STMT
  p[1] = evt_12;
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_SetEvent, e_16, &p);

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = save_13;
  p ={v} {CLOBBER};
  return;

}


