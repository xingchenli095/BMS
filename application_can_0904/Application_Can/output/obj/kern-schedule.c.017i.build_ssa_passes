__attribute__((target ("general-regs-only")))
OS_KernSchedule ()
{
  os_tasklink_t * const taskActivations;
  os_tasklink_t next;
  os_tasklink_t link;
  struct os_taskdynamic_t * td;
  os_result_t r;
  os_intstatus_t is;
  struct os_kerneldata_t * const kernel_data;
  os_result_t D.7440;
  int iftmp.2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  r = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.inFunction;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.taskCurrent;
  td = _2->dynamic;
  # DEBUG BEGIN_STMT
  OS_iecMode.0_3 = OS_iecMode;
  if (OS_iecMode.0_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _4 = BIT_FIELD_REF <MEM[(void *)td], 16, 160>;
  _5 = _4;
  if (_5 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_Schedule, 55, 0B);
  goto <bb 19>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _6 = td->lastLock;
  if (_6 != 4294967295)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _7 = td->lastLock;
  _8 = _7 >> 24;
  if (_8 == 9)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_Schedule, 156, 0B);
  goto <bb 19>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_Schedule, 13, 0B);
  goto <bb 19>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  taskActivations = &OS_taskActivations;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.1_9 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.1_9);
  # DEBUG BEGIN_STMT
  _10 = OS_kernelData.taskCurrent;
  _11 = _10->linkBase;
  _12 = td->cAct;
  _13 = (short unsigned int) _12;
  link = _11 + _13;
  # DEBUG BEGIN_STMT
  _14 = (unsigned int) link;
  _15 = _14 * 2;
  _16 = &OS_taskActivations + _15;
  next = *_16;
  # DEBUG BEGIN_STMT
  _17 = td->state;
  if (_17 == 5)
    goto <bb 11>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 11> :
  if (next != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 12> :
  _18 = OS_kernelData.taskCurrent;
  _19 = _18->queuePrio;
  _20 = (int) _19;
  _21 = (int) next;
  _22 = (int) next;
  _23 = OS_taskPtrs[_22];
  _24 = _23->linkBase;
  _25 = (int) _24;
  _26 = (int) next;
  _27 = OS_taskPtrs[_26];
  _28 = _27->dynamic;
  _29 = _28->cAct;
  _30 = (int) _29;
  _31 = _25 + _30;
  if (_21 == _31)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _32 = (int) next;
  _33 = OS_taskPtrs[_32];
  _34 = _33->dynamic;
  _35 = _34->prio;
  iftmp.2 = (int) _35;
  goto <bb 15>; [INV]

  <bb 14> :
  _36 = (int) next;
  _37 = OS_taskPtrs[_36];
  _38 = _37->queuePrio;
  iftmp.2 = (int) _38;

  <bb 15> :
  if (iftmp.2 > _20)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _39 = OS_kernelData.taskCurrent;
  _40 = _39->queuePrio;
  _41 = (short unsigned int) _40;
  td->prio = _41;
  # DEBUG BEGIN_STMT
  _42 = td->prio;
  OS_RequeueDown (link, _42);

  <bb 17> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_Schedule, 12, 0B);

  <bb 19> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7440 = r;
  return D.7440;

}


