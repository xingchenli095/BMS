
Marking local functions:


Marking externally visible functions: OS_StartIsrIntLockTiming


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_ExceedExecTime/5 (OS_ExceedExecTime) @06c3c000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_StartIsrIntLockTiming/0 
  Calls: 
OS_GetTimeUsed/4 (OS_GetTimeUsed) @06c3cee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_StartIsrIntLockTiming/0 
  Calls: 
OS_executionTimer/3 (OS_executionTimer) @06c1ce10
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_isrTableBase/2 (OS_isrTableBase) @06c1cdc8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_StartIsrIntLockTiming/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06c1cd80
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_StartIsrIntLockTiming/0 (addr)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (write)OS_StartIsrIntLockTiming/0 (read)OS_StartIsrIntLockTiming/0 (read)
  Availability: not_available
  Varpool flags:
OS_StartIsrIntLockTiming/0 (OS_StartIsrIntLockTiming) @06c3cc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_isrTableBase/2 (read)OS_executionTimer/3 (read)OS_executionTimer/3 (read)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_executionTimer/3 (read)OS_executionTimer/3 (read)OS_executionTimer/3 (read)OS_executionTimer/3 (read)OS_kernelData/1 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_ExceedExecTime/5 OS_GetTimeUsed/4 
   Indirect call
   Indirect call
__attribute__((target ("general-regs-only")))
OS_StartIsrIntLockTiming (os_isrid_t i, os_intlocktype_t locktype)
{
  os_tick_t OS_hwtStartDelta;
  os_tick_t remaining;
  os_tick_t used;
  os_tick_t locktime;
  const struct os_isr_t * const isr;
  struct os_kerneldata_t * const kernel_data;
  const os_tick_t iftmp.1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  OS_isrTableBase.0_1 = OS_isrTableBase;
  _2 = (unsigned int) i;
  _3 = _2 * 68;
  isr = OS_isrTableBase.0_1 + _3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (locktype == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1 = isr->osLockTime;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1 = isr->allLockTime;

  <bb 5> :
  locktime = iftmp.1;
  # DEBUG BEGIN_STMT
  if (locktime != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = OS_executionTimer[0];
  _5 = _4->driver;
  _6 = _5->hwtStop;
  _7 = OS_executionTimer[0];
  _6 (_7);
  # DEBUG BEGIN_STMT
  used = OS_GetTimeUsed ();
  # DEBUG BEGIN_STMT
  _8 = OS_kernelData.accounting.etUsed;
  _9 = used + _8;
  OS_kernelData.accounting.etUsed = _9;
  # DEBUG BEGIN_STMT
  _10 = isr->flags;
  _11 = (unsigned int) _10;
  _12 = _11 & 64;
  if (_12 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _13 = isr->accounting;
  _14 = _13->etMax;
  _15 = OS_kernelData.accounting.etUsed;
  if (_14 < _15)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = isr->accounting;
  _17 = OS_kernelData.accounting.etUsed;
  _16->etMax = _17;

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _18 = OS_kernelData.accounting.etLimit;
  if (_18 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _19 = OS_kernelData.accounting.etUsed;
  _20 = OS_kernelData.accounting.etLimit;
  if (_19 >= _20)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_ExceedExecTime ();
  goto <bb 24>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _21 = OS_kernelData.accounting.etLimit;
  if (_21 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  remaining = 4294967295;
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _22 = OS_kernelData.accounting.etLimit;
  _23 = OS_kernelData.accounting.etUsed;
  remaining = _22 - _23;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (locktype == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _24 = OS_kernelData.accounting.etType;
  OS_kernelData.accounting.osSaveType = _24;
  # DEBUG BEGIN_STMT
  _25 = OS_kernelData.accounting.etUsed;
  OS_kernelData.accounting.osSaveUsed = _25;
  # DEBUG BEGIN_STMT
  _26 = OS_kernelData.accounting.etLimit;
  OS_kernelData.accounting.osSaveLimit = _26;
  goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _27 = OS_kernelData.accounting.etType;
  OS_kernelData.accounting.allSaveType = _27;
  # DEBUG BEGIN_STMT
  _28 = OS_kernelData.accounting.etUsed;
  OS_kernelData.accounting.allSaveUsed = _28;
  # DEBUG BEGIN_STMT
  _29 = OS_kernelData.accounting.etLimit;
  OS_kernelData.accounting.allSaveLimit = _29;

  <bb 18> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etUsed = 0;
  # DEBUG BEGIN_STMT
  if (locktime >= remaining)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etLimit = remaining;
  goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etLimit = locktime;
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.inFunction = 3;
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etType = 3;

  <bb 21> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_hwtStartDelta = OS_kernelData.accounting.etLimit;
  # DEBUG BEGIN_STMT
  _30 = OS_executionTimer[0];
  _31 = _30->maxDelta;
  if (OS_hwtStartDelta > _31)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  _32 = OS_executionTimer[0];
  OS_hwtStartDelta = _32->defDelta;

  <bb 23> :
  # DEBUG BEGIN_STMT
  _33 = OS_executionTimer[0];
  _34 = _33->driver;
  _35 = _34->hwtStart;
  _36 = OS_executionTimer[0];
  _37 = OS_kernelData.accounting.frc;
  _35 (_36, _37, OS_hwtStartDelta);

  <bb 24> :
  # DEBUG BEGIN_STMT
  return;

}


