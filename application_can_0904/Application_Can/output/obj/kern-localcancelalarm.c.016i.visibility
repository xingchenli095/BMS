
Marking local functions:


Marking externally visible functions: OS_LocalCancelAlarm


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_KillAlarm/4 (OS_KillAlarm) @06c38e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_LocalCancelAlarm/0 
  Calls: 
OS_AppIsAccessible/3 (OS_AppIsAccessible) @06c38d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_LocalCancelAlarm/0 
  Calls: 
OS_CORTEXM_IntSetDisablingLevel/2 (OS_CORTEXM_IntSetDisablingLevel) @06c38c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_LocalCancelAlarm/0 OS_LocalCancelAlarm/0 
  Calls: 
OS_kernDisableLevel/1 (OS_kernDisableLevel) @06c187e0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_LocalCancelAlarm/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_LocalCancelAlarm/0 (OS_LocalCancelAlarm) @06c38a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernDisableLevel/1 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_CORTEXM_IntSetDisablingLevel/2 OS_KillAlarm/4 OS_AppIsAccessible/3 OS_CORTEXM_IntSetDisablingLevel/2 
__attribute__((target ("general-regs-only")))
OS_LocalCancelAlarm (os_alarmid_t a, const struct os_alarm_t * as)
{
  os_intstatus_t is;
  struct os_alarmdynamic_t * ad;
  os_errorresult_t e;
  os_errorresult_t D.7420;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ad = as->dynamic;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_1 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.0_1);
  # DEBUG BEGIN_STMT
  _2 = as->app;
  _3 = OS_AppIsAccessible (_2);
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  e = 154;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _4 = ad->inUse;
  if (_4 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  e = OS_KillAlarm (a, 0);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  e = 11;

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  # DEBUG BEGIN_STMT
  D.7420 = e;
  return D.7420;

}


