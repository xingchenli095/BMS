
Marking local functions:


Marking externally visible functions: OS_KernGetCounterValue


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_GetCount/10 (OS_GetCount) @06d00a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetCounterValue/0 
  Calls: 
OS_AppIsAccessible/9 (OS_AppIsAccessible) @06d009a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetCounterValue/0 
  Calls: 
OS_counterTableBase/8 (OS_counterTableBase) @06d2f240
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetCounterValue/0 (read)OS_KernGetCounterValue/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nCounters/7 (OS_nCounters) @06d2f1b0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetCounterValue/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CanWrite/6 (OS_CanWrite) @06d008c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetCounterValue/0 
  Calls: 
OS_iecMode/5 (OS_iecMode) @06d2f090
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetCounterValue/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_GetCounterValue/4 (OS_svc_GetCounterValue) @06d2f048
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetCounterValue/0 (addr)OS_KernGetCounterValue/0 (addr)OS_KernGetCounterValue/0 (addr)OS_KernGetCounterValue/0 (addr)OS_KernGetCounterValue/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/3 (OS_Error) @06d007e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetCounterValue/0 OS_KernGetCounterValue/0 OS_KernGetCounterValue/0 OS_KernGetCounterValue/0 OS_KernGetCounterValue/0 
  Calls: 
OS_permittedContext/2 (OS_permittedContext) @06c33f78
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetCounterValue/0 (read)OS_KernGetCounterValue/0 (read)OS_KernGetCounterValue/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06c33f30
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetCounterValue/0 (read)OS_KernGetCounterValue/0 (read)OS_KernGetCounterValue/0 (read)OS_KernGetCounterValue/0 (read)OS_KernGetCounterValue/0 (read)OS_KernGetCounterValue/0 (read)
  Availability: not_available
  Varpool flags:
OS_KernGetCounterValue/0 (OS_KernGetCounterValue) @06d00380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_svc_GetCounterValue/4 (addr)OS_iecMode/5 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_GetCounterValue/4 (addr)OS_svc_GetCounterValue/4 (addr)OS_nCounters/7 (read)OS_svc_GetCounterValue/4 (addr)OS_counterTableBase/8 (read)OS_svc_GetCounterValue/4 (addr)OS_counterTableBase/8 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_GetCount/10 OS_Error/3 OS_AppIsAccessible/9 OS_Error/3 OS_Error/3 OS_CanWrite/6 OS_Error/3 OS_Error/3 
__attribute__((target ("general-regs-only")))
OS_KernGetCounterValue (os_counterid_t c, os_tick_t * out)
{
  os_paramtype_t p[3];
  os_result_t r;
  const struct os_counter_t * cs;
  os_result_t D.7443;
  int iftmp.2;
  _Bool iftmp.1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  r = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) c;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  out.0_2 = (unsigned int) out;
  p[1] = out.0_2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = OS_kernelData.inFunction;
  if (_3 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.3_4 = OS_permittedContext;
  _5 = OS_permittedContext.3_4 + 32;
  _6 = *_5;
  _7 = (unsigned int) _6;
  _8 = _7 & 1024;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.4_9 = OS_permittedContext;
  _10 = OS_permittedContext.4_9 + 32;
  _11 = *_10;
  _12 = OS_kernelData.errorStatus.calledFrom;
  _13 = (int) _12;
  _14 = 1 << _13;
  _15 = (short unsigned int) _14;
  _16 = _11 & _15;
  if (_16 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2 = 0;

  <bb 7> :
  iftmp.1 = iftmp.2 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.5_17 = OS_permittedContext;
  _18 = OS_permittedContext.5_17 + 32;
  _19 = *_18;
  _20 = OS_kernelData.inFunction;
  _21 = (int) _20;
  _22 = 1 << _21;
  _23 = (short unsigned int) _22;
  _24 = _19 & _23;
  iftmp.1 = _24 == 0;

  <bb 9> :
  if (iftmp.1 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetCounterValue, 12, &p);
  goto <bb 23>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_iecMode.6_25 = OS_iecMode;
  if (OS_iecMode.6_25 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  _26 = OS_kernelData.inFunction;
  if (_26 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _27 = OS_kernelData.taskCurrent;
  _28 = _27->dynamic;
  _29 = BIT_FIELD_REF <MEM[(void *)_28], 16, 160>;
  _30 = _29;
  if (_30 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _31 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _32 = _31;
  if (_32 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetCounterValue, 55, &p);
  goto <bb 23>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _33 = OS_CanWrite (out, 4);
  if (_33 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetCounterValue, 6, &p);
  goto <bb 23>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  OS_nCounters.7_34 = OS_nCounters;
  if (c >= OS_nCounters.7_34)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetCounterValue, 17, &p);
  goto <bb 23>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_counterTableBase.8_35 = OS_counterTableBase;
  _36 = (unsigned int) c;
  _37 = _36 * 32;
  _38 = OS_counterTableBase.8_35 + _37;
  _39 = _38->app;
  _40 = OS_AppIsAccessible (_39);
  if (_40 == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetCounterValue, 154, &p);
  goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  OS_counterTableBase.9_41 = OS_counterTableBase;
  _42 = (unsigned int) c;
  _43 = _42 * 32;
  cs = OS_counterTableBase.9_41 + _43;
  # DEBUG BEGIN_STMT
  _44 = OS_GetCount (cs);
  *out = _44;

  <bb 23> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7443 = r;
  p = {CLOBBER};
  return D.7443;

}


