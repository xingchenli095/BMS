
Marking local functions:


Marking externally visible functions: OS_KernStartOs


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_nApps/15 (OS_nApps) @06d2c798
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CallStartupHook/14 (OS_CallStartupHook) @06d00620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernStartOs/0 
  Calls: 
OS_appTableBase/13 (OS_appTableBase) @06d2c708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_ptrStartupHook/12 (OS_ptrStartupHook) @06d2c630
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_initFunc/11 (OS_initFunc) @06d2c558
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_appMode/10 (OS_appMode) @06d2c510
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (write)
  Availability: not_available
  Varpool flags:
OS_Panic/9 (OS_Panic) @06d00540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernStartOs/0 
  Calls: 
OS_nStartModes/8 (OS_nStartModes) @06d2c3f0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_iecMode/7 (OS_iecMode) @06d2c360
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_StartOs/6 (OS_svc_StartOs) @06d2c318
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (addr)OS_KernStartOs/0 (addr)OS_KernStartOs/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/5 (OS_Error) @06d00380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernStartOs/0 OS_KernStartOs/0 OS_KernStartOs/0 
  Calls: 
OS_configMode/4 (OS_configMode) @06d2c288
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (read)OS_KernStartOs/0 (read)OS_KernStartOs/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CORTEXM_IntSetDisablingLevel/3 (OS_CORTEXM_IntSetDisablingLevel) @06d002a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernStartOs/0 OS_KernStartOs/0 
  Calls: 
OS_intDisableLevelAll/2 (OS_intDisableLevelAll) @06d2c1f8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06d2c1b0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernStartOs/0 (addr)OS_KernStartOs/0 (read)OS_KernStartOs/0 (read)OS_KernStartOs/0 (write)OS_KernStartOs/0 (write)OS_KernStartOs/0 (addr)OS_KernStartOs/0 (read)OS_KernStartOs/0 (write)OS_KernStartOs/0 (write)OS_KernStartOs/0 (addr)OS_KernStartOs/0 (write)OS_KernStartOs/0 (write)OS_KernStartOs/0 (write)
  Availability: not_available
  Varpool flags:
OS_KernStartOs/0 (OS_KernStartOs) @06c5c000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_intDisableLevelAll/2 (read)OS_kernelData/1 (read)OS_configMode/4 (read)OS_svc_StartOs/6 (addr)OS_iecMode/7 (read)OS_kernelData/1 (read)OS_configMode/4 (read)OS_svc_StartOs/6 (addr)OS_nStartModes/8 (read)OS_configMode/4 (read)OS_svc_StartOs/6 (addr)OS_appMode/10 (write)OS_kernelData/1 (write)OS_initFunc/11 (addr)OS_kernelData/1 (write)OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_ptrStartupHook/12 (read)OS_kernelData/1 (write)OS_kernelData/1 (addr)OS_appTableBase/13 (read)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_nApps/15 (read)OS_kernelData/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_CallStartupHook/14 OS_Panic/9 OS_CORTEXM_IntSetDisablingLevel/3 OS_Error/5 OS_Error/5 OS_Error/5 OS_CORTEXM_IntSetDisablingLevel/3 
   Indirect call
   Indirect call
__attribute__((target ("general-regs-only")))
OS_KernStartOs (os_appmodeid_t mode)
{
  const struct os_appcontext_t * casuhApp;
  os_unsigned_t casuhI;
  const os_coreid_t _myCoreId;
  struct os_kerneldata_t * const OS_kd;
  os_uint8_t Os_CallHookTmp;
  struct os_kerneldata_t * const OS_kd;
  os_paramtype_t p[3];
  struct os_kerneldata_t * const kernel_data;
  os_boolean_t panic;
  void (*os_initfunc_t) (void) * fct;
  os_intstatus_t is;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  panic = 0;
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) mode;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_intDisableLevelAll.0_2 = OS_intDisableLevelAll;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_intDisableLevelAll.0_2);
  # DEBUG BEGIN_STMT
  _3 = OS_kernelData.inFunction;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_configMode.1_4 = OS_configMode;
  _5 = OS_configMode.1_4 & 1024;
  if (_5 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_StartOs, 12, &p);

  <bb 5> :
  # DEBUG BEGIN_STMT
  panic = 1;
  goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  OS_iecMode.2_6 = OS_iecMode;
  if (OS_iecMode.2_6 > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  _7 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _8 = _7;
  if (_8 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  OS_configMode.3_9 = OS_configMode;
  _10 = OS_configMode.3_9 & 1024;
  if (_10 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_StartOs, 55, 0B);

  <bb 10> :
  # DEBUG BEGIN_STMT
  panic = 1;
  goto <bb 15>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_nStartModes.4_11 = OS_nStartModes;
  if (mode >= OS_nStartModes.4_11)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_configMode.5_12 = OS_configMode;
  _13 = OS_configMode.5_12 & 1024;
  if (_13 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_StartOs, 22, &p);

  <bb 14> :
  # DEBUG BEGIN_STMT
  panic = 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (panic == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  # DEBUG BEGIN_STMT
  OS_Panic (5);
  goto <bb 26>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  OS_appMode = mode;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;
  # DEBUG BEGIN_STMT
  fct = &OS_initFunc[0];
  # DEBUG BEGIN_STMT
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _14 = *fct;
  _14 ();
  # DEBUG BEGIN_STMT
  fct = fct + 4;

  <bb 19> :
  # DEBUG BEGIN_STMT
  _15 = *fct;
  if (_15 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_kernelData.appsStarted = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd = &OS_kernelData;
  # DEBUG BEGIN_STMT
  Os_CallHookTmp = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 8;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ptrStartupHook.6_16 = OS_ptrStartupHook;
  OS_ptrStartupHook.6_16 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = Os_CallHookTmp;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd = &OS_kernelData;
  # DEBUG BEGIN_STMT
  _myCoreId = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  casuhApp = OS_appTableBase;
  # DEBUG BEGIN_STMT
  casuhI = 0;
  goto <bb 24>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  _17 = casuhApp->startupHook;
  if (_17 != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 8;
  # DEBUG BEGIN_STMT
  OS_CallStartupHook (casuhApp);
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;

  <bb 23> :
  # DEBUG BEGIN_STMT
  casuhApp = casuhApp + 64;
  # DEBUG BEGIN_STMT
  casuhI = casuhI + 1;

  <bb 24> :
  # DEBUG BEGIN_STMT
  OS_nApps.7_18 = OS_nApps;
  _19 = (unsigned int) OS_nApps.7_18;
  if (casuhI < _19)
    goto <bb 21>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.hookApp = 0B;

  <bb 26> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  p = {CLOBBER};
  return;

}


