__attribute__((target ("general-regs-only")))
OS_IsScheduleNecessary ()
{
  const os_tasklink_t next;
  const os_tasklink_t link;
  struct os_taskdynamic_t * const td;
  const struct os_task_t * const current_task;
  os_tasklink_t * const taskActivations;
  os_boolean_t answer;
  short unsigned int _1;
  unsigned char _2;
  short unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  os_tasklink_t * _6;
  unsigned char _7;
  int _8;
  int _9;
  int _10;
  const struct os_task_t * _11;
  short unsigned int _12;
  int _13;
  int _14;
  const struct os_task_t * _15;
  struct os_taskdynamic_t * _16;
  unsigned char _17;
  int _18;
  int _19;
  int _20;
  const struct os_task_t * _21;
  struct os_taskdynamic_t * _22;
  short unsigned int _23;
  int _24;
  const struct os_task_t * _25;
  unsigned char _26;
  int iftmp.0_28;
  int iftmp.1_29;
  int iftmp.1_37;
  int iftmp.1_38;
  int iftmp.0_39;
  int iftmp.0_40;
  os_boolean_t _42;

  <bb 2> :
  # DEBUG BEGIN_STMT
  answer_30 = 1;
  # DEBUG answer => answer_30
  # DEBUG BEGIN_STMT
  taskActivations_31 = &OS_taskActivations;
  # DEBUG taskActivations => taskActivations_31
  # DEBUG BEGIN_STMT
  current_task_33 = OS_kernelData.taskCurrent;
  # DEBUG current_task => current_task_33
  # DEBUG BEGIN_STMT
  if (current_task_33 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  td_34 = current_task_33->dynamic;
  # DEBUG td => td_34
  # DEBUG BEGIN_STMT
  _1 = current_task_33->linkBase;
  _2 = td_34->cAct;
  _3 = (short unsigned int) _2;
  link_35 = _1 + _3;
  # DEBUG link => link_35
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) link_35;
  _5 = _4 * 2;
  _6 = &OS_taskActivations + _5;
  next_36 = *_6;
  # DEBUG next => next_36
  # DEBUG BEGIN_STMT
  if (next_36 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  _7 = current_task_33->queuePrio;
  _8 = (int) _7;
  _9 = (int) next_36;
  _10 = (int) next_36;
  _11 = OS_taskPtrs[_10];
  _12 = _11->linkBase;
  _13 = (int) _12;
  _14 = (int) next_36;
  _15 = OS_taskPtrs[_14];
  _16 = _15->dynamic;
  _17 = _16->cAct;
  _18 = (int) _17;
  _19 = _13 + _18;
  if (_9 == _19)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _20 = (int) next_36;
  _21 = OS_taskPtrs[_20];
  _22 = _21->dynamic;
  _23 = _22->prio;
  iftmp.1_38 = (int) _23;
  goto <bb 7>; [INV]

  <bb 6> :
  _24 = (int) next_36;
  _25 = OS_taskPtrs[_24];
  _26 = _25->queuePrio;
  iftmp.1_37 = (int) _26;

  <bb 7> :
  # iftmp.1_29 = PHI <iftmp.1_38(5), iftmp.1_37(6)>
  if (iftmp.1_29 > _8)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  iftmp.0_39 = 1;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.0_40 = 0;

  <bb 10> :
  # iftmp.0_28 = PHI <iftmp.0_39(8), iftmp.0_40(9)>
  answer_41 = iftmp.0_28;
  # DEBUG answer => answer_41

  <bb 11> :
  # answer_27 = PHI <answer_30(2), answer_41(10)>
  # DEBUG answer => answer_27
  # DEBUG BEGIN_STMT
  _42 = answer_27;
  return _42;

}


