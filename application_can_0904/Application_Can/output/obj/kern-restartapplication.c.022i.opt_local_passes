__attribute__((target ("general-regs-only")))
OS_RestartApplication (const struct os_appcontext_t * app)
{
  const struct os_schedule_t * schedule;
  const struct os_alarm_t * alarm;
  const struct os_task_t * task;
  os_scheduleid_t scheduleid;
  os_alarmid_t alarmid;
  os_taskid_t taskid;
  struct os_appdynamic_t * _1;
  const struct os_appcontext_t * _2;
  os_result_t (*<T562>) (os_alarmid_t, os_uint8_t) OS_killAlarmFunc.0_3;
  short unsigned int alarmid.1_4;
  short unsigned int OS_nAlarms.2_5;
  const struct os_appcontext_t * _6;
  os_result_t (*<T57f>) (os_scheduleid_t, os_schedulestatus_t) OS_killScheduleFunc.3_7;
  unsigned char scheduleid.4_8;
  unsigned char OS_nSchedules.5_9;
  const struct os_appcontext_t * _10;
  os_result_t (*<T69c>) (const struct os_task_t *, os_taskstate_t) OS_killTaskFunc.6_11;
  unsigned char taskid.7_12;
  unsigned char OS_nTasks.8_13;
  unsigned char _14;
  unsigned char OS_nTasks.9_15;
  void (*<T62f>) (const struct os_task_t *) OS_actiTaskFunc.10_16;
  void (*<T62f>) (const struct os_task_t *) OS_actiTaskFunc.11_17;
  const struct os_task_t * OS_taskTableBase.12_18;
  unsigned char _19;
  unsigned int _20;
  unsigned int _21;
  const struct os_task_t * _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = app_37(D)->dynamic;
  _1->appstate = 1;
  # DEBUG BEGIN_STMT
  alarm_39 = OS_alarmTableBase;
  # DEBUG alarm => alarm_39
  # DEBUG BEGIN_STMT
  alarmid_40 = 0;
  # DEBUG alarmid => alarmid_40
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = alarm_27->app;
  if (app_37(D) == _2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_killAlarmFunc.0_3 = OS_killAlarmFunc;
  OS_killAlarmFunc.0_3 (alarmid_24, 0);

  <bb 5> :
  # DEBUG BEGIN_STMT
  alarm_53 = alarm_27 + 28;
  # DEBUG alarm => alarm_53
  # DEBUG BEGIN_STMT
  alarmid.1_4 = alarmid_24;
  alarmid_54 = alarmid.1_4 + 1;
  # DEBUG alarmid => alarmid_54

  <bb 6> :
  # alarmid_24 = PHI <alarmid_40(2), alarmid_54(5)>
  # alarm_27 = PHI <alarm_39(2), alarm_53(5)>
  # DEBUG alarm => alarm_27
  # DEBUG alarmid => alarmid_24
  # DEBUG BEGIN_STMT
  OS_nAlarms.2_5 = OS_nAlarms;
  if (alarmid_24 < OS_nAlarms.2_5)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  schedule_41 = OS_scheduleTableBase;
  # DEBUG schedule => schedule_41
  # DEBUG BEGIN_STMT
  scheduleid_42 = 0;
  # DEBUG scheduleid => scheduleid_42
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = schedule_28->app;
  if (app_37(D) == _6)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  OS_killScheduleFunc.3_7 = OS_killScheduleFunc;
  OS_killScheduleFunc.3_7 (scheduleid_25, 0);

  <bb 10> :
  # DEBUG BEGIN_STMT
  schedule_50 = schedule_28 + 36;
  # DEBUG schedule => schedule_50
  # DEBUG BEGIN_STMT
  scheduleid.4_8 = scheduleid_25;
  scheduleid_51 = scheduleid.4_8 + 1;
  # DEBUG scheduleid => scheduleid_51

  <bb 11> :
  # scheduleid_25 = PHI <scheduleid_42(7), scheduleid_51(10)>
  # schedule_28 = PHI <schedule_41(7), schedule_50(10)>
  # DEBUG schedule => schedule_28
  # DEBUG scheduleid => scheduleid_25
  # DEBUG BEGIN_STMT
  OS_nSchedules.5_9 = OS_nSchedules;
  if (scheduleid_25 < OS_nSchedules.5_9)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  task_43 = OS_taskTableBase;
  # DEBUG task => task_43
  # DEBUG BEGIN_STMT
  taskid_44 = 0;
  # DEBUG taskid => taskid_44
  goto <bb 16>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _10 = task_26->app;
  if (app_37(D) == _10)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  OS_killTaskFunc.6_11 = OS_killTaskFunc;
  OS_killTaskFunc.6_11 (task_26, 0);

  <bb 15> :
  # DEBUG BEGIN_STMT
  task_47 = task_26 + 76;
  # DEBUG task => task_47
  # DEBUG BEGIN_STMT
  taskid.7_12 = taskid_23;
  taskid_48 = taskid.7_12 + 1;
  # DEBUG taskid => taskid_48

  <bb 16> :
  # taskid_23 = PHI <taskid_44(12), taskid_48(15)>
  # task_26 = PHI <task_43(12), task_47(15)>
  # DEBUG task => task_26
  # DEBUG taskid => taskid_23
  # DEBUG BEGIN_STMT
  OS_nTasks.8_13 = OS_nTasks;
  if (taskid_23 < OS_nTasks.8_13)
    goto <bb 13>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _14 = app_37(D)->restartTask;
  OS_nTasks.9_15 = OS_nTasks;
  if (_14 < OS_nTasks.9_15)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  OS_actiTaskFunc.10_16 = OS_actiTaskFunc;
  if (OS_actiTaskFunc.10_16 != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  OS_actiTaskFunc.11_17 = OS_actiTaskFunc;
  OS_taskTableBase.12_18 = OS_taskTableBase;
  _19 = app_37(D)->restartTask;
  _20 = (unsigned int) _19;
  _21 = _20 * 76;
  _22 = OS_taskTableBase.12_18 + _21;
  OS_actiTaskFunc.11_17 (_22);

  <bb 20> :
  return;

}


