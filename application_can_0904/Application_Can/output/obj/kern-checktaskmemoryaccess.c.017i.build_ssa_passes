__attribute__((target ("general-regs-only")))
OS_KernCheckTaskMemoryAccess (os_taskid_t t, const void * ptr, os_size_t len)
{
  os_paramtype_t p[3];
  os_memoryaccess_t a;
  os_memoryaccess_t D.7462;
  int iftmp.2;
  _Bool iftmp.1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  a = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) t;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  ptr.0_2 = (unsigned int) ptr;
  p[1] = ptr.0_2;
  # DEBUG BEGIN_STMT
  p[2] = len;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = OS_kernelData.inFunction;
  if (_3 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.3_4 = OS_permittedContext;
  _5 = OS_permittedContext.3_4 + 8;
  _6 = *_5;
  _7 = (unsigned int) _6;
  _8 = _7 & 1024;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.4_9 = OS_permittedContext;
  _10 = OS_permittedContext.4_9 + 8;
  _11 = *_10;
  _12 = OS_kernelData.errorStatus.calledFrom;
  _13 = (int) _12;
  _14 = 1 << _13;
  _15 = (short unsigned int) _14;
  _16 = _11 & _15;
  if (_16 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2 = 0;

  <bb 7> :
  iftmp.1 = iftmp.2 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.5_17 = OS_permittedContext;
  _18 = OS_permittedContext.5_17 + 8;
  _19 = *_18;
  _20 = OS_kernelData.inFunction;
  _21 = (int) _20;
  _22 = 1 << _21;
  _23 = (short unsigned int) _22;
  _24 = _19 & _23;
  iftmp.1 = _24 == 0;

  <bb 9> :
  if (iftmp.1 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  OS_configMode.6_25 = OS_configMode;
  _26 = OS_configMode.6_25 & 1024;
  if (_26 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_CheckTaskMemoryAccess, 12, &p);
  goto <bb 22>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_iecMode.7_27 = OS_iecMode;
  if (OS_iecMode.7_27 > 1)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  _28 = OS_kernelData.inFunction;
  if (_28 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _29 = OS_kernelData.taskCurrent;
  _30 = _29->dynamic;
  _31 = BIT_FIELD_REF <MEM[(void *)_30], 16, 160>;
  _32 = _31;
  if (_32 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  _33 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _34 = _33;
  if (_34 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_configMode.8_35 = OS_configMode;
  _36 = OS_configMode.8_35 & 1024;
  if (_36 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_CheckTaskMemoryAccess, 55, &p);
  goto <bb 22>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  OS_nTasks.9_37 = OS_nTasks;
  if (t < OS_nTasks.9_37)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  a = OS_DoCheckTaskMemoryAccess (t, ptr, len);
  goto <bb 22>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_configMode.10_38 = OS_configMode;
  _39 = OS_configMode.10_38 & 1024;
  if (_39 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_CheckTaskMemoryAccess, 2, &p);

  <bb 22> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7462 = a;
  p = {CLOBBER};
  return D.7462;

}


__attribute__((target ("general-regs-only")))
OS_DoCheckTaskMemoryAccess (os_taskid_t t, const void * ptr, os_size_t len)
{
  os_paramtype_t p[3];
  os_taskstate_t ts;
  os_address_t limit;
  os_address_t base;
  const struct os_appcontext_t * app;
  os_address_t last;
  os_address_t first;
  const struct os_task_t * tp;
  os_memoryaccess_t a;
  os_memoryaccess_t D.7503;
  unsigned char iftmp.18;
  unsigned char iftmp.13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  a = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) t;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  ptr.11_2 = (unsigned int) ptr;
  p[1] = ptr.11_2;
  # DEBUG BEGIN_STMT
  p[2] = len;
  # DEBUG BEGIN_STMT
  first = (os_address_t) ptr;
  # DEBUG BEGIN_STMT
  last = first + len;
  # DEBUG BEGIN_STMT
  if (ptr == 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (last > first)
    goto <bb 4>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_taskTableBase.12_3 = OS_taskTableBase;
  _4 = (unsigned int) t;
  _5 = _4 * 76;
  tp = OS_taskTableBase.12_3 + _5;
  # DEBUG BEGIN_STMT
  app = tp->app;
  # DEBUG BEGIN_STMT
  _6 = tp->stackBase;
  base = (os_address_t) _6;
  # DEBUG BEGIN_STMT
  _7 = tp->stackLen;
  limit = base + _7;
  # DEBUG BEGIN_STMT
  if (first >= base)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 5> :
  if (last <= limit)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _8 = tp->dynamic;
  ts = _8->state;
  # DEBUG BEGIN_STMT
  _9 = ts + 253;
  if (_9 <= 3)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  a = 11;
  goto <bb 29>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  a = 8;
  goto <bb 29>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (app == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _10 = app->flags;
  _11 = (unsigned int) _10;
  _12 = _11 & 1;
  if (_12 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  a = 7;
  goto <bb 29>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _13 = OS_kernelData.taskCurrent;
  _14 = _13->dataStart;
  _15 = (unsigned int) _14;
  if (first >= _15)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  _16 = OS_kernelData.taskCurrent;
  _17 = _16->dataEnd;
  _18 = (unsigned int) _17;
  if (last <= _18)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  a = 3;
  goto <bb 29>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _19 = app->dataStart;
  _20 = (unsigned int) _19;
  if (first >= _20)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _21 = app->dataEnd;
  _22 = (unsigned int) _21;
  if (last <= _22)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  a = 3;
  goto <bb 29>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  OS_romBase.14_23 = OS_romBase;
  OS_romBase.15_24 = (unsigned int) OS_romBase.14_23;
  if (first < OS_romBase.15_24)
    goto <bb 20>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  OS_romLimit.16_25 = OS_romLimit;
  OS_romLimit.17_26 = (unsigned int) OS_romLimit.16_25;
  if (last > OS_romLimit.17_26)
    goto <bb 20>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 20> :
  OS_ramBase.19_27 = OS_ramBase;
  OS_ramBase.20_28 = (unsigned int) OS_ramBase.19_27;
  if (first >= OS_ramBase.20_28)
    goto <bb 21>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 21> :
  OS_ramLimit.21_29 = OS_ramLimit;
  OS_ramLimit.22_30 = (unsigned int) OS_ramLimit.21_29;
  if (last <= OS_ramLimit.22_30)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  iftmp.18 = 1;
  goto <bb 24>; [INV]

  <bb 23> :
  iftmp.18 = 0;

  <bb 24> :
  iftmp.13 = iftmp.18;
  goto <bb 26>; [INV]

  <bb 25> :
  iftmp.13 = 5;

  <bb 26> :
  a = iftmp.13;
  goto <bb 29>; [INV]

  <bb 27> :
  # DEBUG BEGIN_STMT
  OS_configMode.23_31 = OS_configMode;
  _32 = OS_configMode.23_31 & 1024;
  if (_32 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_CheckTaskMemoryAccess, 48, &p);

  <bb 29> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7503 = a;
  p = {CLOBBER};
  return D.7503;

}


