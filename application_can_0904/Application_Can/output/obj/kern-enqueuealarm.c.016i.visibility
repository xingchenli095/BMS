
Marking local functions:


Marking externally visible functions: OS_EnqueueAlarmNoAdjust OS_EnqueueAlarm


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_alarmTableBase/2 (OS_alarmTableBase) @06c0bd38
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_EnqueueAlarmNoAdjust/1 (read)OS_EnqueueAlarmNoAdjust/1 (read)
  Availability: not_available
  Varpool flags: read-only
OS_EnqueueAlarmNoAdjust/1 (OS_EnqueueAlarmNoAdjust) @06c2fe00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_alarmTableBase/2 (read)OS_alarmTableBase/2 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: OS_EnqueueAlarm/0 
  Calls: 
OS_EnqueueAlarm/0 (OS_EnqueueAlarm) @06c2fa80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_EnqueueAlarmNoAdjust/1 
__attribute__((target ("general-regs-only")))
OS_EnqueueAlarmNoAdjust (struct os_counterdynamic_t * cd, os_alarmid_t a, struct os_alarmdynamic_t * ad)
{
  struct os_alarmdynamic_t * np;
  os_alarmid_t n;
  struct os_alarmdynamic_t * lp;
  struct os_alarmdynamic_t * const iftmp.3;
  struct os_alarmdynamic_t * const iftmp.1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  lp = 0B;
  # DEBUG BEGIN_STMT
  n = cd->head;
  # DEBUG BEGIN_STMT
  if (n != 65535)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  OS_alarmTableBase.2_1 = OS_alarmTableBase;
  _2 = (unsigned int) n;
  _3 = _2 * 28;
  _4 = OS_alarmTableBase.2_1 + _3;
  iftmp.1 = _4->dynamic;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1 = 0B;

  <bb 5> :
  np = iftmp.1;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _5 = ad->delta;
  _6 = np->delta;
  _7 = _5 - _6;
  ad->delta = _7;
  # DEBUG BEGIN_STMT
  n = np->next;
  # DEBUG BEGIN_STMT
  lp = np;
  # DEBUG BEGIN_STMT
  if (n != 65535)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  OS_alarmTableBase.4_8 = OS_alarmTableBase;
  _9 = (unsigned int) n;
  _10 = _9 * 28;
  _11 = OS_alarmTableBase.4_8 + _10;
  iftmp.3 = _11->dynamic;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.3 = 0B;

  <bb 9> :
  np = iftmp.3;

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (np != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _12 = np->delta;
  _13 = ad->delta;
  if (_12 < _13)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (np != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _14 = np->delta;
  _15 = ad->delta;
  _16 = _14 - _15;
  np->delta = _16;

  <bb 14> :
  # DEBUG BEGIN_STMT
  if (lp == 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _17 = cd->head;
  ad->next = _17;
  # DEBUG BEGIN_STMT
  cd->head = a;
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  ad->next = n;
  # DEBUG BEGIN_STMT
  lp->next = a;

  <bb 17> :
  return;

}


__attribute__((target ("general-regs-only")))
OS_EnqueueAlarm (const struct os_counter_t * cs, struct os_counterdynamic_t * cd, os_alarmid_t a, struct os_alarmdynamic_t * ad)
{
  os_tick_t iftmp.0;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = cs->maxallowedvalue;
  _2 = ad->delta;
  _3 = _1 - _2;
  _4 = cd->error;
  if (_3 < _4)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = ad->delta;
  _6 = cd->error;
  _7 = _5 + _6;
  _8 = cs->maxallowedvalue;
  _9 = _7 - _8;
  iftmp.0 = _9 + 4294967295;
  goto <bb 5>; [INV]

  <bb 4> :
  _10 = ad->delta;
  _11 = cd->error;
  iftmp.0 = _10 + _11;

  <bb 5> :
  ad->delta = iftmp.0;
  # DEBUG BEGIN_STMT
  OS_EnqueueAlarmNoAdjust (cd, a, ad);
  return;

}


