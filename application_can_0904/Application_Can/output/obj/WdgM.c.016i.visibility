
Marking local functions: WdgM_EB_CheckModeSwitchRequest WdgM_EB_CheckDeinitRequest WdgM_EB_CheckInitRequest WdgM_EB_UpdateTriggerConditions WdgM_EB_SEResetCPAliveData WdgM_EB_SEResetData WdgM_EB_SEIsActiveResetData WdgM_EB_SEId2IntSEId WdgM_EB_GetCheckedExpiredSEID WdgM_EB_StoreExpiredSEID WdgM_EB_ResetExtGraphDataSeq WdgM_EB_GetCheckedCPLogicalData WdgM_EB_StoreCPLogicalData WdgM_EB_GetCheckedCPDeadlineData WdgM_EB_StoreCPDeadlineData WdgM_EB_DecMaxCyclesDMData WdgM_EB_StoreDMData WdgM_EB_GetCheckedDMData WdgM_EB_GetCheckedCPAliveCounterData WdgM_EB_ResetCPAliveCounterData WdgM_EB_IncrementCPAliveCounterData WdgM_EB_CheckCPAliveCounterData WdgM_EB_StoreSeqNumber WdgM_EB_GetCheckedSeqNumber WdgM_EB_StoreGraphData WdgM_EB_GetCheckedGraphData WdgM_EB_CheckMainFunctionTimingViolation WdgM_EB_UpdateSupervisionCycleCounter WdgM_EB_GetNewGlobalStatus WdgM_EB_SetGlobalStatus WdgM_EB_SetSELocalStatus WdgM_EB_SetLocalStatus WdgM_EB_DetermineLogicalResult WdgM_EB_DetermineDeadlineResult WdgM_EB_DetermineAliveResult WdgM_EB_CheckPredCP WdgM_EB_CheckpointReachedAlive WdgM_EB_CheckDeadlineViolation WdgM_EB_StopCheckpointDeadline WdgM_EB_StartCheckpointDeadline WdgM_EB_CheckpointReachedDeadline WdgM_EB_GetLastIndexInGraphDataSeq WdgM_EB_CheckpointReachedExtLogical WdgM_EB_CheckpointReachedIntLogical WdgM_EB_PerformWdgIfModeSwitch WdgM_EB_SetMode WdgM_EB_DeInit WdgM_EB_Init


Marking externally visible functions: WdgM_EB_GetCheckedRedundantData8 WdgM_EB_StoreRedundantData8 WdgM_MainFunction WdgM_GetFirstExpiredSEID WdgM_PerformReset WdgM_GetGlobalStatus WdgM_GetLocalStatus WdgM_UpdateAliveCounter WdgM_CheckpointReached WdgM_GetMode


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Supervisor_WdgM_GetExpectedWdgMModeCallout/79 (Supervisor_WdgM_GetExpectedWdgMModeCallout) @06e30b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: WdgM_EB_CheckModeSwitchRequest/58 
  Calls: 
WdgM_EB_InitialModeId/78 (WdgM_EB_InitialModeId) @06e3f630
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_EB_Init/9 (read)WdgM_EB_Init/9 (read)
  Availability: not_available
  Varpool flags: read-only
WdgM_EB_IsExpiredSEIdSet/77 (WdgM_EB_IsExpiredSEIdSet) @06e36558
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_EB_StoreExpiredSEID/47 (read)WdgM_EB_StoreExpiredSEID/47 (write)WdgM_EB_Init/9 (write)
  Availability: not_available
  Varpool flags:
Wdg_SetMode/76 (Wdg_SetMode) @06e15700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: WdgM_EB_PerformWdgIfModeSwitch/12 
  Calls: 
WdgM_EB_DeInitModeId/75 (WdgM_EB_DeInitModeId) @06e13048
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_EB_DeInit/10 (read)
  Availability: not_available
  Varpool flags: read-only
Supervisor_WdgM_GetExpectedInitStateCallout/74 (Supervisor_WdgM_GetExpectedInitStateCallout) @06df9ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: WdgM_EB_CheckInitRequest/56 WdgM_EB_CheckDeinitRequest/57 
  Calls: 
WdgM_EB_ExpiredSEID/73 (WdgM_EB_ExpiredSEID) @06e0d120
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_GetFirstExpiredSEID/7 (read)WdgM_EB_SetSELocalStatus/26 (read)WdgM_EB_SetSELocalStatus/26 (write)WdgM_EB_Init/9 (write)
  Availability: not_available
  Varpool flags:
Wdg_SetTriggerCondition/72 (Wdg_SetTriggerCondition) @06df99a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: WdgM_EB_UpdateTriggerConditions/55 
  Calls: 
WdgM_EB_ModeCfg/71 (WdgM_EB_ModeCfg) @06e06e10
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_EB_UpdateTriggerConditions/55 (addr)WdgM_EB_PerformWdgIfModeSwitch/12 (addr)WdgM_EB_UpdateSupervisionCycleCounter/29 (addr)WdgM_EB_GetNewGlobalStatus/28 (addr)
  Availability: not_available
  Varpool flags: read-only
WdgM_EB_GlobalStatus/70 (WdgM_EB_GlobalStatus) @06e06870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_GetGlobalStatus/5 (read)WdgM_PerformReset/6 (write)WdgM_EB_UpdateTriggerConditions/55 (read)WdgM_EB_DeInit/10 (read)WdgM_EB_DeInit/10 (write)WdgM_EB_SetMode/11 (read)WdgM_EB_SetGlobalStatus/27 (read)WdgM_EB_SetGlobalStatus/27 (write)WdgM_EB_GetNewGlobalStatus/28 (read)WdgM_EB_GetNewGlobalStatus/28 (read)WdgM_EB_Init/9 (write)
  Availability: not_available
  Varpool flags:
WdgM_EB_SELocalStatus/69 (WdgM_EB_SELocalStatus) @06e06510
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_GetLocalStatus/4 (read)WdgM_EB_SetMode/11 (addr)WdgM_EB_GetNewGlobalStatus/28 (read)
  Availability: not_available
  Varpool flags:
WdgM_EB_ExtGraphDataSeqPtr/68 (WdgM_EB_ExtGraphDataSeqPtr) @06df5ea0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_EB_CheckpointReachedExtLogical/14 (addr)WdgM_EB_SEIsActiveResetData/52 (addr)
  Availability: not_available
  Varpool flags: read-only
WdgM_EB_ExternalGraphData/67 (WdgM_EB_ExternalGraphData) @06df5e58
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_EB_CheckpointReachedExtLogical/14 (addr)WdgM_EB_SEIsActiveResetData/52 (addr)
  Availability: not_available
  Varpool flags:
WdgM_EB_InternalGraphData/66 (WdgM_EB_InternalGraphData) @06def438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_EB_CheckpointReachedIntLogical/13 (addr)WdgM_EB_SEIsActiveResetData/52 (addr)
  Availability: not_available
  Varpool flags:
Supervisor_WdgM_GetElapsedTimeCallout/65 (Supervisor_WdgM_GetElapsedTimeCallout) @06ddd1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: WdgM_EB_CheckMainFunctionTimingViolation/30 WdgM_EB_StartCheckpointDeadline/17 WdgM_EB_StopCheckpointDeadline/18 
  Calls: 
WdgM_EB_DMData/64 (WdgM_EB_DMData) @06ddc3a8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_EB_CheckpointReachedDeadline/16 (addr)WdgM_EB_CheckpointReachedDeadline/16 (addr)WdgM_EB_SEIsActiveResetData/52 (addr)WdgM_EB_CheckDeadlineViolation/19 (addr)
  Availability: not_available
  Varpool flags:
Dem_ReportErrorStatus/63 (Dem_ReportErrorStatus) @06dcce00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: WdgM_EB_SetGlobalStatus/27 WdgM_EB_DetermineLogicalResult/24 WdgM_EB_DetermineDeadlineResult/23 WdgM_EB_DecMaxCyclesDMData/41 WdgM_EB_CheckMainFunctionTimingViolation/30 WdgM_EB_PerformWdgIfModeSwitch/12 WdgM_EB_GetCheckedCPAliveCounterData/38 WdgM_EB_GetCheckedSeqNumber/33 WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckPredCP/21 WdgM_EB_GetCheckedGraphData/31 WdgM_EB_CheckpointReachedIntLogical/13 WdgM_EB_StartCheckpointDeadline/17 WdgM_EB_GetCheckedDMData/39 WdgM_EB_StopCheckpointDeadline/18 WdgM_EB_CheckCPAliveCounterData/35 
  Calls: 
WdgM_EB_SEIntSEId/62 (WdgM_EB_SEIntSEId) @06dd5708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_EB_SEId2IntSEId/51 (read)
  Availability: not_available
  Varpool flags: read-only
WdgM_EB_SECfg/61 (WdgM_EB_SECfg) @06dd5318
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_CheckpointReached/2 (read)WdgM_CheckpointReached/2 (addr)WdgM_EB_CheckpointReachedAlive/20 (addr)WdgM_EB_CheckpointReachedDeadline/16 (addr)WdgM_EB_CheckpointReachedIntLogical/13 (addr)WdgM_EB_CheckPredCP/21 (addr)WdgM_EB_CheckpointReachedExtLogical/14 (addr)WdgM_EB_GetLastIndexInGraphDataSeq/15 (addr)WdgM_UpdateAliveCounter/3 (addr)WdgM_EB_SetMode/11 (addr)WdgM_EB_SEResetCPAliveData/54 (addr)WdgM_EB_SEResetData/53 (addr)WdgM_EB_SetLocalStatus/25 (addr)WdgM_EB_DetermineAliveResult/22 (addr)WdgM_EB_DetermineDeadlineResult/23 (addr)WdgM_EB_DetermineLogicalResult/24 (addr)WdgM_EB_SetSELocalStatus/26 (addr)
  Availability: not_available
  Varpool flags: read-only
Det_ASR40_ReportError/60 (Det_ASR40_ReportError) @06dcc700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: WdgM_EB_CheckModeSwitchRequest/58 WdgM_EB_CheckInitRequest/56 WdgM_EB_CheckInitRequest/56 WdgM_EB_CheckDeinitRequest/57 WdgM_MainFunction/8 WdgM_GetFirstExpiredSEID/7 WdgM_PerformReset/6 WdgM_GetGlobalStatus/5 WdgM_GetGlobalStatus/5 WdgM_GetLocalStatus/4 WdgM_GetLocalStatus/4 WdgM_GetLocalStatus/4 WdgM_UpdateAliveCounter/3 WdgM_UpdateAliveCounter/3 WdgM_UpdateAliveCounter/3 WdgM_UpdateAliveCounter/3 WdgM_CheckpointReached/2 WdgM_CheckpointReached/2 WdgM_CheckpointReached/2 WdgM_CheckpointReached/2 WdgM_GetMode/1 WdgM_GetMode/1 
  Calls: 
WdgM_EB_Context/59 (WdgM_EB_Context) @06d22900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: WdgM_GetMode/1 (addr)WdgM_GetMode/1 (read)WdgM_GetMode/1 (read)WdgM_CheckpointReached/2 (addr)WdgM_CheckpointReached/2 (read)WdgM_CheckpointReached/2 (read)WdgM_CheckpointReached/2 (read)WdgM_CheckpointReached/2 (read)WdgM_CheckpointReached/2 (read)WdgM_CheckpointReached/2 (read)WdgM_CheckpointReached/2 (addr)WdgM_UpdateAliveCounter/3 (addr)WdgM_UpdateAliveCounter/3 (read)WdgM_UpdateAliveCounter/3 (read)WdgM_GetLocalStatus/4 (addr)WdgM_GetLocalStatus/4 (read)WdgM_GetGlobalStatus/5 (addr)WdgM_GetGlobalStatus/5 (read)WdgM_PerformReset/6 (addr)WdgM_PerformReset/6 (read)WdgM_PerformReset/6 (addr)WdgM_MainFunction/8 (addr)WdgM_MainFunction/8 (read)WdgM_MainFunction/8 (write)WdgM_MainFunction/8 (read)WdgM_MainFunction/8 (read)WdgM_MainFunction/8 (addr)WdgM_MainFunction/8 (addr)WdgM_MainFunction/8 (read)WdgM_MainFunction/8 (addr)WdgM_MainFunction/8 (addr)WdgM_MainFunction/8 (addr)WdgM_MainFunction/8 (addr)WdgM_MainFunction/8 (addr)WdgM_MainFunction/8 (write)WdgM_MainFunction/8 (read)WdgM_MainFunction/8 (addr)WdgM_MainFunction/8 (write)WdgM_MainFunction/8 (write)WdgM_EB_DetermineAliveResult/22 (addr)WdgM_EB_DetermineAliveResult/22 (read)WdgM_EB_DetermineAliveResult/22 (addr)WdgM_EB_DetermineAliveResult/22 (addr)
  Availability: not_available
  Varpool flags:
WdgM_EB_CheckModeSwitchRequest/58 (WdgM_EB_CheckModeSwitchRequest) @06dcc540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_MainFunction/8 
  Calls: Det_ASR40_ReportError/60 WdgM_EB_SetMode/11 Supervisor_WdgM_GetExpectedWdgMModeCallout/79 
WdgM_EB_CheckDeinitRequest/57 (WdgM_EB_CheckDeinitRequest) @06dcc2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_MainFunction/8 
  Calls: Det_ASR40_ReportError/60 WdgM_EB_DeInit/10 Supervisor_WdgM_GetExpectedInitStateCallout/74 
WdgM_EB_CheckInitRequest/56 (WdgM_EB_CheckInitRequest) @06dcc000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_MainFunction/8 
  Calls: Det_ASR40_ReportError/60 Det_ASR40_ReportError/60 WdgM_EB_Init/9 Supervisor_WdgM_GetExpectedInitStateCallout/74 
WdgM_EB_UpdateTriggerConditions/55 (WdgM_EB_UpdateTriggerConditions) @06d81c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_ModeCfg/71 (addr)WdgM_EB_GlobalStatus/70 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_Init/9 WdgM_EB_DeInit/10 WdgM_MainFunction/8 WdgM_PerformReset/6 
  Calls: Wdg_SetTriggerCondition/72 
WdgM_EB_SEResetCPAliveData/54 (WdgM_EB_SEResetCPAliveData) @06d819a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetMode/11 
  Calls: WdgM_EB_ResetCPAliveCounterData/37 WdgM_EB_GetCheckedCPAliveCounterData/38 WdgM_EB_IncrementCPAliveCounterData/36 
WdgM_EB_SEResetData/53 (WdgM_EB_SEResetData) @06d817e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetMode/11 
  Calls: WdgM_EB_StoreCPLogicalData/44 WdgM_EB_StoreCPDeadlineData/42 
WdgM_EB_SEIsActiveResetData/52 (WdgM_EB_SEIsActiveResetData) @06d81620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_InternalGraphData/66 (addr)WdgM_EB_ExternalGraphData/67 (addr)WdgM_EB_ExtGraphDataSeqPtr/68 (addr)WdgM_EB_DMData/64 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetMode/11 
  Calls: WdgM_EB_StoreDMData/40 WdgM_EB_StoreGraphData/32 WdgM_EB_ResetExtGraphDataSeq/46 WdgM_EB_StoreGraphData/32 
WdgM_EB_SEId2IntSEId/51 (WdgM_EB_SEId2IntSEId) @06d81460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SEIntSEId/62 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_GetLocalStatus/4 WdgM_UpdateAliveCounter/3 WdgM_CheckpointReached/2 
  Calls: 
WdgM_EB_GetCheckedRedundantData8/50 (WdgM_EB_GetCheckedRedundantData8) @06d812a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
WdgM_EB_StoreRedundantData8/49 (WdgM_EB_StoreRedundantData8) @06d810e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
WdgM_EB_GetCheckedExpiredSEID/48 (WdgM_EB_GetCheckedExpiredSEID) @06d7bee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_GetFirstExpiredSEID/7 
  Calls: 
WdgM_EB_StoreExpiredSEID/47 (WdgM_EB_StoreExpiredSEID) @06d7bd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_IsExpiredSEIdSet/77 (read)WdgM_EB_IsExpiredSEIdSet/77 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetSELocalStatus/26 
  Calls: 
WdgM_EB_ResetExtGraphDataSeq/46 (WdgM_EB_ResetExtGraphDataSeq) @06d7bb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SEIsActiveResetData/52 WdgM_EB_CheckpointReachedExtLogical/14 
  Calls: WdgM_EB_StoreSeqNumber/34 
WdgM_EB_GetCheckedCPLogicalData/45 (WdgM_EB_GetCheckedCPLogicalData) @06d7b9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_DetermineLogicalResult/24 WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckPredCP/21 WdgM_EB_CheckpointReachedIntLogical/13 
  Calls: 
WdgM_EB_StoreCPLogicalData/44 (WdgM_EB_StoreCPLogicalData) @06d7b7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SEResetData/53 WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckpointReachedIntLogical/13 WdgM_EB_CheckpointReachedIntLogical/13 
  Calls: 
WdgM_EB_GetCheckedCPDeadlineData/43 (WdgM_EB_GetCheckedCPDeadlineData) @06d7b620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_DetermineDeadlineResult/23 WdgM_EB_StartCheckpointDeadline/17 WdgM_EB_StopCheckpointDeadline/18 
  Calls: 
WdgM_EB_StoreCPDeadlineData/42 (WdgM_EB_StoreCPDeadlineData) @06d7b460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SEResetData/53 WdgM_EB_StartCheckpointDeadline/17 WdgM_EB_StartCheckpointDeadline/17 WdgM_EB_StopCheckpointDeadline/18 WdgM_EB_StopCheckpointDeadline/18 
  Calls: 
WdgM_EB_DecMaxCyclesDMData/41 (WdgM_EB_DecMaxCyclesDMData) @06d7b2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckDeadlineViolation/19 
  Calls: Dem_ReportErrorStatus/63 
WdgM_EB_StoreDMData/40 (WdgM_EB_StoreDMData) @06d7b000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SEIsActiveResetData/52 WdgM_EB_StartCheckpointDeadline/17 WdgM_EB_StopCheckpointDeadline/18 
  Calls: 
WdgM_EB_GetCheckedDMData/39 (WdgM_EB_GetCheckedDMData) @06d20e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_StartCheckpointDeadline/17 WdgM_EB_StopCheckpointDeadline/18 
  Calls: Dem_ReportErrorStatus/63 
WdgM_EB_GetCheckedCPAliveCounterData/38 (WdgM_EB_GetCheckedCPAliveCounterData) @06d20b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_DetermineAliveResult/22 WdgM_EB_SEResetCPAliveData/54 
  Calls: Dem_ReportErrorStatus/63 
WdgM_EB_ResetCPAliveCounterData/37 (WdgM_EB_ResetCPAliveCounterData) @06d208c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_DetermineAliveResult/22 WdgM_EB_SEResetCPAliveData/54 
  Calls: 
WdgM_EB_IncrementCPAliveCounterData/36 (WdgM_EB_IncrementCPAliveCounterData) @06d20700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SEResetCPAliveData/54 WdgM_EB_CheckpointReachedAlive/20 
  Calls: 
WdgM_EB_CheckCPAliveCounterData/35 (WdgM_EB_CheckCPAliveCounterData) @06d20540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckpointReachedAlive/20 
  Calls: Dem_ReportErrorStatus/63 
WdgM_EB_StoreSeqNumber/34 (WdgM_EB_StoreSeqNumber) @06d202a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_ResetExtGraphDataSeq/46 WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckpointReachedExtLogical/14 
  Calls: 
WdgM_EB_GetCheckedSeqNumber/33 (WdgM_EB_GetCheckedSeqNumber) @06d200e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckpointReachedExtLogical/14 
  Calls: Dem_ReportErrorStatus/63 
WdgM_EB_StoreGraphData/32 (WdgM_EB_StoreGraphData) @06d13e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SEIsActiveResetData/52 WdgM_EB_SEIsActiveResetData/52 WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckpointReachedIntLogical/13 
  Calls: 
WdgM_EB_GetCheckedGraphData/31 (WdgM_EB_GetCheckedGraphData) @06d13c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckpointReachedIntLogical/13 
  Calls: Dem_ReportErrorStatus/63 
WdgM_EB_CheckMainFunctionTimingViolation/30 (WdgM_EB_CheckMainFunctionTimingViolation) @06d139a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_MainFunction/8 
  Calls: Dem_ReportErrorStatus/63 Supervisor_WdgM_GetElapsedTimeCallout/65 
WdgM_EB_UpdateSupervisionCycleCounter/29 (WdgM_EB_UpdateSupervisionCycleCounter) @06d13700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_ModeCfg/71 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_MainFunction/8 
  Calls: 
WdgM_EB_GetNewGlobalStatus/28 (WdgM_EB_GetNewGlobalStatus) @06d13540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_GlobalStatus/70 (read)WdgM_EB_GlobalStatus/70 (read)WdgM_EB_ModeCfg/71 (addr)WdgM_EB_SELocalStatus/69 (read)WdgM_EB_ExpiredSupervisionCycleCnt/0 (write)WdgM_EB_ExpiredSupervisionCycleCnt/0 (read)WdgM_EB_ExpiredSupervisionCycleCnt/0 (write)WdgM_EB_ExpiredSupervisionCycleCnt/0 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetGlobalStatus/27 
  Calls: 
WdgM_EB_SetGlobalStatus/27 (WdgM_EB_SetGlobalStatus) @06d13380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_GlobalStatus/70 (read)WdgM_EB_GlobalStatus/70 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_MainFunction/8 
  Calls: Dem_ReportErrorStatus/63 WdgM_EB_GetNewGlobalStatus/28 
WdgM_EB_SetSELocalStatus/26 (WdgM_EB_SetSELocalStatus) @06d130e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)WdgM_EB_ExpiredSEID/73 (read)WdgM_EB_ExpiredSEID/73 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetLocalStatus/25 
  Calls: WdgM_EB_StoreExpiredSEID/47 
WdgM_EB_SetLocalStatus/25 (WdgM_EB_SetLocalStatus) @06d09ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_MainFunction/8 
  Calls: WdgM_EB_SetSELocalStatus/26 WdgM_EB_DetermineLogicalResult/24 WdgM_EB_DetermineDeadlineResult/23 WdgM_EB_CheckDeadlineViolation/19 WdgM_EB_DetermineAliveResult/22 
WdgM_EB_DetermineLogicalResult/24 (WdgM_EB_DetermineLogicalResult) @06d09d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetLocalStatus/25 
  Calls: Dem_ReportErrorStatus/63 WdgM_EB_GetCheckedCPLogicalData/45 
WdgM_EB_DetermineDeadlineResult/23 (WdgM_EB_DetermineDeadlineResult) @06d09a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetLocalStatus/25 
  Calls: Dem_ReportErrorStatus/63 WdgM_EB_GetCheckedCPDeadlineData/43 
WdgM_EB_DetermineAliveResult/22 (WdgM_EB_DetermineAliveResult) @06d097e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_Context/59 (addr)WdgM_EB_SECfg/61 (addr)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetLocalStatus/25 
  Calls: WdgM_EB_ResetCPAliveCounterData/37 WdgM_EB_GetCheckedCPAliveCounterData/38 
WdgM_EB_CheckPredCP/21 (WdgM_EB_CheckPredCP) @06d09620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckpointReachedIntLogical/13 
  Calls: Dem_ReportErrorStatus/63 WdgM_EB_GetCheckedCPLogicalData/45 
WdgM_EB_CheckpointReachedAlive/20 (WdgM_EB_CheckpointReachedAlive) @06d09380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_CheckpointReached/2 
  Calls: WdgM_EB_IncrementCPAliveCounterData/36 WdgM_EB_CheckCPAliveCounterData/35 
WdgM_EB_CheckDeadlineViolation/19 (WdgM_EB_CheckDeadlineViolation) @06d091c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_DMData/64 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetLocalStatus/25 
  Calls: WdgM_EB_DecMaxCyclesDMData/41 
WdgM_EB_StopCheckpointDeadline/18 (WdgM_EB_StopCheckpointDeadline) @06d09000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckpointReachedDeadline/16 
  Calls: WdgM_EB_StoreCPDeadlineData/42 WdgM_EB_StoreCPDeadlineData/42 Dem_ReportErrorStatus/63 WdgM_EB_GetCheckedCPDeadlineData/43 WdgM_EB_StoreDMData/40 Supervisor_WdgM_GetElapsedTimeCallout/65 WdgM_EB_GetCheckedDMData/39 
WdgM_EB_StartCheckpointDeadline/17 (WdgM_EB_StartCheckpointDeadline) @06cf7d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckpointReachedDeadline/16 
  Calls: WdgM_EB_StoreCPDeadlineData/42 WdgM_EB_StoreCPDeadlineData/42 Dem_ReportErrorStatus/63 WdgM_EB_GetCheckedCPDeadlineData/43 WdgM_EB_StoreDMData/40 Supervisor_WdgM_GetElapsedTimeCallout/65 WdgM_EB_GetCheckedDMData/39 
WdgM_EB_CheckpointReachedDeadline/16 (WdgM_EB_CheckpointReachedDeadline) @06cf7a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)WdgM_EB_DMData/64 (addr)WdgM_EB_DMData/64 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_CheckpointReached/2 
  Calls: WdgM_EB_StartCheckpointDeadline/17 WdgM_EB_StopCheckpointDeadline/18 
WdgM_EB_GetLastIndexInGraphDataSeq/15 (WdgM_EB_GetLastIndexInGraphDataSeq) @06cf78c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckpointReachedExtLogical/14 
  Calls: 
WdgM_EB_CheckpointReachedExtLogical/14 (WdgM_EB_CheckpointReachedExtLogical) @06cf7700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)WdgM_EB_ExternalGraphData/67 (addr)WdgM_EB_ExtGraphDataSeqPtr/68 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_CheckpointReached/2 
  Calls: WdgM_EB_StoreCPLogicalData/44 WdgM_EB_StoreCPLogicalData/44 WdgM_EB_GetCheckedSeqNumber/33 Dem_ReportErrorStatus/63 WdgM_EB_GetCheckedCPLogicalData/45 WdgM_EB_StoreGraphData/32 WdgM_EB_StoreSeqNumber/34 WdgM_EB_ResetExtGraphDataSeq/46 WdgM_EB_StoreSeqNumber/34 WdgM_EB_GetCheckedSeqNumber/33 WdgM_EB_CheckPredCP/21 WdgM_EB_GetLastIndexInGraphDataSeq/15 WdgM_EB_GetCheckedGraphData/31 
WdgM_EB_CheckpointReachedIntLogical/13 (WdgM_EB_CheckpointReachedIntLogical) @06cf7460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_SECfg/61 (addr)WdgM_EB_InternalGraphData/66 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_CheckpointReached/2 
  Calls: WdgM_EB_StoreCPLogicalData/44 WdgM_EB_StoreCPLogicalData/44 Dem_ReportErrorStatus/63 WdgM_EB_GetCheckedCPLogicalData/45 WdgM_EB_StoreGraphData/32 WdgM_EB_CheckPredCP/21 WdgM_EB_GetCheckedGraphData/31 
WdgM_EB_PerformWdgIfModeSwitch/12 (WdgM_EB_PerformWdgIfModeSwitch) @06cf71c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_ModeCfg/71 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_SetMode/11 
  Calls: WdgM_PerformReset/6 Dem_ReportErrorStatus/63 Wdg_SetMode/76 
WdgM_EB_SetMode/11 (WdgM_EB_SetMode) @06cebe00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_GlobalStatus/70 (read)WdgM_EB_SECfg/61 (addr)WdgM_EB_SELocalStatus/69 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckModeSwitchRequest/58 WdgM_EB_Init/9 WdgM_EB_DeInit/10 
  Calls: WdgM_EB_PerformWdgIfModeSwitch/12 WdgM_EB_SEResetData/53 WdgM_EB_SEResetCPAliveData/54 WdgM_EB_SEIsActiveResetData/52 
WdgM_EB_DeInit/10 (WdgM_EB_DeInit) @06cebc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_DeInitModeId/75 (read)WdgM_EB_GlobalStatus/70 (read)WdgM_EB_GlobalStatus/70 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckDeinitRequest/57 
  Calls: WdgM_EB_UpdateTriggerConditions/55 WdgM_EB_SetMode/11 
WdgM_EB_Init/9 (WdgM_EB_Init) @06ceba80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: WdgM_EB_InitialModeId/78 (read)WdgM_EB_InitialModeId/78 (read)WdgM_EB_ExpiredSEID/73 (write)WdgM_EB_IsExpiredSEIdSet/77 (write)WdgM_EB_GlobalStatus/70 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: WdgM_EB_CheckInitRequest/56 
  Calls: WdgM_EB_UpdateTriggerConditions/55 WdgM_EB_SetMode/11 
WdgM_MainFunction/8 (WdgM_MainFunction) @06ceb8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (write)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (write)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (write)WdgM_EB_Context/59 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: WdgM_EB_CheckModeSwitchRequest/58 WdgM_EB_CheckInitRequest/56 WdgM_EB_UpdateTriggerConditions/55 WdgM_EB_SetGlobalStatus/27 WdgM_EB_SetLocalStatus/25 WdgM_EB_UpdateSupervisionCycleCounter/29 WdgM_EB_CheckMainFunctionTimingViolation/30 WdgM_EB_CheckDeinitRequest/57 Det_ASR40_ReportError/60 
WdgM_GetFirstExpiredSEID/7 (WdgM_GetFirstExpiredSEID) @06ceb620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: WdgM_EB_ExpiredSEID/73 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: WdgM_EB_GetCheckedExpiredSEID/48 Det_ASR40_ReportError/60 
WdgM_PerformReset/6 (WdgM_PerformReset) @06ceb380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (read)WdgM_EB_GlobalStatus/70 (write)WdgM_EB_Context/59 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: WdgM_EB_PerformWdgIfModeSwitch/12 
  Calls: WdgM_EB_UpdateTriggerConditions/55 Det_ASR40_ReportError/60 
WdgM_GetGlobalStatus/5 (WdgM_GetGlobalStatus) @06ceb0e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (read)WdgM_EB_GlobalStatus/70 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/60 Det_ASR40_ReportError/60 
WdgM_GetLocalStatus/4 (WdgM_GetLocalStatus) @06cb1d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (read)WdgM_EB_SELocalStatus/69 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/60 WdgM_EB_SEId2IntSEId/51 Det_ASR40_ReportError/60 Det_ASR40_ReportError/60 
WdgM_UpdateAliveCounter/3 (WdgM_UpdateAliveCounter) @06cb18c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (read)WdgM_EB_SECfg/61 (addr)WdgM_EB_Context/59 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/60 WdgM_CheckpointReached/2 Det_ASR40_ReportError/60 WdgM_EB_SEId2IntSEId/51 Det_ASR40_ReportError/60 Det_ASR40_ReportError/60 
WdgM_CheckpointReached/2 (WdgM_CheckpointReached) @06cb1380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (read)WdgM_EB_SECfg/61 (read)WdgM_EB_Context/59 (read)WdgM_EB_SECfg/61 (addr)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: WdgM_UpdateAliveCounter/3 
  Calls: WdgM_EB_CheckpointReachedExtLogical/14 WdgM_EB_CheckpointReachedIntLogical/13 WdgM_EB_CheckpointReachedDeadline/16 WdgM_EB_CheckpointReachedAlive/20 Det_ASR40_ReportError/60 Det_ASR40_ReportError/60 Det_ASR40_ReportError/60 WdgM_EB_SEId2IntSEId/51 Det_ASR40_ReportError/60 
WdgM_GetMode/1 (WdgM_GetMode) @06c85e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: WdgM_EB_Context/59 (addr)WdgM_EB_Context/59 (read)WdgM_EB_Context/59 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/60 Det_ASR40_ReportError/60 
WdgM_EB_ExpiredSupervisionCycleCnt/0 (WdgM_EB_ExpiredSupervisionCycleCnt) @06bfb510
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: WdgM_EB_GetNewGlobalStatus/28 (write)WdgM_EB_GetNewGlobalStatus/28 (read)WdgM_EB_GetNewGlobalStatus/28 (write)WdgM_EB_GetNewGlobalStatus/28 (read)
  Availability: available
  Varpool flags:
WdgM_EB_CheckModeSwitchRequest (struct WdgM_EB_CoreContextType * CoreInstance)
{
  const Std_ReturnType SetModeRetVal;
  Std_ReturnType ExtRetVal;
  WdgM_ModeType ExpectedWdgMMode;
  boolean RequestPerformed;
  boolean D.7596;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RequestPerformed = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ExtRetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CoreInstance->WdgM_EB_CurrentModeId;
  ExpectedWdgMMode = _1;
  # DEBUG BEGIN_STMT
  ExtRetVal = Supervisor_WdgM_GetExpectedWdgMModeCallout (&ExpectedWdgMMode);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ExtRetVal == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _2 = CoreInstance->WdgM_EB_CurrentModeId;
  ExpectedWdgMMode.77_3 = ExpectedWdgMMode;
  if (_2 != ExpectedWdgMMode.77_3)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ExpectedWdgMMode.78_4 = ExpectedWdgMMode;
  SetModeRetVal = WdgM_EB_SetMode (ExpectedWdgMMode.78_4, 1, CoreInstance);
  # DEBUG BEGIN_STMT
  if (SetModeRetVal != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _5 = CoreInstance->CoreID;
  if (_5 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 8, 130);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  RequestPerformed = 1;

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7596 = RequestPerformed;
  ExpectedWdgMMode = {CLOBBER};
  return D.7596;

}


WdgM_EB_CheckDeinitRequest (struct WdgM_EB_CoreContextType * CoreInstance)
{
  const Std_ReturnType DeInitRetVal;
  Std_ReturnType ExtRetVal;
  WdgM_EB_InitStatusType ExpectedInitState;
  boolean RequestPerformed;
  boolean D.7405;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RequestPerformed = 0;
  # DEBUG BEGIN_STMT
  ExpectedInitState = 85;
  # DEBUG BEGIN_STMT
  ExtRetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ExtRetVal = Supervisor_WdgM_GetExpectedInitStateCallout (&ExpectedInitState);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ExtRetVal == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  ExpectedInitState.47_1 = ExpectedInitState;
  if (ExpectedInitState.47_1 == 170)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  DeInitRetVal = WdgM_EB_DeInit (CoreInstance);
  # DEBUG BEGIN_STMT
  if (DeInitRetVal != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 8, 129);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RequestPerformed = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7405 = RequestPerformed;
  ExpectedInitState = {CLOBBER};
  return D.7405;

}


WdgM_EB_CheckInitRequest (struct WdgM_EB_CoreContextType * CoreInstance)
{
  Std_ReturnType InitRetVal;
  Std_ReturnType ExtRetVal;
  WdgM_EB_InitStatusType ExpectedInitState;
  boolean RequestPerformed;
  boolean D.7580;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RequestPerformed = 0;
  # DEBUG BEGIN_STMT
  ExpectedInitState = 170;
  # DEBUG BEGIN_STMT
  ExtRetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ExtRetVal = Supervisor_WdgM_GetExpectedInitStateCallout (&ExpectedInitState);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ExtRetVal == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  ExpectedInitState.74_1 = ExpectedInitState;
  if (ExpectedInitState.74_1 == 85)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  InitRetVal = WdgM_EB_Init (CoreInstance);
  # DEBUG BEGIN_STMT
  if (InitRetVal != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 8, 128);
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RequestPerformed = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 8, 16);

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7580 = RequestPerformed;
  ExpectedInitState = {CLOBBER};
  return D.7580;

}


WdgM_EB_UpdateTriggerConditions (struct WdgM_EB_CoreContextType * CoreInstance)
{
  WdgM_EB_TriggerConditionType TriggerCondition;
  WdgM_EB_TriggerIdType TriggerId;
  const struct WdgM_EB_TriggerCfgType * const TriggerCfg;
  const struct WdgM_EB_ModeCfgType * const ModeCfg;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = CoreInstance->WdgM_EB_CurrentModeId;
  _2 = (int) _1;
  ModeCfg = &WdgM_EB_ModeCfg[_2];
  # DEBUG BEGIN_STMT
  TriggerCfg = ModeCfg->TriggerCfg;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TriggerId = 0;
  goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (unsigned int) TriggerId;
  _4 = _3 * 6;
  _5 = TriggerCfg + _4;
  _6 = _5->WatchdogMode;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  WdgM_EB_GlobalStatus.43_7 = WdgM_EB_GlobalStatus;
  if (WdgM_EB_GlobalStatus.43_7 == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  TriggerCondition = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _8 = (unsigned int) TriggerId;
  _9 = _8 * 6;
  _10 = TriggerCfg + _9;
  TriggerCondition = _10->TriggerCondition;

  <bb 7> :
  # DEBUG BEGIN_STMT
  Wdg_SetTriggerCondition (TriggerCondition);

  <bb 8> :
  # DEBUG BEGIN_STMT
  TriggerId.44_11 = TriggerId;
  TriggerId = TriggerId.44_11 + 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _12 = ModeCfg->NumTriggers;
  if (TriggerId < _12)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_SEResetCPAliveData (WdgM_EB_SEIdType IntSEId, WdgM_EB_IntRamIdxType IntRamIdxBase, boolean InternalRAMOnly, struct WdgM_EB_CoreContextType * CoreInstance)
{
  WdgM_EB_AliveCounterType OldAliveCounter;
  const WdgM_EB_IntRamIdxType IntRamIdx;
  struct WdgM_EB_CPDataType * const CPData;
  const struct WdgM_EB_SECfgType * const SECfg;
  WdgM_EB_CPIdType CPId;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CPId = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = SECfg->CPData;
  _3 = (unsigned int) CPId;
  _4 = _3 * 8;
  CPData = _2 + _4;
  # DEBUG BEGIN_STMT
  _5 = (long unsigned int) CPId;
  IntRamIdx = IntRamIdxBase + _5;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (InternalRAMOnly == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  WdgM_EB_IncrementCPAliveCounterData (CPData);

  <bb 5> :
  # DEBUG BEGIN_STMT
  WdgM_EB_GetCheckedCPAliveCounterData (CPData, IntRamIdx, &OldAliveCounter, CoreInstance);
  # DEBUG BEGIN_STMT
  OldAliveCounter.53_6 = OldAliveCounter;
  WdgM_EB_ResetCPAliveCounterData (IntRamIdx, OldAliveCounter.53_6, CoreInstance);
  OldAliveCounter = {CLOBBER};
  # DEBUG BEGIN_STMT
  CPId.54_7 = CPId;
  CPId = CPId.54_7 + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  _8 = SECfg->NumOfCPs;
  if (CPId < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_SEResetData (WdgM_EB_SEIdType IntSEId)
{
  struct WdgM_EB_CPDataType * const CPData;
  const struct WdgM_EB_SECfgType * const SECfg;
  WdgM_EB_CPIdType CPId;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CPId = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = SECfg->CPData;
  _3 = (unsigned int) CPId;
  _4 = _3 * 8;
  CPData = _2 + _4;
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPDeadlineData (CPData, 180);
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPLogicalData (CPData, 180);
  # DEBUG BEGIN_STMT
  CPId.55_5 = CPId;
  CPId = CPId.55_5 + 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = SECfg->NumOfCPs;
  if (CPId < _6)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_SEIsActiveResetData (WdgM_ModeType NewMode, const struct WdgM_EB_SECfgType * SECfg, boolean IsNormalOperation, struct WdgM_EB_CoreContextType * CoreInstance)
{
  const WdgM_EB_TimestampType TimeStamp;
  struct WdgM_EB_DMDataType * const DMData;
  const WdgM_EB_DMIdType DMId;
  const struct WdgM_EB_CPDeadlineCfgType * const CPDeadlineCfgNewMode;
  uint8 Local_NumOfSEperGraphId;
  WdgM_EB_ExtGraphDataSeqArrayType * const IntExtGraphDataSeqPtr;
  const struct WdgM_EB_ExtGraphDataSeqType * const ExtGraphDataSeqPtr;
  struct WdgM_EB_GraphDataType * const GraphData;
  const WdgM_EB_GraphIdType GraphId;
  const struct WdgM_EB_CPLogicalCfgType * const CPExtLogicalCfgNewMode;
  struct WdgM_EB_GraphDataType * const GraphData;
  const WdgM_EB_GraphIdType GraphId;
  const struct WdgM_EB_CPLogicalCfgType * const CPIntLogicalCfgNewMode;
  const struct WdgM_EB_CPLogicalCfgType * const CPIntLogicalCfgOldMode;
  const struct WdgM_EB_CPCfgType * const CPCfg;
  WdgM_EB_CPIdType CPId;
  boolean IsActive;
  boolean D.7443;

  <bb 2> :
  # DEBUG BEGIN_STMT
  IsActive = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CPId = 0;
  goto <bb 14>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = SECfg->CPCfg;
  _2 = (unsigned int) CPId;
  _3 = _2 * 64;
  CPCfg = _1 + _3;
  # DEBUG BEGIN_STMT
  _4 = (int) NewMode;
  _5 = CPCfg->AliveCfgPtr[_4];
  if (_5 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  IsActive = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  _6 = CoreInstance->WdgM_EB_CurrentModeId;
  _7 = (int) _6;
  CPIntLogicalCfgOldMode = CPCfg->IntLogicalCfgPtr[_7];
  # DEBUG BEGIN_STMT
  _8 = (int) NewMode;
  CPIntLogicalCfgNewMode = CPCfg->IntLogicalCfgPtr[_8];
  # DEBUG BEGIN_STMT
  if (CPIntLogicalCfgNewMode != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  IsActive = 1;
  # DEBUG BEGIN_STMT
  if (IsNormalOperation == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (CPIntLogicalCfgNewMode != CPIntLogicalCfgOldMode)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  GraphId = CPIntLogicalCfgNewMode->GraphId;
  # DEBUG BEGIN_STMT
  _9 = (int) GraphId;
  GraphData = &WdgM_EB_InternalGraphData[_9];
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreGraphData (GraphData, 0, 0, 0);

  <bb 9> :
  # DEBUG BEGIN_STMT
  _10 = (int) NewMode;
  CPExtLogicalCfgNewMode = CPCfg->ExtLogicalCfgPtr[_10];
  # DEBUG BEGIN_STMT
  if (CPExtLogicalCfgNewMode != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  GraphId = CPExtLogicalCfgNewMode->GraphId;
  # DEBUG BEGIN_STMT
  _11 = (int) GraphId;
  GraphData = &WdgM_EB_ExternalGraphData[_11];
  # DEBUG BEGIN_STMT
  _12 = (int) GraphId;
  ExtGraphDataSeqPtr = &WdgM_EB_ExtGraphDataSeqPtr[_12];
  # DEBUG BEGIN_STMT
  IntExtGraphDataSeqPtr = ExtGraphDataSeqPtr->GraphDataPtr;
  # DEBUG BEGIN_STMT
  Local_NumOfSEperGraphId = ExtGraphDataSeqPtr->NumOfSEperGraphId;
  # DEBUG BEGIN_STMT
  WdgM_EB_ResetExtGraphDataSeq (IntExtGraphDataSeqPtr, Local_NumOfSEperGraphId);
  # DEBUG BEGIN_STMT
  IsActive = 1;
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreGraphData (GraphData, 0, 0, 0);

  <bb 11> :
  # DEBUG BEGIN_STMT
  _13 = (int) NewMode;
  CPDeadlineCfgNewMode = CPCfg->DeadlineCfgPtr[_13];
  # DEBUG BEGIN_STMT
  if (CPDeadlineCfgNewMode != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  DMId = CPDeadlineCfgNewMode->DMId;
  # DEBUG BEGIN_STMT
  _14 = (int) DMId;
  DMData = &WdgM_EB_DMData[_14];
  # DEBUG BEGIN_STMT
  TimeStamp = 0;
  # DEBUG BEGIN_STMT
  IsActive = 1;
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreDMData (DMData, &TimeStamp, 0, 0);
  TimeStamp = {CLOBBER};

  <bb 13> :
  # DEBUG BEGIN_STMT
  CPId.52_15 = CPId;
  CPId = CPId.52_15 + 1;

  <bb 14> :
  # DEBUG BEGIN_STMT
  _16 = SECfg->NumOfCPs;
  if (CPId < _16)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7443 = IsActive;
  return D.7443;

}


WdgM_EB_SEId2IntSEId (WdgM_SupervisedEntityIdType SEId, WdgM_EB_SEIdType * IntSEId)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.7139;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SEId <= 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) SEId;
  _2 = WdgM_EB_SEIntSEId[_1];
  *IntSEId = _2;
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  *IntSEId = 0;
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7139 = RetVal;
  return D.7139;

}


WdgM_EB_GetCheckedRedundantData8 (uint16 RedundantData, uint8 * Data)
{
  const WdgM_EB_SEIdType ExpiredSEIDRedundant;
  const WdgM_EB_SEIdType CheckedExpiredSEID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7602;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CheckedExpiredSEID = (const WdgM_EB_SEIdType) RedundantData;
  # DEBUG BEGIN_STMT
  _1 = RedundantData >> 8;
  _2 = (unsigned char) _1;
  ExpiredSEIDRedundant = ~_2;
  # DEBUG BEGIN_STMT
  if (CheckedExpiredSEID == ExpiredSEIDRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  *Data = CheckedExpiredSEID;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.7602 = RetVal;
  return D.7602;

}


WdgM_EB_StoreRedundantData8 (uint16 * RedundantData, uint8 Data)
{
  WdgM_EB_ExpiredSEIDType LocalSEID;
  const WdgM_EB_SEIdType ExpiredSEIDRedundant;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ExpiredSEIDRedundant = ~Data;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LocalSEID = (WdgM_EB_ExpiredSEIDType) Data;
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) ExpiredSEIDRedundant;
  _2 = _1 << 8;
  LocalSEID = LocalSEID | _2;
  # DEBUG BEGIN_STMT
  *RedundantData = LocalSEID;
  return;

}


WdgM_EB_GetCheckedExpiredSEID (WdgM_EB_ExpiredSEIDType UncheckedExpiredSEID, WdgM_EB_SEIdType * ExpiredSEID)
{
  const WdgM_EB_SEIdType ExpiredSEIDRedundant;
  const WdgM_EB_SEIdType CheckedExpiredSEID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7381;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CheckedExpiredSEID = (const WdgM_EB_SEIdType) UncheckedExpiredSEID;
  # DEBUG BEGIN_STMT
  _1 = UncheckedExpiredSEID >> 8;
  _2 = (unsigned char) _1;
  ExpiredSEIDRedundant = ~_2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CheckedExpiredSEID == ExpiredSEIDRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  *ExpiredSEID = CheckedExpiredSEID;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7381 = RetVal;
  return D.7381;

}


WdgM_EB_StoreExpiredSEID (WdgM_EB_ExpiredSEIDType * ExpiredSEID, WdgM_EB_SEIdType SEID)
{
  WdgM_EB_ExpiredSEIDType LocalSupEntID;
  const WdgM_EB_SEIdType ExpiredSEIDRedundant;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ExpiredSEIDRedundant = ~SEID;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  WdgM_EB_IsExpiredSEIdSet.67_1 = WdgM_EB_IsExpiredSEIdSet;
  if (WdgM_EB_IsExpiredSEIdSet.67_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  LocalSupEntID = (WdgM_EB_ExpiredSEIDType) SEID;
  # DEBUG BEGIN_STMT
  _2 = (short unsigned int) ExpiredSEIDRedundant;
  _3 = _2 << 8;
  LocalSupEntID = LocalSupEntID | _3;
  # DEBUG BEGIN_STMT
  *ExpiredSEID = LocalSupEntID;
  # DEBUG BEGIN_STMT
  WdgM_EB_IsExpiredSEIdSet = 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_ResetExtGraphDataSeq (WdgM_EB_ExtGraphDataSeqArrayType * IntExtGraphDataSeqPtr, uint8 NumOfSEperGraphId)
{
  uint8 idx;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  idx = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreSeqNumber (IntExtGraphDataSeqPtr, idx, 0);
  # DEBUG BEGIN_STMT
  idx.37_1 = idx;
  idx = idx.37_1 + 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (idx < NumOfSEperGraphId)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_GetCheckedCPLogicalData (const struct WdgM_EB_CPDataType * CPData, WdgM_EB_ResultType * CPLogicalResult)
{
  const WdgM_EB_ResultType LogicalDataRedundant;
  const WdgM_EB_ResultType CheckedLogicalData;
  const uint16 UncheckedLogicalData;
  Std_ReturnType RetVal;
  WdgM_EB_ResultType D.7278;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  UncheckedLogicalData = CPData->LogicalData;
  # DEBUG BEGIN_STMT
  CheckedLogicalData = (const WdgM_EB_ResultType) UncheckedLogicalData;
  # DEBUG BEGIN_STMT
  _1 = UncheckedLogicalData >> 8;
  _2 = (unsigned char) _1;
  LogicalDataRedundant = ~_2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CheckedLogicalData == LogicalDataRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  *CPLogicalResult = CheckedLogicalData;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7278 = RetVal;
  return D.7278;

}


WdgM_EB_StoreCPLogicalData (struct WdgM_EB_CPDataType * CPData, WdgM_EB_ResultType LogicalResult)
{
  uint16 LogicalData;
  const WdgM_EB_ResultType LogicalDataRedundant;

  <bb 2> :
  # DEBUG BEGIN_STMT
  LogicalDataRedundant = ~LogicalResult;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LogicalData = (uint16) LogicalResult;
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) LogicalDataRedundant;
  _2 = _1 << 8;
  LogicalData = LogicalData | _2;
  # DEBUG BEGIN_STMT
  CPData->LogicalData = LogicalData;
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_GetCheckedCPDeadlineData (const struct WdgM_EB_CPDataType * CPData, WdgM_EB_ResultType * CPDeadlineResult)
{
  const WdgM_EB_ResultType DeadlineDataRedundant;
  const WdgM_EB_ResultType CheckedDeadlineData;
  const uint16 UncheckedDeadlineData;
  Std_ReturnType RetVal;
  Std_ReturnType D.7205;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  UncheckedDeadlineData = CPData->DeadlineData;
  # DEBUG BEGIN_STMT
  CheckedDeadlineData = (const WdgM_EB_ResultType) UncheckedDeadlineData;
  # DEBUG BEGIN_STMT
  _1 = UncheckedDeadlineData >> 8;
  _2 = (unsigned char) _1;
  DeadlineDataRedundant = ~_2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CheckedDeadlineData == DeadlineDataRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  *CPDeadlineResult = CheckedDeadlineData;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7205 = RetVal;
  return D.7205;

}


WdgM_EB_StoreCPDeadlineData (struct WdgM_EB_CPDataType * CPData, WdgM_EB_ResultType DeadlineResult)
{
  uint16 DeadlineData;
  const uint8 DeadlineDataRedundant;

  <bb 2> :
  # DEBUG BEGIN_STMT
  DeadlineDataRedundant = ~DeadlineResult;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  DeadlineData = (uint16) DeadlineResult;
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) DeadlineDataRedundant;
  _2 = _1 << 8;
  DeadlineData = DeadlineData | _2;
  # DEBUG BEGIN_STMT
  CPData->DeadlineData = DeadlineData;
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_DecMaxCyclesDMData (struct WdgM_EB_DMDataType * DMData)
{
  const uint16 MaxCyclesRedundant;
  const uint16 MaxCycles;
  uint32 MaxCyclesData;
  const uint16 MaxCyclesDataRedundant;
  const uint16 CheckedMaxCyclesData;
  const uint8 IsActiveDataRedundant;
  const uint8 CheckedIsActiveData;
  const uint32 UncheckedMaxCyclesData;
  const uint16 UncheckedIsActiveData;
  Std_ReturnType RetVal;
  Std_ReturnType D.7516;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  UncheckedIsActiveData = DMData->IsActiveData;
  # DEBUG BEGIN_STMT
  UncheckedMaxCyclesData = DMData->MaxCyclesData;
  # DEBUG BEGIN_STMT
  CheckedIsActiveData = (const uint8) UncheckedIsActiveData;
  # DEBUG BEGIN_STMT
  _1 = UncheckedIsActiveData >> 8;
  _2 = (unsigned char) _1;
  IsActiveDataRedundant = ~_2;
  # DEBUG BEGIN_STMT
  CheckedMaxCyclesData = (const uint16) UncheckedMaxCyclesData;
  # DEBUG BEGIN_STMT
  _3 = UncheckedMaxCyclesData >> 16;
  _4 = (short unsigned int) _3;
  MaxCyclesDataRedundant = ~_4;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CheckedIsActiveData == IsActiveDataRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  if (CheckedMaxCyclesData == MaxCyclesDataRedundant)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (CheckedIsActiveData != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (CheckedMaxCyclesData != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MaxCycles = CheckedMaxCyclesData + 65535;
  # DEBUG BEGIN_STMT
  MaxCyclesRedundant = ~MaxCycles;
  # DEBUG BEGIN_STMT
  MaxCyclesData = (uint32) MaxCycles;
  # DEBUG BEGIN_STMT
  _5 = (long unsigned int) MaxCyclesRedundant;
  _6 = _5 << 16;
  MaxCyclesData = MaxCyclesData | _6;
  # DEBUG BEGIN_STMT
  DMData->MaxCyclesData = MaxCyclesData;
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7516 = RetVal;
  return D.7516;

}


WdgM_EB_StoreDMData (struct WdgM_EB_DMDataType * DMData, const WdgM_EB_TimestampType * TimeStamp, uint16 MaxCycles, boolean IsActive)
{
  const WdgM_EB_TimestampType TimeStampDataRedundant;
  const uint16 MaxCyclesRedundant;
  const uint8 IsActiveDataRedundant;
  const uint8 IsActiveDataUint8;
  uint32 MaxCyclesData;
  uint16 IsActiveData;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IsActiveDataUint8 = IsActive;
  # DEBUG BEGIN_STMT
  IsActiveDataRedundant = ~IsActiveDataUint8;
  # DEBUG BEGIN_STMT
  MaxCyclesRedundant = ~MaxCycles;
  # DEBUG BEGIN_STMT
  _1 = *TimeStamp;
  TimeStampDataRedundant = ~_1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IsActiveData = (uint16) IsActiveDataUint8;
  # DEBUG BEGIN_STMT
  _2 = (short unsigned int) IsActiveDataRedundant;
  _3 = _2 << 8;
  IsActiveData = IsActiveData | _3;
  # DEBUG BEGIN_STMT
  MaxCyclesData = (uint32) MaxCycles;
  # DEBUG BEGIN_STMT
  _4 = (long unsigned int) MaxCyclesRedundant;
  _5 = _4 << 16;
  MaxCyclesData = MaxCyclesData | _5;
  # DEBUG BEGIN_STMT
  _6 = *TimeStamp;
  DMData->StartTimestampData = _6;
  # DEBUG BEGIN_STMT
  DMData->StartTimestampDataInv = TimeStampDataRedundant;
  # DEBUG BEGIN_STMT
  DMData->MaxCyclesData = MaxCyclesData;
  # DEBUG BEGIN_STMT
  DMData->IsActiveData = IsActiveData;
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_GetCheckedDMData (const struct WdgM_EB_DMDataType * DMData, WdgM_EB_TimestampType * TimeStamp, uint16 * MaxCycles, boolean * ActiveFlag)
{
  const uint16 MaxCyclesDataRedundant;
  const uint16 CheckedMaxCyclesData;
  const uint8 IsActiveDataRedundant;
  const uint8 CheckedIsActiveData;
  const WdgM_EB_TimestampType TimeStampDataRedundant;
  const WdgM_EB_TimestampType CheckedTimeStampData;
  const uint32 UncheckedMaxCyclesData;
  const uint16 UncheckedIsActiveData;
  Std_ReturnType RetVal;
  Std_ReturnType D.7200;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  UncheckedIsActiveData = DMData->IsActiveData;
  # DEBUG BEGIN_STMT
  UncheckedMaxCyclesData = DMData->MaxCyclesData;
  # DEBUG BEGIN_STMT
  CheckedTimeStampData = DMData->StartTimestampData;
  # DEBUG BEGIN_STMT
  _1 = DMData->StartTimestampDataInv;
  TimeStampDataRedundant = ~_1;
  # DEBUG BEGIN_STMT
  CheckedIsActiveData = (const uint8) UncheckedIsActiveData;
  # DEBUG BEGIN_STMT
  _2 = UncheckedIsActiveData >> 8;
  _3 = (unsigned char) _2;
  IsActiveDataRedundant = ~_3;
  # DEBUG BEGIN_STMT
  CheckedMaxCyclesData = (const uint16) UncheckedMaxCyclesData;
  # DEBUG BEGIN_STMT
  _4 = UncheckedMaxCyclesData >> 16;
  _5 = (short unsigned int) _4;
  MaxCyclesDataRedundant = ~_5;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CheckedIsActiveData == IsActiveDataRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (CheckedMaxCyclesData == MaxCyclesDataRedundant)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  if (CheckedTimeStampData == TimeStampDataRedundant)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  *TimeStamp = CheckedTimeStampData;
  # DEBUG BEGIN_STMT
  *MaxCycles = CheckedMaxCyclesData;
  # DEBUG BEGIN_STMT
  *ActiveFlag = CheckedIsActiveData;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7200 = RetVal;
  return D.7200;

}


WdgM_EB_GetCheckedCPAliveCounterData (const struct WdgM_EB_CPDataType * CPData, WdgM_EB_IntRamIdxType IntRamIdx, WdgM_EB_AliveCounterType * CPAliveCounter, struct WdgM_EB_CoreContextType * CoreInstance)
{
  const uint32 AliveCounterDataTemp;
  WdgM_EB_AliveCounterType AliveCounterData;
  const WdgM_EB_AliveCounterType AliveCounterReference;
  const WdgM_EB_AliveCounterType AliveCounterDataRedundant;
  const WdgM_EB_AliveCounterType CheckedAliveCounterData;
  const uint32 UncheckedAliveCounterData;
  Std_ReturnType RetVal;
  Std_ReturnType D.7453;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  UncheckedAliveCounterData = CPData->AliveCounterData;
  # DEBUG BEGIN_STMT
  CheckedAliveCounterData = (const WdgM_EB_AliveCounterType) UncheckedAliveCounterData;
  # DEBUG BEGIN_STMT
  _1 = UncheckedAliveCounterData >> 16;
  _2 = (short unsigned int) _1;
  AliveCounterDataRedundant = ~_2;
  # DEBUG BEGIN_STMT
  _3 = CoreInstance->WdgM_EB_IntRAMData;
  _4 = IntRamIdx * 2;
  _5 = _3 + _4;
  AliveCounterReference = _5->AliveCounterData;
  # DEBUG BEGIN_STMT
  AliveCounterData = CheckedAliveCounterData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CheckedAliveCounterData == AliveCounterDataRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (AliveCounterData >= AliveCounterReference)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  AliveCounterData = AliveCounterData - AliveCounterReference;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _6 = (long unsigned int) AliveCounterReference;
  AliveCounterDataTemp = 65536 - _6;
  # DEBUG BEGIN_STMT
  _7 = (short unsigned int) AliveCounterDataTemp;
  AliveCounterData = AliveCounterData + _7;

  <bb 8> :
  # DEBUG BEGIN_STMT
  *CPAliveCounter = AliveCounterData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7453 = RetVal;
  return D.7453;

}


WdgM_EB_ResetCPAliveCounterData (WdgM_EB_IntRamIdxType IntRamIdx, WdgM_EB_AliveCounterType OldAliveCounter, struct WdgM_EB_CoreContextType * CoreInstance)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CoreInstance->WdgM_EB_IntRAMData;
  _2 = IntRamIdx * 2;
  _3 = _1 + _2;
  _4 = _3->AliveCounterData;
  _5 = CoreInstance->WdgM_EB_IntRAMData;
  _6 = IntRamIdx * 2;
  _7 = _5 + _6;
  _8 = OldAliveCounter + _4;
  _7->AliveCounterData = _8;
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_IncrementCPAliveCounterData (struct WdgM_EB_CPDataType * CPData)
{
  uint32 AliveCounterData;
  const WdgM_EB_AliveCounterType AliveCounterRedundant;
  const WdgM_EB_AliveCounterType AliveCounter;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = CPData->AliveCounterData;
  _2 = (short unsigned int) _1;
  AliveCounter = _2 + 1;
  # DEBUG BEGIN_STMT
  AliveCounterRedundant = ~AliveCounter;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  AliveCounterData = (uint32) AliveCounter;
  # DEBUG BEGIN_STMT
  _3 = (long unsigned int) AliveCounterRedundant;
  _4 = _3 << 16;
  AliveCounterData = AliveCounterData | _4;
  # DEBUG BEGIN_STMT
  CPData->AliveCounterData = AliveCounterData;
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_CheckCPAliveCounterData (const struct WdgM_EB_CPDataType * CPData)
{
  const WdgM_EB_AliveCounterType AliveCounterDataRedundant;
  const WdgM_EB_AliveCounterType CheckedAliveCounterData;
  const uint32 UncheckedAliveCounterData;
  Std_ReturnType RetVal;
  Std_ReturnType D.7149;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  UncheckedAliveCounterData = CPData->AliveCounterData;
  # DEBUG BEGIN_STMT
  CheckedAliveCounterData = (const WdgM_EB_AliveCounterType) UncheckedAliveCounterData;
  # DEBUG BEGIN_STMT
  _1 = UncheckedAliveCounterData >> 16;
  _2 = (short unsigned int) _1;
  AliveCounterDataRedundant = ~_2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CheckedAliveCounterData == AliveCounterDataRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7149 = RetVal;
  return D.7149;

}


WdgM_EB_StoreSeqNumber (WdgM_EB_ExtGraphDataSeqArrayType * IntExtGraphDataSeqPtr, uint8 IndexInGraphDataSeq, uint8 SeqNumber)
{
  const uint8 SeqNumberRedundant;
  uint16 LastSeqNumber;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SeqNumberRedundant = ~SeqNumber;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LastSeqNumber = (uint16) SeqNumber;
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) SeqNumberRedundant;
  _2 = _1 << 8;
  LastSeqNumber = LastSeqNumber | _2;
  # DEBUG BEGIN_STMT
  _3 = (unsigned int) IndexInGraphDataSeq;
  _4 = _3 * 2;
  _5 = IntExtGraphDataSeqPtr + _4;
  *_5 = LastSeqNumber;
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_GetCheckedSeqNumber (const WdgM_EB_ExtGraphDataSeqArrayType * IntExtGraphDataSeqPtr, uint8 IndexInGraphDataSeq, uint8 * LastSeqNumber)
{
  const uint8 LastSeqNumberRedundant;
  const uint8 CheckedLastSeqNumber;
  const uint16 UncheckedLastSeqNumber;
  Std_ReturnType RetVal;
  Std_ReturnType D.7327;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) IndexInGraphDataSeq;
  _2 = _1 * 2;
  _3 = IntExtGraphDataSeqPtr + _2;
  UncheckedLastSeqNumber = *_3;
  # DEBUG BEGIN_STMT
  CheckedLastSeqNumber = (const uint8) UncheckedLastSeqNumber;
  # DEBUG BEGIN_STMT
  _4 = UncheckedLastSeqNumber >> 8;
  _5 = (unsigned char) _4;
  LastSeqNumberRedundant = ~_5;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CheckedLastSeqNumber == LastSeqNumberRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  *LastSeqNumber = CheckedLastSeqNumber;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7327 = RetVal;
  return D.7327;

}


WdgM_EB_StoreGraphData (struct WdgM_EB_GraphDataType * GraphData, WdgM_EB_SEIdType IntSEId, WdgM_EB_CPIdType CPId, boolean IsActive)
{
  const uint8 IsActiveDataRedundant;
  const uint8 IsActiveDataUint8;
  const WdgM_EB_CPIdType CPIdRedundant;
  const WdgM_EB_SEIdType IntSEIdRedundant;
  uint16 IsActiveData;
  uint32 LastCPData;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntSEIdRedundant = ~IntSEId;
  # DEBUG BEGIN_STMT
  CPIdRedundant = ~CPId;
  # DEBUG BEGIN_STMT
  IsActiveDataUint8 = IsActive;
  # DEBUG BEGIN_STMT
  IsActiveDataRedundant = ~IsActiveDataUint8;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LastCPData = (uint32) IntSEId;
  # DEBUG BEGIN_STMT
  _1 = (long unsigned int) IntSEIdRedundant;
  _2 = _1 << 8;
  LastCPData = LastCPData | _2;
  # DEBUG BEGIN_STMT
  _3 = (long unsigned int) CPId;
  _4 = _3 << 16;
  LastCPData = LastCPData | _4;
  # DEBUG BEGIN_STMT
  _5 = (long unsigned int) CPIdRedundant;
  _6 = _5 << 24;
  LastCPData = LastCPData | _6;
  # DEBUG BEGIN_STMT
  IsActiveData = (uint16) IsActiveDataUint8;
  # DEBUG BEGIN_STMT
  _7 = (short unsigned int) IsActiveDataRedundant;
  _8 = _7 << 8;
  IsActiveData = IsActiveData | _8;
  # DEBUG BEGIN_STMT
  GraphData->LastCPData = LastCPData;
  # DEBUG BEGIN_STMT
  GraphData->IsActiveData = IsActiveData;
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_GetCheckedGraphData (const struct WdgM_EB_GraphDataType * GraphData, WdgM_EB_SEIdType * LastIntSEId, WdgM_EB_CPIdType * LastCPId, boolean * ActiveFlag)
{
  const uint8 LastCPIdRedundant;
  const uint8 CheckedLastCPId;
  const uint8 LastSEIdRedundant;
  const uint8 CheckedLastSEId;
  const uint8 IsActiveDataRedundant;
  const uint8 CheckedIsActiveData;
  const uint32 UncheckedLastCPData;
  const uint16 UncheckedIsActiveData;
  Std_ReturnType RetVal;
  Std_ReturnType D.7260;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  UncheckedIsActiveData = GraphData->IsActiveData;
  # DEBUG BEGIN_STMT
  UncheckedLastCPData = GraphData->LastCPData;
  # DEBUG BEGIN_STMT
  CheckedIsActiveData = (const uint8) UncheckedIsActiveData;
  # DEBUG BEGIN_STMT
  _1 = UncheckedIsActiveData >> 8;
  _2 = (unsigned char) _1;
  IsActiveDataRedundant = ~_2;
  # DEBUG BEGIN_STMT
  CheckedLastSEId = (const uint8) UncheckedLastCPData;
  # DEBUG BEGIN_STMT
  _3 = UncheckedLastCPData >> 8;
  _4 = (unsigned char) _3;
  LastSEIdRedundant = ~_4;
  # DEBUG BEGIN_STMT
  _5 = UncheckedLastCPData >> 16;
  CheckedLastCPId = (const uint8) _5;
  # DEBUG BEGIN_STMT
  _6 = UncheckedLastCPData >> 24;
  _7 = (unsigned char) _6;
  LastCPIdRedundant = ~_7;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CheckedIsActiveData == IsActiveDataRedundant)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (CheckedLastSEId == LastSEIdRedundant)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  if (CheckedLastCPId == LastCPIdRedundant)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  *LastIntSEId = CheckedLastSEId;
  # DEBUG BEGIN_STMT
  *LastCPId = CheckedLastCPId;
  # DEBUG BEGIN_STMT
  *ActiveFlag = CheckedIsActiveData;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7260 = RetVal;
  return D.7260;

}


WdgM_EB_CheckMainFunctionTimingViolation (struct WdgM_EB_CoreContextType * CoreInstance)
{
  const WdgM_EB_TimestampType MFDeadlineMax;
  const WdgM_EB_TimestampType MFDeadlineMin;
  WdgM_EB_TimestampType ElapsedTime;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ElapsedTime = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = &CoreInstance->WdgM_EB_MainFunctionTimeStamp;
  Supervisor_WdgM_GetElapsedTimeCallout (_1, &ElapsedTime);
  # DEBUG BEGIN_STMT
  _2 = CoreInstance->WdgM_EB_InitStatus;
  _3 = *_2;
  if (_3 == 85)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  MFDeadlineMin = 9000;
  # DEBUG BEGIN_STMT
  MFDeadlineMax = 11000;
  # DEBUG BEGIN_STMT
  ElapsedTime.57_4 = ElapsedTime;
  _5 = ElapsedTime.57_4 + 4294958296;
  if (_5 > 2000)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (9, 1);

  <bb 5> :
  # DEBUG BEGIN_STMT
  ElapsedTime = {CLOBBER};
  return;

}


WdgM_EB_UpdateSupervisionCycleCounter (struct WdgM_EB_CoreContextType * CoreInstance)
{
  const struct WdgM_EB_ModeCfgType * const ModeCfg;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = CoreInstance->WdgM_EB_CurrentModeId;
  _2 = (int) _1;
  ModeCfg = &WdgM_EB_ModeCfg[_2];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = CoreInstance->WdgM_EB_SupervisionCycleCnt;
  _4 = _3 + 1;
  CoreInstance->WdgM_EB_SupervisionCycleCnt = _4;
  # DEBUG BEGIN_STMT
  _5 = CoreInstance->WdgM_EB_SupervisionCycleCnt;
  _6 = ModeCfg->MaxSupervisionCycleCounter;
  _7 = _5 % _6;
  CoreInstance->WdgM_EB_SupervisionCycleCnt = _7;
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_GetNewGlobalStatus (struct WdgM_EB_CoreContextType * CoreInstance)
{
  const struct WdgM_EB_ModeCfgType * const ModeCfg;
  WdgM_GlobalStatusType NewGlobalStatus;
  WdgM_EB_SEIdType NumSEExpired;
  WdgM_EB_SEIdType NumSEFailed;
  WdgM_EB_SEIdType IntSEId;
  const WdgM_GlobalStatusType OldGlobalStatus;
  WdgM_GlobalStatusType D.7569;

  <bb 2> :
  # DEBUG BEGIN_STMT
  OldGlobalStatus = WdgM_EB_GlobalStatus;
  # DEBUG BEGIN_STMT
  IntSEId = 0;
  # DEBUG BEGIN_STMT
  NumSEFailed = 0;
  # DEBUG BEGIN_STMT
  NumSEExpired = 0;
  # DEBUG BEGIN_STMT
  NewGlobalStatus = WdgM_EB_GlobalStatus;
  # DEBUG BEGIN_STMT
  _1 = CoreInstance->WdgM_EB_CurrentModeId;
  _2 = (int) _1;
  ModeCfg = &WdgM_EB_ModeCfg[_2];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntSEId = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (int) IntSEId;
  _4 = WdgM_EB_SELocalStatus[_3];
  _5 = (int) _4;
  switch (_5) <default: <L27> [INV], case 1: <L1> [INV], case 2: <L2> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  NumSEFailed.68_6 = NumSEFailed;
  NumSEFailed = NumSEFailed.68_6 + 1;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  NumSEExpired.69_7 = NumSEExpired;
  NumSEExpired = NumSEExpired.69_7 + 1;
  # DEBUG BEGIN_STMT

  <bb 6> :
<L27>:
  # DEBUG BEGIN_STMT
  IntSEId.70_8 = IntSEId;
  IntSEId = IntSEId.70_8 + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (IntSEId <= 2)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _9 = (int) OldGlobalStatus;
  switch (_9) <default: <L28> [INV], case 0 ... 1: <L9> [INV], case 2: <L20> [INV]>

  <bb 9> :
<L9>:
  # DEBUG BEGIN_STMT
  if (NumSEExpired == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (NumSEFailed != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  NewGlobalStatus = 1;
  goto <bb 18>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  NewGlobalStatus = 0;
  goto <bb 18>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _10 = ModeCfg->ExpiredSupervisionCycleTol;
  if (_10 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  NewGlobalStatus = 2;
  # DEBUG BEGIN_STMT
  WdgM_EB_ExpiredSupervisionCycleCnt = 1;
  goto <bb 18>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  NewGlobalStatus = 3;
  goto <bb 18>; [INV]

  <bb 16> :
<L20>:
  # DEBUG BEGIN_STMT
  WdgM_EB_ExpiredSupervisionCycleCnt.71_11 = WdgM_EB_ExpiredSupervisionCycleCnt;
  WdgM_EB_ExpiredSupervisionCycleCnt.72_12 = WdgM_EB_ExpiredSupervisionCycleCnt.71_11;
  _13 = WdgM_EB_ExpiredSupervisionCycleCnt.72_12 + 1;
  WdgM_EB_ExpiredSupervisionCycleCnt = _13;
  # DEBUG BEGIN_STMT
  _14 = ModeCfg->ExpiredSupervisionCycleTol;
  WdgM_EB_ExpiredSupervisionCycleCnt.73_15 = WdgM_EB_ExpiredSupervisionCycleCnt;
  if (_14 < WdgM_EB_ExpiredSupervisionCycleCnt.73_15)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  NewGlobalStatus = 3;

  <bb 18> :
<L28>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7569 = NewGlobalStatus;
  return D.7569;

}


WdgM_EB_SetGlobalStatus (struct WdgM_EB_CoreContextType * CoreInstance)
{
  const WdgM_GlobalStatusType NewGlobalStatus;
  const WdgM_GlobalStatusType OldGlobalStatus;

  <bb 2> :
  # DEBUG BEGIN_STMT
  OldGlobalStatus = WdgM_EB_GlobalStatus;
  # DEBUG BEGIN_STMT
  NewGlobalStatus = WdgM_EB_GetNewGlobalStatus (CoreInstance);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (OldGlobalStatus != NewGlobalStatus)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  WdgM_EB_GlobalStatus = NewGlobalStatus;
  # DEBUG BEGIN_STMT
  if (NewGlobalStatus == 3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (4, 1);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_SetSELocalStatus (WdgM_EB_SEIdType IntSEId, WdgM_EB_SEIdType IntCoreSEId, WdgM_EB_ResultType AliveResult, WdgM_EB_ResultType DeadlineResult, WdgM_EB_ResultType LogicalResult, struct WdgM_EB_CoreContextType * CoreInstance)
{
  WdgM_LocalStatusType OldLocalStatus;
  WdgM_EB_ExpiredSEIDType ExpiredSEID;
  WdgM_LocalStatusType SELocalStatus;
  WdgM_LocalStatusType NewLocalStatus;
  const uint8 NextFailedStatus;
  const uint16 NextFailedAliveSupervisionRefCycleCnt;
  const uint8 FailedAliveSupervisionRefCycleTol;
  const struct WdgM_EB_SECfgType * const SECfg;
  uint16 * const SEWData_FailedAliveSupervisionRefCycleCnt;
  WdgM_LocalStatusType * const SEWData_SELocalStatus;
  const uint8 iftmp.64;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = CoreInstance->WdgM_EB_SELocalStatus;
  _2 = (sizetype) IntSEId;
  SEWData_SELocalStatus = _1 + _2;
  # DEBUG BEGIN_STMT
  _3 = CoreInstance->WdgM_EB_FailedAliveSupervisionRefCycleCnt;
  _4 = (unsigned int) IntCoreSEId;
  _5 = _4 * 2;
  SEWData_FailedAliveSupervisionRefCycleCnt = _3 + _5;
  # DEBUG BEGIN_STMT
  _6 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_6];
  # DEBUG BEGIN_STMT
  _7 = CoreInstance->WdgM_EB_CurrentModeId;
  _8 = (int) _7;
  FailedAliveSupervisionRefCycleTol = SECfg->FailedAliveSupervisionRefCycleTol[_8];
  # DEBUG BEGIN_STMT
  _9 = *SEWData_FailedAliveSupervisionRefCycleCnt;
  NextFailedAliveSupervisionRefCycleCnt = _9 + 1;
  # DEBUG BEGIN_STMT
  _10 = SECfg->ErrorRecoveryEnabled;
  if (_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.64 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.64 = 2;

  <bb 5> :
  NextFailedStatus = iftmp.64;
  # DEBUG BEGIN_STMT
  NewLocalStatus = *SEWData_SELocalStatus;
  # DEBUG BEGIN_STMT
  SELocalStatus = *SEWData_SELocalStatus;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (int) SELocalStatus;
  switch (_11) <default: <L31> [INV], case 0 ... 1: <L3> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  _12 = (int) AliveResult;
  switch (_12) <default: <L30> [INV], case 180: <L9> [INV], case 203: <L5> [INV]>

  <bb 7> :
<L5>:
  # DEBUG BEGIN_STMT
  _13 = (short unsigned int) FailedAliveSupervisionRefCycleTol;
  if (NextFailedAliveSupervisionRefCycleCnt <= _13)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _14 = *SEWData_FailedAliveSupervisionRefCycleCnt;
  _15 = _14;
  _16 = _15 + 1;
  *SEWData_FailedAliveSupervisionRefCycleCnt = _16;
  # DEBUG BEGIN_STMT
  NewLocalStatus = 1;
  goto <bb 14>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  NewLocalStatus = NextFailedStatus;
  goto <bb 14>; [INV]

  <bb 10> :
<L9>:
  # DEBUG BEGIN_STMT
  _17 = *SEWData_FailedAliveSupervisionRefCycleCnt;
  if (_17 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _18 = *SEWData_FailedAliveSupervisionRefCycleCnt;
  _19 = _18;
  _20 = _19 + 65535;
  *SEWData_FailedAliveSupervisionRefCycleCnt = _20;

  <bb 12> :
  # DEBUG BEGIN_STMT
  _21 = *SEWData_FailedAliveSupervisionRefCycleCnt;
  if (_21 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  NewLocalStatus = 0;

  <bb 14> :
<L30>:
  # DEBUG BEGIN_STMT
  if (DeadlineResult != 180)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  NewLocalStatus = NextFailedStatus;

  <bb 16> :
  # DEBUG BEGIN_STMT
  if (LogicalResult != 180)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  NewLocalStatus = NextFailedStatus;

  <bb 18> :
  # DEBUG BEGIN_STMT
  if (NewLocalStatus == 2)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  WdgM_EB_ExpiredSEID.65_22 = WdgM_EB_ExpiredSEID;
  ExpiredSEID = WdgM_EB_ExpiredSEID.65_22;
  # DEBUG BEGIN_STMT
  _23 = SECfg->SEId;
  WdgM_EB_StoreExpiredSEID (&ExpiredSEID, _23);
  # DEBUG BEGIN_STMT
  ExpiredSEID.66_24 = ExpiredSEID;
  WdgM_EB_ExpiredSEID = ExpiredSEID.66_24;
  ExpiredSEID = {CLOBBER};

  <bb 20> :
<L31>:
  # DEBUG BEGIN_STMT
  if (SELocalStatus != NewLocalStatus)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  OldLocalStatus = SELocalStatus;
  # DEBUG BEGIN_STMT
  *SEWData_SELocalStatus = NewLocalStatus;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 22> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_SetLocalStatus (struct WdgM_EB_CoreContextType * CoreInstance)
{
  const struct WdgM_EB_CPLogicalCfgType * const CPExtLogicalCfg;
  const struct WdgM_EB_CPLogicalCfgType * const CPIntLogicalCfg;
  const struct WdgM_EB_CPDeadlineCfgType * const CPDeadlineCfg;
  const struct WdgM_EB_CPAliveCfgType * const CPAliveCfg;
  WdgM_EB_ResultType TmpResult;
  const WdgM_EB_IntRamIdxType IntRamIdx;
  const struct WdgM_EB_CPCfgType * const CPCfg;
  WdgM_EB_ResultType LogicalResult;
  WdgM_EB_ResultType DeadlineResult;
  WdgM_EB_ResultType AliveResult;
  boolean IsAliveResultSet;
  WdgM_EB_CPIdType CPId;
  const struct WdgM_EB_SECfgType * const SECfg;
  WdgM_EB_IntRamIdxType IntRamIdxBase;
  WdgM_EB_SEIdType IntCoreSEId;
  WdgM_EB_SEIdType IntSEId;

  <bb 2> :
  # DEBUG BEGIN_STMT
  IntSEId = 0;
  # DEBUG BEGIN_STMT
  IntCoreSEId = 0;
  # DEBUG BEGIN_STMT
  IntRamIdxBase = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntSEId = 0;
  goto <bb 25>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IsAliveResultSet = 0;
  # DEBUG BEGIN_STMT
  AliveResult = 163;
  # DEBUG BEGIN_STMT
  DeadlineResult = 180;
  # DEBUG BEGIN_STMT
  LogicalResult = 180;
  # DEBUG BEGIN_STMT
  _2 = CoreInstance->WdgM_EB_SELocalStatus;
  _3 = (sizetype) IntSEId;
  _4 = _2 + _3;
  _5 = *_4;
  if (_5 != 4)
    goto <bb 4>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CPId = 0;
  goto <bb 20>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _6 = SECfg->CPCfg;
  _7 = (unsigned int) CPId;
  _8 = _7 * 64;
  CPCfg = _6 + _8;
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) CPId;
  IntRamIdx = IntRamIdxBase + _9;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = CoreInstance->WdgM_EB_CurrentModeId;
  _11 = (int) _10;
  CPAliveCfg = CPCfg->AliveCfgPtr[_11];
  # DEBUG BEGIN_STMT
  if (CPAliveCfg != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  TmpResult = WdgM_EB_DetermineAliveResult (IntSEId, CPId, IntRamIdx, CPAliveCfg);
  # DEBUG BEGIN_STMT
  if (AliveResult == 163)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (TmpResult != 163)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  if (TmpResult != 180)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  IsAliveResultSet = 1;
  # DEBUG BEGIN_STMT
  AliveResult = TmpResult;

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (DeadlineResult == 180)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _12 = CoreInstance->WdgM_EB_CurrentModeId;
  _13 = (int) _12;
  CPDeadlineCfg = CPCfg->DeadlineCfgPtr[_13];
  # DEBUG BEGIN_STMT
  if (CPDeadlineCfg != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  TmpResult = WdgM_EB_CheckDeadlineViolation (CPId, CPDeadlineCfg);
  # DEBUG BEGIN_STMT
  if (TmpResult == 180)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  TmpResult = WdgM_EB_DetermineDeadlineResult (IntSEId, CPId);

  <bb 14> :
  # DEBUG BEGIN_STMT
  DeadlineResult = TmpResult;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (LogicalResult == 180)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _14 = CoreInstance->WdgM_EB_CurrentModeId;
  _15 = (int) _14;
  CPIntLogicalCfg = CPCfg->IntLogicalCfgPtr[_15];
  # DEBUG BEGIN_STMT
  _16 = CoreInstance->WdgM_EB_CurrentModeId;
  _17 = (int) _16;
  CPExtLogicalCfg = CPCfg->ExtLogicalCfgPtr[_17];
  # DEBUG BEGIN_STMT
  if (CPIntLogicalCfg != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  if (CPExtLogicalCfg != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  LogicalResult = WdgM_EB_DetermineLogicalResult (IntSEId, CPId);

  <bb 19> :
  # DEBUG BEGIN_STMT
  CPId.58_18 = CPId;
  CPId = CPId.58_18 + 1;

  <bb 20> :
  # DEBUG BEGIN_STMT
  _19 = SECfg->NumOfCPs;
  if (CPId < _19)
    goto <bb 5>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  if (IsAliveResultSet == 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  AliveResult = 180;

  <bb 23> :
  # DEBUG BEGIN_STMT
  WdgM_EB_SetSELocalStatus (IntSEId, IntCoreSEId, AliveResult, DeadlineResult, LogicalResult, CoreInstance);

  <bb 24> :
  # DEBUG BEGIN_STMT
  _20 = SECfg->NumOfCPs;
  _21 = (long unsigned int) _20;
  IntRamIdxBase = IntRamIdxBase + _21;
  # DEBUG BEGIN_STMT
  IntCoreSEId.59_22 = IntCoreSEId;
  IntCoreSEId = IntCoreSEId.59_22 + 1;
  # DEBUG BEGIN_STMT
  IntSEId.60_23 = IntSEId;
  IntSEId = IntSEId.60_23 + 1;

  <bb 25> :
  # DEBUG BEGIN_STMT
  if (IntSEId <= 2)
    goto <bb 3>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  return;

}


WdgM_EB_DetermineLogicalResult (WdgM_EB_SEIdType IntSEId, WdgM_EB_CPIdType CPId)
{
  WdgM_EB_ResultType CPLogicalResult;
  struct WdgM_EB_CPDataType * const CPData;
  const struct WdgM_EB_SECfgType * const SECfg;
  WdgM_EB_ResultType D.7525;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  _2 = SECfg->CPData;
  _3 = (unsigned int) CPId;
  _4 = _3 * 8;
  CPData = _2 + _4;
  # DEBUG BEGIN_STMT
  CPLogicalResult = 203;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = WdgM_EB_GetCheckedCPLogicalData (CPData, &CPLogicalResult);
  if (_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7525 = CPLogicalResult;
  CPLogicalResult = {CLOBBER};
  return D.7525;

}


WdgM_EB_DetermineDeadlineResult (WdgM_EB_SEIdType IntSEId, WdgM_EB_CPIdType CPId)
{
  WdgM_EB_ResultType CPDeadlineResult;
  struct WdgM_EB_CPDataType * const CPData;
  const struct WdgM_EB_SECfgType * const SECfg;
  WdgM_EB_ResultType D.7520;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  _2 = SECfg->CPData;
  _3 = (unsigned int) CPId;
  _4 = _3 * 8;
  CPData = _2 + _4;
  # DEBUG BEGIN_STMT
  CPDeadlineResult = 203;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = WdgM_EB_GetCheckedCPDeadlineData (CPData, &CPDeadlineResult);
  if (_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7520 = CPDeadlineResult;
  CPDeadlineResult = {CLOBBER};
  return D.7520;

}


WdgM_EB_DetermineAliveResult (WdgM_EB_SEIdType IntSEId, WdgM_EB_CPIdType CPId, WdgM_EB_IntRamIdxType IntRamIdx, const struct WdgM_EB_CPAliveCfgType * CPAliveCfg)
{
  WdgM_EB_AliveCounterType AliveCounter;
  struct WdgM_EB_CPDataType * const CPData;
  uint32 CPRefCycleCnt;
  WdgM_EB_ResultType AliveResult;
  const struct WdgM_EB_SECfgType * const SECfg;
  struct WdgM_EB_CoreContextType * const CoreInstance;
  WdgM_EB_ResultType D.7496;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CoreInstance = &WdgM_EB_Context;
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = WdgM_EB_Context.WdgM_EB_SupervisionCycleCnt;
  _3 = CPAliveCfg->SupervisionReferenceCycle;
  _4 = (long unsigned int) _3;
  CPRefCycleCnt = _2 % _4;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CPRefCycleCnt == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _5 = SECfg->CPData;
  _6 = (unsigned int) CPId;
  _7 = _6 * 8;
  CPData = _5 + _7;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = WdgM_EB_GetCheckedCPAliveCounterData (CPData, IntRamIdx, &AliveCounter, &WdgM_EB_Context);
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  AliveResult = 203;
  goto <bb 9>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  AliveCounter.61_9 = AliveCounter;
  _10 = (int) AliveCounter.61_9;
  _11 = CPAliveCfg->ExpectedAliveIndication;
  _12 = (int) _11;
  _13 = CPAliveCfg->MinMargin;
  _14 = (int) _13;
  _15 = _12 - _14;
  if (_10 < _15)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  AliveCounter.62_16 = AliveCounter;
  _17 = (int) AliveCounter.62_16;
  _18 = CPAliveCfg->ExpectedAliveIndication;
  _19 = (int) _18;
  _20 = CPAliveCfg->MaxMargin;
  _21 = (int) _20;
  _22 = _19 + _21;
  if (_17 > _22)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  AliveResult = 203;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  AliveResult = 180;

  <bb 9> :
  # DEBUG BEGIN_STMT
  AliveCounter.63_23 = AliveCounter;
  WdgM_EB_ResetCPAliveCounterData (IntRamIdx, AliveCounter.63_23, &WdgM_EB_Context);
  AliveCounter = {CLOBBER};
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  AliveResult = 163;

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7496 = AliveResult;
  return D.7496;

}


WdgM_EB_CheckPredCP (const struct WdgM_EB_CPLogicalCfgType * CPLogicalCfg, WdgM_EB_SEIdType IntSEId, WdgM_EB_CPIdType CPId)
{
  WdgM_EB_ResultType CPLogicalResult;
  const struct WdgM_EB_CPDataType * const LastCPData;
  const struct WdgM_EB_SECfgType * const SECfg;
  boolean FoundCP;
  WdgM_EB_CPIdType CPIdx;
  Std_ReturnType RetVal;
  Std_ReturnType D.7273;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  FoundCP = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CPIdx = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = CPLogicalCfg->PredCPs;
  _2 = (unsigned int) CPIdx;
  _3 = _2 * 2;
  _4 = _1 + _3;
  _5 = _4->SEId;
  if (IntSEId == _5)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _6 = CPLogicalCfg->PredCPs;
  _7 = (unsigned int) CPIdx;
  _8 = _7 * 2;
  _9 = _6 + _8;
  _10 = _9->CPId;
  if (CPId == _10)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  FoundCP = 1;
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  CPIdx.21_11 = CPIdx;
  CPIdx = CPIdx.21_11 + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  _12 = CPLogicalCfg->NumOfPredCPs;
  if (CPIdx < _12)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (FoundCP != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _13 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_13];
  # DEBUG BEGIN_STMT
  _14 = SECfg->CPData;
  _15 = (unsigned int) CPId;
  _16 = _15 * 8;
  LastCPData = _14 + _16;
  # DEBUG BEGIN_STMT
  CPLogicalResult = 203;
  # DEBUG BEGIN_STMT
  RetVal = WdgM_EB_GetCheckedCPLogicalData (LastCPData, &CPLogicalResult);
  # DEBUG BEGIN_STMT
  if (RetVal != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 11> :
  # DEBUG BEGIN_STMT
  CPLogicalResult.22_17 = CPLogicalResult;
  if (CPLogicalResult.22_17 != 180)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 13> :
  CPLogicalResult = {CLOBBER};
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7273 = RetVal;
  return D.7273;

}


WdgM_EB_CheckpointReachedAlive (WdgM_EB_SEIdType IntSEId, WdgM_EB_CPIdType CPId)
{
  struct WdgM_EB_CPDataType * const CPData;
  const struct WdgM_EB_SECfgType * const SECfg;
  Std_ReturnType RetVal;
  Std_ReturnType D.7144;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  _2 = SECfg->CPData;
  _3 = (unsigned int) CPId;
  _4 = _3 * 8;
  CPData = _2 + _4;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = WdgM_EB_CheckCPAliveCounterData (CPData);
  if (_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  WdgM_EB_IncrementCPAliveCounterData (CPData);
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7144 = RetVal;
  return D.7144;

}


WdgM_EB_CheckDeadlineViolation (WdgM_EB_CPIdType CPId, const struct WdgM_EB_CPDeadlineCfgType * CPDeadlineCfg)
{
  struct WdgM_EB_DMDataType * const StartDMData;
  WdgM_EB_ResultType RetVal;
  WdgM_EB_ResultType D.7504;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CPDeadlineCfg->DMId;
  _2 = (int) _1;
  StartDMData = &WdgM_EB_DMData[_2];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = CPDeadlineCfg->StartCPId;
  if (CPId == _3)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = WdgM_EB_DecMaxCyclesDMData (StartDMData);
  if (_4 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 180;
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 203;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 180;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7504 = RetVal;
  return D.7504;

}


WdgM_EB_StopCheckpointDeadline (struct WdgM_EB_DMDataType * DMData, struct WdgM_EB_CPDataType * CPData, const struct WdgM_EB_CPDeadlineCfgType * CPDeadlineCfg)
{
  WdgM_EB_ResultType CPDeadlineResult;
  WdgM_EB_TimestampType ElapsedTime;
  const WdgM_EB_TimestampType WdgMDeadlineMin;
  const WdgM_EB_TimestampType WdgMDeadlineMax;
  boolean IsActive;
  uint16 MaxCycles;
  WdgM_EB_TimestampType TimeStamp;
  Std_ReturnType StopCPRetVal;
  Std_ReturnType D.7192;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = WdgM_EB_GetCheckedDMData (DMData, &TimeStamp, &MaxCycles, &IsActive);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  StopCPRetVal = 1;
  goto <bb 16>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  IsActive.9_2 = IsActive;
  if (IsActive.9_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  WdgMDeadlineMax = CPDeadlineCfg->WdgMDeadlineMax;
  # DEBUG BEGIN_STMT
  WdgMDeadlineMin = CPDeadlineCfg->WdgMDeadlineMin;
  # DEBUG BEGIN_STMT
  ElapsedTime = 0;
  # DEBUG BEGIN_STMT
  Supervisor_WdgM_GetElapsedTimeCallout (&TimeStamp, &ElapsedTime);
  # DEBUG BEGIN_STMT
  ElapsedTime.10_3 = ElapsedTime;
  if (WdgMDeadlineMin <= ElapsedTime.10_3)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  ElapsedTime.11_4 = ElapsedTime;
  if (WdgMDeadlineMax >= ElapsedTime.11_4)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  StopCPRetVal = 0;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  StopCPRetVal = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  MaxCycles.12_5 = MaxCycles;
  WdgM_EB_StoreDMData (DMData, &TimeStamp, MaxCycles.12_5, 0);
  ElapsedTime = {CLOBBER};
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  StopCPRetVal = 0;

  <bb 11> :
  # DEBUG BEGIN_STMT
  CPDeadlineResult = 203;
  # DEBUG BEGIN_STMT
  _6 = WdgM_EB_GetCheckedCPDeadlineData (CPData, &CPDeadlineResult);
  if (_6 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 13> :
  # DEBUG BEGIN_STMT
  CPDeadlineResult.13_7 = CPDeadlineResult;
  if (CPDeadlineResult.13_7 != 180)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  StopCPRetVal = 1;

  <bb 15> :
  CPDeadlineResult = {CLOBBER};

  <bb 16> :
  # DEBUG BEGIN_STMT
  if (StopCPRetVal == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPDeadlineData (CPData, 180);
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPDeadlineData (CPData, 203);

  <bb 19> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7192 = StopCPRetVal;
  TimeStamp = {CLOBBER};
  MaxCycles = {CLOBBER};
  IsActive = {CLOBBER};
  return D.7192;

}


WdgM_EB_StartCheckpointDeadline (struct WdgM_EB_DMDataType * StartDMData, const struct WdgM_EB_DMDataType * StopDMData, struct WdgM_EB_CPDataType * CPData, const struct WdgM_EB_CPDeadlineCfgType * CPDeadlineCfg, boolean ErrorRecoveryEnabled)
{
  WdgM_EB_ResultType CPDeadlineResult;
  WdgM_EB_TimestampType ElapsedTime;
  boolean IsActive;
  uint16 MaxCycles;
  WdgM_EB_TimestampType TimeStamp;
  Std_ReturnType StartCPRetVal;
  Std_ReturnType D.7226;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (StartDMData != StopDMData)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = StopDMData->StartTimestampData;
  StartDMData->StartTimestampData = _1;
  # DEBUG BEGIN_STMT
  _2 = StopDMData->StartTimestampDataInv;
  StartDMData->StartTimestampDataInv = _2;

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = WdgM_EB_GetCheckedDMData (StartDMData, &TimeStamp, &MaxCycles, &IsActive);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  StartCPRetVal = 1;
  goto <bb 17>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  IsActive.14_4 = IsActive;
  if (IsActive.14_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  StartCPRetVal = 1;
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (StartDMData == StopDMData)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ElapsedTime = 0;
  # DEBUG BEGIN_STMT
  Supervisor_WdgM_GetElapsedTimeCallout (&TimeStamp, &ElapsedTime);
  ElapsedTime = {CLOBBER};

  <bb 10> :
  # DEBUG BEGIN_STMT
  _5 = CPDeadlineCfg->DMMaxMainfunctionCycles;
  WdgM_EB_StoreDMData (StartDMData, &TimeStamp, _5, 1);
  # DEBUG BEGIN_STMT
  StartCPRetVal = 0;

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (ErrorRecoveryEnabled == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  CPDeadlineResult = 203;
  # DEBUG BEGIN_STMT
  _6 = WdgM_EB_GetCheckedCPDeadlineData (CPData, &CPDeadlineResult);
  if (_6 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 14> :
  # DEBUG BEGIN_STMT
  CPDeadlineResult.15_7 = CPDeadlineResult;
  if (CPDeadlineResult.15_7 != 180)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  StartCPRetVal = 1;

  <bb 16> :
  CPDeadlineResult = {CLOBBER};

  <bb 17> :
  # DEBUG BEGIN_STMT
  if (StartCPRetVal == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPDeadlineData (CPData, 180);
  goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPDeadlineData (CPData, 203);

  <bb 20> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7226 = StartCPRetVal;
  TimeStamp = {CLOBBER};
  MaxCycles = {CLOBBER};
  IsActive = {CLOBBER};
  return D.7226;

}


WdgM_EB_CheckpointReachedDeadline (WdgM_EB_SEIdType IntSEId, WdgM_EB_CPIdType CPId, const struct WdgM_EB_CPDeadlineCfgType * CPDeadlineCfg)
{
  Std_ReturnType StopCPRetVal;
  Std_ReturnType StartCPRetVal;
  struct WdgM_EB_CPDataType * const StopCPData;
  struct WdgM_EB_DMDataType * const StopDMData;
  struct WdgM_EB_DMDataType * const StartDMData;
  const WdgM_EB_DMIdType StopDMId;
  const WdgM_EB_DMIdType StartDMId;
  const WdgM_EB_CPIdType StopStartCPId;
  const WdgM_EB_CPIdType StopCPId;
  const struct WdgM_EB_CPDeadlineCfgType * const StopCPDeadlineCfg;
  const boolean IsStartStopCP;
  struct WdgM_EB_CPDataType * const StartCPData;
  const struct WdgM_EB_SECfgType * const SECfg;
  const WdgM_EB_CPIdType StartCPId;
  Std_ReturnType RetVal;
  Std_ReturnType D.7173;
  const struct WdgM_EB_CPDeadlineCfgType * const iftmp.8;
  const boolean iftmp.7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  StartCPId = CPDeadlineCfg->StartCPId;
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  _2 = SECfg->CPData;
  _3 = (unsigned int) StartCPId;
  _4 = _3 * 8;
  StartCPData = _2 + _4;
  # DEBUG BEGIN_STMT
  if (StartCPId == CPId)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _5 = CPDeadlineCfg->PrevCPDeadlineCfg;
  if (_5 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.7 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.7 = 0;

  <bb 6> :
  IsStartStopCP = iftmp.7;
  # DEBUG BEGIN_STMT
  if (IsStartStopCP != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.8 = CPDeadlineCfg->PrevCPDeadlineCfg;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.8 = CPDeadlineCfg;

  <bb 9> :
  StopCPDeadlineCfg = iftmp.8;
  # DEBUG BEGIN_STMT
  StopCPId = StopCPDeadlineCfg->StopCPId;
  # DEBUG BEGIN_STMT
  StopStartCPId = StopCPDeadlineCfg->StartCPId;
  # DEBUG BEGIN_STMT
  StartDMId = CPDeadlineCfg->DMId;
  # DEBUG BEGIN_STMT
  StopDMId = StopCPDeadlineCfg->DMId;
  # DEBUG BEGIN_STMT
  _6 = (int) StartDMId;
  StartDMData = &WdgM_EB_DMData[_6];
  # DEBUG BEGIN_STMT
  _7 = (int) StopDMId;
  StopDMData = &WdgM_EB_DMData[_7];
  # DEBUG BEGIN_STMT
  _8 = SECfg->CPData;
  _9 = (unsigned int) StopStartCPId;
  _10 = _9 * 8;
  StopCPData = _8 + _10;
  # DEBUG BEGIN_STMT
  StartCPRetVal = 1;
  # DEBUG BEGIN_STMT
  StopCPRetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (StopCPId == CPId)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  StopCPRetVal = WdgM_EB_StopCheckpointDeadline (StopDMData, StopCPData, StopCPDeadlineCfg);

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (StartCPId == CPId)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _11 = SECfg->ErrorRecoveryEnabled;
  StartCPRetVal = WdgM_EB_StartCheckpointDeadline (StartDMData, StopDMData, StartCPData, CPDeadlineCfg, _11);

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (IsStartStopCP != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  if (StopCPRetVal == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  RetVal = StartCPRetVal;
  goto <bb 20>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  RetVal = StopCPRetVal;
  goto <bb 20>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  if (StartCPId == CPId)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  RetVal = StartCPRetVal;
  goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  RetVal = StopCPRetVal;

  <bb 20> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7173 = RetVal;
  return D.7173;

}


WdgM_EB_GetLastIndexInGraphDataSeq (WdgM_EB_SEIdType LastIntSEId, WdgM_EB_CPIdType LastCPId, struct WdgM_EB_CoreContextType * CoreInstance)
{
  uint8 IndexInGraphDataSeq;
  const struct WdgM_EB_CPLogicalCfgType * const CPExtLogicalCfg;
  const struct WdgM_EB_CPCfgType * const CPCfg;
  const struct WdgM_EB_SECfgType * const SECfg;
  Std_ReturnType D.7322;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) LastIntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  _2 = SECfg->CPCfg;
  _3 = (unsigned int) LastCPId;
  _4 = _3 * 64;
  CPCfg = _2 + _4;
  # DEBUG BEGIN_STMT
  _5 = CoreInstance->WdgM_EB_CurrentModeId;
  _6 = (int) _5;
  CPExtLogicalCfg = CPCfg->ExtLogicalCfgPtr[_6];
  # DEBUG BEGIN_STMT
  IndexInGraphDataSeq = CPExtLogicalCfg->SESequenceIdx;
  # DEBUG BEGIN_STMT
  D.7322 = IndexInGraphDataSeq;
  return D.7322;

}


WdgM_EB_CheckpointReachedExtLogical (WdgM_EB_SEIdType IntSEId, WdgM_EB_CPIdType CPId, const struct WdgM_EB_CPLogicalCfgType * CPExtLogicalCfg, struct WdgM_EB_CoreContextType * CoreInstance)
{
  uint8 Other_SeqNumber;
  WdgM_EB_ResultType CPLogicalResult;
  uint8 IndexInGraphDataSeq;
  uint8 Local_ExtGraphDataSeq;
  uint8 idx;
  boolean ActiveFlag;
  WdgM_EB_CPIdType LastCPId;
  WdgM_EB_SEIdType LastIntSEId;
  uint8 Local_NumOfSEperGraphId;
  WdgM_EB_ExtGraphDataSeqArrayType * const IntExtGraphDataSeqPtr;
  const struct WdgM_EB_ExtGraphDataSeqType * const ExtGraphDataSeqPtr;
  struct WdgM_EB_GraphDataType * const GraphData;
  struct WdgM_EB_CPDataType * const CPData;
  const struct WdgM_EB_SECfgType * const SECfg;
  Std_ReturnType RetVal;
  Std_ReturnType D.7317;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  _2 = SECfg->CPData;
  _3 = (unsigned int) CPId;
  _4 = _3 * 8;
  CPData = _2 + _4;
  # DEBUG BEGIN_STMT
  _5 = CPExtLogicalCfg->GraphId;
  _6 = (int) _5;
  GraphData = &WdgM_EB_ExternalGraphData[_6];
  # DEBUG BEGIN_STMT
  _7 = CPExtLogicalCfg->GraphId;
  _8 = (int) _7;
  ExtGraphDataSeqPtr = &WdgM_EB_ExtGraphDataSeqPtr[_8];
  # DEBUG BEGIN_STMT
  IntExtGraphDataSeqPtr = ExtGraphDataSeqPtr->GraphDataPtr;
  # DEBUG BEGIN_STMT
  Local_NumOfSEperGraphId = ExtGraphDataSeqPtr->NumOfSEperGraphId;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  idx = 0;
  # DEBUG BEGIN_STMT
  Local_ExtGraphDataSeq = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = WdgM_EB_GetCheckedGraphData (GraphData, &LastIntSEId, &LastCPId, &ActiveFlag);
  if (_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 21>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ActiveFlag.23_10 = ActiveFlag;
  if (ActiveFlag.23_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _11 = CPExtLogicalCfg->NumOfPredCPs;
  if (_11 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 15>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  LastIntSEId.24_12 = LastIntSEId;
  LastCPId.25_13 = LastCPId;
  IndexInGraphDataSeq = WdgM_EB_GetLastIndexInGraphDataSeq (LastIntSEId.24_12, LastCPId.25_13, CoreInstance);
  # DEBUG BEGIN_STMT
  _14 = CPExtLogicalCfg->IsFinal;
  if (_14 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ActiveFlag = 0;

  <bb 9> :
  # DEBUG BEGIN_STMT
  LastIntSEId.26_15 = LastIntSEId;
  LastCPId.27_16 = LastCPId;
  RetVal = WdgM_EB_CheckPredCP (CPExtLogicalCfg, LastIntSEId.26_15, LastCPId.27_16);
  # DEBUG BEGIN_STMT
  _17 = WdgM_EB_GetCheckedSeqNumber (IntExtGraphDataSeqPtr, IndexInGraphDataSeq, &Local_ExtGraphDataSeq);
  if (_17 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 15>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Local_ExtGraphDataSeq.28_18 = Local_ExtGraphDataSeq;
  Local_ExtGraphDataSeq.29_19 = Local_ExtGraphDataSeq.28_18;
  _20 = Local_ExtGraphDataSeq.29_19 + 1;
  Local_ExtGraphDataSeq = _20;
  # DEBUG BEGIN_STMT
  _21 = CPExtLogicalCfg->SESequenceIdx;
  Local_ExtGraphDataSeq.30_22 = Local_ExtGraphDataSeq;
  WdgM_EB_StoreSeqNumber (IntExtGraphDataSeqPtr, _21, Local_ExtGraphDataSeq.30_22);
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _23 = CPExtLogicalCfg->NumOfPredCPs;
  if (_23 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  ActiveFlag = 1;
  # DEBUG BEGIN_STMT
  WdgM_EB_ResetExtGraphDataSeq (IntExtGraphDataSeqPtr, Local_NumOfSEperGraphId);
  # DEBUG BEGIN_STMT
  Local_ExtGraphDataSeq = 1;
  # DEBUG BEGIN_STMT
  _24 = CPExtLogicalCfg->SESequenceIdx;
  Local_ExtGraphDataSeq.31_25 = Local_ExtGraphDataSeq;
  WdgM_EB_StoreSeqNumber (IntExtGraphDataSeqPtr, _24, Local_ExtGraphDataSeq.31_25);
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  ActiveFlag.32_26 = ActiveFlag;
  WdgM_EB_StoreGraphData (GraphData, IntSEId, CPId, ActiveFlag.32_26);
  # DEBUG BEGIN_STMT
  _27 = SECfg->ErrorRecoveryEnabled;
  if (_27 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  CPLogicalResult = 203;
  # DEBUG BEGIN_STMT
  _28 = WdgM_EB_GetCheckedCPLogicalData (CPData, &CPLogicalResult);
  if (_28 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 18> :
  # DEBUG BEGIN_STMT
  CPLogicalResult.33_29 = CPLogicalResult;
  if (CPLogicalResult.33_29 != 180)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 20> :
  CPLogicalResult = {CLOBBER};

  <bb 21> :
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 22>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  idx = 0;
  goto <bb 32>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  _30 = CPExtLogicalCfg->SESequenceIdx;
  if (idx != _30)
    goto <bb 24>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = WdgM_EB_GetCheckedSeqNumber (IntExtGraphDataSeqPtr, idx, &Other_SeqNumber);
  if (_31 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 28>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  Other_SeqNumber.34_32 = Other_SeqNumber;
  Local_ExtGraphDataSeq.35_33 = Local_ExtGraphDataSeq;
  if (Other_SeqNumber.34_32 >= Local_ExtGraphDataSeq.35_33)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 28> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (RetVal == 1)
    goto <bb 30>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  Other_SeqNumber = {CLOBBER};
  goto <bb 31>; [INV]

  <bb 30> :
  Other_SeqNumber = {CLOBBER};
  goto <bb 33>; [INV]

  <bb 31> :
  # DEBUG BEGIN_STMT
  idx.36_34 = idx;
  idx = idx.36_34 + 1;

  <bb 32> :
  # DEBUG BEGIN_STMT
  if (idx < Local_NumOfSEperGraphId)
    goto <bb 23>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPLogicalData (CPData, 180);
  goto <bb 36>; [INV]

  <bb 35> :
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPLogicalData (CPData, 203);

  <bb 36> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7317 = RetVal;
  LastIntSEId = {CLOBBER};
  LastCPId = {CLOBBER};
  ActiveFlag = {CLOBBER};
  Local_ExtGraphDataSeq = {CLOBBER};
  return D.7317;

}


WdgM_EB_CheckpointReachedIntLogical (WdgM_EB_SEIdType IntSEId, WdgM_EB_CPIdType CPId, const struct WdgM_EB_CPLogicalCfgType * CPIntLogicalCfg)
{
  WdgM_EB_ResultType CPLogicalResult;
  boolean ActiveFlag;
  WdgM_EB_CPIdType LastCPId;
  WdgM_EB_SEIdType LastIntSEId;
  struct WdgM_EB_GraphDataType * const GraphData;
  struct WdgM_EB_CPDataType * const CPData;
  const struct WdgM_EB_SECfgType * const SECfg;
  Std_ReturnType RetVal;
  Std_ReturnType D.7252;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_1];
  # DEBUG BEGIN_STMT
  _2 = SECfg->CPData;
  _3 = (unsigned int) CPId;
  _4 = _3 * 8;
  CPData = _2 + _4;
  # DEBUG BEGIN_STMT
  _5 = CPIntLogicalCfg->GraphId;
  _6 = (int) _5;
  GraphData = &WdgM_EB_InternalGraphData[_6];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = WdgM_EB_GetCheckedGraphData (GraphData, &LastIntSEId, &LastCPId, &ActiveFlag);
  if (_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 19>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ActiveFlag.16_8 = ActiveFlag;
  if (ActiveFlag.16_8 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _9 = CPIntLogicalCfg->NumOfPredCPs;
  if (_9 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 13>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _10 = CPIntLogicalCfg->IsFinal;
  if (_10 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ActiveFlag = 0;

  <bb 9> :
  # DEBUG BEGIN_STMT
  LastIntSEId.17_11 = LastIntSEId;
  LastCPId.18_12 = LastCPId;
  RetVal = WdgM_EB_CheckPredCP (CPIntLogicalCfg, LastIntSEId.17_11, LastCPId.18_12);
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _13 = CPIntLogicalCfg->NumOfPredCPs;
  if (_13 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ActiveFlag = 1;
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 13> :
  # DEBUG BEGIN_STMT
  ActiveFlag.19_14 = ActiveFlag;
  WdgM_EB_StoreGraphData (GraphData, IntSEId, CPId, ActiveFlag.19_14);
  # DEBUG BEGIN_STMT
  _15 = SECfg->ErrorRecoveryEnabled;
  if (_15 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  CPLogicalResult = 203;
  # DEBUG BEGIN_STMT
  _16 = WdgM_EB_GetCheckedCPLogicalData (CPData, &CPLogicalResult);
  if (_16 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (6, 1);

  <bb 16> :
  # DEBUG BEGIN_STMT
  CPLogicalResult.20_17 = CPLogicalResult;
  if (CPLogicalResult.20_17 != 180)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 18> :
  CPLogicalResult = {CLOBBER};

  <bb 19> :
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPLogicalData (CPData, 180);
  goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  WdgM_EB_StoreCPLogicalData (CPData, 203);

  <bb 22> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7252 = RetVal;
  LastIntSEId = {CLOBBER};
  LastCPId = {CLOBBER};
  ActiveFlag = {CLOBBER};
  return D.7252;

}


WdgM_EB_PerformWdgIfModeSwitch (WdgM_ModeType Mode)
{
  const struct WdgM_EB_TriggerCfgType * const TriggerCfg;
  const struct WdgM_EB_ModeCfgType * const ModeCfg;
  WdgM_EB_TriggerIdType TriggerId;
  Std_ReturnType RetVal;
  Std_ReturnType D.7459;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) Mode;
  ModeCfg = &WdgM_EB_ModeCfg[_1];
  # DEBUG BEGIN_STMT
  TriggerCfg = ModeCfg->TriggerCfg;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = ModeCfg->NumTriggers;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 4> :
  # DEBUG BEGIN_STMT
  TriggerId = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _3 = (unsigned int) TriggerId;
  _4 = _3 * 6;
  _5 = TriggerCfg + _4;
  _6 = _5->WatchdogMode;
  RetVal = Wdg_SetMode (_6);
  # DEBUG BEGIN_STMT
  if (RetVal != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Dem_ReportErrorStatus (5, 1);
  # DEBUG BEGIN_STMT
  WdgM_PerformReset ();
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  TriggerId.56_7 = TriggerId;
  TriggerId = TriggerId.56_7 + 1;

  <bb 8> :
  # DEBUG BEGIN_STMT
  _8 = ModeCfg->NumTriggers;
  if (TriggerId < _8)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7459 = RetVal;
  return D.7459;

}


WdgM_EB_SetMode (WdgM_ModeType Mode, boolean IsNormalOperation, struct WdgM_EB_CoreContextType * CoreInstance)
{
  const WdgM_LocalStatusType OldLocalStatus;
  const boolean SEIsActive;
  uint16 * const SEWData_FailedAliveSupervisionRefCycleCnt;
  WdgM_LocalStatusType * const SEWData_SELocalStatus;
  const struct WdgM_EB_SECfgType * const SECfg;
  WdgM_EB_IntRamIdxType IntRamIdxBase;
  WdgM_EB_SEIdType IntCoreSEId;
  WdgM_EB_SEIdType IntSEId;
  Std_ReturnType RetVal;
  Std_ReturnType D.7430;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  WdgM_EB_GlobalStatus.49_1 = WdgM_EB_GlobalStatus;
  if (WdgM_EB_GlobalStatus.49_1 > 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (IsNormalOperation != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  IntSEId = 0;
  # DEBUG BEGIN_STMT
  IntCoreSEId = 0;
  # DEBUG BEGIN_STMT
  IntRamIdxBase = 0;
  # DEBUG BEGIN_STMT
  IntSEId = 0;
  goto <bb 19>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = (int) IntSEId;
  SECfg = &WdgM_EB_SECfg[_2];
  # DEBUG BEGIN_STMT
  _3 = (int) IntSEId;
  SEWData_SELocalStatus = &WdgM_EB_SELocalStatus[_3];
  # DEBUG BEGIN_STMT
  _4 = CoreInstance->WdgM_EB_FailedAliveSupervisionRefCycleCnt;
  _5 = (unsigned int) IntCoreSEId;
  _6 = _5 * 2;
  SEWData_FailedAliveSupervisionRefCycleCnt = _4 + _6;
  # DEBUG BEGIN_STMT
  SEIsActive = WdgM_EB_SEIsActiveResetData (Mode, SECfg, IsNormalOperation, CoreInstance);
  # DEBUG BEGIN_STMT
  if (SEIsActive != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _7 = *SEWData_SELocalStatus;
  if (_7 == 4)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (IsNormalOperation == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  *SEWData_SELocalStatus = 0;
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _8 = *SEWData_SELocalStatus;
  if (_8 <= 1)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  if (IsNormalOperation == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  OldLocalStatus = *SEWData_SELocalStatus;
  # DEBUG BEGIN_STMT
  *SEWData_SELocalStatus = 4;

  <bb 15> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  WdgM_EB_SEResetCPAliveData (IntSEId, IntRamIdxBase, IsNormalOperation, CoreInstance);
  # DEBUG BEGIN_STMT
  if (SEIsActive == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  if (IsNormalOperation == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  *SEWData_FailedAliveSupervisionRefCycleCnt = 0;
  # DEBUG BEGIN_STMT
  WdgM_EB_SEResetData (IntSEId);

  <bb 18> :
  # DEBUG BEGIN_STMT
  _9 = SECfg->NumOfCPs;
  _10 = (long unsigned int) _9;
  IntRamIdxBase = IntRamIdxBase + _10;
  # DEBUG BEGIN_STMT
  IntCoreSEId.50_11 = IntCoreSEId;
  IntCoreSEId = IntCoreSEId.50_11 + 1;
  # DEBUG BEGIN_STMT
  IntSEId.51_12 = IntSEId;
  IntSEId = IntSEId.51_12 + 1;

  <bb 19> :
  # DEBUG BEGIN_STMT
  if (IntSEId <= 2)
    goto <bb 8>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  RetVal = WdgM_EB_PerformWdgIfModeSwitch (Mode);
  # DEBUG BEGIN_STMT
  CoreInstance->WdgM_EB_CurrentModeId = Mode;

  <bb 21> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7430 = RetVal;
  return D.7430;

}


WdgM_EB_DeInit (struct WdgM_EB_CoreContextType * CoreInstance)
{
  const WdgM_GlobalStatusType OldGlobalStatus;
  Std_ReturnType RetVal;
  Std_ReturnType D.7410;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  WdgM_EB_DeInitModeId.48_1 = WdgM_EB_DeInitModeId;
  RetVal = WdgM_EB_SetMode (WdgM_EB_DeInitModeId.48_1, 1, CoreInstance);
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  WdgM_EB_UpdateTriggerConditions (CoreInstance);

  <bb 4> :
  # DEBUG BEGIN_STMT
  OldGlobalStatus = WdgM_EB_GlobalStatus;
  # DEBUG BEGIN_STMT
  WdgM_EB_GlobalStatus = 4;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = CoreInstance->WdgM_EB_InitStatus;
  *_2 = 170;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7410 = RetVal;
  return D.7410;

}


WdgM_EB_Init (struct WdgM_EB_CoreContextType * CoreInstance)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.7585;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  WdgM_EB_InitialModeId.75_1 = WdgM_EB_InitialModeId;
  CoreInstance->WdgM_EB_CurrentModeId = WdgM_EB_InitialModeId.75_1;
  # DEBUG BEGIN_STMT
  _2 = CoreInstance->WdgM_EB_InitStatus;
  *_2 = 85;
  # DEBUG BEGIN_STMT
  WdgM_EB_InitialModeId.76_3 = WdgM_EB_InitialModeId;
  RetVal = WdgM_EB_SetMode (WdgM_EB_InitialModeId.76_3, 0, CoreInstance);
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  WdgM_EB_ExpiredSEID = 0;
  # DEBUG BEGIN_STMT
  WdgM_EB_IsExpiredSEIdSet = 0;
  # DEBUG BEGIN_STMT
  WdgM_EB_GlobalStatus = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  WdgM_EB_UpdateTriggerConditions (CoreInstance);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7585 = RetVal;
  return D.7585;

}


WdgM_MainFunction ()
{
  const WdgM_EB_InitStatusType DoNotCheckInitRequest;
  struct WdgM_EB_CoreContextType * const CoreInstance;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CoreInstance = &WdgM_EB_Context;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = WdgM_EB_Context.WdgM_EB_MainFunctionActive;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 8, 131);
  goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  WdgM_EB_Context.WdgM_EB_MainFunctionActive = 1;
  # DEBUG BEGIN_STMT
  _2 = WdgM_EB_Context.WdgM_EB_InitStatus;
  DoNotCheckInitRequest = *_2;
  # DEBUG BEGIN_STMT
  _3 = WdgM_EB_Context.WdgM_EB_InitStatus;
  _4 = *_3;
  if (_4 != 170)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  WdgM_EB_CheckDeinitRequest (&WdgM_EB_Context);

  <bb 6> :
  # DEBUG BEGIN_STMT
  WdgM_EB_CheckMainFunctionTimingViolation (&WdgM_EB_Context);
  # DEBUG BEGIN_STMT
  _5 = WdgM_EB_Context.WdgM_EB_InitStatus;
  _6 = *_5;
  if (_6 != 170)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  WdgM_EB_UpdateSupervisionCycleCounter (&WdgM_EB_Context);
  # DEBUG BEGIN_STMT
  WdgM_EB_SetLocalStatus (&WdgM_EB_Context);
  # DEBUG BEGIN_STMT
  WdgM_EB_SetGlobalStatus (&WdgM_EB_Context);
  # DEBUG BEGIN_STMT
  WdgM_EB_UpdateTriggerConditions (&WdgM_EB_Context);

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (DoNotCheckInitRequest == 170)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _7 = WdgM_EB_CheckInitRequest (&WdgM_EB_Context);
  if (_7 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  WdgM_EB_Context.WdgM_EB_SupervisionCycleCnt = 0;

  <bb 11> :
  # DEBUG BEGIN_STMT
  _8 = WdgM_EB_Context.WdgM_EB_InitStatus;
  _9 = *_8;
  if (_9 != 170)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _10 = WdgM_EB_CheckModeSwitchRequest (&WdgM_EB_Context);
  if (_10 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  WdgM_EB_Context.WdgM_EB_SupervisionCycleCnt = 0;

  <bb 14> :
  # DEBUG BEGIN_STMT
  WdgM_EB_Context.WdgM_EB_MainFunctionActive = 0;

  <bb 15> :
  # DEBUG BEGIN_STMT
  return;

}


WdgM_GetFirstExpiredSEID (WdgM_SupervisedEntityIdType * SEID)
{
  WdgM_EB_SEIdType LocalSEId;
  Std_ReturnType RetVal;
  Std_ReturnType D.7376;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SEID == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 16, 20);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  LocalSEId = 0;
  # DEBUG BEGIN_STMT
  WdgM_EB_ExpiredSEID.45_1 = WdgM_EB_ExpiredSEID;
  RetVal = WdgM_EB_GetCheckedExpiredSEID (WdgM_EB_ExpiredSEID.45_1, &LocalSEId);
  # DEBUG BEGIN_STMT
  LocalSEId.46_2 = LocalSEId;
  _3 = (short unsigned int) LocalSEId.46_2;
  *SEID = _3;
  LocalSEId = {CLOBBER};

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7376 = RetVal;
  return D.7376;

}


WdgM_PerformReset ()
{
  struct WdgM_EB_CoreContextType * const CoreInstance;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CoreInstance = &WdgM_EB_Context;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = WdgM_EB_Context.WdgM_EB_InitStatus;
  _2 = *_1;
  if (_2 != 85)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 15, 16);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  WdgM_EB_GlobalStatus = 3;
  # DEBUG BEGIN_STMT
  WdgM_EB_UpdateTriggerConditions (&WdgM_EB_Context);

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


WdgM_GetGlobalStatus (WdgM_GlobalStatusType * Status)
{
  struct WdgM_EB_CoreContextType * const CoreInstance;
  Std_ReturnType RetVal;
  Std_ReturnType D.7363;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CoreInstance = &WdgM_EB_Context;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = WdgM_EB_Context.WdgM_EB_InitStatus;
  _2 = *_1;
  if (_2 != 85)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 13, 16);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Status == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 13, 20);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  WdgM_EB_GlobalStatus.42_3 = WdgM_EB_GlobalStatus;
  *Status = WdgM_EB_GlobalStatus.42_3;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7363 = RetVal;
  return D.7363;

}


WdgM_GetLocalStatus (WdgM_SupervisedEntityIdType SEID, WdgM_LocalStatusType * Status)
{
  struct WdgM_EB_CoreContextType * const CoreInstance;
  WdgM_EB_SEIdType IntSEId;
  Std_ReturnType RetVal;
  Std_ReturnType D.7354;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CoreInstance = &WdgM_EB_Context;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = WdgM_EB_Context.WdgM_EB_InitStatus;
  _2 = *_1;
  if (_2 != 85)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 12, 16);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Status == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 12, 20);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _3 = WdgM_EB_SEId2IntSEId (SEID, &IntSEId);
  if (_3 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 12, 19);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  IntSEId.41_4 = IntSEId;
  _5 = (int) IntSEId.41_4;
  _6 = WdgM_EB_SELocalStatus[_5];
  *Status = _6;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7354 = RetVal;
  IntSEId = {CLOBBER};
  return D.7354;

}


WdgM_UpdateAliveCounter (WdgM_SupervisedEntityIdType SEID)
{
  const struct WdgM_EB_CPCfgType * const CPCfg;
  const struct WdgM_EB_SECfgType * const SECfg;
  WdgM_EB_CPIdType FoundCPId;
  uint16 NumOfAliveSupervisions;
  WdgM_EB_CPIdType CPId;
  WdgM_EB_SEIdType IntSEId;
  struct WdgM_EB_CoreContextType * const CoreInstance;
  Std_ReturnType RetVal;
  Std_ReturnType D.7343;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CoreInstance = &WdgM_EB_Context;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = WdgM_EB_Context.WdgM_EB_InitStatus;
  _2 = *_1;
  if (_2 != 85)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 4, 16);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 17>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 4, 23);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = WdgM_EB_SEId2IntSEId (SEID, &IntSEId);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 4, 19);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 16>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NumOfAliveSupervisions = 0;
  # DEBUG BEGIN_STMT
  FoundCPId = 0;
  # DEBUG BEGIN_STMT
  IntSEId.38_4 = IntSEId;
  _5 = (int) IntSEId.38_4;
  SECfg = &WdgM_EB_SECfg[_5];
  # DEBUG BEGIN_STMT
  CPId = 0;
  goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _6 = SECfg->CPCfg;
  _7 = (unsigned int) CPId;
  _8 = _7 * 64;
  CPCfg = _6 + _8;
  # DEBUG BEGIN_STMT
  _9 = WdgM_EB_Context.WdgM_EB_CurrentModeId;
  _10 = (int) _9;
  _11 = CPCfg->AliveCfgPtr[_10];
  if (_11 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NumOfAliveSupervisions.39_12 = NumOfAliveSupervisions;
  NumOfAliveSupervisions = NumOfAliveSupervisions.39_12 + 1;
  # DEBUG BEGIN_STMT
  FoundCPId = CPId;

  <bb 9> :
  # DEBUG BEGIN_STMT
  CPId.40_13 = CPId;
  CPId = CPId.40_13 + 1;

  <bb 10> :
  # DEBUG BEGIN_STMT
  _14 = SECfg->NumOfCPs;
  if (CPId < _14)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (NumOfAliveSupervisions == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 16>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (NumOfAliveSupervisions == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _15 = (short unsigned int) FoundCPId;
  RetVal = WdgM_CheckpointReached (SEID, _15);
  goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 4, 24);
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 16> :
  IntSEId = {CLOBBER};

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7343 = RetVal;
  return D.7343;

}


WdgM_CheckpointReached (WdgM_SupervisedEntityIdType SEID, WdgM_CheckpointIdType CheckpointID)
{
  const struct WdgM_EB_CPLogicalCfgType * const CPExtLogicalCfg;
  const struct WdgM_EB_CPLogicalCfgType * const CPIntLogicalCfg;
  const struct WdgM_EB_CPDeadlineCfgType * const CPDeadlineCfg;
  const struct WdgM_EB_CPAliveCfgType * const CPAliveCfg;
  const struct WdgM_EB_CPCfgType * const CPCfg;
  const struct WdgM_EB_SECfgType * const SECfg;
  boolean CPFailed;
  struct WdgM_EB_CoreContextType * const CoreInstance;
  WdgM_EB_CPIdType IntCPId;
  WdgM_EB_SEIdType IntSEId;
  Std_ReturnType RetVal;
  Std_ReturnType D.7133;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntCPId = (WdgM_EB_CPIdType) CheckpointID;
  # DEBUG BEGIN_STMT
  CoreInstance = &WdgM_EB_Context;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = WdgM_EB_Context.WdgM_EB_InitStatus;
  _2 = *_1;
  if (_2 != 85)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 14, 16);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 25>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = WdgM_EB_SEId2IntSEId (SEID, &IntSEId);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 14, 19);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 25>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  IntSEId.0_4 = IntSEId;
  _5 = (int) IntSEId.0_4;
  _6 = WdgM_EB_SECfg[_5].NumOfCPs;
  if (IntCPId >= _6)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 14, 22);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 25>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _7 = WdgM_EB_Context.WdgM_EB_SELocalStatus;
  IntSEId.1_8 = IntSEId;
  _9 = (sizetype) IntSEId.1_8;
  _10 = _7 + _9;
  _11 = *_10;
  if (_11 == 4)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 14, 25);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 25>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  CPFailed = 0;
  # DEBUG BEGIN_STMT
  IntSEId.2_12 = IntSEId;
  _13 = (int) IntSEId.2_12;
  SECfg = &WdgM_EB_SECfg[_13];
  # DEBUG BEGIN_STMT
  _14 = SECfg->CPCfg;
  _15 = (unsigned int) IntCPId;
  _16 = _15 * 64;
  CPCfg = _14 + _16;
  # DEBUG BEGIN_STMT
  _17 = WdgM_EB_Context.WdgM_EB_CurrentModeId;
  _18 = (int) _17;
  CPAliveCfg = CPCfg->AliveCfgPtr[_18];
  # DEBUG BEGIN_STMT
  if (CPAliveCfg != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  IntSEId.3_19 = IntSEId;
  _20 = WdgM_EB_CheckpointReachedAlive (IntSEId.3_19, IntCPId);
  if (_20 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  CPFailed = 1;

  <bb 13> :
  # DEBUG BEGIN_STMT
  _21 = WdgM_EB_Context.WdgM_EB_CurrentModeId;
  _22 = (int) _21;
  CPDeadlineCfg = CPCfg->DeadlineCfgPtr[_22];
  # DEBUG BEGIN_STMT
  if (CPDeadlineCfg != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  IntSEId.4_23 = IntSEId;
  _24 = WdgM_EB_CheckpointReachedDeadline (IntSEId.4_23, IntCPId, CPDeadlineCfg);
  if (_24 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  CPFailed = 1;

  <bb 16> :
  # DEBUG BEGIN_STMT
  _25 = WdgM_EB_Context.WdgM_EB_CurrentModeId;
  _26 = (int) _25;
  CPIntLogicalCfg = CPCfg->IntLogicalCfgPtr[_26];
  # DEBUG BEGIN_STMT
  _27 = WdgM_EB_Context.WdgM_EB_CurrentModeId;
  _28 = (int) _27;
  CPExtLogicalCfg = CPCfg->ExtLogicalCfgPtr[_28];
  # DEBUG BEGIN_STMT
  if (CPIntLogicalCfg != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  IntSEId.5_29 = IntSEId;
  _30 = WdgM_EB_CheckpointReachedIntLogical (IntSEId.5_29, IntCPId, CPIntLogicalCfg);
  if (_30 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  CPFailed = 1;

  <bb 19> :
  # DEBUG BEGIN_STMT
  if (CPExtLogicalCfg != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  IntSEId.6_31 = IntSEId;
  _32 = WdgM_EB_CheckpointReachedExtLogical (IntSEId.6_31, IntCPId, CPExtLogicalCfg, &WdgM_EB_Context);
  if (_32 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  CPFailed = 1;

  <bb 22> :
  # DEBUG BEGIN_STMT
  if (CPFailed != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 25> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7133 = RetVal;
  IntSEId = {CLOBBER};
  return D.7133;

}


WdgM_GetMode (WdgM_ModeType * Mode)
{
  struct WdgM_EB_CoreContextType * const CoreInstance;
  Std_ReturnType RetVal;
  Std_ReturnType D.7100;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CoreInstance = &WdgM_EB_Context;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = WdgM_EB_Context.WdgM_EB_InitStatus;
  _2 = *_1;
  if (_2 != 85)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 11, 16);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Mode == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (13, 0, 11, 20);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _3 = WdgM_EB_Context.WdgM_EB_CurrentModeId;
  *Mode = _3;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7100 = RetVal;
  return D.7100;

}


