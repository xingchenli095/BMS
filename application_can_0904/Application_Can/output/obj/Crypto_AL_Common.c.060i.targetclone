Crypto_LNModulo.part.0 (Crypto_LNWordType * Number, const Crypto_LNWordType * Modulus, struct Crypto_LNCtxType * CtxPtr)
{
  uint32 LengthOfNum;
  uint32 LengthOfMod;
  long unsigned int _4;

  <bb 6> [local count: 118111600]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Crypto_LNSModuloShift (Number_1(D), Modulus_2(D), CtxPtr_3(D));
  # DEBUG BEGIN_STMT
  _4 = CtxPtr_3(D)->LengthDifference;
  if (_4 != 0)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630223]:
  goto <bb 2>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Number_1(D));

  <bb 5> [local count: 118111601]:
  return;

}


Crypto_LNSModuloCarry (Crypto_LNWordType * Number, struct Crypto_LNCtxType * CtxPtr)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  Crypto_LNWordType * _6;
  long unsigned int _7;
  long unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CtxPtr_10(D)->Carry;
  _2 = CtxPtr_10(D)->WordOfShiftedMod;
  _3 = _1 + _2;
  CtxPtr_10(D)->Carry = _3;
  # DEBUG BEGIN_STMT
  _4 = CtxPtr_10(D)->PosInNum;
  _5 = _4 * 4;
  _6 = Number_12(D) + _5;
  _7 = *_6;
  _8 = _7 - _3;
  *_6 = _8;
  # DEBUG BEGIN_STMT
  CtxPtr_10(D)->Carry = 0;
  return;

}


Crypto_LNSModuloSubtract2 (Crypto_LNWordType * Number, const Crypto_LNWordType * Modulus, struct Crypto_LNCtxType * CtxPtr)
{
  uint8 TempCarry;
  long unsigned int _1;
  long unsigned int _2;
  const Crypto_LNWordType * _3;
  long unsigned int _4;
  unsigned char _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  Crypto_LNWordType * _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  Crypto_LNWordType * _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  unsigned char _22;
  long unsigned int _23;
  long unsigned int _24;
  const Crypto_LNWordType * _25;
  long unsigned int _26;
  unsigned char _27;
  int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG TempCarry => 0
  # DEBUG BEGIN_STMT
  _1 = CtxPtr_40(D)->WordOfShiftedMod;
  _2 = _34 * 4;
  _3 = Modulus_41(D) + _2;
  _4 = *_3;
  _5 = CtxPtr_40(D)->ShiftBits;
  _6 = (int) _5;
  _7 = _4 << _6;
  _8 = _1 | _7;
  CtxPtr_40(D)->WordOfShiftedMod = _8;
  # DEBUG BEGIN_STMT
  _9 = CtxPtr_40(D)->PosInNum;
  _10 = _9 * 4;
  _11 = Number_43(D) + _10;
  _12 = *_11;
  if (_8 >= _12)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [local count: 477815111]:
  if (_8 > _12)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 238907556]:
  _13 = CtxPtr_40(D)->Carry;
  if (_13 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 358361334]:
  # DEBUG BEGIN_STMT
  # DEBUG TempCarry => 1

  <bb 7> [local count: 955630223]:
  # TempCarry_36 = PHI <0(3), 0(5), 1(6)>
  # DEBUG TempCarry => TempCarry_36
  # DEBUG BEGIN_STMT
  _14 = _12 - _8;
  *_11 = _14;
  # DEBUG BEGIN_STMT
  _15 = CtxPtr_40(D)->PosInNum;
  _16 = _15 * 4;
  _17 = Number_43(D) + _16;
  _18 = *_17;
  _19 = CtxPtr_40(D)->Carry;
  _20 = _18 - _19;
  *_17 = _20;
  # DEBUG BEGIN_STMT
  _21 = (long unsigned int) TempCarry_36;
  CtxPtr_40(D)->Carry = _21;
  # DEBUG BEGIN_STMT
  _22 = CtxPtr_40(D)->ShiftBits;
  if (_22 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  CtxPtr_40(D)->WordOfShiftedMod = 0;
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  _23 = CtxPtr_40(D)->PosInMod;
  _24 = _23 * 4;
  _25 = Modulus_41(D) + _24;
  _26 = *_25;
  _27 = 32 - _22;
  _28 = (int) _27;
  _29 = _26 >> _28;
  CtxPtr_40(D)->WordOfShiftedMod = _29;

  <bb 10> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _30 = CtxPtr_40(D)->PosInNum;
  _31 = _30 + 1;
  CtxPtr_40(D)->PosInNum = _31;
  # DEBUG BEGIN_STMT
  _32 = CtxPtr_40(D)->PosInMod;
  _33 = _32 + 1;
  CtxPtr_40(D)->PosInMod = _33;

  <bb 11> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _34 = CtxPtr_40(D)->PosInMod;
  _35 = *Modulus_41(D);
  if (_34 <= _35)
    goto <bb 3>; [89.00%]
  else
    goto <bb 12>; [11.00%]

  <bb 12> [local count: 118111601]:
  return;

}


Crypto_LNSModuloSubtract (Crypto_LNWordType * Number, const Crypto_LNWordType * Modulus, struct Crypto_LNCtxType * CtxPtr)
{
  unsigned char _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CtxPtr_6(D)->CmpNumMod;
  if (_1 != 4)
    goto <bb 3>; [48.88%]
  else
    goto <bb 4>; [51.12%]

  <bb 3> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  CtxPtr_6(D)->WordOfShiftedMod = 0;
  # DEBUG BEGIN_STMT
  CtxPtr_6(D)->Carry = 0;
  # DEBUG BEGIN_STMT
  _2 = CtxPtr_6(D)->ShiftWords;
  _3 = _2 + 1;
  CtxPtr_6(D)->PosInNum = _3;
  # DEBUG BEGIN_STMT
  CtxPtr_6(D)->PosInMod = 1;
  # DEBUG BEGIN_STMT
  Crypto_LNSModuloSubtract2 (Number_11(D), Modulus_12(D), CtxPtr_6(D));
  # DEBUG BEGIN_STMT
  Crypto_LNSModuloCarry (Number_11(D), CtxPtr_6(D));

  <bb 4> [local count: 1073741824]:
  return;

}


Crypto_LNSModuloShift2 (Crypto_LNWordType * Number, const Crypto_LNWordType * Modulus, struct Crypto_LNCtxType * CtxPtr)
{
  Crypto_LNWordType WordOfNumber;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  const Crypto_LNWordType * _4;
  long unsigned int _5;
  unsigned char _6;
  int _7;
  long unsigned int _8;
  unsigned char _9;
  long unsigned int _10;
  sizetype _11;
  sizetype _12;
  const Crypto_LNWordType * _13;
  long unsigned int _14;
  unsigned char _15;
  int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  Crypto_LNWordType * _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  unsigned char _26;

  <bb 2> [local count: 114863532]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CtxPtr_33(D)->PosInMod;
  _2 = *Modulus_34(D);
  if (_1 <= _2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 536870912]:
  # DEBUG BEGIN_STMT
  _3 = _1 * 4;
  _4 = Modulus_34(D) + _3;
  _5 = *_4;
  _6 = CtxPtr_33(D)->ShiftBits;
  _7 = (int) _6;
  _8 = _5 << _7;
  CtxPtr_33(D)->WordOfShiftedMod = _8;
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 536870912]:
  # DEBUG BEGIN_STMT
  CtxPtr_33(D)->WordOfShiftedMod = 0;

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _9 = CtxPtr_33(D)->ShiftBits;
  if (_9 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 7> [local count: 536870912]:
  if (_1 > 1)
    goto <bb 8>; [59.00%]
  else
    goto <bb 9>; [41.00%]

  <bb 8> [local count: 316753838]:
  # DEBUG BEGIN_STMT
  _10 = CtxPtr_33(D)->WordOfShiftedMod;
  _11 = _1 + 1073741823;
  _12 = _11 * 4;
  _13 = Modulus_34(D) + _12;
  _14 = *_13;
  _15 = 32 - _9;
  _16 = (int) _15;
  _17 = _14 >> _16;
  _18 = _10 | _17;
  CtxPtr_33(D)->WordOfShiftedMod = _18;

  <bb 9> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _19 = CtxPtr_33(D)->PosInNum;
  _20 = *Number_38(D);
  if (_19 > _20)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 536870912]:
  # DEBUG BEGIN_STMT
  _21 = _19 * 4;
  _22 = Number_38(D) + _21;
  WordOfNumber_39 = *_22;
  # DEBUG WordOfNumber => WordOfNumber_39

  <bb 11> [local count: 1073741824]:
  # WordOfNumber_27 = PHI <0(9), WordOfNumber_39(10)>
  # DEBUG WordOfNumber => WordOfNumber_27
  # DEBUG BEGIN_STMT
  _23 = CtxPtr_33(D)->WordOfShiftedMod;
  if (_23 == WordOfNumber_27)
    goto <bb 12>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 12> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  CtxPtr_33(D)->CmpNumMod = 2;
  goto <bb 16>; [100.00%]

  <bb 13> [local count: 708669604]:
  # DEBUG BEGIN_STMT
  if (_23 > WordOfNumber_27)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  CtxPtr_33(D)->CmpNumMod = 4;
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  CtxPtr_33(D)->CmpNumMod = 5;

  <bb 16> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _24 = _1 + 4294967295;
  CtxPtr_33(D)->PosInMod = _24;
  # DEBUG BEGIN_STMT
  _25 = _19 + 4294967295;
  CtxPtr_33(D)->PosInNum = _25;
  # DEBUG BEGIN_STMT
  _26 = CtxPtr_33(D)->CmpNumMod;
  if (_26 == 2)
    goto <bb 17>; [94.50%]
  else
    goto <bb 18>; [5.50%]

  <bb 17> [local count: 1014686025]:
  if (_24 != 0)
    goto <bb 19>; [94.50%]
  else
    goto <bb 18>; [5.50%]

  <bb 19> [local count: 958878293]:
  goto <bb 3>; [100.00%]

  <bb 18> [local count: 114863532]:
  return;

}


Crypto_LNSModuloShift (Crypto_LNWordType * Number, const Crypto_LNWordType * Modulus, struct Crypto_LNCtxType * CtxPtr)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  unsigned char _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CtxPtr_10(D)->LengthDifference;
  _2 = _1 + 4294967295;
  CtxPtr_10(D)->LengthDifference = _2;
  # DEBUG BEGIN_STMT
  _3 = _2 >> 5;
  CtxPtr_10(D)->ShiftWords = _3;
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  _5 = _4 & 31;
  CtxPtr_10(D)->ShiftBits = _5;
  # DEBUG BEGIN_STMT
  _6 = *Modulus_14(D);
  _7 = _6 + 1;
  CtxPtr_10(D)->PosInMod = _7;
  # DEBUG BEGIN_STMT
  _8 = _3 + _7;
  CtxPtr_10(D)->PosInNum = _8;
  # DEBUG BEGIN_STMT
  Crypto_LNSModuloShift2 (Number_17(D), Modulus_14(D), CtxPtr_10(D));
  # DEBUG BEGIN_STMT
  Crypto_LNSModuloSubtract (Number_17(D), Modulus_14(D), CtxPtr_10(D));
  return;

}


Crypto_LNBarretSubtractNumbers (Crypto_LNWordType * Result, const Crypto_LNWordType * Minuend, const Crypto_LNWordType * Subtrahend, Crypto_LNWordType CutOff)
{
  Crypto_LNWordType UpperDifference;
  Crypto_LNWordType LowerDifference;
  Crypto_LNWordType UpperDifference;
  Crypto_LNWordType LowerDifference;
  Crypto_LNWordType Borrow;
  Crypto_LNWordType LoopCount;
  long unsigned int _1;
  const Crypto_LNWordType * _2;
  long unsigned int _3;
  long unsigned int _4;
  const Crypto_LNWordType * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  Crypto_LNWordType * _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  const Crypto_LNWordType * _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  Crypto_LNWordType * _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _37;
  long unsigned int _38;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 0
  # DEBUG BEGIN_STMT
  # DEBUG LoopCount => 1
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 958878293]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = LoopCount_31 * 4;
  _2 = Minuend_42(D) + _1;
  _3 = *_2;
  _4 = _3 & 65535;
  _6 = Subtrahend_40(D) + _1;
  _7 = *_6;
  _8 = _7 & 65535;
  _9 = _4 - _8;
  LowerDifference_43 = _9 - Borrow_33;
  # DEBUG LowerDifference => LowerDifference_43
  # DEBUG BEGIN_STMT
  _10 = LowerDifference_43 >> 16;
  Borrow_44 = _10 & 1;
  # DEBUG Borrow => Borrow_44
  # DEBUG BEGIN_STMT
  LowerDifference_45 = LowerDifference_43 & 65535;
  # DEBUG LowerDifference => LowerDifference_45
  # DEBUG BEGIN_STMT
  _13 = _3 >> 16;
  _14 = _7 >> 16;
  _15 = _13 - _14;
  UpperDifference_46 = _15 - Borrow_44;
  # DEBUG UpperDifference => UpperDifference_46
  # DEBUG BEGIN_STMT
  _16 = UpperDifference_46 >> 16;
  Borrow_47 = _16 & 1;
  # DEBUG Borrow => Borrow_47
  # DEBUG BEGIN_STMT
  # DEBUG UpperDifference => UpperDifference_46 & 65535
  # DEBUG BEGIN_STMT
  _38 = UpperDifference_46 << 16;
  _17 = Result_48(D) + _1;
  _18 = _38 | LowerDifference_45;
  *_17 = _18;
  # DEBUG BEGIN_STMT
  LoopCount_50 = LoopCount_31 + 1;
  # DEBUG LoopCount => LoopCount_50

  <bb 4> [local count: 1073741824]:
  # LoopCount_31 = PHI <1(2), LoopCount_50(3)>
  # Borrow_33 = PHI <0(2), Borrow_47(3)>
  # DEBUG Borrow => Borrow_33
  # DEBUG LoopCount => LoopCount_31
  # DEBUG BEGIN_STMT
  _19 = *Subtrahend_40(D);
  if (_19 >= LoopCount_31)
    goto <bb 6>; [94.50%]
  else
    goto <bb 5>; [5.50%]

  <bb 5> [local count: 114863532]:
  # LoopCount_12 = PHI <LoopCount_31(4), LoopCount_31(6)>
  # Borrow_5 = PHI <Borrow_33(4), Borrow_33(6)>
  goto <bb 8>; [100.00%]

  <bb 6> [local count: 1014686025]:
  if (LoopCount_31 <= CutOff_41(D))
    goto <bb 3>; [94.50%]
  else
    goto <bb 5>; [5.50%]

  <bb 7> [local count: 929350398]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = LoopCount_32 * 4;
  _21 = Minuend_42(D) + _20;
  _22 = *_21;
  _23 = _22 & 65535;
  LowerDifference_53 = _23 - Borrow_34;
  # DEBUG LowerDifference => LowerDifference_53
  # DEBUG BEGIN_STMT
  _24 = LowerDifference_53 >> 16;
  Borrow_54 = _24 & 1;
  # DEBUG Borrow => Borrow_54
  # DEBUG BEGIN_STMT
  LowerDifference_55 = LowerDifference_53 & 65535;
  # DEBUG LowerDifference => LowerDifference_55
  # DEBUG BEGIN_STMT
  _25 = _22 >> 16;
  UpperDifference_56 = _25 - Borrow_54;
  # DEBUG UpperDifference => UpperDifference_56
  # DEBUG BEGIN_STMT
  _26 = UpperDifference_56 >> 16;
  Borrow_57 = _26 & 1;
  # DEBUG Borrow => Borrow_57
  # DEBUG BEGIN_STMT
  # DEBUG UpperDifference => UpperDifference_56 & 65535
  # DEBUG BEGIN_STMT
  _37 = UpperDifference_56 << 16;
  _27 = Result_48(D) + _20;
  _28 = _37 | LowerDifference_55;
  *_27 = _28;
  # DEBUG BEGIN_STMT
  LoopCount_59 = LoopCount_32 + 1;
  # DEBUG LoopCount => LoopCount_59

  <bb 8> [local count: 1044213930]:
  # LoopCount_32 = PHI <LoopCount_12(5), LoopCount_59(7)>
  # Borrow_34 = PHI <Borrow_5(5), Borrow_57(7)>
  # DEBUG Borrow => Borrow_34
  # DEBUG LoopCount => LoopCount_32
  # DEBUG BEGIN_STMT
  _29 = *Minuend_42(D);
  if (_29 >= LoopCount_32)
    goto <bb 7>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 114863532]:
  # LoopCount_11 = PHI <LoopCount_32(8)>
  # DEBUG BEGIN_STMT
  _30 = LoopCount_11 + 4294967295;
  *Result_48(D) = _30;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Result_48(D));
  return;

}


Crypto_AL_Init ()
{
  uint32 KeyElementId;
  uint32 KeyElementIndex;
  uint32 CryptoKeyId;
  struct Crypto_KeyElement * const * _1;
  long unsigned int _2;
  struct Crypto_KeyElement * const * _3;
  struct Crypto_KeyElement * _4;
  struct Crypto_AL_KeyDataType * _5;
  long unsigned int _6;
  struct Crypto_AL_KeyDataType * _7;
  const uint8 * _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 59046942]:
  # DEBUG BEGIN_STMT
  # DEBUG CryptoKeyId => 0
  # DEBUG BEGIN_STMT
  # DEBUG KeyElementIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG KeyElementId => 0
  # DEBUG BEGIN_STMT
  # DEBUG CryptoKeyId => 0
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = Crypto_Keys[CryptoKeyId_11].KeyType;
  _2 = KeyElementIndex_12 * 4;
  _3 = _1 + _2;
  _4 = *_3;
  KeyElementId_19 = _4->Id;
  # DEBUG KeyElementId => KeyElementId_19
  # DEBUG BEGIN_STMT
  _5 = Crypto_AL_Keys_Data[CryptoKeyId_11].KeyData;
  _6 = KeyElementIndex_12 * 12;
  _7 = _5 + _6;
  _8 = _7->RfKeyElemDataInit;
  _9 = _7->RfKeyElemDataSize;
  Crypto_AL_KeyElementSet (CryptoKeyId_11, KeyElementId_19, _8, _9);
  # DEBUG BEGIN_STMT
  KeyElementIndex_21 = KeyElementIndex_12 + 1;
  # DEBUG KeyElementIndex => KeyElementIndex_21

  <bb 4> [local count: 1073741824]:
  # KeyElementIndex_12 = PHI <KeyElementIndex_21(3), 0(8)>
  # DEBUG KeyElementIndex => KeyElementIndex_12
  # DEBUG BEGIN_STMT
  _10 = Crypto_AL_Keys_Data[CryptoKeyId_11].NumKeyData;
  if (_10 > KeyElementIndex_12)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_AL_AESCMAC_PrecalculateKeys (CryptoKeyId_11);
  # DEBUG BEGIN_STMT
  Crypto_Keys[CryptoKeyId_11].KeyState = 1;
  # DEBUG BEGIN_STMT
  CryptoKeyId_18 = CryptoKeyId_11 + 1;
  # DEBUG CryptoKeyId => CryptoKeyId_18

  <bb 6> [local count: 177158543]:
  # CryptoKeyId_11 = PHI <0(2), CryptoKeyId_18(5)>
  # DEBUG CryptoKeyId => CryptoKeyId_11
  # DEBUG BEGIN_STMT
  if (CryptoKeyId_11 != 2)
    goto <bb 8>; [66.67%]
  else
    goto <bb 7>; [33.33%]

  <bb 8> [local count: 118111600]:
  goto <bb 4>; [100.00%]

  <bb 7> [local count: 59046942]:
  return;

}


Crypto_LNInversion (Crypto_LNWordType * InvValue, const Crypto_LNWordType * Value, Crypto_LNWordType * Tmp1Value, Crypto_LNWordType * Tmp2Value, Crypto_LNWordType * Tmp3Value, const Crypto_LNWordType * Modulus, struct Crypto_LNCtxType * CtxPtr)
{
  Crypto_ReturnType CompNumRes;
  Crypto_LNWordType i;
  Crypto_LNWordType AddResult;
  long unsigned int _1;
  const Crypto_LNWordType * _2;
  Crypto_LNWordType * _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  const Crypto_LNWordType * _7;
  long unsigned int _8;
  Crypto_LNWordType * _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  unsigned char _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _28;
  long unsigned int _29;
  Crypto_LNWordType * _30;
  Crypto_LNWordType * _32;
  long unsigned int _33;
  long unsigned int _34;

  <bb 2> [local count: 7596263]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 61460671]:
  # DEBUG BEGIN_STMT
  _1 = i_35 * 4;
  _2 = Value_46(D) + _1;
  _3 = Tmp1Value_54(D) + _1;
  _4 = *_2;
  *_3 = _4;
  # DEBUG BEGIN_STMT
  i_78 = i_35 + 1;
  # DEBUG i => i_78

  <bb 4> [local count: 69056934]:
  # i_35 = PHI <0(2), i_78(3)>
  # DEBUG i => i_35
  # DEBUG BEGIN_STMT
  _5 = *Value_46(D);
  if (_5 >= i_35)
    goto <bb 3>; [89.00%]
  else
    goto <bb 39>; [11.00%]

  <bb 39> [local count: 7596263]:
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 61460671]:
  # DEBUG BEGIN_STMT
  _6 = i_36 * 4;
  _7 = Modulus_47(D) + _6;
  _9 = Tmp2Value_55(D) + _6;
  _10 = *_7;
  *_9 = _10;
  # DEBUG BEGIN_STMT
  i_76 = i_36 + 1;
  # DEBUG i => i_76

  <bb 6> [local count: 69056934]:
  # i_36 = PHI <i_76(5), 0(39)>
  # DEBUG i => i_36
  # DEBUG BEGIN_STMT
  _11 = *Modulus_47(D);
  if (_11 >= i_36)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 7596263]:
  # DEBUG BEGIN_STMT
  *Tmp3Value_48(D) = 1;
  # DEBUG BEGIN_STMT
  MEM[(Crypto_LNWordType *)Tmp3Value_48(D) + 4B] = 1;
  # DEBUG BEGIN_STMT
  *InvValue_51(D) = 0;
  # DEBUG BEGIN_STMT
  MEM[(Crypto_LNWordType *)InvValue_51(D) + 4B] = 0;
  # DEBUG BEGIN_STMT
  goto <bb 33>; [100.00%]

  <bb 8> [local count: 955630219]:
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (Tmp1Value_54(D), 0);
  # DEBUG BEGIN_STMT
  _12 = MEM[(Crypto_LNWordType *)Tmp3Value_48(D) + 4B];
  _13 = _12 & 1;
  if (_13 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 477815109]:
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (Tmp3Value_48(D), 0);
  goto <bb 12>; [100.00%]

  <bb 10> [local count: 477815109]:
  # DEBUG BEGIN_STMT
  _14 = Crypto_LNAddition (Tmp3Value_48(D), Tmp3Value_48(D), Modulus_47(D));
  AddResult_68 = (Crypto_LNWordType) _14;
  # DEBUG AddResult => AddResult_68
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (Tmp3Value_48(D), AddResult_68);

  <bb 12> [local count: 955630219]:

  <bb 35> [local count: 1073741820]:
  # DEBUG BEGIN_STMT
  _15 = MEM[(Crypto_LNWordType *)Tmp1Value_54(D) + 4B];
  _16 = _15 & 1;
  if (_16 == 0)
    goto <bb 8>; [89.00%]
  else
    goto <bb 37>; [11.00%]

  <bb 37> [local count: 118111600]:
  goto <bb 34>; [100.00%]

  <bb 13> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (Tmp2Value_55(D), 0);
  # DEBUG BEGIN_STMT
  _17 = MEM[(Crypto_LNWordType *)InvValue_51(D) + 4B];
  _18 = _17 & 1;
  if (_18 == 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [local count: 477815112]:
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (InvValue_51(D), 0);
  goto <bb 17>; [100.00%]

  <bb 15> [local count: 477815112]:
  # DEBUG BEGIN_STMT
  _19 = Crypto_LNAddition (InvValue_51(D), InvValue_51(D), Modulus_47(D));
  AddResult_63 = (Crypto_LNWordType) _19;
  # DEBUG AddResult => AddResult_63
  # DEBUG BEGIN_STMT
  Crypto_LNDivByTwo (InvValue_51(D), AddResult_63);

  <bb 17> [local count: 955630225]:

  <bb 34> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _20 = MEM[(Crypto_LNWordType *)Tmp2Value_55(D) + 4B];
  _21 = _20 & 1;
  if (_21 == 0)
    goto <bb 13>; [89.00%]
  else
    goto <bb 18>; [11.00%]

  <bb 18> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  CompNumRes_56 = Crypto_LNCompareNumbers (Tmp1Value_54(D), Tmp2Value_55(D));
  # DEBUG CompNumRes => CompNumRes_56
  # DEBUG BEGIN_STMT
  if (CompNumRes_56 == 5)
    goto <bb 20>; [20.24%]
  else
    goto <bb 19>; [79.76%]

  <bb 19> [local count: 94205813]:
  if (CompNumRes_56 == 2)
    goto <bb 20>; [51.12%]
  else
    goto <bb 21>; [48.88%]

  <bb 20> [local count: 72063799]:
  # DEBUG BEGIN_STMT
  Crypto_LNSubtractionModular (Tmp1Value_54(D), Tmp1Value_54(D), Tmp2Value_55(D), Modulus_47(D));
  # DEBUG BEGIN_STMT
  Crypto_LNSubtractionModular (Tmp3Value_48(D), Tmp3Value_48(D), InvValue_51(D), Modulus_47(D));
  goto <bb 23>; [100.00%]

  <bb 21> [local count: 46047801]:
  # DEBUG BEGIN_STMT
  Crypto_LNSubtractionModular (Tmp2Value_55(D), Tmp2Value_55(D), Tmp1Value_54(D), Modulus_47(D));
  # DEBUG BEGIN_STMT
  Crypto_LNSubtractionModular (InvValue_51(D), InvValue_51(D), Tmp3Value_48(D), Modulus_47(D));

  <bb 23> [local count: 118111601]:

  <bb 33> [local count: 125707863]:
  # DEBUG BEGIN_STMT
  _22 = *Tmp1Value_54(D);
  if (_22 != 1)
    goto <bb 25>; [66.00%]
  else
    goto <bb 24>; [34.00%]

  <bb 24> [local count: 42740674]:
  _23 = MEM[(Crypto_LNWordType *)Tmp1Value_54(D) + 4B];
  if (_23 != 1)
    goto <bb 25>; [96.34%]
  else
    goto <bb 28>; [3.66%]

  <bb 25> [local count: 124143555]:
  _24 = *Tmp2Value_55(D);
  if (_24 != 1)
    goto <bb 27>; [66.00%]
  else
    goto <bb 26>; [34.00%]

  <bb 26> [local count: 42208809]:
  _25 = MEM[(Crypto_LNWordType *)Tmp2Value_55(D) + 4B];
  if (_25 != 1)
    goto <bb 27>; [96.34%]
  else
    goto <bb 28>; [3.66%]

  <bb 27> [local count: 122598712]:
  if (_22 != 0)
    goto <bb 38>; [96.34%]
  else
    goto <bb 28>; [3.66%]

  <bb 38> [local count: 118111599]:
  goto <bb 35>; [100.00%]

  <bb 28> [local count: 7596264]:
  # _8 = PHI <1(24), _22(26), _22(27)>
  # DEBUG BEGIN_STMT
  if (_8 == 1)
    goto <bb 29>; [34.00%]
  else
    goto <bb 32>; [66.00%]

  <bb 29> [local count: 2582730]:
  _28 = MEM[(Crypto_LNWordType *)Tmp1Value_54(D) + 4B];
  if (_28 == 1)
    goto <bb 36>; [34.00%]
  else
    goto <bb 32>; [66.00%]

  <bb 36> [local count: 878128]:
  goto <bb 31>; [100.00%]

  <bb 30> [local count: 7104855]:
  # DEBUG BEGIN_STMT
  _29 = i_37 * 4;
  _30 = Tmp3Value_48(D) + _29;
  _32 = InvValue_51(D) + _29;
  _33 = *_30;
  *_32 = _33;
  # DEBUG BEGIN_STMT
  i_72 = i_37 + 1;
  # DEBUG i => i_72

  <bb 31> [local count: 7982983]:
  # i_37 = PHI <i_72(30), 0(36)>
  # DEBUG i => i_37
  # DEBUG BEGIN_STMT
  _34 = *Tmp3Value_48(D);
  if (_34 >= i_37)
    goto <bb 30>; [89.00%]
  else
    goto <bb 32>; [11.00%]

  <bb 32> [local count: 7596264]:
  # DEBUG BEGIN_STMT
  Crypto_LNModulo (InvValue_51(D), Modulus_47(D), CtxPtr_73(D));
  return;

}


Crypto_LNSubtractionModular (Crypto_LNWordType * Difference, const Crypto_LNWordType * Minuend, const Crypto_LNWordType * Subtrahend, const Crypto_LNWordType * Modulus)
{
  Crypto_LNWordType Tmp2;
  Crypto_LNWordType Tmp;
  uint8 Borrow;
  Crypto_LNWordType i;
  long unsigned int _1;
  long unsigned int _2;
  const Crypto_LNWordType * _3;
  long unsigned int _4;
  long unsigned int _5;
  const Crypto_LNWordType * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  Crypto_LNWordType * _10;
  long unsigned int _11;
  long unsigned int _13;
  long unsigned int _14;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG i => 1
  goto <bb 12>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = *Minuend_30(D);
  if (_1 < i_15)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  _2 = i_15 * 4;
  _3 = Minuend_30(D) + _2;
  Tmp_31 = *_3;
  # DEBUG Tmp => Tmp_31

  <bb 5> [local count: 955630223]:
  # Tmp_18 = PHI <0(3), Tmp_31(4)>
  # DEBUG Tmp => Tmp_18
  # DEBUG BEGIN_STMT
  _4 = *Subtrahend_32(D);
  if (_4 < i_15)
    goto <bb 7>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  _5 = i_15 * 4;
  _6 = Subtrahend_32(D) + _5;
  Tmp2_33 = *_6;
  # DEBUG Tmp2 => Tmp2_33

  <bb 7> [local count: 955630223]:
  # Tmp2_19 = PHI <0(5), Tmp2_33(6)>
  # DEBUG Tmp2 => Tmp2_19
  # DEBUG BEGIN_STMT
  _7 = Tmp_18 - Tmp2_19;
  _8 = (long unsigned int) Borrow_17;
  _9 = i_15 * 4;
  _10 = Difference_25(D) + _9;
  _11 = _7 - _8;
  *_10 = _11;
  # DEBUG BEGIN_STMT
  if (_11 >= Tmp_18)
    goto <bb 8>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 8> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  if (Tmp2_19 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 238907556]:
  if (Borrow_17 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 358361334]:
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 1

  <bb 11> [local count: 955630223]:
  # Borrow_16 = PHI <1(10), 0(7), Borrow_17(9)>
  # DEBUG Borrow => Borrow_16
  # DEBUG BEGIN_STMT
  i_35 = i_15 + 1;
  # DEBUG i => i_35

  <bb 12> [local count: 1073741824]:
  # i_15 = PHI <1(2), i_35(11)>
  # Borrow_17 = PHI <0(2), Borrow_16(11)>
  # DEBUG Borrow => Borrow_17
  # DEBUG i => i_15
  # DEBUG BEGIN_STMT
  _13 = *Modulus_24(D);
  if (_13 >= i_15)
    goto <bb 3>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 118111601]:
  # _14 = PHI <_13(12)>
  # Borrow_12 = PHI <Borrow_17(12)>
  # DEBUG BEGIN_STMT
  *Difference_25(D) = _14;
  # DEBUG BEGIN_STMT
  if (Borrow_12 == 1)
    goto <bb 16>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 16> [local count: 40157944]:

  <bb 14> [local count: 365072222]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Borrow_28 = Crypto_LNAddition (Difference_25(D), Difference_25(D), Modulus_24(D));
  # DEBUG Borrow => Borrow_28
  # DEBUG BEGIN_STMT
  if (Borrow_28 == 0)
    goto <bb 17>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 17> [local count: 324914277]:
  goto <bb 14>; [100.00%]

  <bb 15> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Difference_25(D));
  return;

}


Crypto_LNAdditionModular (Crypto_LNWordType * Sum, const Crypto_LNWordType * Addend1, const Crypto_LNWordType * Addend2, const Crypto_LNWordType * Modulus)
{
  uint8 Borrow;
  uint8 Carry;
  Crypto_LNWordType Tmp;
  Crypto_LNWordType i;
  long unsigned int _1;
  long unsigned int _2;
  Crypto_LNWordType * _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _8;
  long unsigned int _9;
  Crypto_LNWordType * _10;
  unsigned char _11;
  long unsigned int _12;
  Crypto_LNWordType * _13;
  const Crypto_LNWordType * _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Carry => 0
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 0
  # DEBUG BEGIN_STMT
  Carry_33 = Crypto_LNAddition (Sum_29(D), Addend1_30(D), Addend2_31(D));
  # DEBUG Carry => Carry_33
  # DEBUG BEGIN_STMT
  _1 = *Sum_29(D);
  i_34 = _1 + 1;
  # DEBUG i => i_34
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _2 = i_21 * 4;
  _3 = Sum_29(D) + _2;
  *_3 = 0;
  # DEBUG BEGIN_STMT
  i_44 = i_21 + 1;
  # DEBUG i => i_44

  <bb 4> [local count: 1073741824]:
  # i_21 = PHI <i_34(2), i_44(3)>
  # DEBUG i => i_21
  # DEBUG BEGIN_STMT
  _4 = *Modulus_35(D);
  if (_4 >= i_21)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # _6 = PHI <_4(4)>
  # DEBUG BEGIN_STMT
  _5 = *Sum_29(D);
  if (_5 < _6)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 59055800]:
  if (Carry_33 == 1)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 20078972]:
  # DEBUG BEGIN_STMT
  _8 = _5 + 1;
  *Sum_29(D) = _8;
  # DEBUG BEGIN_STMT
  _9 = _8 * 4;
  _10 = Sum_29(D) + _9;
  *_10 = 1;
  goto <bb 17>; [100.00%]

  <bb 8> [local count: 98032628]:
  # DEBUG BEGIN_STMT
  _11 = Crypto_LNCompareNumbers (Sum_29(D), Modulus_35(D));
  if (_11 != 4)
    goto <bb 9>; [66.00%]
  else
    goto <bb 10>; [34.00%]

  <bb 9> [local count: 76034107]:
  # i_38 = PHI <1(8), 1(10)>
  # Borrow_7 = PHI <0(8), 0(10)>
  goto <bb 16>; [100.00%]

  <bb 10> [local count: 33331094]:
  if (Carry_33 == 1)
    goto <bb 9>; [34.00%]
  else
    goto <bb 17>; [66.00%]

  <bb 11> [local count: 615185048]:
  # DEBUG BEGIN_STMT
  _12 = i_22 * 4;
  _13 = Sum_29(D) + _12;
  Tmp_39 = *_13;
  # DEBUG Tmp => Tmp_39
  # DEBUG BEGIN_STMT
  _14 = Modulus_35(D) + _12;
  _15 = *_14;
  _16 = Tmp_39 - _15;
  _17 = (long unsigned int) Borrow_24;
  _18 = _16 - _17;
  *_13 = _18;
  # DEBUG BEGIN_STMT
  if (_18 >= Tmp_39)
    goto <bb 12>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 12> [local count: 307592524]:
  # DEBUG BEGIN_STMT
  _19 = *_14;
  if (_19 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 153796262]:
  if (Borrow_24 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [local count: 230694393]:
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 1

  <bb 15> [local count: 615185048]:
  # Borrow_23 = PHI <1(14), 0(11), Borrow_24(13)>
  # DEBUG Borrow => Borrow_23
  # DEBUG BEGIN_STMT
  i_41 = i_22 + 1;
  # DEBUG i => i_41

  <bb 16> [local count: 691219155]:
  # i_22 = PHI <i_38(9), i_41(15)>
  # Borrow_24 = PHI <Borrow_7(9), Borrow_23(15)>
  # DEBUG Borrow => Borrow_24
  # DEBUG i => i_22
  # DEBUG BEGIN_STMT
  _20 = *Modulus_35(D);
  if (_20 >= i_22)
    goto <bb 11>; [89.00%]
  else
    goto <bb 17>; [11.00%]

  <bb 17> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Sum_29(D));
  return;

}


Crypto_LNAddition (Crypto_LNWordType * Sum, const Crypto_LNWordType * Addend1, const Crypto_LNWordType * Addend2)
{
  Crypto_LNWordType Carry;
  Crypto_LNWordType MaxLength;
  Crypto_LNWordType MinLength;
  Crypto_LNWordType LoopCount;
  Crypto_LNDoubleWordType TempSum;
  const Crypto_LNWordType * LargestOperand;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  const Crypto_LNWordType * _4;
  long unsigned int _5;
  long long unsigned int _6;
  const Crypto_LNWordType * _7;
  long unsigned int _8;
  long long unsigned int _9;
  long long unsigned int _10;
  long long unsigned int _11;
  Crypto_LNWordType * _12;
  long unsigned int _13;
  long long unsigned int _14;
  long unsigned int _15;
  const Crypto_LNWordType * _16;
  long unsigned int _17;
  long long unsigned int _18;
  long long unsigned int _19;
  Crypto_LNWordType * _20;
  long unsigned int _21;
  long long unsigned int _22;
  uint8 _38;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Carry => 0
  # DEBUG BEGIN_STMT
  _1 = *Addend1_33(D);
  _2 = *Addend2_34(D);
  if (_1 > _2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  # DEBUG MinLength => _1
  # DEBUG BEGIN_STMT
  # DEBUG MaxLength => _2
  # DEBUG BEGIN_STMT
  # DEBUG LargestOperand => Addend2_34(D)

  <bb 4> [local count: 118111600]:
  # LargestOperand_23 = PHI <Addend1_33(D)(2), Addend2_34(D)(3)>
  # MinLength_26 = PHI <_2(2), _1(3)>
  # MaxLength_27 = PHI <_1(2), _2(3)>
  # DEBUG MaxLength => MaxLength_27
  # DEBUG MinLength => MinLength_26
  # DEBUG LargestOperand => LargestOperand_23
  # DEBUG BEGIN_STMT
  # DEBUG LoopCount => 1
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 955630220]:
  # DEBUG BEGIN_STMT
  _3 = LoopCount_24 * 4;
  _4 = Addend1_33(D) + _3;
  _5 = *_4;
  _6 = (long long unsigned int) _5;
  _7 = Addend2_34(D) + _3;
  _8 = *_7;
  _9 = (long long unsigned int) _8;
  _10 = _6 + _9;
  _11 = (long long unsigned int) Carry_28;
  TempSum_43 = _10 + _11;
  # DEBUG TempSum => TempSum_43
  # DEBUG BEGIN_STMT
  _12 = Sum_36(D) + _3;
  _13 = (long unsigned int) TempSum_43;
  *_12 = _13;
  # DEBUG BEGIN_STMT
  _14 = TempSum_43 >> 32;
  Carry_45 = (Crypto_LNWordType) _14;
  # DEBUG Carry => Carry_45
  # DEBUG BEGIN_STMT
  LoopCount_46 = LoopCount_24 + 1;
  # DEBUG LoopCount => LoopCount_46

  <bb 6> [local count: 1073741821]:
  # LoopCount_24 = PHI <1(4), LoopCount_46(5)>
  # Carry_28 = PHI <0(4), Carry_45(5)>
  # DEBUG Carry => Carry_28
  # DEBUG LoopCount => LoopCount_24
  # DEBUG BEGIN_STMT
  if (LoopCount_24 <= MinLength_26)
    goto <bb 5>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 118111600]:
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _15 = LoopCount_25 * 4;
  _16 = LargestOperand_23 + _15;
  _17 = *_16;
  _18 = (long long unsigned int) _17;
  _19 = (long long unsigned int) Carry_29;
  TempSum_39 = _18 + _19;
  # DEBUG TempSum => TempSum_39
  # DEBUG BEGIN_STMT
  _20 = Sum_36(D) + _15;
  _21 = _17 + Carry_29;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  _22 = TempSum_39 >> 32;
  Carry_41 = (Crypto_LNWordType) _22;
  # DEBUG Carry => Carry_41
  # DEBUG BEGIN_STMT
  LoopCount_42 = LoopCount_25 + 1;
  # DEBUG LoopCount => LoopCount_42

  <bb 9> [local count: 1073741824]:
  # LoopCount_25 = PHI <LoopCount_42(8), LoopCount_24(11)>
  # Carry_29 = PHI <Carry_41(8), Carry_28(11)>
  # DEBUG Carry => Carry_29
  # DEBUG LoopCount => LoopCount_25
  # DEBUG BEGIN_STMT
  if (LoopCount_25 <= MaxLength_27)
    goto <bb 8>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # Carry_35 = PHI <Carry_29(9)>
  # DEBUG BEGIN_STMT
  *Sum_36(D) = MaxLength_27;
  # DEBUG BEGIN_STMT
  _38 = (uint8) Carry_35;
  return _38;

}


Crypto_LNDivByTwo (Crypto_LNWordType * Value, Crypto_LNWordType Overflow)
{
  Crypto_LNWordType DiffTmpVal2;
  Crypto_LNWordType DiffTmpVal1;
  Crypto_LNWordType i;
  long unsigned int _1;
  Crypto_LNWordType * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG DiffTmpVal2 => Overflow_10(D)
  # DEBUG BEGIN_STMT
  i_13 = *Value_12(D);
  # DEBUG i => i_13
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = i_7 * 4;
  _2 = Value_12(D) + _1;
  _3 = *_2;
  DiffTmpVal1_15 = _3 & 1;
  # DEBUG DiffTmpVal1 => DiffTmpVal1_15
  # DEBUG BEGIN_STMT
  _4 = _3 >> 1;
  # DEBUG BEGIN_STMT
  _5 = DiffTmpVal2_8 << 31;
  _6 = _4 | _5;
  *_2 = _6;
  # DEBUG BEGIN_STMT
  # DEBUG DiffTmpVal2 => DiffTmpVal1_15
  # DEBUG BEGIN_STMT
  i_17 = i_7 + 4294967295;
  # DEBUG i => i_17

  <bb 4> [local count: 1073741824]:
  # i_7 = PHI <i_13(2), i_17(3)>
  # DiffTmpVal2_8 = PHI <Overflow_10(D)(2), DiffTmpVal1_15(3)>
  # DEBUG DiffTmpVal2 => DiffTmpVal2_8
  # DEBUG i => i_7
  # DEBUG BEGIN_STMT
  if (i_7 != 0)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Value_12(D));
  return;

}


Crypto_LNNumberToLEByteArray (const Crypto_LNWordType * Number, uint8 * Array, uint32 * ArrayLengthPtr)
{
  Std_ReturnType RetVal;
  Crypto_LNWordType ArrayPos;
  Crypto_LNWordType WordPos;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  const Crypto_LNWordType * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  uint8 * _9;
  unsigned char _10;
  long unsigned int _11;
  long unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  long unsigned int _15;

  <bb 2> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _1 = *ArrayLengthPtr_24(D);
  _2 = _1 >> 2;
  _3 = *Number_25(D);
  if (_2 < _3)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 26541932]:
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  # DEBUG ArrayPos => NumberPos_16
  # DEBUG BEGIN_STMT
  ArrayPos_27 = NumberPos_16 + 4294967295;
  # DEBUG ArrayPos => ArrayPos_27
  # DEBUG BEGIN_STMT
  ArrayPos_28 = ArrayPos_27 * 4;
  # DEBUG ArrayPos => ArrayPos_28
  # DEBUG BEGIN_STMT
  # DEBUG WordPos => 0
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  _4 = NumberPos_16 * 4;
  _5 = Number_25(D) + _4;
  _6 = *_5;
  _7 = WordPos_17 << 3;
  _8 = _6 >> _7;
  _9 = Array_30(D) + ArrayPos_18;
  _10 = (unsigned char) _8;
  *_9 = _10;
  # DEBUG BEGIN_STMT
  ArrayPos_32 = ArrayPos_18 + 1;
  # DEBUG ArrayPos => ArrayPos_32
  # DEBUG BEGIN_STMT
  WordPos_33 = WordPos_17 + 1;
  # DEBUG WordPos => WordPos_33

  <bb 5> [local count: 1073741824]:
  # WordPos_17 = PHI <0(3), WordPos_33(4)>
  # ArrayPos_18 = PHI <ArrayPos_28(3), ArrayPos_32(4)>
  # DEBUG ArrayPos => ArrayPos_18
  # DEBUG WordPos => WordPos_17
  # DEBUG BEGIN_STMT
  if (WordPos_17 != 4)
    goto <bb 4>; [80.00%]
  else
    goto <bb 6>; [20.00%]

  <bb 6> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  NumberPos_29 = NumberPos_16 + 1;
  # DEBUG NumberPos => NumberPos_29

  <bb 7> [local count: 241290297]:
  # NumberPos_16 = PHI <NumberPos_29(6), 1(10)>
  # DEBUG NumberPos => NumberPos_16
  # DEBUG BEGIN_STMT
  _11 = *Number_25(D);
  if (_11 >= NumberPos_16)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 26541933]:
  # _12 = PHI <_11(7)>
  # DEBUG BEGIN_STMT
  _13 = (short unsigned int) _12;
  _14 = _13 * 4;
  _15 = (long unsigned int) _14;
  *ArrayLengthPtr_24(D) = _15;

  <bb 9> [local count: 53083865]:
  # RetVal_19 = PHI <1(2), 0(8)>
  # DEBUG RetVal => RetVal_19
  # DEBUG BEGIN_STMT
  return RetVal_19;

}


Crypto_LNLEByteArrayToNumber (const uint8 * Array, uint32 ArrayLength, Crypto_LNWordType * Number, Crypto_LNWordType NumberLength)
{
  Std_ReturnType RetVal;
  uint16 ArrayPos;
  Crypto_LNWordType WordPos;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  Crypto_LNWordType * _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  const uint8 * _11;
  unsigned char _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;

  <bb 2> [local count: 106167728]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  if (ArrayLength_26(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 3> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  _1 = ArrayLength_26(D) + 4294967295;
  _2 = _1 >> 2;
  _3 = _2 + 2;
  if (_3 > NumberLength_27(D))
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 26541932]:
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  _4 = NumberPos_19 * 4;
  _5 = Number_29(D) + _4;
  *_5 = 0;
  # DEBUG BEGIN_STMT
  # DEBUG WordPos => 0
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  # DEBUG ArrayPos => 4
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) NumberPos_19;
  _7 = _6 + 65535;
  ArrayPos_35 = _7 * 4;
  # DEBUG ArrayPos => ArrayPos_35
  # DEBUG BEGIN_STMT
  _8 = (short unsigned int) WordPos_20;
  ArrayPos_36 = _8 + ArrayPos_35;
  # DEBUG ArrayPos => ArrayPos_36
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) ArrayPos_36;
  if (_9 < ArrayLength_26(D))
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 429496730]:
  # DEBUG BEGIN_STMT
  _10 = *_5;
  _11 = Array_37(D) + _9;
  _12 = *_11;
  _13 = (long unsigned int) _12;
  _14 = WordPos_20 << 3;
  _15 = _13 << _14;
  _16 = _10 | _15;
  *_5 = _16;

  <bb 7> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  WordPos_39 = WordPos_20 + 1;
  # DEBUG WordPos => WordPos_39

  <bb 8> [local count: 1073741824]:
  # WordPos_20 = PHI <0(4), WordPos_39(7)>
  # DEBUG WordPos => WordPos_20
  # DEBUG BEGIN_STMT
  if (WordPos_20 != 4)
    goto <bb 5>; [80.00%]
  else
    goto <bb 9>; [20.00%]

  <bb 9> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  NumberPos_34 = NumberPos_19 + 1;
  # DEBUG NumberPos => NumberPos_34

  <bb 10> [local count: 241290297]:
  # NumberPos_19 = PHI <NumberPos_34(9), 1(15)>
  # DEBUG NumberPos => NumberPos_19
  # DEBUG BEGIN_STMT
  _18 = _2 + 1;
  if (_18 >= NumberPos_19)
    goto <bb 4>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 26541933]:
  # _17 = PHI <_18(10)>
  # DEBUG BEGIN_STMT
  *Number_29(D) = _17;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Number_29(D));
  goto <bb 14>; [100.00%]

  <bb 12> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  if (NumberLength_27(D) == 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 26541932]:
  # DEBUG BEGIN_STMT
  *Number_29(D) = 0;

  <bb 14> [local count: 106167729]:
  # RetVal_21 = PHI <0(11), 1(12), 0(13), 1(3)>
  # DEBUG RetVal => RetVal_21
  # DEBUG BEGIN_STMT
  return RetVal_21;

}


Crypto_LNNumberToBEByteArray (const Crypto_LNWordType * Number, uint8 * Array, uint32 * ArrayLengthPtr)
{
  Std_ReturnType RetVal;
  Crypto_LNWordType ArrayPos;
  Crypto_LNWordType WordPos;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  const Crypto_LNWordType * _5;
  long unsigned int _6;
  unsigned char _7;
  unsigned char _8;
  int _9;
  long unsigned int _10;
  uint8 * _11;
  unsigned char _12;
  long unsigned int _13;
  long unsigned int _14;
  short unsigned int _15;
  short unsigned int _16;
  long unsigned int _17;

  <bb 2> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _1 = *ArrayLengthPtr_26(D);
  _2 = _1 >> 2;
  _3 = *Number_27(D);
  if (_2 < _3)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 26541932]:
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  # DEBUG ArrayPos => _13
  # DEBUG BEGIN_STMT
  ArrayPos_29 = _13 - NumberPos_18;
  # DEBUG ArrayPos => ArrayPos_29
  # DEBUG BEGIN_STMT
  ArrayPos_30 = ArrayPos_29 + 1;
  # DEBUG ArrayPos => ArrayPos_30
  # DEBUG BEGIN_STMT
  ArrayPos_31 = ArrayPos_30 * 4;
  # DEBUG ArrayPos => ArrayPos_31
  # DEBUG BEGIN_STMT
  # DEBUG WordPos => 0
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  ArrayPos_33 = ArrayPos_20 + 4294967295;
  # DEBUG ArrayPos => ArrayPos_33
  # DEBUG BEGIN_STMT
  _4 = NumberPos_18 * 4;
  _5 = Number_27(D) + _4;
  _6 = *_5;
  _7 = (unsigned char) WordPos_19;
  _8 = _7 << 3;
  _9 = (int) _8;
  _10 = _6 >> _9;
  _11 = Array_34(D) + ArrayPos_33;
  _12 = (unsigned char) _10;
  *_11 = _12;
  # DEBUG BEGIN_STMT
  WordPos_36 = WordPos_19 + 1;
  # DEBUG WordPos => WordPos_36

  <bb 5> [local count: 1073741824]:
  # WordPos_19 = PHI <0(3), WordPos_36(4)>
  # ArrayPos_20 = PHI <ArrayPos_31(3), ArrayPos_33(4)>
  # DEBUG ArrayPos => ArrayPos_20
  # DEBUG WordPos => WordPos_19
  # DEBUG BEGIN_STMT
  if (WordPos_19 != 4)
    goto <bb 4>; [80.00%]
  else
    goto <bb 6>; [20.00%]

  <bb 6> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  NumberPos_32 = NumberPos_18 + 1;
  # DEBUG NumberPos => NumberPos_32

  <bb 7> [local count: 241290297]:
  # NumberPos_18 = PHI <NumberPos_32(6), 1(10)>
  # DEBUG NumberPos => NumberPos_18
  # DEBUG BEGIN_STMT
  _13 = *Number_27(D);
  if (_13 >= NumberPos_18)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 26541933]:
  # _14 = PHI <_13(7)>
  # DEBUG BEGIN_STMT
  _15 = (short unsigned int) _14;
  _16 = _15 * 4;
  _17 = (long unsigned int) _16;
  *ArrayLengthPtr_26(D) = _17;

  <bb 9> [local count: 53083865]:
  # RetVal_21 = PHI <1(2), 0(8)>
  # DEBUG RetVal => RetVal_21
  # DEBUG BEGIN_STMT
  return RetVal_21;

}


Crypto_LNBEByteArrayToNumber (const uint8 * Array, uint32 ArrayLength, Crypto_LNWordType * Number, Crypto_LNWordType NumberLength)
{
  Std_ReturnType RetVal;
  uint32 ArrayPos;
  Crypto_LNWordType WordPos;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  Crypto_LNWordType * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  const uint8 * _9;
  unsigned char _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;

  <bb 2> [local count: 106167728]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  if (ArrayLength_24(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 3> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  _1 = ArrayLength_24(D) + 4294967295;
  _2 = _1 >> 2;
  _3 = _2 + 2;
  if (_3 > NumberLength_25(D))
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 26541932]:
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 214748364]:
  # DEBUG BEGIN_STMT
  _4 = NumberPos_17 * 4;
  _5 = Number_27(D) + _4;
  *_5 = 0;
  # DEBUG BEGIN_STMT
  # DEBUG WordPos => 0
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  # DEBUG ArrayPos => 4
  # DEBUG BEGIN_STMT
  _6 = NumberPos_17 + 4294967295;
  ArrayPos_33 = _6 * 4;
  # DEBUG ArrayPos => ArrayPos_33
  # DEBUG BEGIN_STMT
  ArrayPos_34 = WordPos_18 + ArrayPos_33;
  # DEBUG ArrayPos => ArrayPos_34
  # DEBUG BEGIN_STMT
  _7 = ArrayLength_24(D) - ArrayPos_34;
  ArrayPos_35 = _7 + 4294967295;
  # DEBUG ArrayPos => ArrayPos_35
  # DEBUG BEGIN_STMT
  if (ArrayLength_24(D) > ArrayPos_35)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 429496730]:
  # DEBUG BEGIN_STMT
  _8 = *_5;
  _9 = Array_36(D) + ArrayPos_35;
  _10 = *_9;
  _11 = (long unsigned int) _10;
  _12 = WordPos_18 << 3;
  _13 = _11 << _12;
  _14 = _8 | _13;
  *_5 = _14;

  <bb 7> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  WordPos_38 = WordPos_18 + 1;
  # DEBUG WordPos => WordPos_38

  <bb 8> [local count: 1073741824]:
  # WordPos_18 = PHI <0(4), WordPos_38(7)>
  # DEBUG WordPos => WordPos_18
  # DEBUG BEGIN_STMT
  if (WordPos_18 != 4)
    goto <bb 5>; [80.00%]
  else
    goto <bb 9>; [20.00%]

  <bb 9> [local count: 214748365]:
  # DEBUG BEGIN_STMT
  NumberPos_32 = NumberPos_17 + 1;
  # DEBUG NumberPos => NumberPos_32

  <bb 10> [local count: 241290297]:
  # NumberPos_17 = PHI <NumberPos_32(9), 1(15)>
  # DEBUG NumberPos => NumberPos_17
  # DEBUG BEGIN_STMT
  _16 = _2 + 1;
  if (_16 >= NumberPos_17)
    goto <bb 4>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 26541933]:
  # _15 = PHI <_16(10)>
  # DEBUG BEGIN_STMT
  *Number_27(D) = _15;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Number_27(D));
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  goto <bb 14>; [100.00%]

  <bb 12> [local count: 53083864]:
  # DEBUG BEGIN_STMT
  if (NumberLength_25(D) == 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 26541932]:
  # DEBUG BEGIN_STMT
  *Number_27(D) = 0;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 14> [local count: 106167729]:
  # RetVal_19 = PHI <0(11), 1(12), 0(13), 1(3)>
  # DEBUG RetVal => RetVal_19
  # DEBUG BEGIN_STMT
  return RetVal_19;

}


Crypto_LNModulo (Crypto_LNWordType * Number, const Crypto_LNWordType * Modulus, struct Crypto_LNCtxType * CtxPtr)
{
  uint32 LengthOfMod;
  uint32 LengthOfNum;
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 352571941]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LengthOfNum_6 = Crypto_LNBitLengthOfNumber (Number_4(D));
  # DEBUG LengthOfNum => LengthOfNum_6
  # DEBUG BEGIN_STMT
  LengthOfMod_9 = Crypto_LNBitLengthOfNumber (Modulus_7(D));
  # DEBUG LengthOfMod => LengthOfMod_9
  # DEBUG BEGIN_STMT
  if (LengthOfMod_9 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 176285970]:
  # DEBUG BEGIN_STMT
  *Number_4(D) = 0;
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 176285970]:
  # DEBUG BEGIN_STMT
  if (LengthOfNum_6 >= LengthOfMod_9)
    goto <bb 5>; [67.00%]
  else
    goto <bb 6>; [33.00%]

  <bb 5> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _1 = LengthOfNum_6 - LengthOfMod_9;
  _2 = _1 + 1;
  CtxPtr_11(D)->LengthDifference = _2;
  Crypto_LNModulo.part.0 (Number_4(D), Modulus_7(D), CtxPtr_11(D));
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 58174370]:
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Number_4(D));

  <bb 7> [local count: 352571941]:
  return;

}


Crypto_LNCompareNumbers (const Crypto_LNWordType * Number1, const Crypto_LNWordType * Number2)
{
  Crypto_ReturnType Compare;
  Crypto_LNWordType NumberPos;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  const Crypto_LNWordType * _4;
  long unsigned int _5;
  const Crypto_LNWordType * _6;
  long unsigned int _7;

  <bb 2> [local count: 271866348]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = *Number1_13(D);
  _2 = *Number2_14(D);
  if (_1 > _2)
    goto <bb 10>; [35.00%]
  else
    goto <bb 3>; [65.00%]

  <bb 3> [local count: 176713126]:
  # DEBUG BEGIN_STMT
  if (_1 < _2)
    goto <bb 10>; [35.00%]
  else
    goto <bb 11>; [65.00%]

  <bb 11> [local count: 114863532]:
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 958878294]:
  # DEBUG BEGIN_STMT
  _3 = NumberPos_8 * 4;
  _4 = Number1_13(D) + _3;
  _5 = *_4;
  _6 = Number2_14(D) + _3;
  _7 = *_6;
  if (_5 > _7)
    goto <bb 7>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 479439147]:
  # DEBUG BEGIN_STMT
  if (_5 < _7)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 239719573]:
  # DEBUG BEGIN_STMT
  # DEBUG Compare => 4

  <bb 7> [local count: 958878294]:
  # Compare_9 = PHI <5(4), 2(5), 4(6)>
  # DEBUG Compare => Compare_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NumberPos_15 = NumberPos_8 + 4294967295;
  # DEBUG NumberPos => NumberPos_15

  <bb 8> [local count: 1073741824]:
  # NumberPos_8 = PHI <NumberPos_15(7), _1(11)>
  # Compare_10 = PHI <Compare_9(7), 2(11)>
  # DEBUG Compare => Compare_10
  # DEBUG NumberPos => NumberPos_8
  # DEBUG BEGIN_STMT
  if (NumberPos_8 != 0)
    goto <bb 9>; [94.50%]
  else
    goto <bb 10>; [5.50%]

  <bb 9> [local count: 1014686025]:
  if (Compare_10 == 2)
    goto <bb 4>; [94.50%]
  else
    goto <bb 10>; [5.50%]

  <bb 10> [local count: 271866348]:
  # Compare_11 = PHI <5(2), 4(3), Compare_10(8), Compare_10(9)>
  # DEBUG Compare => Compare_11
  # DEBUG BEGIN_STMT
  return Compare_11;

}


Crypto_LNSubtraction (Crypto_LNWordType * Result, const Crypto_LNWordType * Minuend, const Crypto_LNWordType * Subtrahend)
{
  Crypto_LNWordType Borrow;
  Crypto_LNWordType LoopCount;
  Crypto_LNDoubleWordType TempDifference;
  long unsigned int _1;
  const Crypto_LNWordType * _2;
  long unsigned int _3;
  long long unsigned int _4;
  const Crypto_LNWordType * _6;
  long unsigned int _7;
  long long unsigned int _8;
  long long unsigned int _9;
  long long unsigned int _10;
  long long unsigned int _11;
  long unsigned int _12;
  Crypto_LNWordType * _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  const Crypto_LNWordType * _17;
  long unsigned int _18;
  long long unsigned int _19;
  long long unsigned int _20;
  long long unsigned int _21;
  long unsigned int _22;
  Crypto_LNWordType * _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Borrow => 0
  # DEBUG BEGIN_STMT
  # DEBUG LoopCount => 1
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630220]:
  # DEBUG BEGIN_STMT
  _1 = LoopCount_27 * 4;
  _2 = Minuend_35(D) + _1;
  _3 = *_2;
  _4 = (long long unsigned int) _3;
  _6 = Subtrahend_34(D) + _1;
  _7 = *_6;
  _8 = (long long unsigned int) _7;
  _9 = _4 - _8;
  _10 = (long long unsigned int) Borrow_29;
  TempDifference_43 = _9 - _10;
  # DEBUG TempDifference => TempDifference_43
  # DEBUG BEGIN_STMT
  _11 = TempDifference_43 >> 32;
  _12 = (long unsigned int) _11;
  Borrow_44 = _12 & 1;
  # DEBUG Borrow => Borrow_44
  # DEBUG BEGIN_STMT
  _13 = Result_36(D) + _1;
  _14 = (long unsigned int) TempDifference_43;
  *_13 = _14;
  # DEBUG BEGIN_STMT
  LoopCount_46 = LoopCount_27 + 1;
  # DEBUG LoopCount => LoopCount_46

  <bb 4> [local count: 1073741821]:
  # LoopCount_27 = PHI <1(2), LoopCount_46(3)>
  # Borrow_29 = PHI <0(2), Borrow_44(3)>
  # DEBUG Borrow => Borrow_29
  # DEBUG LoopCount => LoopCount_27
  # DEBUG BEGIN_STMT
  _15 = *Subtrahend_34(D);
  if (_15 >= LoopCount_27)
    goto <bb 3>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111600]:
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _16 = LoopCount_28 * 4;
  _17 = Minuend_35(D) + _16;
  _18 = *_17;
  _19 = (long long unsigned int) _18;
  _20 = (long long unsigned int) Borrow_30;
  TempDifference_39 = _19 - _20;
  # DEBUG TempDifference => TempDifference_39
  # DEBUG BEGIN_STMT
  _21 = TempDifference_39 >> 32;
  _22 = (long unsigned int) _21;
  Borrow_40 = _22 & 1;
  # DEBUG Borrow => Borrow_40
  # DEBUG BEGIN_STMT
  _23 = Result_36(D) + _16;
  _24 = _18 - Borrow_30;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  LoopCount_42 = LoopCount_28 + 1;
  # DEBUG LoopCount => LoopCount_42

  <bb 7> [local count: 1073741824]:
  # LoopCount_28 = PHI <LoopCount_42(6), LoopCount_27(9)>
  # Borrow_30 = PHI <Borrow_40(6), Borrow_29(9)>
  # DEBUG Borrow => Borrow_30
  # DEBUG LoopCount => LoopCount_28
  # DEBUG BEGIN_STMT
  _25 = *Minuend_35(D);
  if (_25 >= LoopCount_28)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111601]:
  # LoopCount_5 = PHI <LoopCount_28(7)>
  # DEBUG BEGIN_STMT
  _26 = LoopCount_5 + 4294967295;
  *Result_36(D) = _26;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Result_36(D));
  return;

}


Crypto_LNMontgomeryReduction (Crypto_LNWordType * Remainder, const Crypto_LNWordType * Number, const Crypto_LNWordType * Modulo, Crypto_LNWordType Rho)
{
  Crypto_LNDoubleWordType Temp;
  Crypto_LNWordType Pa;
  Crypto_LNWordType * DestPtr;
  Crypto_LNWordType * CPtr;
  Crypto_LNWordType Carry;
  Crypto_LNWordType OldUsed;
  Crypto_LNWordType y;
  Crypto_LNWordType x;
  Crypto_LNWordType Mu;
  long unsigned int _1;
  const Crypto_LNWordType * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long long unsigned int _7;
  long long unsigned int _8;
  long long unsigned int _9;
  long long unsigned int _10;
  sizetype _11;
  sizetype _12;
  const Crypto_LNWordType * _13;
  long unsigned int _14;
  long long unsigned int _15;
  long long unsigned int _16;
  long unsigned int _17;
  long long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  _Bool _21;
  long unsigned int _22;
  Crypto_LNWordType * _23;
  Crypto_LNWordType * _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  Crypto_LNWordType * _29;
  long unsigned int _30;
  unsigned char _31;

  <bb 2> [local count: 14598061]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Pa_50 = *Modulo_49(D);
  # DEBUG Pa => Pa_50
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (&Crypto_MontgomeryReductionC, 36);
  # DEBUG BEGIN_STMT
  OldUsed_53 = *Number_52(D);
  # DEBUG OldUsed => OldUsed_53
  # DEBUG BEGIN_STMT
  # DEBUG x => 1
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 118111589]:
  # DEBUG BEGIN_STMT
  _1 = x_32 * 4;
  _2 = Number_52(D) + _1;
  _3 = x_32 + 4294967295;
  _4 = *_2;
  Crypto_MontgomeryReductionC[_3] = _4;
  # DEBUG BEGIN_STMT
  x_76 = x_32 + 1;
  # DEBUG x => x_76

  <bb 4> [local count: 132709650]:
  # x_32 = PHI <1(2), x_76(3)>
  # DEBUG x => x_32
  # DEBUG BEGIN_STMT
  if (x_32 <= OldUsed_53)
    goto <bb 3>; [89.00%]
  else
    goto <bb 22>; [11.00%]

  <bb 22> [local count: 14598062]:
  goto <bb 12>; [100.00%]

  <bb 5> [local count: 118111599]:
  # DEBUG BEGIN_STMT
  # DEBUG Carry => 0
  # DEBUG BEGIN_STMT
  _5 = Crypto_MontgomeryReductionC[x_33];
  Mu_65 = _5 * Rho_64(D);
  # DEBUG Mu => Mu_65
  # DEBUG BEGIN_STMT
  CPtr_66 = &Crypto_MontgomeryReductionC[x_33];
  # DEBUG CPtr => CPtr_66
  # DEBUG BEGIN_STMT
  # DEBUG y => 0
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 955630217]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = *CPtr_39;
  _7 = (long long unsigned int) _6;
  _8 = (long long unsigned int) Carry_37;
  _9 = _7 + _8;
  _10 = (long long unsigned int) Mu_65;
  _11 = y_36 + 1;
  _12 = _11 * 4;
  _13 = Modulo_49(D) + _12;
  _14 = *_13;
  _15 = (long long unsigned int) _14;
  _16 = _10 * _15;
  Temp_71 = _9 + _16;
  # DEBUG Temp => Temp_71
  # DEBUG BEGIN_STMT
  _17 = (long unsigned int) Temp_71;
  *CPtr_39 = _17;
  # DEBUG BEGIN_STMT
  _18 = Temp_71 >> 32;
  Carry_73 = (Crypto_LNWordType) _18;
  # DEBUG Carry => Carry_73
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CPtr_74 = CPtr_39 + 4;
  # DEBUG CPtr => CPtr_74
  # DEBUG BEGIN_STMT
  # DEBUG y => _11

  <bb 7> [local count: 1073741818]:
  # y_36 = PHI <0(5), _11(6)>
  # Carry_37 = PHI <0(5), Carry_73(6)>
  # CPtr_39 = PHI <CPtr_66(5), CPtr_74(6)>
  # DEBUG CPtr => CPtr_39
  # DEBUG Carry => Carry_37
  # DEBUG y => y_36
  # DEBUG BEGIN_STMT
  if (y_36 < Pa_50)
    goto <bb 6>; [89.00%]
  else
    goto <bb 23>; [11.00%]

  <bb 23> [local count: 118111600]:
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _19 = *CPtr_40;
  _20 = _19 + Carry_38;
  *CPtr_40 = _20;
  # DEBUG BEGIN_STMT
  # DEBUG Temp => _20
  # DEBUG BEGIN_STMT
  _21 = _20 < Carry_38;
  Carry_69 = (Crypto_LNWordType) _21;
  # DEBUG Carry => Carry_69
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CPtr_70 = CPtr_40 + 4;
  # DEBUG CPtr => CPtr_70

  <bb 10> [local count: 1073741824]:
  # Carry_38 = PHI <Carry_69(9), Carry_37(23)>
  # CPtr_40 = PHI <CPtr_70(9), CPtr_39(23)>
  # DEBUG CPtr => CPtr_40
  # DEBUG Carry => Carry_38
  # DEBUG BEGIN_STMT
  if (Carry_38 != 0)
    goto <bb 9>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  x_67 = x_33 + 1;
  # DEBUG x => x_67

  <bb 12> [local count: 132709662]:
  # x_33 = PHI <x_67(11), 0(22)>
  # DEBUG x => x_33
  # DEBUG BEGIN_STMT
  if (x_33 < Pa_50)
    goto <bb 5>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 14598063]:
  # DEBUG BEGIN_STMT
  CPtr_54 = &Crypto_MontgomeryReductionC[Pa_50];
  # DEBUG CPtr => CPtr_54
  # DEBUG BEGIN_STMT
  DestPtr_56 = Remainder_55(D) + 4;
  # DEBUG DestPtr => DestPtr_56
  # DEBUG BEGIN_STMT
  # DEBUG x => 0
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _22 = x_34 * 4;
  _23 = CPtr_54 + _22;
  _25 = DestPtr_56 + _22;
  _26 = *_23;
  *_25 = _26;
  # DEBUG BEGIN_STMT
  x_63 = x_34 + 1;
  # DEBUG x => x_63

  <bb 15> [local count: 132709663]:
  # x_34 = PHI <0(13), x_63(14)>
  # DEBUG x => x_34
  # DEBUG BEGIN_STMT
  _27 = Pa_50 + 1;
  if (_27 > x_34)
    goto <bb 14>; [89.00%]
  else
    goto <bb 16>; [11.00%]

  <bb 16> [local count: 14598063]:
  # _30 = PHI <_27(15)>
  # x_24 = PHI <x_34(15)>
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _28 = x_35 * 4;
  _29 = DestPtr_56 + _28;
  *_29 = 0;
  # DEBUG BEGIN_STMT
  x_61 = x_35 + 1;
  # DEBUG x => x_61

  <bb 18> [local count: 132709663]:
  # x_35 = PHI <x_61(17), x_24(16)>
  # DEBUG x => x_35
  # DEBUG BEGIN_STMT
  if (x_35 < OldUsed_53)
    goto <bb 17>; [89.00%]
  else
    goto <bb 19>; [11.00%]

  <bb 19> [local count: 14598063]:
  # DEBUG BEGIN_STMT
  *Remainder_55(D) = _30;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (Remainder_55(D));
  # DEBUG BEGIN_STMT
  _31 = Crypto_LNCompareNumbers (Remainder_55(D), Modulo_49(D));
  if (_31 != 4)
    goto <bb 20>; [48.88%]
  else
    goto <bb 21>; [51.12%]

  <bb 20> [local count: 7135533]:
  # DEBUG BEGIN_STMT
  Crypto_LNSubtraction (Remainder_55(D), Remainder_55(D), Modulo_49(D));

  <bb 21> [local count: 14598063]:
  return;

}


Crypto_LNMontgomeryNormalization (Crypto_LNWordType * Result, const Crypto_LNWordType * Modulo)
{
  Crypto_LNWordType WordOffset;
  uint32 Exponent;
  Crypto_LNWordType x;
  uint32 Bits;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  Crypto_LNWordType * _7;
  long unsigned int _8;
  long unsigned int _9;
  _Bool _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  Crypto_LNWordType * _14;
  long unsigned int _15;
  unsigned char _16;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Crypto_LNBitLengthOfNumber (Modulo_26(D));
  Bits_27 = _1 & 31;
  # DEBUG Bits => Bits_27
  # DEBUG BEGIN_STMT
  if (Bits_27 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  # DEBUG Bits => 32

  <bb 4> [local count: 118111600]:
  # Bits_17 = PHI <Bits_27(2), 32(3)>
  # DEBUG Bits => Bits_17
  # DEBUG BEGIN_STMT
  _2 = *Modulo_26(D);
  if (_2 > 1)
    goto <bb 5>; [59.00%]
  else
    goto <bb 9>; [41.00%]

  <bb 5> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  _3 = _2 + 4294967295;
  _4 = _3 * 32;
  _5 = _4 + Bits_17;
  Exponent_31 = _5 + 4294967295;
  # DEBUG Exponent => Exponent_31
  # DEBUG BEGIN_STMT
  # DEBUG x => 1
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 563821832]:
  # DEBUG BEGIN_STMT
  _6 = x_19 * 4;
  _7 = Result_28(D) + _6;
  *_7 = 0;
  # DEBUG BEGIN_STMT
  x_36 = x_19 + 1;
  # DEBUG x => x_36

  <bb 7> [local count: 633507676]:
  # x_19 = PHI <1(5), x_36(6)>
  # DEBUG x => x_19
  # DEBUG BEGIN_STMT
  _8 = *Result_28(D);
  if (_8 >= x_19)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = Exponent_31 & 31;
  _10 = _9 != 0;
  # DEBUG Carry => (uint8) _10
  # DEBUG BEGIN_STMT
  WordOffset_32 = Exponent_31 >> 5;
  # DEBUG WordOffset => WordOffset_32
  # DEBUG BEGIN_STMT
  _11 = (long unsigned int) _10;
  _12 = _11 + WordOffset_32;
  _13 = _12 * 4;
  _14 = Result_28(D) + _13;
  _15 = 1 << _9;
  *_14 = _15;
  # DEBUG BEGIN_STMT
  *Result_28(D) = _12;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 48425756]:
  # DEBUG BEGIN_STMT
  *Result_28(D) = 1;
  # DEBUG BEGIN_STMT
  MEM[(Crypto_LNWordType *)Result_28(D) + 4B] = 1;
  # DEBUG BEGIN_STMT
  # DEBUG Bits => 1

  <bb 10> [local count: 118111600]:
  # Bits_18 = PHI <Bits_17(8), 1(9)>
  # DEBUG Bits => Bits_18
  # DEBUG BEGIN_STMT
  x_37 = Bits_18 + 4294967295;
  # DEBUG x => x_37
  goto <bb 14>; [100.00%]

  <bb 11> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  Crypto_LNMultByTwo (Result_28(D), Result_28(D));
  # DEBUG BEGIN_STMT
  _16 = Crypto_LNCompareNumbers (Result_28(D), Modulo_26(D));
  if (_16 != 4)
    goto <bb 12>; [48.88%]
  else
    goto <bb 13>; [51.12%]

  <bb 12> [local count: 467112053]:
  # DEBUG BEGIN_STMT
  Crypto_LNSubtraction (Result_28(D), Result_28(D), Modulo_26(D));

  <bb 13> [local count: 955630226]:
  # DEBUG BEGIN_STMT
  x_40 = x_20 + 1;
  # DEBUG x => x_40

  <bb 14> [local count: 1073741824]:
  # x_20 = PHI <x_37(10), x_40(13)>
  # DEBUG x => x_20
  # DEBUG BEGIN_STMT
  if (x_20 <= 31)
    goto <bb 11>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 15> [local count: 118111601]:
  return;

}


Crypto_LNMontgomerySetup (const Crypto_LNWordType * Modulo, Crypto_LNWordType * Rho)
{
  Crypto_LNWordType B;
  Crypto_LNWordType X;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  B_13 = MEM[(const Crypto_LNWordType *)Modulo_12(D) + 4B];
  # DEBUG B => B_13
  # DEBUG BEGIN_STMT
  _1 = B_13 + 2;
  _2 = _1 << 1;
  _3 = _2 & 8;
  X_14 = _3 + B_13;
  # DEBUG X => X_14
  # DEBUG BEGIN_STMT
  _4 = B_13 * X_14;
  _5 = 2 - _4;
  X_15 = _5 * X_14;
  # DEBUG X => X_15
  # DEBUG BEGIN_STMT
  _6 = B_13 * X_15;
  _7 = 2 - _6;
  X_16 = _7 * X_15;
  # DEBUG X => X_16
  # DEBUG BEGIN_STMT
  _8 = B_13 * X_16;
  _9 = 2 - _8;
  X_17 = _9 * X_16;
  # DEBUG X => X_17
  # DEBUG BEGIN_STMT
  _10 = -X_17;
  *Rho_18(D) = _10;
  return;

}


Crypto_LNMultByTwo (Crypto_LNWordType * Result, Crypto_LNWordType * Number)
{
  Crypto_LNWordType * DestPtr;
  Crypto_LNWordType NextCarry;
  Crypto_LNWordType Carry;
  Crypto_LNWordType OldUsed;
  Crypto_LNWordType x;
  long unsigned int _1;
  long unsigned int _2;
  Crypto_LNWordType * _3;
  long unsigned int _4;
  sizetype _6;
  long unsigned int _7;
  Crypto_LNWordType * _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  Crypto_LNWordType * _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  sizetype _16;
  Crypto_LNWordType * _17;
  sizetype _30;
  sizetype _31;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OldUsed_26 = *Result_25(D);
  # DEBUG OldUsed => OldUsed_26
  # DEBUG BEGIN_STMT
  _1 = *Number_27(D);
  *Result_25(D) = _1;
  # DEBUG BEGIN_STMT
  # DEBUG SrcPtr => Number_27(D) + 4
  # DEBUG BEGIN_STMT
  DestPtr_29 = Result_25(D) + 4;
  # DEBUG DestPtr => DestPtr_29
  # DEBUG BEGIN_STMT
  # DEBUG Carry => 0
  # DEBUG BEGIN_STMT
  # DEBUG x => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630220]:
  # DEBUG BEGIN_STMT
  _2 = x_18 * 4;
  _6 = _2 + 4;
  _3 = Number_27(D) + _6;
  _4 = *_3;
  NextCarry_37 = _4 >> 31;
  # DEBUG NextCarry => NextCarry_37
  # DEBUG BEGIN_STMT
  _7 = _4 << 1;
  _8 = DestPtr_29 + _2;
  _9 = _7 | Carry_20;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  # DEBUG Carry => NextCarry_37
  # DEBUG BEGIN_STMT
  x_39 = x_18 + 1;
  # DEBUG x => x_39

  <bb 4> [local count: 1073741821]:
  # x_18 = PHI <0(2), x_39(3)>
  # Carry_20 = PHI <0(2), NextCarry_37(3)>
  # DEBUG Carry => Carry_20
  # DEBUG x => x_18
  # DEBUG BEGIN_STMT
  _10 = *Number_27(D);
  if (_10 > x_18)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  # x_34 = PHI <x_18(4)>
  # Carry_5 = PHI <Carry_20(4)>
  # DEBUG BEGIN_STMT
  if (Carry_5 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _11 = x_34 * 4;
  _12 = DestPtr_29 + _11;
  *_12 = 1;
  # DEBUG BEGIN_STMT
  _13 = *Result_25(D);
  _14 = _13 + 1;
  *Result_25(D) = _14;

  <bb 7> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _15 = *Result_25(D);
  _16 = _15 + 1;
  # DEBUG D#1 => _16 * 4
  # DEBUG DestPtr => Result_25(D) + D#1
  # DEBUG BEGIN_STMT
  # DEBUG x => _15
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _30 = _16 + x_19;
  _31 = _30 * 4;
  _17 = Result_25(D) + _31;
  *_17 = 0;
  # DEBUG BEGIN_STMT
  x_36 = x_19 + 1;
  # DEBUG x => x_36

  <bb 9> [local count: 1073741824]:
  # x_19 = PHI <_15(7), x_36(8)>
  # DEBUG x => x_19
  # DEBUG BEGIN_STMT
  if (x_19 < OldUsed_26)
    goto <bb 8>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  return;

}


Crypto_LNMultiplyNumbers (Crypto_LNWordType * Result, const Crypto_LNWordType * Multiplicand, const Crypto_LNWordType * Multiplicator, struct Crypto_LNCtxType * CtxPtr)
{
  Crypto_LNDoubleWordType Temp;
  Crypto_LNWordType C2;
  Crypto_LNWordType C1;
  Crypto_LNWordType C0;
  Crypto_LNWordType ProdLen;
  Crypto_LNWordType MultiplicatorLength;
  Crypto_LNWordType MultiplicandLength;
  Crypto_LNWordType Ty;
  Crypto_LNWordType Tx;
  Crypto_LNWordType NumMultiplications;
  Crypto_LNWordType j;
  Crypto_LNWordType i;
  Crypto_LNWordType[47] * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long long unsigned int _5;
  long unsigned int _6;
  sizetype _7;
  sizetype _8;
  const Crypto_LNWordType * _9;
  long unsigned int _10;
  long long unsigned int _11;
  long unsigned int _12;
  sizetype _13;
  sizetype _14;
  const Crypto_LNWordType * _15;
  long unsigned int _16;
  long long unsigned int _17;
  long long unsigned int _18;
  long long unsigned int _19;
  long long unsigned int _20;
  long long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _44;

  <bb 2> [local count: 14598062]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MultiplicandLength_40 = *Multiplicand_39(D);
  # DEBUG MultiplicandLength => MultiplicandLength_40
  # DEBUG BEGIN_STMT
  MultiplicatorLength_42 = *Multiplicator_41(D);
  # DEBUG MultiplicatorLength => MultiplicatorLength_42
  # DEBUG BEGIN_STMT
  ProdLen_43 = MultiplicandLength_40 + MultiplicatorLength_42;
  # DEBUG ProdLen => ProdLen_43
  # DEBUG BEGIN_STMT
  # DEBUG C0 => 0
  # DEBUG BEGIN_STMT
  # DEBUG C1 => 0
  # DEBUG BEGIN_STMT
  # DEBUG C2 => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = &CtxPtr_45(D)->LocalResultMultiply;
  TS_MemBZero32 (_1, 47);
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _2 = MultiplicatorLength_42 + 4294967295;
  Ty_51 = MIN_EXPR <_2, i_30>;
  # DEBUG Ty => Ty_51
  # DEBUG BEGIN_STMT
  Tx_52 = i_30 - Ty_51;
  # DEBUG Tx => Tx_52
  # DEBUG BEGIN_STMT
  _3 = Ty_51 + 1;
  _44 = Ty_51 - i_30;
  _4 = MultiplicandLength_40 + _44;
  NumMultiplications_53 = MIN_EXPR <_3, _4>;
  # DEBUG NumMultiplications => NumMultiplications_53
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG C0 => C1_34
  # DEBUG BEGIN_STMT
  # DEBUG C1 => C2_36
  # DEBUG BEGIN_STMT
  # DEBUG C2 => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG j => 0
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (long long unsigned int) C0_32;
  _6 = j_31 + Tx_52;
  _7 = _6 + 1;
  _8 = _7 * 4;
  _9 = Multiplicand_39(D) + _8;
  _10 = *_9;
  _11 = (long long unsigned int) _10;
  _12 = Ty_51 - j_31;
  _13 = _12 + 1;
  _14 = _13 * 4;
  _15 = Multiplicator_41(D) + _14;
  _16 = *_15;
  _17 = (long long unsigned int) _16;
  _18 = _11 * _17;
  Temp_55 = _5 + _18;
  # DEBUG Temp => Temp_55
  # DEBUG BEGIN_STMT
  C0_56 = (Crypto_LNWordType) Temp_55;
  # DEBUG C0 => C0_56
  # DEBUG BEGIN_STMT
  _19 = (long long unsigned int) C1_33;
  _20 = Temp_55 >> 32;
  Temp_57 = _19 + _20;
  # DEBUG Temp => Temp_57
  # DEBUG BEGIN_STMT
  C1_58 = (Crypto_LNWordType) Temp_57;
  # DEBUG C1 => C1_58
  # DEBUG BEGIN_STMT
  _21 = Temp_57 >> 32;
  _22 = (long unsigned int) _21;
  C2_59 = _22 + C2_35;
  # DEBUG C2 => C2_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_60 = j_31 + 1;
  # DEBUG j => j_60

  <bb 5> [local count: 1073741824]:
  # j_31 = PHI <0(3), j_60(4)>
  # C0_32 = PHI <C1_34(3), C0_56(4)>
  # C1_33 = PHI <C2_36(3), C1_58(4)>
  # C2_35 = PHI <0(3), C2_59(4)>
  # DEBUG C2 => C2_35
  # DEBUG C1 => C1_33
  # DEBUG C0 => C0_32
  # DEBUG j => j_31
  # DEBUG BEGIN_STMT
  if (j_31 < NumMultiplications_53)
    goto <bb 4>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 118111601]:
  # C0_24 = PHI <C0_32(5)>
  # C1_25 = PHI <C1_33(5)>
  # C2_26 = PHI <C2_35(5)>
  # DEBUG BEGIN_STMT
  _23 = i_30 + 1;
  CtxPtr_45(D)->LocalResultMultiply[_23] = C0_24;
  # DEBUG BEGIN_STMT
  # DEBUG i => _23

  <bb 7> [local count: 132709663]:
  # i_30 = PHI <0(2), _23(6)>
  # C1_34 = PHI <0(2), C1_25(6)>
  # C2_36 = PHI <0(2), C2_26(6)>
  # DEBUG C2 => C2_36
  # DEBUG C1 => C1_34
  # DEBUG i => i_30
  # DEBUG BEGIN_STMT
  if (i_30 < ProdLen_43)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 14598063]:
  # DEBUG BEGIN_STMT
  CtxPtr_45(D)->LocalResultMultiply[0] = ProdLen_43;
  # DEBUG BEGIN_STMT
  Crypto_LNNormalizeNumber (_1);
  # DEBUG BEGIN_STMT
  _27 = CtxPtr_45(D)->LocalResultMultiply[0];
  _28 = _27 + 1;
  _29 = _28 * 4;
  TS_MemCpy32 (Result_49(D), _1, _29);
  return;

}


Crypto_LNNormalizeNumber (Crypto_LNWordType * Number)
{
  Crypto_LNWordType i;
  long unsigned int _1;
  Crypto_LNWordType * _2;
  long unsigned int _3;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_7 = *Number_6(D);
  # DEBUG i => i_7
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 958878293]:
  # DEBUG BEGIN_STMT
  i_8 = i_4 + 4294967295;
  # DEBUG i => i_8

  <bb 4> [local count: 1073741824]:
  # i_4 = PHI <i_7(2), i_8(3)>
  # DEBUG i => i_4
  # DEBUG BEGIN_STMT
  _1 = i_4 * 4;
  _2 = Number_6(D) + _1;
  _3 = *_2;
  if (_3 == 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686025]:
  if (i_4 != 0)
    goto <bb 3>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 6> [local count: 114863532]:
  # i_10 = PHI <i_4(4), i_4(5)>
  # DEBUG BEGIN_STMT
  *Number_6(D) = i_10;
  return;

}


Crypto_LNBitLengthOfNumber (const Crypto_LNWordType * Number)
{
  Crypto_LNWordType Length;
  Crypto_LNWordType TempWord;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  const Crypto_LNWordType * _4;

  <bb 2> [local count: 236223200]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = *Number_9(D);
  if (_1 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _2 = _1 + 4294967295;
  Length_10 = _2 * 32;
  # DEBUG Length => Length_10
  # DEBUG BEGIN_STMT
  _3 = _1 * 4;
  _4 = Number_9(D) + _3;
  TempWord_11 = *_4;
  # DEBUG TempWord => TempWord_11
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Length_12 = Length_6 + 1;
  # DEBUG Length => Length_12
  # DEBUG BEGIN_STMT
  TempWord_13 = TempWord_5 >> 1;
  # DEBUG TempWord => TempWord_13

  <bb 5> [local count: 1073741824]:
  # TempWord_5 = PHI <TempWord_11(3), TempWord_13(4)>
  # Length_6 = PHI <Length_10(3), Length_12(4)>
  # DEBUG Length => Length_6
  # DEBUG TempWord => TempWord_5
  # DEBUG BEGIN_STMT
  if (TempWord_5 != 0)
    goto <bb 4>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 236223201]:
  # Length_7 = PHI <0(2), Length_6(5)>
  # DEBUG Length => Length_7
  # DEBUG BEGIN_STMT
  return Length_7;

}


Crypto_LNIsValid (const Crypto_LNWordType * LongNumber, uint32 PermittedMaxLength)
{
  boolean Status;
  long unsigned int _1;
  long unsigned int _2;
  const Crypto_LNWordType * _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Status => 0
  # DEBUG BEGIN_STMT
  _1 = *LongNumber_7(D);
  if (_1 < PermittedMaxLength_8(D))
    goto <bb 3>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 3> [local count: 536870913]:
  if (_1 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 4> [local count: 268435456]:
  _2 = _1 * 4;
  _3 = LongNumber_7(D) + _2;
  _4 = *_3;
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  # DEBUG Status => 1

  <bb 6> [local count: 1073741824]:
  # Status_5 = PHI <0(2), 0(3), 0(4), 1(5)>
  # DEBUG Status => Status_5
  # DEBUG BEGIN_STMT
  return Status_5;

}


Crypto_CommonXOR (void * Destination, const void * Source, uint32 ByteLength)
{
  uint32_least Len;
  uint8 * _1;
  unsigned char _2;
  const uint8 * _3;
  unsigned char _4;
  unsigned char _5;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Len => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = Destination_10(D) + Len_6;
  _2 = *_1;
  _3 = Source_11(D) + Len_6;
  _4 = *_3;
  _5 = _2 ^ _4;
  *_1 = _5;
  # DEBUG BEGIN_STMT
  Len_13 = Len_6 + 1;
  # DEBUG Len => Len_13

  <bb 4> [local count: 1073741824]:
  # Len_6 = PHI <0(2), Len_13(3)>
  # DEBUG Len => Len_6
  # DEBUG BEGIN_STMT
  if (Len_6 < ByteLength_9(D))
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  return;

}


Crypto_LNModuloBarrett (Crypto_LNWordType * Number, const Crypto_LNWordType * Modulus, const Crypto_LNWordType * Barrett, struct Crypto_LNCtxType * CtxPtr)
{
  Crypto_LNWordType * TempNumber;
  Crypto_LNWordType LoopCount;
  long unsigned int _1;
  Crypto_LNWordType * _2;
  sizetype _3;
  sizetype _4;
  Crypto_LNWordType * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  sizetype _10;
  sizetype _11;
  Crypto_LNWordType * _12;
  long unsigned int _13;
  long unsigned int _15;
  sizetype _16;
  sizetype _17;
  Crypto_LNWordType * _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  sizetype _23;
  sizetype _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  Crypto_LNWordType * _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  Crypto_LNWordType * _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  unsigned char _44;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LoopCount_57 = *Number_56(D);
  # DEBUG LoopCount => LoopCount_57
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = LoopCount_45 * 4;
  _2 = Number_56(D) + _1;
  _3 = LoopCount_45 + 3;
  _4 = _3 * 4;
  _5 = Number_56(D) + _4;
  _6 = *_2;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  LoopCount_78 = LoopCount_45 + 4294967295;
  # DEBUG LoopCount => LoopCount_78

  <bb 4> [local count: 1073741824]:
  # LoopCount_45 = PHI <LoopCount_57(2), LoopCount_78(3)>
  # DEBUG LoopCount => LoopCount_45
  # DEBUG BEGIN_STMT
  _7 = *Modulus_58(D);
  if (_7 <= LoopCount_45)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # _8 = PHI <_7(4)>
  # DEBUG BEGIN_STMT
  _9 = *Number_56(D);
  if (_8 > _9)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _10 = _8 + 2;
  _11 = _10 * 4;
  _12 = Number_56(D) + _11;
  *_12 = 0;
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _15 = _9 - _8;
  _16 = _8 + 2;
  _17 = _16 * 4;
  _18 = Number_56(D) + _17;
  _19 = _15 + 1;
  *_18 = _19;
  # DEBUG BEGIN_STMT
  _20 = *Modulus_58(D);
  _21 = _20 + 1;
  *Number_56(D) = _21;

  <bb 8> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _22 = *Modulus_58(D);
  _23 = _22 + 2;
  _24 = _23 * 4;
  TempNumber_62 = Number_56(D) + _24;
  # DEBUG TempNumber => TempNumber_62
  # DEBUG BEGIN_STMT
  Crypto_LNMultiplyNumbers (TempNumber_62, TempNumber_62, Barrett_63(D), CtxPtr_64(D));
  # DEBUG BEGIN_STMT
  _25 = *Modulus_58(D);
  _26 = *TempNumber_62;
  if (_25 >= _26)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  *TempNumber_62 = 0;
  goto <bb 14>; [100.00%]

  <bb 10> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  LoopCount_66 = _25 + 2;
  # DEBUG LoopCount => LoopCount_66
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 477815113]:
  # DEBUG BEGIN_STMT
  _27 = LoopCount_46 * 4;
  _28 = TempNumber_62 + _27;
  _29 = *Modulus_58(D);
  _30 = LoopCount_46 - _29;
  _31 = _30 + 4294967295;
  _32 = _31 * 4;
  _33 = TempNumber_62 + _32;
  _34 = *_28;
  *_33 = _34;
  # DEBUG BEGIN_STMT
  LoopCount_69 = LoopCount_46 + 1;
  # DEBUG LoopCount => LoopCount_69

  <bb 12> [local count: 536870915]:
  # LoopCount_46 = PHI <LoopCount_66(10), LoopCount_69(11)>
  # DEBUG LoopCount => LoopCount_46
  # DEBUG BEGIN_STMT
  _35 = *TempNumber_62;
  if (_35 >= LoopCount_46)
    goto <bb 11>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 59055801]:
  # _13 = PHI <_35(12)>
  # DEBUG BEGIN_STMT
  _36 = *Modulus_58(D);
  _37 = _13 - _36;
  _38 = _37 + 4294967295;
  *TempNumber_62 = _38;

  <bb 14> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Crypto_LNMultiplyNumbers (TempNumber_62, TempNumber_62, Modulus_58(D), CtxPtr_64(D));
  # DEBUG BEGIN_STMT
  _39 = *Modulus_58(D);
  _40 = _39 + 1;
  _41 = *TempNumber_62;
  if (_40 < _41)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  *TempNumber_62 = _40;

  <bb 16> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _42 = *Modulus_58(D);
  _43 = _42 + 1;
  Crypto_LNBarretSubtractNumbers (Number_56(D), Number_56(D), TempNumber_62, _43);
  # DEBUG BEGIN_STMT
  # DEBUG LoopCount => 0
  # DEBUG BEGIN_STMT
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 365952336]:
  # DEBUG BEGIN_STMT
  Crypto_LNBarretSubtractNumbers (Number_56(D), Number_56(D), Modulus_58(D), 4294967295);
  # DEBUG BEGIN_STMT
  LoopCount_75 = LoopCount_47 + 1;
  # DEBUG LoopCount => LoopCount_75

  <bb 18> [local count: 484063937]:
  # LoopCount_47 = PHI <0(16), LoopCount_75(17)>
  # DEBUG LoopCount => LoopCount_47
  # DEBUG BEGIN_STMT
  _44 = Crypto_LNCompareNumbers (Number_56(D), Modulus_58(D));
  if (_44 != 4)
    goto <bb 19>; [94.50%]
  else
    goto <bb 20>; [5.50%]

  <bb 19> [local count: 457440420]:
  if (LoopCount_47 != 4)
    goto <bb 17>; [80.00%]
  else
    goto <bb 20>; [20.00%]

  <bb 20> [local count: 118111601]:
  # LoopCount_14 = PHI <LoopCount_47(18), LoopCount_47(19)>
  # DEBUG BEGIN_STMT
  if (LoopCount_14 == 4)
    goto <bb 21>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 21> [local count: 40157944]:
  # DEBUG BEGIN_STMT
  *Number_56(D) = 0;

  <bb 22> [local count: 118111601]:
  return;

}


Crypto_CheckSkipMain (Std_ReturnType * Result, boolean * Busy, const uint32 ObjId)
{
  boolean SkipMain;
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SkipMain => 0
  # DEBUG BEGIN_STMT
  if (Result_3(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 3> [local count: 322122547]:
  if (Busy_4(D) == 0B)
    goto <bb 4>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 4> [local count: 96636764]:
  _1 = Crypto_DriverObjects[ObjId_6(D)].SkipPeriodicMainFunction;
  if (_1 == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 32856500]:
  # DEBUG BEGIN_STMT
  # DEBUG SkipMain => 1

  <bb 6> [local count: 1073741824]:
  # SkipMain_2 = PHI <0(2), 0(3), 0(4), 1(5)>
  # DEBUG SkipMain => SkipMain_2
  # DEBUG BEGIN_STMT
  return SkipMain_2;

}


Crypto_StateMachineIdle ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return 0;

}


Crypto_MemCmp_Sec (const uint8 * const A, const uint8 * const B, uint32 Length)
{
  uint32 Counter;
  uint8 Result;
  Std_ReturnType RetVal;
  const uint8 * _1;
  unsigned char _2;
  const uint8 * _3;
  unsigned char _4;
  unsigned char _5;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Result => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Counter => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = A_12(D) + Counter_8;
  _2 = *_1;
  _3 = B_13(D) + Counter_8;
  _4 = *_3;
  _5 = _2 ^ _4;
  Result_14 = _5 | Result_7;
  # DEBUG Result => Result_14
  # DEBUG BEGIN_STMT
  Counter_15 = Counter_8 + 1;
  # DEBUG Counter => Counter_15

  <bb 4> [local count: 1073741824]:
  # Result_7 = PHI <0(2), Result_14(3)>
  # Counter_8 = PHI <0(2), Counter_15(3)>
  # DEBUG Counter => Counter_8
  # DEBUG Result => Result_7
  # DEBUG BEGIN_STMT
  if (Counter_8 < Length_9(D))
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Result_10 = PHI <Result_7(4)>
  # DEBUG BEGIN_STMT
  if (Result_10 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1

  <bb 7> [local count: 118111601]:
  # RetVal_6 = PHI <0(5), 1(6)>
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  return RetVal_6;

}


Crypto_MemCmp (const uint8 * const A, const uint8 * const B, uint32 Length)
{
  Std_ReturnType _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _6 = TS_MemCmp32 (A_2(D), B_3(D), Length_4(D));
  return _6;

}


