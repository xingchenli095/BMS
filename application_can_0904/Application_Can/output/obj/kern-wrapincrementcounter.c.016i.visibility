
Marking local functions:


Marking externally visible functions: OS_WrapIncrementCounter


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_AdvanceCounter/5 (OS_AdvanceCounter) @06c58d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_WrapIncrementCounter/0 
  Calls: 
OS_CORTEXM_IntSetDisablingLevel/4 (OS_CORTEXM_IntSetDisablingLevel) @06c58c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_WrapIncrementCounter/0 OS_WrapIncrementCounter/0 
  Calls: 
OS_kernDisableLevel/3 (OS_kernDisableLevel) @06c386c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_WrapIncrementCounter/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_counterTableBase/2 (OS_counterTableBase) @06c38678
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_WrapIncrementCounter/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06c38630
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_WrapIncrementCounter/0 (addr)OS_WrapIncrementCounter/0 (read)OS_WrapIncrementCounter/0 (write)OS_WrapIncrementCounter/0 (write)
  Availability: not_available
  Varpool flags:
OS_WrapIncrementCounter/0 (OS_WrapIncrementCounter) @06c58a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_counterTableBase/2 (read)OS_kernDisableLevel/3 (read)OS_kernelData/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_CORTEXM_IntSetDisablingLevel/4 OS_AdvanceCounter/5 OS_CORTEXM_IntSetDisablingLevel/4 
__attribute__((target ("general-regs-only")))
OS_WrapIncrementCounter (const struct os_alarm_t * a)
{
  struct os_kerneldata_t * const kernel_data;
  os_uint8_t save;
  os_counterid_t c;
  struct os_counterdynamic_t * cd;
  const struct os_counter_t * cp;
  os_intstatus_t is;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  save = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;
  # DEBUG BEGIN_STMT
  _1 = a->object;
  c = (os_counterid_t) _1;
  # DEBUG BEGIN_STMT
  OS_counterTableBase.0_2 = OS_counterTableBase;
  _3 = (unsigned int) c;
  _4 = _3 * 32;
  cp = OS_counterTableBase.0_2 + _4;
  # DEBUG BEGIN_STMT
  cd = cp->dynamic;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.1_5 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.1_5);
  # DEBUG BEGIN_STMT
  OS_AdvanceCounter (cp, cd, 1, is);
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = save;
  return;

}


