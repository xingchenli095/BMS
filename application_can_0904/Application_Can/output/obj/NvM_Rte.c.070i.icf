Parsed function:NvM_Rte_InvalidateNvBlock
Parsed function:NvM_Rte_EraseNvBlock
Parsed function:NvM_Rte_RestoreBlockDefaults
Parsed function:NvM_Rte_WriteBlock
Parsed function:NvM_Rte_ReadBlock
Parsed function:NvM_Rte_SetRamBlockStatus
Parsed function:NvM_Rte_GetDataIndex
Parsed function:NvM_Rte_SetDataIndex
Parsed function:NvM_Rte_GetErrorStatus
Dump after hash based groups
Congruence classes: 3 (unique hash values: 3), with total: 9 items
Class size histogram [num of members]: number of classe number of classess
[2]: 2 classes
[5]: 1 classes


Dump after WPA based types groups
Congruence classes: 9 (unique hash values: 3), with total: 9 items
Class size histogram [num of members]: number of classe number of classess
[1]: 9 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 9 (unique hash values: 3), with total: 9 items
Class size histogram [num of members]: number of classe number of classess
[1]: 9 classes


Init called for 0 items (0.00%).
Dump after full equality comparison of groups
Congruence classes: 9 (unique hash values: 3), with total: 9 items
Class size histogram [num of members]: number of classe number of classess
[1]: 9 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Congruence classes: 9 (unique hash values: 3), with total: 9 items
Class size histogram [num of members]: number of classe number of classess
[1]: 9 classes



Item count: 9
Congruent classes before: 9, after: 9
Average class size before: 1.00, after: 1.00
Average non-singular class size: 0.00, count: 0
Equal symbols: 0
Fraction of visited symbols: 0.00%

NvM_Rte_InvalidateNvBlock (NvM_BlockIdType BlockId)
{
  Std_ReturnType ret;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 1
  # DEBUG BEGIN_STMT
  ret_4 = NvM_ASR40_InvalidateNvBlock (BlockId_2(D));
  # DEBUG ret => ret_4
  # DEBUG BEGIN_STMT
  return ret_4;

}


NvM_Rte_EraseNvBlock (NvM_BlockIdType BlockId)
{
  Std_ReturnType ret;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 1
  # DEBUG BEGIN_STMT
  ret_4 = NvM_ASR40_EraseNvBlock (BlockId_2(D));
  # DEBUG ret => ret_4
  # DEBUG BEGIN_STMT
  return ret_4;

}


NvM_Rte_RestoreBlockDefaults (NvM_BlockIdType BlockId, void * NvM_DestPtr)
{
  Std_ReturnType ret;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 1
  # DEBUG BEGIN_STMT
  ret_5 = NvM_ASR40_RestoreBlockDefaults (BlockId_2(D), NvM_DestPtr_3(D));
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  return ret_5;

}


NvM_Rte_WriteBlock (NvM_BlockIdType BlockId, const void * NvM_SrcPtr)
{
  Std_ReturnType ret;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 1
  # DEBUG BEGIN_STMT
  ret_5 = NvM_ASR40_WriteBlock (BlockId_2(D), NvM_SrcPtr_3(D));
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  return ret_5;

}


NvM_Rte_ReadBlock (NvM_BlockIdType BlockId, void * NvM_DstPtr)
{
  Std_ReturnType ret;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 1
  # DEBUG BEGIN_STMT
  ret_5 = NvM_ASR40_ReadBlock (BlockId_2(D), NvM_DstPtr_3(D));
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  return ret_5;

}


NvM_Rte_SetRamBlockStatus (NvM_BlockIdType BlockId, boolean BlockChanged)
{
  Std_ReturnType ret;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 1
  # DEBUG BEGIN_STMT
  ret_5 = NvM_ASR40_SetRamBlockStatus (BlockId_2(D), BlockChanged_3(D));
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  return ret_5;

}


NvM_Rte_GetDataIndex (NvM_BlockIdType BlockId, uint8 * DataIndex)
{
  Std_ReturnType ret;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 1
  # DEBUG BEGIN_STMT
  ret_5 = NvM_ASR40_GetDataIndex (BlockId_2(D), DataIndex_3(D));
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  return ret_5;

}


NvM_Rte_SetDataIndex (NvM_BlockIdType BlockId, uint8 DataIndex)
{
  Std_ReturnType ret;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 1
  # DEBUG BEGIN_STMT
  ret_5 = NvM_ASR40_SetDataIndex (BlockId_2(D), DataIndex_3(D));
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  return ret_5;

}


NvM_Rte_GetErrorStatus (NvM_BlockIdType BlockId, NvM_RequestResultType * RequestResultPtr)
{
  Std_ReturnType ret;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 1
  # DEBUG BEGIN_STMT
  ret_5 = NvM_ASR40_GetErrorStatus (BlockId_2(D), RequestResultPtr_3(D));
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  return ret_5;

}


