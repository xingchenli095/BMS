NvM_CalcCrc_AsyncState ()
{
  uint32 Length;
  uint8 * NvM_CalcCrc_Address.11_1;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.12_2;
  long unsigned int _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Length_6 = NvM_CalcCrc_UpdateLength ();
  # DEBUG Length => Length_6
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_Address.11_1 = NvM_CalcCrc_Address;
  NvM_CurrentBlockDescriptorPtr.12_2 = NvM_CurrentBlockDescriptorPtr;
  _3 = NvM_CurrentBlockDescriptorPtr.12_2->blockDesc;
  NvM_CalcCrc_ProcessCrc (NvM_CalcCrc_Address.11_1, &NvM_CalcCrc_CalcBuffer, Length_6, _3, 0);
  return;

}


NvM_CalcCrc_RemoveElement ()
{
  uint8 BlockFound;
  uint16 BlockPosition;
  const uint16 MaxIterator;
  int _1;
  unsigned int _2;
  unsigned int _3;
  short unsigned int _4;
  int _5;
  short unsigned int _6;
  short unsigned int NvM_GlobalBlockNumber.16_7;
  short unsigned int NvM_RamBlockCrcCalcCount.17_8;
  short unsigned int NvM_RamBlockCrcCalcCount.18_9;
  short unsigned int _10;
  short unsigned int NvM_GlobalBlockNumber.19_11;
  int _12;
  unsigned char _13;
  short unsigned int NvM_GlobalBlockNumber.20_14;
  int _15;
  unsigned char _16;
  short unsigned int BlockPosition.21_17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  MaxIterator_24 = NvM_RamBlockCrcCalcCount;
  # DEBUG MaxIterator => MaxIterator_24
  # DEBUG BEGIN_STMT
  BlockPosition_25 = 0;
  # DEBUG BlockPosition => BlockPosition_25
  # DEBUG BEGIN_STMT
  BlockFound_26 = 0;
  # DEBUG BlockFound => BlockFound_26
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  BlockPosition_28 = 0;
  # DEBUG BlockPosition => BlockPosition_28
  goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (BlockFound_20 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = (int) BlockPosition_18;
  _2 = (unsigned int) BlockPosition_18;
  _3 = _2 + 4294967295;
  _4 = NvM_CrcQueue[_1];
  NvM_CrcQueue[_3] = _4;
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _5 = (int) BlockPosition_18;
  _6 = NvM_CrcQueue[_5];
  NvM_GlobalBlockNumber.16_7 = NvM_GlobalBlockNumber;
  if (_6 == NvM_GlobalBlockNumber.16_7)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  BlockFound_30 = 1;
  # DEBUG BlockFound => BlockFound_30
  # DEBUG BEGIN_STMT
  NvM_RamBlockCrcCalcCount.17_8 = NvM_RamBlockCrcCalcCount;
  NvM_RamBlockCrcCalcCount.18_9 = NvM_RamBlockCrcCalcCount.17_8;
  _10 = NvM_RamBlockCrcCalcCount.18_9 + 65535;
  NvM_RamBlockCrcCalcCount = _10;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.19_11 = NvM_GlobalBlockNumber;
  _12 = (int) NvM_GlobalBlockNumber.19_11;
  _13 = NvM_AdminBlockTable[_12].NvMExtendedStatus;
  NvM_GlobalBlockNumber.20_14 = NvM_GlobalBlockNumber;
  _15 = (int) NvM_GlobalBlockNumber.20_14;
  _16 = _13 & 253;
  NvM_AdminBlockTable[_15].NvMExtendedStatus = _16;

  <bb 7> :
  # BlockFound_19 = PHI <BlockFound_20(4), BlockFound_20(5), BlockFound_30(6)>
  # DEBUG BlockFound => BlockFound_19
  # DEBUG BEGIN_STMT
  BlockPosition.21_17 = BlockPosition_18;
  BlockPosition_34 = BlockPosition.21_17 + 1;
  # DEBUG BlockPosition => BlockPosition_34

  <bb 8> :
  # BlockPosition_18 = PHI <BlockPosition_28(2), BlockPosition_34(7)>
  # BlockFound_20 = PHI <BlockFound_26(2), BlockFound_19(7)>
  # DEBUG BlockFound => BlockFound_20
  # DEBUG BlockPosition => BlockPosition_18
  # DEBUG BEGIN_STMT
  if (BlockPosition_18 < MaxIterator_24)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  return;

}


NvM_CalcCrc_PeekElement ()
{
  uint16 _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _2 = NvM_CrcQueue[0];
  return _2;

}


NvM_CalcCrc_EnqueueElement (uint16 BlockNumber)
{
  short unsigned int NvM_RamBlockCrcCalcCount.13_1;
  int _2;
  short unsigned int NvM_RamBlockCrcCalcCount.14_3;
  short unsigned int NvM_RamBlockCrcCalcCount.15_4;
  short unsigned int _5;
  int _6;
  unsigned char _7;
  int _8;
  unsigned char _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_RamBlockCrcCalcCount.13_1 = NvM_RamBlockCrcCalcCount;
  _2 = (int) NvM_RamBlockCrcCalcCount.13_1;
  NvM_CrcQueue[_2] = BlockNumber_11(D);
  # DEBUG BEGIN_STMT
  NvM_RamBlockCrcCalcCount.14_3 = NvM_RamBlockCrcCalcCount;
  NvM_RamBlockCrcCalcCount.15_4 = NvM_RamBlockCrcCalcCount.14_3;
  _5 = NvM_RamBlockCrcCalcCount.15_4 + 1;
  NvM_RamBlockCrcCalcCount = _5;
  # DEBUG BEGIN_STMT
  _6 = (int) BlockNumber_11(D);
  _7 = NvM_AdminBlockTable[_6].NvMExtendedStatus;
  _8 = (int) BlockNumber_11(D);
  _9 = _7 | 2;
  NvM_AdminBlockTable[_8].NvMExtendedStatus = _9;
  return;

}


NvM_CalcCrc_ProcessCrc (uint8 * CrcDataAdress, uint8 * CalcCrcBuffer, uint32 Length, uint32 BlockDesc, boolean FirstCall)
{
  uint16 * CrcBufPtr16;
  uint32 * CrcBufPtr32;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  unsigned char _6;
  unsigned int _7;
  unsigned int _8;
  short unsigned int _9;
  short unsigned int _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CrcBufPtr32_14 = CalcCrcBuffer_13(D);
  # DEBUG CrcBufPtr32 => CrcBufPtr32_14
  # DEBUG BEGIN_STMT
  CrcBufPtr16_15 = CalcCrcBuffer_13(D);
  # DEBUG CrcBufPtr16 => CrcBufPtr16_15
  # DEBUG BEGIN_STMT
  _1 = (unsigned char) BlockDesc_16(D);
  _2 = (unsigned int) _1;
  _3 = _2 & 7;
  if (_3 == 3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = *CrcBufPtr32_14;
  _5 = Crc_CalculateCRC32 (CrcDataAdress_18(D), Length_19(D), _4, FirstCall_20(D));
  *CrcBufPtr32_14 = _5;

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = (unsigned char) BlockDesc_16(D);
  _7 = (unsigned int) _6;
  _8 = _7 & 7;
  if (_8 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _9 = *CrcBufPtr16_15;
  _10 = Crc_CalculateCRC16 (CrcDataAdress_18(D), Length_19(D), _9, FirstCall_20(D));
  *CrcBufPtr16_15 = _10;

  <bb 6> :
  return;

}


NvM_CheckCrc (const uint8 * DataAddress, uint8 * CrcCalcBuffer, uint32 BlockDesc)
{
  NvM_RequestResultType Result;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  uint8 * _6;
  unsigned char _7;
  const uint8 * _8;
  unsigned char _9;
  unsigned char _10;
  unsigned int _11;
  unsigned int _12;
  uint8 * _13;
  unsigned char _14;
  const uint8 * _15;
  unsigned char _16;
  uint8 * _17;
  unsigned char _18;
  const uint8 * _19;
  unsigned char _20;
  NvM_RequestResultType _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = *CrcCalcBuffer_23(D);
  _2 = *DataAddress_24(D);
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Result_29 = 1;
  # DEBUG Result => Result_29
  goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) BlockDesc_25(D);
  _4 = (unsigned int) _3;
  _5 = _4 & 6;
  if (_5 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _6 = CrcCalcBuffer_23(D) + 1;
  _7 = *_6;
  _8 = DataAddress_24(D) + 1;
  _9 = *_8;
  if (_7 != _9)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Result_26 = 1;
  # DEBUG Result => Result_26
  goto <bb 12>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _10 = (unsigned char) BlockDesc_25(D);
  _11 = (unsigned int) _10;
  _12 = _11 & 7;
  if (_12 == 3)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _13 = CrcCalcBuffer_23(D) + 2;
  _14 = *_13;
  _15 = DataAddress_24(D) + 2;
  _16 = *_15;
  if (_14 != _16)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _17 = CrcCalcBuffer_23(D) + 3;
  _18 = *_17;
  _19 = DataAddress_24(D) + 3;
  _20 = *_19;
  if (_18 != _20)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Result_27 = 1;
  # DEBUG Result => Result_27
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Result_28 = 0;
  # DEBUG Result => Result_28

  <bb 12> :
  # Result_21 = PHI <Result_29(3), Result_26(6), Result_27(10), Result_28(11)>
  # DEBUG Result => Result_21
  # DEBUG BEGIN_STMT
  _30 = Result_21;
  return _30;

}


NvM_CopyCrc (uint8 * DataAddress, uint8 * CrcAddress, uint32 BlockDesc)
{
  uint8 * CrcBufPtr8;
  unsigned char _1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  uint8 * _5;
  unsigned char _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  uint8 * _10;
  unsigned char _11;
  uint8 * _12;
  unsigned char _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CrcBufPtr8_17 = CrcAddress_16(D);
  # DEBUG CrcBufPtr8 => CrcBufPtr8_17
  # DEBUG BEGIN_STMT
  _1 = *CrcBufPtr8_17;
  *DataAddress_19(D) = _1;
  # DEBUG BEGIN_STMT
  _2 = (unsigned char) BlockDesc_21(D);
  _3 = (unsigned int) _2;
  _4 = _3 & 6;
  if (_4 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _5 = DataAddress_19(D) + 1;
  _6 = MEM[(uint8 *)CrcBufPtr8_17 + 1B];
  *_5 = _6;

  <bb 4> :
  # DEBUG BEGIN_STMT
  _7 = (unsigned char) BlockDesc_21(D);
  _8 = (unsigned int) _7;
  _9 = _8 & 7;
  if (_9 == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _10 = DataAddress_19(D) + 2;
  _11 = MEM[(uint8 *)CrcBufPtr8_17 + 2B];
  *_10 = _11;
  # DEBUG BEGIN_STMT
  _12 = DataAddress_19(D) + 3;
  _13 = MEM[(uint8 *)CrcBufPtr8_17 + 3B];
  *_12 = _13;

  <bb 6> :
  return;

}


NvM_CalculateCrc (uint8 * DataAddress)
{
  uint32 Length;
  short unsigned int NvM_GlobalBlockNumber.6_1;
  int _2;
  short unsigned int _3;
  long unsigned int _4;
  unsigned char NvM_GlobalCallLevel.7_5;
  unsigned char NvM_GlobalCallLevel.8_6;
  unsigned char _7;
  unsigned char NvM_GlobalCallLevel.9_8;
  int _9;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.10_10;
  long unsigned int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.6_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.6_1;
  _3 = NvM_BlockDescriptorTable[_2].nvBlockLength;
  Length_15 = (uint32) _3;
  # DEBUG Length => Length_15
  # DEBUG BEGIN_STMT
  if (Length_15 > 65535)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = Length_15 + 4294901761;
  NvM_CalcCrc_RemainingLength = _4;
  # DEBUG BEGIN_STMT
  Length_17 = 65535;
  # DEBUG Length => Length_17
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_Address = DataAddress_18(D);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.7_5 = NvM_GlobalCallLevel;
  NvM_GlobalCallLevel.8_6 = NvM_GlobalCallLevel.7_5;
  _7 = NvM_GlobalCallLevel.8_6 + 1;
  NvM_GlobalCallLevel = _7;
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.9_8 = NvM_GlobalCallLevel;
  _9 = (int) NvM_GlobalCallLevel.9_8;
  NvM_CurrentFunctionPtr[_9] = NvM_CalcCrc_AsyncState;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 2;

  <bb 4> :
  # Length_12 = PHI <Length_15(2), Length_17(3)>
  # DEBUG Length => Length_12
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.10_10 = NvM_CurrentBlockDescriptorPtr;
  _11 = NvM_CurrentBlockDescriptorPtr.10_10->blockDesc;
  NvM_CalcCrc_ProcessCrc (DataAddress_18(D), &NvM_CalcCrc_CalcBuffer, Length_12, _11, 1);
  return;

}


NvM_GetStoredRamCRCAddress ()
{
  uint8 * ret;
  short unsigned int NvM_GlobalBlockNumber.5_1;
  int _2;
  short unsigned int _3;
  int _4;
  uint8 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_5 = 0B;
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.5_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.5_1;
  _3 = NvM_BlockDescriptorTable[_2].ramBlockCrcIndex;
  _4 = (int) _3;
  ret_7 = &NvM_RamBlockCrcValues[_4];
  # DEBUG ret => ret_7
  # DEBUG BEGIN_STMT
  _8 = ret_7;
  return _8;

}


NvM_CalcCrc_GetBlockCrcAddress ()
{
  uint8 * ret;
  uint8 * _1;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.4_2;
  short unsigned int _3;
  sizetype _4;
  uint8 * _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_5 = 0B;
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  _1 = NvM_GetDataAddress ();
  NvM_CurrentBlockDescriptorPtr.4_2 = NvM_CurrentBlockDescriptorPtr;
  _3 = NvM_CurrentBlockDescriptorPtr.4_2->nvBlockLength;
  _4 = (sizetype) _3;
  ret_8 = _1 + _4;
  # DEBUG ret => ret_8
  # DEBUG BEGIN_STMT
  _9 = ret_8;
  return _9;

}


NvM_CalcCrc_UpdateLength ()
{
  uint32 NvMCurrentCrcLength;
  long unsigned int NvM_CalcCrc_RemainingLength.0_1;
  long unsigned int NvM_CalcCrc_RemainingLength.1_2;
  long unsigned int _3;
  unsigned char NvM_GlobalCallLevel.2_4;
  int _5;
  uint8 * NvM_CalcCrc_Address.3_6;
  uint8 * _7;
  uint32 _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvMCurrentCrcLength_10 = 0;
  # DEBUG NvMCurrentCrcLength => NvMCurrentCrcLength_10
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_RemainingLength.0_1 = NvM_CalcCrc_RemainingLength;
  if (NvM_CalcCrc_RemainingLength.0_1 > 65535)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_RemainingLength.1_2 = NvM_CalcCrc_RemainingLength;
  _3 = NvM_CalcCrc_RemainingLength.1_2 + 4294901761;
  NvM_CalcCrc_RemainingLength = _3;
  # DEBUG BEGIN_STMT
  NvMCurrentCrcLength_16 = 65535;
  # DEBUG NvMCurrentCrcLength => NvMCurrentCrcLength_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvMCurrentCrcLength_12 = NvM_CalcCrc_RemainingLength;
  # DEBUG NvMCurrentCrcLength => NvMCurrentCrcLength_12
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.2_4 = NvM_GlobalCallLevel;
  _5 = (int) NvM_GlobalCallLevel.2_4;
  NvM_CurrentFunctionPtr[_5] = NvM_StateMachine_TerminateCurrentLevel;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 0;

  <bb 5> :
  # NvMCurrentCrcLength_8 = PHI <NvMCurrentCrcLength_16(3), NvMCurrentCrcLength_12(4)>
  # DEBUG NvMCurrentCrcLength => NvMCurrentCrcLength_8
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_Address.3_6 = NvM_CalcCrc_Address;
  _7 = NvM_CalcCrc_Address.3_6 + 65535;
  NvM_CalcCrc_Address = _7;
  # DEBUG BEGIN_STMT
  _19 = NvMCurrentCrcLength_8;
  return _19;

}


