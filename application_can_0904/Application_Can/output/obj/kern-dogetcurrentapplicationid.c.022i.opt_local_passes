__attribute__((target ("general-regs-only")))
OS_DoGetCurrentApplicationId ()
{
  const struct os_appcontext_t * app;
  os_applicationid_t a;
  os_uint8_t inFunction;
  struct os_kerneldata_t * const kernel_data;
  short unsigned int _1;
  short unsigned int OS_nInterrupts.0_2;
  unsigned char _3;
  const struct os_isr_t * OS_isrTableBase.1_4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  const struct os_isr_t * _8;
  const struct os_task_t * _9;
  os_applicationid_t _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_13 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_13
  # DEBUG BEGIN_STMT
  inFunction_15 = OS_kernelData.inFunction;
  # DEBUG inFunction => inFunction_15
  # DEBUG BEGIN_STMT
  a_16 = 255;
  # DEBUG a => a_16
  # DEBUG BEGIN_STMT
  app_17 = 0B;
  # DEBUG app => app_17
  # DEBUG BEGIN_STMT
  if (inFunction_15 == 5)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.isrCurrent;
  OS_nInterrupts.0_2 = OS_nInterrupts;
  if (_1 < OS_nInterrupts.0_2)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = OS_kernelData.tfCalledFrom;
  if (_3 == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.1_4 = OS_isrTableBase;
  _5 = OS_kernelData.isrCurrent;
  _6 = (unsigned int) _5;
  _7 = _6 * 68;
  _8 = OS_isrTableBase.1_4 + _7;
  app_20 = _8->app;
  # DEBUG app => app_20
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _9 = OS_kernelData.taskCurrent;
  app_21 = _9->app;
  # DEBUG app => app_21

  <bb 7> :
  # app_11 = PHI <app_20(5), app_21(6)>
  # DEBUG app => app_11
  # DEBUG BEGIN_STMT
  if (app_11 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  a_22 = app_11->appId;
  # DEBUG a => a_22
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  a_19 = OS_DoGetApplicationId ();
  # DEBUG a => a_19

  <bb 10> :
  # a_10 = PHI <a_22(8), a_19(9), a_16(7)>
  # DEBUG a => a_10
  # DEBUG BEGIN_STMT
  _23 = a_10;
  return _23;

}


