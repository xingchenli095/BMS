IPA function summary for CanTp_FindNSduId.constprop/81 inlinable
  global time:     169.184506
  self size:       56
  global size:     56
  min size:       20
  self stack:      0
  global stack:    0
    size:45.500000, time:160.950458
    size:4.500000, time:4.924048,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_STminTimeoutHandling.part.0/80 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       6
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    CanTp_TxStateHandling/43 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:17 stack: 0
       op1 is compile time invariant

IPA function summary for CanTp_ProcessReceivedFC.isra.0/79 inlinable
  global time:     18.757918
  self size:       84
  global size:     84
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 736] changed) && (not inlined)
    size:6.500000, time:2.500000,  nonconst if:(op1[ref offset: 736] changed)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined),  nonconst if:(op1[ref offset: 744] changed) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined)
    size:2.500000, time:1.250000,  executed if:(op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228),  nonconst if:(op1[ref offset: 744] changed) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:0.500000, time:0.125000,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined),  nonconst if:(op1[ref offset: 752] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228),  nonconst if:(op1[ref offset: 752] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:2.000000, time:0.500000,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228),  nonconst if:(op1[ref offset: 744] changed || op1[ref offset: 752] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:0.500000, time:0.042500,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined)
    size:0.500000, time:0.042500,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:0.500000, time:0.042500,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined),  nonconst if:(op1[ref offset: 64] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined)
    size:0.500000, time:0.042500,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228),  nonconst if:(op1[ref offset: 64] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:2.000000, time:0.170000,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228),  nonconst if:(op1[ref offset: 32] changed || op1[ref offset: 64] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:0.500000, time:0.028050,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined)
    size:0.500000, time:0.028050,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228),  nonconst if:(op0[ref offset: 0] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:30.500000, time:0.594309,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:4.500000, time:0.054347,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined)
    size:2.000000, time:0.028050,  executed if:(op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228),  nonconst if:(op1[ref offset: 736] changed) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:1.000000, time:0.011186,  executed if:(op1[ref offset: 736] != 228) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined)
    size:2.000000, time:0.022373,  executed if:(op1[ref offset: 736] != 228) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
    size:0.500000, time:0.001419,  executed if:(op1[ref offset: 736] == 228) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228) && (not inlined)
    size:0.500000, time:0.001419,  executed if:(op1[ref offset: 736] == 228) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
  calls:
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.01 size: 4 time: 13callee size:24 stack: 0 predicate: (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.01 size: 4 time: 13callee size:24 stack: 0 predicate: (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_TxStateHandling/43 function not considered for inlining
      loop depth: 0 freq:0.00 size: 3 time: 12callee size:17 stack: 0 predicate: (op1[ref offset: 736] == 228) && (op1[ref offset: 744] != 0) && (op1[ref offset: 736] <= 114 || op1[ref offset: 736] == 228) && (op1[ref offset: 736] >= 113 || op1[ref offset: 736] == 228)
       op1 is compile time invariant

IPA function summary for CanTp_TxStateHandling.part.0/78 inlinable
  global time:     34.657224
  self size:       71
  global size:     71
  min size:       24
  self stack:      0
  global stack:    0
    size:44.000000, time:11.381818
    size:7.000000, time:2.633601,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:0.833300,  nonconst if:(op0[ref offset: 80] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.488800,  executed if:(op1 != 1)
  calls:
    CanTp_RequestTxFrameData/44 function not considered for inlining
      loop depth: 0 freq:0.49 size: 3 time: 12callee size:28 stack: 8 predicate: (op1 != 1)
    CanTp_PreparePadding/14 function not considered for inlining
      loop depth: 0 freq:0.33 size: 5 time: 14callee size:22 stack: 0
       op3 is compile time invariant
    CanTp_TransmitFrame/40 function not considered for inlining
      loop depth: 0 freq:0.16 size: 3 time: 12callee size:22 stack: 8
       op1 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_TransmitPostponedFlowControl.part.0/77 inlinable
  global time:     16.750000
  self size:       24
  global size:     24
  min size:       18
  self stack:      0
  global stack:    0
    size:12.000000, time:5.750000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    CanTp_PrepareFC/9 function not considered for inlining
      loop depth: 0 freq:0.25 size: 3 time: 12callee size:23 stack:72
       op1 is compile time invariant
    CanTp_PrepareFC/9 function not considered for inlining
      loop depth: 0 freq:0.25 size: 3 time: 12callee size:23 stack:72
       op1 is compile time invariant
    CanTp_PrepareFC/9 function not considered for inlining
      loop depth: 0 freq:0.25 size: 3 time: 12callee size:23 stack:72
       op1 is compile time invariant

IPA function summary for CanTp_TransmitPostponedFrame.part.0/76 inlinable
  global time:     10.857600
  self size:       22
  global size:     22
  min size:       6
  self stack:      0
  global stack:    0
    size:16.000000, time:6.428800
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    CanTp_TransmitFrame/40 function not considered for inlining
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:22 stack: 8
       op1 is compile time invariant

IPA function summary for CanTp_ProcessStartOfReception.part.0/75 inlinable
  global time:     17.660000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 736] changed)
  calls:
    CanTp_TryToSendFC/19 function not considered for inlining
      loop depth: 0 freq:0.34 size: 3 time: 12callee size:22 stack: 0 predicate: (op0[ref offset: 736] == 65)
       op1 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.66 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] != 65)
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74 inlinable
  global time:     15.960000
  self size:       16
  global size:     16
  min size:       6
  self stack:      0
  global stack:    0
    size:7.000000, time:7.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
  calls:
    CanTp_TryToSendFC/19 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:22 stack: 0
       op1 is compile time invariant

IPA function summary for CanTp_RxChannelCleanup.part.0/73 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       8
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_ProcessStartOfReceptionData.part.0/72 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanTp_RxProcessData/17 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:11 stack:10
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_VerifyBlockSize.part.0/71 inlinable
  global time:     19.000000
  self size:       13
  global size:     13
  min size:       8
  self stack:      1
  global stack:    1
    size:5.500000, time:3.750000
    size:3.500000, time:2.250000,  executed if:(not inlined)
  calls:
    CanTp_CalculateBlockSize/10 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:17 stack: 0
       op1 is compile time invariant

IPA function summary for CanTp_IsValidConfig.part.0/70 inlinable
  global time:     7.020000
  self size:       10
  global size:     10
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.170000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:2.500000, time:0.850000,  nonconst if:(op0[ref offset: 96] changed)
  calls:

IPA function summary for CanTp_CheckNPduLength.part.0/69 inlinable
  global time:     5.320000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.320000,  executed if:(op0 != 48),  nonconst if:(op0 changed) && (op0 != 48)
  calls:

IPA function summary for CanTp_CancelReceive/52 inlinable
  global time:     29.020683
  self size:       80
  global size:     80
  min size:       58
  self stack:      0
  global stack:    0
    size:47.000000, time:8.403972
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.255600,  nonconst if:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 function not considered for inlining
      loop depth: 0 freq:0.13 size: 2 time: 11callee size:11 stack: 0
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.06 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.02 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.02 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.13 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.13 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.26 size: 1 time: 10
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.26 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_PostponedTimeoutHandling/51 inlinable
  global time:     14.911550
  self size:       22
  global size:     22
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:2.500000, time:0.441375,  executed if:(op0[ref offset: 736] != 0) && (not inlined)
    size:7.500000, time:1.654125,  executed if:(op0[ref offset: 736] != 0)
  calls:
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.11 size: 1 time: 10 predicate: (op0[ref offset: 736] != 0)
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.11 size: 1 time: 10 predicate: (op0[ref offset: 736] != 0)
    CanTp_TimeoutHandling/6 function not considered for inlining
      loop depth: 0 freq:0.11 size: 2 time: 11callee size:36 stack: 0 predicate: (op0[ref offset: 736] != 0)
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.11 size: 1 time: 10 predicate: (op0[ref offset: 736] != 0)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10 predicate: (op0[ref offset: 736] != 0)

IPA function summary for CanTp_HandlePostponedFlags/50 inlinable
  global time:     551.545459
  self size:       22
  global size:     22
  min size:       22
  self stack:      0
  global stack:    0
    size:6.500000, time:56.090909
    size:4.500000, time:12.636364,  executed if:(not inlined)
  calls:
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 1 freq:3.00 size: 1 time: 10
    CanTp_PostSTminCallback/36 function not considered for inlining
      loop depth: 1 freq:6.09 size: 2 time: 11callee size: 8 stack: 0
       op0 change 16.410000% of time
    CanTp_PostRxIndication/21 function not considered for inlining
      loop depth: 1 freq:6.09 size: 2 time: 11callee size:18 stack:72
       op0 change 16.410000% of time
    CanTp_PostTxConfirmation/47 function not considered for inlining
      loop depth: 1 freq:6.09 size: 2 time: 11callee size: 8 stack: 0
       op0 change 16.410000% of time
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 1 freq:6.09 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 1 freq:9.09 size: 1 time: 10
    CanTp_PostponedTimeoutHandling/51 function not considered for inlining
      loop depth: 1 freq:9.09 size: 2 time: 11callee size:11 stack: 0
       op0 change 10.990000% of time

IPA function summary for CanTp_ProcessConfirmedCF/49 inlinable
  global time:     37.639263
  self size:       69
  global size:     69
  min size:       8
  self stack:      0
  global stack:    0
    size:0.500000, time:0.331004
    size:3.500000, time:2.331004,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed)
    size:0.500000, time:0.398800,  executed if:(not inlined),  nonconst if:(op0[ref offset: 744] changed) && (not inlined)
    size:2.500000, time:1.994000,  nonconst if:(op0[ref offset: 744] changed)
    size:0.500000, time:0.199400,  executed if:(op0[ref offset: 744] != 0) && (not inlined),  nonconst if:(op0[ref offset: 752] changed) && (op0[ref offset: 744] != 0) && (not inlined)
    size:0.500000, time:0.199400,  executed if:(op0[ref offset: 744] != 0),  nonconst if:(op0[ref offset: 752] changed) && (op0[ref offset: 744] != 0)
    size:2.000000, time:0.797600,  executed if:(op0[ref offset: 744] != 0),  nonconst if:(op0[ref offset: 744] changed || op0[ref offset: 752] changed) && (op0[ref offset: 744] != 0)
    size:0.500000, time:0.331004,  executed if:(not inlined),  nonconst if:(op0[ref offset: 1816] changed) && (not inlined)
    size:1.500000, time:0.993012,  nonconst if:(op0[ref offset: 1816] changed)
    size:0.500000, time:0.331004,  executed if:(not inlined),  nonconst if:(op0[ref offset: 776] changed) && (not inlined)
    size:2.500000, time:1.655020,  nonconst if:(op0[ref offset: 776] changed)
    size:21.000000, time:12.383786,  executed if:(op0[ref offset: 776] != 0)
    size:1.000000, time:0.443545,  executed if:(op0[ref offset: 776] != 0),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 776] != 0)
    size:5.000000, time:1.512490,  executed if:(op0[ref offset: 776] != 0),  nonconst if:(op0[ref offset: 776] changed) && (op0[ref offset: 776] != 0)
    size:4.000000, time:1.552409,  executed if:(op0[ref offset: 776] != 0),  nonconst if:(op0[ref offset: 1816] changed) && (op0[ref offset: 776] != 0)
    size:2.000000, time:0.629834,  executed if:(op0[ref offset: 776] != 0) && (not inlined)
    size:0.500000, time:0.109231,  executed if:(op0[ref offset: 776] == 0) && (not inlined)
    size:0.500000, time:0.109231,  executed if:(op0[ref offset: 776] == 0)
    size:1.000000, time:0.135592,  executed if:(op0[ref offset: 744] != 0) && (not inlined)
    size:6.000000, time:0.813552,  executed if:(op0[ref offset: 744] != 0)
    size:1.000000, time:0.135592,  executed if:(op0[ref offset: 744] != 0),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 744] != 0)
  calls:
    CanTp_TxStateHandling/43 function not considered for inlining
      loop depth: 0 freq:0.22 size: 3 time: 12callee size:17 stack: 0 predicate: (op0[ref offset: 776] == 0)
       op1 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.20 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_ProcessTxPdu/48 inlinable
  global time:     24.405174
  self size:       111
  global size:     111
  min size:       0
  self stack:      0
  global stack:    0
    size:14.000000, time:8.000000
    size:3.000000, time:2.000204,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:2.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:17.500000, time:4.860000,  nonconst if:(op0[ref offset: 736] changed)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 113) && (not inlined),  nonconst if:(op0[ref offset: 1816] changed) && (op0[ref offset: 736] == 113) && (not inlined)
    size:4.500000, time:0.194344,  executed if:(op0[ref offset: 736] == 113),  nonconst if:(op0[ref offset: 1816] changed) && (op0[ref offset: 736] == 113)
    size:2.000000, time:0.048586,  executed if:(op0[ref offset: 736] == 113) && (not inlined)
    size:7.000000, time:0.170051,  executed if:(op0[ref offset: 736] == 113)
    size:1.000000, time:0.024293,  executed if:(op0[ref offset: 736] == 113),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] == 113)
    size:19.500000, time:0.813816,  executed if:(op0[ref offset: 736] == 86)
    size:1.000000, time:0.048586,  executed if:(op0[ref offset: 736] == 86),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] == 86)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 86) && (not inlined),  nonconst if:(op0[ref offset: 760] changed) && (op0[ref offset: 736] == 86) && (not inlined)
    size:3.500000, time:0.170051,  executed if:(op0[ref offset: 736] == 86),  nonconst if:(op0[ref offset: 760] changed) && (op0[ref offset: 736] == 86)
    size:2.500000, time:0.085026,  executed if:(op0[ref offset: 736] == 86) && (not inlined)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 86) && (not inlined),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 736] == 86) && (not inlined)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 86),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 736] == 86)
    size:1.000000, time:0.048586,  executed if:(op0[ref offset: 736] == 84) && (not inlined)
    size:6.000000, time:0.291516,  executed if:(op0[ref offset: 736] == 84)
    size:1.000000, time:0.048586,  executed if:(op0[ref offset: 736] == 84),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] == 84)
  calls:
    CanTp_TransmitPostponedFrame/41 function not considered for inlining
      loop depth: 0 freq:0.05 size: 2 time: 11callee size: 3 stack: 0 predicate: (op0[ref offset: 736] == 85)
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.05 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 85)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_TransmitPostponedFrame/41 function not considered for inlining
      loop depth: 0 freq:0.05 size: 2 time: 11callee size: 3 stack: 0 predicate: (op0[ref offset: 736] == 86)
    CanTp_TransmitPostponedFrame/41 function not considered for inlining
      loop depth: 0 freq:0.05 size: 2 time: 11callee size: 3 stack: 0 predicate: (op0[ref offset: 736] == 84)
    CanTp_TransmitPostponedFlowControl/42 function not considered for inlining
      loop depth: 0 freq:0.05 size: 2 time: 11callee size: 3 stack: 0 predicate: (op0[ref offset: 736] == 114)
    CanTp_ProcessConfirmedCF/49 function not considered for inlining
      loop depth: 0 freq:0.05 size: 2 time: 11callee size:34 stack: 0 predicate: (op0[ref offset: 736] == 114)
    CanTp_TransmitPostponedFlowControl/42 function not considered for inlining
      loop depth: 0 freq:0.05 size: 2 time: 11callee size: 3 stack: 0 predicate: (op0[ref offset: 736] == 113)
    CanTp_TransmitPostponedFlowControl/42 function not considered for inlining
      loop depth: 0 freq:0.05 size: 2 time: 11callee size: 3 stack: 0 predicate: (op0[ref offset: 736] == 112)
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.05 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 112)
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_PostTxConfirmation/47 inlinable
  global time:     33.460000
  self size:       17
  global size:     17
  min size:       10
  self stack:      0
  global stack:    0
    size:7.500000, time:6.500000
    size:4.500000, time:3.000000,  executed if:(not inlined)
  calls:
    CanTp_ProcessTxPdu/48 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:55 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_TxConfirmation/46 inlinable
  global time:     31.971911
  self size:       57
  global size:     57
  min size:       38
  self stack:      0
  global stack:    0
    size:34.000000, time:10.974777
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.342504,  nonconst if:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 function not considered for inlining
      loop depth: 0 freq:0.11 size: 2 time: 11callee size:11 stack: 0
    CanTp_ProcessTxPdu/48 function not considered for inlining
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:55 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.11 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.08 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.15 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.34 size: 1 time: 10
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_ProcessCopyTxData/45 inlinable
  global time:     29.340000
  self size:       23
  global size:     23
  min size:       12
  self stack:      2
  global stack:    2
    size:11.500000, time:10.005000
    size:3.500000, time:2.335000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
  calls:
    PduR_CanTpCopyTxData/68 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_RequestTxFrameData/44 inlinable
  global time:     39.235000
  self size:       57
  global size:     57
  min size:       16
  self stack:      8
  global stack:    8
    size:35.500000, time:17.232500
    size:8.500000, time:4.582500,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 1288] changed)
  calls:
    CanTp_ProcessCopyTxData/45 function not considered for inlining
      loop depth: 0 freq:0.50 size: 4 time: 13callee size:11 stack: 2
       op1 is compile time invariant
    CanTp_ProcessCopyTxData/45 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:11 stack: 2
       op1 is compile time invariant
    CanTp_PreparexF/13 function not considered for inlining
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:34 stack: 0 predicate: (op0[ref offset: 1288] == 0)

IPA function summary for CanTp_TxStateHandling/43 inlinable
  global time:     16.498700
  self size:       35
  global size:     35
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:1.999667,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:6.500000, time:2.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:3.000000, time:0.416600,  executed if:(op0[ref offset: 736] == 122) && (not inlined)
    size:12.000000, time:1.638678,  executed if:(op0[ref offset: 736] == 122)
  calls:
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 122)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_RequestTxFrameData/44 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:28 stack: 8 predicate: (op0[ref offset: 736] == 122)
    CanTp_TxStateHandling.part.0/78 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:35 stack: 0 predicate: (op0[ref offset: 736] <= 98) && (op0[ref offset: 736] >= 96)

IPA function summary for CanTp_TransmitPostponedFlowControl/42 inlinable
  global time:     11.260000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    CanTp_TransmitPostponedFlowControl.part.0/77 function not considered for inlining
      loop depth: 0 freq:0.66 size: 2 time: 11callee size:12 stack: 0 predicate: (op0 != 255)

IPA function summary for CanTp_TransmitPostponedFrame/41 inlinable
  global time:     11.260000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    CanTp_TransmitPostponedFrame.part.0/76 function not considered for inlining
      loop depth: 0 freq:0.66 size: 2 time: 11callee size:11 stack: 0 predicate: (op0 != 255)

IPA function summary for CanTp_TransmitFrame/40 inlinable
  global time:     42.531000
  self size:       45
  global size:     45
  min size:       16
  self stack:      8
  global stack:    8
    size:12.500000, time:7.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:2.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:4.000000, time:3.340000,  nonconst if:(op1 changed)
    size:0.500000, time:0.150000,  executed if:(op1 == 0B) && (not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (op1 == 0B) && (not inlined)
    size:0.500000, time:0.150000,  executed if:(op1 == 0B),  nonconst if:(op0[ref offset: 1288] changed) && (op1 == 0B)
    size:2.500000, time:0.700500,  executed if:(op1 == 0B)
    size:0.500000, time:0.350000,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:0.500000, time:0.350000,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:2.000000, time:1.400000,  executed if:(op1 != 0B)
    size:0.500000, time:0.350000,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1 != 0B) && (not inlined)
    size:0.500000, time:0.350000,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op1 != 0B)
    size:0.500000, time:0.100500,  executed if:(op1 == 0B) && (not inlined)
  calls:
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanIf_Transmit/66 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for CanTp_Transmit/39 inlinable
  global time:     29.958801
  self size:       101
  global size:     101
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.044800
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.685008,  nonconst if:(op1 changed)
    size:0.500000, time:0.141403,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:0.707014,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op1 != 0B)
    size:55.500000, time:4.719940,  executed if:(op1[ref offset: 32] != 0) && (op1 != 0B)
    size:1.000000, time:0.189480,  executed if:(op1[ref offset: 32] != 0) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 32] != 0) && (op1 != 0B)
    size:0.500000, time:0.023685,  executed if:(op1[ref offset: 32] != 0) && (op1 != 0B) && (not inlined)
  calls:
    CanTp_HandlePostponedFlags/50 function not considered for inlining
      loop depth: 0 freq:0.09 size: 2 time: 11callee size:11 stack: 0 predicate: (op1[ref offset: 32] != 0) && (op1 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.02 size: 5 time: 14 predicate: (op1[ref offset: 32] != 0) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.19 size: 1 time: 10 predicate: (op1[ref offset: 32] != 0) && (op1 != 0B)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.19 size: 1 time: 10 predicate: (op1[ref offset: 32] != 0) && (op1 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.09 size: 5 time: 14 predicate: (op1[ref offset: 32] == 0) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.06 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_StopChannel/38 inlinable
  global time:     51.982544
  self size:       48
  global size:     48
  min size:       14
  self stack:      0
  global stack:    0
    size:16.500000, time:9.127000
    size:5.500000, time:3.095000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:0.702400,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 736] != 0),  nonconst if:(op1 changed) && (op0[ref offset: 736] != 0)
    size:3.000000, time:0.510000,  executed if:(op1 == 1) && (op0[ref offset: 736] != 0),  nonconst if:(op0[ref offset: 736] changed) && (op1 == 1) && (op0[ref offset: 736] != 0)
    size:5.000000, time:0.172040,  executed if:(op1 == 1) && (op0[ref offset: 736] != 0)
    size:1.000000, time:0.034408,  executed if:(op1 == 1) && (op0[ref offset: 736] != 0),  nonconst if:(op0[ref offset: 80] changed) && (op1 == 1) && (op0[ref offset: 736] != 0)
  calls:
    PduR_CanTpTxConfirmation/65 function body not available
      loop depth: 0 freq:0.20 size: 3 time: 12
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    CanTp_InitChannelPtr/3 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:14 stack: 0
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    PduR_CanTpRxIndication/64 function body not available
      loop depth: 0 freq:0.03 size: 3 time: 12 predicate: (op1 == 1) && (op0[ref offset: 736] != 0)

IPA function summary for CanTp_STminTimeoutHandling/37 inlinable
  global time:     11.002177
  self size:       14
  global size:     14
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:2.000000, time:1.595200,  executed if:(op0[ref offset: 736] != 106),  nonconst if:(op0[ref offset: 736] changed) && (op0[ref offset: 736] != 106)
    size:0.500000, time:0.101200,  executed if:(op0[ref offset: 736] == 106) && (not inlined)
    size:0.500000, time:0.101200,  executed if:(op0[ref offset: 736] == 106)
  calls:
    CanTp_STminTimeoutHandling.part.0/80 function not considered for inlining
      loop depth: 0 freq:0.16 size: 2 time: 11callee size: 3 stack: 0 predicate: (op0[ref offset: 736] == 122) && (op0[ref offset: 736] != 106)
    CanTp_TxStateHandling/43 function not considered for inlining
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:17 stack: 0 predicate: (op0[ref offset: 736] == 106)
       op1 is compile time invariant

IPA function summary for CanTp_PostSTminCallback/36 inlinable
  global time:     33.500000
  self size:       16
  global size:     16
  min size:       10
  self stack:      0
  global stack:    0
    size:6.000000, time:4.750000
    size:5.000000, time:3.250000,  executed if:(not inlined)
  calls:
    CanTp_STminTimeoutHandling/37 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 7 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_STminCallback/35 inlinable
  global time:     38.500000
  self size:       18
  global size:     18
  min size:       14
  self stack:      0
  global stack:    0
    size:8.000000, time:5.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:11 stack: 0
    CanTp_STminTimeoutHandling/37 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 7 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_ValidateNAI/34 inlinable
  global time:     22.740000
  self size:       42
  global size:     42
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:4.000000, time:4.000000,  nonconst if:(op3 changed)
    size:6.000000, time:3.960000,  executed if:(op3 != 48)
    size:1.000000, time:0.660000,  executed if:(op3 != 48),  nonconst if:(op1 changed) && (op3 != 48)
    size:15.000000, time:5.100000,  executed if:(op3 == 48)
    size:1.000000, time:0.340000,  executed if:(op3 == 48),  nonconst if:(op1 changed) && (op3 == 48)
    size:2.000000, time:1.320000,  executed if:(op3 != 16),  nonconst if:(op3 changed) && (op3 != 16)
    size:4.500000, time:2.177500,  executed if:(op3 == 16 || op3 == 0)
    size:0.500000, time:0.335000,  executed if:(op3 == 16 || op3 == 0) && (not inlined),  nonconst if:(op0[ref offset: 1816] changed) && (op3 == 16 || op3 == 0) && (not inlined)
    size:3.500000, time:2.345000,  executed if:(op3 == 16 || op3 == 0),  nonconst if:(op0[ref offset: 1816] changed) && (op3 == 16 || op3 == 0)
    size:0.500000, time:0.167500,  executed if:(op3 == 16 || op3 == 0) && (not inlined),  nonconst if:(op0[ref offset: 176] changed) && (op3 == 16 || op3 == 0) && (not inlined)
    size:0.500000, time:0.167500,  executed if:(op3 == 16 || op3 == 0),  nonconst if:(op0[ref offset: 176] changed) && (op3 == 16 || op3 == 0)
    size:0.500000, time:0.167500,  executed if:(op3 == 16 || op3 == 0) && (not inlined)
  calls:

IPA function summary for CanTp_ValidateFCLength/33 inlinable
  global time:     16.245000
  self size:       30
  global size:     30
  min size:       0
  self stack:      0
  global stack:    0
    size:17.000000, time:10.320000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:4.000000, time:0.840000,  nonconst if:(op1 changed)
    size:1.000000, time:0.085000,  executed if:(op1 > 8)
    size:2.000000, time:1.000000,  nonconst if:(op2 changed)
    size:2.000000, time:1.000000,  nonconst if:(op1 changed || op2 changed)
  calls:

IPA function summary for CanTp_CheckNPduLength/32 inlinable
  global time:     8.768040
  self size:       26
  global size:     26
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.320000,  executed if:(op1 != 2),  nonconst if:(op0 changed) && (op1 != 2)
    size:2.000000, time:0.660000,  executed if:(op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.435600,  executed if:(op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.287496,  executed if:(op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.189747,  executed if:(op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.125233,  executed if:(op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.082654,  executed if:(op0 != 24) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 24) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.660000,  executed if:(op0 <= 7) && (op1 != 2),  nonconst if:(op1 changed) && (op0 <= 7) && (op1 != 2)
    size:2.000000, time:0.680000,  executed if:(op1 == 2),  nonconst if:(op0 changed || op2 changed) && (op1 == 2)
  calls:
    CanTp_CheckNPduLength.part.0/69 function not considered for inlining
      loop depth: 0 freq:0.03 size: 3 time: 12callee size: 3 stack: 0 predicate: (op0 != 32) && (op0 != 24) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2)

IPA function summary for CanTp_ProcessReceivedLastCF/30 inlinable
  global time:     47.703100
  self size:       54
  global size:     54
  min size:       46
  self stack:      0
  global stack:    0
    size:23.000000, time:16.006600
    size:4.000000, time:2.221100,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.110550,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.110550,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.78 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_RxProcessData/17 function not considered for inlining
      loop depth: 0 freq:0.22 size: 5 time: 14callee size:11 stack:10
    CanTp_CheckNPduLength/32 function not considered for inlining
      loop depth: 0 freq:0.67 size: 5 time: 14callee size:13 stack: 0

IPA function summary for CanTp_ProcessReceivedIntermediateCF/29 inlinable
  global time:     44.374876
  self size:       89
  global size:     89
  min size:       44
  self stack:      0
  global stack:    0
    size:46.000000, time:14.796700
    size:11.000000, time:3.711242,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 1808] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 1808] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1[ref offset: 1808] changed || op0[ref offset: 32] changed)
    size:0.500000, time:0.255600,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.255600,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.255600,  executed if:(not inlined),  nonconst if:(op1[ref offset: 768] changed) && (not inlined)
    size:2.500000, time:1.278000,  nonconst if:(op1[ref offset: 768] changed)
  calls:
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.17 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_CheckAndHandleWaitFrameTimeOut/12 function not considered for inlining
      loop depth: 0 freq:0.03 size: 2 time: 11callee size: 4 stack: 0
    CanTp_TryToSendFC/19 function not considered for inlining
      loop depth: 0 freq:0.03 size: 3 time: 12callee size:22 stack: 0
       op1 is compile time invariant
    CanTp_VerifyBlockSize/11 function not considered for inlining
      loop depth: 0 freq:0.07 size: 3 time: 12callee size: 6 stack: 0
    CanTp_RxProcessData/17 function not considered for inlining
      loop depth: 0 freq:0.51 size: 5 time: 14callee size:11 stack:10

IPA function summary for CanTp_ProcessReceivedCF/28 inlinable
  global time:     25.848692
  self size:       48
  global size:     48
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 736] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 736] changed)
    size:2.000000, time:1.320000,  executed if:(op1[ref offset: 736] != 194),  nonconst if:(op1[ref offset: 736] changed) && (op1[ref offset: 736] != 194)
    size:18.500000, time:8.563415,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    size:0.500000, time:0.282200,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined),  nonconst if:(op1[ref offset: 80] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined)
    size:1.500000, time:0.846600,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84),  nonconst if:(op1[ref offset: 80] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    size:0.500000, time:0.282200,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined),  nonconst if:(op1[ref offset: 768] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined)
    size:0.500000, time:0.282200,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84),  nonconst if:(op1[ref offset: 768] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    size:0.500000, time:0.282200,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined)
    size:0.500000, time:0.282200,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84),  nonconst if:(op0[ref offset: 0] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    size:0.500000, time:0.144261,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined)
    size:0.500000, time:0.144261,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    size:0.500000, time:0.144261,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined),  nonconst if:(op1[ref offset: 64] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined)
    size:0.500000, time:0.144261,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84),  nonconst if:(op1[ref offset: 64] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    size:1.000000, time:0.288521,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84),  nonconst if:(op1[ref offset: 32] changed || op1[ref offset: 64] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    size:0.500000, time:0.144261,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined),  nonconst if:(op1[ref offset: 1808] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined)
    size:0.500000, time:0.144261,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84),  nonconst if:(op1[ref offset: 1808] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    size:0.500000, time:0.072130,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined),  nonconst if:(op1[ref offset: 1816] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined)
    size:1.500000, time:0.216391,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84),  nonconst if:(op1[ref offset: 1816] changed) && (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    size:0.500000, time:0.072130,  executed if:(op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84) && (not inlined)
  calls:
    CanTp_ProcessReceivedIntermediateCF/29 function not considered for inlining
      loop depth: 0 freq:0.14 size: 3 time: 12callee size:44 stack: 0 predicate: (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    CanTp_ProcessReceivedLastCF/30 function not considered for inlining
      loop depth: 0 freq:0.14 size: 4 time: 13callee size:27 stack: 0 predicate: (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.28 size: 4 time: 13callee size:24 stack: 0 predicate: (op1[ref offset: 736] == 194 || op1[ref offset: 736] == 84)
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_ProcessReceivedFF/27 inlinable
  global time:     75.544252
  self size:       160
  global size:     160
  min size:       28
  self stack:      0
  global stack:    0
    size:25.000000, time:22.668350
    size:3.000000, time:1.999993,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:21.500000, time:9.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:58.500000, time:10.422547,  executed if:(op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64)
    size:7.500000, time:0.853075,  executed if:(op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64) && (not inlined)
  calls:
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.59 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.30 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.89 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.01 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_CheckAndHandleWaitFrameTimeOut/12 function not considered for inlining
      loop depth: 0 freq:0.01 size: 2 time: 11callee size: 4 stack: 0 predicate: (op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64)
    TS_MemCpy32/63 function body not available
      loop depth: 0 freq:0.01 size: 4 time: 13 predicate: (op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64)
    CanTp_CheckAndHandleWaitFrameTimeOut/12 function not considered for inlining
      loop depth: 0 freq:0.01 size: 2 time: 11callee size: 4 stack: 0 predicate: (op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64)
    CanTp_TryToSendFC/19 function not considered for inlining
      loop depth: 0 freq:0.01 size: 3 time: 12callee size:22 stack: 0 predicate: (op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64)
       op1 is compile time invariant
    CanTp_CalculateBlockSize/10 function not considered for inlining
      loop depth: 0 freq:0.01 size: 4 time: 13callee size:17 stack: 0 predicate: (op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64)
    CanTp_ProcessStartOfReceptionData/16 function not considered for inlining
      loop depth: 0 freq:0.04 size: 5 time: 14callee size:13 stack: 0 predicate: (op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64)
    CanTp_ProcessStartOfReception/15 function not considered for inlining
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:19 stack: 0 predicate: (op0[ref offset: 32] == 8 || op0[ref offset: 32] == 12 || op0[ref offset: 32] == 16 || op0[ref offset: 32] == 20 || op0[ref offset: 32] == 24 || op0[ref offset: 32] == 32 || op0[ref offset: 32] == 48 || op0[ref offset: 32] == 64)

IPA function summary for CanTp_ProcessReceivedSF/26 inlinable
  global time:     66.227742
  self size:       114
  global size:     114
  min size:       68
  self stack:      0
  global stack:    0
    size:30.000000, time:14.323872
    size:6.000000, time:2.368113,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 32] > 8) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] > 8) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 32] > 8),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] > 8)
    size:16.000000, time:4.250000,  executed if:(op0[ref offset: 32] > 8)
    size:2.000000, time:0.125000,  executed if:(op0[ref offset: 32] > 8),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 32] > 8)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 32] <= 8) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] <= 8) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 32] <= 8),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] <= 8)
    size:12.000000, time:3.625000,  executed if:(op0[ref offset: 32] <= 8)
    size:3.000000, time:0.187500,  executed if:(op0[ref offset: 32] <= 8),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 32] <= 8)
    size:1.000000, time:0.031250,  executed if:(op0[ref offset: 32] > 2) && (op0[ref offset: 32] <= 8),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 32] > 2) && (op0[ref offset: 32] <= 8)
    size:2.000000, time:0.062500,  executed if:(op0[ref offset: 32] > 2) && (op0[ref offset: 32] <= 8)
    size:0.500000, time:0.110550,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.110550,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.78 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.78 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.02 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    TS_MemCpy32/63 function body not available
      loop depth: 0 freq:0.02 size: 4 time: 13
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.02 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_ProcessStartOfReceptionData/16 function not considered for inlining
      loop depth: 0 freq:0.07 size: 5 time: 14callee size:13 stack: 0
    CanTp_ProcessStartOfReception/15 function not considered for inlining
      loop depth: 0 freq:0.22 size: 3 time: 12callee size:19 stack: 0
    CanTp_CheckNPduLength/32 function not considered for inlining
      loop depth: 0 freq:0.67 size: 5 time: 14callee size:13 stack: 0

IPA function summary for CanTp_RxChannelCleanup/24 inlinable
  global time:     13.140000
  self size:       22
  global size:     22
  min size:       12
  self stack:      0
  global stack:    0
    size:7.000000, time:2.380000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:0.500000, time:0.170000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:0.510000,  nonconst if:(op0[ref offset: 80] changed)
  calls:
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.17 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_RxChannelCleanup.part.0/73 function not considered for inlining
      loop depth: 0 freq:0.17 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for CanTp_ProcessRxFrame/23 inlinable
  global time:     18.474918
  self size:       57
  global size:     57
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:10.000000, time:4.000000,  nonconst if:(op3 changed)
    size:0.500000, time:0.100000,  executed if:(op3 == 48) && (not inlined),  nonconst if:(op0[ref offset: 80] changed) && (op3 == 48) && (not inlined)
    size:0.500000, time:0.100000,  executed if:(op3 == 48),  nonconst if:(op0[ref offset: 80] changed) && (op3 == 48)
    size:2.000000, time:0.400000,  executed if:(op3 == 48),  nonconst if:(op0[ref offset: 80] changed || op2 changed) && (op3 == 48)
    size:0.500000, time:0.100000,  executed if:(op3 == 32) && (not inlined),  nonconst if:(op0[ref offset: 80] changed) && (op3 == 32) && (not inlined)
    size:0.500000, time:0.100000,  executed if:(op3 == 32),  nonconst if:(op0[ref offset: 80] changed) && (op3 == 32)
    size:2.000000, time:0.400000,  executed if:(op3 == 32),  nonconst if:(op0[ref offset: 80] changed || op2 changed) && (op3 == 32)
    size:0.500000, time:0.034000,  executed if:(op3 == 32) && (not inlined),  nonconst if:(op0[ref offset: 736] changed) && (op3 == 32) && (not inlined)
    size:3.500000, time:0.238000,  executed if:(op3 == 32),  nonconst if:(op0[ref offset: 736] changed) && (op3 == 32)
    size:1.000000, time:0.133000,  executed if:(op3 == 16) && (not inlined)
    size:6.000000, time:0.731000,  executed if:(op3 == 16)
    size:1.000000, time:0.133000,  executed if:(op3 == 0) && (not inlined)
    size:6.000000, time:0.731000,  executed if:(op3 == 0)
  calls:
    CanTp_ProcessReceivedFC.isra.0/79 function not considered for inlining
      loop depth: 0 freq:0.04 size: 3 time: 12callee size:42 stack: 0 predicate: (op3 == 48)
    CanTp_ProcessReceivedCF/28 function not considered for inlining
      loop depth: 0 freq:0.01 size: 3 time: 12callee size:24 stack: 0 predicate: (op3 == 32)
    CanTp_ProcessReceivedFF/27 function not considered for inlining
      loop depth: 0 freq:0.07 size: 3 time: 12callee size:80 stack: 0 predicate: (op3 == 16)
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op3 == 16)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op3 == 16)
    CanTp_RxChannelCleanup/24 function not considered for inlining
      loop depth: 0 freq:0.20 size: 2 time: 11callee size:11 stack: 0 predicate: (op3 == 16)
    CanTp_ProcessReceivedSF/26 function not considered for inlining
      loop depth: 0 freq:0.07 size: 3 time: 12callee size:57 stack: 0 predicate: (op3 == 0)
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op3 == 0)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op3 == 0)
    CanTp_RxChannelCleanup/24 function not considered for inlining
      loop depth: 0 freq:0.20 size: 2 time: 11callee size:11 stack: 0 predicate: (op3 == 0)

IPA function summary for CanTp_PostponeRxFrame/22 inlinable
  global time:     24.000000
  self size:       16
  global size:     16
  min size:       8
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:6.000000, time:5.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 32] changed)
  calls:
    TS_MemCpy32/63 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for CanTp_PostRxIndication/21 inlinable
  global time:     68.052728
  self size:       36
  global size:     36
  min size:       14
  self stack:      72
  global stack:    72
    size:22.000000, time:35.557273
    size:7.000000, time:7.875455,  executed if:(not inlined)
  calls:
    CanTp_ProcessRxFrame/23 function not considered for inlining
      loop depth: 0 freq:0.33 size: 5 time: 14callee size:28 stack: 0
       op1 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_RxIndication/20 inlinable
  global time:     27.401602
  self size:       180
  global size:     180
  min size:       10
  self stack:      3
  global stack:    3
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.022400,  nonconst if:(op1 changed)
    size:0.500000, time:0.211049,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:1.055245,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:4.000000, time:1.181874,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:0.500000, time:0.098982,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
    size:2.500000, time:0.494910,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:93.000000, time:2.709506,  executed if:(op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:1.000000, time:0.058399,  executed if:(op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:2.000000, time:0.046693,  executed if:(op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
  calls:
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.03 size: 5 time: 14 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_HandlePostponedFlags/50 function not considered for inlining
      loop depth: 0 freq:0.00 size: 2 time: 11callee size:11 stack: 0 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    CanTp_ProcessRxFrame/23 function not considered for inlining
      loop depth: 0 freq:0.00 size: 5 time: 14callee size:28 stack: 0 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.00 size: 5 time: 14 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.01 size: 1 time: 10 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    CanTp_PostponeRxFrame/22 function not considered for inlining
      loop depth: 0 freq:0.00 size: 5 time: 14callee size: 8 stack: 0 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.01 size: 1 time: 10 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    CanTp_ValidateNAI/34 function not considered for inlining
      loop depth: 0 freq:0.03 size: 6 time: 15callee size:21 stack: 0 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.00 size: 5 time: 14 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_ValidateFCLength/33 function not considered for inlining
      loop depth: 0 freq:0.02 size: 5 time: 14callee size:15 stack: 0 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    CanTp_FindNSduId.constprop/81 function not considered for inlining
      loop depth: 0 freq:0.12 size: 6 time: 15callee size:28 stack: 0 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1[ref offset: 32] <= 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14 predicate: (op1 == 0B || op1[ref offset: 0] == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_TryToSendFC/19 inlinable
  global time:     24.837813
  self size:       44
  global size:     44
  min size:       6
  self stack:      0
  global stack:    0
    size:14.500000, time:10.639900
    size:4.500000, time:2.333100,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:6.000000, time:2.000000,  nonconst if:(op1 changed)
    size:3.000000, time:0.833250,  executed if:(op1 == 6)
    size:1.000000, time:0.166650,  executed if:(op1 == 6) && (not inlined)
    size:3.000000, time:0.833250,  executed if:(op1 == 4)
    size:1.000000, time:0.166650,  executed if:(op1 == 4) && (not inlined)
  calls:
    CanTp_PrepareFC/9 function not considered for inlining
      loop depth: 0 freq:0.16 size: 3 time: 12callee size:23 stack:72
       op1 is compile time invariant
    CanTp_PrepareFC/9 function not considered for inlining
      loop depth: 0 freq:0.16 size: 3 time: 12callee size:23 stack:72 predicate: (op1 == 6)
       op1 is compile time invariant
    CanTp_PrepareFC/9 function not considered for inlining
      loop depth: 0 freq:0.16 size: 3 time: 12callee size:23 stack:72 predicate: (op1 == 4)
       op1 is compile time invariant

IPA function summary for CanTp_RxStateHandling/18 inlinable
  global time:     31.915350
  self size:       99
  global size:     99
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:1.999850,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:8.500000, time:4.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:1.000000, time:0.249988,  executed if:(op0[ref offset: 736] == 66) && (not inlined)
    size:9.000000, time:0.916638,  executed if:(op0[ref offset: 736] == 66)
    size:3.000000, time:0.416638,  executed if:(op0[ref offset: 736] == 65) && (not inlined)
    size:12.000000, time:1.166613,  executed if:(op0[ref offset: 736] == 65)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 65) && (not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (op0[ref offset: 736] == 65) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 65),  nonconst if:(op0[ref offset: 1288] changed) && (op0[ref offset: 736] == 65)
    size:1.000000, time:0.249988,  executed if:(op0[ref offset: 736] == 64) && (not inlined)
    size:7.000000, time:0.749988,  executed if:(op0[ref offset: 736] == 64)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 64) && (not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (op0[ref offset: 736] == 64) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 64),  nonconst if:(op0[ref offset: 1288] changed) && (op0[ref offset: 736] == 64)
  calls:
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 66)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_CheckAndHandleWaitFrameTimeOut/12 function not considered for inlining
      loop depth: 0 freq:0.08 size: 2 time: 11callee size: 4 stack: 0 predicate: (op0[ref offset: 736] == 66)
    CanTp_CheckAndHandleWaitFrameTimeOut/12 function not considered for inlining
      loop depth: 0 freq:0.04 size: 2 time: 11callee size: 4 stack: 0 predicate: (op0[ref offset: 736] == 66)
    CanTp_TryToSendFC/19 function not considered for inlining
      loop depth: 0 freq:0.04 size: 3 time: 12callee size:22 stack: 0 predicate: (op0[ref offset: 736] == 66)
       op1 is compile time invariant
    CanTp_VerifyBlockSize/11 function not considered for inlining
      loop depth: 0 freq:0.08 size: 3 time: 12callee size: 6 stack: 0 predicate: (op0[ref offset: 736] == 66)
    CanTp_RxProcessData/17 function not considered for inlining
      loop depth: 0 freq:0.25 size: 5 time: 14callee size:11 stack:10 predicate: (op0[ref offset: 736] == 66)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 65)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_CheckAndHandleWaitFrameTimeOut/12 function not considered for inlining
      loop depth: 0 freq:0.08 size: 2 time: 11callee size: 4 stack: 0 predicate: (op0[ref offset: 736] == 65)
    CanTp_CheckAndHandleWaitFrameTimeOut/12 function not considered for inlining
      loop depth: 0 freq:0.04 size: 2 time: 11callee size: 4 stack: 0 predicate: (op0[ref offset: 736] == 65)
    CanTp_TryToSendFC/19 function not considered for inlining
      loop depth: 0 freq:0.04 size: 3 time: 12callee size:22 stack: 0 predicate: (op0[ref offset: 736] == 65)
       op1 is compile time invariant
    CanTp_CalculateBlockSize/10 function not considered for inlining
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:17 stack: 0 predicate: (op0[ref offset: 736] == 65)
    CanTp_ProcessStartOfReceptionData/16 function not considered for inlining
      loop depth: 0 freq:0.25 size: 5 time: 14callee size:13 stack: 0 predicate: (op0[ref offset: 736] == 65)
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 64)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 64)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_ProcessStartOfReceptionData/16 function not considered for inlining
      loop depth: 0 freq:0.25 size: 5 time: 14callee size:13 stack: 0 predicate: (op0[ref offset: 736] == 64)

IPA function summary for CanTp_RxProcessData/17 inlinable
  global time:     28.500000
  self size:       22
  global size:     22
  min size:       10
  self stack:      10
  global stack:    10
    size:11.000000, time:10.000000
    size:4.000000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
  calls:
    PduR_CanTpCopyRxData/62 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_ProcessStartOfReceptionData/16 inlinable
  global time:     18.927440
  self size:       26
  global size:     26
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:0.500000, time:0.335000,  executed if:(op2 != 0) && (not inlined),  nonconst if:(op0[ref offset: 48] changed) && (op2 != 0) && (not inlined)
    size:0.500000, time:0.335000,  executed if:(op2 != 0),  nonconst if:(op0[ref offset: 48] changed) && (op2 != 0)
    size:2.000000, time:1.340000,  executed if:(op2 != 0),  nonconst if:(op2 changed || op0[ref offset: 48] changed) && (op2 != 0)
    size:4.500000, time:1.840825,  executed if:(op2 != 0)
    size:0.500000, time:0.279725,  executed if:(op2 != 0) && (not inlined)
  calls:
    CanTp_RxProcessData/17 function not considered for inlining
      loop depth: 0 freq:0.27 size: 5 time: 14callee size:11 stack:10 predicate: (op2 != 0)
    CanTp_RxProcessData/17 function not considered for inlining
      loop depth: 0 freq:0.22 size: 5 time: 14callee size:11 stack:10 predicate: (op2 != 0)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_ProcessStartOfReceptionData.part.0/72 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 4 stack: 0 predicate: (op2 == 0)

IPA function summary for CanTp_ProcessStartOfReception/15 inlinable
  global time:     35.800000
  self size:       38
  global size:     38
  min size:       32
  self stack:      0
  global stack:    0
    size:15.500000, time:9.100000
    size:3.500000, time:2.100000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.20 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_ProcessStartOfReception.part.0/75 function not considered for inlining
      loop depth: 0 freq:0.20 size: 3 time: 12callee size: 6 stack: 0
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.20 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    PduR_CanTpStartOfReception/61 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14

IPA function summary for CanTp_PreparePadding/14 inlinable
  global time:     77.217272
  self size:       45
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:26.272727
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:6.000000, time:20.181818,  nonconst if:(op3 changed)
    size:1.000000, time:0.300000,  executed if:(op3 == 0B) && (not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (op3 == 0B) && (not inlined)
    size:1.000000, time:0.300000,  executed if:(op3 == 0B),  nonconst if:(op0[ref offset: 1288] changed) && (op3 == 0B)
    size:1.000000, time:0.700000,  executed if:(op3 != 0B) && (not inlined),  nonconst if:(op3[ref offset: 32] changed) && (op3 != 0B) && (not inlined)
    size:1.000000, time:0.700000,  executed if:(op3 != 0B),  nonconst if:(op3[ref offset: 32] changed) && (op3 != 0B)
    size:3.000000, time:3.000000,  nonconst if:(op2 changed)
    size:4.000000, time:2.000000,  nonconst if:(op1 changed)
    size:14.000000, time:1.073944,  executed if:(op1 != 2),  nonconst if:(op3 changed || op0[ref offset: 1288] changed || op3[ref offset: 32] changed) && (op1 != 2)
    size:2.000000, time:0.270600,  executed if:(op1 != 2),  nonconst if:(op1 changed) && (op1 != 2)
    size:1.000000, time:1.363636,  executed if:(op3 == 0B) && (not inlined)
    size:1.000000, time:1.363636,  executed if:(op3 == 0B)
    size:1.000000, time:3.181818,  executed if:(op3 != 0B) && (not inlined)
    size:3.000000, time:14.509091,  executed if:(op3 != 0B)
  calls:

IPA function summary for CanTp_PreparexF/13 inlinable
  global time:     26.250000
  self size:       69
  global size:     69
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:8.250000
    size:4.000000, time:2.750000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:8.500000, time:4.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 98) && (not inlined),  nonconst if:(op0[ref offset: 768] changed) && (op0[ref offset: 736] == 98) && (not inlined)
    size:3.500000, time:0.875000,  executed if:(op0[ref offset: 736] == 98),  nonconst if:(op0[ref offset: 768] changed) && (op0[ref offset: 736] == 98)
    size:1.500000, time:0.375000,  executed if:(op0[ref offset: 736] == 98) && (not inlined)
    size:2.500000, time:0.625000,  executed if:(op0[ref offset: 736] == 98)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 98) && (not inlined),  nonconst if:(op0[ref offset: 752] changed) && (op0[ref offset: 736] == 98) && (not inlined)
    size:1.500000, time:0.375000,  executed if:(op0[ref offset: 736] == 98),  nonconst if:(op0[ref offset: 752] changed) && (op0[ref offset: 736] == 98)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 97) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 736] == 97) && (not inlined)
    size:2.500000, time:0.625000,  executed if:(op0[ref offset: 736] == 97),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 736] == 97)
    size:2.000000, time:0.250000,  executed if:(op0[ref offset: 32] <= 4095) && (op0[ref offset: 736] == 97),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 32] <= 4095) && (op0[ref offset: 736] == 97)
    size:1.000000, time:0.125000,  executed if:(op0[ref offset: 32] <= 4095) && (op0[ref offset: 736] == 97) && (not inlined)
    size:3.000000, time:0.375000,  executed if:(op0[ref offset: 32] <= 4095) && (op0[ref offset: 736] == 97)
    size:3.000000, time:0.375000,  executed if:(op0[ref offset: 32] > 4095) && (op0[ref offset: 736] == 97) && (not inlined)
    size:9.000000, time:1.125000,  executed if:(op0[ref offset: 32] > 4095) && (op0[ref offset: 736] == 97)
    size:1.000000, time:0.125000,  executed if:(op0[ref offset: 32] > 4095) && (op0[ref offset: 736] == 97),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 32] > 4095) && (op0[ref offset: 736] == 97)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 736] == 97) && (not inlined)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 736] == 97)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 96) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 736] == 96) && (not inlined)
    size:1.500000, time:0.250000,  executed if:(op0[ref offset: 736] == 96),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 736] == 96)
    size:7.500000, time:1.562500,  executed if:(op0[ref offset: 736] == 96)
    size:1.500000, time:0.187500,  executed if:(op0[ref offset: 736] == 96) && (not inlined)
  calls:

IPA function summary for CanTp_CheckAndHandleWaitFrameTimeOut/12 inlinable
  global time:     10.500000
  self size:       8
  global size:     8
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 760] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 760] changed)
  calls:
    CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 8 stack: 0 predicate: (op0[ref offset: 760] != 0)

IPA function summary for CanTp_VerifyBlockSize/11 inlinable
  global time:     11.960000
  self size:       12
  global size:     12
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed || op0[ref offset: 48] changed)
  calls:
    CanTp_VerifyBlockSize.part.0/71 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 6 stack: 1

IPA function summary for CanTp_CalculateBlockSize/10 inlinable
  global time:     29.750000
  self size:       34
  global size:     34
  min size:       0
  self stack:      0
  global stack:    0
    size:22.500000, time:19.250000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed || op0[ref offset: 48] changed)
  calls:

IPA function summary for CanTp_PrepareFC/9 inlinable
  global time:     62.000000
  self size:       46
  global size:     46
  min size:       16
  self stack:      72
  global stack:    72
    size:31.500000, time:30.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 744] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 744] changed)
  calls:
    CanTp_TransmitFrame/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 8
       op1 is compile time invariant
    CanTp_PreparePadding/14 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:22 stack: 0
       op3 is compile time invariant

IPA function summary for CanTp_StallHandling/8 inlinable
  global time:     6.500000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 720] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 720] changed)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 720] != 0) && (not inlined),  nonconst if:(op0[ref offset: 160] changed) && (op0[ref offset: 720] != 0) && (not inlined)
    size:1.500000, time:0.750000,  executed if:(op0[ref offset: 720] != 0),  nonconst if:(op0[ref offset: 160] changed) && (op0[ref offset: 720] != 0)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 720] != 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 720] != 0)
  calls:

IPA function summary for CanTp_ChannelHandling/7 inlinable
  global time:     39.751650
  self size:       36
  global size:     36
  min size:       30
  self stack:      0
  global stack:    0
    size:18.000000, time:6.141100
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 function not considered for inlining
      loop depth: 0 freq:0.25 size: 2 time: 11callee size:11 stack: 0
    CanTp_TxStateHandling/43 function not considered for inlining
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:17 stack: 0
       op1 is compile time invariant
    CanTp_RxStateHandling/18 function not considered for inlining
      loop depth: 0 freq:0.06 size: 2 time: 11callee size:49 stack: 0
    CanTp_TimeoutHandling/6 function not considered for inlining
      loop depth: 0 freq:0.08 size: 2 time: 11callee size:36 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    CanTp_StallHandling/8 function not considered for inlining
      loop depth: 0 freq:0.50 size: 3 time: 12callee size: 4 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_TimeoutHandling/6 inlinable
  global time:     26.500000
  self size:       72
  global size:     72
  min size:       8
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:18.500000, time:6.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:5.000000, time:0.625000,  executed if:(op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112)
    size:0.500000, time:0.062500,  executed if:(op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112) && (not inlined),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112) && (not inlined)
    size:1.500000, time:0.187500,  executed if:(op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112)
    size:5.000000, time:0.625000,  executed if:(op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84)
    size:0.500000, time:0.062500,  executed if:(op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84) && (not inlined),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84) && (not inlined)
    size:1.500000, time:0.187500,  executed if:(op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84)
  calls:
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 228)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] <= 206 || op0[ref offset: 736] <= 234) && (op0[ref offset: 736] >= 204 || op0[ref offset: 736] <= 234) && (op0[ref offset: 736] <= 206 || op0[ref offset: 736] >= 232) && (op0[ref offset: 736] >= 204 || op0[ref offset: 736] >= 232)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_TransmitPostponedFlowControl/42 function not considered for inlining
      loop depth: 0 freq:0.12 size: 2 time: 11callee size: 3 stack: 0 predicate: (op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112)
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 194)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_TransmitPostponedFrame/41 function not considered for inlining
      loop depth: 0 freq:0.12 size: 2 time: 11callee size: 3 stack: 0 predicate: (op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84)
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 64)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] <= 66) && (op0[ref offset: 736] >= 65)
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_MainFunction/5 inlinable
  global time:     65.417359
  self size:       31
  global size:     31
  min size:       12
  self stack:      0
  global stack:    0
    size:22.000000, time:23.920909
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanTp_ChannelHandling/7 function not considered for inlining
      loop depth: 1 freq:1.55 size: 2 time: 11callee size:18 stack: 0
    CanTp_STminCallback/35 function not considered for inlining
      loop depth: 1 freq:0.23 size: 2 time: 11callee size: 9 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_CancelTransmit/4 inlinable
  global time:     21.386259
  self size:       74
  global size:     74
  min size:       58
  self stack:      0
  global stack:    0
    size:41.000000, time:7.674453
    size:3.000000, time:1.999996,  executed if:(not inlined)
    size:1.000000, time:0.342504,  nonconst if:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 function not considered for inlining
      loop depth: 0 freq:0.03 size: 2 time: 11callee size:11 stack: 0
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.02 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 0 freq:0.01 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.01 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_InitChannelPtr/3 inlinable
  global time:     27.000000
  self size:       29
  global size:     29
  min size:       0
  self stack:      0
  global stack:    0
    size:14.000000, time:13.000000
    size:12.000000, time:11.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 728] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 728] changed)
  calls:

IPA function summary for CanTp_Init/2 inlinable
  global time:     70.939091
  self size:       53
  global size:     53
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:27.000000, time:19.331455,  executed if:(op0 != 0B)
  calls:
    CanTp_InitChannelPtr/3 function not considered for inlining
      loop depth: 1 freq:0.96 size: 2 time: 11callee size:14 stack: 0 predicate: (op0 != 0B)
    CanTp_StopChannel/38 function not considered for inlining
      loop depth: 1 freq:0.96 size: 4 time: 13callee size:24 stack: 0 predicate: (op0 != 0B)
       op1 is compile time invariant
       op2 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.35 size: 1 time: 10 predicate: (op0 != 0B)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.35 size: 1 time: 10 predicate: (op0 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.35 size: 5 time: 14 predicate: (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_IsValidConfig/1 function not considered for inlining
      loop depth: 0 freq:0.70 size: 3 time: 12callee size: 8 stack: 0 predicate: (op0 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.30 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_IsValidConfig/1 inlinable
  global time:     13.307630
  self size:       17
  global size:     17
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B)
    size:4.500000, time:1.523895,  executed if:(op0 != 0B)
    size:0.500000, time:0.090899,  executed if:(op0 != 0B) && (not inlined)
  calls:
    CanTp_IsValidConfig.part.0/70 function not considered for inlining
      loop depth: 0 freq:0.06 size: 3 time: 12callee size: 5 stack: 0 predicate: (op0 != 0B)
    TS_PlatformSigIsValid/53 function body not available
      loop depth: 0 freq:0.53 size: 3 time: 12 predicate: (op0 != 0B)


Flattening functions:
Overall time estimate: 2486.170322 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in CanTp_FindNSduId.constprop/81.
Enqueueing calls in CanTp_STminTimeoutHandling.part.0/80.
Enqueueing calls in CanTp_ProcessReceivedFC.isra.0/79.
Enqueueing calls in CanTp_TxStateHandling.part.0/78.
Enqueueing calls in CanTp_TransmitPostponedFlowControl.part.0/77.
Enqueueing calls in CanTp_TransmitPostponedFrame.part.0/76.
Enqueueing calls in CanTp_ProcessStartOfReception.part.0/75.
Enqueueing calls in CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74.
Enqueueing calls in CanTp_RxChannelCleanup.part.0/73.
Enqueueing calls in CanTp_ProcessStartOfReceptionData.part.0/72.
Enqueueing calls in CanTp_VerifyBlockSize.part.0/71.
Enqueueing calls in CanTp_IsValidConfig.part.0/70.
Enqueueing calls in CanTp_CheckNPduLength.part.0/69.
Enqueueing calls in CanTp_CancelReceive/52.
Enqueueing calls in CanTp_PostponedTimeoutHandling/51.
Enqueueing calls in CanTp_HandlePostponedFlags/50.
Enqueueing calls in CanTp_ProcessConfirmedCF/49.
Enqueueing calls in CanTp_ProcessTxPdu/48.
Enqueueing calls in CanTp_PostTxConfirmation/47.
Enqueueing calls in CanTp_TxConfirmation/46.
Enqueueing calls in CanTp_ProcessCopyTxData/45.
Enqueueing calls in CanTp_RequestTxFrameData/44.
Enqueueing calls in CanTp_TxStateHandling/43.
Enqueueing calls in CanTp_TransmitPostponedFlowControl/42.
Enqueueing calls in CanTp_TransmitPostponedFrame/41.
Enqueueing calls in CanTp_TransmitFrame/40.
Enqueueing calls in CanTp_Transmit/39.
Enqueueing calls in CanTp_StopChannel/38.
Enqueueing calls in CanTp_STminTimeoutHandling/37.
Enqueueing calls in CanTp_PostSTminCallback/36.
Enqueueing calls in CanTp_STminCallback/35.
Enqueueing calls in CanTp_ValidateNAI/34.
Enqueueing calls in CanTp_ValidateFCLength/33.
Enqueueing calls in CanTp_CheckNPduLength/32.
Enqueueing calls in CanTp_ProcessReceivedLastCF/30.
Enqueueing calls in CanTp_ProcessReceivedIntermediateCF/29.
Enqueueing calls in CanTp_ProcessReceivedCF/28.
Enqueueing calls in CanTp_ProcessReceivedFF/27.
Enqueueing calls in CanTp_ProcessReceivedSF/26.
Enqueueing calls in CanTp_RxChannelCleanup/24.
Enqueueing calls in CanTp_ProcessRxFrame/23.
Enqueueing calls in CanTp_PostponeRxFrame/22.
Enqueueing calls in CanTp_PostRxIndication/21.
Enqueueing calls in CanTp_RxIndication/20.
Enqueueing calls in CanTp_TryToSendFC/19.
Enqueueing calls in CanTp_RxStateHandling/18.
Enqueueing calls in CanTp_RxProcessData/17.
Enqueueing calls in CanTp_ProcessStartOfReceptionData/16.
Enqueueing calls in CanTp_ProcessStartOfReception/15.
Enqueueing calls in CanTp_PreparePadding/14.
Enqueueing calls in CanTp_PreparexF/13.
Enqueueing calls in CanTp_CheckAndHandleWaitFrameTimeOut/12.
Enqueueing calls in CanTp_VerifyBlockSize/11.
Enqueueing calls in CanTp_CalculateBlockSize/10.
Enqueueing calls in CanTp_PrepareFC/9.
Enqueueing calls in CanTp_StallHandling/8.
Enqueueing calls in CanTp_ChannelHandling/7.
Enqueueing calls in CanTp_TimeoutHandling/6.
Enqueueing calls in CanTp_MainFunction/5.
Enqueueing calls in CanTp_CancelTransmit/4.
Enqueueing calls in CanTp_InitChannelPtr/3.
Enqueueing calls in CanTp_Init/2.
Enqueueing calls in CanTp_IsValidConfig/1.

Considering CanTp_TxStateHandling/43 with 35 size
 to be inlined into CanTp_STminTimeoutHandling.part.0/80 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_STminCallback.c:170
 Estimated badness is -inf, frequency 1.00.
Introduced new external node (__builtin_unreachable/83).

Considering CanTp_TxStateHandling/43 with 35 size
 to be inlined into CanTp_STminTimeoutHandling/37 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_STminCallback.c:157
 Estimated badness is -inf, frequency 0.20.

Considering CanTp_TxStateHandling/43 with 35 size
 to be inlined into CanTp_ProcessConfirmedCF/49 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_TxConfirmation.c:643
 Estimated badness is -inf, frequency 0.22.

Considering CanTp_TxStateHandling/43 with 35 size
 to be inlined into CanTp_ProcessReceivedFC.isra.0/79 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:1832
 Estimated badness is -inf, frequency 0.00.

Considering CanTp_PostponedTimeoutHandling/51 with 22 size
 to be inlined into CanTp_HandlePostponedFlags/50 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_UnlockChannel.c:82
 Estimated badness is -1.166423, frequency 9.09.

Considering CanTp_StallHandling/8 with 9 size
 to be inlined into CanTp_ChannelHandling/7 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_MainFunction.c:399
 Estimated badness is -0.394737, frequency 0.50.

Considering CanTp_STminTimeoutHandling.part.0/80 with 7 size
 to be inlined into CanTp_STminTimeoutHandling/37 in unknown:0
 Estimated badness is -0.068105, frequency 0.16.

Considering CanTp_IsValidConfig.part.0/70 with 10 size
 to be inlined into CanTp_IsValidConfig/1 in unknown:0
 Estimated badness is -0.060451, frequency 0.06.

Considering CanTp_ProcessStartOfReception.part.0/75 with 13 size
 to be inlined into CanTp_ProcessStartOfReception/15 in unknown:0
 Estimated badness is -0.036825, frequency 0.20.

Considering CanTp_TxStateHandling.part.0/78 with 71 size
 to be inlined into CanTp_TxStateHandling/43 in unknown:0
 Estimated badness is -0.003446, frequency 0.33.

Considering CanTp_ProcessReceivedLastCF/30 with 54 size
 to be inlined into CanTp_ProcessReceivedCF/28 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:1464
 Estimated badness is -0.002252, frequency 0.14.

Considering CanTp_RxChannelCleanup.part.0/73 with 7 size
 to be inlined into CanTp_RxChannelCleanup/24 in unknown:0
 Estimated badness is -0.001842, frequency 0.17.

Considering CanTp_VerifyBlockSize.part.0/71 with 13 size
 to be inlined into CanTp_VerifyBlockSize/11 in unknown:0
 Estimated badness is -0.001414, frequency 0.33.

Considering CanTp_TransmitPostponedFrame.part.0/76 with 22 size
 to be inlined into CanTp_TransmitPostponedFrame/41 in unknown:0
 Estimated badness is -0.001314, frequency 0.66.

Considering CanTp_ProcessReceivedIntermediateCF/29 with 89 size
 to be inlined into CanTp_ProcessReceivedCF/28 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:1472
 Estimated badness is -0.001158, frequency 0.14.

Considering CanTp_TransmitPostponedFlowControl.part.0/77 with 24 size
 to be inlined into CanTp_TransmitPostponedFlowControl/42 in unknown:0
 Estimated badness is -0.001086, frequency 0.66.

Considering CanTp_FindNSduId.constprop/81 with 56 size
 to be inlined into CanTp_RxIndication/20 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:433
 Estimated badness is -0.000895, frequency 0.12.

Considering CanTp_CheckNPduLength.part.0/69 with 7 size
 to be inlined into CanTp_CheckNPduLength/32 in unknown:0
 Estimated badness is -0.000566, frequency 0.03.

Considering CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74 with 16 size
 to be inlined into CanTp_CheckAndHandleWaitFrameTimeOut/12 in unknown:0
 Estimated badness is -0.000353, frequency 0.50.

Considering CanTp_ProcessConfirmedCF/49 with 69 size
 to be inlined into CanTp_ProcessTxPdu/48 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_TxConfirmation.c:386
 Estimated badness is -0.000344, frequency 0.05.

Considering CanTp_PostponeRxFrame/22 with 16 size
 to be inlined into CanTp_RxIndication/20 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:531
 Estimated badness is -0.000341, frequency 0.00.

Considering CanTp_ProcessReceivedFC.isra.0/79 with 84 size
 to be inlined into CanTp_ProcessRxFrame/23 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:747
 Estimated badness is -0.000290, frequency 0.04.

Considering CanTp_ValidateFCLength/33 with 30 size
 to be inlined into CanTp_RxIndication/20 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:467
 Estimated badness is -0.000286, frequency 0.02.

Considering CanTp_ValidateNAI/34 with 42 size
 to be inlined into CanTp_RxIndication/20 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:496
 Estimated badness is -0.000272, frequency 0.03.

Considering CanTp_ProcessReceivedSF/26 with 114 size
 to be inlined into CanTp_ProcessRxFrame/23 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:709
 Estimated badness is -0.000256, frequency 0.07.

Considering CanTp_ProcessReceivedFF/27 with 160 size
 to be inlined into CanTp_ProcessRxFrame/23 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:727
 Estimated badness is -0.000147, frequency 0.07.

Considering CanTp_ProcessStartOfReceptionData.part.0/72 with 8 size
 to be inlined into CanTp_ProcessStartOfReceptionData/16 in unknown:0
 Estimated badness is -0.000071, frequency 0.33.

Considering CanTp_ProcessReceivedCF/28 with 165 size
 to be inlined into CanTp_ProcessRxFrame/23 in D:/eb2/plugins/CanTp_TS_TxDxM6I8R0/src/CanTp_RxIndication.c:738
 Estimated badness is -0.000027, frequency 0.01.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 1790.234678 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :       84 calls, 50.343794 freq, 0 count
--param max-inline-insns-auto limit reached       :       59 calls, 8.210733 freq, 0 count
call is unlikely and code size would grow         :       66 calls, 32.554157 freq, 0 count
unreachable                                       :        8 calls, 0.000000 freq, 0 count
IPA function summary for CanTp_TxStateHandling.part.0/78 inlinable
  global time:     34.657224
  self size:       71
  global size:     71
  min size:       44
  self stack:      0
  global stack:    0
  estimated growth:-10
    size:44.000000, time:11.381818
    size:7.000000, time:2.633601,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:0.833300,  nonconst if:(op0[ref offset: 80] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.488800,  executed if:(op1 != 1)
  calls:
    CanTp_RequestTxFrameData/44 call is unlikely and code size would grow
      loop depth: 0 freq:0.49 size: 3 time: 12callee size:28 stack: 8 predicate: (op1 != 1)
    CanTp_PreparePadding/14 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 5 time: 14callee size:22 stack: 0
       op3 is compile time invariant
    CanTp_TransmitFrame/40 call is unlikely and code size would grow
      loop depth: 0 freq:0.16 size: 3 time: 12callee size:22 stack: 8
       op1 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_CancelReceive/52 inlinable
  global time:     29.020683
  self size:       80
  global size:     80
  min size:       58
  self stack:      0
  global stack:    0
    size:47.000000, time:8.403972
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.255600,  nonconst if:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.13 size: 2 time: 11callee size:18 stack: 0
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.06 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.02 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.02 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.13 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.13 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.26 size: 1 time: 10
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.26 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_HandlePostponedFlags/50 inlinable
  global time:     540.135687
  self size:       22
  global size:     36
  min size:       17
  self stack:      0
  global stack:    0
  estimated growth:112
    size:16.500000, time:73.626137
    size:4.500000, time:12.636364,  executed if:(not inlined)
  calls:
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 1 freq:3.00 size: 1 time: 10
    CanTp_PostSTminCallback/36 call is unlikely and code size would grow
      loop depth: 1 freq:6.09 size: 2 time: 11callee size: 8 stack: 0
       op0 change 16.410000% of time
    CanTp_PostRxIndication/21 call is unlikely and code size would grow
      loop depth: 1 freq:6.09 size: 2 time: 11callee size:18 stack:72
       op0 change 16.410000% of time
    CanTp_PostTxConfirmation/47 call is unlikely and code size would grow
      loop depth: 1 freq:6.09 size: 2 time: 11callee size: 8 stack: 0
       op0 change 16.410000% of time
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 1 freq:6.09 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 1 freq:9.09 size: 1 time: 10
    CanTp_PostponedTimeoutHandling/51 inlined
      loop depth: 1 freq:9.09 size: 2 time: 11callee size:11 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
        loop depth: 1 freq:0.99 size: 1 time: 10
      SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
        loop depth: 1 freq:1.01 size: 1 time: 10
      CanTp_TimeoutHandling/6 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:1.01 size: 2 time: 11callee size:36 stack: 0
         op0 change 10.990000% of time
      SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
        loop depth: 1 freq:1.01 size: 1 time: 10
      SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
        loop depth: 1 freq:3.00 size: 1 time: 10

IPA function summary for CanTp_ProcessTxPdu/48 inlinable
  global time:     25.324698
  self size:       111
  global size:     168
  min size:       14
  self stack:      0
  global stack:    0
  estimated growth:83
    size:14.000000, time:8.000000
    size:3.000000, time:2.000204,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:2.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:17.500000, time:4.860000,  nonconst if:(op0[ref offset: 736] changed)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 113) && (not inlined),  nonconst if:(op0[ref offset: 1816] changed) && (op0[ref offset: 736] == 113) && (not inlined)
    size:4.500000, time:0.194344,  executed if:(op0[ref offset: 736] == 113),  nonconst if:(op0[ref offset: 1816] changed) && (op0[ref offset: 736] == 113)
    size:2.000000, time:0.048586,  executed if:(op0[ref offset: 736] == 113) && (not inlined)
    size:7.000000, time:0.170051,  executed if:(op0[ref offset: 736] == 113)
    size:1.000000, time:0.024293,  executed if:(op0[ref offset: 736] == 113),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] == 113)
    size:19.500000, time:0.813816,  executed if:(op0[ref offset: 736] == 86)
    size:1.000000, time:0.048586,  executed if:(op0[ref offset: 736] == 86),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] == 86)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 86) && (not inlined),  nonconst if:(op0[ref offset: 760] changed) && (op0[ref offset: 736] == 86) && (not inlined)
    size:3.500000, time:0.170051,  executed if:(op0[ref offset: 736] == 86),  nonconst if:(op0[ref offset: 760] changed) && (op0[ref offset: 736] == 86)
    size:2.500000, time:0.085026,  executed if:(op0[ref offset: 736] == 86) && (not inlined)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 86) && (not inlined),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 736] == 86) && (not inlined)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 86),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 736] == 86)
    size:1.000000, time:0.048586,  executed if:(op0[ref offset: 736] == 84) && (not inlined)
    size:6.000000, time:0.291516,  executed if:(op0[ref offset: 736] == 84)
    size:1.000000, time:0.048586,  executed if:(op0[ref offset: 736] == 84),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] == 84)
    size:0.500000, time:0.016082,  executed if:(op0[ref offset: 736] == 114)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] == 114)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 736] == 114)
    size:0.500000, time:0.024293,  executed if:(op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 736] == 114)
    size:2.000000, time:0.097172,  executed if:(op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 32] changed) && (op0[ref offset: 736] == 114)
    size:2.500000, time:0.096880,  executed if:(op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 744] changed) && (op0[ref offset: 736] == 114)
    size:0.500000, time:0.009688,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 752] changed) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 114)
    size:2.000000, time:0.038752,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 744] changed || op0[ref offset: 752] changed) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 114)
    size:1.500000, time:0.048246,  executed if:(op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 1816] changed) && (op0[ref offset: 736] == 114)
    size:2.500000, time:0.080411,  executed if:(op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 776] changed) && (op0[ref offset: 736] == 114)
    size:21.000000, time:0.601679,  executed if:(op0[ref offset: 776] != 0) && (op0[ref offset: 736] == 114)
    size:1.000000, time:0.021550,  executed if:(op0[ref offset: 776] != 0) && (op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 776] != 0) && (op0[ref offset: 80] changed) && (op0[ref offset: 736] == 114)
    size:5.000000, time:0.073486,  executed if:(op0[ref offset: 776] != 0) && (op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 776] != 0) && (op0[ref offset: 776] changed) && (op0[ref offset: 736] == 114)
    size:4.000000, time:0.075425,  executed if:(op0[ref offset: 776] != 0) && (op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 776] != 0) && (op0[ref offset: 1816] changed) && (op0[ref offset: 736] == 114)
    size:0.500000, time:0.005307,  executed if:(op0[ref offset: 776] == 0) && (op0[ref offset: 736] == 114)
    size:6.000000, time:0.039527,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 114)
    size:1.000000, time:0.006588,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 114),  nonconst if:(op0[ref offset: 744] != 0) && (op0[ref offset: 80] changed) && (op0[ref offset: 736] == 114)
  calls:
    CanTp_TransmitPostponedFrame/41 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 2 time: 11callee size:12 stack: 0 predicate: (op0[ref offset: 736] == 85)
    CanTp_StopChannel/38 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 85)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_TransmitPostponedFrame/41 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 2 time: 11callee size:12 stack: 0 predicate: (op0[ref offset: 736] == 86)
    CanTp_TransmitPostponedFrame/41 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 2 time: 11callee size:12 stack: 0 predicate: (op0[ref offset: 736] == 84)
    CanTp_TransmitPostponedFlowControl/42 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 2 time: 11callee size:13 stack: 0 predicate: (op0[ref offset: 736] == 114)
    CanTp_ProcessConfirmedCF/49 inlined
      loop depth: 0 freq:0.05 size: 2 time: 11callee size:34 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_TxStateHandling/85 inlined
        loop depth: 0 freq:0.01 size: 3 time: 12callee size:17 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        CanTp_TxStateHandling.part.0/78 --param max-inline-insns-auto limit reached
          loop depth: 0 freq:0.00 size: 3 time: 12callee size:35 stack: 0 predicate: (op0[ref offset: 776] == 0) && (op0[ref offset: 736] == 114)
           op1 is compile time invariant
        __builtin_unreachable/83 unreachable
          loop depth: 0 freq:0.00 size: 0 time:  0 predicate: (false)
        __builtin_unreachable/83 unreachable
          loop depth: 0 freq:0.00 size: 0 time:  0 predicate: (false)
           op1 is compile time invariant
           op2 is compile time invariant
      CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.01 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 114)
         op1 is compile time invariant
         op2 is compile time invariant
    CanTp_TransmitPostponedFlowControl/42 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 2 time: 11callee size:13 stack: 0 predicate: (op0[ref offset: 736] == 113)
    CanTp_TransmitPostponedFlowControl/42 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 2 time: 11callee size:13 stack: 0 predicate: (op0[ref offset: 736] == 112)
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.05 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 112)
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_PostTxConfirmation/47 inlinable
  global time:     33.460000
  self size:       17
  global size:     17
  min size:       8
  self stack:      0
  global stack:    0
  estimated growth:11
    size:7.500000, time:6.500000
    size:4.500000, time:3.000000,  executed if:(not inlined)
  calls:
    CanTp_ProcessTxPdu/48 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:84 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_TxConfirmation/46 inlinable
  global time:     31.971911
  self size:       57
  global size:     57
  min size:       38
  self stack:      0
  global stack:    0
    size:34.000000, time:10.974777
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.342504,  nonconst if:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.11 size: 2 time: 11callee size:18 stack: 0
    CanTp_ProcessTxPdu/48 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:84 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.11 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.08 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.15 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.34 size: 1 time: 10
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_ProcessCopyTxData/45 inlinable
  global time:     29.340000
  self size:       23
  global size:     23
  min size:       12
  self stack:      2
  global stack:    2
  estimated growth:7
    size:11.500000, time:10.005000
    size:3.500000, time:2.335000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
  calls:
    PduR_CanTpCopyTxData/68 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_RequestTxFrameData/44 inlinable
  global time:     39.235000
  self size:       57
  global size:     57
  min size:       36
  self stack:      8
  global stack:    8
  estimated growth:33
    size:35.500000, time:17.232500
    size:8.500000, time:4.582500,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 1288] changed)
  calls:
    CanTp_ProcessCopyTxData/45 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 4 time: 13callee size:11 stack: 2
       op1 is compile time invariant
    CanTp_ProcessCopyTxData/45 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:11 stack: 2
       op1 is compile time invariant
    CanTp_PreparexF/13 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:34 stack: 0 predicate: (op0[ref offset: 1288] == 0)

IPA function summary for CanTp_TxStateHandling/43 inlinable
  global time:     16.498700
  self size:       35
  global size:     35
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:26
    size:0.000000, time:0.000000
    size:3.000000, time:1.999667,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:6.500000, time:2.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:3.000000, time:0.416600,  executed if:(op0[ref offset: 736] == 122) && (not inlined)
    size:12.000000, time:1.638678,  executed if:(op0[ref offset: 736] == 122)
  calls:
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 122)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_RequestTxFrameData/44 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:28 stack: 8 predicate: (op0[ref offset: 736] == 122)
    CanTp_TxStateHandling.part.0/78 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:35 stack: 0 predicate: (op0[ref offset: 736] <= 98) && (op0[ref offset: 736] >= 96)

IPA function summary for CanTp_TransmitPostponedFlowControl/42 inlinable
  global time:     13.735000
  self size:       7
  global size:     26
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:8
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:12.000000, time:3.795000,  executed if:(op0 != 255)
  calls:
    CanTp_TransmitPostponedFlowControl.part.0/77 inlined
      loop depth: 0 freq:0.66 size: 2 time: 11callee size:12 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_PrepareFC/9 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.16 size: 3 time: 12callee size:23 stack:72 predicate: (op0 != 255)
         op1 is compile time invariant
      CanTp_PrepareFC/9 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.16 size: 3 time: 12callee size:23 stack:72 predicate: (op0 != 255)
         op1 is compile time invariant
      CanTp_PrepareFC/9 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.16 size: 3 time: 12callee size:23 stack:72 predicate: (op0 != 255)
         op1 is compile time invariant

IPA function summary for CanTp_TransmitPostponedFrame/41 inlinable
  global time:     9.846016
  self size:       7
  global size:     24
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:8
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:16.000000, time:4.243008,  executed if:(op0 != 255)
  calls:
    CanTp_TransmitPostponedFrame.part.0/76 inlined
      loop depth: 0 freq:0.66 size: 2 time: 11callee size:11 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_TransmitFrame/40 call is unlikely and code size would grow
        loop depth: 0 freq:0.13 size: 3 time: 12callee size:22 stack: 8 predicate: (op0 != 255)
         op1 is compile time invariant

IPA function summary for CanTp_TransmitFrame/40 inlinable
  global time:     42.531000
  self size:       45
  global size:     45
  min size:       13
  self stack:      8
  global stack:    8
  estimated growth:90
    size:12.500000, time:7.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:2.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:4.000000, time:3.340000,  nonconst if:(op1 changed)
    size:0.500000, time:0.150000,  executed if:(op1 == 0B) && (not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (op1 == 0B) && (not inlined)
    size:0.500000, time:0.150000,  executed if:(op1 == 0B),  nonconst if:(op0[ref offset: 1288] changed) && (op1 == 0B)
    size:2.500000, time:0.700500,  executed if:(op1 == 0B)
    size:0.500000, time:0.350000,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:0.500000, time:0.350000,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:2.000000, time:1.400000,  executed if:(op1 != 0B)
    size:0.500000, time:0.350000,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1 != 0B) && (not inlined)
    size:0.500000, time:0.350000,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op1 != 0B)
    size:0.500000, time:0.100500,  executed if:(op1 == 0B) && (not inlined)
  calls:
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanIf_Transmit/66 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for CanTp_Transmit/39 inlinable
  global time:     29.958801
  self size:       101
  global size:     101
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.044800
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.685008,  nonconst if:(op1 changed)
    size:0.500000, time:0.141403,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:0.707014,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op1 != 0B)
    size:55.500000, time:4.719940,  executed if:(op1[ref offset: 32] != 0) && (op1 != 0B)
    size:1.000000, time:0.189480,  executed if:(op1[ref offset: 32] != 0) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 32] != 0) && (op1 != 0B)
    size:0.500000, time:0.023685,  executed if:(op1[ref offset: 32] != 0) && (op1 != 0B) && (not inlined)
  calls:
    CanTp_HandlePostponedFlags/50 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.09 size: 2 time: 11callee size:18 stack: 0 predicate: (op1[ref offset: 32] != 0) && (op1 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.02 size: 5 time: 14 predicate: (op1[ref offset: 32] != 0) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.19 size: 1 time: 10 predicate: (op1[ref offset: 32] != 0) && (op1 != 0B)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.19 size: 1 time: 10 predicate: (op1[ref offset: 32] != 0) && (op1 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.09 size: 5 time: 14 predicate: (op1[ref offset: 32] == 0) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.06 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_StopChannel/38 inlinable
  global time:     51.982544
  self size:       48
  global size:     48
  min size:       17
  self stack:      0
  global stack:    0
  estimated growth:1272
    size:16.500000, time:9.127000
    size:5.500000, time:3.095000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:0.702400,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 736] != 0),  nonconst if:(op1 changed) && (op0[ref offset: 736] != 0)
    size:3.000000, time:0.510000,  executed if:(op1 == 1) && (op0[ref offset: 736] != 0),  nonconst if:(op0[ref offset: 736] changed) && (op1 == 1) && (op0[ref offset: 736] != 0)
    size:5.000000, time:0.172040,  executed if:(op1 == 1) && (op0[ref offset: 736] != 0)
    size:1.000000, time:0.034408,  executed if:(op1 == 1) && (op0[ref offset: 736] != 0),  nonconst if:(op0[ref offset: 80] changed) && (op1 == 1) && (op0[ref offset: 736] != 0)
  calls:
    PduR_CanTpTxConfirmation/65 function body not available
      loop depth: 0 freq:0.20 size: 3 time: 12
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    CanTp_InitChannelPtr/3 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:14 stack: 0
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    PduR_CanTpRxIndication/64 function body not available
      loop depth: 0 freq:0.03 size: 3 time: 12 predicate: (op1 == 1) && (op0[ref offset: 736] != 0)

IPA function summary for CanTp_STminTimeoutHandling/37 inlinable
  global time:     8.333654
  self size:       14
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:2
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:2.000000, time:1.595200,  executed if:(op0[ref offset: 736] != 106),  nonconst if:(op0[ref offset: 736] changed) && (op0[ref offset: 736] != 106)
    size:0.500000, time:0.101200,  executed if:(op0[ref offset: 736] == 106) && (not inlined)
    size:0.500000, time:0.101200,  executed if:(op0[ref offset: 736] == 106)
    size:0.500000, time:0.080717,  executed if:(op0[ref offset: 736] == 122) && (op0[ref offset: 736] != 106)
  calls:
    CanTp_STminTimeoutHandling.part.0/80 inlined
      loop depth: 0 freq:0.16 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_TxStateHandling/82 inlined
        loop depth: 0 freq:0.16 size: 3 time: 12callee size:17 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        CanTp_TxStateHandling.part.0/78 --param max-inline-insns-auto limit reached
          loop depth: 0 freq:0.05 size: 3 time: 12callee size:35 stack: 0 predicate: (op0[ref offset: 736] == 122) && (op0[ref offset: 736] != 106)
           op1 is compile time invariant
        __builtin_unreachable/83 unreachable
          loop depth: 0 freq:0.00 size: 0 time:  0 predicate: (false)
        __builtin_unreachable/83 unreachable
          loop depth: 0 freq:0.00 size: 0 time:  0 predicate: (false)
           op1 is compile time invariant
           op2 is compile time invariant
    CanTp_TxStateHandling/84 inlined
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:17 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_TxStateHandling.part.0/78 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.07 size: 3 time: 12callee size:35 stack: 0 predicate: (op0[ref offset: 736] == 106)
         op1 is compile time invariant
      __builtin_unreachable/83 unreachable
        loop depth: 0 freq:0.00 size: 0 time:  0 predicate: (false)
      __builtin_unreachable/83 unreachable
        loop depth: 0 freq:0.00 size: 0 time:  0 predicate: (false)
         op1 is compile time invariant
         op2 is compile time invariant

IPA function summary for CanTp_PostSTminCallback/36 inlinable
  global time:     33.500000
  self size:       16
  global size:     16
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:9
    size:6.000000, time:4.750000
    size:5.000000, time:3.250000,  executed if:(not inlined)
  calls:
    CanTp_STminTimeoutHandling/37 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 8 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_STminCallback/35 inlinable
  global time:     38.500000
  self size:       18
  global size:     18
  min size:       8
  self stack:      0
  global stack:    0
  estimated growth:13
    size:8.000000, time:5.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:18 stack: 0
    CanTp_STminTimeoutHandling/37 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 8 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_CheckNPduLength/32 inlinable
  global time:     8.531286
  self size:       26
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:10
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.320000,  executed if:(op1 != 2),  nonconst if:(op0 changed) && (op1 != 2)
    size:2.000000, time:0.660000,  executed if:(op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.435600,  executed if:(op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.287496,  executed if:(op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.189747,  executed if:(op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.125233,  executed if:(op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.082654,  executed if:(op0 != 24) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 24) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2)
    size:2.000000, time:0.660000,  executed if:(op0 <= 7) && (op1 != 2),  nonconst if:(op1 changed) && (op0 <= 7) && (op1 != 2)
    size:2.000000, time:0.680000,  executed if:(op1 == 2),  nonconst if:(op0 changed || op2 changed) && (op1 == 2)
    size:2.000000, time:0.054552,  executed if:(op0 != 32) && (op0 != 24) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7) && (op1 != 2),  nonconst if:(op0 changed) && (op0 != 32) && (op0 != 24) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7)
    size:2.000000, time:0.036004,  executed if:(op0 != 48) && (op0 != 32) && (op0 != 24) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8) && (op0 > 7),  nonconst if:(op0 != 48) && (op0 changed) && (op0 != 32) && (op0 != 24) && (op0 != 20) && (op0 != 16) && (op0 != 12) && (op0 != 8)
  calls:
    CanTp_CheckNPduLength.part.0/69 inlined
      loop depth: 0 freq:0.03 size: 3 time: 12callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for CanTp_RxChannelCleanup/24 inlinable
  global time:     13.480000
  self size:       22
  global size:     24
  min size:       7
  self stack:      0
  global stack:    0
  estimated growth:10
    size:7.000000, time:2.380000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:0.500000, time:0.170000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:0.510000,  nonconst if:(op0[ref offset: 80] changed)
  calls:
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.17 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_RxChannelCleanup.part.0/73 inlined
      loop depth: 0 freq:0.17 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.17 size: 4 time: 13callee size:24 stack: 0
         op1 is compile time invariant
         op2 is compile time invariant

IPA function summary for CanTp_ProcessRxFrame/23 inlinable
  global time:     26.078517
  self size:       57
  global size:     528
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:35
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:10.000000, time:4.000000,  nonconst if:(op3 changed)
    size:0.500000, time:0.100000,  executed if:(op3 == 48) && (not inlined),  nonconst if:(op0[ref offset: 80] changed) && (op3 == 48) && (not inlined)
    size:2.000000, time:0.160720,  executed if:(op3 == 48),  nonconst if:(op0[ref offset: 80] changed) && (op3 == 48)
    size:2.000000, time:0.400000,  executed if:(op3 == 48),  nonconst if:(op0[ref offset: 80] changed || op2 changed) && (op3 == 48)
    size:0.500000, time:0.100000,  executed if:(op3 == 32) && (not inlined),  nonconst if:(op0[ref offset: 80] changed) && (op3 == 32) && (not inlined)
    size:0.500000, time:0.100000,  executed if:(op3 == 32),  nonconst if:(op0[ref offset: 80] changed) && (op3 == 32)
    size:2.000000, time:0.400000,  executed if:(op3 == 32),  nonconst if:(op0[ref offset: 80] changed || op2 changed) && (op3 == 32)
    size:0.500000, time:0.034000,  executed if:(op3 == 32) && (not inlined),  nonconst if:(op0[ref offset: 736] changed) && (op3 == 32) && (not inlined)
    size:6.000000, time:0.272408,  executed if:(op3 == 32),  nonconst if:(op0[ref offset: 736] changed) && (op3 == 32)
    size:1.000000, time:0.133000,  executed if:(op3 == 16) && (not inlined)
    size:113.000000, time:3.673999,  executed if:(op3 == 16)
    size:1.000000, time:0.133000,  executed if:(op3 == 0) && (not inlined)
    size:77.500000, time:2.527234,  executed if:(op3 == 0)
    size:9.000000, time:0.323840,  executed if:(op3 == 48)
    size:6.500000, time:0.101200,  executed if:(op3 == 48),  nonconst if:(op0[ref offset: 736] changed) && (op3 == 48)
    size:2.500000, time:0.050600,  executed if:(op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48),  nonconst if:(op0[ref offset: 744] changed) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:0.500000, time:0.005060,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48),  nonconst if:(op0[ref offset: 752] changed) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:2.000000, time:0.020240,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48),  nonconst if:(op0[ref offset: 744] changed || op0[ref offset: 752] changed) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:0.500000, time:0.001720,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:0.500000, time:0.001720,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:2.000000, time:0.006882,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48),  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:0.500000, time:0.001135,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48),  nonconst if:(op1[ref offset: 0] changed) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:30.500000, time:0.024058,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:2.000000, time:0.001135,  executed if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48),  nonconst if:(op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op0[ref offset: 736] changed) && (op3 == 48)
    size:2.000000, time:0.000906,  executed if:(op0[ref offset: 736] != 228) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:0.500000, time:0.000057,  executed if:(op0[ref offset: 736] == 228) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
    size:2.000000, time:0.018167,  executed if:(op0[ref offset: 736] != 194) && (op3 == 32),  nonconst if:(op0[ref offset: 736] != 194) && (op0[ref offset: 736] changed) && (op3 == 32)
    size:90.000000, time:0.183210,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
    size:3.000000, time:0.014630,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op0[ref offset: 80] changed) && (op3 == 32)
    size:3.000000, time:0.006421,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op0[ref offset: 768] changed) && (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
    size:1.000000, time:0.004391,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op1[ref offset: 0] changed) && (op3 == 32)
    size:0.500000, time:0.001985,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op0[ref offset: 32] changed) && (op3 == 32)
    size:0.500000, time:0.001985,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op0[ref offset: 64] changed) && (op3 == 32)
    size:1.000000, time:0.003971,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op0[ref offset: 32] changed || op0[ref offset: 64] changed) && (op3 == 32)
    size:1.000000, time:0.002978,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op0[ref offset: 1808] changed) && (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
    size:1.500000, time:0.002978,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op0[ref offset: 1816] changed) && (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
    size:0.500000, time:0.000993,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
    size:2.000000, time:0.003971,  executed if:(op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32),  nonconst if:(op0[ref offset: 1808] changed || op1[ref offset: 32] changed) && (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
  calls:
    CanTp_ProcessReceivedFC.isra.0/79 inlined
      loop depth: 0 freq:0.04 size: 3 time: 12callee size:42 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.00 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
         op1 is compile time invariant
         op2 is compile time invariant
      CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.00 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
         op1 is compile time invariant
         op2 is compile time invariant
      CanTp_TxStateHandling/86 inlined
        loop depth: 0 freq:0.00 size: 3 time: 12callee size:17 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        CanTp_TxStateHandling.part.0/78 --param max-inline-insns-auto limit reached
          loop depth: 0 freq:0.00 size: 3 time: 12callee size:35 stack: 0 predicate: (op0[ref offset: 736] == 228) && (op0[ref offset: 744] != 0) && (op0[ref offset: 736] == 228 || op0[ref offset: 736] >= 113) && (op0[ref offset: 736] <= 114 || op0[ref offset: 736] == 228) && (op3 == 48)
           op1 is compile time invariant
        __builtin_unreachable/83 unreachable
          loop depth: 0 freq:0.00 size: 0 time:  0 predicate: (false)
        __builtin_unreachable/83 unreachable
          loop depth: 0 freq:0.00 size: 0 time:  0 predicate: (false)
           op1 is compile time invariant
           op2 is compile time invariant
    CanTp_ProcessReceivedCF/28 inlined
      loop depth: 0 freq:0.01 size: 3 time: 12callee size:82 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_ProcessReceivedIntermediateCF/29 inlined
        loop depth: 0 freq:0.00 size: 3 time: 12callee size:44 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Det_ASR40_ReportError/55 function body not available
          loop depth: 0 freq:0.00 size: 5 time: 14 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
           op0 is compile time invariant
           op1 is compile time invariant
           op2 is compile time invariant
           op3 is compile time invariant
        CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
          loop depth: 0 freq:0.00 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
           op1 is compile time invariant
           op2 is compile time invariant
        CanTp_CheckAndHandleWaitFrameTimeOut/12 call is unlikely and code size would grow
          loop depth: 0 freq:0.00 size: 2 time: 11callee size: 9 stack: 0 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
        CanTp_TryToSendFC/19 call is unlikely and code size would grow
          loop depth: 0 freq:0.00 size: 3 time: 12callee size:22 stack: 0 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
           op1 is compile time invariant
        CanTp_VerifyBlockSize/11 call is unlikely and code size would grow
          loop depth: 0 freq:0.00 size: 3 time: 12callee size: 9 stack: 1 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
        CanTp_RxProcessData/17 call is unlikely and code size would grow
          loop depth: 0 freq:0.00 size: 5 time: 14callee size:11 stack:10 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
      CanTp_ProcessReceivedLastCF/30 inlined
        loop depth: 0 freq:0.00 size: 4 time: 13callee size:27 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Det_ASR40_ReportError/55 function body not available
          loop depth: 0 freq:0.00 size: 5 time: 14 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
           op0 is compile time invariant
           op1 is compile time invariant
           op2 is compile time invariant
           op3 is compile time invariant
        CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
          loop depth: 0 freq:0.00 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
           op1 is compile time invariant
           op2 is compile time invariant
        CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
          loop depth: 0 freq:0.00 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
           op1 is compile time invariant
           op2 is compile time invariant
        CanTp_RxProcessData/17 call is unlikely and code size would grow
          loop depth: 0 freq:0.00 size: 5 time: 14callee size:11 stack:10 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
        CanTp_CheckNPduLength/32 call is unlikely and code size would grow
          loop depth: 0 freq:0.00 size: 5 time: 14callee size:13 stack: 0 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
      CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.00 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 194 || op0[ref offset: 736] == 84) && (op3 == 32)
         op1 is compile time invariant
         op2 is compile time invariant
    CanTp_ProcessReceivedFF/27 inlined
      loop depth: 0 freq:0.07 size: 3 time: 12callee size:80 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Det_ASR40_ReportError/55 function body not available
        loop depth: 0 freq:0.04 size: 5 time: 14 predicate: (op3 == 16)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
      Det_ASR40_ReportError/55 function body not available
        loop depth: 0 freq:0.02 size: 5 time: 14 predicate: (op3 == 16)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
      CanTp_StopChannel/38 call is unlikely and code size would grow
        loop depth: 0 freq:0.06 size: 4 time: 13callee size:24 stack: 0 predicate: (op3 == 16)
         op1 is compile time invariant
         op2 is compile time invariant
      CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.00 size: 4 time: 13callee size:24 stack: 0 predicate: (op3 == 16)
         op1 is compile time invariant
         op2 is compile time invariant
      CanTp_CheckAndHandleWaitFrameTimeOut/12 call is unlikely and code size would grow
        loop depth: 0 freq:0.00 size: 2 time: 11callee size: 9 stack: 0 predicate: (op3 == 16)
      TS_MemCpy32/63 function body not available
        loop depth: 0 freq:0.00 size: 4 time: 13 predicate: (op3 == 16)
      CanTp_CheckAndHandleWaitFrameTimeOut/12 call is unlikely and code size would grow
        loop depth: 0 freq:0.00 size: 2 time: 11callee size: 9 stack: 0 predicate: (op3 == 16)
      CanTp_TryToSendFC/19 call is unlikely and code size would grow
        loop depth: 0 freq:0.00 size: 3 time: 12callee size:22 stack: 0 predicate: (op3 == 16)
         op1 is compile time invariant
      CanTp_CalculateBlockSize/10 call is unlikely and code size would grow
        loop depth: 0 freq:0.00 size: 4 time: 13callee size:17 stack: 0 predicate: (op3 == 16)
      CanTp_ProcessStartOfReceptionData/16 call is unlikely and code size would grow
        loop depth: 0 freq:0.00 size: 5 time: 14callee size:14 stack: 0 predicate: (op3 == 16)
      CanTp_ProcessStartOfReception/15 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.01 size: 3 time: 12callee size:22 stack: 0 predicate: (op3 == 16)
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op3 == 16)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op3 == 16)
    CanTp_RxChannelCleanup/24 call is unlikely and code size would grow
      loop depth: 0 freq:0.20 size: 2 time: 11callee size:12 stack: 0 predicate: (op3 == 16)
    CanTp_ProcessReceivedSF/26 inlined
      loop depth: 0 freq:0.07 size: 3 time: 12callee size:57 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Det_ASR40_ReportError/55 function body not available
        loop depth: 0 freq:0.05 size: 5 time: 14 predicate: (op3 == 0)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
      CanTp_StopChannel/38 call is unlikely and code size would grow
        loop depth: 0 freq:0.05 size: 4 time: 13callee size:24 stack: 0 predicate: (op3 == 0)
         op1 is compile time invariant
         op2 is compile time invariant
      CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.00 size: 4 time: 13callee size:24 stack: 0 predicate: (op3 == 0)
         op1 is compile time invariant
         op2 is compile time invariant
      TS_MemCpy32/63 function body not available
        loop depth: 0 freq:0.00 size: 4 time: 13 predicate: (op3 == 0)
      CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.00 size: 4 time: 13callee size:24 stack: 0 predicate: (op3 == 0)
         op1 is compile time invariant
         op2 is compile time invariant
      CanTp_ProcessStartOfReceptionData/16 call is unlikely and code size would grow
        loop depth: 0 freq:0.00 size: 5 time: 14callee size:14 stack: 0 predicate: (op3 == 0)
      CanTp_ProcessStartOfReception/15 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.01 size: 3 time: 12callee size:22 stack: 0 predicate: (op3 == 0)
      CanTp_CheckNPduLength/32 call is unlikely and code size would grow
        loop depth: 0 freq:0.04 size: 5 time: 14callee size:13 stack: 0 predicate: (op3 == 0)
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op3 == 0)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op3 == 0)
    CanTp_RxChannelCleanup/24 call is unlikely and code size would grow
      loop depth: 0 freq:0.20 size: 2 time: 11callee size:12 stack: 0 predicate: (op3 == 0)

IPA function summary for CanTp_PostRxIndication/21 inlinable
  global time:     68.052728
  self size:       36
  global size:     36
  min size:       22
  self stack:      72
  global stack:    72
  estimated growth:27
    size:22.000000, time:35.557273
    size:7.000000, time:7.875455,  executed if:(not inlined)
  calls:
    CanTp_ProcessRxFrame/23 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.33 size: 5 time: 14callee size:264 stack: 0
       op1 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_RxIndication/20 inlinable
  global time:     44.984721
  self size:       180
  global size:     283
  min size:       50
  self stack:      3
  global stack:    3
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.022400,  nonconst if:(op1 changed)
    size:0.500000, time:0.211049,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:1.055245,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:4.000000, time:1.181874,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:0.500000, time:0.098982,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
    size:2.500000, time:0.494910,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:208.000000, time:22.330474,  executed if:(op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:2.000000, time:0.175198,  executed if:(op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:2.000000, time:0.046693,  executed if:(op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
  calls:
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.03 size: 5 time: 14 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_HandlePostponedFlags/50 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.00 size: 2 time: 11callee size:18 stack: 0 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    CanTp_ProcessRxFrame/23 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.00 size: 5 time: 14callee size:264 stack: 0 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.00 size: 5 time: 14 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.01 size: 1 time: 10 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    CanTp_PostponeRxFrame/22 inlined
      loop depth: 0 freq:0.00 size: 5 time: 14callee size: 8 stack: 0
      Stack frame offset 3, callee self size 0, callee size 0
      TS_MemCpy32/63 function body not available
        loop depth: 0 freq:0.00 size: 4 time: 13 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.01 size: 1 time: 10 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    CanTp_ValidateNAI/34 inlined
      loop depth: 0 freq:0.03 size: 6 time: 15callee size:21 stack: 0
      Stack frame offset 3, callee self size 0, callee size 0
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.00 size: 5 time: 14 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_ValidateFCLength/33 inlined
      loop depth: 0 freq:0.02 size: 5 time: 14callee size:15 stack: 0
      Stack frame offset 3, callee self size 0, callee size 0
    CanTp_FindNSduId.constprop/81 inlined
      loop depth: 0 freq:0.12 size: 6 time: 15callee size:28 stack: 0
      Stack frame offset 3, callee self size 0, callee size 0
      Det_ASR40_ReportError/55 function body not available
        loop depth: 0 freq:0.02 size: 5 time: 14 predicate: (op1[ref offset: 32] > 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1[ref offset: 32] <= 1) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14 predicate: (op1 == 0B || op1[ref offset: 0] == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_TryToSendFC/19 inlinable
  global time:     24.837813
  self size:       44
  global size:     44
  min size:       15
  self stack:      0
  global stack:    0
  estimated growth:126
    size:14.500000, time:10.639900
    size:4.500000, time:2.333100,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:6.000000, time:2.000000,  nonconst if:(op1 changed)
    size:3.000000, time:0.833250,  executed if:(op1 == 6)
    size:1.000000, time:0.166650,  executed if:(op1 == 6) && (not inlined)
    size:3.000000, time:0.833250,  executed if:(op1 == 4)
    size:1.000000, time:0.166650,  executed if:(op1 == 4) && (not inlined)
  calls:
    CanTp_PrepareFC/9 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.16 size: 3 time: 12callee size:23 stack:72
       op1 is compile time invariant
    CanTp_PrepareFC/9 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.16 size: 3 time: 12callee size:23 stack:72 predicate: (op1 == 6)
       op1 is compile time invariant
    CanTp_PrepareFC/9 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.16 size: 3 time: 12callee size:23 stack:72 predicate: (op1 == 4)
       op1 is compile time invariant

IPA function summary for CanTp_RxStateHandling/18 inlinable
  global time:     31.915350
  self size:       99
  global size:     99
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:88
    size:0.000000, time:0.000000
    size:3.000000, time:1.999850,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:8.500000, time:4.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:1.000000, time:0.249988,  executed if:(op0[ref offset: 736] == 66) && (not inlined)
    size:9.000000, time:0.916638,  executed if:(op0[ref offset: 736] == 66)
    size:3.000000, time:0.416638,  executed if:(op0[ref offset: 736] == 65) && (not inlined)
    size:12.000000, time:1.166613,  executed if:(op0[ref offset: 736] == 65)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 65) && (not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (op0[ref offset: 736] == 65) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 65),  nonconst if:(op0[ref offset: 1288] changed) && (op0[ref offset: 736] == 65)
    size:1.000000, time:0.249988,  executed if:(op0[ref offset: 736] == 64) && (not inlined)
    size:7.000000, time:0.749988,  executed if:(op0[ref offset: 736] == 64)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 64) && (not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (op0[ref offset: 736] == 64) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 64),  nonconst if:(op0[ref offset: 1288] changed) && (op0[ref offset: 736] == 64)
  calls:
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 66)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_CheckAndHandleWaitFrameTimeOut/12 call is unlikely and code size would grow
      loop depth: 0 freq:0.08 size: 2 time: 11callee size: 9 stack: 0 predicate: (op0[ref offset: 736] == 66)
    CanTp_CheckAndHandleWaitFrameTimeOut/12 call is unlikely and code size would grow
      loop depth: 0 freq:0.04 size: 2 time: 11callee size: 9 stack: 0 predicate: (op0[ref offset: 736] == 66)
    CanTp_TryToSendFC/19 call is unlikely and code size would grow
      loop depth: 0 freq:0.04 size: 3 time: 12callee size:22 stack: 0 predicate: (op0[ref offset: 736] == 66)
       op1 is compile time invariant
    CanTp_VerifyBlockSize/11 call is unlikely and code size would grow
      loop depth: 0 freq:0.08 size: 3 time: 12callee size: 9 stack: 1 predicate: (op0[ref offset: 736] == 66)
    CanTp_RxProcessData/17 call is unlikely and code size would grow
      loop depth: 0 freq:0.25 size: 5 time: 14callee size:11 stack:10 predicate: (op0[ref offset: 736] == 66)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 65)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_CheckAndHandleWaitFrameTimeOut/12 call is unlikely and code size would grow
      loop depth: 0 freq:0.08 size: 2 time: 11callee size: 9 stack: 0 predicate: (op0[ref offset: 736] == 65)
    CanTp_CheckAndHandleWaitFrameTimeOut/12 call is unlikely and code size would grow
      loop depth: 0 freq:0.04 size: 2 time: 11callee size: 9 stack: 0 predicate: (op0[ref offset: 736] == 65)
    CanTp_TryToSendFC/19 call is unlikely and code size would grow
      loop depth: 0 freq:0.04 size: 3 time: 12callee size:22 stack: 0 predicate: (op0[ref offset: 736] == 65)
       op1 is compile time invariant
    CanTp_CalculateBlockSize/10 call is unlikely and code size would grow
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:17 stack: 0 predicate: (op0[ref offset: 736] == 65)
    CanTp_ProcessStartOfReceptionData/16 call is unlikely and code size would grow
      loop depth: 0 freq:0.25 size: 5 time: 14callee size:14 stack: 0 predicate: (op0[ref offset: 736] == 65)
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 64)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.08 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 64)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_ProcessStartOfReceptionData/16 call is unlikely and code size would grow
      loop depth: 0 freq:0.25 size: 5 time: 14callee size:14 stack: 0 predicate: (op0[ref offset: 736] == 64)

IPA function summary for CanTp_RxProcessData/17 inlinable
  global time:     28.500000
  self size:       22
  global size:     22
  min size:       11
  self stack:      10
  global stack:    10
  estimated growth:78
    size:11.000000, time:10.000000
    size:4.000000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
  calls:
    PduR_CanTpCopyRxData/62 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_ProcessStartOfReceptionData/16 inlinable
  global time:     19.587440
  self size:       26
  global size:     28
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:68
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:0.500000, time:0.335000,  executed if:(op2 != 0) && (not inlined),  nonconst if:(op0[ref offset: 48] changed) && (op2 != 0) && (not inlined)
    size:0.500000, time:0.335000,  executed if:(op2 != 0),  nonconst if:(op0[ref offset: 48] changed) && (op2 != 0)
    size:2.000000, time:1.340000,  executed if:(op2 != 0),  nonconst if:(op2 changed || op0[ref offset: 48] changed) && (op2 != 0)
    size:4.500000, time:1.840825,  executed if:(op2 != 0)
    size:0.500000, time:0.279725,  executed if:(op2 != 0) && (not inlined)
  calls:
    CanTp_RxProcessData/17 call is unlikely and code size would grow
      loop depth: 0 freq:0.27 size: 5 time: 14callee size:11 stack:10 predicate: (op2 != 0)
    CanTp_RxProcessData/17 call is unlikely and code size would grow
      loop depth: 0 freq:0.22 size: 5 time: 14callee size:11 stack:10 predicate: (op2 != 0)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_ProcessStartOfReceptionData.part.0/72 inlined
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_RxProcessData/17 call is unlikely and code size would grow
        loop depth: 0 freq:0.33 size: 5 time: 14callee size:11 stack:10 predicate: (op2 == 0)
         op1 is compile time invariant
         op2 is compile time invariant

IPA function summary for CanTp_ProcessStartOfReception/15 inlinable
  global time:     36.432000
  self size:       38
  global size:     45
  min size:       18
  self stack:      0
  global stack:    0
  estimated growth:62
    size:18.000000, time:9.600000
    size:3.500000, time:2.100000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.20 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_ProcessStartOfReception.part.0/75 inlined
      loop depth: 0 freq:0.20 size: 3 time: 12callee size: 6 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_TryToSendFC/19 call is unlikely and code size would grow
        loop depth: 0 freq:0.07 size: 3 time: 12callee size:22 stack: 0
         op1 is compile time invariant
      CanTp_StopChannel/38 call is unlikely and code size would grow
        loop depth: 0 freq:0.13 size: 4 time: 13callee size:24 stack: 0
         op1 is compile time invariant
         op2 is compile time invariant
    CanTp_StopChannel/38 call is unlikely and code size would grow
      loop depth: 0 freq:0.20 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    PduR_CanTpStartOfReception/61 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14

IPA function summary for CanTp_PreparePadding/14 inlinable
  global time:     77.217272
  self size:       45
  global size:     45
  min size:       3
  self stack:      0
  global stack:    0
  estimated growth:50
    size:3.000000, time:26.272727
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:6.000000, time:20.181818,  nonconst if:(op3 changed)
    size:1.000000, time:0.300000,  executed if:(op3 == 0B) && (not inlined),  nonconst if:(op0[ref offset: 1288] changed) && (op3 == 0B) && (not inlined)
    size:1.000000, time:0.300000,  executed if:(op3 == 0B),  nonconst if:(op0[ref offset: 1288] changed) && (op3 == 0B)
    size:1.000000, time:0.700000,  executed if:(op3 != 0B) && (not inlined),  nonconst if:(op3[ref offset: 32] changed) && (op3 != 0B) && (not inlined)
    size:1.000000, time:0.700000,  executed if:(op3 != 0B),  nonconst if:(op3[ref offset: 32] changed) && (op3 != 0B)
    size:3.000000, time:3.000000,  nonconst if:(op2 changed)
    size:4.000000, time:2.000000,  nonconst if:(op1 changed)
    size:14.000000, time:1.073944,  executed if:(op1 != 2),  nonconst if:(op3 changed || op0[ref offset: 1288] changed || op3[ref offset: 32] changed) && (op1 != 2)
    size:2.000000, time:0.270600,  executed if:(op1 != 2),  nonconst if:(op1 changed) && (op1 != 2)
    size:1.000000, time:1.363636,  executed if:(op3 == 0B) && (not inlined)
    size:1.000000, time:1.363636,  executed if:(op3 == 0B)
    size:1.000000, time:3.181818,  executed if:(op3 != 0B) && (not inlined)
    size:3.000000, time:14.509091,  executed if:(op3 != 0B)
  calls:

IPA function summary for CanTp_PreparexF/13 inlinable
  global time:     26.250000
  self size:       69
  global size:     69
  min size:       9
  self stack:      0
  global stack:    0
  estimated growth:52
    size:9.000000, time:8.250000
    size:4.000000, time:2.750000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:8.500000, time:4.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 98) && (not inlined),  nonconst if:(op0[ref offset: 768] changed) && (op0[ref offset: 736] == 98) && (not inlined)
    size:3.500000, time:0.875000,  executed if:(op0[ref offset: 736] == 98),  nonconst if:(op0[ref offset: 768] changed) && (op0[ref offset: 736] == 98)
    size:1.500000, time:0.375000,  executed if:(op0[ref offset: 736] == 98) && (not inlined)
    size:2.500000, time:0.625000,  executed if:(op0[ref offset: 736] == 98)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 98) && (not inlined),  nonconst if:(op0[ref offset: 752] changed) && (op0[ref offset: 736] == 98) && (not inlined)
    size:1.500000, time:0.375000,  executed if:(op0[ref offset: 736] == 98),  nonconst if:(op0[ref offset: 752] changed) && (op0[ref offset: 736] == 98)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 97) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 736] == 97) && (not inlined)
    size:2.500000, time:0.625000,  executed if:(op0[ref offset: 736] == 97),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 736] == 97)
    size:2.000000, time:0.250000,  executed if:(op0[ref offset: 32] <= 4095) && (op0[ref offset: 736] == 97),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 32] <= 4095) && (op0[ref offset: 736] == 97)
    size:1.000000, time:0.125000,  executed if:(op0[ref offset: 32] <= 4095) && (op0[ref offset: 736] == 97) && (not inlined)
    size:3.000000, time:0.375000,  executed if:(op0[ref offset: 32] <= 4095) && (op0[ref offset: 736] == 97)
    size:3.000000, time:0.375000,  executed if:(op0[ref offset: 32] > 4095) && (op0[ref offset: 736] == 97) && (not inlined)
    size:9.000000, time:1.125000,  executed if:(op0[ref offset: 32] > 4095) && (op0[ref offset: 736] == 97)
    size:1.000000, time:0.125000,  executed if:(op0[ref offset: 32] > 4095) && (op0[ref offset: 736] == 97),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 32] > 4095) && (op0[ref offset: 736] == 97)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 736] == 97) && (not inlined)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 736] == 97)
    size:0.500000, time:0.125000,  executed if:(op0[ref offset: 736] == 96) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 736] == 96) && (not inlined)
    size:1.500000, time:0.250000,  executed if:(op0[ref offset: 736] == 96),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 736] == 96)
    size:7.500000, time:1.562500,  executed if:(op0[ref offset: 736] == 96)
    size:1.500000, time:0.187500,  executed if:(op0[ref offset: 736] == 96) && (not inlined)
  calls:

IPA function summary for CanTp_CheckAndHandleWaitFrameTimeOut/12 inlinable
  global time:     11.480000
  self size:       8
  global size:     18
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:21
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 760] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 760] changed)
    size:7.000000, time:3.500000,  executed if:(op0[ref offset: 760] != 0)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 760] != 0),  nonconst if:(op0[ref offset: 128] changed) && (op0[ref offset: 760] != 0)
    size:1.500000, time:0.750000,  executed if:(op0[ref offset: 760] != 0),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 760] != 0)
  calls:
    CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74 inlined
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 8 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      CanTp_TryToSendFC/19 call is unlikely and code size would grow
        loop depth: 0 freq:0.17 size: 3 time: 12callee size:22 stack: 0 predicate: (op0[ref offset: 760] != 0)
         op1 is compile time invariant

IPA function summary for CanTp_VerifyBlockSize/11 inlinable
  global time:     13.527500
  self size:       12
  global size:     19
  min size:       6
  self stack:      0
  global stack:    1
  estimated growth:10
    size:5.500000, time:1.237500
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed || op0[ref offset: 48] changed)
  calls:
    CanTp_VerifyBlockSize.part.0/71 inlined
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 6 stack: 1
      Stack frame offset 0, callee self size 1, callee size 1
      CanTp_CalculateBlockSize/10 call is unlikely and code size would grow
        loop depth: 0 freq:0.33 size: 4 time: 13callee size:17 stack: 0
         op1 is compile time invariant

IPA function summary for CanTp_CalculateBlockSize/10 inlinable
  global time:     29.750000
  self size:       34
  global size:     34
  min size:       23
  self stack:      0
  global stack:    0
  estimated growth:75
    size:22.500000, time:19.250000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 64] changed || op0[ref offset: 48] changed)
  calls:

IPA function summary for CanTp_PrepareFC/9 inlinable
  global time:     62.000000
  self size:       46
  global size:     46
  min size:       32
  self stack:      72
  global stack:    72
  estimated growth:234
    size:31.500000, time:30.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 80] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 744] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 744] changed)
  calls:
    CanTp_TransmitFrame/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 8
       op1 is compile time invariant
    CanTp_PreparePadding/14 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:22 stack: 0
       op3 is compile time invariant

IPA function summary for CanTp_ChannelHandling/7 inlinable
  global time:     35.501650
  self size:       36
  global size:     38
  min size:       23
  self stack:      0
  global stack:    0
  estimated growth:31
    size:22.500000, time:7.891100
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.25 size: 2 time: 11callee size:18 stack: 0
    CanTp_TxStateHandling/43 call is unlikely and code size would grow
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:17 stack: 0
       op1 is compile time invariant
    CanTp_RxStateHandling/18 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.06 size: 2 time: 11callee size:49 stack: 0
    CanTp_TimeoutHandling/6 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.08 size: 2 time: 11callee size:36 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    CanTp_StallHandling/8 inlined
      loop depth: 0 freq:0.50 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_TimeoutHandling/6 inlinable
  global time:     26.500000
  self size:       72
  global size:     72
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:132
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 736] changed) && (not inlined)
    size:18.500000, time:6.500000,  nonconst if:(op0[ref offset: 736] changed)
    size:5.000000, time:0.625000,  executed if:(op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112)
    size:0.500000, time:0.062500,  executed if:(op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112) && (not inlined),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112) && (not inlined)
    size:1.500000, time:0.187500,  executed if:(op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112)
    size:5.000000, time:0.625000,  executed if:(op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84)
    size:0.500000, time:0.062500,  executed if:(op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84) && (not inlined),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84) && (not inlined)
    size:1.500000, time:0.187500,  executed if:(op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84),  nonconst if:(op0[ref offset: 80] changed) && (op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84)
  calls:
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 228)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] <= 206 || op0[ref offset: 736] <= 234) && (op0[ref offset: 736] >= 204 || op0[ref offset: 736] <= 234) && (op0[ref offset: 736] <= 206 || op0[ref offset: 736] >= 232) && (op0[ref offset: 736] >= 204 || op0[ref offset: 736] >= 232)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_TransmitPostponedFlowControl/42 call is unlikely and code size would grow
      loop depth: 0 freq:0.12 size: 2 time: 11callee size:13 stack: 0 predicate: (op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112)
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] <= 114) && (op0[ref offset: 736] >= 112)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 194)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_TransmitPostponedFrame/41 call is unlikely and code size would grow
      loop depth: 0 freq:0.12 size: 2 time: 11callee size:12 stack: 0 predicate: (op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84)
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] <= 86) && (op0[ref offset: 736] >= 84)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] == 64)
       op1 is compile time invariant
       op2 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.12 size: 4 time: 13callee size:24 stack: 0 predicate: (op0[ref offset: 736] <= 66) && (op0[ref offset: 736] >= 65)
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for CanTp_MainFunction/5 inlinable
  global time:     65.417359
  self size:       31
  global size:     31
  min size:       12
  self stack:      0
  global stack:    0
    size:22.000000, time:23.920909
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanTp_ChannelHandling/7 call is unlikely and code size would grow
      loop depth: 1 freq:1.55 size: 2 time: 11callee size:19 stack: 0
    CanTp_STminCallback/35 call is unlikely and code size would grow
      loop depth: 1 freq:0.23 size: 2 time: 11callee size: 9 stack: 0
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanTp_CancelTransmit/4 inlinable
  global time:     21.386259
  self size:       74
  global size:     74
  min size:       58
  self stack:      0
  global stack:    0
    size:41.000000, time:7.674453
    size:3.000000, time:1.999996,  executed if:(not inlined)
    size:1.000000, time:0.342504,  nonconst if:(op0 changed)
  calls:
    CanTp_HandlePostponedFlags/50 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.03 size: 2 time: 11callee size:18 stack: 0
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.02 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.01 size: 4 time: 13callee size:24 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.01 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.49 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_InitChannelPtr/3 inlinable
  global time:     27.000000
  self size:       29
  global size:     29
  min size:       14
  self stack:      0
  global stack:    0
  estimated growth:30
    size:14.000000, time:13.000000
    size:12.000000, time:11.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 728] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 728] changed)
  calls:

IPA function summary for CanTp_Init/2 inlinable
  global time:     70.939091
  self size:       53
  global size:     53
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:27.000000, time:19.331455,  executed if:(op0 != 0B)
  calls:
    CanTp_InitChannelPtr/3 call is unlikely and code size would grow
      loop depth: 1 freq:0.96 size: 2 time: 11callee size:14 stack: 0 predicate: (op0 != 0B)
    CanTp_StopChannel/38 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:0.96 size: 4 time: 13callee size:24 stack: 0 predicate: (op0 != 0B)
       op1 is compile time invariant
       op2 is compile time invariant
    SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 function body not available
      loop depth: 0 freq:0.35 size: 1 time: 10 predicate: (op0 != 0B)
    SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 function body not available
      loop depth: 0 freq:0.35 size: 1 time: 10 predicate: (op0 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.35 size: 5 time: 14 predicate: (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanTp_IsValidConfig/1 call is unlikely and code size would grow
      loop depth: 0 freq:0.70 size: 3 time: 12callee size:10 stack: 0 predicate: (op0 != 0B)
    Det_ASR40_ReportError/55 function body not available
      loop depth: 0 freq:0.30 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanTp_IsValidConfig/1 inlinable
  global time:     12.834773
  self size:       17
  global size:     20
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:10
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B)
    size:10.500000, time:1.792774,  executed if:(op0 != 0B)
    size:0.500000, time:0.090899,  executed if:(op0 != 0B) && (not inlined)
  calls:
    CanTp_IsValidConfig.part.0/70 inlined
      loop depth: 0 freq:0.06 size: 3 time: 12callee size: 5 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    TS_PlatformSigIsValid/53 function body not available
      loop depth: 0 freq:0.53 size: 3 time: 12 predicate: (op0 != 0B)

Symbol table:

CanTp_TxStateHandling/86 (CanTp_TxStateHandling) @0741d000
  Type: function definition analyzed
  Visibility: public
  next sharing asm name: 85
  References: RetVal_DataReq/67 (write)
  Referring: 
  Function CanTp_TxStateHandling/86 is inline copy in CanTp_ProcessRxFrame/23
  Clone of CanTp_TxStateHandling/43
  Availability: local
  Function flags: count:123383 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessReceivedFC.isra.0/79 (inlined) (123383 (estimated locally),0.00 per call) 
  Calls: CanTp_TxStateHandling.part.0/78 (41128 (estimated locally),0.00 per call) __builtin_unreachable/83 (0 (precise),0.00 per call) __builtin_unreachable/83 (0 (precise),0.00 per call) 
CanTp_TxStateHandling/85 (CanTp_TxStateHandling) @073f5b60
  Type: function definition analyzed
  Visibility: public
  next sharing asm name: 84
  previous sharing asm name: 86
  References: RetVal_DataReq/67 (write)
  Referring: 
  Function CanTp_TxStateHandling/85 is inline copy in CanTp_ProcessTxPdu/48
  Clone of CanTp_TxStateHandling/43
  Availability: local
  Function flags: count:11395776 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessConfirmedCF/49 (inlined) (11395776 (estimated locally),0.01 per call) 
  Calls: CanTp_TxStateHandling.part.0/78 (3798592 (estimated locally),0.00 per call) __builtin_unreachable/83 (0 (precise),0.00 per call) __builtin_unreachable/83 (0 (precise),0.00 per call) 
CanTp_TxStateHandling/84 (CanTp_TxStateHandling) @073f5700
  Type: function definition analyzed
  Visibility: public
  next sharing asm name: 82
  previous sharing asm name: 85
  References: RetVal_DataReq/67 (write)
  Referring: 
  Function CanTp_TxStateHandling/84 is inline copy in CanTp_STminTimeoutHandling/37
  Clone of CanTp_TxStateHandling/43
  Availability: local
  Function flags: count:217325345 (estimated locally) body local optimize_size
  Called by: CanTp_STminTimeoutHandling/37 (inlined) (217325345 (estimated locally),0.20 per call) 
  Calls: CanTp_TxStateHandling.part.0/78 (72441782 (estimated locally),0.07 per call) __builtin_unreachable/83 (0 (precise),0.00 per call) __builtin_unreachable/83 (0 (precise),0.00 per call) 
__builtin_unreachable/83 (__builtin_unreachable) @073f5620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_TxStateHandling/86 (0 (precise),0.00 per call) CanTp_TxStateHandling/86 (0 (precise),0.00 per call) CanTp_TxStateHandling/85 (0 (precise),0.00 per call) CanTp_TxStateHandling/85 (0 (precise),0.00 per call) CanTp_TxStateHandling/82 (0 (precise),0.00 per call) CanTp_TxStateHandling/82 (0 (precise),0.00 per call) CanTp_TxStateHandling/84 (0 (precise),0.00 per call) CanTp_TxStateHandling/84 (0 (precise),0.00 per call) 
  Calls: 
CanTp_TxStateHandling/82 (CanTp_TxStateHandling) @073f51c0
  Type: function definition analyzed
  Visibility: public
  next sharing asm name: 43
  previous sharing asm name: 84
  References: RetVal_DataReq/67 (write)
  Referring: 
  Function CanTp_TxStateHandling/82 is inline copy in CanTp_STminTimeoutHandling/37
  Clone of CanTp_TxStateHandling/43
  Availability: local
  Function flags: count:173338695 (estimated locally) body local optimize_size
  Called by: CanTp_STminTimeoutHandling.part.0/80 (inlined) (173338695 (estimated locally),0.16 per call) 
  Calls: CanTp_TxStateHandling.part.0/78 (57779565 (estimated locally),0.05 per call) __builtin_unreachable/83 (0 (precise),0.00 per call) __builtin_unreachable/83 (0 (precise),0.00 per call) 
CanTp_FindNSduId.constprop.0/81 (CanTp_FindNSduId.constprop) @06f9f380
  Type: function definition analyzed
  Visibility:
  References: CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_FindNSduId.constprop/81 is inline copy in CanTp_RxIndication/20
  Clone of CanTp_FindNSduId/25
  Availability: local
  Function flags: count:125411642 (estimated locally) local optimize_size
  Called by: CanTp_RxIndication/20 (inlined) (125411642 (estimated locally),0.12 per call) 
  Calls: Det_ASR40_ReportError/55 (20692922 (estimated locally),0.02 per call) 
CanTp_STminTimeoutHandling.part.0/80 (CanTp_STminTimeoutHandling.part.0) @073209a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function CanTp_STminTimeoutHandling.part.0/80 is inline copy in CanTp_STminTimeoutHandling/37
  Availability: local
  Function flags: count:173338695 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_STminTimeoutHandling/37 (inlined) (173338695 (estimated locally),0.16 per call) 
  Calls: CanTp_TxStateHandling/82 (inlined) (173338695 (estimated locally),0.16 per call) 
CanTp_ProcessReceivedFC.isra.0/79 (CanTp_ProcessReceivedFC.isra.0) @07336e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_ProcessReceivedFC.isra.0/79 is inline copy in CanTp_ProcessRxFrame/23
  Availability: local
  Function flags: count:43465069 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessRxFrame/23 (inlined) (43465069 (estimated locally),0.04 per call) 
  Calls: CanTp_StopChannel/38 (609598 (estimated locally),0.00 per call) CanTp_StopChannel/38 (609598 (estimated locally),0.00 per call) CanTp_TxStateHandling/86 (inlined) (123383 (estimated locally),0.00 per call) 
CanTp_TxStateHandling.part.0/78 (CanTp_TxStateHandling.part.0) @07336620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: RetVal_DataReq/67 (write)RetVal_DataReq/67 (read)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_TxStateHandling/86 (41128 (estimated locally),0.00 per call) CanTp_TxStateHandling/85 (3798592 (estimated locally),0.00 per call) CanTp_TxStateHandling/84 (72441782 (estimated locally),0.07 per call) CanTp_TxStateHandling/82 (57779565 (estimated locally),0.05 per call) CanTp_TxStateHandling/43 (357913944 (estimated locally),0.33 per call) 
  Calls: CanTp_RequestTxFrameData/44 (524845004 (estimated locally),0.49 per call) CanTp_PreparePadding/14 (357878150 (estimated locally),0.33 per call) CanTp_TransmitFrame/40 (174930840 (estimated locally),0.16 per call) CanTp_StopChannel/38 (357878150 (estimated locally),0.33 per call) 
CanTp_TransmitPostponedFlowControl.part.0/77 (CanTp_TransmitPostponedFlowControl.part.0) @07336540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_Channel/60 (write)
  Referring: 
  Function CanTp_TransmitPostponedFlowControl.part.0/77 is inline copy in CanTp_TransmitPostponedFlowControl/42
  Availability: local
  Function flags: count:708669600 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_TransmitPostponedFlowControl/42 (inlined) (708669600 (estimated locally),0.66 per call) 
  Calls: CanTp_PrepareFC/9 (177167400 (estimated locally),0.16 per call) CanTp_PrepareFC/9 (177167400 (estimated locally),0.16 per call) CanTp_PrepareFC/9 (177167400 (estimated locally),0.16 per call) 
CanTp_TransmitPostponedFrame.part.0/76 (CanTp_TransmitPostponedFrame.part.0) @07320e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (write)
  Referring: 
  Function CanTp_TransmitPostponedFrame.part.0/76 is inline copy in CanTp_TransmitPostponedFrame/41
  Availability: local
  Function flags: count:708669600 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_TransmitPostponedFrame/41 (inlined) (708669600 (estimated locally),0.66 per call) 
  Calls: CanTp_TransmitFrame/40 (143434727 (estimated locally),0.13 per call) 
CanTp_ProcessStartOfReception.part.0/75 (CanTp_ProcessStartOfReception.part.0) @07320ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function CanTp_ProcessStartOfReception.part.0/75 is inline copy in CanTp_ProcessStartOfReception/15
  Availability: local
  Function flags: count:214748368 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_ProcessStartOfReception/15 (inlined) (214748368 (estimated locally),0.20 per call) 
  Calls: CanTp_TryToSendFC/19 (73014445 (estimated locally),0.07 per call) CanTp_StopChannel/38 (141733923 (estimated locally),0.13 per call) 
CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74 (CanTp_CheckAndHandleWaitFrameTimeOut.part.0) @073208c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74 is inline copy in CanTp_CheckAndHandleWaitFrameTimeOut/12
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_CheckAndHandleWaitFrameTimeOut/12 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: CanTp_TryToSendFC/19 (177167401 (estimated locally),0.17 per call) 
CanTp_RxChannelCleanup.part.0/73 (CanTp_RxChannelCleanup.part.0) @07308540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function CanTp_RxChannelCleanup.part.0/73 is inline copy in CanTp_RxChannelCleanup/24
  Availability: local
  Function flags: count:182536110 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_RxChannelCleanup/24 (inlined) (182536110 (estimated locally),0.17 per call) 
  Calls: CanTp_StopChannel/38 (182536110 (estimated locally),0.17 per call) 
CanTp_ProcessStartOfReceptionData.part.0/72 (CanTp_ProcessStartOfReceptionData.part.0) @07308380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function CanTp_ProcessStartOfReceptionData.part.0/72 is inline copy in CanTp_ProcessStartOfReceptionData/16
  Availability: local
  Function flags: count:354334800 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_ProcessStartOfReceptionData/16 (inlined) (354334800 (estimated locally),0.33 per call) 
  Calls: CanTp_RxProcessData/17 (354334800 (estimated locally),0.33 per call) 
CanTp_VerifyBlockSize.part.0/71 (CanTp_VerifyBlockSize.part.0) @07308460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function CanTp_VerifyBlockSize.part.0/71 is inline copy in CanTp_VerifyBlockSize/11
  Availability: local
  Function flags: count:354334800 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_VerifyBlockSize/11 (inlined) (354334800 (estimated locally),0.33 per call) 
  Calls: CanTp_CalculateBlockSize/10 (354334800 (estimated locally),0.33 per call) 
CanTp_IsValidConfig.part.0/70 (CanTp_IsValidConfig.part.0) @070c97e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: CanTp_LcfgSignature/54 (read)
  Referring: 
  Function CanTp_IsValidConfig.part.0/70 is inline copy in CanTp_IsValidConfig/1
  Availability: local
  Function flags: count:66369400 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_IsValidConfig/1 (inlined) (66369400 (estimated locally),0.06 per call) 
  Calls: 
CanTp_CheckNPduLength.part.0/69 (CanTp_CheckNPduLength.part.0) @0716a000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function CanTp_CheckNPduLength.part.0/69 is inline copy in CanTp_CheckNPduLength/32
  Availability: local
  Function flags: count:29287171 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanTp_CheckNPduLength/32 (inlined) (29287171 (estimated locally),0.03 per call) 
  Calls: 
PduR_CanTpCopyTxData/68 (PduR_CanTpCopyTxData) @0716a620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_ProcessCopyTxData/45 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
RetVal_DataReq/67 (RetVal_DataReq) @07168c60
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanTp_TxStateHandling.part.0/78 (read)CanTp_TxStateHandling.part.0/78 (write)CanTp_TxStateHandling/43 (write)CanTp_TxStateHandling/82 (write)CanTp_TxStateHandling/84 (write)CanTp_TxStateHandling/85 (write)CanTp_TxStateHandling/86 (write)
  Availability: not_available
  Varpool flags:
CanIf_Transmit/66 (CanIf_Transmit) @0713f2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_TransmitFrame/40 (1073741823 (estimated locally),1.00 per call) 
  Calls: 
PduR_CanTpTxConfirmation/65 (PduR_CanTpTxConfirmation) @0713fb60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_StopChannel/38 (217325345 (estimated locally),0.20 per call) 
  Calls: 
PduR_CanTpRxIndication/64 (PduR_CanTpRxIndication) @0713fa80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_StopChannel/38 (36945309 (estimated locally),0.03 per call) 
  Calls: 
TS_MemCpy32/63 (TS_MemCpy32) @070c9b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_ProcessReceivedFF/27 (861692 (estimated locally),0.00 per call) CanTp_ProcessReceivedSF/26 (1723383 (estimated locally),0.00 per call) CanTp_PostponeRxFrame/22 (3368944 (estimated locally),0.00 per call) 
  Calls: 
PduR_CanTpCopyRxData/62 (PduR_CanTpCopyRxData) @070a3540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_RxProcessData/17 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
PduR_CanTpStartOfReception/61 (PduR_CanTpStartOfReception) @070a3e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_ProcessStartOfReception/15 (1073741823 (estimated locally),1.00 per call) 
  Calls: 
CanTp_Channel/60 (CanTp_Channel) @0707b4c8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanTp_MainFunction/5 (write)CanTp_Transmit/39 (write)CanTp_TransmitPostponedFlowControl.part.0/77 (write)CanTp_RxIndication/20 (write)CanTp_TxStateHandling.part.0/78 (read)CanTp_TxConfirmation/46 (write)CanTp_CancelTransmit/4 (write)CanTp_ChannelHandling/7 (write)CanTp_STminCallback/35 (write)CanTp_Init/2 (write)CanTp_TryToSendFC/19 (read)CanTp_Transmit/39 (write)CanTp_TransmitPostponedFrame.part.0/76 (write)CanTp_TransmitPostponedFlowControl.part.0/77 (write)CanTp_Init/2 (addr)CanTp_Init/2 (addr)CanTp_Init/2 (read)CanTp_Init/2 (write)CanTp_TransmitPostponedFrame.part.0/76 (addr)CanTp_TransmitPostponedFrame.part.0/76 (read)CanTp_TransmitPostponedFrame.part.0/76 (read)CanTp_TransmitPostponedFrame.part.0/76 (write)CanTp_TransmitPostponedFlowControl.part.0/77 (addr)CanTp_TransmitPostponedFlowControl.part.0/77 (read)CanTp_TransmitPostponedFlowControl.part.0/77 (write)CanTp_TxStateHandling.part.0/78 (read)CanTp_CancelTransmit/4 (addr)CanTp_CancelTransmit/4 (read)CanTp_CancelTransmit/4 (write)CanTp_CancelTransmit/4 (read)CanTp_CancelTransmit/4 (read)CanTp_ChannelHandling/7 (addr)CanTp_ChannelHandling/7 (read)CanTp_ChannelHandling/7 (read)CanTp_ChannelHandling/7 (write)CanTp_ChannelHandling/7 (write)CanTp_ChannelHandling/7 (write)CanTp_ChannelHandling/7 (read)CanTp_ChannelHandling/7 (write)CanTp_RxIndication/20 (addr)CanTp_RxIndication/20 (read)CanTp_RxIndication/20 (read)CanTp_RxIndication/20 (read)CanTp_RxIndication/20 (write)CanTp_RxIndication/20 (read)CanTp_STminCallback/35 (addr)CanTp_STminCallback/35 (read)CanTp_STminCallback/35 (read)CanTp_STminCallback/35 (write)CanTp_STminCallback/35 (write)CanTp_MainFunction/5 (read)CanTp_Transmit/39 (addr)CanTp_Transmit/39 (read)CanTp_Transmit/39 (read)CanTp_Transmit/39 (write)CanTp_Transmit/39 (write)CanTp_Transmit/39 (write)CanTp_Transmit/39 (write)CanTp_Transmit/39 (write)CanTp_Transmit/39 (write)CanTp_Transmit/39 (write)CanTp_Transmit/39 (write)CanTp_TxConfirmation/46 (read)CanTp_TxConfirmation/46 (addr)CanTp_TxConfirmation/46 (read)CanTp_TxConfirmation/46 (read)CanTp_TxConfirmation/46 (read)CanTp_TxConfirmation/46 (write)CanTp_TxConfirmation/46 (write)CanTp_TxConfirmation/46 (write)CanTp_CancelReceive/52 (addr)CanTp_CancelReceive/52 (read)CanTp_CancelReceive/52 (write)CanTp_CancelReceive/52 (read)CanTp_CancelReceive/52 (read)CanTp_CancelReceive/52 (read)CanTp_CancelReceive/52 (read)CanTp_CancelReceive/52 (write)
  Availability: not_available
  Varpool flags:
SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0) @07061a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_CancelReceive/52 (137224205 (estimated locally),0.13 per call) CanTp_CancelReceive/52 (137224205 (estimated locally),0.13 per call) CanTp_TxConfirmation/46 (121361087 (estimated locally),0.11 per call) CanTp_TxConfirmation/46 (83775926 (estimated locally),0.08 per call) CanTp_TxConfirmation/46 (162623856 (estimated locally),0.15 per call) CanTp_Transmit/39 (203452301 (estimated locally),0.19 per call) CanTp_MainFunction/5 (694774116 (estimated locally),1.00 per call) CanTp_STminCallback/35 (536870913 (estimated locally),0.50 per call) CanTp_STminCallback/35 (536870913 (estimated locally),0.50 per call) CanTp_RxIndication/20 (9244687 (estimated locally),0.01 per call) CanTp_ChannelHandling/7 (536870911 (estimated locally),0.50 per call) CanTp_ChannelHandling/7 (536870911 (estimated locally),0.50 per call) CanTp_CancelTransmit/4 (37217400 (estimated locally),0.03 per call) CanTp_CancelTransmit/4 (37217400 (estimated locally),0.03 per call) CanTp_HandlePostponedFlags/50 (354334802 (estimated locally),3.00 per call) CanTp_HandlePostponedFlags/50 (719407023 (estimated locally),6.09 per call) CanTp_PostTxConfirmation/47 (1073741824 (estimated locally),1.00 per call) CanTp_PostSTminCallback/36 (536870913 (estimated locally),0.50 per call) CanTp_PostSTminCallback/36 (536870913 (estimated locally),0.50 per call) CanTp_PostRxIndication/21 (236223201 (estimated locally),1.00 per call) CanTp_ProcessRxFrame/23 (70866960 (estimated locally),0.07 per call) CanTp_ProcessRxFrame/23 (70866960 (estimated locally),0.07 per call) CanTp_PostponedTimeoutHandling/51 (116930485 (estimated locally),0.99 per call) CanTp_PostponedTimeoutHandling/51 (118702159 (estimated locally),1.01 per call) CanTp_PostponedTimeoutHandling/51 (118702159 (estimated locally),1.01 per call) CanTp_Init/2 (347387059 (estimated locally),0.35 per call) CanTp_StopChannel/38 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
CanTp_NonIdleChannelCounter/58 (CanTp_NonIdleChannelCounter) @0707b438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanTp_MainFunction/5 (read)CanTp_ProcessRxFrame/23 (read)CanTp_InitChannelPtr/3 (read)CanTp_ProcessRxFrame/23 (write)CanTp_Init/2 (write)CanTp_InitChannelPtr/3 (write)CanTp_ProcessRxFrame/23 (write)CanTp_ProcessRxFrame/23 (read)CanTp_Transmit/39 (read)CanTp_Transmit/39 (write)CanTp_Transmit/39 (read)CanTp_Transmit/39 (write)
  Availability: not_available
  Varpool flags:
CanTp_InitVars/57 (CanTp_InitVars) @0707b3f0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanTp_RxIndication/20 (read)CanTp_MainFunction/5 (read)CanTp_Transmit/39 (read)CanTp_TxConfirmation/46 (read)CanTp_CancelTransmit/4 (read)CanTp_Init/2 (write)CanTp_Init/2 (read)CanTp_Init/2 (write)CanTp_CancelReceive/52 (read)
  Availability: not_available
  Varpool flags:
SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0) @070619a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_CancelReceive/52 (274448410 (estimated locally),0.26 per call) CanTp_TxConfirmation/46 (367760870 (estimated locally),0.34 per call) CanTp_Transmit/39 (203452301 (estimated locally),0.19 per call) CanTp_MainFunction/5 (694774116 (estimated locally),1.00 per call) CanTp_STminCallback/35 (1073741824 (estimated locally),1.00 per call) CanTp_RxIndication/20 (9244687 (estimated locally),0.01 per call) CanTp_ChannelHandling/7 (1073741823 (estimated locally),1.00 per call) CanTp_CancelTransmit/4 (74434800 (estimated locally),0.07 per call) CanTp_HandlePostponedFlags/50 (1073741824 (estimated locally),9.09 per call) CanTp_PostTxConfirmation/47 (1073741824 (estimated locally),1.00 per call) CanTp_PostSTminCallback/36 (1073741824 (estimated locally),1.00 per call) CanTp_PostRxIndication/21 (236223200 (estimated locally),1.00 per call) CanTp_ProcessRxFrame/23 (70866960 (estimated locally),0.07 per call) CanTp_ProcessRxFrame/23 (70866960 (estimated locally),0.07 per call) CanTp_PostponedTimeoutHandling/51 (354334802 (estimated locally),3.00 per call) CanTp_Init/2 (347387059 (estimated locally),0.35 per call) CanTp_StopChannel/38 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Det_ASR40_ReportError/55 (Det_ASR40_ReportError) @070618c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_FindNSduId.constprop/81 (20692922 (estimated locally),0.02 per call) CanTp_CancelReceive/52 (67075191 (estimated locally),0.06 per call) CanTp_CancelReceive/52 (17537253 (estimated locally),0.02 per call) CanTp_CancelReceive/52 (274448410 (estimated locally),0.26 per call) CanTp_CancelReceive/52 (524845004 (estimated locally),0.49 per call) CanTp_TxConfirmation/46 (181135950 (estimated locally),0.17 per call) CanTp_TxConfirmation/46 (524845003 (estimated locally),0.49 per call) CanTp_Transmit/39 (20589373 (estimated locally),0.02 per call) CanTp_Transmit/39 (100207850 (estimated locally),0.09 per call) CanTp_Transmit/39 (64100720 (estimated locally),0.06 per call) CanTp_Transmit/39 (181135951 (estimated locally),0.17 per call) CanTp_Transmit/39 (524845004 (estimated locally),0.49 per call) CanTp_RxIndication/20 (31807023 (estimated locally),0.03 per call) CanTp_RxIndication/20 (1871125 (estimated locally),0.00 per call) CanTp_RxIndication/20 (2884593 (estimated locally),0.00 per call) CanTp_RxIndication/20 (87150463 (estimated locally),0.08 per call) CanTp_RxIndication/20 (104694768 (estimated locally),0.10 per call) CanTp_RxIndication/20 (231639947 (estimated locally),0.22 per call) CanTp_RxIndication/20 (524845004 (estimated locally),0.49 per call) CanTp_CancelTransmit/4 (18191865 (estimated locally),0.02 per call) CanTp_CancelTransmit/4 (6341211 (estimated locally),0.01 per call) CanTp_CancelTransmit/4 (181135951 (estimated locally),0.17 per call) CanTp_CancelTransmit/4 (524845004 (estimated locally),0.49 per call) CanTp_ProcessReceivedIntermediateCF/29 (1042073 (estimated locally),0.00 per call) CanTp_ProcessReceivedFF/27 (41601528 (estimated locally),0.04 per call) CanTp_ProcessReceivedFF/27 (21431090 (estimated locally),0.02 per call) CanTp_ProcessReceivedSF/26 (55198275 (estimated locally),0.05 per call) CanTp_ProcessReceivedLastCF/30 (1660538 (estimated locally),0.00 per call) CanTp_Init/2 (347387059 (estimated locally),0.35 per call) CanTp_Init/2 (297760336 (estimated locally),0.30 per call) 
  Calls: 
CanTp_LcfgSignature/54 (CanTp_LcfgSignature) @06f91c60
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanTp_IsValidConfig.part.0/70 (read)
  Availability: not_available
  Varpool flags: read-only
TS_PlatformSigIsValid/53 (TS_PlatformSigIsValid) @07061700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanTp_IsValidConfig/1 (574129754 (estimated locally),0.53 per call) 
  Calls: 
CanTp_CancelReceive/52 (CanTp_CancelReceive) @07061540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_InitVars/57 (read)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (read)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: CanTp_HandlePostponedFlags/50 (137224205 (estimated locally),0.13 per call) Det_ASR40_ReportError/55 (67075191 (estimated locally),0.06 per call) CanTp_StopChannel/38 (26305880 (estimated locally),0.02 per call) Det_ASR40_ReportError/55 (17537253 (estimated locally),0.02 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (137224205 (estimated locally),0.13 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (137224205 (estimated locally),0.13 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (274448410 (estimated locally),0.26 per call) Det_ASR40_ReportError/55 (274448410 (estimated locally),0.26 per call) Det_ASR40_ReportError/55 (524845004 (estimated locally),0.49 per call) 
CanTp_PostponedTimeoutHandling/51 (CanTp_PostponedTimeoutHandling) @0705dd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function CanTp_PostponedTimeoutHandling/51 is inline copy in CanTp_HandlePostponedFlags/50
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: CanTp_HandlePostponedFlags/50 (inlined) (1073741824 (estimated locally),9.09 per call) 
  Calls: SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (116930485 (estimated locally),0.99 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (118702159 (estimated locally),1.01 per call) CanTp_TimeoutHandling/6 (118702159 (estimated locally),1.01 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (118702159 (estimated locally),1.01 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (354334802 (estimated locally),3.00 per call) 
CanTp_HandlePostponedFlags/50 (CanTp_HandlePostponedFlags) @0705db60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: CanTp_CancelReceive/52 (137224205 (estimated locally),0.13 per call) CanTp_TxConfirmation/46 (121361087 (estimated locally),0.11 per call) CanTp_Transmit/39 (101726150 (estimated locally),0.09 per call) CanTp_STminCallback/35 (536870913 (estimated locally),0.50 per call) CanTp_RxIndication/20 (1871125 (estimated locally),0.00 per call) CanTp_ChannelHandling/7 (268435456 (estimated locally),0.25 per call) CanTp_CancelTransmit/4 (37215497 (estimated locally),0.03 per call) 
  Calls: SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (354334802 (estimated locally),3.00 per call) CanTp_PostSTminCallback/36 (719407023 (estimated locally),6.09 per call) CanTp_PostRxIndication/21 (719407023 (estimated locally),6.09 per call) CanTp_PostTxConfirmation/47 (719407023 (estimated locally),6.09 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (719407023 (estimated locally),6.09 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (1073741824 (estimated locally),9.09 per call) CanTp_PostponedTimeoutHandling/51 (inlined) (1073741824 (estimated locally),9.09 per call) 
CanTp_ProcessConfirmedCF/49 (CanTp_ProcessConfirmedCF) @0705d7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_ProcessConfirmedCF/49 is inline copy in CanTp_ProcessTxPdu/48
  Availability: local
  Function flags: count:52163500 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessTxPdu/48 (inlined) (52163500 (estimated locally),0.05 per call) 
  Calls: CanTp_TxStateHandling/85 (inlined) (11395776 (estimated locally),0.01 per call) CanTp_StopChannel/38 (10557892 (estimated locally),0.01 per call) 
CanTp_ProcessTxPdu/48 (CanTp_ProcessTxPdu) @07050700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: count:1073632316 (estimated locally) body local optimize_size
  Called by: CanTp_TxConfirmation/46 (121361087 (estimated locally),0.11 per call) CanTp_PostTxConfirmation/47 (354334802 (estimated locally),0.33 per call) 
  Calls: CanTp_TransmitPostponedFrame/41 (52163500 (estimated locally),0.05 per call) CanTp_StopChannel/38 (52163500 (estimated locally),0.05 per call) CanTp_TransmitPostponedFrame/41 (52163500 (estimated locally),0.05 per call) CanTp_TransmitPostponedFrame/41 (52163500 (estimated locally),0.05 per call) CanTp_TransmitPostponedFlowControl/42 (52163500 (estimated locally),0.05 per call) CanTp_ProcessConfirmedCF/49 (inlined) (52163500 (estimated locally),0.05 per call) CanTp_TransmitPostponedFlowControl/42 (52163500 (estimated locally),0.05 per call) CanTp_TransmitPostponedFlowControl/42 (52163500 (estimated locally),0.05 per call) CanTp_StopChannel/38 (52163500 (estimated locally),0.05 per call) 
CanTp_PostTxConfirmation/47 (CanTp_PostTxConfirmation) @0704c380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_HandlePostponedFlags/50 (719407023 (estimated locally),6.09 per call) 
  Calls: CanTp_ProcessTxPdu/48 (354334802 (estimated locally),0.33 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (1073741824 (estimated locally),1.00 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (1073741824 (estimated locally),1.00 per call) 
CanTp_TxConfirmation/46 (CanTp_TxConfirmation) @0704c000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_InitVars/57 (read)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_Channel/60 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: CanTp_HandlePostponedFlags/50 (121361087 (estimated locally),0.11 per call) CanTp_ProcessTxPdu/48 (121361087 (estimated locally),0.11 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (121361087 (estimated locally),0.11 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (83775926 (estimated locally),0.08 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (162623856 (estimated locally),0.15 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (367760870 (estimated locally),0.34 per call) Det_ASR40_ReportError/55 (181135950 (estimated locally),0.17 per call) Det_ASR40_ReportError/55 (524845003 (estimated locally),0.49 per call) 
CanTp_ProcessCopyTxData/45 (CanTp_ProcessCopyTxData) @070432a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: CanTp_RequestTxFrameData/44 (536870911 (estimated locally),0.50 per call) CanTp_RequestTxFrameData/44 (354334801 (estimated locally),0.33 per call) 
  Calls: PduR_CanTpCopyTxData/68 (1073741824 (estimated locally),1.00 per call) 
CanTp_RequestTxFrameData/44 (CanTp_RequestTxFrameData) @0703aee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741821 (estimated locally) body local optimize_size
  Called by: CanTp_TxStateHandling/43 (357878150 (estimated locally),0.33 per call) CanTp_TxStateHandling.part.0/78 (524845004 (estimated locally),0.49 per call) 
  Calls: CanTp_ProcessCopyTxData/45 (536870911 (estimated locally),0.50 per call) CanTp_ProcessCopyTxData/45 (354334801 (estimated locally),0.33 per call) CanTp_PreparexF/13 (354334801 (estimated locally),0.33 per call) 
CanTp_TxStateHandling/43 (CanTp_TxStateHandling) @0703ab60
  Type: function definition analyzed
  Visibility: externally_visible public
  previous sharing asm name: 82
  References: RetVal_DataReq/67 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ChannelHandling/7 (118702158 (estimated locally),0.11 per call) 
  Calls: CanTp_StopChannel/38 (119280787 (estimated locally),0.11 per call) CanTp_RequestTxFrameData/44 (357878150 (estimated locally),0.33 per call) CanTp_TxStateHandling.part.0/78 (357913944 (estimated locally),0.33 per call) 
CanTp_TransmitPostponedFlowControl/42 (CanTp_TransmitPostponedFlowControl) @06f5ad20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ProcessTxPdu/48 (52163500 (estimated locally),0.05 per call) CanTp_ProcessTxPdu/48 (52163500 (estimated locally),0.05 per call) CanTp_ProcessTxPdu/48 (52163500 (estimated locally),0.05 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) 
  Calls: CanTp_TransmitPostponedFlowControl.part.0/77 (inlined) (708669600 (estimated locally),0.66 per call) 
CanTp_TransmitPostponedFrame/41 (CanTp_TransmitPostponedFrame) @06f5ab60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ProcessTxPdu/48 (52163500 (estimated locally),0.05 per call) CanTp_ProcessTxPdu/48 (52163500 (estimated locally),0.05 per call) CanTp_ProcessTxPdu/48 (52163500 (estimated locally),0.05 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) 
  Calls: CanTp_TransmitPostponedFrame.part.0/76 (inlined) (708669600 (estimated locally),0.66 per call) 
CanTp_TransmitFrame/40 (CanTp_TransmitFrame) @06f5a540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: CanTp_TxStateHandling.part.0/78 (174930840 (estimated locally),0.16 per call) CanTp_TransmitPostponedFrame.part.0/76 (143434727 (estimated locally),0.13 per call) CanTp_PrepareFC/9 (1073741824 (estimated locally),1.00 per call) 
  Calls: CanTp_StopChannel/38 (354334802 (estimated locally),0.33 per call) CanIf_Transmit/66 (1073741823 (estimated locally),1.00 per call) 
CanTp_Transmit/39 (CanTp_Transmit) @06f54d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_InitVars/57 (read)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (write)CanTp_NonIdleChannelCounter/58 (read)CanTp_NonIdleChannelCounter/58 (write)CanTp_Channel/60 (write)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_NonIdleChannelCounter/58 (read)CanTp_NonIdleChannelCounter/58 (write)CanTp_Channel/60 (write)CanTp_Channel/60 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: CanTp_HandlePostponedFlags/50 (101726150 (estimated locally),0.09 per call) Det_ASR40_ReportError/55 (20589373 (estimated locally),0.02 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (203452301 (estimated locally),0.19 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (203452301 (estimated locally),0.19 per call) Det_ASR40_ReportError/55 (100207850 (estimated locally),0.09 per call) Det_ASR40_ReportError/55 (64100720 (estimated locally),0.06 per call) Det_ASR40_ReportError/55 (181135951 (estimated locally),0.17 per call) Det_ASR40_ReportError/55 (524845004 (estimated locally),0.49 per call) 
CanTp_StopChannel/38 (CanTp_StopChannel) @06f4fc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_CancelReceive/52 (26305880 (estimated locally),0.02 per call) CanTp_CancelTransmit/4 (6341211 (estimated locally),0.01 per call) CanTp_ProcessTxPdu/48 (52163500 (estimated locally),0.05 per call) CanTp_ProcessTxPdu/48 (52163500 (estimated locally),0.05 per call) CanTp_ProcessConfirmedCF/49 (10557892 (estimated locally),0.01 per call) CanTp_ProcessReceivedFC.isra.0/79 (609598 (estimated locally),0.00 per call) CanTp_ProcessReceivedFC.isra.0/79 (609598 (estimated locally),0.00 per call) CanTp_TxStateHandling/43 (119280787 (estimated locally),0.11 per call) CanTp_TxStateHandling.part.0/78 (357878150 (estimated locally),0.33 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) CanTp_TimeoutHandling/6 (134217728 (estimated locally),0.12 per call) CanTp_ProcessReceivedCF/28 (4076970 (estimated locally),0.00 per call) CanTp_ProcessReceivedIntermediateCF/29 (359643 (estimated locally),0.00 per call) CanTp_ProcessReceivedFF/27 (63032618 (estimated locally),0.06 per call) CanTp_ProcessReceivedFF/27 (861692 (estimated locally),0.00 per call) CanTp_RxStateHandling/18 (89469538 (estimated locally),0.08 per call) CanTp_RxStateHandling/18 (89469538 (estimated locally),0.08 per call) CanTp_RxStateHandling/18 (89469538 (estimated locally),0.08 per call) CanTp_RxStateHandling/18 (89469538 (estimated locally),0.08 per call) CanTp_ProcessReceivedSF/26 (55198275 (estimated locally),0.05 per call) CanTp_ProcessReceivedSF/26 (1723383 (estimated locally),0.00 per call) CanTp_ProcessReceivedSF/26 (1723383 (estimated locally),0.00 per call) CanTp_ProcessStartOfReception/15 (214748364 (estimated locally),0.20 per call) CanTp_ProcessStartOfReception/15 (214748364 (estimated locally),0.20 per call) CanTp_ProcessStartOfReception.part.0/75 (141733923 (estimated locally),0.13 per call) CanTp_TransmitFrame/40 (354334802 (estimated locally),0.33 per call) CanTp_ProcessReceivedLastCF/30 (235682 (estimated locally),0.00 per call) CanTp_ProcessReceivedLastCF/30 (235682 (estimated locally),0.00 per call) CanTp_RxChannelCleanup/24 (182536110 (estimated locally),0.17 per call) CanTp_RxChannelCleanup.part.0/73 (182536110 (estimated locally),0.17 per call) CanTp_Init/2 (955630222 (estimated locally),0.96 per call) 
  Calls: PduR_CanTpTxConfirmation/65 (217325345 (estimated locally),0.20 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (1073741824 (estimated locally),1.00 per call) CanTp_InitChannelPtr/3 (1073741824 (estimated locally),1.00 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (1073741824 (estimated locally),1.00 per call) PduR_CanTpRxIndication/64 (36945309 (estimated locally),0.03 per call) 
CanTp_STminTimeoutHandling/37 (CanTp_STminTimeoutHandling) @06f4f620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: CanTp_STminCallback/35 (536870913 (estimated locally),0.50 per call) CanTp_PostSTminCallback/36 (536870913 (estimated locally),0.50 per call) 
  Calls: CanTp_STminTimeoutHandling.part.0/80 (inlined) (173338695 (estimated locally),0.16 per call) CanTp_TxStateHandling/84 (inlined) (217325345 (estimated locally),0.20 per call) 
CanTp_PostSTminCallback/36 (CanTp_PostSTminCallback) @06f4f460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_HandlePostponedFlags/50 (719407023 (estimated locally),6.09 per call) 
  Calls: CanTp_STminTimeoutHandling/37 (536870913 (estimated locally),0.50 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (536870913 (estimated locally),0.50 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (536870913 (estimated locally),0.50 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (1073741824 (estimated locally),1.00 per call) 
CanTp_STminCallback/35 (CanTp_STminCallback) @0702aee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_Channel/60 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_MainFunction/5 (157678986 (estimated locally),0.23 per call) 
  Calls: CanTp_HandlePostponedFlags/50 (536870913 (estimated locally),0.50 per call) CanTp_STminTimeoutHandling/37 (536870913 (estimated locally),0.50 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (536870913 (estimated locally),0.50 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (536870913 (estimated locally),0.50 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (1073741824 (estimated locally),1.00 per call) 
CanTp_ValidateNAI/34 (CanTp_ValidateNAI) @0702aa80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_ValidateNAI/34 is inline copy in CanTp_RxIndication/20
  Availability: local
  Function flags: count:28014204 (estimated locally) body local optimize_size
  Called by: CanTp_RxIndication/20 (inlined) (28014204 (estimated locally),0.03 per call) 
  Calls: 
CanTp_ValidateFCLength/33 (CanTp_ValidateFCLength) @0702a000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_ValidateFCLength/33 is inline copy in CanTp_RxIndication/20
  Availability: local
  Function flags: count:21319979 (estimated locally) body local optimize_size
  Called by: CanTp_RxIndication/20 (inlined) (21319979 (estimated locally),0.02 per call) 
  Calls: 
CanTp_CheckNPduLength/32 (CanTp_CheckNPduLength) @06f9f540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741823 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessReceivedSF/26 (47480863 (estimated locally),0.04 per call) CanTp_ProcessReceivedLastCF/30 (1428374 (estimated locally),0.00 per call) 
  Calls: CanTp_CheckNPduLength.part.0/69 (inlined) (29287171 (estimated locally),0.03 per call) 
CanTp_ProcessReceivedLastCF/30 (CanTp_ProcessReceivedLastCF) @06f96e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_ProcessReceivedLastCF/30 is inline copy in CanTp_ProcessRxFrame/23
  Availability: local
  Function flags: count:2131901 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessReceivedCF/28 (inlined) (2131901 (estimated locally),0.00 per call) 
  Calls: Det_ASR40_ReportError/55 (1660538 (estimated locally),0.00 per call) CanTp_StopChannel/38 (235682 (estimated locally),0.00 per call) CanTp_StopChannel/38 (235682 (estimated locally),0.00 per call) CanTp_RxProcessData/17 (471363 (estimated locally),0.00 per call) CanTp_CheckNPduLength/32 (1428374 (estimated locally),0.00 per call) 
CanTp_ProcessReceivedIntermediateCF/29 (CanTp_ProcessReceivedIntermediateCF) @06f969a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_ProcessReceivedIntermediateCF/29 is inline copy in CanTp_ProcessRxFrame/23
  Availability: local
  Function flags: count:2131901 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessReceivedCF/28 (inlined) (2131901 (estimated locally),0.00 per call) 
  Calls: Det_ASR40_ReportError/55 (1042073 (estimated locally),0.00 per call) CanTp_StopChannel/38 (359643 (estimated locally),0.00 per call) CanTp_CheckAndHandleWaitFrameTimeOut/12 (73895 (estimated locally),0.00 per call) CanTp_TryToSendFC/19 (73895 (estimated locally),0.00 per call) CanTp_VerifyBlockSize/11 (147789 (estimated locally),0.00 per call) CanTp_RxProcessData/17 (1089828 (estimated locally),0.00 per call) 
CanTp_ProcessReceivedCF/28 (CanTp_ProcessReceivedCF) @06f89ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_ProcessReceivedCF/28 is inline copy in CanTp_ProcessRxFrame/23
  Availability: local
  Function flags: count:14778123 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessRxFrame/23 (inlined) (14778123 (estimated locally),0.01 per call) 
  Calls: CanTp_ProcessReceivedIntermediateCF/29 (inlined) (2131901 (estimated locally),0.00 per call) CanTp_ProcessReceivedLastCF/30 (inlined) (2131901 (estimated locally),0.00 per call) CanTp_StopChannel/38 (4076970 (estimated locally),0.00 per call) 
CanTp_ProcessReceivedFF/27 (CanTp_ProcessReceivedFF) @06f89a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_ProcessReceivedFF/27 is inline copy in CanTp_ProcessRxFrame/23
  Availability: local
  Function flags: count:70866960 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessRxFrame/23 (inlined) (70866960 (estimated locally),0.07 per call) 
  Calls: Det_ASR40_ReportError/55 (41601528 (estimated locally),0.04 per call) Det_ASR40_ReportError/55 (21431090 (estimated locally),0.02 per call) CanTp_StopChannel/38 (63032618 (estimated locally),0.06 per call) CanTp_StopChannel/38 (861692 (estimated locally),0.00 per call) CanTp_CheckAndHandleWaitFrameTimeOut/12 (861692 (estimated locally),0.00 per call) TS_MemCpy32/63 (861692 (estimated locally),0.00 per call) CanTp_CheckAndHandleWaitFrameTimeOut/12 (430846 (estimated locally),0.00 per call) CanTp_TryToSendFC/19 (430846 (estimated locally),0.00 per call) CanTp_CalculateBlockSize/10 (861692 (estimated locally),0.00 per call) CanTp_ProcessStartOfReceptionData/16 (2585333 (estimated locally),0.00 per call) CanTp_ProcessStartOfReception/15 (7834342 (estimated locally),0.01 per call) 
CanTp_ProcessReceivedSF/26 (CanTp_ProcessReceivedSF) @06f89460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Function CanTp_ProcessReceivedSF/26 is inline copy in CanTp_ProcessRxFrame/23
  Availability: local
  Function flags: count:70866960 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessRxFrame/23 (inlined) (70866960 (estimated locally),0.07 per call) 
  Calls: Det_ASR40_ReportError/55 (55198275 (estimated locally),0.05 per call) CanTp_StopChannel/38 (55198275 (estimated locally),0.05 per call) CanTp_StopChannel/38 (1723383 (estimated locally),0.00 per call) TS_MemCpy32/63 (1723383 (estimated locally),0.00 per call) CanTp_StopChannel/38 (1723383 (estimated locally),0.00 per call) CanTp_ProcessStartOfReceptionData/16 (5170666 (estimated locally),0.00 per call) CanTp_ProcessStartOfReception/15 (15668685 (estimated locally),0.01 per call) CanTp_CheckNPduLength/32 (47480863 (estimated locally),0.04 per call) 
CanTp_FindNSduId/25 (CanTp_FindNSduId) @06f6fee0
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:114863530 (estimated locally) body optimize_size
  Called by: 
  Calls: 
CanTp_RxChannelCleanup/24 (CanTp_RxChannelCleanup) @06f6f8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: CanTp_ProcessRxFrame/23 (214748364 (estimated locally),0.20 per call) CanTp_ProcessRxFrame/23 (214748364 (estimated locally),0.20 per call) 
  Calls: CanTp_StopChannel/38 (182536110 (estimated locally),0.17 per call) CanTp_RxChannelCleanup.part.0/73 (inlined) (182536110 (estimated locally),0.17 per call) 
CanTp_ProcessRxFrame/23 (CanTp_ProcessRxFrame) @06f6f540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanTp_NonIdleChannelCounter/58 (read)CanTp_NonIdleChannelCounter/58 (write)CanTp_NonIdleChannelCounter/58 (read)CanTp_NonIdleChannelCounter/58 (write)
  Referring: 
  Availability: local
  Function flags: count:1073741823 (estimated locally) body local optimize_size
  Called by: CanTp_RxIndication/20 (1871125 (estimated locally),0.00 per call) CanTp_PostRxIndication/21 (77953656 (estimated locally),0.33 per call) 
  Calls: CanTp_ProcessReceivedFC.isra.0/79 (inlined) (43465069 (estimated locally),0.04 per call) CanTp_ProcessReceivedCF/28 (inlined) (14778123 (estimated locally),0.01 per call) CanTp_ProcessReceivedFF/27 (inlined) (70866960 (estimated locally),0.07 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (70866960 (estimated locally),0.07 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (70866960 (estimated locally),0.07 per call) CanTp_RxChannelCleanup/24 (214748364 (estimated locally),0.20 per call) CanTp_ProcessReceivedSF/26 (inlined) (70866960 (estimated locally),0.07 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (70866960 (estimated locally),0.07 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (70866960 (estimated locally),0.07 per call) CanTp_RxChannelCleanup/24 (214748364 (estimated locally),0.20 per call) 
CanTp_PostponeRxFrame/22 (CanTp_PostponeRxFrame) @06f6f380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function CanTp_PostponeRxFrame/22 is inline copy in CanTp_RxIndication/20
  Availability: local
  Function flags: count:3368944 (estimated locally) body local optimize_size
  Called by: CanTp_RxIndication/20 (inlined) (3368944 (estimated locally),0.00 per call) 
  Calls: TS_MemCpy32/63 (3368944 (estimated locally),0.00 per call) 
CanTp_PostRxIndication/21 (CanTp_PostRxIndication) @06f6f000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:236223200 (estimated locally) body optimize_size
  Called by: CanTp_HandlePostponedFlags/50 (719407023 (estimated locally),6.09 per call) 
  Calls: CanTp_ProcessRxFrame/23 (77953656 (estimated locally),0.33 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (236223201 (estimated locally),1.00 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (236223200 (estimated locally),1.00 per call) 
CanTp_RxIndication/20 (CanTp_RxIndication) @06f68a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_InitVars/57 (read)CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (read)CanTp_Channel/60 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/55 (31807023 (estimated locally),0.03 per call) CanTp_HandlePostponedFlags/50 (1871125 (estimated locally),0.00 per call) CanTp_ProcessRxFrame/23 (1871125 (estimated locally),0.00 per call) Det_ASR40_ReportError/55 (1871125 (estimated locally),0.00 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (9244687 (estimated locally),0.01 per call) CanTp_PostponeRxFrame/22 (inlined) (3368944 (estimated locally),0.00 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (9244687 (estimated locally),0.01 per call) CanTp_ValidateNAI/34 (inlined) (28014204 (estimated locally),0.03 per call) Det_ASR40_ReportError/55 (2884593 (estimated locally),0.00 per call) CanTp_ValidateFCLength/33 (inlined) (21319979 (estimated locally),0.02 per call) CanTp_FindNSduId.constprop/81 (inlined) (125411642 (estimated locally),0.12 per call) Det_ASR40_ReportError/55 (87150463 (estimated locally),0.08 per call) Det_ASR40_ReportError/55 (104694768 (estimated locally),0.10 per call) Det_ASR40_ReportError/55 (231639947 (estimated locally),0.22 per call) Det_ASR40_ReportError/55 (524845004 (estimated locally),0.49 per call) 
CanTp_TryToSendFC/19 (CanTp_TryToSendFC) @06f479a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (read)CanTp_Channel/60 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ProcessReceivedIntermediateCF/29 (73895 (estimated locally),0.00 per call) CanTp_ProcessReceivedFF/27 (430846 (estimated locally),0.00 per call) CanTp_RxStateHandling/18 (44734769 (estimated locally),0.04 per call) CanTp_RxStateHandling/18 (44734769 (estimated locally),0.04 per call) CanTp_ProcessStartOfReception.part.0/75 (73014445 (estimated locally),0.07 per call) CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74 (177167401 (estimated locally),0.17 per call) 
  Calls: CanTp_PrepareFC/9 (174930840 (estimated locally),0.16 per call) CanTp_PrepareFC/9 (174930840 (estimated locally),0.16 per call) CanTp_PrepareFC/9 (174930840 (estimated locally),0.16 per call) 
CanTp_RxStateHandling/18 (CanTp_RxStateHandling) @06f47620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ChannelHandling/7 (61149597 (estimated locally),0.06 per call) 
  Calls: CanTp_StopChannel/38 (89469538 (estimated locally),0.08 per call) CanTp_CheckAndHandleWaitFrameTimeOut/12 (89469538 (estimated locally),0.08 per call) CanTp_CheckAndHandleWaitFrameTimeOut/12 (44734769 (estimated locally),0.04 per call) CanTp_TryToSendFC/19 (44734769 (estimated locally),0.04 per call) CanTp_VerifyBlockSize/11 (89469538 (estimated locally),0.08 per call) CanTp_RxProcessData/17 (268435456 (estimated locally),0.25 per call) CanTp_StopChannel/38 (89469538 (estimated locally),0.08 per call) CanTp_CheckAndHandleWaitFrameTimeOut/12 (89469538 (estimated locally),0.08 per call) CanTp_CheckAndHandleWaitFrameTimeOut/12 (44734769 (estimated locally),0.04 per call) CanTp_TryToSendFC/19 (44734769 (estimated locally),0.04 per call) CanTp_CalculateBlockSize/10 (89469538 (estimated locally),0.08 per call) CanTp_ProcessStartOfReceptionData/16 (268435456 (estimated locally),0.25 per call) CanTp_StopChannel/38 (89469538 (estimated locally),0.08 per call) CanTp_StopChannel/38 (89469538 (estimated locally),0.08 per call) CanTp_ProcessStartOfReceptionData/16 (268435456 (estimated locally),0.25 per call) 
CanTp_RxProcessData/17 (CanTp_RxProcessData) @06f37ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ProcessReceivedIntermediateCF/29 (1089828 (estimated locally),0.00 per call) CanTp_RxStateHandling/18 (268435456 (estimated locally),0.25 per call) CanTp_ProcessReceivedLastCF/30 (471363 (estimated locally),0.00 per call) CanTp_ProcessStartOfReceptionData/16 (286956713 (estimated locally),0.27 per call) CanTp_ProcessStartOfReceptionData/16 (237404317 (estimated locally),0.22 per call) CanTp_ProcessStartOfReceptionData.part.0/72 (354334800 (estimated locally),0.33 per call) 
  Calls: PduR_CanTpCopyRxData/62 (1073741824 (estimated locally),1.00 per call) 
CanTp_ProcessStartOfReceptionData/16 (CanTp_ProcessStartOfReceptionData) @06f37b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ProcessReceivedFF/27 (2585333 (estimated locally),0.00 per call) CanTp_RxStateHandling/18 (268435456 (estimated locally),0.25 per call) CanTp_RxStateHandling/18 (268435456 (estimated locally),0.25 per call) CanTp_ProcessReceivedSF/26 (5170666 (estimated locally),0.00 per call) 
  Calls: CanTp_RxProcessData/17 (286956713 (estimated locally),0.27 per call) CanTp_RxProcessData/17 (237404317 (estimated locally),0.22 per call) CanTp_ProcessStartOfReceptionData.part.0/72 (inlined) (354334800 (estimated locally),0.33 per call) 
CanTp_ProcessStartOfReception/15 (CanTp_ProcessStartOfReception) @06f379a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: CanTp_ProcessReceivedFF/27 (7834342 (estimated locally),0.01 per call) CanTp_ProcessReceivedSF/26 (15668685 (estimated locally),0.01 per call) 
  Calls: CanTp_StopChannel/38 (214748364 (estimated locally),0.20 per call) CanTp_ProcessStartOfReception.part.0/75 (inlined) (214748368 (estimated locally),0.20 per call) CanTp_StopChannel/38 (214748364 (estimated locally),0.20 per call) PduR_CanTpStartOfReception/61 (1073741823 (estimated locally),1.00 per call) 
CanTp_PreparePadding/14 (CanTp_PreparePadding) @06f37620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: CanTp_TxStateHandling.part.0/78 (357878150 (estimated locally),0.33 per call) CanTp_PrepareFC/9 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
CanTp_PreparexF/13 (CanTp_PreparexF) @06f37460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_RequestTxFrameData/44 (354334801 (estimated locally),0.33 per call) 
  Calls: 
CanTp_CheckAndHandleWaitFrameTimeOut/12 (CanTp_CheckAndHandleWaitFrameTimeOut) @06f2fee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ProcessReceivedIntermediateCF/29 (73895 (estimated locally),0.00 per call) CanTp_ProcessReceivedFF/27 (861692 (estimated locally),0.00 per call) CanTp_ProcessReceivedFF/27 (430846 (estimated locally),0.00 per call) CanTp_RxStateHandling/18 (89469538 (estimated locally),0.08 per call) CanTp_RxStateHandling/18 (44734769 (estimated locally),0.04 per call) CanTp_RxStateHandling/18 (89469538 (estimated locally),0.08 per call) CanTp_RxStateHandling/18 (44734769 (estimated locally),0.04 per call) 
  Calls: CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74 (inlined) (536870912 (estimated locally),0.50 per call) 
CanTp_VerifyBlockSize/11 (CanTp_VerifyBlockSize) @06f2fb60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ProcessReceivedIntermediateCF/29 (147789 (estimated locally),0.00 per call) CanTp_RxStateHandling/18 (89469538 (estimated locally),0.08 per call) 
  Calls: CanTp_VerifyBlockSize.part.0/71 (inlined) (354334800 (estimated locally),0.33 per call) 
CanTp_CalculateBlockSize/10 (CanTp_CalculateBlockSize) @06f2f9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ProcessReceivedFF/27 (861692 (estimated locally),0.00 per call) CanTp_RxStateHandling/18 (89469538 (estimated locally),0.08 per call) CanTp_VerifyBlockSize.part.0/71 (354334800 (estimated locally),0.33 per call) 
  Calls: 
CanTp_PrepareFC/9 (CanTp_PrepareFC) @06f27d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_TransmitPostponedFlowControl.part.0/77 (177167400 (estimated locally),0.16 per call) CanTp_TransmitPostponedFlowControl.part.0/77 (177167400 (estimated locally),0.16 per call) CanTp_TransmitPostponedFlowControl.part.0/77 (177167400 (estimated locally),0.16 per call) CanTp_TryToSendFC/19 (174930840 (estimated locally),0.16 per call) CanTp_TryToSendFC/19 (174930840 (estimated locally),0.16 per call) CanTp_TryToSendFC/19 (174930840 (estimated locally),0.16 per call) 
  Calls: CanTp_TransmitFrame/40 (1073741824 (estimated locally),1.00 per call) CanTp_PreparePadding/14 (1073741824 (estimated locally),1.00 per call) 
CanTp_StallHandling/8 (CanTp_StallHandling) @06f270e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function CanTp_StallHandling/8 is inline copy in CanTp_ChannelHandling/7
  Availability: local
  Function flags: count:536870911 (estimated locally) body local optimize_size
  Called by: CanTp_ChannelHandling/7 (inlined) (536870911 (estimated locally),0.50 per call) 
  Calls: 
CanTp_ChannelHandling/7 (CanTp_ChannelHandling) @06f1eee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: CanTp_MainFunction/5 (1073741824 (estimated locally),1.55 per call) 
  Calls: CanTp_HandlePostponedFlags/50 (268435456 (estimated locally),0.25 per call) CanTp_TxStateHandling/43 (118702158 (estimated locally),0.11 per call) CanTp_RxStateHandling/18 (61149597 (estimated locally),0.06 per call) CanTp_TimeoutHandling/6 (88583700 (estimated locally),0.08 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (536870911 (estimated locally),0.50 per call) CanTp_StallHandling/8 (inlined) (536870911 (estimated locally),0.50 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (536870911 (estimated locally),0.50 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (1073741823 (estimated locally),1.00 per call) 
CanTp_TimeoutHandling/6 (CanTp_TimeoutHandling) @06f1e9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (read)CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_ChannelHandling/7 (88583700 (estimated locally),0.08 per call) CanTp_PostponedTimeoutHandling/51 (118702159 (estimated locally),1.01 per call) 
  Calls: CanTp_StopChannel/38 (134217728 (estimated locally),0.12 per call) CanTp_StopChannel/38 (134217728 (estimated locally),0.12 per call) CanTp_StopChannel/38 (134217728 (estimated locally),0.12 per call) CanTp_TransmitPostponedFlowControl/42 (134217728 (estimated locally),0.12 per call) CanTp_StopChannel/38 (134217728 (estimated locally),0.12 per call) CanTp_StopChannel/38 (134217728 (estimated locally),0.12 per call) CanTp_TransmitPostponedFrame/41 (134217728 (estimated locally),0.12 per call) CanTp_StopChannel/38 (134217728 (estimated locally),0.12 per call) CanTp_StopChannel/38 (134217728 (estimated locally),0.12 per call) CanTp_StopChannel/38 (134217728 (estimated locally),0.12 per call) 
CanTp_MainFunction/5 (CanTp_MainFunction) @06f1e460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_NonIdleChannelCounter/58 (read)CanTp_InitVars/57 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_CfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: count:694774116 (estimated locally) body optimize_size
  Called by: 
  Calls: CanTp_ChannelHandling/7 (1073741824 (estimated locally),1.55 per call) CanTp_STminCallback/35 (157678986 (estimated locally),0.23 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (694774116 (estimated locally),1.00 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (694774116 (estimated locally),1.00 per call) 
CanTp_CancelTransmit/4 (CanTp_CancelTransmit) @06f1e2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_InitVars/57 (read)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (read)CanTp_Channel/60 (read)CanTp_Channel/60 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: CanTp_HandlePostponedFlags/50 (37215497 (estimated locally),0.03 per call) Det_ASR40_ReportError/55 (18191865 (estimated locally),0.02 per call) CanTp_StopChannel/38 (6341211 (estimated locally),0.01 per call) Det_ASR40_ReportError/55 (6341211 (estimated locally),0.01 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (37217400 (estimated locally),0.03 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (37217400 (estimated locally),0.03 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (74434800 (estimated locally),0.07 per call) Det_ASR40_ReportError/55 (181135951 (estimated locally),0.17 per call) Det_ASR40_ReportError/55 (524845004 (estimated locally),0.49 per call) 
CanTp_InitChannelPtr/3 (CanTp_InitChannelPtr) @06c40a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_NonIdleChannelCounter/58 (read)CanTp_NonIdleChannelCounter/58 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_Init/2 (955630224 (estimated locally),0.96 per call) CanTp_StopChannel/38 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
CanTp_Init/2 (CanTp_Init) @06c40620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanTp_CfgPtr/0 (write)CanTp_InitVars/57 (read)CanTp_InitVars/57 (write)CanTp_NonIdleChannelCounter/58 (write)CanTp_Channel/60 (addr)CanTp_CfgPtr/0 (read)CanTp_Channel/60 (addr)CanTp_Channel/60 (read)CanTp_Channel/60 (write)CanTp_Channel/60 (write)CanTp_CfgPtr/0 (read)CanTp_InitVars/57 (write)
  Referring: 
  Availability: available
  Function flags: count:992534453 (estimated locally) body optimize_size
  Called by: 
  Calls: CanTp_InitChannelPtr/3 (955630224 (estimated locally),0.96 per call) CanTp_StopChannel/38 (955630222 (estimated locally),0.96 per call) SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/59 (347387059 (estimated locally),0.35 per call) SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0/56 (347387059 (estimated locally),0.35 per call) Det_ASR40_ReportError/55 (347387059 (estimated locally),0.35 per call) CanTp_IsValidConfig/1 (694774118 (estimated locally),0.70 per call) Det_ASR40_ReportError/55 (297760336 (estimated locally),0.30 per call) 
CanTp_IsValidConfig/1 (CanTp_IsValidConfig) @06c40380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanTp_Init/2 (694774118 (estimated locally),0.70 per call) 
  Calls: CanTp_IsValidConfig.part.0/70 (inlined) (66369400 (estimated locally),0.06 per call) TS_PlatformSigIsValid/53 (574129754 (estimated locally),0.53 per call) 
CanTp_CfgPtr/0 (CanTp_CfgPtr) @06ed35a0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: CanTp_TxStateHandling.part.0/78 (read)CanTp_MainFunction/5 (read)CanTp_RxProcessData/17 (read)CanTp_RxChannelCleanup/24 (read)CanTp_ProcessReceivedSF/26 (read)CanTp_TimeoutHandling/6 (read)CanTp_ProcessConfirmedCF/49 (read)CanTp_ProcessConfirmedCF/49 (read)CanTp_ProcessReceivedIntermediateCF/29 (read)CanTp_CancelTransmit/4 (read)CanTp_ProcessReceivedIntermediateCF/29 (read)CanTp_ProcessTxPdu/48 (read)CanTp_ProcessReceivedIntermediateCF/29 (read)CanTp_ProcessReceivedCF/28 (read)CanTp_TransmitPostponedFrame.part.0/76 (read)CanTp_RxIndication/20 (read)CanTp_ProcessTxPdu/48 (read)CanTp_RequestTxFrameData/44 (read)CanTp_Init/2 (write)CanTp_ProcessReceivedFF/27 (read)CanTp_Init/2 (read)CanTp_Init/2 (read)CanTp_Transmit/39 (read)CanTp_TxConfirmation/46 (read)CanTp_StopChannel/38 (read)CanTp_ProcessReceivedLastCF/30 (read)CanTp_Transmit/39 (read)CanTp_Transmit/39 (read)CanTp_ProcessTxPdu/48 (read)CanTp_ProcessTxPdu/48 (read)CanTp_ValidateFCLength/33 (read)CanTp_CheckAndHandleWaitFrameTimeOut.part.0/74 (read)CanTp_CancelReceive/52 (read)CanTp_ProcessReceivedFC.isra.0/79 (read)CanTp_ProcessTxPdu/48 (read)CanTp_ProcessStartOfReception/15 (read)CanTp_FindNSduId.constprop.0/81 (read)CanTp_FindNSduId.constprop.0/81 (read)CanTp_PrepareFC/9 (read)CanTp_PrepareFC/9 (read)CanTp_TimeoutHandling/6 (read)CanTp_CalculateBlockSize/10 (read)CanTp_TxStateHandling.part.0/78 (read)CanTp_ProcessCopyTxData/45 (read)CanTp_StopChannel/38 (read)CanTp_TryToSendFC/19 (read)CanTp_RxIndication/20 (read)CanTp_PreparexF/13 (read)CanTp_TransmitFrame/40 (read)CanTp_TransmitFrame/40 (read)CanTp_ValidateNAI/34 (read)CanTp_ValidateNAI/34 (read)CanTp_CancelReceive/52 (read)
  Availability: available
  Varpool flags: initialized

;; Function CanTp_ProcessCopyTxData (CanTp_ProcessCopyTxData, funcdef_no=44, decl_uid=9181, cgraph_uid=45, symbol_order=45)

CanTp_ProcessCopyTxData (struct CanTp_ChannelType * ChannelPtr, struct PduInfoType * PduInfoPtr)
{
  PduLengthType UL_BufferSize;
  BufReq_ReturnType Ret_CopyTxData;
  const struct CanTp_ConfigType * CanTp_CfgPtr.204_1;
  long unsigned int _2;
  short unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct CanTp_TxNSduConfigType * _7;
  short unsigned int _8;
  short unsigned int UL_BufferSize.206_9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  UL_BufferSize = 0;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.204_1 = CanTp_CfgPtr;
  _2 = CanTp_CfgPtr.204_1->TxNSduConfigPtr;
  _3 = ChannelPtr_13(D)->NSduId;
  _4 = (unsigned int) _3;
  _5 = _4 * 24;
  _6 = _2 + _5;
  _7 = CanTp_CfgPtr.204_1 + _6;
  _8 = _7->IPduConfId;
  Ret_CopyTxData_16 = PduR_CanTpCopyTxData (_8, PduInfoPtr_14(D), 0B, &UL_BufferSize);
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_16
  # DEBUG BEGIN_STMT
  if (Ret_CopyTxData_16 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
  if (Ret_CopyTxData_16 == 2)
    goto <bb 4>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  UL_BufferSize.206_9 = UL_BufferSize;
  ChannelPtr_13(D)->ActualBufferSize = UL_BufferSize.206_9;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  UL_BufferSize ={v} {CLOBBER};
  return Ret_CopyTxData_16;

}



;; Function CanTp_CheckNPduLength (CanTp_CheckNPduLength, funcdef_no=31, decl_uid=8917, cgraph_uid=32, symbol_order=32)


Symbols to be put in SSA form
{ D.10317 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 22
Number of blocks to update: 21 ( 95%)


Removing basic block 14
Removing basic block 17
Merging blocks 21 and 16
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 5 }
;; 3 succs { 18 4 }
;; 4 succs { 18 }
;; 5 succs { 6 8 }
;; 6 succs { 18 7 }
;; 7 succs { 18 }
;; 8 succs { 18 9 }
;; 9 succs { 18 10 }
;; 10 succs { 18 11 }
;; 11 succs { 18 12 }
;; 12 succs { 18 13 }
;; 13 succs { 18 14 }
;; 14 succs { 17 15 }
;; 15 succs { 17 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
CanTp_CheckNPduLength (PduLengthType NPduLength, uint8 Padding, uint8 MaxLength)
{
  boolean ValidNPduLength;
  boolean D.10317;
  boolean ValidNPduLength;
  short unsigned int _1;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Padding_3(D) == 2)
    goto <bb 3>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) MaxLength_5(D);
  if (_1 == NPduLength_4(D))
    goto <bb 18>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 4> [local count: 240947665]:
  # DEBUG BEGIN_STMT
  # DEBUG ValidNPduLength => 0
  goto <bb 18>; [100.00%]

  <bb 5> [local count: 708669604]:
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) <= 7)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  if (Padding_3(D) == 1)
    goto <bb 18>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 7> [local count: 233860969]:
  # DEBUG BEGIN_STMT
  # DEBUG ValidNPduLength => 1
  goto <bb 18>; [100.00%]

  <bb 8> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 8)
    goto <bb 18>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 9> [local count: 233860969]:
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 12)
    goto <bb 18>; [34.00%]
  else
    goto <bb 10>; [66.00%]

  <bb 10> [local count: 154348240]:
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 16)
    goto <bb 18>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 11> [local count: 101869838]:
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 20)
    goto <bb 18>; [34.00%]
  else
    goto <bb 12>; [66.00%]

  <bb 12> [local count: 67234093]:
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 24)
    goto <bb 18>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 13> [local count: 44374501]:
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 32)
    goto <bb 18>; [34.00%]
  else
    goto <bb 14>; [66.00%]

  <bb 14> [local count: 29287171]:
  # DEBUG D#1 => Padding_3(D)
  # DEBUG D#2 => MaxLength_5(D)
  # DEBUG NPduLength => NPduLength_4(D)
  # DEBUG INLINE_ENTRY CanTp_CheckNPduLength
  # DEBUG D#4 => D#1
  # DEBUG Padding => D#4
  # DEBUG D#3 => D#2
  # DEBUG MaxLength => D#3
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 48)
    goto <bb 17>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 15> [local count: 19329533]:
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 64)
    goto <bb 17>; [34.00%]
  else
    goto <bb 16>; [66.00%]

  <bb 16> [local count: 12757492]:
  # DEBUG BEGIN_STMT
  # DEBUG ValidNPduLength => 0

  <bb 17> [local count: 29287171]:
  # ValidNPduLength_8 = PHI <1(14), 1(15), 0(16)>
  # DEBUG ValidNPduLength => ValidNPduLength_8
  # DEBUG BEGIN_STMT
  _9 = ValidNPduLength_8;
  # DEBUG NPduLength => NULL
  # DEBUG ValidNPduLength => NULL
  # DEBUG Padding => NULL
  # DEBUG MaxLength => NULL
  ValidNPduLength_6 = _9;

  <bb 18> [local count: 1073741824]:
  # ValidNPduLength_2 = PHI <0(4), 1(7), 1(8), 1(9), 1(10), 1(11), 1(12), 1(13), 1(3), ValidNPduLength_6(17), 0(6)>
  # DEBUG ValidNPduLength => ValidNPduLength_2
  # DEBUG BEGIN_STMT
  return ValidNPduLength_2;

}



;; Function CanTp_IsValidConfig (CanTp_IsValidConfig, funcdef_no=0, decl_uid=5607, cgraph_uid=1, symbol_order=1)


Symbols to be put in SSA form
{ D.10084 D.10323 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


Removing basic block 5
Removing basic block 8
Merging blocks 12 and 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 9 }
;; 3 succs { 4 9 }
;; 4 succs { 5 9 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
CanTp_IsValidConfig (const void * voidConfigPtr)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.10323;
  Std_ReturnType RetVal;
  long unsigned int _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _11;
  long unsigned int CanTp_LcfgSignature.0_12;
  long unsigned int _13;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG ConfigPtr => voidConfigPtr_6(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (voidConfigPtr_6(D) != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 9>; [46.53%]

  <bb 3> [local count: 574129754]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const struct CanTp_ConfigType *)voidConfigPtr_6(D)].PlatformSignature;
  _2 = TS_PlatformSigIsValid (_1);
  if (_2 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 4> [local count: 195204116]:
  # DEBUG BEGIN_STMT
  _3 = MEM[(const struct CanTp_ConfigType *)voidConfigPtr_6(D)].CfgSignature;
  if (_3 == 294722855)
    goto <bb 5>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 5> [local count: 66369399]:
  # DEBUG voidConfigPtr => voidConfigPtr_6(D)
  # DEBUG INLINE_ENTRY CanTp_IsValidConfig
  # DEBUG BEGIN_STMT
  _11 = MEM[(const struct CanTp_ConfigType *)voidConfigPtr_6(D)].LcfgSignature;
  CanTp_LcfgSignature.0_12 = CanTp_LcfgSignature;
  if (_11 == CanTp_LcfgSignature.0_12)
    goto <bb 6>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 6> [local count: 22565596]:
  # DEBUG BEGIN_STMT
  _13 = MEM[(const struct CanTp_ConfigType *)voidConfigPtr_6(D)].PublicInfoSignature;
  if (_13 == 1190142462)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 7672303]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 8> [local count: 66369399]:
  # RetVal_14 = PHI <1(5), 1(6), 0(7)>
  # DEBUG RetVal => RetVal_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = RetVal_14;
  # DEBUG voidConfigPtr => NULL
  # DEBUG RetVal => NULL
  # DEBUG ConfigPtr => NULL
  RetVal_10 = _15;

  <bb 9> [local count: 1073741823]:
  # RetVal_4 = PHI <1(2), 1(3), 1(4), RetVal_10(8)>
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_4;

}



;; Function CanTp_InitChannelPtr (CanTp_InitChannelPtr, funcdef_no=2, decl_uid=5905, cgraph_uid=3, symbol_order=3)

CanTp_InitChannelPtr (struct CanTp_ChannelType * ChannelPtr)
{
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char CanTp_NonIdleChannelCounter.5_4;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->State = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->NSduId = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->TotalLength = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->ActualBufferSize = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->ProcessedLength = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->BlockSize = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->ProcessedBlockFrames = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->SequenceNumber = 1;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->TempLength = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->WftCounter = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->Ticks = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->PostTicks = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_8(D)->PostFlag;
  _2 = _1 & 253;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = _2 & 251;
  ChannelPtr_8(D)->PostFlag = _3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->StMin = 255;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->MfCounterTicks = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->CanIfDLC = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->ConnectionFlags = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_8(D)->ReceivedSduLength = 0;
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.5_4 = CanTp_NonIdleChannelCounter;
  if (CanTp_NonIdleChannelCounter.5_4 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _5 = CanTp_NonIdleChannelCounter.5_4 + 255;
  CanTp_NonIdleChannelCounter = _5;

  <bb 4> [local count: 1073741824]:
  return;

}



;; Function CanTp_CalculateBlockSize (CanTp_CalculateBlockSize, funcdef_no=9, decl_uid=5937, cgraph_uid=10, symbol_order=10)

CanTp_CalculateBlockSize (struct CanTp_ChannelType * ChannelPtr, uint8 * BlockSizePtr)
{
  const uint8 NSduMaxSize;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  Std_ReturnType Ret_BSCalc;
  PduLengthType BlockSizeTmp;
  const PduLengthType RemainingBytes;
  const PduIdType NSduId;
  short unsigned int _1;
  short unsigned int _2;
  const struct CanTp_ConfigType * CanTp_CfgPtr.35_3;
  short unsigned int _4;
  long unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  sizetype _8;
  unsigned char _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  short unsigned int _13;
  unsigned char _14;
  int _15;
  int _16;
  int _17;
  unsigned char _18;
  short unsigned int _19;
  unsigned char _20;
  int iftmp.39_24;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  NSduId_27 = ChannelPtr_26(D)->NSduId;
  # DEBUG NSduId => NSduId_27
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_26(D)->TotalLength;
  _2 = ChannelPtr_26(D)->ProcessedLength;
  RemainingBytes_28 = _1 - _2;
  # DEBUG RemainingBytes => RemainingBytes_28
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.35_3 = CanTp_CfgPtr;
  _5 = CanTp_CfgPtr.35_3->RxNSduConfigPtr;
  _6 = (unsigned int) NSduId_27;
  _7 = _6 * 26;
  _8 = _5 + _7;
  RxNSduCfgPtr_29 = CanTp_CfgPtr.35_3 + _8;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_29
  # DEBUG BEGIN_STMT
  _9 = RxNSduCfgPtr_29->NPduLength;
  _10 = RxNSduCfgPtr_29->AddressingFormat;
  if (_10 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  if (_10 != 3)
    goto <bb 5>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 4> [local count: 719407023]:

  <bb 5> [local count: 1073741824]:
  # iftmp.39_24 = PHI <1(3), 0(4)>
  _11 = (unsigned char) iftmp.39_24;
  _12 = _9 - _11;
  NSduMaxSize_30 = _12 + 255;
  # DEBUG NSduMaxSize => NSduMaxSize_30
  # DEBUG BEGIN_STMT
  _13 = ChannelPtr_26(D)->ActualBufferSize;
  if (_13 >= RemainingBytes_28)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _14 = RxNSduCfgPtr_29->BS;
  BlockSizeTmp_32 = (PduLengthType) _14;
  # DEBUG BlockSizeTmp => BlockSizeTmp_32
  # DEBUG BEGIN_STMT
  # DEBUG Ret_BSCalc => 0
  goto <bb 12>; [100.00%]

  <bb 7> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _15 = (int) _13;
  _16 = (int) NSduMaxSize_30;
  _17 = _15 / _16;
  BlockSizeTmp_31 = (PduLengthType) _17;
  # DEBUG BlockSizeTmp => BlockSizeTmp_31
  # DEBUG BEGIN_STMT
  if (BlockSizeTmp_31 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 8> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret_BSCalc => 0
  # DEBUG BEGIN_STMT
  _18 = RxNSduCfgPtr_29->BS;
  _19 = (short unsigned int) _18;
  if (_19 < BlockSizeTmp_31)
    goto <bb 9>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 9> [local count: 134217728]:
  if (_18 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 67108864]:
  # DEBUG BEGIN_STMT
  # DEBUG BlockSizeTmp => _19

  <bb 11> [local count: 268435456]:
  # BlockSizeTmp_21 = PHI <BlockSizeTmp_31(8), BlockSizeTmp_31(9), _19(10)>
  # DEBUG BlockSizeTmp => BlockSizeTmp_21
  # DEBUG BEGIN_STMT
  _4 = MIN_EXPR <255, BlockSizeTmp_21>;

  <bb 12> [local count: 1073741824]:
  # BlockSizeTmp_22 = PHI <BlockSizeTmp_32(6), _4(11), BlockSizeTmp_31(7)>
  # Ret_BSCalc_23 = PHI <0(6), 0(11), 1(7)>
  # DEBUG Ret_BSCalc => Ret_BSCalc_23
  # DEBUG BlockSizeTmp => BlockSizeTmp_22
  # DEBUG BEGIN_STMT
  _20 = (unsigned char) BlockSizeTmp_22;
  *BlockSizePtr_33(D) = _20;
  # DEBUG BEGIN_STMT
  return Ret_BSCalc_23;

}



;; Function CanTp_VerifyBlockSize (CanTp_VerifyBlockSize, funcdef_no=10, decl_uid=5939, cgraph_uid=11, symbol_order=11)


Symbols to be put in SSA form
{ D.10087 D.10335 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Removing basic block 3
Removing basic block 6
Merging blocks 10 and 11
Merging blocks 10 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 7 3 }
;; 3 succs { 4 6 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
CanTp_VerifyBlockSize (struct CanTp_ChannelType * ChannelPtr)
{
  uint8 ActualBlockSize;
  Std_ReturnType BSCalc_Ok;
  boolean Ret_BS_Ok;
  boolean D.10335;
  const PduLengthType RemainingBytes;
  boolean Ret_BS_Ok;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _12;
  unsigned char ActualBlockSize.48_13;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_6(D)->TotalLength;
  _2 = ChannelPtr_6(D)->ProcessedLength;
  RemainingBytes_7 = _1 - _2;
  # DEBUG RemainingBytes => RemainingBytes_7
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_6(D)->ActualBufferSize;
  if (_3 >= RemainingBytes_7)
    goto <bb 7>; [67.00%]
  else
    goto <bb 3>; [33.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG ChannelPtr => ChannelPtr_6(D)
  # DEBUG INLINE_ENTRY CanTp_VerifyBlockSize
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BSCalc_Ok_11 = CanTp_CalculateBlockSize (ChannelPtr_6(D), &ActualBlockSize);
  # DEBUG BSCalc_Ok => BSCalc_Ok_11
  # DEBUG BEGIN_STMT
  if (BSCalc_Ok_11 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 4> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  _12 = ChannelPtr_6(D)->BlockSize;
  ActualBlockSize.48_13 = ActualBlockSize;
  if (_12 <= ActualBlockSize.48_13)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 88583701]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret_BS_Ok => 0

  <bb 6> [local count: 354334802]:
  # Ret_BS_Ok_15 = PHI <0(3), 1(4), 0(5)>
  # DEBUG Ret_BS_Ok => Ret_BS_Ok_15
  ActualBlockSize ={v} {CLOBBER};
  # DEBUG Ret_BS_Ok => Ret_BS_Ok_15
  # DEBUG BEGIN_STMT
  _18 = Ret_BS_Ok_15;
  # DEBUG ChannelPtr => NULL
  # DEBUG Ret_BS_Ok => NULL
  # DEBUG RemainingBytes => NULL
  # DEBUG BSCalc_Ok => NULL
  # DEBUG ActualBlockSize => NULL
  Ret_BS_Ok_10 = _18;

  <bb 7> [local count: 1073741824]:
  # Ret_BS_Ok_4 = PHI <1(2), Ret_BS_Ok_10(6)>
  # DEBUG Ret_BS_Ok => Ret_BS_Ok_4
  # DEBUG BEGIN_STMT
  return Ret_BS_Ok_4;

}



;; Function CanTp_PreparexF (CanTp_PreparexF, funcdef_no=12, decl_uid=5918, cgraph_uid=13, symbol_order=13)

CanTp_PreparexF (struct CanTp_ChannelType * ChannelPtr)
{
  const uint32 TotalLength;
  uint8 NPduLength;
  uint8 DataIndex;
  const PduIdType NSduId;
  const struct CanTp_ConfigType * CanTp_CfgPtr.51_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  const struct CanTp_TxNSduConfigType * _6;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;
  short unsigned int _10;
  unsigned char _11;
  unsigned char _12;
  int _13;
  int _14;
  int _15;
  unsigned char _16;
  short unsigned int _17;
  int _18;
  int _19;
  int _20;
  int _21;
  long unsigned int _22;
  int _23;
  unsigned char _24;
  int _25;
  unsigned char _26;
  short unsigned int _27;
  unsigned char _28;
  int _29;
  unsigned char _30;
  int _31;
  unsigned char _32;
  unsigned char _33;
  int _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  NSduId_50 = ChannelPtr_49(D)->NSduId;
  # DEBUG NSduId => NSduId_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG DataIndex => 0
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.51_1 = CanTp_CfgPtr;
  _2 = CanTp_CfgPtr.51_1->TxNSduConfigPtr;
  _3 = (unsigned int) NSduId_50;
  _4 = _3 * 24;
  _5 = _2 + _4;
  _6 = CanTp_CfgPtr.51_1 + _5;
  _7 = _6->AddressingFormat;
  if (_7 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _8 = _6->N_TA_AE;
  ChannelPtr_49(D)->CanIfData[0] = _8;
  # DEBUG BEGIN_STMT
  # DEBUG DataIndex => 1

  <bb 4> [local count: 1073741824]:
  # DataIndex_40 = PHI <0(2), 1(3)>
  # DEBUG DataIndex => DataIndex_40
  # DEBUG BEGIN_STMT
  _9 = ChannelPtr_49(D)->State;
  switch (_9) <default: <L13> [25.00%], case 96: <L2> [25.00%], case 97: <L6> [25.00%], case 98: <L10> [25.00%]>

  <bb 5> [local count: 268435456]:
<L2>:
  # DEBUG BEGIN_STMT
  _10 = ChannelPtr_49(D)->TotalLength;
  _11 = (unsigned char) _10;
  _12 = _11 + DataIndex_40;
  NPduLength_75 = _12 + 1;
  # DEBUG NPduLength => NPduLength_75
  # DEBUG BEGIN_STMT
  if (NPduLength_75 > 8)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  _13 = (int) DataIndex_40;
  ChannelPtr_49(D)->CanIfData[_13] = 0;
  # DEBUG BEGIN_STMT
  DataIndex_78 = DataIndex_40 + 1;
  # DEBUG DataIndex => DataIndex_78
  # DEBUG BEGIN_STMT
  _14 = (int) DataIndex_78;
  ChannelPtr_49(D)->CanIfData[_14] = _11;
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  _15 = (int) DataIndex_40;
  _16 = _11 & 15;
  ChannelPtr_49(D)->CanIfData[_15] = _16;

  <bb 8> [local count: 268435456]:
  # DataIndex_41 = PHI <DataIndex_78(6), DataIndex_40(7)>
  # DEBUG DataIndex => DataIndex_41
  # DEBUG BEGIN_STMT
  DataIndex_80 = DataIndex_41 + 1;
  # DEBUG DataIndex => DataIndex_80
  # DEBUG BEGIN_STMT
  goto <bb 14>; [100.00%]

  <bb 9> [local count: 268435456]:
<L6>:
  # DEBUG BEGIN_STMT
  _17 = ChannelPtr_49(D)->TotalLength;
  if (_17 > 4095)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  TotalLength_60 = (const uint32) _17;
  # DEBUG TotalLength => TotalLength_60
  # DEBUG BEGIN_STMT
  _18 = (int) DataIndex_40;
  ChannelPtr_49(D)->CanIfData[_18] = 16;
  # DEBUG BEGIN_STMT
  DataIndex_62 = DataIndex_40 + 1;
  # DEBUG DataIndex => DataIndex_62
  # DEBUG BEGIN_STMT
  _19 = (int) DataIndex_62;
  ChannelPtr_49(D)->CanIfData[_19] = 0;
  # DEBUG BEGIN_STMT
  DataIndex_64 = DataIndex_40 + 2;
  # DEBUG DataIndex => DataIndex_64
  # DEBUG BEGIN_STMT
  _20 = (int) DataIndex_64;
  ChannelPtr_49(D)->CanIfData[_20] = 0;
  # DEBUG BEGIN_STMT
  DataIndex_66 = DataIndex_40 + 3;
  # DEBUG DataIndex => DataIndex_66
  # DEBUG BEGIN_STMT
  _21 = (int) DataIndex_66;
  ChannelPtr_49(D)->CanIfData[_21] = 0;
  # DEBUG BEGIN_STMT
  DataIndex_68 = DataIndex_40 + 4;
  # DEBUG DataIndex => DataIndex_68
  # DEBUG BEGIN_STMT
  _22 = TotalLength_60 >> 8;
  _23 = (int) DataIndex_68;
  _24 = (unsigned char) _22;
  ChannelPtr_49(D)->CanIfData[_23] = _24;
  # DEBUG BEGIN_STMT
  DataIndex_70 = DataIndex_40 + 5;
  # DEBUG DataIndex => DataIndex_70
  # DEBUG BEGIN_STMT
  _25 = (int) DataIndex_70;
  _26 = (unsigned char) _17;
  ChannelPtr_49(D)->CanIfData[_25] = _26;
  # DEBUG BEGIN_STMT
  DataIndex_72 = DataIndex_40 + 6;
  # DEBUG DataIndex => DataIndex_72
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  # DEBUG TotalLength => _17
  # DEBUG BEGIN_STMT
  _27 = _17 >> 8;
  _28 = (unsigned char) _27;
  _29 = (int) DataIndex_40;
  _30 = _28 | 16;
  ChannelPtr_49(D)->CanIfData[_29] = _30;
  # DEBUG BEGIN_STMT
  DataIndex_57 = DataIndex_40 + 1;
  # DEBUG DataIndex => DataIndex_57
  # DEBUG BEGIN_STMT
  _31 = (int) DataIndex_57;
  _32 = (unsigned char) _17;
  ChannelPtr_49(D)->CanIfData[_31] = _32;
  # DEBUG BEGIN_STMT
  DataIndex_59 = DataIndex_40 + 2;
  # DEBUG DataIndex => DataIndex_59

  <bb 12> [local count: 268435456]:
  # DataIndex_42 = PHI <DataIndex_72(10), DataIndex_59(11)>
  # DEBUG DataIndex => DataIndex_42
  # DEBUG BEGIN_STMT
  ChannelPtr_49(D)->ProcessedBlockFrames = 1;
  # DEBUG BEGIN_STMT
  ChannelPtr_49(D)->BlockSize = 1;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 268435456]:
<L10>:
  # DEBUG BEGIN_STMT
  _33 = ChannelPtr_49(D)->SequenceNumber;
  _34 = (int) DataIndex_40;
  _35 = _33 | 32;
  ChannelPtr_49(D)->CanIfData[_34] = _35;
  # DEBUG BEGIN_STMT
  DataIndex_53 = DataIndex_40 + 1;
  # DEBUG DataIndex => DataIndex_53
  # DEBUG BEGIN_STMT
  _36 = _33 + 1;
  # DEBUG BEGIN_STMT
  _37 = _36 & 15;
  ChannelPtr_49(D)->SequenceNumber = _37;
  # DEBUG BEGIN_STMT
  _38 = ChannelPtr_49(D)->ProcessedBlockFrames;
  _39 = _38 + 1;
  ChannelPtr_49(D)->ProcessedBlockFrames = _39;
  # DEBUG BEGIN_STMT

  <bb 14> [local count: 1073741824]:
  # DataIndex_43 = PHI <DataIndex_80(8), DataIndex_42(12), DataIndex_53(13), DataIndex_40(4)>
<L13>:
  # DEBUG DataIndex => DataIndex_43
  # DEBUG BEGIN_STMT
  ChannelPtr_49(D)->CanIfDLC = DataIndex_43;
  return;

}



;; Function CanTp_RequestTxFrameData (CanTp_RequestTxFrameData, funcdef_no=43, decl_uid=9178, cgraph_uid=44, symbol_order=44)

CanTp_RequestTxFrameData (struct CanTp_ChannelType * ChannelPtr)
{
  boolean FrameReadyToSend;
  uint8 ReqTxFrameBytes;
  const PduLengthType RemainingMsgBytes;
  struct PduInfoType PduInfo;
  BufReq_ReturnType Ret_CopyTxData;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const struct CanTp_ConfigType * CanTp_CfgPtr.202_7;
  long unsigned int _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  const struct CanTp_TxNSduConfigType * _13;
  unsigned char _14;
  unsigned char _15;
  short unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  int _19;
  uint8 * _20;
  unsigned char _21;
  unsigned char _22;
  short unsigned int _23;
  short unsigned int _24;

  <bb 2> [local count: 1073741821]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret_CopyTxData => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_34(D)->CanIfDLC;
  if (_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334801]:
  # DEBUG BEGIN_STMT
  CanTp_PreparexF (ChannelPtr_34(D));

  <bb 4> [local count: 1073741821]:
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_34(D)->ActualBufferSize;
  if (_2 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 5> [local count: 354334801]:
  # DEBUG BEGIN_STMT
  PduInfo.SduDataPtr = 0B;
  # DEBUG BEGIN_STMT
  PduInfo.SduLength = 0;
  # DEBUG BEGIN_STMT
  Ret_CopyTxData_39 = CanTp_ProcessCopyTxData (ChannelPtr_34(D), &PduInfo);
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_39
  # DEBUG BEGIN_STMT
  if (Ret_CopyTxData_39 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 177167400]:
  _3 = ChannelPtr_34(D)->ActualBufferSize;
  if (_3 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 88583700]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret_CopyTxData => 2

  <bb 8> [local count: 1073741823]:
  # Ret_CopyTxData_25 = PHI <1(4), Ret_CopyTxData_39(5), 0(6), 2(7)>
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_25
  # DEBUG BEGIN_STMT
  _4 = ChannelPtr_34(D)->ActualBufferSize;
  if (_4 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 9> [local count: 536870911]:
  # DEBUG BEGIN_STMT
  _5 = ChannelPtr_34(D)->TotalLength;
  _6 = ChannelPtr_34(D)->ProcessedLength;
  RemainingMsgBytes_40 = _5 - _6;
  # DEBUG RemainingMsgBytes => RemainingMsgBytes_40
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.202_7 = CanTp_CfgPtr;
  _8 = CanTp_CfgPtr.202_7->TxNSduConfigPtr;
  _9 = ChannelPtr_34(D)->NSduId;
  _10 = (unsigned int) _9;
  _11 = _10 * 24;
  _12 = _8 + _11;
  _13 = CanTp_CfgPtr.202_7 + _12;
  _14 = _13->LSduMaxLength;
  _15 = ChannelPtr_34(D)->CanIfDLC;
  ReqTxFrameBytes_41 = _14 - _15;
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = (short unsigned int) ReqTxFrameBytes_41;
  if (_16 > RemainingMsgBytes_40)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  ReqTxFrameBytes_42 = (uint8) RemainingMsgBytes_40;
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_42

  <bb 11> [local count: 536870911]:
  # ReqTxFrameBytes_27 = PHI <ReqTxFrameBytes_41(9), ReqTxFrameBytes_42(10)>
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_27
  # DEBUG BEGIN_STMT
  _17 = (short unsigned int) ReqTxFrameBytes_27;
  if (_4 < _17)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  ReqTxFrameBytes_43 = (uint8) _4;
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_43
  # DEBUG BEGIN_STMT
  # DEBUG FrameReadyToSend => 0

  <bb 13> [local count: 536870911]:
  # ReqTxFrameBytes_28 = PHI <ReqTxFrameBytes_43(12), ReqTxFrameBytes_27(11)>
  # FrameReadyToSend_29 = PHI <0(12), 1(11)>
  # DEBUG FrameReadyToSend => FrameReadyToSend_29
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_28
  # DEBUG BEGIN_STMT
  _18 = (short unsigned int) ReqTxFrameBytes_28;
  PduInfo.SduLength = _18;
  # DEBUG BEGIN_STMT
  _19 = (int) _15;
  _20 = &ChannelPtr_34(D)->CanIfData[_19];
  PduInfo.SduDataPtr = _20;
  # DEBUG BEGIN_STMT
  Ret_CopyTxData_47 = CanTp_ProcessCopyTxData (ChannelPtr_34(D), &PduInfo);
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_47
  # DEBUG BEGIN_STMT
  if (Ret_CopyTxData_47 == 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 14> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  _21 = ChannelPtr_34(D)->CanIfDLC;
  _22 = _21 + ReqTxFrameBytes_28;
  ChannelPtr_34(D)->CanIfDLC = _22;
  # DEBUG BEGIN_STMT
  _23 = ChannelPtr_34(D)->ProcessedLength;
  _24 = _18 + _23;
  ChannelPtr_34(D)->ProcessedLength = _24;
  # DEBUG BEGIN_STMT
  if (FrameReadyToSend_29 == 0)
    goto <bb 15>; [35.00%]
  else
    goto <bb 16>; [65.00%]

  <bb 15> [local count: 93952409]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret_CopyTxData => 2

  <bb 16> [local count: 1073741824]:
  # Ret_CopyTxData_26 = PHI <Ret_CopyTxData_25(8), Ret_CopyTxData_47(13), 0(14), 2(15)>
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_26
  # DEBUG BEGIN_STMT
  PduInfo ={v} {CLOBBER};
  return Ret_CopyTxData_26;

}



;; Function CanTp_PreparePadding (CanTp_PreparePadding, funcdef_no=13, decl_uid=5956, cgraph_uid=14, symbol_order=14)

CanTp_PreparePadding (struct CanTp_ChannelType * ChannelPtr, uint8 Padding, uint8 CanIdType, struct PduInfoType * FCBufferPtr)
{
  PduLengthType FrameLength;
  PduLengthType NPduSize;
  uint8_least Idx;
  unsigned char _1;
  unsigned char _2;
  short unsigned int _3;
  unsigned char _4;
  unsigned char _5;
  uint8 * _6;
  uint8 * _7;
  long unsigned int _8;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PaddingByte => 0
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_14(D) != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 4>; [30.00%]

  <bb 3> [local count: 82678120]:
  # DEBUG BEGIN_STMT
  FrameLength_18 = FCBufferPtr_14(D)->SduLength;
  # DEBUG FrameLength => FrameLength_18
  # DEBUG BEGIN_STMT
  # DEBUG NPduSize => FrameLength_18
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 35433480]:
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_16(D)->CanIfDLC;
  FrameLength_17 = (PduLengthType) _1;
  # DEBUG FrameLength => FrameLength_17
  # DEBUG BEGIN_STMT
  # DEBUG NPduSize => FrameLength_17

  <bb 5> [local count: 118111600]:
  # NPduSize_10 = PHI <FrameLength_18(3), FrameLength_17(4)>
  # DEBUG FrameLength => NPduSize_10
  # DEBUG NPduSize => NPduSize_10
  # DEBUG BEGIN_STMT
  _2 = CanIdType_19(D) + 254;
  if (_2 <= 1)
    goto <bb 6>; [41.00%]
  else
    goto <bb 17>; [59.00%]

  <bb 6> [local count: 48425756]:
  # DEBUG BEGIN_STMT
  # DEBUG PaddingByte => 0
  # DEBUG BEGIN_STMT
  if (Padding_20(D) == 2)
    goto <bb 19>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 7> [local count: 31960999]:
  # DEBUG BEGIN_STMT
  if (NPduSize_10 <= 8)
    goto <bb 8>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 8> [local count: 15980499]:
  # DEBUG BEGIN_STMT
  if (Padding_20(D) == 1)
    goto <bb 9>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 9> [local count: 5433370]:
  # DEBUG BEGIN_STMT
  # DEBUG NPduSize => 8
  goto <bb 19>; [100.00%]

  <bb 10> [local count: 15980499]:
  # DEBUG BEGIN_STMT
  if (NPduSize_10 <= 12)
    goto <bb 19>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 7990250]:
  # DEBUG BEGIN_STMT
  if (NPduSize_10 <= 16)
    goto <bb 19>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 12> [local count: 3995125]:
  # DEBUG BEGIN_STMT
  if (NPduSize_10 <= 20)
    goto <bb 19>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 1997562]:
  # DEBUG BEGIN_STMT
  if (NPduSize_10 <= 24)
    goto <bb 19>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 998781]:
  # DEBUG BEGIN_STMT
  if (NPduSize_10 <= 32)
    goto <bb 19>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 499391]:
  # DEBUG BEGIN_STMT
  if (NPduSize_10 <= 48)
    goto <bb 19>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [local count: 249695]:
  # DEBUG BEGIN_STMT
  # DEBUG NPduSize => 64
  goto <bb 19>; [100.00%]

  <bb 17> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  if (Padding_20(D) != 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 18> [local count: 34842922]:
  # DEBUG BEGIN_STMT
  # DEBUG NPduSize => 8

  <bb 19> [local count: 118111600]:
  # NPduSize_11 = PHI <8(9), NPduSize_10(17), 8(18), 64(6), NPduSize_10(8), 64(16), 48(15), 32(14), 24(13), 20(12), 16(11), 12(10)>
  # DEBUG PaddingByte => 0
  # DEBUG NPduSize => NPduSize_11
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_14(D) != 0B)
    goto <bb 20>; [70.00%]
  else
    goto <bb 21>; [30.00%]

  <bb 20> [local count: 82678120]:
  # DEBUG BEGIN_STMT
  _3 = FCBufferPtr_14(D)->SduLength;
  Idx_23 = (uint8_least) _3;
  # DEBUG Idx => Idx_23
  # DEBUG BEGIN_STMT
  FCBufferPtr_14(D)->SduLength = NPduSize_11;
  goto <bb 27>; [100.00%]

  <bb 21> [local count: 35433480]:
  # DEBUG BEGIN_STMT
  _4 = ChannelPtr_16(D)->CanIfDLC;
  Idx_21 = (uint8_least) _4;
  # DEBUG Idx => Idx_21
  # DEBUG BEGIN_STMT
  _5 = (unsigned char) NPduSize_11;
  ChannelPtr_16(D)->CanIfDLC = _5;

  <bb 27> [local count: 118111600]:
  # Idx_29 = PHI <Idx_23(20), Idx_21(21)>
  goto <bb 29>; [100.00%]

  <bb 22> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_14(D) != 0B)
    goto <bb 23>; [70.00%]
  else
    goto <bb 24>; [30.00%]

  <bb 23> [local count: 668941158]:
  # DEBUG BEGIN_STMT
  _6 = FCBufferPtr_14(D)->SduDataPtr;
  _7 = _6 + Idx_9;
  *_7 = 0;
  goto <bb 25>; [100.00%]

  <bb 24> [local count: 286689067]:
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->CanIfData[Idx_9] = 0;

  <bb 25> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  Idx_27 = Idx_9 + 1;
  # DEBUG Idx => Idx_27

  <bb 29> [local count: 1073741824]:
  # Idx_9 = PHI <Idx_29(27), Idx_27(25)>
  # DEBUG Idx => Idx_9
  # DEBUG BEGIN_STMT
  _8 = (long unsigned int) NPduSize_11;
  if (_8 > Idx_9)
    goto <bb 22>; [89.00%]
  else
    goto <bb 28>; [11.00%]

  <bb 28> [local count: 118111601]:
  return;

}



;; Function CanTp_RxProcessData (CanTp_RxProcessData, funcdef_no=16, decl_uid=5943, cgraph_uid=17, symbol_order=17)

CanTp_RxProcessData (struct CanTp_ChannelType * ChannelPtr, uint8 * NPduDataPtr, uint8 NSduDataLength)
{
  struct PduInfoType PduInfo;
  PduLengthType UL_BufferSize;
  BufReq_ReturnType Ret_CopyRxData;
  short unsigned int _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.68_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanTp_RxNSduConfigType * _8;
  short unsigned int _9;
  short unsigned int UL_BufferSize.70_10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) NSduDataLength_12(D);
  PduInfo.SduLength = _1;
  # DEBUG BEGIN_STMT
  PduInfo.SduDataPtr = NPduDataPtr_15(D);
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.68_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.68_2->RxNSduConfigPtr;
  _4 = ChannelPtr_17(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 26;
  _7 = _3 + _6;
  _8 = CanTp_CfgPtr.68_2 + _7;
  _9 = _8->IPduId;
  Ret_CopyRxData_19 = PduR_CanTpCopyRxData (_9, &PduInfo, &UL_BufferSize);
  # DEBUG Ret_CopyRxData => Ret_CopyRxData_19
  # DEBUG BEGIN_STMT
  if (Ret_CopyRxData_19 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  UL_BufferSize.70_10 = UL_BufferSize;
  ChannelPtr_17(D)->ActualBufferSize = UL_BufferSize.70_10;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->ActualBufferSize = 0;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  UL_BufferSize ={v} {CLOBBER};
  PduInfo ={v} {CLOBBER};
  return Ret_CopyRxData_19;

}



;; Function CanTp_ProcessStartOfReceptionData (CanTp_ProcessStartOfReceptionData, funcdef_no=15, decl_uid=5914, cgraph_uid=16, symbol_order=16)


Symbols to be put in SSA form
{ D.10092 D.10359 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


Removing basic block 3
Removing basic block 10
Merging blocks 11 and 12
Merging blocks 11 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
CanTp_ProcessStartOfReceptionData (struct CanTp_ChannelType * ChannelPtr, uint8 * NPduDataPtr, uint8 NSduDataLength)
{
  BufReq_ReturnType Ret_ReqRxBuffer;
  BufReq_ReturnType D.10359;
  BufReq_ReturnType Ret_ReqRxBuffer;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (NSduDataLength_6(D) == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG D#5 => NPduDataPtr_13(D)
  # DEBUG D#6 => NSduDataLength_6(D)
  # DEBUG ChannelPtr => ChannelPtr_8(D)
  # DEBUG INLINE_ENTRY CanTp_ProcessStartOfReceptionData
  # DEBUG D#8 => D#5
  # DEBUG NPduDataPtr => D#8
  # DEBUG D#7 => D#6
  # DEBUG NSduDataLength => D#7
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_17 = CanTp_RxProcessData (ChannelPtr_8(D), 0B, 0);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_17
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_17
  # DEBUG BEGIN_STMT
  _20 = Ret_ReqRxBuffer_17;
  # DEBUG ChannelPtr => NULL
  # DEBUG Ret_ReqRxBuffer => NULL
  # DEBUG NPduDataPtr => NULL
  # DEBUG NSduDataLength => NULL
  Ret_ReqRxBuffer_12 = _20;
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_8(D)->ActualBufferSize;
  _2 = (short unsigned int) NSduDataLength_6(D);
  if (_1 < _2)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_11 = CanTp_RxProcessData (ChannelPtr_8(D), 0B, 0);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_11
  # DEBUG BEGIN_STMT
  if (Ret_ReqRxBuffer_11 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 600704864]:
  # DEBUG Ret_ReqRxBuffer => NULL
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_8(D)->ActualBufferSize;
  if (_2 <= _3)
    goto <bb 7>; [47.77%]
  else
    goto <bb 8>; [52.23%]

  <bb 7> [local count: 286956713]:
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_15 = CanTp_RxProcessData (ChannelPtr_8(D), NPduDataPtr_13(D), NSduDataLength_6(D));
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_15

  <bb 8> [local count: 1073741824]:
  # Ret_ReqRxBuffer_5 = PHI <Ret_ReqRxBuffer_12(3), Ret_ReqRxBuffer_11(5), Ret_ReqRxBuffer_15(7), 2(6)>
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_5
  # DEBUG BEGIN_STMT
  return Ret_ReqRxBuffer_5;

}



;; Function CanTp_StopChannel (CanTp_StopChannel, funcdef_no=37, decl_uid=5930, cgraph_uid=38, symbol_order=38)

CanTp_StopChannel (struct CanTp_ChannelType * ChannelPtr, CanTp_ULIndicationType ULIndication, NotifResultType Result)
{
  PduIdType NSduID;
  boolean CallPduRCanTpTxConfirmation;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.162_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct CanTp_RxNSduConfigType * _7;
  short unsigned int _8;
  unsigned char _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  const struct CanTp_ConfigType * CanTp_CfgPtr.164_13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  const struct CanTp_TxNSduConfigType * _18;
  short unsigned int _19;
  unsigned char _25;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG CallPduRCanTpTxConfirmation => 0
  # DEBUG BEGIN_STMT
  NSduID_28 = ChannelPtr_27(D)->NSduId;
  # DEBUG NSduID => NSduID_28
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_27(D)->State;
  if (_1 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  if (ULIndication_29(D) == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 4> [local count: 182536110]:
  # DEBUG BEGIN_STMT
  _25 = _1 & 96;
  if (_25 == 64)
    goto <bb 5>; [20.24%]
  else
    goto <bb 6>; [79.76%]

  <bb 5> [local count: 36945309]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.162_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.162_2->RxNSduConfigPtr;
  _4 = (unsigned int) NSduID_28;
  _5 = _4 * 26;
  _6 = _3 + _5;
  _7 = CanTp_CfgPtr.162_2 + _6;
  _8 = _7->IPduId;
  PduR_CanTpRxIndication (_8, Result_30(D));

  <bb 6> [local count: 1073741824]:
  # CallPduRCanTpTxConfirmation_20 = PHI <0(2), 0(3), 0(5), 1(4)>
  # DEBUG CallPduRCanTpTxConfirmation => CallPduRCanTpTxConfirmation_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = ChannelPtr_27(D)->PostRxIndFrameType;
  if (_9 == 32)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = ChannelPtr_27(D)->PostFlag;
  _11 = _10 & 254;
  ChannelPtr_27(D)->PostFlag = _11;

  <bb 8> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_InitChannelPtr (ChannelPtr_27(D));
  # DEBUG BEGIN_STMT
  if (CallPduRCanTpTxConfirmation_20 == 1)
    goto <bb 9>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 9> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _12 = ChannelPtr_27(D)->ChannelLockFlag;
  if (_12 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 182536110]:
  # DEBUG BEGIN_STMT
  ChannelPtr_27(D)->ChannelLockFlag = 0;

  <bb 11> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CallPduRCanTpTxConfirmation_20 == 1)
    goto <bb 12>; [20.24%]
  else
    goto <bb 13>; [79.76%]

  <bb 12> [local count: 217325345]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.164_13 = CanTp_CfgPtr;
  _14 = CanTp_CfgPtr.164_13->TxNSduConfigPtr;
  _15 = (unsigned int) NSduID_28;
  _16 = _15 * 24;
  _17 = _14 + _16;
  _18 = CanTp_CfgPtr.164_13 + _17;
  _19 = _18->IPduConfId;
  PduR_CanTpTxConfirmation (_19, Result_30(D));

  <bb 13> [local count: 1073741824]:
  return;

}



;; Function CanTp_Init (CanTp_Init, funcdef_no=1, decl_uid=5609, cgraph_uid=2, symbol_order=2)

CanTp_Init (const struct CanTp_ConfigType * CfgPtr)
{
  boolean StopChannel;
  boolean ChannelInitFlag;
  CanTp_ChType Channel;
  struct CanTp_ChannelType * ChannelPtr;
  unsigned char _1;
  unsigned char _2;
  int _3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.2_4;
  unsigned char _5;
  int _6;
  unsigned char _7;
  unsigned char _8;
  const struct CanTp_ConfigType * CanTp_CfgPtr.4_9;
  unsigned char _10;

  <bb 2> [local count: 992534453]:
  # DEBUG BEGIN_STMT
  # DEBUG LocalConfigPtr => CfgPtr_21(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CfgPtr_21(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 297760336]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 1, 3);
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 694774118]:
  # DEBUG BEGIN_STMT
  _1 = CanTp_IsValidConfig (CfgPtr_21(D));
  if (_1 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 347387059]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 1, 1);
  goto <bb 16>; [100.00%]

  <bb 6> [local count: 347387059]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ChannelInitFlag => 0
  # DEBUG BEGIN_STMT
  # DEBUG StopChannel => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr = CfgPtr_21(D);
  # DEBUG BEGIN_STMT
  _2 = CanTp_InitVars.State;
  if (_2 == 1)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG StopChannel => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_InitVars.State = 0;
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 229275458]:
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter = 0;
  # DEBUG BEGIN_STMT
  # DEBUG ChannelInitFlag => 1

  <bb 9> [local count: 347387059]:
  # ChannelInitFlag_13 = PHI <0(7), 1(8)>
  # StopChannel_14 = PHI <1(7), 0(8)>
  # DEBUG StopChannel => StopChannel_14
  # DEBUG ChannelInitFlag => ChannelInitFlag_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (StopChannel_14 == 1)
    goto <bb 18>; [34.00%]
  else
    goto <bb 12>; [66.00%]

  <bb 18> [local count: 118111600]:
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 955630222]:
  # DEBUG BEGIN_STMT
  _3 = (int) Channel_11;
  ChannelPtr_29 = &CanTp_Channel[_3];
  # DEBUG ChannelPtr => ChannelPtr_29
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_29, 1, 1);
  # DEBUG BEGIN_STMT
  Channel_31 = Channel_11 + 1;
  # DEBUG Channel => Channel_31

  <bb 11> [local count: 1073741823]:
  # Channel_11 = PHI <Channel_31(10), 0(18)>
  # DEBUG Channel => Channel_11
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.2_4 = CanTp_CfgPtr;
  _5 = CanTp_CfgPtr.2_4->NumberOfChannels;
  if (_5 > Channel_11)
    goto <bb 10>; [89.00%]
  else
    goto <bb 12>; [11.00%]

  <bb 12> [local count: 347387059]:
  # DEBUG BEGIN_STMT
  if (ChannelInitFlag_13 == 1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 17> [local count: 118111600]:
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _6 = (int) Channel_12;
  ChannelPtr_32 = &CanTp_Channel[_6];
  # DEBUG ChannelPtr => ChannelPtr_32
  # DEBUG BEGIN_STMT
  CanTp_InitChannelPtr (ChannelPtr_32);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_6].PostFlag;
  _8 = _7 & 254;
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_6].PostFlag = _8;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_6].ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  Channel_36 = Channel_12 + 1;
  # DEBUG Channel => Channel_36

  <bb 14> [local count: 1073741824]:
  # Channel_12 = PHI <Channel_36(13), 0(17)>
  # DEBUG Channel => Channel_12
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.4_9 = CanTp_CfgPtr;
  _10 = CanTp_CfgPtr.4_9->NumberOfChannels;
  if (_10 > Channel_12)
    goto <bb 13>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 15> [local count: 347387060]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_InitVars.State = 1;

  <bb 16> [local count: 992534455]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanTp_RxChannelCleanup (CanTp_RxChannelCleanup, funcdef_no=23, decl_uid=8903, cgraph_uid=24, symbol_order=24)


Symbols to be put in SSA form
{ D.10095 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 11
Number of blocks to update: 10 ( 91%)


Removing basic block 4
Removing basic block 7
Removing basic block 8
Merging blocks 9 and 10
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
CanTp_RxChannelCleanup (struct CanTp_ChannelType * ChannelPtr)
{
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.134_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct CanTp_RxNSduConfigType * _10;
  unsigned char _11;
  unsigned char _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_13(D)->State;
  _15 = _1 & 96;
  if (_15 == 64)
    goto <bb 3>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 3> [local count: 365072220]:
<L2>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.134_4 = CanTp_CfgPtr;
  _5 = CanTp_CfgPtr.134_4->RxNSduConfigPtr;
  _6 = ChannelPtr_13(D)->NSduId;
  _7 = (unsigned int) _6;
  _8 = _7 * 26;
  _9 = _5 + _8;
  _10 = CanTp_CfgPtr.134_4 + _9;
  _11 = _10->ChannelMode;
  if (_11 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 182536110]:
  # DEBUG ChannelPtr => ChannelPtr_13(D)
  # DEBUG INLINE_ENTRY CanTp_RxChannelCleanup
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 1);
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 182536110]:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 7);

  <bb 6> [local count: 1073741824]:
<L8>:
  # DEBUG ChannelPtr => NULL
  return;

}



;; Function CanTp_TransmitFrame (CanTp_TransmitFrame, funcdef_no=39, decl_uid=5924, cgraph_uid=40, symbol_order=40)

CanTp_TransmitFrame (struct CanTp_ChannelType * ChannelPtr, struct PduInfoType * FCBufferPtr)
{
  CanTp_ChStateType NextState;
  Std_ReturnType CanIfRet;
  PduIdType LSduId;
  const PduIdType NSduId;
  struct PduInfoType PduInfo;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.186_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct CanTp_RxNSduConfigType * _7;
  const struct CanTp_ConfigType * CanTp_CfgPtr.188_8;
  long unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  const struct CanTp_TxNSduConfigType * _13;
  uint8 * _14;
  short unsigned int _15;
  unsigned char _16;
  short unsigned int _17;
  uint8[64] * _18;
  unsigned char _40;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NSduId_24 = ChannelPtr_23(D)->NSduId;
  # DEBUG NSduId => NSduId_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_23(D)->State;
  _40 = _1 & 96;
  if (_40 == 64)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.186_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.186_2->RxNSduConfigPtr;
  _4 = (unsigned int) NSduId_24;
  _5 = _4 * 26;
  _6 = _3 + _5;
  _7 = CanTp_CfgPtr.186_2 + _6;
  LSduId_26 = _7->LSduIdFc;
  # DEBUG LSduId => LSduId_26
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 708669604]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.188_8 = CanTp_CfgPtr;
  _9 = CanTp_CfgPtr.188_8->TxNSduConfigPtr;
  _10 = (unsigned int) NSduId_24;
  _11 = _10 * 24;
  _12 = _9 + _11;
  _13 = CanTp_CfgPtr.188_8 + _12;
  LSduId_25 = _13->LSduIdxF;
  # DEBUG LSduId => LSduId_25

  <bb 5> [local count: 1073741823]:
  # LSduId_19 = PHI <LSduId_26(3), LSduId_25(4)>
  # DEBUG LSduId => LSduId_19
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_27(D) != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 6> [local count: 751619277]:
  # DEBUG BEGIN_STMT
  _14 = FCBufferPtr_27(D)->SduDataPtr;
  PduInfo.SduDataPtr = _14;
  # DEBUG BEGIN_STMT
  _15 = FCBufferPtr_27(D)->SduLength;
  PduInfo.SduLength = _15;
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 322122547]:
  # DEBUG BEGIN_STMT
  _16 = ChannelPtr_23(D)->CanIfDLC;
  _17 = (short unsigned int) _16;
  PduInfo.SduLength = _17;
  # DEBUG BEGIN_STMT
  _18 = &ChannelPtr_23(D)->CanIfData;
  PduInfo.SduDataPtr = _18;

  <bb 8> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG CurrentState => _1
  # DEBUG BEGIN_STMT
  NextState_32 = _1 & 103;
  # DEBUG NextState => NextState_32
  # DEBUG BEGIN_STMT
  NextState_33 = NextState_32 | 16;
  # DEBUG NextState => NextState_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_23(D)->State = NextState_33;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIfRet_36 = CanIf_Transmit (LSduId_19, &PduInfo);
  # DEBUG CanIfRet => CanIfRet_36
  # DEBUG BEGIN_STMT
  if (CanIfRet_36 == 0)
    goto <bb 9>; [67.00%]
  else
    goto <bb 11>; [33.00%]

  <bb 9> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_27(D) == 0B)
    goto <bb 10>; [30.00%]
  else
    goto <bb 12>; [70.00%]

  <bb 10> [local count: 215822106]:
  # DEBUG BEGIN_STMT
  ChannelPtr_23(D)->CanIfDLC = 0;
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_23(D), 1, 1);

  <bb 12> [local count: 1073741824]:
  PduInfo ={v} {CLOBBER};
  return;

}



;; Function CanTp_PrepareFC (CanTp_PrepareFC, funcdef_no=8, decl_uid=5921, cgraph_uid=9, symbol_order=9)

CanTp_PrepareFC (struct CanTp_ChannelType * ChannelPtr, uint8 FcNPCI_Header)
{
  struct PduInfoType Local_Buffer;
  uint8 FC_Data[64];
  uint8 DataIndex;
  const PduIdType NSduId;
  const struct CanTp_ConfigType * CanTp_CfgPtr.20_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  const struct CanTp_RxNSduConfigType * _6;
  unsigned char _7;
  unsigned char _8;
  int _9;
  int _10;
  unsigned char _11;
  long unsigned int _12;
  sizetype _13;
  const struct CanTp_RxNSduConfigType * _14;
  int _15;
  unsigned char _16;
  short unsigned int _17;
  long unsigned int _18;
  sizetype _19;
  const struct CanTp_RxNSduConfigType * _20;
  unsigned char _21;
  unsigned char _22;
  const struct CanTp_ConfigType * CanTp_CfgPtr.33_23;
  long unsigned int _24;
  sizetype _25;
  const struct CanTp_RxNSduConfigType * _26;
  short unsigned int _27;
  long unsigned int _28;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  NSduId_33 = ChannelPtr_32(D)->NSduId;
  # DEBUG NSduId => NSduId_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.20_1 = CanTp_CfgPtr;
  _2 = CanTp_CfgPtr.20_1->RxNSduConfigPtr;
  _3 = (unsigned int) NSduId_33;
  _4 = _3 * 26;
  _5 = _2 + _4;
  _6 = CanTp_CfgPtr.20_1 + _5;
  _7 = _6->AddressingFormat;
  if (_7 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _8 = _6->N_TA_AE;
  FC_Data[0] = _8;
  # DEBUG BEGIN_STMT
  # DEBUG DataIndex => 1

  <bb 4> [local count: 1073741824]:
  # DataIndex_29 = PHI <1(3), 0(2)>
  # DEBUG DataIndex => DataIndex_29
  # DEBUG BEGIN_STMT
  _9 = (int) DataIndex_29;
  FC_Data[_9] = FcNPCI_Header_35(D);
  # DEBUG BEGIN_STMT
  DataIndex_37 = DataIndex_29 + 1;
  # DEBUG DataIndex => DataIndex_37
  # DEBUG BEGIN_STMT
  _10 = (int) DataIndex_37;
  _11 = ChannelPtr_32(D)->BlockSize;
  FC_Data[_10] = _11;
  # DEBUG BEGIN_STMT
  DataIndex_39 = DataIndex_29 + 2;
  # DEBUG DataIndex => DataIndex_39
  # DEBUG BEGIN_STMT
  _12 = CanTp_CfgPtr.20_1->RxNSduConfigPtr;
  _13 = _4 + _12;
  _14 = CanTp_CfgPtr.20_1 + _13;
  _15 = (int) DataIndex_39;
  _16 = _14->STmin;
  FC_Data[_15] = _16;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  DataIndex_41 = DataIndex_29 + 3;
  # DEBUG DataIndex => DataIndex_41
  # DEBUG BEGIN_STMT
  _17 = (short unsigned int) DataIndex_41;
  Local_Buffer.SduLength = _17;
  # DEBUG BEGIN_STMT
  Local_Buffer.SduDataPtr = &FC_Data[0];
  # DEBUG BEGIN_STMT
  _18 = CanTp_CfgPtr.20_1->RxNSduConfigPtr;
  _19 = _4 + _18;
  _20 = CanTp_CfgPtr.20_1 + _19;
  _21 = _20->PaddingActivation;
  _22 = _20->FcCanIdType;
  CanTp_PreparePadding (ChannelPtr_32(D), _21, _22, &Local_Buffer);
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.33_23 = CanTp_CfgPtr;
  _24 = CanTp_CfgPtr.33_23->RxNSduConfigPtr;
  _25 = _4 + _24;
  _26 = CanTp_CfgPtr.33_23 + _25;
  _27 = _26->N_Ar;
  _28 = (long unsigned int) _27;
  ChannelPtr_32(D)->Ticks = _28;
  # DEBUG BEGIN_STMT
  CanTp_TransmitFrame (ChannelPtr_32(D), &Local_Buffer);
  FC_Data ={v} {CLOBBER};
  Local_Buffer ={v} {CLOBBER};
  return;

}



;; Function CanTp_TryToSendFC (CanTp_TryToSendFC, funcdef_no=18, decl_uid=5963, cgraph_uid=19, symbol_order=19)

CanTp_TryToSendFC (struct CanTp_ChannelType * ChannelPtr, uint8 Type)
{
  CanTp_ChStateType ChanState;
  boolean Ret_Postponed;
  CanTp_TxChannelType Tx_ChannelID;
  const struct CanTp_ConfigType * CanTp_CfgPtr.71_1;
  long unsigned int _2;
  short unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct CanTp_RxNSduConfigType * _7;
  int _8;
  unsigned char _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Tx_ChannelID => 255
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 0
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.71_1 = CanTp_CfgPtr;
  _2 = CanTp_CfgPtr.71_1->RxNSduConfigPtr;
  _3 = ChannelPtr_13(D)->NSduId;
  _4 = (unsigned int) _3;
  _5 = _4 * 26;
  _6 = _2 + _5;
  _7 = CanTp_CfgPtr.71_1 + _6;
  Tx_ChannelID_14 = _7->Tx_Channel;
  # DEBUG Tx_ChannelID => Tx_ChannelID_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 0
  # DEBUG BEGIN_STMT
  if (Tx_ChannelID_14 != 255)
    goto <bb 3>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  _8 = (int) Tx_ChannelID_14;
  # DEBUG D#9 => &CanTp_Channel[_8]
  # DEBUG ChPtr => D#9
  # DEBUG BEGIN_STMT
  ChanState_15 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_8].State;
  # DEBUG ChanState => ChanState_15
  # DEBUG BEGIN_STMT
  _11 = ChanState_15 & 152;
  if (_11 == 16)
    goto <bb 4>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 4> [local count: 240947665]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 1

  <bb 5> [local count: 1073741824]:
  # Ret_Postponed_9 = PHI <0(2), 0(3), 1(4)>
  # DEBUG Ret_Postponed => Ret_Postponed_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  switch (Type_16(D)) <default: <L12> [33.33%], case 4: <L4> [33.33%], case 6: <L8> [33.33%]>

  <bb 6> [local count: 357878150]:
<L4>:
  # DEBUG BEGIN_STMT
  if (Ret_Postponed_9 == 1)
    goto <bb 7>; [51.12%]
  else
    goto <bb 8>; [48.88%]

  <bb 7> [local count: 182947310]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 204;
  goto <bb 15>; [100.00%]

  <bb 8> [local count: 174930840]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 76;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (ChannelPtr_13(D), 48);
  goto <bb 15>; [100.00%]

  <bb 9> [local count: 357878150]:
<L8>:
  # DEBUG BEGIN_STMT
  if (Ret_Postponed_9 == 1)
    goto <bb 10>; [51.12%]
  else
    goto <bb 11>; [48.88%]

  <bb 10> [local count: 182947310]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 206;
  goto <bb 15>; [100.00%]

  <bb 11> [local count: 174930840]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 78;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (ChannelPtr_13(D), 49);
  goto <bb 15>; [100.00%]

  <bb 12> [local count: 357878150]:
<L12>:
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->ActualBufferSize = 0;
  # DEBUG BEGIN_STMT
  if (Ret_Postponed_9 == 1)
    goto <bb 13>; [51.12%]
  else
    goto <bb 14>; [48.88%]

  <bb 13> [local count: 182947310]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 205;
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 174930840]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 77;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (ChannelPtr_13(D), 50);

  <bb 15> [local count: 1073634451]:
  return;

}



;; Function CanTp_CheckAndHandleWaitFrameTimeOut (CanTp_CheckAndHandleWaitFrameTimeOut, funcdef_no=11, decl_uid=5945, cgraph_uid=12, symbol_order=12)


Symbols to be put in SSA form
{ D.10100 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 5
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
CanTp_CheckAndHandleWaitFrameTimeOut (struct CanTp_ChannelType * ChannelPtr)
{
  unsigned char _1;
  long unsigned int _6;
  const struct CanTp_ConfigType * CanTp_CfgPtr.49_7;
  long unsigned int _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  const struct CanTp_RxNSduConfigType * _13;
  short unsigned int _14;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_4(D)->WftCounter;
  if (_1 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG ChannelPtr => ChannelPtr_4(D)
  # DEBUG INLINE_ENTRY CanTp_CheckAndHandleWaitFrameTimeOut
  # DEBUG BEGIN_STMT
  _6 = ChannelPtr_4(D)->Ticks;
  CanTp_CfgPtr.49_7 = CanTp_CfgPtr;
  _8 = CanTp_CfgPtr.49_7->RxNSduConfigPtr;
  _9 = ChannelPtr_4(D)->NSduId;
  _10 = (unsigned int) _9;
  _11 = _10 * 26;
  _12 = _8 + _11;
  _13 = CanTp_CfgPtr.49_7 + _12;
  _14 = _13->N_Ar;
  _15 = (long unsigned int) _14;
  if (_6 <= _15)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_4(D), 6);

  <bb 5> [local count: 536870913]:

  <bb 6> [local count: 1073741824]:
  # DEBUG ChannelPtr => NULL
  return;

}



;; Function CanTp_ProcessStartOfReception (CanTp_ProcessStartOfReception, funcdef_no=14, decl_uid=5910, cgraph_uid=15, symbol_order=15)


Symbols to be put in SSA form
{ D.10101 D.10401 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


Removing basic block 4
Removing basic block 9
Merging blocks 13 and 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 9 10 3 8 4 }
;; 3 succs { 10 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 10 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
CanTp_ProcessStartOfReception (struct CanTp_ChannelType * ChannelPtr)
{
  Std_ReturnType Ret;
  Std_ReturnType D.10401;
  BufReq_ReturnType Ret_StartOfReception;
  Std_ReturnType Ret;
  const struct CanTp_ConfigType * CanTp_CfgPtr.66_1;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanTp_RxNSduConfigType * _8;
  short unsigned int _9;
  short unsigned int _10;
  PduLengthType * _11;
  unsigned char _22;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.66_1 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.66_1->RxNSduConfigPtr;
  _4 = ChannelPtr_15(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 26;
  _7 = _3 + _6;
  _8 = CanTp_CfgPtr.66_1 + _7;
  _9 = _8->IPduId;
  _10 = ChannelPtr_15(D)->TotalLength;
  _11 = &ChannelPtr_15(D)->ActualBufferSize;
  Ret_StartOfReception_17 = PduR_CanTpStartOfReception (_9, _10, _11);
  # DEBUG Ret_StartOfReception => Ret_StartOfReception_17
  # DEBUG BEGIN_STMT
  switch (Ret_StartOfReception_17) <default: <L7> [20.00%], case 0: <L10> [20.00%], case 1: <L1> [20.00%], case 2: <L6> [20.00%], case 3: <L11> [20.00%]>

  <bb 3> [local count: 214748364]:
<L1>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_15(D), 0, 1);
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1
  # DEBUG BEGIN_STMT
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 214748364]:
<L11>:
  # DEBUG ChannelPtr => ChannelPtr_15(D)
  # DEBUG INLINE_ENTRY CanTp_ProcessStartOfReception
  # DEBUG BEGIN_STMT
  _22 = ChannelPtr_15(D)->State;
  if (_22 == 65)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 73014444]:
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_15(D), 5);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 141733921]:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_15(D), 0, 1);

  <bb 7> [local count: 214748364]:
  # Ret_23 = PHI <1(5), 1(6)>
<L12>:
  # DEBUG Ret => Ret_23
  # DEBUG BEGIN_STMT
  _27 = Ret_23;
  # DEBUG ChannelPtr => NULL
  # DEBUG Ret => NULL
  # DEBUG Ret_StartOfReception => NULL
  Ret_13 = _27;
  goto <bb 10>; [100.00%]

  <bb 8> [local count: 214748364]:
<L6>:
  # DEBUG BEGIN_STMT
  ChannelPtr_15(D)->ActualBufferSize = 0;
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 0
  # DEBUG BEGIN_STMT
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 214748364]:
<L7>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_15(D), 1, 1);
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1
  # DEBUG BEGIN_STMT

  <bb 10> [local count: 1073741824]:
  # Ret_12 = PHI <0(2), 1(3), Ret_13(7), 0(8), 1(9)>
<L10>:
  # DEBUG Ret => Ret_12
  # DEBUG BEGIN_STMT
  return Ret_12;

}



;; Function CanTp_RxStateHandling (CanTp_RxStateHandling, funcdef_no=17, decl_uid=5916, cgraph_uid=18, symbol_order=18)

CanTp_RxStateHandling (struct CanTp_ChannelType * ChannelPtr)
{
  boolean ContinueWithNextBlock;
  BufReq_ReturnType Ret_ReqRxBuffer;
  Std_ReturnType BSCalc_Ok;
  BufReq_ReturnType Ret_ReqRxBuffer;
  BufReq_ReturnType Ret_ReqRxBuffer;
  unsigned char _1;
  uint8[64] * _2;
  unsigned char _3;
  uint8[64] * _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned char _7;
  short unsigned int _8;
  short unsigned int _9;
  uint8 * _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_16(D)->State;
  switch (_1) <default: <L28> [25.00%], case 64: <L0> [25.00%], case 65: <L5> [25.00%], case 66: <L13> [25.00%]>

  <bb 3> [local count: 268435456]:
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = &ChannelPtr_16(D)->CanIfData;
  _3 = ChannelPtr_16(D)->CanIfDLC;
  Ret_ReqRxBuffer_41 = CanTp_ProcessStartOfReceptionData (ChannelPtr_16(D), _2, _3);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_41
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_41) <default: <L3> [33.33%], case 0: <L1> [33.33%], case 2: <L27> [33.33%]>

  <bb 4> [local count: 89469538]:
<L1>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_16(D), 1, 0);
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 89469538]:
<L3>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_16(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 268408613]:
<L27>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 21>; [100.00%]

  <bb 7> [local count: 268435456]:
<L5>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = &ChannelPtr_16(D)->CanIfData;
  _5 = ChannelPtr_16(D)->CanIfDLC;
  Ret_ReqRxBuffer_29 = CanTp_ProcessStartOfReceptionData (ChannelPtr_16(D), _4, _5);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_29
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_29) <default: <L11> [33.33%], case 0: <L6> [33.33%], case 2: <L10> [33.33%]>

  <bb 8> [local count: 89469538]:
<L6>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = ChannelPtr_16(D)->ProcessedLength;
  _7 = ChannelPtr_16(D)->CanIfDLC;
  _8 = (short unsigned int) _7;
  _9 = _6 + _8;
  ChannelPtr_16(D)->ProcessedLength = _9;
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->CanIfDLC = 0;
  # DEBUG BEGIN_STMT
  _10 = &ChannelPtr_16(D)->BlockSize;
  BSCalc_Ok_34 = CanTp_CalculateBlockSize (ChannelPtr_16(D), _10);
  # DEBUG BSCalc_Ok => BSCalc_Ok_34
  # DEBUG BEGIN_STMT
  if (BSCalc_Ok_34 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 44734769]:
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_16(D), 4);
  goto <bb 13>; [100.00%]

  <bb 10> [local count: 44734769]:
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_16(D));
  goto <bb 13>; [100.00%]

  <bb 11> [local count: 89469538]:
<L10>:
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_16(D));
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 89469538]:
<L11>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_16(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 13> [local count: 268408613]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 21>; [100.00%]

  <bb 14> [local count: 268435456]:
<L13>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_19 = CanTp_RxProcessData (ChannelPtr_16(D), 0B, 0);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_19
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_19) <default: <L19> [33.33%], case 0: <L14> [33.33%], case 2: <L18> [33.33%]>

  <bb 15> [local count: 89469538]:
<L14>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ContinueWithNextBlock_22 = CanTp_VerifyBlockSize (ChannelPtr_16(D));
  # DEBUG ContinueWithNextBlock => ContinueWithNextBlock_22
  # DEBUG BEGIN_STMT
  if (ContinueWithNextBlock_22 != 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 16> [local count: 44734769]:
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_16(D), 4);
  goto <bb 20>; [100.00%]

  <bb 17> [local count: 44734769]:
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_16(D));
  goto <bb 20>; [100.00%]

  <bb 18> [local count: 89469538]:
<L18>:
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_16(D));
  # DEBUG BEGIN_STMT
  goto <bb 20>; [100.00%]

  <bb 19> [local count: 89469538]:
<L19>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_16(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 20> [local count: 268408613]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 21> [local count: 1073661295]:
<L28>:
  return;

}



;; Function CanTp_TxStateHandling.part.0 (CanTp_TxStateHandling.part.0, funcdef_no=61, decl_uid=10229, cgraph_uid=73, symbol_order=78)

CanTp_TxStateHandling.part.0 (struct CanTp_ChannelType * ChannelPtr, boolean CFBufferRequested)
{
  CanTp_ChType Rx_ChannelID;
  boolean Ret_Postponed;
  struct CanTp_ChannelType * Rx_ChannelPtr;
  const PduIdType NSduId;
  CanTp_ChStateType ChanState;
  struct CanTp_ChannelType * ChPtr;
  CanTp_ChStateType NextState;
  CanTp_ChStateType CurrentState;
  CanTp_ChStateType NextState;
  CanTp_ChStateType CurrentState;
  <unnamed type> _4;
  <unnamed type> RetVal_DataReq.192_5;
  const struct CanTp_ConfigType * CanTp_CfgPtr.193_6;
  long unsigned int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  const struct CanTp_TxNSduConfigType * _12;
  int _14;
  unsigned char _16;
  unsigned int _17;
  unsigned int _18;
  sizetype _19;
  const struct CanTp_TxNSduConfigType * _20;
  unsigned char _21;
  unsigned char _22;
  int _24;
  unsigned char _25;
  unsigned char _26;
  long unsigned int _27;
  long unsigned int _28;
  const struct CanTp_ConfigType * CanTp_CfgPtr.199_31;
  long unsigned int _32;
  sizetype _33;
  const struct CanTp_TxNSduConfigType * _34;
  short unsigned int _35;
  long unsigned int _36;

  <bb 16> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
<L0>:
  # DEBUG BEGIN_STMT
  NSduId_2 = ChannelPtr_1(D)->NSduId;
  # DEBUG NSduId => NSduId_2
  # DEBUG BEGIN_STMT
  if (CFBufferRequested_3(D) != 1)
    goto <bb 3>; [48.88%]
  else
    goto <bb 4>; [51.12%]

  <bb 3> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  _4 = CanTp_RequestTxFrameData (ChannelPtr_1(D));
  RetVal_DataReq = _4;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RetVal_DataReq.192_5 = RetVal_DataReq;
  switch (RetVal_DataReq.192_5) <default: <L2> [33.33%], case 0: <L1> [33.33%], case 2: <L3> [33.33%]>

  <bb 5> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.193_6 = CanTp_CfgPtr;
  _7 = CanTp_CfgPtr.193_6->TxNSduConfigPtr;
  _8 = ChannelPtr_1(D)->NSduId;
  _9 = (unsigned int) _8;
  _10 = _9 * 24;
  _11 = _7 + _10;
  _12 = CanTp_CfgPtr.193_6 + _11;
  Rx_ChannelID_13 = _12->Rx_Channel;
  # DEBUG Rx_ChannelID => Rx_ChannelID_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 0
  # DEBUG BEGIN_STMT
  if (Rx_ChannelID_13 != 255)
    goto <bb 6>; [66.00%]
  else
    goto <bb 8>; [34.00%]

  <bb 6> [local count: 236199579]:
  # DEBUG BEGIN_STMT
  _14 = (int) Rx_ChannelID_13;
  # DEBUG D#10 => &CanTp_Channel[_14]
  # DEBUG ChPtr => D#10
  # DEBUG BEGIN_STMT
  ChanState_15 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_14].State;
  # DEBUG ChanState => ChanState_15
  # DEBUG BEGIN_STMT
  _16 = ChanState_15 & 152;
  if (_16 == 16)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 80307857]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 1

  <bb 8> [local count: 357878150]:
  # Ret_Postponed_23 = PHI <0(5), 0(6), 1(7)>
  # DEBUG Ret_Postponed => Ret_Postponed_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = (unsigned int) NSduId_2;
  _18 = _17 * 24;
  _19 = _7 + _18;
  _20 = CanTp_CfgPtr.193_6 + _19;
  _21 = _20->PaddingActivation;
  _22 = _20->CanIdType;
  CanTp_PreparePadding (ChannelPtr_1(D), _21, _22, 0B);
  # DEBUG BEGIN_STMT
  if (Ret_Postponed_23 == 1)
    goto <bb 9>; [51.12%]
  else
    goto <bb 13>; [48.88%]

  <bb 9> [local count: 182947310]:
  # DEBUG BEGIN_STMT
  _24 = (int) Rx_ChannelID_13;
  # DEBUG D#11 => &CanTp_Channel[_24]
  # DEBUG Rx_ChannelPtr => D#11
  # DEBUG BEGIN_STMT
  _25 = ChannelPtr_1(D)->State;
  _26 = _25 + 160;
  if (_26 <= 1)
    goto <bb 10>; [41.00%]
  else
    goto <bb 12>; [59.00%]

  <bb 10> [local count: 75008397]:
  # DEBUG BEGIN_STMT
  _27 = ChannelPtr_1(D)->Ticks;
  _28 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_24].Ticks;
  if (_27 < _28)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [local count: 37504199]:
  # DEBUG BEGIN_STMT
  ChannelPtr_1(D)->Ticks = _28;

  <bb 12> [local count: 182947311]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG CurrentState => _25
  # DEBUG BEGIN_STMT
  NextState_29 = _25 & 103;
  # DEBUG NextState => NextState_29
  # DEBUG BEGIN_STMT
  NextState_30 = NextState_29 | 136;
  # DEBUG NextState => NextState_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_1(D)->State = NextState_30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 15>; [100.00%]

  <bb 13> [local count: 174930840]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.199_31 = CanTp_CfgPtr;
  _32 = CanTp_CfgPtr.199_31->TxNSduConfigPtr;
  _33 = _18 + _32;
  _34 = CanTp_CfgPtr.199_31 + _33;
  _35 = _34->N_As;
  _36 = (long unsigned int) _35;
  ChannelPtr_1(D)->Ticks = _36;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CurrentState_37 = ChannelPtr_1(D)->State;
  # DEBUG CurrentState => CurrentState_37
  # DEBUG BEGIN_STMT
  NextState_38 = CurrentState_37 & 103;
  # DEBUG NextState => NextState_38
  # DEBUG BEGIN_STMT
  NextState_39 = NextState_38 | 16;
  # DEBUG NextState => NextState_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_1(D)->State = NextState_39;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TransmitFrame (ChannelPtr_1(D), 0B);
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 357878150]:
<L2>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_1(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073634452]:
<L3>:
  return;

}



;; Function CanTp_STminTimeoutHandling (CanTp_STminTimeoutHandling, funcdef_no=36, decl_uid=9121, cgraph_uid=37, symbol_order=37)

Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 14
Removing basic block 15
Removing basic block 25
Removing basic block 26
Removing basic block 27
Removing basic block 28
Removing basic block 29
Removing basic block 31
Removing basic block 32

Symbols to be put in SSA form
{ D.10115 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 33
Number of blocks to update: 20 ( 61%)


Merging blocks 3 and 8
Removing basic block 5
Removing basic block 7
Removing basic block 17
Removing basic block 18
Merging blocks 19 and 22
Removing basic block 20
Removing basic block 21
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 7 }
;; 3 succs { 6 4 5 }
;; 4 succs { 6 }
;; 5 succs { }
;; 6 succs { 12 }
;; 7 succs { 8 12 }
;; 8 succs { 11 9 10 }
;; 9 succs { 11 }
;; 10 succs { }
;; 11 succs { 12 }
;; 12 succs { 1 }
CanTp_STminTimeoutHandling (struct CanTp_ChannelType * ChannelPtr)
{
  <unnamed type> D.10444;
  <unnamed type> D.10431;
  unsigned char _1;
  unsigned char _8;
  <unnamed type> _9;
  unsigned char _13;
  <unnamed type> _14;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_4(D)->State;
  if (_1 == 106)
    goto <bb 3>; [20.24%]
  else
    goto <bb 7>; [79.76%]

  <bb 3> [local count: 217325345]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_4(D)->State = 98;
  # DEBUG BEGIN_STMT
  # DEBUG ChannelPtr => ChannelPtr_4(D)
  # DEBUG CFBufferRequested => 1
  # DEBUG INLINE_ENTRY CanTp_TxStateHandling
  # DEBUG BEGIN_STMT
  # DEBUG Rx_ChannelID => 255
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = ChannelPtr_4(D)->State;
  switch (_8) <default: <L11> [33.33%], case 96 ... 98: <L6> [33.33%], case 122: <L7> [0.00%]>

  <bb 4> [local count: 72434538]:
<L6>:
  CanTp_TxStateHandling.part.0 (ChannelPtr_4(D), 1);
  goto <bb 6>; [100.00%]

  <bb 5> [count: 0]:
<L7>:
  # DEBUG BEGIN_STMT
  ChannelPtr_4(D)->State = 98;
  # DEBUG BEGIN_STMT
  _9 = _12(D);
  __builtin_unreachable ();

  <bb 6> [local count: 144869075]:
<L11>:
  goto <bb 12>; [100.00%]

  <bb 7> [local count: 856416480]:
  # DEBUG BEGIN_STMT
  if (_1 == 122)
    goto <bb 8>; [20.24%]
  else
    goto <bb 12>; [79.76%]

  <bb 8> [local count: 173338695]:
  # DEBUG ChannelPtr => ChannelPtr_4(D)
  # DEBUG INLINE_ENTRY CanTp_STminTimeoutHandling
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_4(D)->State = 98;
  # DEBUG BEGIN_STMT
  # DEBUG ChannelPtr => ChannelPtr_4(D)
  # DEBUG CFBufferRequested => 0
  # DEBUG INLINE_ENTRY CanTp_TxStateHandling
  # DEBUG BEGIN_STMT
  # DEBUG Rx_ChannelID => 255
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _13 = ChannelPtr_4(D)->State;
  switch (_13) <default: <L17> [33.33%], case 96 ... 98: <L12> [33.33%], case 122: <L13> [0.00%]>

  <bb 9> [local count: 57773787]:
<L12>:
  CanTp_TxStateHandling.part.0 (ChannelPtr_4(D), 0);
  goto <bb 11>; [100.00%]

  <bb 10> [count: 0]:
<L13>:
  # DEBUG BEGIN_STMT
  ChannelPtr_4(D)->State = 98;
  # DEBUG BEGIN_STMT
  _14 = _17(D);
  __builtin_unreachable ();

  <bb 11> [local count: 115547574]:
<L17>:

  <bb 12> [local count: 943494433]:
  # DEBUG ChannelPtr => NULL
  # DEBUG CFBufferRequested => NULL
  # DEBUG ChannelPtr => NULL
  # DEBUG ChannelPtr => NULL
  # DEBUG CFBufferRequested => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanTp_PostSTminCallback (CanTp_PostSTminCallback, funcdef_no=35, decl_uid=5951, cgraph_uid=36, symbol_order=36)

CanTp_PostSTminCallback (struct CanTp_ChannelType * ChannelPtr)
{
  unsigned char _1;
  unsigned char _2;
  unsigned char _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG PendingSTminTimeout => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_7(D)->PostFlag;
  _4 = _1 & 4;
  if (_4 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG PendingSTminTimeout => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = _1 & 251;
  ChannelPtr_7(D)->PostFlag = _2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PendingSTminTimeout => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_7(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_STminTimeoutHandling (ChannelPtr_7(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_7(D)->ChannelLockFlag = 0;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanTp_ProcessRxFrame (CanTp_ProcessRxFrame, funcdef_no=22, decl_uid=8908, cgraph_uid=23, symbol_order=23)

Removing basic block 137
Removing basic block 138
Removing basic block 139
Removing basic block 140
Removing basic block 141
Removing basic block 143

Symbols to be put in SSA form
{ D.10113 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 144
Number of blocks to update: 137 ( 95%)


Merging blocks 4 and 14
Merging blocks 6 and 43
Removing basic block 9
Removing basic block 11
Removing basic block 13
Removing basic block 42
Removing basic block 70
Merging blocks 79 and 83
Removing basic block 80
Removing basic block 82
Removing basic block 94
Removing basic block 111
Removing basic block 112
Merging blocks 127 and 134
Removing basic block 133
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122
;; 2 succs { 122 3 32 60 98 }
;; 3 succs { 4 122 }
;; 4 succs { 5 6 }
;; 5 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 8 16 }
;; 8 succs { 23 9 }
;; 9 succs { 10 23 }
;; 10 succs { 11 13 }
;; 11 succs { 23 12 }
;; 12 succs { 23 }
;; 13 succs { 14 15 }
;; 14 succs { 23 15 }
;; 15 succs { 23 }
;; 16 succs { 17 23 }
;; 17 succs { 23 18 }
;; 18 succs { 19 21 }
;; 19 succs { 23 20 }
;; 20 succs { 23 }
;; 21 succs { 23 22 }
;; 22 succs { 23 }
;; 23 succs { 24 30 }
;; 24 succs { 30 25 }
;; 25 succs { 26 31 }
;; 26 succs { 29 27 28 }
;; 27 succs { 31 }
;; 28 succs { 31 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 122 }
;; 32 succs { 33 122 }
;; 33 succs { 34 35 }
;; 34 succs { 36 35 }
;; 35 succs { 36 }
;; 36 succs { 38 37 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 41 40 }
;; 40 succs { 41 }
;; 41 succs { 56 42 }
;; 42 succs { 47 43 }
;; 43 succs { 44 46 }
;; 44 succs { 45 47 }
;; 45 succs { 47 }
;; 46 succs { 47 }
;; 47 succs { 56 48 }
;; 48 succs { 49 56 }
;; 49 succs { 50 59 }
;; 50 succs { 55 51 54 }
;; 51 succs { 52 53 }
;; 52 succs { 59 }
;; 53 succs { 59 }
;; 54 succs { 59 }
;; 55 succs { 59 }
;; 56 succs { 57 58 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 122 }
;; 60 succs { 61 122 }
;; 61 succs { 62 122 }
;; 62 succs { 64 63 }
;; 63 succs { 64 97 }
;; 64 succs { 65 66 }
;; 65 succs { 67 66 }
;; 66 succs { 67 }
;; 67 succs { 68 69 }
;; 68 succs { 97 }
;; 69 succs { 70 81 }
;; 70 succs { 71 72 }
;; 71 succs { 73 72 }
;; 72 succs { 73 }
;; 73 succs { 79 74 }
;; 74 succs { 79 75 }
;; 75 succs { 76 77 }
;; 76 succs { 78 }
;; 77 succs { 78 }
;; 78 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 97 }
;; 81 succs { 82 95 }
;; 82 succs { 83 84 }
;; 83 succs { 85 84 }
;; 84 succs { 85 }
;; 85 succs { 86 94 }
;; 86 succs { 87 88 }
;; 87 succs { 89 }
;; 88 succs { 89 }
;; 89 succs { 90 93 }
;; 90 succs { 91 92 }
;; 91 succs { 96 }
;; 92 succs { 96 }
;; 93 succs { 96 }
;; 94 succs { 96 }
;; 95 succs { 96 }
;; 96 succs { 97 }
;; 97 succs { 122 }
;; 98 succs { 99 122 }
;; 99 succs { 100 101 }
;; 100 succs { 102 101 }
;; 101 succs { 102 }
;; 102 succs { 121 103 }
;; 103 succs { 121 104 }
;; 104 succs { 121 105 }
;; 105 succs { 121 106 }
;; 106 succs { 120 107 118 119 }
;; 107 succs { 109 108 }
;; 108 succs { 109 110 }
;; 109 succs { 110 }
;; 110 succs { 111 112 }
;; 111 succs { 112 }
;; 112 succs { 113 117 }
;; 113 succs { 116 114 115 }
;; 114 succs { 116 }
;; 115 succs { }
;; 116 succs { 121 }
;; 117 succs { 121 }
;; 118 succs { 121 }
;; 119 succs { 121 }
;; 120 succs { 121 }
;; 121 succs { 122 }
;; 122 succs { 1 }
CanTp_ProcessRxFrame (struct CanTp_ChannelType * ChannelPtr, const struct PduInfoType * CanTpRxPduPtr, PduIdType NSduId, uint8 FrameType)
{
  <unnamed type> D.10536;
  uint8 DataIndex;
  const uint8 * const CanDataPtr;
  const uint8 StartPosition_FC_N_PCI;
  const struct CanTp_TxNSduConfigType * const TxNSduCfgPtr;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  const uint8 DataLen;
  BufReq_ReturnType Ret_CopyRxData;
  const uint8 StartPosition_CF_N_PCI;
  uint8 * const NSduDataPtr;
  const uint8 DataLength;
  boolean ContinueWithNextBlock;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  const uint8 StartPosition_CF_N_PCI;
  const uint8 MinReqSduLength;
  BufReq_ReturnType Ret_CopyRxData;
  uint8 * const NSduDataPtr;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  const uint8 StartPosition_CF_N_PCI;
  const PduLengthType Delta;
  const uint8 DataLen;
  const uint8 SingleFrameLength;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  boolean ValidFirstFrame;
  uint16 MessageLength;
  uint8 FirstFrame_NPCI_Size;
  const uint8 StartPosition_FF_N_PCI;
  uint8 NPciSize_SF;
  uint8 MaxUnSegMsgLength;
  uint32 MessageLength_BigData;
  const uint8 StartPosition_FF_N_PCI_Length;
  Std_ReturnType Ret;
  const uint8 DataLength_FF;
  uint8 * const NSduDataPtr;
  BufReq_ReturnType Ret_ReqRxBuffer;
  Std_ReturnType BSCalc_Ok;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  const uint8 StartPosition_SF_N_PCI;
  uint8 DataLength;
  uint8 NPciHeaderSize;
  boolean ValidFrameLength;
  Std_ReturnType Ret;
  uint8 * const NSduDataPtr;
  BufReq_ReturnType Ret_ReqRxBuffer;
  unsigned char _1;
  unsigned char CanTp_NonIdleChannelCounter.129_2;
  unsigned char _3;
  unsigned char _4;
  unsigned char CanTp_NonIdleChannelCounter.130_5;
  unsigned char _6;
  short unsigned int _7;
  unsigned char _8;
  short unsigned int _9;
  unsigned char _30;
  const struct CanTp_ConfigType * CanTp_CfgPtr.131_31;
  long unsigned int _32;
  short unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  sizetype _36;
  unsigned char _38;
  int iftmp.133_39;
  short unsigned int _41;
  uint8 * _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  unsigned char _47;
  unsigned int _48;
  unsigned int _49;
  unsigned int _50;
  unsigned int _51;
  unsigned int _52;
  unsigned int _53;
  uint8 * _54;
  sizetype _55;
  uint8 * _56;
  unsigned char _57;
  unsigned char _58;
  sizetype _59;
  uint8 * _60;
  unsigned int _62;
  unsigned int _63;
  unsigned int _64;
  unsigned int _65;
  unsigned int _66;
  unsigned int _67;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  uint8 * _72;
  int _74;
  int _75;
  sizetype _76;
  short unsigned int _79;
  short unsigned int _80;
  long unsigned int _81;
  uint8[64] * _84;
  long unsigned int _85;
  unsigned char _86;
  unsigned char _87;
  const struct CanTp_ConfigType * CanTp_CfgPtr.136_88;
  long unsigned int _89;
  short unsigned int _90;
  unsigned int _91;
  unsigned int _92;
  sizetype _93;
  unsigned char _95;
  int iftmp.138_96;
  short unsigned int _98;
  unsigned char _99;
  unsigned char _101;
  int iftmp.139_102;
  unsigned char _103;
  uint8 * _105;
  sizetype _106;
  uint8 * _107;
  unsigned char _108;
  unsigned char _109;
  sizetype _112;
  uint8 * _113;
  unsigned char _114;
  short unsigned int _115;
  unsigned char _117;
  sizetype _119;
  uint8 * _120;
  unsigned char _121;
  long unsigned int _122;
  long unsigned int _123;
  sizetype _124;
  uint8 * _125;
  unsigned char _126;
  long unsigned int _127;
  long unsigned int _128;
  sizetype _130;
  uint8 * _131;
  unsigned char _132;
  long unsigned int _133;
  long unsigned int _134;
  sizetype _136;
  uint8 * _137;
  unsigned char _138;
  long unsigned int _139;
  long unsigned int _141;
  short unsigned int _142;
  short unsigned int _143;
  short unsigned int _144;
  unsigned char _146;
  int _149;
  int _150;
  sizetype _151;
  unsigned char _153;
  short unsigned int _154;
  long unsigned int _155;
  short unsigned int _156;
  long unsigned int _157;
  long unsigned int _158;
  unsigned char _159;
  unsigned char _161;
  unsigned char _162;
  short unsigned int _164;
  uint8 * _165;
  uint8[64] * _167;
  long unsigned int _168;
  unsigned char _169;
  unsigned char _170;
  unsigned char _171;
  unsigned char _172;
  const struct CanTp_ConfigType * CanTp_CfgPtr.140_173;
  long unsigned int _174;
  short unsigned int _175;
  unsigned int _176;
  unsigned int _177;
  sizetype _178;
  unsigned char _180;
  int iftmp.142_181;
  unsigned char _183;
  uint8 * _184;
  sizetype _185;
  uint8 * _186;
  unsigned char _187;
  unsigned char _188;
  short unsigned int _189;
  short unsigned int _190;
  unsigned char _193;
  short unsigned int _195;
  unsigned char _196;
  unsigned char _197;
  unsigned char _198;
  const struct CanTp_ConfigType * CanTp_CfgPtr.143_199;
  long unsigned int _200;
  short unsigned int _201;
  unsigned int _202;
  unsigned int _203;
  sizetype _204;
  unsigned char _206;
  int iftmp.145_207;
  unsigned char _209;
  short unsigned int _211;
  short unsigned int _212;
  unsigned char _213;
  unsigned char _214;
  unsigned char _215;
  uint8 * _216;
  sizetype _217;
  sizetype _218;
  unsigned char _221;
  unsigned char _222;
  const struct CanTp_ConfigType * CanTp_CfgPtr.146_223;
  long unsigned int _224;
  short unsigned int _225;
  unsigned int _226;
  unsigned int _227;
  sizetype _228;
  short unsigned int _231;
  short unsigned int _232;
  unsigned char _233;
  int iftmp.148_234;
  uint8 * _236;
  sizetype _237;
  sizetype _238;
  unsigned char _240;
  unsigned char _242;
  unsigned char _243;
  unsigned char _244;
  short unsigned int _246;
  short unsigned int _247;
  short unsigned int _248;
  unsigned char _249;
  unsigned char _250;
  unsigned char _251;
  unsigned char _252;
  const struct CanTp_ConfigType * CanTp_CfgPtr.149_254;
  long unsigned int _255;
  short unsigned int _256;
  unsigned int _257;
  unsigned int _258;
  sizetype _259;
  const struct CanTp_RxNSduConfigType * _260;
  short unsigned int _261;
  long unsigned int _262;
  short unsigned int _263;
  long unsigned int _264;
  long unsigned int _265;
  unsigned char _266;
  const struct CanTp_ConfigType * CanTp_CfgPtr.155_267;
  long unsigned int _268;
  short unsigned int _269;
  unsigned int _270;
  unsigned int _271;
  sizetype _272;
  const struct CanTp_RxNSduConfigType * _273;
  short unsigned int _274;
  long unsigned int _275;
  const struct CanTp_ConfigType * CanTp_CfgPtr.157_276;
  long unsigned int _277;
  short unsigned int _278;
  unsigned int _279;
  unsigned int _280;
  sizetype _281;
  unsigned char _283;
  int iftmp.159_284;
  unsigned char _286;
  unsigned char _287;
  unsigned char _288;
  short unsigned int _289;
  short unsigned int _290;
  sizetype _292;
  const uint8 * _293;
  unsigned char _294;
  sizetype _296;
  const uint8 * _297;
  unsigned char _298;
  sizetype _300;
  const uint8 * _301;
  unsigned char _302;
  unsigned char _303;
  unsigned char _304;
  unsigned char _305;
  unsigned char _306;
  short unsigned int _307;
  long unsigned int _308;
  unsigned char _309;
  unsigned char _310;
  short unsigned int _311;
  long unsigned int _312;
  unsigned char _313;
  <unnamed type> _314;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  switch (FrameType_11(D)) <default: <L16> [20.00%], case 0: <L0> [20.00%], case 16: <L3> [20.00%], case 32: <L6> [20.00%], case 48: <L11> [20.00%]>

  <bb 3> [local count: 214748365]:
<L0>:
  # DEBUG BEGIN_STMT
  CanTp_RxChannelCleanup (ChannelPtr_13(D));
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_13(D)->State;
  if (_1 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 122>; [67.00%]

  <bb 4> [local count: 70866960]:
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->NSduId = NSduId_14(D);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.129_2 = CanTp_NonIdleChannelCounter;
  _3 = CanTp_NonIdleChannelCounter.129_2 + 1;
  CanTp_NonIdleChannelCounter = _3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG CanTpRxPduPtr => CanTpRxPduPtr_15(D)
  # DEBUG ChannelPtr => ChannelPtr_13(D)
  # DEBUG INLINE_ENTRY CanTp_ProcessReceivedSF
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.131_31 = CanTp_CfgPtr;
  _32 = CanTp_CfgPtr.131_31->RxNSduConfigPtr;
  _33 = ChannelPtr_13(D)->NSduId;
  _34 = (unsigned int) _33;
  _35 = _34 * 26;
  _36 = _32 + _35;
  RxNSduCfgPtr_37 = CanTp_CfgPtr.131_31 + _36;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_37
  # DEBUG BEGIN_STMT
  _38 = RxNSduCfgPtr_37->AddressingFormat;
  if (_38 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 35433480]:
  if (_38 != 3)
    goto <bb 7>; [66.00%]
  else
    goto <bb 6>; [34.00%]

  <bb 6> [local count: 47480863]:

  <bb 7> [local count: 70866960]:
  # iftmp.133_39 = PHI <1(5), 0(6)>
  StartPosition_SF_N_PCI_40 = (const uint8) iftmp.133_39;
  # DEBUG StartPosition_SF_N_PCI => StartPosition_SF_N_PCI_40
  # DEBUG BEGIN_STMT
  # DEBUG DataLength => 0
  # DEBUG BEGIN_STMT
  # DEBUG NPciHeaderSize => 0
  # DEBUG BEGIN_STMT
  # DEBUG ValidFrameLength => 0
  # DEBUG BEGIN_STMT
  _41 = CanTpRxPduPtr_15(D)->SduLength;
  if (_41 <= 8)
    goto <bb 8>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 8> [local count: 35433480]:
  # DEBUG BEGIN_STMT
  _42 = CanTpRxPduPtr_15(D)->SduDataPtr;
  _43 = (sizetype) iftmp.133_39;
  _44 = _42 + _43;
  _45 = *_44;
  DataLength_46 = _45 & 15;
  # DEBUG DataLength => DataLength_46
  # DEBUG BEGIN_STMT
  # DEBUG NPciHeaderSize => 1
  # DEBUG BEGIN_STMT
  if (DataLength_46 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 17716740]:
  # DEBUG BEGIN_STMT
  _47 = _45 & 8;
  if (_47 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 10> [local count: 8858370]:
  # DEBUG BEGIN_STMT
  if (StartPosition_SF_N_PCI_40 == 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 11> [local count: 4429185]:
  # DEBUG BEGIN_STMT
  _48 = (unsigned int) DataLength_46;
  _49 = (unsigned int) _41;
  _50 = _49 + 4294967295;
  if (_48 <= _50)
    goto <bb 23>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 12> [local count: 2214593]:
  # DEBUG BEGIN_STMT
  # DEBUG ValidFrameLength => 0
  goto <bb 23>; [100.00%]

  <bb 13> [local count: 4429185]:
  # DEBUG BEGIN_STMT
  if (_41 > 2)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [local count: 2214593]:
  _51 = (unsigned int) DataLength_46;
  _52 = (unsigned int) _41;
  _53 = _52 + 4294967294;
  if (_51 <= _53)
    goto <bb 23>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 3321889]:
  # DEBUG BEGIN_STMT
  # DEBUG ValidFrameLength => 0
  goto <bb 23>; [100.00%]

  <bb 16> [local count: 35433480]:
  # DEBUG BEGIN_STMT
  _54 = CanTpRxPduPtr_15(D)->SduDataPtr;
  _55 = (sizetype) iftmp.133_39;
  _56 = _54 + _55;
  _57 = *_56;
  _58 = _57 & 15;
  if (_58 == 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 17> [local count: 17716740]:
  # DEBUG BEGIN_STMT
  _59 = _55 + 1;
  _60 = _54 + _59;
  DataLength_61 = *_60;
  # DEBUG DataLength => DataLength_61
  # DEBUG BEGIN_STMT
  # DEBUG NPciHeaderSize => 2
  # DEBUG BEGIN_STMT
  if (DataLength_61 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 18> [local count: 8858370]:
  # DEBUG BEGIN_STMT
  if (StartPosition_SF_N_PCI_40 == 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 19> [local count: 4429185]:
  # DEBUG BEGIN_STMT
  _62 = (unsigned int) DataLength_61;
  _63 = (unsigned int) _41;
  _64 = _63 + 4294967294;
  if (_62 <= _64)
    goto <bb 23>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 20> [local count: 2214593]:
  # DEBUG BEGIN_STMT
  # DEBUG ValidFrameLength => 0
  goto <bb 23>; [100.00%]

  <bb 21> [local count: 4429185]:
  # DEBUG BEGIN_STMT
  _65 = (unsigned int) DataLength_61;
  _66 = (unsigned int) _41;
  _67 = _66 + 4294967293;
  if (_65 <= _67)
    goto <bb 23>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 22> [local count: 2214593]:
  # DEBUG BEGIN_STMT
  # DEBUG ValidFrameLength => 0

  <bb 23> [local count: 70866960]:
  # DataLength_78 = PHI <DataLength_46(8), DataLength_46(9), DataLength_46(11), DataLength_46(12), DataLength_46(14), DataLength_46(15), 0(16), DataLength_61(17), DataLength_61(19), DataLength_61(20), DataLength_61(21), DataLength_61(22)>
  # NPciHeaderSize_73 = PHI <1(8), 1(9), 1(11), 1(12), 1(14), 1(15), 0(16), 2(17), 2(19), 2(20), 2(21), 2(22)>
  # ValidFrameLength_68 = PHI <0(8), 0(9), 1(11), 0(12), 1(14), 0(15), 0(16), 0(17), 1(19), 0(20), 1(21), 0(22)>
  # DEBUG ValidFrameLength => ValidFrameLength_68
  # DEBUG NPciHeaderSize => NPciHeaderSize_73
  # DEBUG DataLength => DataLength_78
  # DEBUG BEGIN_STMT
  if (ValidFrameLength_68 != 0)
    goto <bb 24>; [67.00%]
  else
    goto <bb 30>; [33.00%]

  <bb 24> [local count: 47480863]:
  # DEBUG BEGIN_STMT
  _69 = RxNSduCfgPtr_37->PaddingActivation;
  _70 = RxNSduCfgPtr_37->NPduLength;
  _71 = CanTp_CheckNPduLength (_41, _69, _70);
  if (_71 == 0)
    goto <bb 30>; [67.00%]
  else
    goto <bb 25>; [33.00%]

  <bb 25> [local count: 15668685]:
  # DEBUG BEGIN_STMT
  # DEBUG ValidFrameLength => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _72 = CanTpRxPduPtr_15(D)->SduDataPtr;
  _74 = (int) NPciHeaderSize_73;
  _75 = iftmp.133_39 + _74;
  _76 = (sizetype) _75;
  NSduDataPtr_77 = _72 + _76;
  # DEBUG NSduDataPtr => NSduDataPtr_77
  # DEBUG BEGIN_STMT
  _79 = (short unsigned int) DataLength_78;
  ChannelPtr_13(D)->TotalLength = _79;
  # DEBUG BEGIN_STMT
  _80 = RxNSduCfgPtr_37->N_Br;
  _81 = (long unsigned int) _80;
  ChannelPtr_13(D)->Ticks = _81;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 64;
  # DEBUG BEGIN_STMT
  Ret_82 = CanTp_ProcessStartOfReception (ChannelPtr_13(D));
  # DEBUG Ret => Ret_82
  # DEBUG BEGIN_STMT
  if (Ret_82 == 0)
    goto <bb 26>; [33.00%]
  else
    goto <bb 31>; [67.00%]

  <bb 26> [local count: 5170666]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_83 = CanTp_ProcessStartOfReceptionData (ChannelPtr_13(D), NSduDataPtr_77, DataLength_78);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_83
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_83) <default: <L19> [33.33%], case 0: <L17> [33.33%], case 2: <L18> [33.33%]>

  <bb 27> [local count: 1723383]:
<L17>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 0);
  # DEBUG BEGIN_STMT
  goto <bb 31>; [100.00%]

  <bb 28> [local count: 1723383]:
<L18>:
  # DEBUG BEGIN_STMT
  _84 = &ChannelPtr_13(D)->CanIfData;
  _85 = (long unsigned int) DataLength_78;
  TS_MemCpy32 (_84, NSduDataPtr_77, _85);
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->CanIfDLC = DataLength_78;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _86 = ChannelPtr_13(D)->ConnectionFlags;
  _87 = _86 | 2;
  ChannelPtr_13(D)->ConnectionFlags = _87;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 31>; [100.00%]

  <bb 29> [local count: 1723383]:
<L19>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 1);
  # DEBUG BEGIN_STMT
  goto <bb 31>; [100.00%]

  <bb 30> [local count: 55198275]:
  # DEBUG ValidFrameLength => NULL
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 0, 1);
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 31> [local count: 70866443]:
  goto <bb 122>; [100.00%]

  <bb 32> [local count: 214748365]:
<L3>:
  # DEBUG BEGIN_STMT
  CanTp_RxChannelCleanup (ChannelPtr_13(D));
  # DEBUG BEGIN_STMT
  _4 = ChannelPtr_13(D)->State;
  if (_4 == 0)
    goto <bb 33>; [33.00%]
  else
    goto <bb 122>; [67.00%]

  <bb 33> [local count: 70866960]:
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->NSduId = NSduId_14(D);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.130_5 = CanTp_NonIdleChannelCounter;
  _6 = CanTp_NonIdleChannelCounter.130_5 + 1;
  CanTp_NonIdleChannelCounter = _6;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG CanTpRxPduPtr => CanTpRxPduPtr_15(D)
  # DEBUG ChannelPtr => ChannelPtr_13(D)
  # DEBUG INLINE_ENTRY CanTp_ProcessReceivedFF
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.136_88 = CanTp_CfgPtr;
  _89 = CanTp_CfgPtr.136_88->RxNSduConfigPtr;
  _90 = ChannelPtr_13(D)->NSduId;
  _91 = (unsigned int) _90;
  _92 = _91 * 26;
  _93 = _89 + _92;
  RxNSduCfgPtr_94 = CanTp_CfgPtr.136_88 + _93;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_94
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG FirstFrame_NPCI_Size => 2
  # DEBUG BEGIN_STMT
  _95 = RxNSduCfgPtr_94->AddressingFormat;
  if (_95 != 0)
    goto <bb 34>; [50.00%]
  else
    goto <bb 35>; [50.00%]

  <bb 34> [local count: 35433480]:
  if (_95 != 3)
    goto <bb 36>; [66.00%]
  else
    goto <bb 35>; [34.00%]

  <bb 35> [local count: 47480863]:

  <bb 36> [local count: 70866960]:
  # iftmp.138_96 = PHI <1(34), 0(35)>
  StartPosition_FF_N_PCI_97 = (const uint8) iftmp.138_96;
  # DEBUG StartPosition_FF_N_PCI => StartPosition_FF_N_PCI_97
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _98 = CanTpRxPduPtr_15(D)->SduLength;
  if (_98 > 8)
    goto <bb 38>; [50.00%]
  else
    goto <bb 37>; [50.00%]

  <bb 37> [local count: 35433480]:
  # DEBUG BEGIN_STMT
  # DEBUG NPciSize_SF => 1

  <bb 38> [local count: 70866960]:
  # NPciSize_SF_100 = PHI <2(36), 1(37)>
  # DEBUG NPciSize_SF => NPciSize_SF_100
  # DEBUG BEGIN_STMT
  _99 = (unsigned char) _98;
  _101 = _99 - NPciSize_SF_100;
  if (_95 != 0)
    goto <bb 39>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 39> [local count: 35433480]:
  if (_95 != 3)
    goto <bb 41>; [66.00%]
  else
    goto <bb 40>; [34.00%]

  <bb 40> [local count: 47480863]:

  <bb 41> [local count: 70866960]:
  # iftmp.139_102 = PHI <1(39), 0(40)>
  _103 = (unsigned char) iftmp.139_102;
  MaxUnSegMsgLength_104 = _101 - _103;
  # DEBUG MaxUnSegMsgLength => MaxUnSegMsgLength_104
  # DEBUG BEGIN_STMT
  _105 = CanTpRxPduPtr_15(D)->SduDataPtr;
  _106 = (sizetype) iftmp.138_96;
  _107 = _105 + _106;
  _108 = *_107;
  _109 = _108 & 15;
  MessageLength_110 = (uint16) _109;
  # DEBUG MessageLength => MessageLength_110
  # DEBUG BEGIN_STMT
  MessageLength_111 = MessageLength_110 << 8;
  # DEBUG MessageLength => MessageLength_111
  # DEBUG BEGIN_STMT
  _112 = _106 + 1;
  _113 = _105 + _112;
  _114 = *_113;
  _115 = (short unsigned int) _114;
  MessageLength_116 = MessageLength_111 | _115;
  # DEBUG MessageLength => MessageLength_116
  # DEBUG BEGIN_STMT
  switch (_98) <default: <L25> [33.00%], case 8: <L20> [67.00%], case 12: <L20> [67.00%], case 16: <L20> [67.00%], case 20: <L20> [67.00%], case 24: <L20> [67.00%], case 32: <L20> [67.00%], case 48: <L20> [67.00%], case 64: <L20> [67.00%]>

  <bb 42> [local count: 47480863]:
<L20>:
  # DEBUG BEGIN_STMT
  _117 = RxNSduCfgPtr_94->Tatype;
  if (_117 != 0)
    goto <bb 47>; [50.00%]
  else
    goto <bb 43>; [50.00%]

  <bb 43> [local count: 23740432]:
  # DEBUG BEGIN_STMT
  if (MessageLength_116 == 0)
    goto <bb 44>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 44> [local count: 11870216]:
  # DEBUG BEGIN_STMT
  # DEBUG MessageLength_BigData => 0
  # DEBUG BEGIN_STMT
  # DEBUG PduLenghTypeMaxMask => 0
  # DEBUG BEGIN_STMT
  # DEBUG PduLenghTypeMax => 65535
  # DEBUG BEGIN_STMT
  StartPosition_FF_N_PCI_Length_118 = StartPosition_FF_N_PCI_97 + 2;
  # DEBUG StartPosition_FF_N_PCI_Length => StartPosition_FF_N_PCI_Length_118
  # DEBUG BEGIN_STMT
  _119 = (sizetype) StartPosition_FF_N_PCI_Length_118;
  _120 = _105 + _119;
  _121 = *_120;
  _122 = (long unsigned int) _121;
  _123 = _122 << 24;
  # DEBUG MessageLength_BigData => _123
  # DEBUG BEGIN_STMT
  _124 = _119 + 1;
  _125 = _105 + _124;
  _126 = *_125;
  _127 = (long unsigned int) _126;
  _128 = _127 << 16;
  MessageLength_BigData_129 = _123 | _128;
  # DEBUG MessageLength_BigData => MessageLength_BigData_129
  # DEBUG BEGIN_STMT
  _130 = _119 + 2;
  _131 = _105 + _130;
  _132 = *_131;
  _133 = (long unsigned int) _132;
  _134 = _133 << 8;
  MessageLength_BigData_135 = MessageLength_BigData_129 | _134;
  # DEBUG MessageLength_BigData => MessageLength_BigData_135
  # DEBUG BEGIN_STMT
  _136 = _119 + 3;
  _137 = _105 + _136;
  _138 = *_137;
  _139 = (long unsigned int) _138;
  MessageLength_BigData_140 = MessageLength_BigData_135 | _139;
  # DEBUG MessageLength_BigData => MessageLength_BigData_140
  # DEBUG BEGIN_STMT
  _141 = MessageLength_BigData_140 + 4294963200;
  if (_141 <= 61439)
    goto <bb 45>; [50.00%]
  else
    goto <bb 47>; [50.00%]

  <bb 45> [local count: 5935108]:
  # DEBUG BEGIN_STMT
  _142 = (short unsigned int) MessageLength_BigData_140;
  ChannelPtr_13(D)->TotalLength = _142;
  # DEBUG BEGIN_STMT
  # DEBUG FirstFrame_NPCI_Size => 6
  # DEBUG BEGIN_STMT
  # DEBUG ValidFirstFrame => 1
  goto <bb 47>; [100.00%]

  <bb 46> [local count: 11870216]:
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->TotalLength = MessageLength_116;
  # DEBUG BEGIN_STMT
  # DEBUG ValidFirstFrame => 1

  <bb 47> [local count: 47480864]:
  # ValidFirstFrame_145 = PHI <0(42), 0(44), 1(45), 1(46)>
  # FirstFrame_NPCI_Size_147 = PHI <2(42), 2(44), 6(45), 2(46)>
  # DEBUG FirstFrame_NPCI_Size => FirstFrame_NPCI_Size_147
  # DEBUG ValidFirstFrame => ValidFirstFrame_145
  # DEBUG BEGIN_STMT
  _143 = ChannelPtr_13(D)->TotalLength;
  _144 = (short unsigned int) MaxUnSegMsgLength_104;
  if (_143 <= _144)
    goto <bb 56>; [50.00%]
  else
    goto <bb 48>; [50.00%]

  <bb 48> [local count: 23740432]:
<L21>:
  # DEBUG FirstFrame_NPCI_Size => FirstFrame_NPCI_Size_147
  # DEBUG ValidFirstFrame => ValidFirstFrame_145
  # DEBUG BEGIN_STMT
  if (ValidFirstFrame_145 != 0)
    goto <bb 49>; [33.00%]
  else
    goto <bb 56>; [67.00%]

  <bb 49> [local count: 7834342]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _146 = _99 - StartPosition_FF_N_PCI_97;
  DataLength_FF_148 = _146 - FirstFrame_NPCI_Size_147;
  # DEBUG DataLength_FF => DataLength_FF_148
  # DEBUG BEGIN_STMT
  _149 = (int) FirstFrame_NPCI_Size_147;
  _150 = iftmp.138_96 + _149;
  _151 = (sizetype) _150;
  NSduDataPtr_152 = _105 + _151;
  # DEBUG NSduDataPtr => NSduDataPtr_152
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->ProcessedLength = 0;
  # DEBUG BEGIN_STMT
  _153 = RxNSduCfgPtr_94->WftMax;
  ChannelPtr_13(D)->WftCounter = _153;
  # DEBUG BEGIN_STMT
  _154 = RxNSduCfgPtr_94->N_Br;
  _155 = (long unsigned int) _154;
  _156 = RxNSduCfgPtr_94->N_Ar;
  _157 = (long unsigned int) _156;
  _158 = _155 + _157;
  ChannelPtr_13(D)->Ticks = _158;
  # DEBUG BEGIN_STMT
  _159 = RxNSduCfgPtr_94->BS;
  ChannelPtr_13(D)->BlockSize = _159;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 65;
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->ReceivedSduLength = _99;
  # DEBUG BEGIN_STMT
  Ret_160 = CanTp_ProcessStartOfReception (ChannelPtr_13(D));
  # DEBUG Ret => Ret_160
  # DEBUG BEGIN_STMT
  if (Ret_160 == 0)
    goto <bb 50>; [33.00%]
  else
    goto <bb 59>; [67.00%]

  <bb 50> [local count: 2585333]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _161 = ChannelPtr_13(D)->ConnectionFlags;
  _162 = _161 | 2;
  ChannelPtr_13(D)->ConnectionFlags = _162;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_163 = CanTp_ProcessStartOfReceptionData (ChannelPtr_13(D), NSduDataPtr_152, DataLength_FF_148);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_163
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_163) <default: <L24> [33.33%], case 0: <L22> [33.33%], case 2: <L23> [33.33%]>

  <bb 51> [local count: 861691]:
<L22>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _164 = (short unsigned int) DataLength_FF_148;
  ChannelPtr_13(D)->ProcessedLength = _164;
  # DEBUG BEGIN_STMT
  _165 = &ChannelPtr_13(D)->BlockSize;
  BSCalc_Ok_166 = CanTp_CalculateBlockSize (ChannelPtr_13(D), _165);
  # DEBUG BSCalc_Ok => BSCalc_Ok_166
  # DEBUG BEGIN_STMT
  if (BSCalc_Ok_166 == 0)
    goto <bb 52>; [50.00%]
  else
    goto <bb 53>; [50.00%]

  <bb 52> [local count: 430846]:
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_13(D), 4);
  goto <bb 59>; [100.00%]

  <bb 53> [local count: 430846]:
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_13(D));
  goto <bb 59>; [100.00%]

  <bb 54> [local count: 861691]:
<L23>:
  # DEBUG BEGIN_STMT
  _167 = &ChannelPtr_13(D)->CanIfData;
  _168 = (long unsigned int) DataLength_FF_148;
  TS_MemCpy32 (_167, NSduDataPtr_152, _168);
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->CanIfDLC = DataLength_FF_148;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _169 = ChannelPtr_13(D)->ConnectionFlags;
  _170 = _169 | 2;
  ChannelPtr_13(D)->ConnectionFlags = _170;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_13(D));
  # DEBUG BEGIN_STMT
  goto <bb 59>; [100.00%]

  <bb 55> [local count: 861691]:
<L24>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 1);
  # DEBUG BEGIN_STMT
  goto <bb 59>; [100.00%]

  <bb 56> [local count: 63032618]:
<L25>:
  # DEBUG FirstFrame_NPCI_Size => NULL
  # DEBUG ValidFirstFrame => NULL
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 0, 1);
  # DEBUG BEGIN_STMT
  _171 = RxNSduCfgPtr_94->Tatype;
  if (_171 == 1)
    goto <bb 57>; [34.00%]
  else
    goto <bb 58>; [66.00%]

  <bb 57> [local count: 21431090]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 144);
  goto <bb 59>; [100.00%]

  <bb 58> [local count: 41601528]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 59> [local count: 70866702]:
  goto <bb 122>; [100.00%]

  <bb 60> [local count: 214748365]:
<L6>:
  # DEBUG BEGIN_STMT
  _7 = ChannelPtr_13(D)->NSduId;
  if (_7 == NSduId_14(D))
    goto <bb 61>; [34.00%]
  else
    goto <bb 122>; [66.00%]

  <bb 61> [local count: 73014444]:
  _8 = ChannelPtr_13(D)->State;
  _30 = _8 & 96;
  if (_30 == 64)
    goto <bb 62>; [20.24%]
  else
    goto <bb 122>; [79.76%]

  <bb 62> [local count: 14778123]:
  # DEBUG BEGIN_STMT
  # DEBUG CanTpRxPduPtr => CanTpRxPduPtr_15(D)
  # DEBUG ChannelPtr => ChannelPtr_13(D)
  # DEBUG INLINE_ENTRY CanTp_ProcessReceivedCF
  # DEBUG BEGIN_STMT
  _172 = ChannelPtr_13(D)->State;
  if (_172 == 194)
    goto <bb 64>; [34.00%]
  else
    goto <bb 63>; [66.00%]

  <bb 63> [local count: 9753561]:
  if (_172 == 84)
    goto <bb 64>; [34.00%]
  else
    goto <bb 97>; [66.00%]

  <bb 64> [local count: 8340773]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.140_173 = CanTp_CfgPtr;
  _174 = CanTp_CfgPtr.140_173->RxNSduConfigPtr;
  _175 = ChannelPtr_13(D)->NSduId;
  _176 = (unsigned int) _175;
  _177 = _176 * 26;
  _178 = _174 + _177;
  RxNSduCfgPtr_179 = CanTp_CfgPtr.140_173 + _178;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_179
  # DEBUG BEGIN_STMT
  _180 = RxNSduCfgPtr_179->AddressingFormat;
  if (_180 != 0)
    goto <bb 65>; [50.00%]
  else
    goto <bb 66>; [50.00%]

  <bb 65> [local count: 4170386]:
  if (_180 != 3)
    goto <bb 67>; [66.00%]
  else
    goto <bb 66>; [34.00%]

  <bb 66> [local count: 5588318]:

  <bb 67> [local count: 8340773]:
  # iftmp.142_181 = PHI <1(65), 0(66)>
  StartPosition_CF_N_PCI_182 = (const uint8) iftmp.142_181;
  # DEBUG StartPosition_CF_N_PCI => StartPosition_CF_N_PCI_182
  # DEBUG BEGIN_STMT
  _183 = ChannelPtr_13(D)->SequenceNumber;
  _184 = CanTpRxPduPtr_15(D)->SduDataPtr;
  _185 = (sizetype) iftmp.142_181;
  _186 = _184 + _185;
  _187 = *_186;
  _188 = _187 & 15;
  if (_183 != _188)
    goto <bb 68>; [48.88%]
  else
    goto <bb 69>; [51.12%]

  <bb 68> [local count: 4076970]:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 5);
  goto <bb 97>; [100.00%]

  <bb 69> [local count: 4263803]:
  # DEBUG BEGIN_STMT
  _189 = ChannelPtr_13(D)->TotalLength;
  _190 = ChannelPtr_13(D)->ProcessedLength;
  Delta_191 = _189 - _190;
  # DEBUG Delta => Delta_191
  # DEBUG BEGIN_STMT
  DataLen_192 = ChannelPtr_13(D)->ReceivedSduLength;
  # DEBUG DataLen => DataLen_192
  # DEBUG BEGIN_STMT
  _193 = DataLen_192 - StartPosition_CF_N_PCI_182;
  SingleFrameLength_194 = _193 + 255;
  # DEBUG SingleFrameLength => SingleFrameLength_194
  # DEBUG BEGIN_STMT
  _195 = (short unsigned int) SingleFrameLength_194;
  if (Delta_191 <= _195)
    goto <bb 70>; [50.00%]
  else
    goto <bb 81>; [50.00%]

  <bb 70> [local count: 2131902]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _196 = ChannelPtr_13(D)->ConnectionFlags;
  _197 = _196 | 4;
  ChannelPtr_13(D)->ConnectionFlags = _197;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _198 = (unsigned char) Delta_191;
  # DEBUG CanTpRxPduPtr => CanTpRxPduPtr_15(D)
  # DEBUG ChannelPtr => ChannelPtr_13(D)
  # DEBUG DataLength => _198
  # DEBUG INLINE_ENTRY CanTp_ProcessReceivedLastCF
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.143_199 = CanTp_CfgPtr;
  _200 = CanTp_CfgPtr.143_199->RxNSduConfigPtr;
  _201 = ChannelPtr_13(D)->NSduId;
  _202 = (unsigned int) _201;
  _203 = _202 * 26;
  _204 = _200 + _203;
  RxNSduCfgPtr_205 = CanTp_CfgPtr.143_199 + _204;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_205
  # DEBUG BEGIN_STMT
  _206 = RxNSduCfgPtr_205->AddressingFormat;
  if (_206 != 0)
    goto <bb 71>; [50.00%]
  else
    goto <bb 72>; [50.00%]

  <bb 71> [local count: 1065951]:
  if (_206 != 3)
    goto <bb 73>; [66.00%]
  else
    goto <bb 72>; [34.00%]

  <bb 72> [local count: 1428374]:

  <bb 73> [local count: 2131902]:
  # iftmp.145_207 = PHI <1(71), 0(72)>
  StartPosition_CF_N_PCI_208 = (const uint8) iftmp.145_207;
  # DEBUG StartPosition_CF_N_PCI => StartPosition_CF_N_PCI_208
  # DEBUG BEGIN_STMT
  _209 = _198 + StartPosition_CF_N_PCI_208;
  MinReqSduLength_210 = _209 + 1;
  # DEBUG MinReqSduLength => MinReqSduLength_210
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _211 = CanTpRxPduPtr_15(D)->SduLength;
  _212 = (short unsigned int) MinReqSduLength_210;
  if (_211 < _212)
    goto <bb 79>; [33.00%]
  else
    goto <bb 74>; [67.00%]

  <bb 74> [local count: 1428374]:
  # DEBUG BEGIN_STMT
  _213 = RxNSduCfgPtr_205->PaddingActivation;
  _214 = RxNSduCfgPtr_205->NPduLength;
  _215 = CanTp_CheckNPduLength (_211, _213, _214);
  if (_215 == 0)
    goto <bb 79>; [67.00%]
  else
    goto <bb 75>; [33.00%]

  <bb 75> [local count: 471363]:
  # DEBUG BEGIN_STMT
  # DEBUG ValidFrameLength => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _216 = CanTpRxPduPtr_15(D)->SduDataPtr;
  _217 = (sizetype) iftmp.145_207;
  _218 = _217 + 1;
  NSduDataPtr_219 = _216 + _218;
  # DEBUG NSduDataPtr => NSduDataPtr_219
  # DEBUG BEGIN_STMT
  Ret_CopyRxData_220 = CanTp_RxProcessData (ChannelPtr_13(D), NSduDataPtr_219, _198);
  # DEBUG Ret_CopyRxData => Ret_CopyRxData_220
  # DEBUG BEGIN_STMT
  if (Ret_CopyRxData_220 == 0)
    goto <bb 76>; [50.00%]
  else
    goto <bb 77>; [50.00%]

  <bb 76> [local count: 235682]:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 0);
  goto <bb 78>; [100.00%]

  <bb 77> [local count: 235682]:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 1);

  <bb 78> [local count: 471363]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _221 = ChannelPtr_13(D)->ConnectionFlags;
  _222 = _221 & 251;
  ChannelPtr_13(D)->ConnectionFlags = _222;
  # DEBUG BEGIN_STMT
  goto <bb 80>; [100.00%]

  <bb 79> [local count: 1660538]:
  # DEBUG ValidFrameLength => NULL
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 80> [local count: 2131902]:
  goto <bb 97>; [100.00%]

  <bb 81> [local count: 2131902]:
  # DEBUG BEGIN_STMT
  # DEBUG CanTpRxPduPtr => CanTpRxPduPtr_15(D)
  # DEBUG ChannelPtr => ChannelPtr_13(D)
  # DEBUG INLINE_ENTRY CanTp_ProcessReceivedIntermediateCF
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.146_223 = CanTp_CfgPtr;
  _224 = CanTp_CfgPtr.146_223->RxNSduConfigPtr;
  _225 = ChannelPtr_13(D)->NSduId;
  _226 = (unsigned int) _225;
  _227 = _226 * 26;
  _228 = _224 + _227;
  RxNSduCfgPtr_229 = CanTp_CfgPtr.146_223 + _228;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_229
  # DEBUG BEGIN_STMT
  DataLen_230 = ChannelPtr_13(D)->ReceivedSduLength;
  # DEBUG DataLen => DataLen_230
  # DEBUG BEGIN_STMT
  _231 = CanTpRxPduPtr_15(D)->SduLength;
  _232 = (short unsigned int) DataLen_230;
  if (_231 == _232)
    goto <bb 82>; [51.12%]
  else
    goto <bb 95>; [48.88%]

  <bb 82> [local count: 1089828]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _233 = RxNSduCfgPtr_229->AddressingFormat;
  if (_233 != 0)
    goto <bb 83>; [50.00%]
  else
    goto <bb 84>; [50.00%]

  <bb 83> [local count: 544914]:
  if (_233 != 3)
    goto <bb 85>; [66.00%]
  else
    goto <bb 84>; [34.00%]

  <bb 84> [local count: 730185]:

  <bb 85> [local count: 1089828]:
  # iftmp.148_234 = PHI <1(83), 0(84)>
  StartPosition_CF_N_PCI_235 = (const uint8) iftmp.148_234;
  # DEBUG StartPosition_CF_N_PCI => StartPosition_CF_N_PCI_235
  # DEBUG BEGIN_STMT
  _236 = CanTpRxPduPtr_15(D)->SduDataPtr;
  _237 = (sizetype) iftmp.148_234;
  _238 = _237 + 1;
  NSduDataPtr_239 = _236 + _238;
  # DEBUG NSduDataPtr => NSduDataPtr_239
  # DEBUG BEGIN_STMT
  _240 = DataLen_230 - StartPosition_CF_N_PCI_235;
  DataLength_241 = _240 + 255;
  # DEBUG DataLength => DataLength_241
  # DEBUG BEGIN_STMT
  _242 = ChannelPtr_13(D)->SequenceNumber;
  _243 = _242 + 1;
  # DEBUG BEGIN_STMT
  _244 = _243 & 15;
  ChannelPtr_13(D)->SequenceNumber = _244;
  # DEBUG BEGIN_STMT
  Ret_CopyRxData_245 = CanTp_RxProcessData (ChannelPtr_13(D), NSduDataPtr_239, DataLength_241);
  # DEBUG Ret_CopyRxData => Ret_CopyRxData_245
  # DEBUG BEGIN_STMT
  if (Ret_CopyRxData_245 == 0)
    goto <bb 86>; [67.00%]
  else
    goto <bb 94>; [33.00%]

  <bb 86> [local count: 730185]:
  # DEBUG BEGIN_STMT
  _246 = ChannelPtr_13(D)->ProcessedLength;
  _247 = (short unsigned int) DataLength_241;
  _248 = _246 + _247;
  ChannelPtr_13(D)->ProcessedLength = _248;
  # DEBUG BEGIN_STMT
  _249 = ChannelPtr_13(D)->BlockSize;
  if (_249 == 0)
    goto <bb 87>; [50.00%]
  else
    goto <bb 88>; [50.00%]

  <bb 87> [local count: 365092]:
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->ProcessedBlockFrames = 15;
  goto <bb 89>; [100.00%]

  <bb 88> [local count: 365092]:
  # DEBUG BEGIN_STMT
  _250 = ChannelPtr_13(D)->ProcessedBlockFrames;
  _251 = _250 + 1;
  ChannelPtr_13(D)->ProcessedBlockFrames = _251;

  <bb 89> [local count: 730185]:
  # DEBUG BEGIN_STMT
  _252 = ChannelPtr_13(D)->ProcessedBlockFrames;
  if (_249 == _252)
    goto <bb 90>; [20.24%]
  else
    goto <bb 93>; [79.76%]

  <bb 90> [local count: 147789]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->ProcessedBlockFrames = 0;
  # DEBUG BEGIN_STMT
  ContinueWithNextBlock_253 = CanTp_VerifyBlockSize (ChannelPtr_13(D));
  # DEBUG ContinueWithNextBlock => ContinueWithNextBlock_253
  # DEBUG BEGIN_STMT
  if (ContinueWithNextBlock_253 != 0)
    goto <bb 91>; [50.00%]
  else
    goto <bb 92>; [50.00%]

  <bb 91> [local count: 73895]:
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_13(D), 4);
  goto <bb 96>; [100.00%]

  <bb 92> [local count: 73895]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.149_254 = CanTp_CfgPtr;
  _255 = CanTp_CfgPtr.149_254->RxNSduConfigPtr;
  _256 = ChannelPtr_13(D)->NSduId;
  _257 = (unsigned int) _256;
  _258 = _257 * 26;
  _259 = _255 + _258;
  _260 = CanTp_CfgPtr.149_254 + _259;
  _261 = _260->N_Br;
  _262 = (long unsigned int) _261;
  _263 = _260->N_Ar;
  _264 = (long unsigned int) _263;
  _265 = _262 + _264;
  ChannelPtr_13(D)->Ticks = _265;
  # DEBUG BEGIN_STMT
  _266 = _260->WftMax;
  ChannelPtr_13(D)->WftCounter = _266;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 66;
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_13(D));
  goto <bb 96>; [100.00%]

  <bb 93> [local count: 582395]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.155_267 = CanTp_CfgPtr;
  _268 = CanTp_CfgPtr.155_267->RxNSduConfigPtr;
  _269 = ChannelPtr_13(D)->NSduId;
  _270 = (unsigned int) _269;
  _271 = _270 * 26;
  _272 = _268 + _271;
  _273 = CanTp_CfgPtr.155_267 + _272;
  _274 = _273->N_Cr;
  _275 = (long unsigned int) _274;
  ChannelPtr_13(D)->Ticks = _275;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 194;
  goto <bb 96>; [100.00%]

  <bb 94> [local count: 359643]:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 1);
  goto <bb 96>; [100.00%]

  <bb 95> [local count: 1042073]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 96> [local count: 2131902]:

  <bb 97> [local count: 14778123]:
  # DEBUG CanTpRxPduPtr => NULL
  # DEBUG ChannelPtr => NULL
  # DEBUG ContinueWithNextBlock => NULL
  # DEBUG DataLength => NULL
  # DEBUG NSduDataPtr => NULL
  # DEBUG StartPosition_CF_N_PCI => NULL
  # DEBUG Ret_CopyRxData => NULL
  # DEBUG DataLen => NULL
  # DEBUG RxNSduCfgPtr => NULL
  # DEBUG CanTpRxPduPtr => NULL
  # DEBUG ChannelPtr => NULL
  # DEBUG DataLength => NULL
  # DEBUG NSduDataPtr => NULL
  # DEBUG Ret_CopyRxData => NULL
  # DEBUG MinReqSduLength => NULL
  # DEBUG StartPosition_CF_N_PCI => NULL
  # DEBUG RxNSduCfgPtr => NULL
  goto <bb 122>; [100.00%]

  <bb 98> [local count: 214748365]:
<L11>:
  # DEBUG BEGIN_STMT
  _9 = ChannelPtr_13(D)->NSduId;
  if (_9 == NSduId_14(D))
    goto <bb 99>; [20.24%]
  else
    goto <bb 122>; [79.76%]

  <bb 99> [local count: 43465069]:
  # DEBUG BEGIN_STMT
  # DEBUG D#13 => CanTpRxPduPtr_15(D)
  # DEBUG ChannelPtr => ChannelPtr_13(D)
  # DEBUG INLINE_ENTRY CanTp_ProcessReceivedFC
  # DEBUG CanTpRxPduPtr => D#13
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.157_276 = CanTp_CfgPtr;
  _277 = CanTp_CfgPtr.157_276->TxNSduConfigPtr;
  _278 = ChannelPtr_13(D)->NSduId;
  _279 = (unsigned int) _278;
  _280 = _279 * 24;
  _281 = _277 + _280;
  TxNSduCfgPtr_282 = CanTp_CfgPtr.157_276 + _281;
  # DEBUG TxNSduCfgPtr => TxNSduCfgPtr_282
  # DEBUG BEGIN_STMT
  _283 = TxNSduCfgPtr_282->AddressingFormat;
  if (_283 != 0)
    goto <bb 100>; [50.00%]
  else
    goto <bb 101>; [50.00%]

  <bb 100> [local count: 21732535]:
  if (_283 != 3)
    goto <bb 102>; [66.00%]
  else
    goto <bb 101>; [34.00%]

  <bb 101> [local count: 29121596]:

  <bb 102> [local count: 43465069]:
  # iftmp.159_284 = PHI <1(100), 0(101)>
  StartPosition_FC_N_PCI_285 = (const uint8) iftmp.159_284;
  # DEBUG StartPosition_FC_N_PCI => StartPosition_FC_N_PCI_285
  # DEBUG BEGIN_STMT
  _286 = ChannelPtr_13(D)->State;
  switch (_286) <default: <L31> [50.00%], case 113 ... 114: <L26> [50.00%], case 228: <L26> [50.00%]>

  <bb 103> [local count: 21732535]:
<L26>:
  # DEBUG BEGIN_STMT
  # DEBUG ExpectedFrame => 0
  # DEBUG BEGIN_STMT
  _287 = ChannelPtr_13(D)->BlockSize;
  if (_287 == 0)
    goto <bb 121>; [50.00%]
  else
    goto <bb 104>; [50.00%]

  <bb 104> [local count: 10866267]:
  # DEBUG BEGIN_STMT
  _288 = ChannelPtr_13(D)->ProcessedBlockFrames;
  if (_287 != _288)
    goto <bb 121>; [66.00%]
  else
    goto <bb 105>; [34.00%]

  <bb 105> [local count: 3694531]:
  # DEBUG BEGIN_STMT
  _289 = ChannelPtr_13(D)->TotalLength;
  _290 = ChannelPtr_13(D)->ProcessedLength;
  if (_289 == _290)
    goto <bb 121>; [34.00%]
  else
    goto <bb 106>; [66.00%]

  <bb 106> [local count: 2438390]:
  # DEBUG BEGIN_STMT
  # DEBUG ExpectedFrame => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanDataPtr_291 = MEM[(uint8 * const *)CanTpRxPduPtr_15(D)];
  # DEBUG CanDataPtr => CanDataPtr_291
  # DEBUG BEGIN_STMT
  _292 = (sizetype) iftmp.159_284;
  _293 = CanDataPtr_291 + _292;
  _294 = *_293;
  switch (_294) <default: <L30> [25.00%], case 48: <L27> [25.00%], case 49: <L28> [25.00%], case 50: <L29> [25.00%]>

  <bb 107> [local count: 609598]:
<L27>:
  # DEBUG BEGIN_STMT
  # DEBUG DataIndex => StartPosition_FC_N_PCI_285
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->ProcessedBlockFrames = 0;
  # DEBUG BEGIN_STMT
  DataIndex_295 = StartPosition_FC_N_PCI_285 + 1;
  # DEBUG DataIndex => DataIndex_295
  # DEBUG BEGIN_STMT
  _296 = (sizetype) DataIndex_295;
  _297 = CanDataPtr_291 + _296;
  _298 = *_297;
  ChannelPtr_13(D)->BlockSize = _298;
  # DEBUG BEGIN_STMT
  DataIndex_299 = StartPosition_FC_N_PCI_285 + 2;
  # DEBUG DataIndex => DataIndex_299
  # DEBUG BEGIN_STMT
  _300 = (sizetype) DataIndex_299;
  _301 = CanDataPtr_291 + _300;
  _302 = *_301;
  ChannelPtr_13(D)->StMin = _302;
  # DEBUG BEGIN_STMT
  _303 = _302 + 128;
  if (_303 <= 112)
    goto <bb 109>; [50.00%]
  else
    goto <bb 108>; [50.00%]

  <bb 108> [local count: 304799]:
  if (_302 > 249)
    goto <bb 109>; [50.00%]
  else
    goto <bb 110>; [50.00%]

  <bb 109> [local count: 457198]:
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->StMin = 127;

  <bb 110> [local count: 609598]:
  # DEBUG BEGIN_STMT
  _304 = ChannelPtr_13(D)->StMin;
  if (_304 != 0)
    goto <bb 111>; [50.00%]
  else
    goto <bb 112>; [50.00%]

  <bb 111> [local count: 304799]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _305 = ChannelPtr_13(D)->ConnectionFlags;
  _306 = _305 | 1;
  ChannelPtr_13(D)->ConnectionFlags = _306;

  <bb 112> [local count: 609598]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _307 = TxNSduCfgPtr_282->N_Cs;
  _308 = (long unsigned int) _307;
  ChannelPtr_13(D)->Ticks = _308;
  # DEBUG BEGIN_STMT
  if (_286 == 228)
    goto <bb 113>; [20.24%]
  else
    goto <bb 117>; [79.76%]

  <bb 113> [local count: 123383]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 98;
  # DEBUG BEGIN_STMT
  # DEBUG ChannelPtr => ChannelPtr_13(D)
  # DEBUG CFBufferRequested => 0
  # DEBUG INLINE_ENTRY CanTp_TxStateHandling
  # DEBUG BEGIN_STMT
  # DEBUG Rx_ChannelID => 255
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _313 = ChannelPtr_13(D)->State;
  switch (_313) <default: <L37> [33.33%], case 96 ... 98: <L32> [33.33%], case 122: <L33> [0.00%]>

  <bb 114> [local count: 41123]:
<L32>:
  CanTp_TxStateHandling.part.0 (ChannelPtr_13(D), 0);
  goto <bb 116>; [100.00%]

  <bb 115> [count: 0]:
<L33>:
  # DEBUG BEGIN_STMT
  ChannelPtr_13(D)->State = 98;
  # DEBUG BEGIN_STMT
  _314 = _317(D);
  __builtin_unreachable ();

  <bb 116> [local count: 82247]:
<L37>:
  goto <bb 121>; [100.00%]

  <bb 117> [local count: 486215]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _309 = ChannelPtr_13(D)->ConnectionFlags;
  _310 = _309 | 16;
  ChannelPtr_13(D)->ConnectionFlags = _310;
  goto <bb 121>; [100.00%]

  <bb 118> [local count: 609598]:
<L28>:
  # DEBUG BEGIN_STMT
  _311 = TxNSduCfgPtr_282->N_Bs;
  _312 = (long unsigned int) _311;
  ChannelPtr_13(D)->Ticks = _312;
  # DEBUG BEGIN_STMT
  goto <bb 121>; [100.00%]

  <bb 119> [local count: 609598]:
<L29>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 10);
  # DEBUG BEGIN_STMT
  goto <bb 121>; [100.00%]

  <bb 120> [local count: 609598]:
<L30>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_13(D), 1, 6);
  # DEBUG BEGIN_STMT

  <bb 121> [local count: 43423933]:
<L31>:
  # DEBUG ChannelPtr => NULL
  # DEBUG CFBufferRequested => NULL
  # DEBUG ExpectedFrame => NULL

  <bb 122> [local count: 1073699915]:
<L16>:
  # DEBUG ChannelPtr => NULL
  # DEBUG TxNSduCfgPtr => NULL
  # DEBUG StartPosition_FC_N_PCI => NULL
  # DEBUG CanDataPtr => NULL
  # DEBUG DataIndex => NULL
  # DEBUG CanTpRxPduPtr => NULL
  # DEBUG ChannelPtr => NULL
  # DEBUG SingleFrameLength => NULL
  # DEBUG DataLen => NULL
  # DEBUG Delta => NULL
  # DEBUG StartPosition_CF_N_PCI => NULL
  # DEBUG RxNSduCfgPtr => NULL
  # DEBUG CanTpRxPduPtr => NULL
  # DEBUG ChannelPtr => NULL
  # DEBUG BSCalc_Ok => NULL
  # DEBUG Ret_ReqRxBuffer => NULL
  # DEBUG NSduDataPtr => NULL
  # DEBUG DataLength_FF => NULL
  # DEBUG Ret => NULL
  # DEBUG StartPosition_FF_N_PCI_Length => NULL
  # DEBUG MessageLength_BigData => NULL
  # DEBUG MaxUnSegMsgLength => NULL
  # DEBUG NPciSize_SF => NULL
  # DEBUG StartPosition_FF_N_PCI => NULL
  # DEBUG FirstFrame_NPCI_Size => NULL
  # DEBUG MessageLength => NULL
  # DEBUG ValidFirstFrame => NULL
  # DEBUG RxNSduCfgPtr => NULL
  # DEBUG CanTpRxPduPtr => NULL
  # DEBUG ChannelPtr => NULL
  # DEBUG Ret_ReqRxBuffer => NULL
  # DEBUG NSduDataPtr => NULL
  # DEBUG Ret => NULL
  # DEBUG ValidFrameLength => NULL
  # DEBUG NPciHeaderSize => NULL
  # DEBUG DataLength => NULL
  # DEBUG StartPosition_SF_N_PCI => NULL
  # DEBUG RxNSduCfgPtr => NULL
  return;

}



;; Function CanTp_PostRxIndication (CanTp_PostRxIndication, funcdef_no=20, decl_uid=5947, cgraph_uid=21, symbol_order=21)

CanTp_PostRxIndication (struct CanTp_ChannelType * ChannelPtr)
{
  boolean PendingFrame;
  uint8_least Loop;
  uint8 FrameType;
  PduIdType NSduId;
  uint8 NPduData[64];
  struct PduInfoType CanTpNPdu;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  long unsigned int _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned char _7;
  unsigned char _17;

  <bb 2> [local count: 236223200]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NPduData = "\x00";
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PendingFrame => 0
  # DEBUG BEGIN_STMT
  # DEBUG NSduId => 0
  # DEBUG BEGIN_STMT
  # DEBUG FrameType => 0
  # DEBUG BEGIN_STMT
  CanTpNPdu.SduDataPtr = 0B;
  # DEBUG BEGIN_STMT
  CanTpNPdu.SduLength = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_21(D)->PostFlag;
  _17 = _1 & 1;
  if (_17 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 9> [local count: 118111600]:
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_21(D)->PostRxIndData[Loop_10];
  NPduData[Loop_10] = _2;
  # DEBUG BEGIN_STMT
  Loop_28 = Loop_10 + 1;
  # DEBUG Loop => Loop_28

  <bb 4> [local count: 1073741824]:
  # Loop_10 = PHI <Loop_28(3), 0(9)>
  # DEBUG Loop => Loop_10
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_21(D)->PostRxIndLength;
  _4 = (long unsigned int) _3;
  if (_4 > Loop_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # _5 = PHI <_3(4)>
  # DEBUG BEGIN_STMT
  CanTpNPdu.SduDataPtr = &NPduData[0];
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) _5;
  CanTpNPdu.SduLength = _6;
  # DEBUG BEGIN_STMT
  NSduId_24 = ChannelPtr_21(D)->PostRxIndNSduId;
  # DEBUG NSduId => NSduId_24
  # DEBUG BEGIN_STMT
  FrameType_25 = ChannelPtr_21(D)->PostRxIndFrameType;
  # DEBUG FrameType => FrameType_25
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = _1 & 254;
  ChannelPtr_21(D)->PostFlag = _7;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PendingFrame => 1

  <bb 6> [local count: 236223201]:
  # NSduId_8 = PHI <0(2), NSduId_24(5)>
  # FrameType_9 = PHI <0(2), FrameType_25(5)>
  # PendingFrame_11 = PHI <0(2), 1(5)>
  # DEBUG PendingFrame => PendingFrame_11
  # DEBUG FrameType => FrameType_9
  # DEBUG NSduId => NSduId_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PendingFrame_11 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 77953656]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_21(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_ProcessRxFrame (ChannelPtr_21(D), &CanTpNPdu, NSduId_8, FrameType_9);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_21(D)->ChannelLockFlag = 0;

  <bb 8> [local count: 236223201]:
  # DEBUG BEGIN_STMT
  CanTpNPdu ={v} {CLOBBER};
  NPduData ={v} {CLOBBER};
  return;

}



;; Function CanTp_TransmitPostponedFrame (CanTp_TransmitPostponedFrame, funcdef_no=40, decl_uid=5958, cgraph_uid=41, symbol_order=41)


Symbols to be put in SSA form
{ D.10107 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 5
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
CanTp_TransmitPostponedFrame (CanTp_TxChannelType TxChannelID)
{
  CanTp_ChStateType NextState;
  struct CanTp_ChannelType * Tx_ChannelPtr;
  int _5;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;
  const struct CanTp_ConfigType * CanTp_CfgPtr.190_10;
  long unsigned int _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  sizetype _15;
  const struct CanTp_TxNSduConfigType * _16;
  short unsigned int _17;
  long unsigned int _18;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Tx_ChannelPtr => 0B
  # DEBUG BEGIN_STMT
  if (TxChannelID_3(D) != 255)
    goto <bb 3>; [66.00%]
  else
    goto <bb 6>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG TxChannelID => TxChannelID_3(D)
  # DEBUG INLINE_ENTRY CanTp_TransmitPostponedFrame
  # DEBUG BEGIN_STMT
  _5 = (int) TxChannelID_3(D);
  Tx_ChannelPtr_6 = &CanTp_Channel[_5];
  # DEBUG Tx_ChannelPtr => Tx_ChannelPtr_6
  # DEBUG BEGIN_STMT
  _7 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_5].State;
  _8 = _7 & 152;
  if (_8 == 136)
    goto <bb 4>; [20.24%]
  else
    goto <bb 5>; [79.76%]

  <bb 4> [local count: 143434728]:
  # DEBUG BEGIN_STMT
  _9 = _7 & 119;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.190_10 = CanTp_CfgPtr;
  _11 = CanTp_CfgPtr.190_10->TxNSduConfigPtr;
  _12 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_5].NSduId;
  _13 = (unsigned int) _12;
  _14 = _13 * 24;
  _15 = _11 + _14;
  _16 = CanTp_CfgPtr.190_10 + _15;
  _17 = _16->N_As;
  _18 = (long unsigned int) _17;
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_5].Ticks = _18;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG CurrentState => _9
  # DEBUG BEGIN_STMT
  NextState_19 = _9 & 103;
  # DEBUG NextState => NextState_19
  # DEBUG BEGIN_STMT
  NextState_20 = NextState_19 | 16;
  # DEBUG NextState => NextState_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_5].State = NextState_20;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TransmitFrame (Tx_ChannelPtr_6, 0B);

  <bb 5> [local count: 708669605]:

  <bb 6> [local count: 1073741824]:
  # DEBUG TxChannelID => NULL
  # DEBUG Tx_ChannelPtr => NULL
  # DEBUG NextState => NULL
  # DEBUG CurrentState => NULL
  return;

}



;; Function CanTp_TransmitPostponedFlowControl (CanTp_TransmitPostponedFlowControl, funcdef_no=41, decl_uid=5960, cgraph_uid=42, symbol_order=42)


Symbols to be put in SSA form
{ D.10108 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Removing basic block 3
Removing basic block 5
Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 8 }
;; 3 succs { 7 5 6 4 }
;; 4 succs { 7 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
CanTp_TransmitPostponedFlowControl (CanTp_ChType RxChannelID)
{
  struct CanTp_ChannelType * Rx_ChannelPtr;
  int _5;
  unsigned char _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Rx_ChannelPtr => 0B
  # DEBUG BEGIN_STMT
  if (RxChannelID_3(D) != 255)
    goto <bb 3>; [66.00%]
  else
    goto <bb 8>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG RxChannelID => RxChannelID_3(D)
  # DEBUG INLINE_ENTRY CanTp_TransmitPostponedFlowControl
  # DEBUG BEGIN_STMT
  _5 = (int) RxChannelID_3(D);
  Rx_ChannelPtr_6 = &CanTp_Channel[_5];
  # DEBUG Rx_ChannelPtr => Rx_ChannelPtr_6
  # DEBUG BEGIN_STMT
  _7 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_5].State;
  switch (_7) <default: <L11> [25.00%], case 204: <L9> [25.00%], case 205: <L10> [25.00%], case 206: <L8> [25.00%]>

  <bb 4> [local count: 177167401]:
<L8>:
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_5].State = 78;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (Rx_ChannelPtr_6, 49);
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 177167401]:
<L9>:
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_5].State = 76;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (Rx_ChannelPtr_6, 48);
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 177167401]:
<L10>:
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_5].State = 77;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (Rx_ChannelPtr_6, 50);
  # DEBUG BEGIN_STMT

  <bb 7> [local count: 708669605]:
<L11>:

  <bb 8> [local count: 1073741824]:
<L7>:
  # DEBUG RxChannelID => NULL
  # DEBUG Rx_ChannelPtr => NULL
  return;

}



;; Function CanTp_TimeoutHandling (CanTp_TimeoutHandling, funcdef_no=5, decl_uid=5934, cgraph_uid=6, symbol_order=6)

CanTp_TimeoutHandling (struct CanTp_ChannelType * ChannelPtr)
{
  CanTp_ChType Rx_ChannelID;
  CanTp_TxChannelType Tx_ChannelID;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.16_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanTp_RxNSduConfigType * _8;
  const struct CanTp_ConfigType * CanTp_CfgPtr.18_9;
  long unsigned int _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  sizetype _14;
  const struct CanTp_TxNSduConfigType * _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Tx_ChannelID => 255
  # DEBUG BEGIN_STMT
  # DEBUG Rx_ChannelID => 255
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_18(D)->State;
  switch (_1) <default: <L17> [12.50%], case 64: <L2> [12.50%], case 65 ... 66: <L0> [12.50%], case 84 ... 86: <L3> [12.50%], case 112 ... 114: <L7> [12.50%], case 194: <L6> [12.50%], case 204 ... 206: <L10> [12.50%], case 228: <L16> [12.50%], case 232 ... 234: <L10> [12.50%]>

  <bb 3> [local count: 134217728]:
<L0>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_18(D), 1, 8);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 4> [local count: 134217728]:
<L2>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_18(D), 1, 1);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 5> [local count: 134217728]:
<L3>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.16_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.16_2->RxNSduConfigPtr;
  _4 = ChannelPtr_18(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 26;
  _7 = _3 + _6;
  _8 = CanTp_CfgPtr.16_2 + _7;
  Tx_ChannelID_25 = _8->Tx_Channel;
  # DEBUG Tx_ChannelID => Tx_ChannelID_25
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_18(D), 1, 2);
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFrame (Tx_ChannelID_25);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 6> [local count: 134217728]:
<L6>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_18(D), 1, 4);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 7> [local count: 134217728]:
<L7>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.18_9 = CanTp_CfgPtr;
  _10 = CanTp_CfgPtr.18_9->TxNSduConfigPtr;
  _11 = ChannelPtr_18(D)->NSduId;
  _12 = (unsigned int) _11;
  _13 = _12 * 24;
  _14 = _10 + _13;
  _15 = CanTp_CfgPtr.18_9 + _14;
  Rx_ChannelID_22 = _15->Rx_Channel;
  # DEBUG Rx_ChannelID => Rx_ChannelID_22
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_18(D), 1, 2);
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFlowControl (Rx_ChannelID_22);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 8> [local count: 134217728]:
<L10>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_18(D), 1, 2);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 9> [local count: 134217728]:
<L16>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_18(D), 1, 3);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 134217728]:
<L17>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_18(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 11> [local count: 1073741824]:
  return;

}



;; Function CanTp_ProcessTxPdu (CanTp_ProcessTxPdu, funcdef_no=47, decl_uid=9233, cgraph_uid=48, symbol_order=48)

Removing basic block 46
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
Removing basic block 52

Symbols to be put in SSA form
{ D.10118 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 53
Number of blocks to update: 46 ( 87%)


Removing basic block 12
Merging blocks 32 and 43
Merging blocks 41 and 25
Removing basic block 42
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 42 }
;; 6 succs { 42 31 41 32 7 8 12 }
;; 7 succs { 42 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 42 }
;; 12 succs { 13 14 }
;; 13 succs { 30 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 30 }
;; 17 succs { 18 22 }
;; 18 succs { 21 19 20 }
;; 19 succs { 21 }
;; 20 succs { }
;; 21 succs { 30 }
;; 22 succs { 23 24 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 42 }
;; 31 succs { 42 }
;; 32 succs { 33 34 }
;; 33 succs { 35 34 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 40 }
;; 39 succs { 40 }
;; 40 succs { 42 }
;; 41 succs { 42 }
;; 42 succs { 1 }
CanTp_ProcessTxPdu (struct CanTp_ChannelType * ChannelPtr, PduIdType CanTpTxNPduConfId)
{
  <unnamed type> D.10602;
  uint32 GPTticks;
  const PduIdType NSduId;
  const CanTp_TxChannelType Channel;
  const uint8 DataLength_FF;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  CanTp_ChType Rx_ChannelID;
  CanTp_TxChannelType Tx_ChannelID;
  const PduIdType NSduId;
  PduIdType SearchTxNPduId;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.218_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct CanTp_RxNSduConfigType * _7;
  const struct CanTp_ConfigType * CanTp_CfgPtr.222_8;
  long unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  const struct CanTp_TxNSduConfigType * _13;
  unsigned char _14;
  const struct CanTp_ConfigType * CanTp_CfgPtr.226_15;
  long unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  sizetype _19;
  const struct CanTp_TxNSduConfigType * _20;
  short unsigned int _21;
  long unsigned int _22;
  unsigned char _23;
  const struct CanTp_ConfigType * CanTp_CfgPtr.228_24;
  long unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  sizetype _28;
  const struct CanTp_RxNSduConfigType * _29;
  short unsigned int _30;
  long unsigned int _31;
  const struct CanTp_ConfigType * CanTp_CfgPtr.230_32;
  long unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  sizetype _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  short unsigned int _43;
  long unsigned int _44;
  short unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  short unsigned int _48;
  short unsigned int _49;
  int iftmp.232_53;
  unsigned char _61;
  unsigned char _62;
  short unsigned int _91;
  short unsigned int _92;
  unsigned char _93;
  unsigned char _94;
  const struct CanTp_ConfigType * CanTp_CfgPtr.237_95;
  long unsigned int _96;
  unsigned int _97;
  unsigned int _98;
  sizetype _99;
  const struct CanTp_TxNSduConfigType * _100;
  short unsigned int _101;
  long unsigned int _102;
  unsigned char _103;
  unsigned char _104;
  unsigned char _105;
  const struct CanTp_ConfigType * CanTp_CfgPtr.239_106;
  long unsigned int _107;
  unsigned int _108;
  unsigned int _109;
  sizetype _110;
  const struct CanTp_TxNSduConfigType * _111;
  signed char _113;
  long unsigned int _114;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _119;
  unsigned int _120;
  unsigned int _121;
  sizetype _122;
  const struct CanTp_MfCtrConfigType * _123;
  long unsigned int _124;
  long unsigned int _126;
  unsigned char _128;
  long unsigned int _129;
  unsigned char _131;
  short unsigned int _133;
  long unsigned int _134;
  unsigned char _135;
  unsigned char _137;
  <unnamed type> _138;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NSduId_60 = ChannelPtr_59(D)->NSduId;
  # DEBUG NSduId => NSduId_60
  # DEBUG BEGIN_STMT
  # DEBUG Tx_ChannelID => 255
  # DEBUG BEGIN_STMT
  # DEBUG Rx_ChannelID => 255
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_59(D)->State;
  _61 = _1 & 96;
  if (_61 == 64)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.218_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.218_2->RxNSduConfigPtr;
  _4 = (unsigned int) NSduId_60;
  _5 = _4 * 26;
  _6 = _3 + _5;
  _7 = CanTp_CfgPtr.218_2 + _6;
  SearchTxNPduId_65 = _7->NPduConfIdFc;
  # DEBUG SearchTxNPduId => SearchTxNPduId_65
  # DEBUG BEGIN_STMT
  Tx_ChannelID_66 = _7->Tx_Channel;
  # DEBUG Tx_ChannelID => Tx_ChannelID_66
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.222_8 = CanTp_CfgPtr;
  _9 = CanTp_CfgPtr.222_8->TxNSduConfigPtr;
  _10 = (unsigned int) NSduId_60;
  _11 = _10 * 24;
  _12 = _9 + _11;
  _13 = CanTp_CfgPtr.222_8 + _12;
  SearchTxNPduId_63 = _13->NPduConfIdxF;
  # DEBUG SearchTxNPduId => SearchTxNPduId_63
  # DEBUG BEGIN_STMT
  Rx_ChannelID_64 = _13->Rx_Channel;
  # DEBUG Rx_ChannelID => Rx_ChannelID_64

  <bb 5> [local count: 1073741824]:
  # SearchTxNPduId_50 = PHI <SearchTxNPduId_65(3), SearchTxNPduId_63(4)>
  # Tx_ChannelID_51 = PHI <Tx_ChannelID_66(3), 255(4)>
  # Rx_ChannelID_52 = PHI <255(3), Rx_ChannelID_64(4)>
  # DEBUG Rx_ChannelID => Rx_ChannelID_52
  # DEBUG Tx_ChannelID => Tx_ChannelID_51
  # DEBUG SearchTxNPduId => SearchTxNPduId_50
  # DEBUG BEGIN_STMT
  if (SearchTxNPduId_50 == CanTpTxNPduConfId_67(D))
    goto <bb 6>; [34.00%]
  else
    goto <bb 42>; [66.00%]

  <bb 6> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  switch (_1) <default: <L25> [14.29%], case 84: <L10> [14.29%], case 85: <L21> [14.29%], case 86: <L11> [14.29%], case 112: <L4> [14.29%], case 113: <L5> [14.29%], case 114: <L32> [14.29%]>

  <bb 7> [local count: 52168820]:
<L4>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_59(D), 1, 0);
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFlowControl (Rx_ChannelID_52);
  # DEBUG BEGIN_STMT
  goto <bb 42>; [100.00%]

  <bb 8> [local count: 52168820]:
<L5>:
  # DEBUG BEGIN_STMT
  _14 = ChannelPtr_59(D)->ConnectionFlags;
  _62 = _14 & 16;
  if (_62 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 26084410]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->State = 228;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.226_15 = CanTp_CfgPtr;
  _16 = CanTp_CfgPtr.226_15->TxNSduConfigPtr;
  _17 = (unsigned int) NSduId_60;
  _18 = _17 * 24;
  _19 = _16 + _18;
  _20 = CanTp_CfgPtr.226_15 + _19;
  _21 = _20->N_Bs;
  _22 = (long unsigned int) _21;
  ChannelPtr_59(D)->Ticks = _22;
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 26084410]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->State = 98;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = _14 & 239;
  ChannelPtr_59(D)->ConnectionFlags = _23;

  <bb 11> [local count: 52168820]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFlowControl (Rx_ChannelID_52);
  # DEBUG BEGIN_STMT
  goto <bb 42>; [100.00%]

  <bb 12> [local count: 52168820]:
<L32>:
  # DEBUG BEGIN_STMT
  # DEBUG ChannelPtr => ChannelPtr_59(D)
  # DEBUG INLINE_ENTRY CanTp_ProcessConfirmedCF
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NSduId_90 = ChannelPtr_59(D)->NSduId;
  # DEBUG NSduId => NSduId_90
  # DEBUG BEGIN_STMT
  _91 = ChannelPtr_59(D)->TotalLength;
  _92 = ChannelPtr_59(D)->ProcessedLength;
  # DEBUG RemainingBytes => _91 - _92
  # DEBUG BEGIN_STMT
  if (_91 == _92)
    goto <bb 13>; [20.24%]
  else
    goto <bb 14>; [79.76%]

  <bb 13> [local count: 10558969]:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_59(D), 1, 0);
  goto <bb 30>; [100.00%]

  <bb 14> [local count: 41609851]:
  # DEBUG BEGIN_STMT
  _93 = ChannelPtr_59(D)->BlockSize;
  if (_93 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 15> [local count: 20804926]:
  _94 = ChannelPtr_59(D)->ProcessedBlockFrames;
  if (_93 == _94)
    goto <bb 16>; [34.00%]
  else
    goto <bb 17>; [66.00%]

  <bb 16> [local count: 7073675]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->State = 228;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.237_95 = CanTp_CfgPtr;
  _96 = CanTp_CfgPtr.237_95->TxNSduConfigPtr;
  _97 = (unsigned int) NSduId_90;
  _98 = _97 * 24;
  _99 = _96 + _98;
  _100 = CanTp_CfgPtr.237_95 + _99;
  _101 = _100->N_Bs;
  _102 = (long unsigned int) _101;
  ChannelPtr_59(D)->Ticks = _102;
  goto <bb 30>; [100.00%]

  <bb 17> [local count: 34536176]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _103 = ChannelPtr_59(D)->ConnectionFlags;
  _104 = _103 & 239;
  ChannelPtr_59(D)->ConnectionFlags = _104;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _105 = ChannelPtr_59(D)->StMin;
  if (_105 == 0)
    goto <bb 18>; [33.00%]
  else
    goto <bb 22>; [67.00%]

  <bb 18> [local count: 11396938]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->State = 98;
  # DEBUG BEGIN_STMT
  # DEBUG ChannelPtr => ChannelPtr_59(D)
  # DEBUG CFBufferRequested => 0
  # DEBUG INLINE_ENTRY CanTp_TxStateHandling
  # DEBUG BEGIN_STMT
  # DEBUG Rx_ChannelID => 255
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _137 = ChannelPtr_59(D)->State;
  switch (_137) <default: <L31> [33.33%], case 96 ... 98: <L26> [33.33%], case 122: <L27> [0.00%]>

  <bb 19> [local count: 3798600]:
<L26>:
  CanTp_TxStateHandling.part.0 (ChannelPtr_59(D), 0);
  goto <bb 21>; [100.00%]

  <bb 20> [count: 0]:
<L27>:
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->State = 98;
  # DEBUG BEGIN_STMT
  _138 = _141(D);
  __builtin_unreachable ();

  <bb 21> [local count: 7597199]:
<L31>:
  goto <bb 30>; [100.00%]

  <bb 22> [local count: 23139238]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.239_106 = CanTp_CfgPtr;
  _107 = CanTp_CfgPtr.239_106->TxNSduConfigPtr;
  _108 = (unsigned int) NSduId_90;
  _109 = _108 * 24;
  _110 = _107 + _109;
  _111 = CanTp_CfgPtr.239_106 + _110;
  Channel_112 = _111->Channel;
  # DEBUG Channel => Channel_112
  # DEBUG BEGIN_STMT
  _113 = (signed char) _105;
  if (_113 >= 0)
    goto <bb 23>; [59.00%]
  else
    goto <bb 24>; [41.00%]

  <bb 23> [local count: 13652151]:
  # DEBUG BEGIN_STMT
  _114 = (long unsigned int) _105;
  GPTticks_115 = _114 * 1000000;
  # DEBUG GPTticks => GPTticks_115
  goto <bb 25>; [100.00%]

  <bb 24> [local count: 9487088]:
  # DEBUG BEGIN_STMT
  _116 = (long unsigned int) _105;
  _117 = _116 * 100000;
  GPTticks_118 = _117 + 4270967296;
  # DEBUG GPTticks => GPTticks_118

  <bb 25> [local count: 23139238]:
  # GPTticks_125 = PHI <GPTticks_115(23), GPTticks_118(24)>
  # DEBUG GPTticks => GPTticks_125
  # DEBUG BEGIN_STMT
  _119 = CanTp_CfgPtr.239_106->MfCtrConfigPtr;
  _120 = (unsigned int) Channel_112;
  _121 = _120 * 8;
  _122 = _119 + _121;
  _123 = CanTp_CfgPtr.239_106 + _122;
  _124 = _123->Resolution;
  _126 = _124 + GPTticks_125;
  GPTticks_127 = _126 + 4294967295;
  # DEBUG GPTticks => GPTticks_127
  # DEBUG BEGIN_STMT
  _128 = _104 & 1;
  if (_128 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 26> [local count: 11569619]:
  # DEBUG BEGIN_STMT
  _129 = GPTticks_127 / _124;
  GPTticks_130 = _129 + 1;
  # DEBUG GPTticks => GPTticks_130
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _131 = _104 & 254;
  ChannelPtr_59(D)->ConnectionFlags = _131;
  # DEBUG BEGIN_STMT
  goto <bb 28>; [100.00%]

  <bb 27> [local count: 11569619]:
  # DEBUG BEGIN_STMT
  GPTticks_132 = GPTticks_127 / _124;
  # DEBUG GPTticks => GPTticks_132

  <bb 28> [local count: 23139238]:
  # GPTticks_136 = PHI <GPTticks_130(26), GPTticks_132(27)>
  # DEBUG GPTticks => GPTticks_136
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->State = 122;
  # DEBUG BEGIN_STMT
  _133 = _111->N_Cs;
  _134 = (long unsigned int) _133;
  ChannelPtr_59(D)->Ticks = _134;
  # DEBUG BEGIN_STMT
  _135 = _123->CallbackType;
  if (_135 == 1)
    goto <bb 29>; [34.00%]
  else
    goto <bb 30>; [66.00%]

  <bb 29> [local count: 7867341]:
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->MfCounterTicks = GPTticks_136;

  <bb 30> [local count: 48369081]:
  # DEBUG ChannelPtr => NULL
  # DEBUG CFBufferRequested => NULL
  # DEBUG BEGIN_STMT
  # DEBUG ChannelPtr => NULL
  # DEBUG Channel => NULL
  # DEBUG NSduId => NULL
  # DEBUG GPTticks => NULL
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFlowControl (Rx_ChannelID_52);
  # DEBUG BEGIN_STMT
  goto <bb 42>; [100.00%]

  <bb 31> [local count: 52168820]:
<L10>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->State = 194;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.228_24 = CanTp_CfgPtr;
  _25 = CanTp_CfgPtr.228_24->RxNSduConfigPtr;
  _26 = (unsigned int) NSduId_60;
  _27 = _26 * 26;
  _28 = _25 + _27;
  _29 = CanTp_CfgPtr.228_24 + _28;
  _30 = _29->N_Cr;
  _31 = (long unsigned int) _30;
  ChannelPtr_59(D)->Ticks = _31;
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFrame (Tx_ChannelID_51);
  # DEBUG BEGIN_STMT
  goto <bb 42>; [100.00%]

  <bb 32> [local count: 52168820]:
<L11>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.230_32 = CanTp_CfgPtr;
  _33 = CanTp_CfgPtr.230_32->RxNSduConfigPtr;
  _34 = (unsigned int) NSduId_60;
  _35 = _34 * 26;
  _36 = _33 + _35;
  RxNSduCfgPtr_77 = CanTp_CfgPtr.230_32 + _36;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_77
  # DEBUG BEGIN_STMT
  _37 = RxNSduCfgPtr_77->NPduLength;
  _38 = RxNSduCfgPtr_77->AddressingFormat;
  if (_38 != 0)
    goto <bb 33>; [50.00%]
  else
    goto <bb 34>; [50.00%]

  <bb 33> [local count: 26084410]:
  if (_38 != 3)
    goto <bb 35>; [66.00%]
  else
    goto <bb 34>; [34.00%]

  <bb 34> [local count: 34953110]:

  <bb 35> [local count: 52168820]:
  # iftmp.232_53 = PHI <1(33), 0(34)>
  _39 = (unsigned char) iftmp.232_53;
  _40 = _37 - _39;
  DataLength_FF_78 = _40 + 254;
  # DEBUG DataLength_FF => DataLength_FF_78
  # DEBUG BEGIN_STMT
  _41 = ChannelPtr_59(D)->WftCounter;
  _42 = _41 + 255;
  ChannelPtr_59(D)->WftCounter = _42;
  # DEBUG BEGIN_STMT
  _43 = RxNSduCfgPtr_77->N_Br;
  _44 = (long unsigned int) _43;
  ChannelPtr_59(D)->Ticks = _44;
  # DEBUG BEGIN_STMT
  if (_42 != 0)
    goto <bb 36>; [50.00%]
  else
    goto <bb 37>; [50.00%]

  <bb 36> [local count: 26084410]:
  # DEBUG BEGIN_STMT
  _45 = RxNSduCfgPtr_77->N_Ar;
  _46 = (long unsigned int) _45;
  _47 = _44 + _46;
  ChannelPtr_59(D)->Ticks = _47;

  <bb 37> [local count: 52168820]:
  # DEBUG BEGIN_STMT
  _48 = ChannelPtr_59(D)->ProcessedLength;
  _49 = (short unsigned int) DataLength_FF_78;
  if (_48 > _49)
    goto <bb 38>; [50.00%]
  else
    goto <bb 39>; [50.00%]

  <bb 38> [local count: 26084410]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->State = 66;
  goto <bb 40>; [100.00%]

  <bb 39> [local count: 26084410]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_59(D)->State = 65;

  <bb 40> [local count: 52168820]:
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFrame (Tx_ChannelID_51);
  # DEBUG BEGIN_STMT
  goto <bb 42>; [100.00%]

  <bb 41> [local count: 52168820]:
<L21>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_59(D), 0, 1);
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFrame (Tx_ChannelID_51);
  # DEBUG BEGIN_STMT

  <bb 42> [local count: 1070051606]:
<L25>:
  return;

}



;; Function CanTp_TxStateHandling (CanTp_TxStateHandling, funcdef_no=42, decl_uid=5908, cgraph_uid=43, symbol_order=43)

CanTp_TxStateHandling (struct CanTp_ChannelType * ChannelPtr, boolean CFBufferRequested)
{
  unsigned char _1;
  <unnamed type> _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Rx_ChannelID => 255
  # DEBUG BEGIN_STMT
  # DEBUG Ret_Postponed => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_9(D)->State;
  switch (_1) <default: <L36> [33.33%], case 96 ... 98: <L0> [33.33%], case 122: <L25> [33.33%]>

  <bb 3> [local count: 357913944]:
<L0>:
  CanTp_TxStateHandling.part.0 (ChannelPtr_9(D), CFBufferRequested_17(D));
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 357878150]:
<L25>:
  # DEBUG BEGIN_STMT
  ChannelPtr_9(D)->State = 98;
  # DEBUG BEGIN_STMT
  _4 = CanTp_RequestTxFrameData (ChannelPtr_9(D));
  RetVal_DataReq = _4;
  # DEBUG BEGIN_STMT
  switch (_4) <default: <L30> [33.33%], case 0: <L26> [33.33%], case 2: <L29> [33.33%]>

  <bb 5> [local count: 119280787]:
<L26>:
  # DEBUG BEGIN_STMT
  _5 = ChannelPtr_9(D)->MfCounterTicks;
  _6 = ChannelPtr_9(D)->Ticks;
  if (_5 > _6)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 59640394]:
  # DEBUG BEGIN_STMT
  ChannelPtr_9(D)->Ticks = _5;

  <bb 7> [local count: 119280787]:
  # DEBUG BEGIN_STMT
  ChannelPtr_9(D)->State = 106;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [100.00%]

  <bb 8> [local count: 119280787]:
<L29>:
  # DEBUG BEGIN_STMT
  ChannelPtr_9(D)->State = 122;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 119280787]:
<L30>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_9(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 10> [local count: 1073562874]:
<L36>:
  return;

}



;; Function CanTp_PostTxConfirmation (CanTp_PostTxConfirmation, funcdef_no=46, decl_uid=5949, cgraph_uid=47, symbol_order=47)

CanTp_PostTxConfirmation (struct CanTp_ChannelType * ChannelPtr)
{
  boolean PendingTxConf;
  PduIdType CanTpTxNPduConfId;
  unsigned char _1;
  unsigned char _2;
  unsigned char _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PendingTxConf => 0
  # DEBUG BEGIN_STMT
  # DEBUG CanTpTxNPduConfId => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_10(D)->PostFlag;
  _7 = _1 & 2;
  if (_7 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  CanTpTxNPduConfId_11 = ChannelPtr_10(D)->PostTxConfNPduId;
  # DEBUG CanTpTxNPduConfId => CanTpTxNPduConfId_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = _1 & 253;
  ChannelPtr_10(D)->PostFlag = _2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PendingTxConf => 1

  <bb 4> [local count: 1073741824]:
  # CanTpTxNPduConfId_3 = PHI <0(2), CanTpTxNPduConfId_11(3)>
  # PendingTxConf_4 = PHI <0(2), 1(3)>
  # DEBUG PendingTxConf => PendingTxConf_4
  # DEBUG CanTpTxNPduConfId => CanTpTxNPduConfId_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PendingTxConf_4 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  CanTp_ProcessTxPdu (ChannelPtr_10(D), CanTpTxNPduConfId_3);

  <bb 6> [local count: 1073741824]:
  return;

}



;; Function CanTp_HandlePostponedFlags (CanTp_HandlePostponedFlags, funcdef_no=49, decl_uid=5932, cgraph_uid=50, symbol_order=50)


Symbols to be put in SSA form
{ D.10120 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 17
Number of blocks to update: 16 ( 94%)


Merging blocks 3 and 10
Removing basic block 8
Merging blocks 16 and 9
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 1
;;  header 3, latch 12
;;  depth 1, outer 0
;;  nodes: 3 12 11 10 9 6 7 8 4 5
;; 2 succs { 3 }
;; 3 succs { 4 9 }
;; 4 succs { 5 8 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 3 13 }
;; 13 succs { 1 }
CanTp_HandlePostponedFlags (struct CanTp_ChannelType * ChannelPtr)
{
  boolean PostponedFlags;
  unsigned char _1;
  unsigned char _4;
  unsigned char _17;
  short unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;

  <bb 2> [local count: 118111598]:
  # DEBUG BEGIN_STMT
  # DEBUG PostponedFlags => 0

  <bb 3> [local count: 1073741822]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ChannelPtr => ChannelPtr_6(D)
  # DEBUG INLINE_ENTRY CanTp_PostponedTimeoutHandling
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutDetected => 0
  # DEBUG BEGIN_STMT
  _17 = ChannelPtr_6(D)->State;
  if (_17 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 4> [local count: 354334801]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _18 = ChannelPtr_6(D)->PostTicks;
  if (_18 != 0)
    goto <bb 5>; [67.00%]
  else
    goto <bb 8>; [33.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  _19 = (long unsigned int) _18;
  _20 = ChannelPtr_6(D)->Ticks;
  if (_19 >= _20)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 118702158]:
  # DEBUG BEGIN_STMT
  ChannelPtr_6(D)->Ticks = 0;
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutDetected => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG TimeoutDetected => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TimeoutHandling (ChannelPtr_6(D));
  goto <bb 9>; [100.00%]

  <bb 7> [local count: 118702158]:
  # DEBUG BEGIN_STMT
  _21 = _20 - _19;
  ChannelPtr_6(D)->Ticks = _21;
  # DEBUG BEGIN_STMT
  ChannelPtr_6(D)->PostTicks = 0;
  # DEBUG TimeoutDetected => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG TimeoutDetected => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 116930484]:
  # DEBUG TimeoutDetected => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG TimeoutDetected => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 9> [local count: 1073741824]:
  # DEBUG TimeoutDetected => NULL
  # DEBUG ChannelPtr => NULL
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_6(D)->PostFlag;
  _4 = _1 & 7;
  if (_4 != 0)
    goto <bb 10>; [67.00%]
  else
    goto <bb 11>; [33.00%]

  <bb 10> [local count: 719407023]:
  # DEBUG PostponedFlags => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_6(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_PostTxConfirmation (ChannelPtr_6(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_6(D)->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_PostRxIndication (ChannelPtr_6(D));
  # DEBUG BEGIN_STMT
  CanTp_PostSTminCallback (ChannelPtr_6(D));
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG PostponedFlags => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 12> [local count: 1073741824]:
  # PostponedFlags_16 = PHI <0(11), 1(10)>
  # DEBUG BEGIN_STMT
  if (PostponedFlags_16 != 0)
    goto <bb 3>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 118111601]:
  return;

}



;; Function CanTp_CancelTransmit (CanTp_CancelTransmit, funcdef_no=3, decl_uid=5618, cgraph_uid=4, symbol_order=4)

CanTp_CancelTransmit (PduIdType CanTpTxSduId)
{
  struct CanTp_ChannelType * ChannelPtr;
  CanTp_TxChannelType Channel;
  Std_ReturnType ret_result;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.7_2;
  short unsigned int _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanTp_TxNSduConfigType * _8;
  unsigned char _9;
  int _10;
  unsigned char _11;
  short unsigned int _12;
  unsigned char _13;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [48.88%]
  else
    goto <bb 4>; [51.12%]

  <bb 3> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 8, 32);
  goto <bb 15>; [100.00%]

  <bb 4> [local count: 548896821]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.7_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.7_2->NumberTxNSdus;
  if (_3 <= CanTpTxSduId_19(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 181135951]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 8, 2);
  goto <bb 15>; [100.00%]

  <bb 6> [local count: 367760870]:
  # DEBUG BEGIN_STMT
  _4 = CanTp_CfgPtr.7_2->TxNSduConfigPtr;
  _5 = (unsigned int) CanTpTxSduId_19(D);
  _6 = _5 * 24;
  _7 = _4 + _6;
  _8 = CanTp_CfgPtr.7_2 + _7;
  _9 = _8->CanTpTc;
  if (_9 == 1)
    goto <bb 7>; [20.24%]
  else
    goto <bb 15>; [79.76%]

  <bb 7> [local count: 74434800]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG IsChannelAvailable => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Channel_20 = _8->Channel;
  # DEBUG Channel => Channel_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (int) Channel_20;
  ChannelPtr_21 = &CanTp_Channel[_10];
  # DEBUG ChannelPtr => ChannelPtr_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].ChannelLockFlag;
  if (_11 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 37217400]:
  # DEBUG ChannelLockSuccess => 0
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 15>; [100.00%]

  <bb 9> [local count: 37217400]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ChannelLockSuccess => 1
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].NSduId;
  if (_12 == CanTpTxSduId_19(D))
    goto <bb 10>; [51.12%]
  else
    goto <bb 13>; [48.88%]

  <bb 10> [local count: 19025535]:
  # DEBUG BEGIN_STMT
  _13 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].State;
  switch (_13) <default: <L22> [33.33%], case 96: <L36> [33.33%], case 97 ... 98: <L35> [33.33%], case 106: <L35> [33.33%], case 112 ... 114: <L36> [33.33%], case 122: <L35> [33.33%], case 228: <L36> [33.33%], case 232: <L36> [33.33%], case 233 ... 234: <L35> [33.33%]>

  <bb 11> [local count: 6341211]:
<L22>:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 8, 160);
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  goto <bb 14>; [100.00%]

  <bb 12> [local count: 6341211]:
<L35>:
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 0
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_21, 1, 1);
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 18191865]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 8, 160);
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 1

  <bb 14> [local count: 37215497]:
  # ret_result_14 = PHI <0(12), 1(13), 1(10), 1(11)>
<L36>:
  # DEBUG ret_result => ret_result_14
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_21);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].ChannelLockFlag = 0;

  <bb 15> [local count: 1073739922]:
  # ret_result_15 = PHI <1(3), 1(5), 1(6), 1(8), ret_result_14(14)>
  # DEBUG ret_result => ret_result_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return ret_result_15;

}



;; Function CanTp_ChannelHandling (CanTp_ChannelHandling, funcdef_no=6, decl_uid=5613, cgraph_uid=7, symbol_order=7)


Symbols to be put in SSA form
{ D.10122 D.10623 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 16
Number of blocks to update: 15 ( 94%)


Removing basic block 4
Merging blocks 15 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 4 3 }
;; 3 succs { 13 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 13 }
;; 7 succs { 8 9 }
;; 8 succs { 12 }
;; 9 succs { 10 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
CanTp_ChannelHandling (CanTp_ChType Channel)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.10623;
  Std_ReturnType RetVal;
  struct CanTp_ChannelType * ChannelPtr;
  int _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  unsigned char _5;
  unsigned char _8;
  unsigned char _26;
  short unsigned int _27;
  short unsigned int _28;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  _1 = (int) Channel_9(D);
  ChannelPtr_10 = &CanTp_Channel[_1];
  # DEBUG ChannelPtr => ChannelPtr_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].State;
  if (_2 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870911]:
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 4> [local count: 536870911]:
  # DEBUG BEGIN_STMT
  # DEBUG ChannelPtr => ChannelPtr_10
  # DEBUG INLINE_ENTRY CanTp_StallHandling
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  _26 = ChannelPtr_10->ChannelLockFlag;
  if (_26 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  _27 = ChannelPtr_10->PostTicks;
  _28 = _27 + 1;
  ChannelPtr_10->PostTicks = _28;

  <bb 6> [local count: 536870911]:
  # RetVal_29 = PHI <0(4), 1(5)>
  # DEBUG RetVal => RetVal_29
  # DEBUG BEGIN_STMT
  _32 = RetVal_29;
  # DEBUG ChannelPtr => NULL
  # DEBUG RetVal => NULL
  RetVal_14 = _32;
  # DEBUG RetVal => RetVal_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (RetVal_14 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 7> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  _3 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].Ticks;
  if (_3 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 8> [local count: 88583700]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TimeoutHandling (ChannelPtr_10);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 9> [local count: 179851755]:
  # DEBUG BEGIN_STMT
  _4 = _3 + 4294967295;
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].Ticks = _4;
  # DEBUG BEGIN_STMT
  _5 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].State;
  _8 = _5 & 96;
  if (_8 == 64)
    goto <bb 10>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 10> [local count: 61149597]:
  # DEBUG BEGIN_STMT
  CanTp_RxStateHandling (ChannelPtr_10);
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 118702158]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TxStateHandling (ChannelPtr_10, 0);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].ChannelLockFlag = 0;

  <bb 12> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_10);

  <bb 13> [local count: 1073741824]:
  return;

}



;; Function CanTp_RxIndication (CanTp_RxIndication, funcdef_no=19, decl_uid=5966, cgraph_uid=20, symbol_order=20)


Symbols to be put in SSA form
{ D.10123 D.10636 D.10643 D.10652 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 95
Number of blocks to update: 94 ( 99%)


Merging blocks 11 and 45
Merging blocks 16 and 64
Merging blocks 26 and 81
Merging blocks 37 and 94
Removing basic block 58
Merging blocks 62 and 44
Merging blocks 79 and 63
Merging blocks 92 and 80
Removing basic block 93
Merging blocks 11 and 46
No longer having address taken: NSduId
No longer having address taken: FrameType

Symbols to be put in SSA form
{ D.8932 D.8933 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 85
Number of blocks to update: 84 ( 99%)


;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
;;
;; Loop 1
;;  header 17, latch 22
;;  depth 1, outer 0
;;  nodes: 17 22 21 19 20 18
;; 2 succs { 3 4 }
;; 3 succs { 84 }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 84 }
;; 7 succs { 8 9 }
;; 8 succs { 84 }
;; 9 succs { 10 11 }
;; 10 succs { 84 }
;; 11 succs { 12 13 }
;; 12 succs { 14 13 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 21 }
;; 18 succs { 20 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 17 23 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 84 }
;; 27 succs { 28 29 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 31 47 }
;; 31 succs { 32 37 }
;; 32 succs { 34 33 }
;; 33 succs { 34 }
;; 34 succs { 35 46 }
;; 35 succs { 36 46 }
;; 36 succs { 46 }
;; 37 succs { 38 42 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 46 }
;; 41 succs { 46 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 48 }
;; 47 succs { 48 }
;; 48 succs { 49 52 }
;; 49 succs { 50 52 }
;; 50 succs { 51 52 }
;; 51 succs { 84 }
;; 52 succs { 53 54 }
;; 53 succs { 56 54 }
;; 54 succs { 55 83 }
;; 55 succs { 56 83 }
;; 56 succs { 57 58 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 61 60 }
;; 60 succs { 61 67 }
;; 61 succs { 63 62 }
;; 62 succs { 63 }
;; 63 succs { 64 65 }
;; 64 succs { 67 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 84 }
;; 68 succs { 75 69 }
;; 69 succs { 70 76 }
;; 70 succs { 71 76 }
;; 71 succs { 73 72 }
;; 72 succs { 73 76 }
;; 73 succs { 75 74 }
;; 74 succs { 75 76 }
;; 75 succs { 79 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 79 }
;; 79 succs { 80 81 }
;; 80 succs { 81 }
;; 81 succs { 82 84 }
;; 82 succs { 84 }
;; 83 succs { 84 }
;; 84 succs { 1 }
CanTp_RxIndication (PduIdType CanTpRxPduId, struct PduInfoType * CanTpRxPduPtr)
{
  uint8 AddressingFormat;
  PduIdType NPduId;
  boolean IgnoreMsgFlag;
  PduIdType N_AI;
  boolean D.10652;
  boolean FCValidLength;
  PduLengthType NPduMaxLength;
  PduLengthType FCMinLength;
  boolean D.10643;
  uint8 N_SA_AE;
  const uint8 AddressingFormat;
  uint8 SearchDirection;
  boolean FoundFlag;
  const struct CanTp_RxNPduTableType * RxNPduTableEntry;
  boolean D.10636;
  boolean OverwrittenCF;
  boolean IgnoreMsgFlag;
  const uint8 * SduDataPtr;
  const uint8 AddressingFormat;
  CanTp_ChType Channel;
  boolean FCValidLength;
  PduLengthType NPduMaxLength;
  boolean RxProcessFlag;
  const struct CanTp_RxNPduTableType * RxNPduTableEntry;
  uint8 FrameType;
  PduIdType NSduId;
  struct CanTp_ChannelType * ChannelPtr;
  unsigned char _1;
  uint8 * _2;
  const struct CanTp_ConfigType * CanTp_CfgPtr.73_3;
  short unsigned int _4;
  short unsigned int _5;
  unsigned char _6;
  const struct CanTp_ConfigType * CanTp_CfgPtr.74_7;
  long unsigned int _8;
  long unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  const CanTp_RxNPduLookupEntryType * _13;
  short unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  unsigned char FrameType.78_18;
  long unsigned int _19;
  short unsigned int NSduId.81_20;
  unsigned int _21;
  unsigned int _22;
  sizetype _23;
  const struct CanTp_TxNSduConfigType * _24;
  long unsigned int _25;
  short unsigned int NSduId.84_26;
  unsigned int _27;
  unsigned int _28;
  sizetype _29;
  const struct CanTp_RxNSduConfigType * _30;
  int _31;
  short unsigned int NSduId.86_32;
  short unsigned int _33;
  long unsigned int _34;
  short unsigned int NSduId.89_35;
  unsigned int _36;
  unsigned int _37;
  sizetype _38;
  const struct CanTp_RxNSduConfigType * _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  short unsigned int _43;
  short unsigned int _44;
  short unsigned int NSduId.93_45;
  unsigned char _46;
  short unsigned int _47;
  unsigned char _48;
  unsigned char FrameType.95_49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  short unsigned int NSduId.100_53;
  short unsigned int NSduId.102_54;
  unsigned char FrameType.103_55;
  unsigned char _72;
  unsigned char _73;
  unsigned char _74;
  const struct CanTp_ConfigType * CanTp_CfgPtr.104_100;
  long unsigned int _101;
  long unsigned int _102;
  unsigned int _103;
  unsigned int _104;
  sizetype _105;
  const CanTp_RxNPduLookupEntryType * _106;
  short unsigned int _107;
  unsigned int _108;
  unsigned int _109;
  sizetype _110;
  int iftmp.108_113;
  sizetype _114;
  const uint8 * _115;
  unsigned char _116;
  unsigned char _117;
  unsigned char _119;
  unsigned char _122;
  short unsigned int _123;
  unsigned char _124;
  unsigned char _125;
  short unsigned int _126;
  const struct CanTp_ConfigType * CanTp_CfgPtr.109_127;
  long unsigned int _128;
  unsigned int _129;
  unsigned int _130;
  sizetype _131;
  const struct CanTp_ConfigType * CanTp_CfgPtr.111_136;
  long unsigned int _137;
  unsigned int _138;
  unsigned int _139;
  sizetype _140;
  const struct CanTp_TxNSduConfigType * _141;
  unsigned char _142;
  unsigned char _144;
  unsigned char _147;
  unsigned char _148;
  const struct CanTp_ConfigType * CanTp_CfgPtr.119_151;
  long unsigned int _152;
  unsigned int _153;
  unsigned int _154;
  sizetype _155;
  const struct CanTp_TxNSduConfigType * _156;
  long unsigned int _158;
  long unsigned int _159;
  unsigned int _160;
  unsigned int _161;
  sizetype _162;
  const CanTp_RxNPduLookupEntryType * _163;
  short unsigned int _164;
  unsigned int _165;
  unsigned int _166;
  sizetype _167;
  const struct CanTp_RxNPduTableType * _168;
  const struct CanTp_ConfigType * CanTp_CfgPtr.125_170;
  long unsigned int _171;
  unsigned int _172;
  unsigned int _173;
  sizetype _174;
  const struct CanTp_RxNSduConfigType * _175;
  unsigned char _179;
  unsigned char _180;
  short unsigned int _182;
  uint8[64] * _185;
  uint8 * _186;
  short unsigned int _187;
  long unsigned int _188;
  unsigned char _189;
  unsigned char _190;
  short unsigned int _191;
  unsigned char _192;

  <bb 2> [local count: 983431638]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [48.88%]
  else
    goto <bb 4>; [51.12%]

  <bb 3> [local count: 480701384]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 32);
  goto <bb 84>; [100.00%]

  <bb 4> [local count: 502730253]:
  # DEBUG BEGIN_STMT
  if (CanTpRxPduPtr_66(D) == 0B)
    goto <bb 6>; [17.43%]
  else
    goto <bb 5>; [82.57%]

  <bb 5> [local count: 415104369]:
  _2 = CanTpRxPduPtr_66(D)->SduDataPtr;
  if (_2 == 0B)
    goto <bb 6>; [30.00%]
  else
    goto <bb 7>; [70.00%]

  <bb 6> [local count: 212157194]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 3);
  goto <bb 84>; [100.00%]

  <bb 7> [local count: 290573058]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.73_3 = CanTp_CfgPtr;
  _4 = CanTp_CfgPtr.73_3->NumberRxNPdus;
  if (_4 <= CanTpRxPduId_67(D))
    goto <bb 8>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 8> [local count: 95889109]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 64);
  goto <bb 84>; [100.00%]

  <bb 9> [local count: 194683949]:
  # DEBUG BEGIN_STMT
  _5 = CanTpRxPduPtr_66(D)->SduLength;
  if (_5 <= 1)
    goto <bb 10>; [41.00%]
  else
    goto <bb 11>; [59.00%]

  <bb 10> [local count: 79820419]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);
  goto <bb 84>; [100.00%]

  <bb 11> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  NSduId_213 = 0;
  # DEBUG NSduId => NSduId_213
  # DEBUG BEGIN_STMT
  FrameType_214 = 0;
  # DEBUG FrameType => FrameType_214
  # DEBUG BEGIN_STMT
  # DEBUG CanTpRxPduId => CanTpRxPduId_67(D)
  # DEBUG CanDataPtr => _2
  # DEBUG NSduId => &NSduId
  # DEBUG FrameType => &FrameType
  # DEBUG INLINE_ENTRY CanTp_FindNSduId
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.104_100 = CanTp_CfgPtr;
  _101 = CanTp_CfgPtr.104_100->RxNPduTablePtr;
  _102 = CanTp_CfgPtr.104_100->RxNPduLookupTablePtr;
  _103 = (unsigned int) CanTpRxPduId_67(D);
  _104 = _103 * 2;
  _105 = _102 + _104;
  _106 = CanTp_CfgPtr.104_100 + _105;
  _107 = *_106;
  _108 = (unsigned int) _107;
  _109 = _108 * 8;
  _110 = _101 + _109;
  RxNPduTableEntry_111 = CanTp_CfgPtr.104_100 + _110;
  # DEBUG RxNPduTableEntry => RxNPduTableEntry_111
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  AddressingFormat_112 = RxNPduTableEntry_111->AddressingFormat;
  # DEBUG AddressingFormat => AddressingFormat_112
  # DEBUG BEGIN_STMT
  if (AddressingFormat_112 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 57431765]:
  if (AddressingFormat_112 != 3)
    goto <bb 14>; [66.00%]
  else
    goto <bb 13>; [34.00%]

  <bb 13> [local count: 76958565]:

  <bb 14> [local count: 114863530]:
  # iftmp.108_113 = PHI <1(12), 0(13)>
  # DEBUG FirstNPCIByte => (const uint8) iftmp.108_113
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG FoundFlag => 0
  # DEBUG BEGIN_STMT
  _114 = (sizetype) iftmp.108_113;
  _115 = _2 + _114;
  _116 = *_115;
  _117 = _116 & 240;
  if (_117 == 48)
    goto <bb 16>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 15> [local count: 75809930]:
  # DEBUG BEGIN_STMT
  # DEBUG SearchDirection => 1

  <bb 16> [local count: 114863530]:
  # SearchDirection_120 = PHI <0(14), 1(15)>
  # DEBUG SearchDirection => NULL

  <bb 17> [local count: 1073741824]:
  # RxNPduTableEntry_118 = PHI <RxNPduTableEntry_111(16), RxNPduTableEntry_132(22)>
  # FoundFlag_135 = PHI <0(16), 0(22)>
  # NSduId_209 = PHI <NSduId_213(16), NSduId_210(22)>
  # FrameType_211 = PHI <FrameType_214(16), FrameType_212(22)>
  # DEBUG FrameType => FrameType_211
  # DEBUG NSduId => NSduId_209
  # DEBUG SearchDirection => SearchDirection_120
  # DEBUG FoundFlag => FoundFlag_135
  # DEBUG RxNPduTableEntry => RxNPduTableEntry_118
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _119 = RxNPduTableEntry_118->Direction;
  if (_119 == SearchDirection_120)
    goto <bb 18>; [34.00%]
  else
    goto <bb 21>; [66.00%]

  <bb 18> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  N_SA_AE_121 = RxNPduTableEntry_118->N_SA_AE;
  # DEBUG N_SA_AE => N_SA_AE_121
  # DEBUG BEGIN_STMT
  if (AddressingFormat_112 == 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 19> [local count: 182536110]:
  _122 = MEM[(const uint8 *)_2];
  if (N_SA_AE_121 == _122)
    goto <bb 20>; [34.00%]
  else
    goto <bb 21>; [66.00%]

  <bb 20> [local count: 244598388]:
  # DEBUG BEGIN_STMT
  # DEBUG FoundFlag => 1
  # DEBUG BEGIN_STMT
  _123 = RxNPduTableEntry_118->Index;
  NSduId_215 = _123;
  # DEBUG NSduId => NSduId_215
  # DEBUG BEGIN_STMT
  _124 = *_115;
  _125 = _124 & 240;
  FrameType_216 = _125;
  # DEBUG FrameType => FrameType_216

  <bb 21> [local count: 1073741824]:
  # FoundFlag_133 = PHI <FoundFlag_135(17), FoundFlag_135(19), 1(20)>
  # NSduId_210 = PHI <NSduId_209(17), NSduId_209(19), NSduId_215(20)>
  # FrameType_212 = PHI <FrameType_211(17), FrameType_211(19), FrameType_216(20)>
  # DEBUG FrameType => FrameType_212
  # DEBUG NSduId => NSduId_210
  # DEBUG FoundFlag => FoundFlag_133
  # DEBUG BEGIN_STMT
  _126 = RxNPduTableEntry_118->Next;
  if (_126 != 0)
    goto <bb 22>; [94.50%]
  else
    goto <bb 23>; [5.50%]

  <bb 22> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.109_127 = CanTp_CfgPtr;
  _128 = CanTp_CfgPtr.109_127->RxNPduTablePtr;
  _129 = (unsigned int) _126;
  _130 = _129 * 8;
  _131 = _128 + _130;
  RxNPduTableEntry_132 = CanTp_CfgPtr.109_127 + _131;
  # DEBUG RxNPduTableEntry => RxNPduTableEntry_132
  # DEBUG BEGIN_STMT
  if (FoundFlag_133 == 0)
    goto <bb 17>; [94.50%]
  else
    goto <bb 23>; [5.50%]

  <bb 23> [local count: 114863532]:
  # FoundFlag_134 = PHI <FoundFlag_133(21), FoundFlag_133(22)>
  # DEBUG BEGIN_STMT
  if (AddressingFormat_112 == 0)
    goto <bb 24>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 24> [local count: 57431766]:
  if (FoundFlag_134 == 0)
    goto <bb 25>; [33.00%]
  else
    goto <bb 26>; [67.00%]

  <bb 25> [local count: 18952483]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 64);

  <bb 26> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  _200 = FoundFlag_134;
  # DEBUG CanTpRxPduId => NULL
  # DEBUG CanDataPtr => NULL
  # DEBUG NSduId => NULL
  # DEBUG FrameType => NULL
  # DEBUG RxNPduTableEntry => NULL
  # DEBUG FoundFlag => NULL
  # DEBUG SearchDirection => NULL
  # DEBUG AddressingFormat => NULL
  # DEBUG N_SA_AE => NULL
  _6 = _200;
  if (_6 != 0)
    goto <bb 27>; [50.00%]
  else
    goto <bb 84>; [50.00%]

  <bb 27> [local count: 57431766]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.74_7 = CanTp_CfgPtr;
  _8 = CanTp_CfgPtr.74_7->RxNPduTablePtr;
  _9 = CanTp_CfgPtr.74_7->RxNPduLookupTablePtr;
  _10 = (unsigned int) CanTpRxPduId_67(D);
  _11 = _10 * 2;
  _12 = _9 + _11;
  _13 = CanTp_CfgPtr.74_7 + _12;
  _14 = *_13;
  _15 = (unsigned int) _14;
  _16 = _15 * 8;
  _17 = _8 + _16;
  RxNPduTableEntry_71 = CanTp_CfgPtr.74_7 + _17;
  # DEBUG RxNPduTableEntry => RxNPduTableEntry_71
  # DEBUG BEGIN_STMT
  # DEBUG RxProcessFlag => 0
  # DEBUG BEGIN_STMT
  # DEBUG NPduMaxLength => 8
  # DEBUG BEGIN_STMT
  # DEBUG FCValidLength => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Result => 1
  # DEBUG BEGIN_STMT
  FrameType.78_18 = FrameType_212;
  if (FrameType.78_18 == 48)
    goto <bb 28>; [34.00%]
  else
    goto <bb 29>; [66.00%]

  <bb 28> [local count: 19526800]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _19 = CanTp_CfgPtr.74_7->TxNSduConfigPtr;
  NSduId.81_20 = NSduId_210;
  _21 = (unsigned int) NSduId.81_20;
  _22 = _21 * 24;
  _23 = _19 + _22;
  _24 = CanTp_CfgPtr.74_7 + _23;
  Channel_76 = _24->Channel;
  # DEBUG Channel => Channel_76
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 30>; [100.00%]

  <bb 29> [local count: 37904966]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = CanTp_CfgPtr.74_7->RxNSduConfigPtr;
  NSduId.84_26 = NSduId_210;
  _27 = (unsigned int) NSduId.84_26;
  _28 = _27 * 26;
  _29 = _25 + _28;
  _30 = CanTp_CfgPtr.74_7 + _29;
  Channel_75 = _30->Channel;
  # DEBUG Channel => Channel_75

  <bb 30> [local count: 57431766]:
  # Channel_59 = PHI <Channel_76(28), Channel_75(29)>
  # DEBUG Channel => Channel_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = (int) Channel_59;
  ChannelPtr_77 = &CanTp_Channel[_31];
  # DEBUG ChannelPtr => ChannelPtr_77
  # DEBUG BEGIN_STMT
  if (FrameType.78_18 == 48)
    goto <bb 31>; [34.00%]
  else
    goto <bb 47>; [66.00%]

  <bb 31> [local count: 19526800]:
  # DEBUG BEGIN_STMT
  AddressingFormat_79 = RxNPduTableEntry_71->AddressingFormat;
  # DEBUG AddressingFormat => AddressingFormat_79
  # DEBUG BEGIN_STMT
  NSduId.86_32 = NSduId_210;
  _33 = CanTpRxPduPtr_66(D)->SduLength;
  # DEBUG NSduId => NSduId.86_32
  # DEBUG SduLength => _33
  # DEBUG AddressingFormat => AddressingFormat_79
  # DEBUG INLINE_ENTRY CanTp_ValidateFCLength
  # DEBUG BEGIN_STMT
  # DEBUG FCValidLength => 0
  # DEBUG BEGIN_STMT
  # DEBUG NPduMaxLength => 8
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.111_136 = CanTp_CfgPtr;
  _137 = CanTp_CfgPtr.111_136->TxNSduConfigPtr;
  _138 = (unsigned int) NSduId.86_32;
  _139 = _138 * 24;
  _140 = _137 + _139;
  _141 = CanTp_CfgPtr.111_136 + _140;
  _142 = _141->PaddingActivation;
  if (_142 == 0)
    goto <bb 32>; [50.00%]
  else
    goto <bb 37>; [50.00%]

  <bb 32> [local count: 9763400]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (AddressingFormat_79 == 0)
    goto <bb 34>; [50.00%]
  else
    goto <bb 33>; [50.00%]

  <bb 33> [local count: 4881700]:
  # DEBUG BEGIN_STMT
  # DEBUG FCMinLength => 4

  <bb 34> [local count: 9763400]:
  # FCMinLength_143 = PHI <3(32), 4(33)>
  # DEBUG FCMinLength => FCMinLength_143
  # DEBUG BEGIN_STMT
  if (_33 >= FCMinLength_143)
    goto <bb 35>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 35> [local count: 4881700]:
  if (_33 <= 8)
    goto <bb 36>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 36> [local count: 2440850]:
  # DEBUG BEGIN_STMT
  # DEBUG FCValidLength => 1
  goto <bb 46>; [100.00%]

  <bb 37> [local count: 9763400]:
  # DEBUG BEGIN_STMT
  if (_142 == 1)
    goto <bb 38>; [34.00%]
  else
    goto <bb 42>; [66.00%]

  <bb 38> [local count: 3319556]:
  # DEBUG BEGIN_STMT
  if (_33 > 8)
    goto <bb 39>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 39> [local count: 1659778]:
  # DEBUG BEGIN_STMT
  _144 = _141->LSduMaxLength;
  NPduMaxLength_145 = (PduLengthType) _144;
  # DEBUG NPduMaxLength => NPduMaxLength_145

  <bb 40> [local count: 3319556]:
  # NPduMaxLength_146 = PHI <8(38), NPduMaxLength_145(39)>
  # DEBUG NPduMaxLength => NPduMaxLength_146
  # DEBUG BEGIN_STMT
  if (_33 == NPduMaxLength_146)
    goto <bb 41>; [34.00%]
  else
    goto <bb 46>; [66.00%]

  <bb 41> [local count: 1128649]:
  # DEBUG BEGIN_STMT
  # DEBUG FCValidLength => 1
  goto <bb 46>; [100.00%]

  <bb 42> [local count: 6443844]:
  # DEBUG BEGIN_STMT
  _147 = _141->CanIdType;
  _148 = _147 + 254;
  if (_148 <= 1)
    goto <bb 43>; [41.00%]
  else
    goto <bb 44>; [59.00%]

  <bb 43> [local count: 2641976]:
  # DEBUG BEGIN_STMT
  # DEBUG NPduMaxLength => 64

  <bb 44> [local count: 6443844]:
  # NPduMaxLength_149 = PHI <8(42), 64(43)>
  # DEBUG NPduMaxLength => NPduMaxLength_149
  # DEBUG BEGIN_STMT
  if (_33 == NPduMaxLength_149)
    goto <bb 45>; [34.00%]
  else
    goto <bb 46>; [66.00%]

  <bb 45> [local count: 2190907]:
  # DEBUG BEGIN_STMT
  # DEBUG FCValidLength => 1

  <bb 46> [local count: 19526800]:
  # FCValidLength_150 = PHI <0(34), 0(35), 1(36), 0(40), 1(41), 0(44), 1(45)>
  # DEBUG FCValidLength => FCValidLength_150
  # DEBUG BEGIN_STMT
  _201 = FCValidLength_150;
  # DEBUG NSduId => NULL
  # DEBUG SduLength => NULL
  # DEBUG AddressingFormat => NULL
  # DEBUG FCMinLength => NULL
  # DEBUG NPduMaxLength => NULL
  # DEBUG FCValidLength => NULL
  FCValidLength_80 = _201;
  # DEBUG FCValidLength => FCValidLength_80
  goto <bb 48>; [100.00%]

  <bb 47> [local count: 37904966]:
  # DEBUG BEGIN_STMT
  _34 = CanTp_CfgPtr.74_7->RxNSduConfigPtr;
  NSduId.89_35 = NSduId_210;
  _36 = (unsigned int) NSduId.89_35;
  _37 = _36 * 26;
  _38 = _34 + _37;
  _39 = CanTp_CfgPtr.74_7 + _38;
  _40 = _39->NPduLength;
  NPduMaxLength_78 = (PduLengthType) _40;
  # DEBUG NPduMaxLength => NPduMaxLength_78

  <bb 48> [local count: 57431766]:
  # NPduMaxLength_57 = PHI <8(46), NPduMaxLength_78(47)>
  # FCValidLength_58 = PHI <FCValidLength_80(46), 0(47)>
  # DEBUG FCValidLength => FCValidLength_58
  # DEBUG NPduMaxLength => NPduMaxLength_57
  # DEBUG BEGIN_STMT
  if (FrameType.78_18 == 16)
    goto <bb 49>; [34.00%]
  else
    goto <bb 52>; [66.00%]

  <bb 49> [local count: 19526800]:
  _41 = RxNPduTableEntry_71->AddressingFormat;
  _42 = _41 + 255;
  if (_42 <= 1)
    goto <bb 50>; [41.00%]
  else
    goto <bb 52>; [59.00%]

  <bb 50> [local count: 8005988]:
  _43 = CanTpRxPduPtr_66(D)->SduLength;
  if (_43 <= 2)
    goto <bb 51>; [33.00%]
  else
    goto <bb 52>; [67.00%]

  <bb 51> [local count: 2641976]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);
  goto <bb 84>; [100.00%]

  <bb 52> [local count: 54789790]:
  # DEBUG BEGIN_STMT
  if (FrameType.78_18 == 48)
    goto <bb 53>; [34.00%]
  else
    goto <bb 54>; [66.00%]

  <bb 53> [local count: 18628529]:
  if (FCValidLength_58 == 1)
    goto <bb 56>; [34.00%]
  else
    goto <bb 54>; [66.00%]

  <bb 54> [local count: 48456090]:
  if (FrameType.78_18 != 48)
    goto <bb 55>; [79.76%]
  else
    goto <bb 83>; [20.24%]

  <bb 55> [local count: 38648577]:
  _44 = CanTpRxPduPtr_66(D)->SduLength;
  if (_44 <= NPduMaxLength_57)
    goto <bb 56>; [50.00%]
  else
    goto <bb 83>; [50.00%]

  <bb 56> [local count: 25657988]:
  # DEBUG BEGIN_STMT
  SduDataPtr_83 = CanTpRxPduPtr_66(D)->SduDataPtr;
  # DEBUG SduDataPtr => SduDataPtr_83
  # DEBUG BEGIN_STMT
  NSduId.93_45 = NSduId_210;
  _46 = *SduDataPtr_83;
  _47 = (short unsigned int) _46;
  # DEBUG ChannelPtr => ChannelPtr_77
  # DEBUG NSduId => NSduId.93_45
  # DEBUG CanDataNAI => _47
  # DEBUG FrameType => FrameType.78_18
  # DEBUG INLINE_ENTRY CanTp_ValidateNAI
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG IgnoreMsgFlag => 0
  # DEBUG BEGIN_STMT
  if (FrameType.78_18 == 48)
    goto <bb 57>; [34.00%]
  else
    goto <bb 58>; [66.00%]

  <bb 57> [local count: 8723716]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.119_151 = CanTp_CfgPtr;
  _152 = CanTp_CfgPtr.119_151->TxNSduConfigPtr;
  _153 = (unsigned int) NSduId.93_45;
  _154 = _153 * 24;
  _155 = _152 + _154;
  _156 = CanTp_CfgPtr.119_151 + _155;
  NPduId_157 = _156->NPduIdFc;
  # DEBUG NPduId => NPduId_157
  # DEBUG BEGIN_STMT
  _158 = CanTp_CfgPtr.119_151->RxNPduTablePtr;
  _159 = CanTp_CfgPtr.119_151->RxNPduLookupTablePtr;
  _160 = (unsigned int) NPduId_157;
  _161 = _160 * 2;
  _162 = _159 + _161;
  _163 = CanTp_CfgPtr.119_151 + _162;
  _164 = *_163;
  _165 = (unsigned int) _164;
  _166 = _165 * 8;
  _167 = _158 + _166;
  _168 = CanTp_CfgPtr.119_151 + _167;
  AddressingFormat_169 = _168->AddressingFormat;
  # DEBUG AddressingFormat => AddressingFormat_169
  goto <bb 59>; [100.00%]

  <bb 58> [local count: 16934272]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.125_170 = CanTp_CfgPtr;
  _171 = CanTp_CfgPtr.125_170->RxNSduConfigPtr;
  _172 = (unsigned int) NSduId.93_45;
  _173 = _172 * 26;
  _174 = _171 + _173;
  _175 = CanTp_CfgPtr.125_170 + _174;
  NPduId_176 = _175->NPduIdxF;
  # DEBUG NPduId => NPduId_176
  # DEBUG BEGIN_STMT
  AddressingFormat_177 = _175->AddressingFormat;
  # DEBUG AddressingFormat => AddressingFormat_177

  <bb 59> [local count: 25657988]:
  # AddressingFormat_178 = PHI <AddressingFormat_169(57), AddressingFormat_177(58)>
  # NPduId_184 = PHI <NPduId_157(57), NPduId_176(58)>
  # DEBUG NPduId => NPduId_184
  # DEBUG AddressingFormat => AddressingFormat_178
  # DEBUG BEGIN_STMT
  if (FrameType.78_18 == 16)
    goto <bb 61>; [34.00%]
  else
    goto <bb 60>; [66.00%]

  <bb 60> [local count: 16934272]:
  if (FrameType.78_18 == 0)
    goto <bb 61>; [50.00%]
  else
    goto <bb 67>; [50.00%]

  <bb 61> [local count: 17190852]:
  # DEBUG BEGIN_STMT
  # DEBUG N_AI => 0
  # DEBUG BEGIN_STMT
  if (AddressingFormat_178 == 0)
    goto <bb 63>; [50.00%]
  else
    goto <bb 62>; [50.00%]

  <bb 62> [local count: 8595426]:
  # DEBUG BEGIN_STMT
  # DEBUG N_AI => _47

  <bb 63> [local count: 17190852]:
  # N_AI_181 = PHI <NPduId_184(61), _47(62)>
  # DEBUG N_AI => N_AI_181
  # DEBUG BEGIN_STMT
  _179 = ChannelPtr_77->ConnectionFlags;
  _180 = _179 & 2;
  if (_180 == 0)
    goto <bb 64>; [50.00%]
  else
    goto <bb 65>; [50.00%]

  <bb 64> [local count: 8595426]:
  # DEBUG BEGIN_STMT
  ChannelPtr_77->RxNAILock = N_AI_181;
  goto <bb 67>; [100.00%]

  <bb 65> [local count: 8595426]:
  # DEBUG BEGIN_STMT
  _182 = ChannelPtr_77->RxNAILock;
  if (N_AI_181 != _182)
    goto <bb 66>; [66.00%]
  else
    goto <bb 67>; [34.00%]

  <bb 66> [local count: 5672981]:
  # DEBUG BEGIN_STMT
  # DEBUG IgnoreMsgFlag => 1

  <bb 67> [local count: 25657988]:
  # IgnoreMsgFlag_183 = PHI <0(60), 0(64), 0(65), 1(66)>
  # DEBUG IgnoreMsgFlag => IgnoreMsgFlag_183
  # DEBUG BEGIN_STMT
  _203 = IgnoreMsgFlag_183;
  # DEBUG ChannelPtr => NULL
  # DEBUG NSduId => NULL
  # DEBUG CanDataNAI => NULL
  # DEBUG FrameType => NULL
  # DEBUG N_AI => NULL
  # DEBUG IgnoreMsgFlag => NULL
  # DEBUG NPduId => NULL
  # DEBUG AddressingFormat => NULL
  IgnoreMsgFlag_85 = _203;
  # DEBUG IgnoreMsgFlag => IgnoreMsgFlag_85
  # DEBUG BEGIN_STMT
  if (IgnoreMsgFlag_85 == 0)
    goto <bb 68>; [33.00%]
  else
    goto <bb 84>; [67.00%]

  <bb 68> [local count: 8467136]:
  # DEBUG BEGIN_STMT
  # DEBUG OverwrittenCF => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _48 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_31].ChannelLockFlag;
  if (_48 == 0)
    goto <bb 75>; [50.00%]
  else
    goto <bb 69>; [50.00%]

  <bb 69> [local count: 4233568]:
  FrameType.95_49 = FrameType_212;
  if (FrameType.95_49 != 48)
    goto <bb 70>; [66.00%]
  else
    goto <bb 76>; [34.00%]

  <bb 70> [local count: 2794155]:
  if (FrameType.95_49 != 32)
    goto <bb 71>; [66.00%]
  else
    goto <bb 76>; [34.00%]

  <bb 71> [local count: 1844142]:
  if (FrameType.95_49 != 0)
    goto <bb 73>; [50.00%]
  else
    goto <bb 72>; [50.00%]

  <bb 72> [local count: 922071]:
  _50 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_31].ConnectionFlags;
  _72 = _50 & 4;
  if (_72 == 0)
    goto <bb 73>; [50.00%]
  else
    goto <bb 76>; [50.00%]

  <bb 73> [local count: 1383107]:
  if (FrameType.95_49 != 16)
    goto <bb 75>; [66.00%]
  else
    goto <bb 74>; [34.00%]

  <bb 74> [local count: 470256]:
  _51 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_31].ConnectionFlags;
  _73 = _51 & 4;
  if (_73 == 0)
    goto <bb 75>; [50.00%]
  else
    goto <bb 76>; [50.00%]

  <bb 75> [local count: 5381547]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_31].ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RxProcessFlag => 1
  goto <bb 79>; [100.00%]

  <bb 76> [local count: 3085590]:
  # DEBUG BEGIN_STMT
  if (FrameType.95_49 == 32)
    goto <bb 77>; [34.00%]
  else
    goto <bb 78>; [66.00%]

  <bb 77> [local count: 1049100]:
  _52 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_31].PostFlag;
  _74 = _52 & 1;

  <bb 78> [local count: 3085590]:
  # OverwrittenCF_60 = PHI <0(76), _74(77)>
  # DEBUG OverwrittenCF => OverwrittenCF_60
  # DEBUG BEGIN_STMT
  NSduId.100_53 = NSduId_210;
  # DEBUG ChannelPtr => ChannelPtr_77
  # DEBUG CanTpRxPduPtr => CanTpRxPduPtr_66(D)
  # DEBUG NSduId => NSduId.100_53
  # DEBUG FrameType => FrameType.95_49
  # DEBUG INLINE_ENTRY CanTp_PostponeRxFrame
  # DEBUG BEGIN_STMT
  _185 = &ChannelPtr_77->PostRxIndData;
  _186 = MEM[(const struct PduInfoType *)CanTpRxPduPtr_66(D)].SduDataPtr;
  _187 = MEM[(const struct PduInfoType *)CanTpRxPduPtr_66(D)].SduLength;
  _188 = (long unsigned int) _187;
  TS_MemCpy32 (_185, _186, _188);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _189 = ChannelPtr_77->PostFlag;
  _190 = _189 | 1;
  ChannelPtr_77->PostFlag = _190;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_77->PostRxIndNSduId = NSduId.100_53;
  # DEBUG BEGIN_STMT
  _191 = MEM[(const struct PduInfoType *)CanTpRxPduPtr_66(D)].SduLength;
  _192 = (unsigned char) _191;
  ChannelPtr_77->PostRxIndLength = _192;
  # DEBUG BEGIN_STMT
  ChannelPtr_77->PostRxIndFrameType = FrameType.95_49;

  <bb 79> [local count: 8467136]:
  # RxProcessFlag_56 = PHI <1(75), 0(78)>
  # OverwrittenCF_61 = PHI <0(75), OverwrittenCF_60(78)>
  # DEBUG ChannelPtr => NULL
  # DEBUG CanTpRxPduPtr => NULL
  # DEBUG NSduId => NULL
  # DEBUG FrameType => NULL
  # DEBUG OverwrittenCF => OverwrittenCF_61
  # DEBUG RxProcessFlag => RxProcessFlag_56
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (OverwrittenCF_61 == 1)
    goto <bb 80>; [20.24%]
  else
    goto <bb 81>; [79.76%]

  <bb 80> [local count: 1713748]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 4);

  <bb 81> [local count: 8467136]:
  # DEBUG BEGIN_STMT
  if (RxProcessFlag_56 == 1)
    goto <bb 82>; [20.24%]
  else
    goto <bb 84>; [79.76%]

  <bb 82> [local count: 1713748]:
  # DEBUG BEGIN_STMT
  NSduId.102_54 = NSduId_210;
  FrameType.103_55 = FrameType_212;
  CanTp_ProcessRxFrame (ChannelPtr_77, CanTpRxPduPtr_66(D), NSduId.102_54, FrameType.103_55);
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_77);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_31].ChannelLockFlag = 0;
  goto <bb 84>; [100.00%]

  <bb 83> [local count: 29131801]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 84> [local count: 983431640]:
  # DEBUG BEGIN_STMT
  # DEBUG D#68 => {CLOBBER}
  # DEBUG NSduId => D#68
  # DEBUG D#69 => {CLOBBER}
  # DEBUG FrameType => D#69
  return;

}



;; Function CanTp_STminCallback (CanTp_STminCallback, funcdef_no=34, decl_uid=5926, cgraph_uid=35, symbol_order=35)

CanTp_STminCallback (CanTp_ChType Channel)
{
  struct CanTp_ChannelType * ChannelPtr;
  int _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG STminCallbackFlag => 0
  # DEBUG BEGIN_STMT
  _1 = (int) Channel_6(D);
  ChannelPtr_7 = &CanTp_Channel[_1];
  # DEBUG ChannelPtr => ChannelPtr_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].ChannelLockFlag;
  if (_2 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].PostFlag;
  _4 = _3 | 4;
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].PostFlag = _4;
  # DEBUG BEGIN_STMT
  # DEBUG STminCallbackFlag => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG STminCallbackFlag => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_STminTimeoutHandling (ChannelPtr_7);
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_7);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_1].ChannelLockFlag = 0;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanTp_MainFunction (CanTp_MainFunction, funcdef_no=4, decl_uid=5611, cgraph_uid=5, symbol_order=5)

CanTp_MainFunction ()
{
  uint32 MfCounterTicks;
  CanTp_ChType No_of_nonIdleChannels;
  CanTp_ChType Channel;
  unsigned char _1;
  int _2;
  const struct CanTp_ConfigType * CanTp_CfgPtr.13_3;
  unsigned char _4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.13_5;

  <bb 2> [local count: 694774116]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG No_of_nonIdleChannels => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  No_of_nonIdleChannels_14 = CanTp_NonIdleChannelCounter;
  # DEBUG No_of_nonIdleChannels => No_of_nonIdleChannels_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 3> [local count: 236223199]:
  if (No_of_nonIdleChannels_14 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 12> [local count: 118111600]:
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 955630219]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (int) Channel_6;
  # DEBUG D#14 => &CanTp_Channel[_2]
  # DEBUG ChannelPtr => D#14
  # DEBUG BEGIN_STMT
  MfCounterTicks_19 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_2].MfCounterTicks;
  # DEBUG MfCounterTicks => MfCounterTicks_19
  # DEBUG BEGIN_STMT
  if (MfCounterTicks_19 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 477815109]:
  # DEBUG BEGIN_STMT
  MfCounterTicks_20 = MfCounterTicks_19 + 4294967295;
  # DEBUG MfCounterTicks => MfCounterTicks_20
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_2].MfCounterTicks = MfCounterTicks_20;
  # DEBUG BEGIN_STMT
  if (MfCounterTicks_20 == 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 157678986]:
  # DEBUG BEGIN_STMT
  CanTp_STminCallback (Channel_6);

  <bb 7> [local count: 955630219]:
  # DEBUG BEGIN_STMT
  Channel_23 = Channel_6 + 1;
  # DEBUG Channel => Channel_23

  <bb 8> [local count: 1073741820]:
  # Channel_6 = PHI <Channel_23(7), 0(12)>
  # DEBUG Channel => Channel_6
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.13_3 = CanTp_CfgPtr;
  _4 = CanTp_CfgPtr.13_3->NumberOfTxChannels;
  if (_4 > Channel_6)
    goto <bb 4>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111600]:
  # CanTp_CfgPtr.13_5 = PHI <CanTp_CfgPtr.13_3(8)>
  # DEBUG BEGIN_STMT
  Channel_16 = CanTp_CfgPtr.13_5->NumberOfChannels;
  # DEBUG Channel => Channel_16

  <bb 10> [local count: 1073741824]:
  # Channel_7 = PHI <Channel_16(9), Channel_17(13)>
  # DEBUG Channel => Channel_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Channel_17 = Channel_7 + 255;
  # DEBUG Channel => Channel_17
  # DEBUG BEGIN_STMT
  CanTp_ChannelHandling (Channel_17);
  # DEBUG BEGIN_STMT
  if (Channel_17 != 0)
    goto <bb 13>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 13> [local count: 955630224]:
  goto <bb 10>; [100.00%]

  <bb 11> [local count: 694774117]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanTp_Transmit (CanTp_Transmit, funcdef_no=38, decl_uid=5616, cgraph_uid=39, symbol_order=39)

CanTp_Transmit (PduIdType CanTpTxSduId, const struct PduInfoType * CanTpTxInfoPtr)
{
  uint8 MaxUnSegMsgLength;
  uint8 NPciSize_SF;
  Std_ReturnType ValidLength;
  CanTp_TxChannelType Channel;
  struct CanTp_ChannelType * ChannelPtr;
  Std_ReturnType Ret;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.166_2;
  short unsigned int _3;
  short unsigned int _4;
  long unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  sizetype _8;
  const struct CanTp_TxNSduConfigType * _9;
  int _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  short unsigned int _17;
  short unsigned int _18;
  const struct CanTp_ConfigType * CanTp_CfgPtr.178_19;
  long unsigned int _20;
  sizetype _21;
  const struct CanTp_TxNSduConfigType * _22;
  short unsigned int _23;
  long unsigned int _24;
  unsigned char CanTp_NonIdleChannelCounter.180_25;
  unsigned char _26;
  const struct CanTp_ConfigType * CanTp_CfgPtr.181_27;
  long unsigned int _28;
  sizetype _29;
  const struct CanTp_TxNSduConfigType * _30;
  unsigned char _31;
  short unsigned int _32;
  long unsigned int _33;
  unsigned char CanTp_NonIdleChannelCounter.185_34;
  unsigned char _35;
  int iftmp.173_41;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [48.88%]
  else
    goto <bb 4>; [51.12%]

  <bb 3> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 32);
  goto <bb 26>; [100.00%]

  <bb 4> [local count: 548896821]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.166_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.166_2->NumberTxNSdus;
  if (_3 <= CanTpTxSduId_46(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 181135951]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 2);
  goto <bb 26>; [100.00%]

  <bb 6> [local count: 367760870]:
  # DEBUG BEGIN_STMT
  if (CanTpTxInfoPtr_47(D) == 0B)
    goto <bb 7>; [17.43%]
  else
    goto <bb 8>; [82.57%]

  <bb 7> [local count: 64100720]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 3);
  goto <bb 26>; [100.00%]

  <bb 8> [local count: 303660150]:
  # DEBUG BEGIN_STMT
  _4 = CanTpTxInfoPtr_47(D)->SduLength;
  if (_4 == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 100207850]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 112);
  goto <bb 26>; [100.00%]

  <bb 10> [local count: 203452301]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ChannelFound => 1
  # DEBUG BEGIN_STMT
  # DEBUG ValidLength => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = CanTp_CfgPtr.166_2->TxNSduConfigPtr;
  _6 = (unsigned int) CanTpTxSduId_46(D);
  _7 = _6 * 24;
  _8 = _5 + _7;
  _9 = CanTp_CfgPtr.166_2 + _8;
  Channel_48 = _9->Channel;
  # DEBUG Channel => Channel_48
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (int) Channel_48;
  ChannelPtr_49 = &CanTp_Channel[_10];
  # DEBUG ChannelPtr => ChannelPtr_49
  # DEBUG BEGIN_STMT
  _11 = _9->LSduMaxLength;
  if (_11 > 8)
    goto <bb 12>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 101726150]:
  # DEBUG BEGIN_STMT
  # DEBUG NPciSize_SF => 1

  <bb 12> [local count: 203452301]:
  # NPciSize_SF_40 = PHI <2(10), 1(11)>
  # DEBUG NPciSize_SF => NPciSize_SF_40
  # DEBUG BEGIN_STMT
  _12 = _11 - NPciSize_SF_40;
  _13 = _9->AddressingFormat;
  if (_13 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 101726150]:
  if (_13 != 3)
    goto <bb 15>; [66.00%]
  else
    goto <bb 14>; [34.00%]

  <bb 14> [local count: 136313042]:

  <bb 15> [local count: 203452301]:
  # iftmp.173_41 = PHI <1(13), 0(14)>
  _14 = (unsigned char) iftmp.173_41;
  MaxUnSegMsgLength_50 = _12 - _14;
  # DEBUG MaxUnSegMsgLength => MaxUnSegMsgLength_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].State;
  if (_15 == 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 16> [local count: 101726150]:
  _16 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].ChannelLockFlag;
  if (_16 == 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 17> [local count: 50863075]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = CanTpTxInfoPtr_47(D)->SduLength;
  _18 = (short unsigned int) MaxUnSegMsgLength_50;
  if (_17 <= _18)
    goto <bb 18>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 18> [local count: 25431538]:
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].NSduId = CanTpTxSduId_46(D);
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].TotalLength = _17;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.178_19 = CanTp_CfgPtr;
  _20 = CanTp_CfgPtr.178_19->TxNSduConfigPtr;
  _21 = _7 + _20;
  _22 = CanTp_CfgPtr.178_19 + _21;
  _23 = _22->N_Cs;
  _24 = (long unsigned int) _23;
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].Ticks = _24;
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.180_25 = CanTp_NonIdleChannelCounter;
  _26 = CanTp_NonIdleChannelCounter.180_25 + 1;
  CanTp_NonIdleChannelCounter = _26;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].State = 96;
  # DEBUG BEGIN_STMT
  # DEBUG ValidLength => 0
  goto <bb 22>; [100.00%]

  <bb 19> [local count: 25431538]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.181_27 = CanTp_CfgPtr;
  _28 = CanTp_CfgPtr.181_27->TxNSduConfigPtr;
  _29 = _7 + _28;
  _30 = CanTp_CfgPtr.181_27 + _29;
  _31 = _30->Tatype;
  if (_31 != 1)
    goto <bb 20>; [66.00%]
  else
    goto <bb 22>; [34.00%]

  <bb 20> [local count: 16784815]:
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].NSduId = CanTpTxSduId_46(D);
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].TotalLength = _17;
  # DEBUG BEGIN_STMT
  _32 = _30->N_Cs;
  _33 = (long unsigned int) _32;
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].Ticks = _33;
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.185_34 = CanTp_NonIdleChannelCounter;
  _35 = CanTp_NonIdleChannelCounter.185_34 + 1;
  CanTp_NonIdleChannelCounter = _35;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].State = 97;
  # DEBUG BEGIN_STMT
  # DEBUG ValidLength => 0

  <bb 22> [local count: 203452301]:
  # Ret_36 = PHI <1(15), 1(16), 0(19), 0(18), 0(20)>
  # ValidLength_39 = PHI <1(15), 1(16), 1(19), 0(18), 0(20)>
  # DEBUG ValidLength => ValidLength_39
  # DEBUG Ret => Ret_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Ret_36 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 23> [local count: 101726150]:
  # DEBUG BEGIN_STMT
  if (ValidLength_39 == 1)
    goto <bb 24>; [20.24%]
  else
    goto <bb 25>; [79.76%]

  <bb 24> [local count: 20589373]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 144);
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1

  <bb 25> [local count: 101726150]:
  # Ret_37 = PHI <0(23), 1(24)>
  # DEBUG Ret => Ret_37
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_49);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_10].ChannelLockFlag = 0;

  <bb 26> [local count: 1073741824]:
  # Ret_38 = PHI <1(3), 1(5), 1(7), 1(9), Ret_36(22), Ret_37(25)>
  # DEBUG Ret => Ret_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return Ret_38;

}



;; Function CanTp_TxConfirmation (CanTp_TxConfirmation, funcdef_no=45, decl_uid=5968, cgraph_uid=46, symbol_order=46)

CanTp_TxConfirmation (PduIdType CanTpTxPduId)
{
  CanTp_ChType ChannelLcl;
  CanTp_ChType Channel;
  struct CanTp_ChannelType * ChannelPtr;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.207_2;
  short unsigned int _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanTp_TxNPduToTpChannelType * _8;
  int _9;
  unsigned char _10;
  int _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _18;
  unsigned int _25;
  unsigned int _26;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TxConfirmFlag => 0
  # DEBUG BEGIN_STMT
  # DEBUG PduHandled => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [48.88%]
  else
    goto <bb 4>; [51.12%]

  <bb 3> [local count: 524845003]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 64, 32);
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 548896820]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.207_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.207_2->NumberTxConfNPdus;
  if (_3 > CanTpTxPduId_20(D))
    goto <bb 6>; [67.00%]
  else
    goto <bb 5>; [33.00%]

  <bb 5> [local count: 181135950]:
  # DEBUG PduHandled => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 64, 48);
  goto <bb 16>; [100.00%]

  <bb 6> [local count: 367760869]:
  # DEBUG BEGIN_STMT
  _4 = CanTp_CfgPtr.207_2->TxNPduToTpChannelPtr;
  _5 = (unsigned int) CanTpTxPduId_20(D);
  _6 = _5 * 2;
  _7 = _4 + _6;
  _8 = CanTp_CfgPtr.207_2 + _7;
  Channel_22 = _8->Tx_Chan;
  # DEBUG Channel => Channel_22
  # DEBUG BEGIN_STMT
  if (Channel_22 != 255)
    goto <bb 7>; [66.00%]
  else
    goto <bb 10>; [34.00%]

  <bb 7> [local count: 242722173]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelLcl_24 = _8->Rx_Chan;
  # DEBUG ChannelLcl => ChannelLcl_24
  # DEBUG BEGIN_STMT
  if (ChannelLcl_24 != 255)
    goto <bb 8>; [66.00%]
  else
    goto <bb 11>; [34.00%]

  <bb 8> [local count: 160196634]:
  # DEBUG BEGIN_STMT
  _9 = (int) ChannelLcl_24;
  # DEBUG D#15 => &CanTp_Channel[_9]
  # DEBUG ChannelPtrLcl => D#15
  # DEBUG BEGIN_STMT
  _10 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_9].State;
  _25 = (unsigned int) _10;
  _26 = _25 + 4294967212;
  if (_26 <= 2)
    goto <bb 9>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 9> [local count: 80098317]:
<L5>:
  # DEBUG BEGIN_STMT
  # DEBUG Channel => ChannelLcl_24
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 125038695]:
  # DEBUG BEGIN_STMT
  Channel_23 = _8->Rx_Chan;
  # DEBUG Channel => Channel_23

  <bb 11> [local count: 367760870]:
  # Channel_16 = PHI <ChannelLcl_24(9), Channel_23(10), Channel_22(7), Channel_22(8)>
  # DEBUG Channel => Channel_16
  # DEBUG BEGIN_STMT
  _11 = (int) Channel_16;
  ChannelPtr_27 = &CanTp_Channel[_11];
  # DEBUG ChannelPtr => ChannelPtr_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_11].ChannelLockFlag;
  if (_12 != 0)
    goto <bb 12>; [67.00%]
  else
    goto <bb 15>; [33.00%]

  <bb 12> [local count: 246399782]:
  # DEBUG BEGIN_STMT
  _13 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_11].State;
  _18 = _13 & 152;
  if (_18 == 16)
    goto <bb 14>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 13> [local count: 162623856]:
  # DEBUG TxConfirmFlag => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PduHandled => 1
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 14> [local count: 83775926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_11].PostFlag;
  _15 = _14 | 2;
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_11].PostFlag = _15;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_11].PostTxConfNPduId = CanTpTxPduId_20(D);
  # DEBUG TxConfirmFlag => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PduHandled => 1
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 121361087]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_11].ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TxConfirmFlag => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_ProcessTxPdu (ChannelPtr_27, CanTpTxPduId_20(D));
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_27);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_11].ChannelLockFlag = 0;
  # DEBUG PduHandled => 1
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanTp_CancelReceive (CanTp_CancelReceive, funcdef_no=51, decl_uid=5620, cgraph_uid=52, symbol_order=52)

CanTp_CancelReceive (PduIdType CanTpRxSduId)
{
  uint8 MaxCfLength;
  struct CanTp_ChannelType * ChannelPtr;
  CanTp_ChType Channel;
  Std_ReturnType ret_result;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.251_2;
  short unsigned int _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanTp_RxNSduConfigType * _8;
  int _9;
  unsigned char _10;
  short unsigned int _11;
  const struct CanTp_ConfigType * CanTp_CfgPtr.254_12;
  long unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  sizetype _16;
  const struct CanTp_RxNSduConfigType * _17;
  unsigned char _18;
  unsigned char _19;
  short unsigned int _20;
  int _21;
  short unsigned int _22;
  int _23;
  int _24;
  int _25;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [48.88%]
  else
    goto <bb 4>; [51.12%]

  <bb 3> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 9, 32);
  goto <bb 17>; [100.00%]

  <bb 4> [local count: 548896821]:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.251_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.251_2->NumberRxNSdus;
  if (_3 <= CanTpRxSduId_32(D))
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 274448410]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 9, 2);
  goto <bb 17>; [100.00%]

  <bb 6> [local count: 274448410]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ChannelLockedFound => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = CanTp_CfgPtr.251_2->RxNSduConfigPtr;
  _5 = (unsigned int) CanTpRxSduId_32(D);
  _6 = _5 * 26;
  _7 = _4 + _6;
  _8 = CanTp_CfgPtr.251_2 + _7;
  Channel_33 = _8->Channel;
  # DEBUG Channel => Channel_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = (int) Channel_33;
  ChannelPtr_34 = &CanTp_Channel[_9];
  # DEBUG ChannelPtr => ChannelPtr_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_9].ChannelLockFlag;
  if (_10 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 137224205]:
  # DEBUG ChannelLockSuccess => 0
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 17>; [100.00%]

  <bb 8> [local count: 137224205]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_9].ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ChannelLockSuccess => 1
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_9].NSduId;
  if (_11 == CanTpRxSduId_32(D))
    goto <bb 9>; [51.12%]
  else
    goto <bb 15>; [48.88%]

  <bb 9> [local count: 70149014]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.254_12 = CanTp_CfgPtr;
  _13 = CanTp_CfgPtr.254_12->RxNSduConfigPtr;
  _14 = (unsigned int) _11;
  _15 = _14 * 26;
  _16 = _13 + _15;
  _17 = CanTp_CfgPtr.254_12 + _16;
  _18 = _17->AddressingFormat;
  if (_18 == 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 35074507]:
  # DEBUG BEGIN_STMT
  # DEBUG MaxCfLength => 6

  <bb 11> [local count: 70149014]:
  # MaxCfLength_28 = PHI <7(9), 6(10)>
  # DEBUG MaxCfLength => MaxCfLength_28
  # DEBUG BEGIN_STMT
  _19 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_9].State;
  switch (_19) <default: <L28> [25.00%], case 64: <L42> [25.00%], case 65 ... 66: <L43> [25.00%], case 76 ... 78: <L43> [25.00%], case 84 ... 86: <L42> [25.00%], case 194: <L20> [25.00%], case 204 ... 206: <L43> [25.00%]>

  <bb 12> [local count: 17537253]:
<L20>:
  # DEBUG BEGIN_STMT
  _20 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_9].TotalLength;
  _21 = (int) _20;
  _22 = MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_9].ProcessedLength;
  _23 = (int) _22;
  _24 = _21 - _23;
  _25 = (int) MaxCfLength_28;
  if (_24 <= _25)
    goto <bb 16>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 17537253]:
<L28>:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 9, 160);
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 1
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 14> [local count: 26305880]:
<L43>:
  # DEBUG ret_result => NULL
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_34, 1, 1);
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 67075191]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 9, 160);
  # DEBUG BEGIN_STMT
  # DEBUG ret_result => 1

  <bb 16> [local count: 137224205]:
  # ret_result_26 = PHI <0(14), 1(15), 1(11), 1(13), 1(12)>
<L42>:
  # DEBUG ret_result => ret_result_26
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_34);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MEM[(struct CanTp_ChannelType *)&CanTp_Channel][_9].ChannelLockFlag = 0;

  <bb 17> [local count: 1073741824]:
  # ret_result_27 = PHI <1(3), 1(5), 1(7), ret_result_26(16)>
  # DEBUG ret_result => ret_result_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return ret_result_27;

}


