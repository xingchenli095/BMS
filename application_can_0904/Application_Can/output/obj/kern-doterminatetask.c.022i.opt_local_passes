__attribute__((target ("general-regs-only")))
OS_DoTerminateTask (const struct os_task_t * tp, struct os_taskdynamic_t * td)
{
  os_uint8_t Os_CallHookTmp;
  struct os_kerneldata_t * const OS_kd;
  os_intstatus_t is;
  short unsigned int OS_kernDisableLevel.0_1;
  unsigned char _2;
  void (*<T62f>) (const struct os_task_t *) OS_stopTaskExecTimingFp.1_3;
  unsigned char _4;
  void (*<T467>) (void) OS_ptrPostTaskHook.2_5;
  short unsigned int _6;
  unsigned char _7;
  short unsigned int _8;
  short unsigned int _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  short unsigned int _15;
  struct os_taskaccounting_t * _16;
  struct os_taskaccounting_t * _17;
  struct os_taskaccounting_t * _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_1 = OS_kernDisableLevel;
  is_29 = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.0_1);
  # DEBUG is => is_29
  # DEBUG BEGIN_STMT
  _2 = td_30(D)->state;
  if (_2 == 5)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_stopTaskExecTimingFp.1_3 = OS_stopTaskExecTimingFp;
  OS_stopTaskExecTimingFp.1_3 (tp_31(D));

  <bb 4> :
  # DEBUG BEGIN_STMT
  _4 = td_30(D)->state;
  if (_4 == 5)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd_33 = &OS_kernelData;
  # DEBUG OS_kd => OS_kd_33
  # DEBUG BEGIN_STMT
  Os_CallHookTmp_34 = OS_kernelData.inFunction;
  # DEBUG Os_CallHookTmp => Os_CallHookTmp_34
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 12;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ptrPostTaskHook.2_5 = OS_ptrPostTaskHook;
  OS_ptrPostTaskHook.2_5 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = Os_CallHookTmp_34;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = tp_31(D)->linkBase;
  _7 = td_30(D)->cAct;
  _8 = (short unsigned int) _7;
  _9 = _6 + _8;
  OS_Dequeue (_9);
  # DEBUG BEGIN_STMT
  _10 = td_30(D)->nAct;
  if (_10 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _11 = td_30(D)->nAct;
  _12 = _11;
  _13 = _12 + 255;
  td_30(D)->nAct = _13;
  # DEBUG BEGIN_STMT
  _14 = tp_31(D)->queuePrio;
  _15 = (short unsigned int) _14;
  td_30(D)->prio = _15;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td_30(D)->state = 2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = tp_31(D)->accounting;
  if (_16 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _17 = tp_31(D)->accounting;
  _17->etUsed = 0;
  # DEBUG BEGIN_STMT
  _18 = tp_31(D)->accounting;
  _18->etType = 1;

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _19 = td_30(D)->cAct;
  _20 = tp_31(D)->maxAct;
  if (_19 >= _20)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  td_30(D)->cAct = 0;
  goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _21 = td_30(D)->cAct;
  _22 = _21;
  _23 = _22 + 1;
  td_30(D)->cAct = _23;
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td_30(D)->state = 0;

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_29);
  return;

}


