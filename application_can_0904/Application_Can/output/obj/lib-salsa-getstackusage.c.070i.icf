Parsed function:GetStackUsage
Dump after hash based groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Dump after WPA based types groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Init called for 0 items (0.00%).
Dump after full equality comparison of groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes



Item count: 1
Congruent classes before: 1, after: 1
Average class size before: 1.00, after: 1.00
Average non-singular class size: 0.00, count: 0
Equal symbols: 0
Fraction of visited symbols: 0.00%

__attribute__((target ("general-regs-only")))
GetStackUsage (os_taskid_t t)
{
  struct os_stackinfo_t info;
  os_uint8_t answer;
  short unsigned int _1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG answer => 255
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  info.stackPointer = 0;
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) t_13(D);
  _2 = OS_UserGetStackInfo (_1, &info);
  if (_2 == 0)
    goto <bb 3>; [65.00%]
  else
    goto <bb 4>; [35.00%]

  <bb 3> [local count: 697932186]:
  # DEBUG BEGIN_STMT
  _3 = info.stackLen;
  _4 = info.stackClean;
  _5 = _3 - _4;
  _6 = _5 * 100;
  _7 = _3 >> 1;
  _8 = _6 + _7;
  _9 = _8 / _3;
  answer_15 = (os_uint8_t) _9;
  # DEBUG answer => answer_15

  <bb 4> [local count: 1073741824]:
  # answer_10 = PHI <255(2), answer_15(3)>
  # DEBUG answer => answer_10
  # DEBUG BEGIN_STMT
  info ={v} {CLOBBER};
  return answer_10;

}


