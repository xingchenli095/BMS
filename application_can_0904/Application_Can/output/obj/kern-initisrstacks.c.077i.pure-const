

 local analysis of OS_InitIsrStacks
   scanning: isrId_4 = isrId_2 + 1;
  scanning: OS_nInterrupts.2_3 = OS_nInterrupts;
  scanning: if (isrId_2 < OS_nInterrupts.2_3)
  scanning: return;
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
    cannot prove finiteness of loop 1
Function is locally looping.
Function is locally const.
callgraph:

OS_InitIsrStacks/0 (OS_InitIsrStacks) @06c24a80
  Type: function definition analyzed
  Visibility: externally_visible public
  Aux: @04d173a0
  References: OS_nInterrupts/2 (read)
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 


 ordered call graph: reduced for nothrow
OS_InitIsrStacks/0 (OS_InitIsrStacks) @06c24a80
  Type: function definition analyzed
  Visibility: externally_visible public
  Aux: @04d173a0
  References: OS_nInterrupts/2 (read)
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 



MALLOC LATTICE Initial:
OS_InitIsrStacks: malloc_bottom


MALLOC LATTICE after propagation:
OS_InitIsrStacks: malloc_bottom
callgraph:

OS_InitIsrStacks/0 (OS_InitIsrStacks) @06c24a80
  Type: function definition analyzed
  Visibility: externally_visible public
  Aux: @04d172c0
  References: OS_nInterrupts/2 (read)
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 


 ordered call graph: reduced
OS_InitIsrStacks/0 (OS_InitIsrStacks) @06c24a80
  Type: function definition analyzed
  Visibility: externally_visible public
  Aux: @04d172c0
  References: OS_nInterrupts/2 (read)
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 

Function found not to call free: OS_InitIsrStacks
__attribute__((target ("general-regs-only")))
OS_InitIsrStacks ()
{
  os_isrid_t isrId;
  short unsigned int OS_nInterrupts.2_3;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG myCoreId => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG isrId => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG D#3 => OS_isrTableBase
  # DEBUG D#2 => (unsigned int) isrId_2
  # DEBUG D#1 => D#2 * 68
  # DEBUG is => D#3 + D#1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG p => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  isrId_4 = isrId_2 + 1;
  # DEBUG isrId => isrId_4

  <bb 4> [local count: 1073741824]:
  # isrId_2 = PHI <0(2), isrId_4(3)>
  # DEBUG isrId => isrId_2
  # DEBUG BEGIN_STMT
  OS_nInterrupts.2_3 = OS_nInterrupts;
  if (isrId_2 < OS_nInterrupts.2_3)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  return;

}


