
Analyzing function: Clock_Ip_DistributePll.part.0/63
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 9 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5
;;
;; Loop 2
;;  header 3, latch 2
;;  depth 1, outer 0
;;  nodes: 3 2
;; 9 succs { 3 }
;; 2 succs { 3 }
;; 3 succs { 2 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }

Analyzing function body size: Clock_Ip_DistributePll.part.0

IPA function summary for Clock_Ip_DistributePll.part.0/63 inlinable
  global time:     324.272730
  self size:       32
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:18.000000, time:116.818183
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_Command/27 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 change 99.990000% of time
       op1 is compile time invariant
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:4.00 size: 4 time: 16


Analyzing function: Clock_Ip_GetPllStatus.part.0/62
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 6 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 2
;; 6 succs { 4 }
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 4 succs { 2 5 }
;; 5 succs { 1 }

Analyzing function body size: Clock_Ip_GetPllStatus.part.0

IPA function summary for Clock_Ip_GetPllStatus.part.0/62 inlinable
  global time:     241.570226
  self size:       18
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:10.000000, time:89.394952
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 1 freq:8.83 size: 5 time: 17


Analyzing function: Clock_Ip_TimeoutExpired/26
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Clock_Ip_TimeoutExpired

IPA function summary for Clock_Ip_TimeoutExpired/26 inlinable
  global time:     20.000000
  self size:       12
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    OsIf_GetElapsed/61 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant


Analyzing function: Clock_Ip_StartTimeout/25
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_StartTimeout

IPA function summary for Clock_Ip_StartTimeout/25 inlinable
  global time:     30.000000
  self size:       13
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.500000, time:1.500000
    size:4.500000, time:3.500000,  executed if:(not inlined)
  calls:
    OsIf_MicrosToTicks/60 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant
    OsIf_GetCounter/59 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant


Analyzing function: Clock_Ip_ReportClockErrors/24
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_ReportClockErrors

IPA function summary for Clock_Ip_ReportClockErrors/24 inlinable
  global time:     20.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17


Analyzing function: Clock_Ip_EnableSircInStandby/23
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_EnableSircInStandby

IPA function summary for Clock_Ip_EnableSircInStandby/23 inlinable
  global time:     25.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EnableSircInStandbyMode/58 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Clock_Ip_Command/27 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant


Analyzing function: Clock_Ip_DisableSircInStandby/22
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_DisableSircInStandby

IPA function summary for Clock_Ip_DisableSircInStandby/22 inlinable
  global time:     25.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    DisableSircInStandbyMode/57 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Clock_Ip_Command/27 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant


Analyzing function: Clock_Ip_EnableFircInStandby/21
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_EnableFircInStandby

IPA function summary for Clock_Ip_EnableFircInStandby/21 inlinable
  global time:     25.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EnableFircInStandbyMode/56 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Clock_Ip_Command/27 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant


Analyzing function: Clock_Ip_DisableFircInStandby/20
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_DisableFircInStandby

IPA function summary for Clock_Ip_DisableFircInStandby/20 inlinable
  global time:     25.000000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    DisableFircInStandbyMode/55 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Clock_Ip_Command/27 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant


Analyzing function: Clock_Ip_GetClockFrequency/18
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_GetClockFrequency

IPA function summary for Clock_Ip_GetClockFrequency/18 inlinable
  global time:     14.000000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_GetFreq/54 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12


Analyzing function: Clock_Ip_EnableModuleClock/17
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_EnableModuleClock

IPA function summary for Clock_Ip_EnableModuleClock/17 inlinable
  global time:     22.000000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17


Analyzing function: Clock_Ip_DisableModuleClock/16
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_DisableModuleClock

IPA function summary for Clock_Ip_DisableModuleClock/16 inlinable
  global time:     22.000000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17


Analyzing function: Clock_Ip_InstallNotificationsCallback/15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_InstallNotificationsCallback

IPA function summary for Clock_Ip_InstallNotificationsCallback/15 inlinable
  global time:     3.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Clock_Ip_ClearClockMonitorStatus/14
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_ClearClockMonitorStatus

IPA function summary for Clock_Ip_ClearClockMonitorStatus/14 inlinable
  global time:     21.000000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16


Analyzing function: Clock_Ip_GetClockMonitorStatus/13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_GetClockMonitorStatus

IPA function summary for Clock_Ip_GetClockMonitorStatus/13 inlinable
  global time:     22.000000
  self size:       11
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 5 time: 17


Analyzing function: Clock_Ip_DisableClockMonitor/12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_DisableClockMonitor

IPA function summary for Clock_Ip_DisableClockMonitor/12 inlinable
  global time:     21.000000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 4 time: 16


Analyzing function: Clock_Ip_DistributePll/11
Created preheader block for loop 1
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 10 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 10 9 }
;; 10 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }

Analyzing function body size: Clock_Ip_DistributePll

IPA function summary for Clock_Ip_DistributePll/11 inlinable
  global time:     102.885455
  self size:       27
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:66.575273
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll.part.0/63 function not considered for inlining
      loop depth: 0 freq:0.35 size: 1 time: 10callee size:16 stack: 0
    indirect call loop depth: 1 freq:1.93 size: 4 time: 16


Analyzing function: Clock_Ip_GetPllStatus/10
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 8 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }

Analyzing function body size: Clock_Ip_GetPllStatus

IPA function summary for Clock_Ip_GetPllStatus/10 inlinable
  global time:     265.766183
  self size:       24
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:14.000000, time:108.090909
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_GetPllStatus.part.0/62 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 9 stack: 0
    indirect call loop depth: 1 freq:8.83 size: 5 time: 17


Analyzing function: Clock_Ip_InitClock/9
;; 16 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 53 3 4 5 6 7 52 8 9 10 11 12 51 13 14 50 15 16 49 17 18 48 19 20 47 21 22 46 23 24 45 25 26 44 27 28 29 30 31 32 33 34 35 43 36 37 42 38 39 40 41
;;
;; Loop 15
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38
;;
;; Loop 14
;;  header 37, latch 36
;;  depth 1, outer 0
;;  nodes: 37 36
;;
;; Loop 13
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33 31 32 30
;;
;; Loop 12
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27
;;
;; Loop 11
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25
;;
;; Loop 10
;;  header 24, latch 23
;;  depth 1, outer 0
;;  nodes: 24 23
;;
;; Loop 9
;;  header 22, latch 21
;;  depth 1, outer 0
;;  nodes: 22 21
;;
;; Loop 8
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19
;;
;; Loop 7
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17
;;
;; Loop 6
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15
;;
;; Loop 5
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13
;;
;; Loop 4
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11
;;
;; Loop 3
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 53 5 }
;; 53 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 52 }
;; 52 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 8 10 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 11 51 }
;; 51 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 13 50 }
;; 50 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 49 }
;; 49 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 17 48 }
;; 48 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 19 47 }
;; 47 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 21 46 }
;; 46 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 23 45 }
;; 45 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 25 44 }
;; 44 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 27 29 }
;; 29 succs { 34 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 30 35 }
;; 35 succs { 43 41 }
;; 43 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 36 42 }
;; 42 succs { 39 }
;; 38 succs { 39 }
;; 39 succs { 38 40 }
;; 40 succs { 41 }
;; 41 succs { 1 }

Analyzing function body size: Clock_Ip_InitClock

IPA function summary for Clock_Ip_InitClock/9 inlinable
  global time:     1351.872509
  self size:       211
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:120.500000, time:437.888119
    size:18.500000, time:64.548173,  executed if:(not inlined)
  calls:
    Clock_Ip_Command/27 function body not available
      loop depth: 0 freq:0.50 size: 3 time: 12
       op1 is compile time invariant
    Clock_Ip_UpdateDriverContext/5 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11
    Clock_Ip_ResetClockConfiguration/7 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11
    Clock_Ip_Command/27 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:4.05 size: 4 time: 16
    indirect call loop depth: 1 freq:5.34 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:4.00 size: 5 time: 17
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:7.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16
    indirect call loop depth: 1 freq:7.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 5 time: 17
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:2.80 size: 4 time: 16


Analyzing function: Clock_Ip_Init/8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: Clock_Ip_Init

IPA function summary for Clock_Ip_Init/8 inlinable
  global time:     21.379000
  self size:       13
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:5.000000, time:3.660000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DistributePll/11 function not considered for inlining
      loop depth: 0 freq:0.11 size: 1 time: 10callee size:13 stack: 0
    Clock_Ip_GetPllStatus/10 function not considered for inlining
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:12 stack: 0
    Clock_Ip_InitClock/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:105 stack: 0


Analyzing function: Clock_Ip_ResetClockConfiguration/7
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 4
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12
;;
;; Loop 3
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 9 11 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 12 14 }
;; 14 succs { 1 }

Analyzing function body size: Clock_Ip_ResetClockConfiguration

IPA function summary for Clock_Ip_ResetClockConfiguration/7 inlinable
  global time:     292.097812
  self size:       51
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:27.500000, time:88.092860
    size:6.500000, time:9.545605,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 88] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 88] changed)
  loop iterations:(op0[ref offset: 88] changed)
  calls:
    indirect call loop depth: 1 freq:2.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:1.00 size: 4 time: 16
    indirect call loop depth: 1 freq:8.09 size: 4 time: 16


Analyzing function: Clock_Ip_CallEmptyCallbacks/6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Clock_Ip_CallEmptyCallbacks

IPA function summary for Clock_Ip_CallEmptyCallbacks/6 inlinable
  global time:     143.000000
  self size:       90
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:20.000000, time:11.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    indirect call loop depth: 0 freq:0.50 size: 5 time: 17
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 5 time: 17
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 4 time: 16
    indirect call loop depth: 0 freq:0.50 size: 5 time: 17


Analyzing function: Clock_Ip_UpdateDriverContext/5
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }

Analyzing function body size: Clock_Ip_UpdateDriverContext

IPA function summary for Clock_Ip_UpdateDriverContext/5 inlinable
  global time:     225.181819
  self size:       23
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:10.500000, time:82.863637
    size:5.500000, time:23.227273,  executed if:(not inlined)
  calls:
    Clock_Ip_CallEmptyCallbacks/6 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size:45 stack: 0
    Clock_Ip_SetExternalSignalFrequency/50 function body not available
      loop depth: 1 freq:8.09 size: 3 time: 12
    Clock_Ip_Command/27 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant


Analyzing function: Clock_Ip_NotificatonsEmptyCallback/4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_NotificatonsEmptyCallback

IPA function summary for Clock_Ip_NotificatonsEmptyCallback/4 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

Clock_Ip_DistributePll.part.0/63 (Clock_Ip_DistributePll.part.0) @070bed20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8GateCallbackIndex/48 (read)Clock_Ip_axGateCallbacks/49 (read)Clock_Ip_pxConfig/0 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8CmuCallbackIndex/29 (read)Clock_Ip_axCmuCallbacks/30 (read)Clock_Ip_pxConfig/0 (read)
  Referring: 
  Availability: local
  Function flags: count:118111600 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_DistributePll/11 (59055800 (estimated locally),0.35 per call) 
  Calls: Clock_Ip_Command/27 (118111601 (estimated locally),1.00 per call) 
   Indirect call(955630223 (estimated locally),8.09 per call) 
   Indirect call(472446404 (estimated locally),4.00 per call) 
Clock_Ip_GetPllStatus.part.0/62 (Clock_Ip_GetPllStatus.part.0) @070568c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Clock_Ip_aeHwDfsName/53 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8FractionalDividerCallbackIndex/43 (read)Clock_Ip_axFracDivCallbacks/44 (read)Clock_Ip_driverContext/1 (read)
  Referring: 
  Availability: local
  Function flags: count:114863532 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_GetPllStatus/10 (57431766 (estimated locally),0.50 per call) 
  Calls: 
   Indirect call(1014686025 (estimated locally),8.83 per call) 
OsIf_GetElapsed/61 (OsIf_GetElapsed) @070a61c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_TimeoutExpired/26 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
OsIf_MicrosToTicks/60 (OsIf_MicrosToTicks) @070a6000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_StartTimeout/25 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
OsIf_GetCounter/59 (OsIf_GetCounter) @0709eee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_StartTimeout/25 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
EnableSircInStandbyMode/58 (EnableSircInStandbyMode) @0709ec40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_EnableSircInStandby/23 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
DisableSircInStandbyMode/57 (DisableSircInStandbyMode) @0709ea80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_DisableSircInStandby/22 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
EnableFircInStandbyMode/56 (EnableFircInStandbyMode) @0709e8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_EnableFircInStandby/21 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
DisableFircInStandbyMode/55 (DisableFircInStandbyMode) @0709e700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_DisableFircInStandby/20 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_GetFreq/54 (Clock_Ip_GetFreq) @0709e540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_GetClockFrequency/18 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_aeHwDfsName/53 (Clock_Ip_aeHwDfsName) @07093798
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_GetPllStatus.part.0/62 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_aeHwPllName/52 (Clock_Ip_aeHwPllName) @070936c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_GetPllStatus/10 (read)
  Availability: not_available
  Varpool flags: read-only
FunctionWasCalled.8883/51 (FunctionWasCalled) @0708f798
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_CallEmptyCallbacks/6 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_SetExternalSignalFrequency/50 (Clock_Ip_SetExternalSignalFrequency) @0705ae00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_UpdateDriverContext/5 (955630220 (estimated locally),8.09 per call) 
  Calls: 
Clock_Ip_axGateCallbacks/49 (Clock_Ip_axGateCallbacks) @0708ba20
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_DisableModuleClock/16 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll.part.0/63 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_EnableModuleClock/17 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8GateCallbackIndex/48 (Clock_Ip_au8GateCallbackIndex) @0708b9d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_DistributePll.part.0/63 (read)Clock_Ip_DisableModuleClock/16 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_EnableModuleClock/17 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axSelectorCallbacks/47 (Clock_Ip_axSelectorCallbacks) @0708b900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_DistributePll/11 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8SelectorCallbackIndex/46 (Clock_Ip_au8SelectorCallbackIndex) @0708b8b8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_DistributePll/11 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_aeSourceTypeClockName/45 (Clock_Ip_aeSourceTypeClockName) @0708b870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll/11 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axFracDivCallbacks/44 (Clock_Ip_axFracDivCallbacks) @0708b750
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_GetPllStatus.part.0/62 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8FractionalDividerCallbackIndex/43 (Clock_Ip_au8FractionalDividerCallbackIndex) @0708b708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_GetPllStatus.part.0/62 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axPllCallbacks/42 (Clock_Ip_axPllCallbacks) @0708b480
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_GetPllStatus/10 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8PllCallbackIndex/41 (Clock_Ip_au8PllCallbackIndex) @0708b438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_GetPllStatus/10 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axDividerCallbacks/40 (Clock_Ip_axDividerCallbacks) @0708b2d0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8DividerCallbackIndex/39 (Clock_Ip_au8DividerCallbackIndex) @0708b288
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axDividerTriggerCallbacks/38 (Clock_Ip_axDividerTriggerCallbacks) @0708b1b0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8DividerTriggerCallbackIndex/37 (Clock_Ip_au8DividerTriggerCallbackIndex) @0708b168
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axPcfsCallbacks/36 (Clock_Ip_axPcfsCallbacks) @0708b090
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8PcfsCallbackIndex/35 (Clock_Ip_au8PcfsCallbackIndex) @0708b048
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axExtOscCallbacks/34 (Clock_Ip_axExtOscCallbacks) @07086ee8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8XoscCallbackIndex/33 (Clock_Ip_au8XoscCallbackIndex) @07086ea0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axIntOscCallbacks/32 (Clock_Ip_axIntOscCallbacks) @07086dc8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8IrcoscCallbackIndex/31 (Clock_Ip_au8IrcoscCallbackIndex) @07086d80
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axCmuCallbacks/30 (Clock_Ip_axCmuCallbacks) @07086c60
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_GetClockMonitorStatus/13 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll.part.0/63 (read)Clock_Ip_DisableClockMonitor/12 (read)Clock_Ip_CallEmptyCallbacks/6 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ClearClockMonitorStatus/14 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8CmuCallbackIndex/29 (Clock_Ip_au8CmuCallbackIndex) @07086c18
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll.part.0/63 (read)Clock_Ip_DisableClockMonitor/12 (read)Clock_Ip_GetClockMonitorStatus/13 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_ClearClockMonitorStatus/14 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8ClockFeatures/28 (Clock_Ip_au8ClockFeatures) @07086bd0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_DisableModuleClock/16 (read)Clock_Ip_DistributePll/11 (read)Clock_Ip_DisableClockMonitor/12 (read)Clock_Ip_GetClockMonitorStatus/13 (read)Clock_Ip_ClearClockMonitorStatus/14 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_GetPllStatus/10 (read)Clock_Ip_ResetClockConfiguration/7 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_GetPllStatus.part.0/62 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll.part.0/63 (read)Clock_Ip_DistributePll.part.0/63 (read)Clock_Ip_EnableModuleClock/17 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_Command/27 (Clock_Ip_Command) @0705a9a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_EnableSircInStandby/23 (1073741824 (estimated locally),1.00 per call) Clock_Ip_DisableSircInStandby/22 (1073741824 (estimated locally),1.00 per call) Clock_Ip_EnableFircInStandby/21 (1073741824 (estimated locally),1.00 per call) Clock_Ip_DisableFircInStandby/20 (1073741824 (estimated locally),1.00 per call) Clock_Ip_DistributePll.part.0/63 (118111601 (estimated locally),1.00 per call) Clock_Ip_InitClock/9 (59055800 (estimated locally),0.50 per call) Clock_Ip_InitClock/9 (118111600 (estimated locally),1.00 per call) Clock_Ip_UpdateDriverContext/5 (118111600 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_TimeoutExpired/26 (Clock_Ip_TimeoutExpired) @0705a540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: OsIf_GetElapsed/61 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_StartTimeout/25 (Clock_Ip_StartTimeout) @0705a380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: OsIf_MicrosToTicks/60 (1073741824 (estimated locally),1.00 per call) OsIf_GetCounter/59 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_ReportClockErrors/24 (Clock_Ip_ReportClockErrors) @0705a1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pfkNotificationsCallback/3 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_EnableSircInStandby/23 (Clock_Ip_EnableSircInStandby) @0705a000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EnableSircInStandbyMode/58 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Command/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DisableSircInStandby/22 (Clock_Ip_DisableSircInStandby) @07056e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DisableSircInStandbyMode/57 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Command/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_EnableFircInStandby/21 (Clock_Ip_EnableFircInStandby) @07056c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EnableFircInStandbyMode/56 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Command/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DisableFircInStandby/20 (Clock_Ip_DisableFircInStandby) @07056a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DisableFircInStandbyMode/55 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Command/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_GetClockFrequency/18 (Clock_Ip_GetClockFrequency) @07056700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_GetFreq/54 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_EnableModuleClock/17 (Clock_Ip_EnableModuleClock) @07056540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8GateCallbackIndex/48 (read)Clock_Ip_axGateCallbacks/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DisableModuleClock/16 (Clock_Ip_DisableModuleClock) @07056380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8GateCallbackIndex/48 (read)Clock_Ip_axGateCallbacks/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_InstallNotificationsCallback/15 (Clock_Ip_InstallNotificationsCallback) @070561c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pfkNotificationsCallback/3 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_ClearClockMonitorStatus/14 (Clock_Ip_ClearClockMonitorStatus) @07056000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8CmuCallbackIndex/29 (read)Clock_Ip_axCmuCallbacks/30 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_GetClockMonitorStatus/13 (Clock_Ip_GetClockMonitorStatus) @07044e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8CmuCallbackIndex/29 (read)Clock_Ip_axCmuCallbacks/30 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DisableClockMonitor/12 (Clock_Ip_DisableClockMonitor) @07044c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8CmuCallbackIndex/29 (read)Clock_Ip_axCmuCallbacks/30 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DistributePll/11 (Clock_Ip_DistributePll) @07044a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (read)Clock_Ip_aeSourceTypeClockName/45 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8SelectorCallbackIndex/46 (read)Clock_Ip_axSelectorCallbacks/47 (read)Clock_Ip_pxConfig/0 (read)Clock_Ip_driverContext/1 (read)
  Referring: 
  Availability: available
  Function flags: count:168730857 (estimated locally) body optimize_size
  Called by: Clock_Ip_Init/8 (116930485 (estimated locally),0.11 per call) 
  Calls: Clock_Ip_DistributePll.part.0/63 (59055800 (estimated locally),0.35 per call) 
   Indirect call(324914276 (estimated locally),1.93 per call) 
Clock_Ip_GetPllStatus/10 (Clock_Ip_GetPllStatus) @070448c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_aeHwPllName/52 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8PllCallbackIndex/41 (read)Clock_Ip_axPllCallbacks/42 (read)Clock_Ip_driverContext/1 (read)
  Referring: 
  Availability: available
  Function flags: count:114863532 (estimated locally) body optimize_size
  Called by: Clock_Ip_Init/8 (354334802 (estimated locally),0.33 per call) 
  Calls: Clock_Ip_GetPllStatus.part.0/62 (57431766 (estimated locally),0.50 per call) 
   Indirect call(1014686025 (estimated locally),8.83 per call) 
Clock_Ip_InitClock/9 (Clock_Ip_InitClock) @07044700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_pxConfig/0 (write)Clock_Ip_pxConfig/0 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8CmuCallbackIndex/29 (read)Clock_Ip_axCmuCallbacks/30 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8IrcoscCallbackIndex/31 (read)Clock_Ip_axIntOscCallbacks/32 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8XoscCallbackIndex/33 (read)Clock_Ip_axExtOscCallbacks/34 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8PcfsCallbackIndex/35 (read)Clock_Ip_axPcfsCallbacks/36 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8DividerTriggerCallbackIndex/37 (read)Clock_Ip_axDividerTriggerCallbacks/38 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8DividerCallbackIndex/39 (read)Clock_Ip_axDividerCallbacks/40 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8DividerTriggerCallbackIndex/37 (read)Clock_Ip_axDividerTriggerCallbacks/38 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8PllCallbackIndex/41 (read)Clock_Ip_axPllCallbacks/42 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8CmuCallbackIndex/29 (read)Clock_Ip_axCmuCallbacks/30 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8XoscCallbackIndex/33 (read)Clock_Ip_axExtOscCallbacks/34 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8PllCallbackIndex/41 (read)Clock_Ip_axPllCallbacks/42 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8FractionalDividerCallbackIndex/43 (read)Clock_Ip_axFracDivCallbacks/44 (read)Clock_Ip_driverContext/1 (write)Clock_Ip_driverContext/1 (write)Clock_Ip_driverContext/1 (write)Clock_Ip_driverContext/1 (write)Clock_Ip_aeSourceTypeClockName/45 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8SelectorCallbackIndex/46 (read)Clock_Ip_axSelectorCallbacks/47 (read)Clock_Ip_driverContext/1 (write)Clock_Ip_driverContext/1 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8GateCallbackIndex/48 (read)Clock_Ip_axGateCallbacks/49 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8CmuCallbackIndex/29 (read)Clock_Ip_axCmuCallbacks/30 (read)
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Clock_Ip_Init/8 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_Command/27 (59055800 (estimated locally),0.50 per call) Clock_Ip_UpdateDriverContext/5 (118111600 (estimated locally),1.00 per call) Clock_Ip_ResetClockConfiguration/7 (118111600 (estimated locally),1.00 per call) Clock_Ip_Command/27 (118111600 (estimated locally),1.00 per call) 
   Indirect call(236223201 (estimated locally),2.00 per call) 
   Indirect call(477815110 (estimated locally),4.05 per call) 
   Indirect call(630715943 (estimated locally),5.34 per call) 
   Indirect call(118111601 (estimated locally),1.00 per call) 
   Indirect call(118111601 (estimated locally),1.00 per call) 
   Indirect call(236258639 (estimated locally),2.00 per call) 
   Indirect call(472446405 (estimated locally),4.00 per call) 
   Indirect call(118111601 (estimated locally),1.00 per call) 
   Indirect call(826781205 (estimated locally),7.00 per call) 
   Indirect call(955630224 (estimated locally),8.09 per call) 
   Indirect call(826781201 (estimated locally),7.00 per call) 
   Indirect call(118111600 (estimated locally),1.00 per call) 
   Indirect call(236258637 (estimated locally),2.00 per call) 
   Indirect call(236258637 (estimated locally),2.00 per call) 
   Indirect call(330712481 (estimated locally),2.80 per call) 
Clock_Ip_Init/8 (Clock_Ip_Init) @07044540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_driverContext/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_DistributePll/11 (116930485 (estimated locally),0.11 per call) Clock_Ip_GetPllStatus/10 (354334802 (estimated locally),0.33 per call) Clock_Ip_InitClock/9 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_ResetClockConfiguration/7 (Clock_Ip_ResetClockConfiguration) @07044380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8SelectorCallbackIndex/46 (read)Clock_Ip_axSelectorCallbacks/47 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8FractionalDividerCallbackIndex/43 (read)Clock_Ip_axFracDivCallbacks/44 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8PllCallbackIndex/41 (read)Clock_Ip_axPllCallbacks/42 (read)Clock_Ip_au8ClockFeatures/28 (read)Clock_Ip_au8XoscCallbackIndex/33 (read)Clock_Ip_axExtOscCallbacks/34 (read)
  Referring: 
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Clock_Ip_InitClock/9 (118111600 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(236258638 (estimated locally),2.00 per call) 
   Indirect call(118111601 (estimated locally),1.00 per call) 
   Indirect call(118111601 (estimated locally),1.00 per call) 
   Indirect call(955630223 (estimated locally),8.09 per call) 
Clock_Ip_CallEmptyCallbacks/6 (Clock_Ip_CallEmptyCallbacks) @070441c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: FunctionWasCalled.8883/51 (read)FunctionWasCalled.8883/51 (write)Clock_Ip_axCmuCallbacks/30 (read)Clock_Ip_axCmuCallbacks/30 (read)Clock_Ip_axCmuCallbacks/30 (read)Clock_Ip_axCmuCallbacks/30 (read)Clock_Ip_axDividerCallbacks/40 (read)Clock_Ip_axDividerTriggerCallbacks/38 (read)Clock_Ip_axExtOscCallbacks/34 (read)Clock_Ip_axFracDivCallbacks/44 (read)Clock_Ip_axFracDivCallbacks/44 (read)Clock_Ip_axGateCallbacks/49 (read)Clock_Ip_axGateCallbacks/49 (read)Clock_Ip_axIntOscCallbacks/32 (read)Clock_Ip_axPllCallbacks/42 (read)Clock_Ip_axPllCallbacks/42 (read)Clock_Ip_axSelectorCallbacks/47 (read)Clock_Ip_axPcfsCallbacks/36 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Clock_Ip_UpdateDriverContext/5 (118111600 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
   Indirect call(536870913 (estimated locally),0.50 per call) 
Clock_Ip_UpdateDriverContext/5 (Clock_Ip_UpdateDriverContext) @07044000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_pxConfig/0 (read)Clock_Ip_FreqIds/2 (write)
  Referring: 
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Clock_Ip_InitClock/9 (118111600 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_CallEmptyCallbacks/6 (118111600 (estimated locally),1.00 per call) Clock_Ip_SetExternalSignalFrequency/50 (955630220 (estimated locally),8.09 per call) Clock_Ip_Command/27 (118111600 (estimated locally),1.00 per call) 
Clock_Ip_NotificatonsEmptyCallback/4 (Clock_Ip_NotificatonsEmptyCallback) @070172a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_pfkNotificationsCallback/3 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_pfkNotificationsCallback/3 (Clock_Ip_pfkNotificationsCallback) @07041048
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_NotificatonsEmptyCallback/4 (addr)
  Referring: Clock_Ip_InstallNotificationsCallback/15 (write)Clock_Ip_ReportClockErrors/24 (read)
  Availability: available
  Varpool flags: initialized
Clock_Ip_FreqIds/2 (Clock_Ip_FreqIds) @07041000
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Clock_Ip_UpdateDriverContext/5 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_driverContext/1 (Clock_Ip_driverContext) @06f64f78
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_GetPllStatus/10 (read)Clock_Ip_InitClock/9 (write)Clock_Ip_DistributePll/11 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_InitClock/9 (write)Clock_Ip_InitClock/9 (write)Clock_Ip_InitClock/9 (write)Clock_Ip_InitClock/9 (write)Clock_Ip_GetPllStatus.part.0/62 (read)Clock_Ip_Init/8 (read)
  Availability: available
  Varpool flags:
Clock_Ip_pxConfig/0 (Clock_Ip_pxConfig) @06f64f30
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Clock_Ip_DisableFircInStandby/20 (read)Clock_Ip_DisableSircInStandby/22 (read)Clock_Ip_EnableFircInStandby/21 (read)Clock_Ip_InitClock/9 (read)Clock_Ip_DistributePll/11 (read)Clock_Ip_InitClock/9 (write)Clock_Ip_UpdateDriverContext/5 (read)Clock_Ip_DistributePll.part.0/63 (read)Clock_Ip_DistributePll.part.0/63 (read)Clock_Ip_DistributePll/11 (read)Clock_Ip_EnableSircInStandby/23 (read)
  Availability: available
  Varpool flags:
Clock_Ip_DistributePll.part.0 ()
{
  uint32 Index;
  uint32 CallbackIndex;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.12_1;
  <unnamed type> _3;
  unsigned char _4;
  int _5;
  unsigned char _6;
  void (*<Ta63>) (const struct Clock_Ip_GateConfigType *) _8;
  const struct Clock_Ip_GateConfigType * _9;
  unsigned char _11;
  long unsigned int _12;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.15_13;
  <unnamed type> _15;
  unsigned char _16;
  int _17;
  unsigned char _18;
  void (*<Ta78>) (const struct Clock_Ip_CmuConfigType *) _20;
  const struct Clock_Ip_CmuConfigType * _21;
  unsigned char _23;
  long unsigned int _24;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.15_25;

  <bb 9> [local count: 118111600]:
  goto <bb 3>; [100.00%]

  <bb 2> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _3 = Clock_Ip_pxConfig.12_1->Gates[Index_2].Name;
  _4 = Clock_Ip_au8ClockFeatures[_3][1];
  _5 = (int) _4;
  _6 = Clock_Ip_au8GateCallbackIndex[_5];
  CallbackIndex_7 = (uint32) _6;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _8 = Clock_Ip_axGateCallbacks[CallbackIndex_7].Set;
  _9 = &Clock_Ip_pxConfig.12_1->Gates[Index_2];
  _8 (_9);
  # DEBUG BEGIN_STMT
  Index_10 = Index_2 + 1;
  # DEBUG Index => Index_10

  <bb 3> [local count: 1073741824]:
  # Index_2 = PHI <Index_10(2), 0(9)>
  # DEBUG Index => Index_2
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.12_1 = Clock_Ip_pxConfig;
  _11 = Clock_Ip_pxConfig.12_1->GatesCount;
  _12 = (long unsigned int) _11;
  if (Index_2 < _12)
    goto <bb 2>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111601]:
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 472446404]:
  # DEBUG BEGIN_STMT
  _15 = Clock_Ip_pxConfig.15_13->Cmus[Index_14].Name;
  _16 = Clock_Ip_au8ClockFeatures[_15][1];
  _17 = (int) _16;
  _18 = Clock_Ip_au8CmuCallbackIndex[_17];
  CallbackIndex_19 = (uint32) _18;
  # DEBUG CallbackIndex => CallbackIndex_19
  # DEBUG BEGIN_STMT
  _20 = Clock_Ip_axCmuCallbacks[CallbackIndex_19].Enable;
  _21 = &Clock_Ip_pxConfig.15_13->Cmus[Index_14];
  _20 (_21);
  # DEBUG BEGIN_STMT
  Index_22 = Index_14 + 1;
  # DEBUG Index => Index_22

  <bb 6> [local count: 590558005]:
  # Index_14 = PHI <0(4), Index_22(5)>
  # DEBUG Index => Index_14
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.15_13 = Clock_Ip_pxConfig;
  _23 = Clock_Ip_pxConfig.15_13->CmusCount;
  _24 = (long unsigned int) _23;
  if (Index_14 < _24)
    goto <bb 5>; [80.00%]
  else
    goto <bb 7>; [20.00%]

  <bb 7> [local count: 118111601]:
  # Clock_Ip_pxConfig.15_25 = PHI <Clock_Ip_pxConfig.15_13(6)>
  # DEBUG BEGIN_STMT
  Clock_Ip_Command (Clock_Ip_pxConfig.15_25, 4);

  <bb 8> [local count: 118111601]:
  return;

}


Clock_Ip_GetPllStatus.part.0 ()
{
  Clock_Ip_PllStatusType RetValue;
  Clock_Ip_PllStatusReturnType PllStatus;
  Clock_Ip_DfsStatusType DfsStatus;
  uint32 Index;
  uint32 CallbackIndex;
  <unnamed type> _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  Clock_Ip_DfsStatusType (*<Ta39>) (Clock_Ip_NameType) _7;
  unsigned char _10;
  long unsigned int _11;

  <bb 6> [local count: 114863532]:
  goto <bb 4>; [100.00%]

  <bb 2> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _2 = Clock_Ip_aeHwDfsName[Index_1];
  _3 = Clock_Ip_au8ClockFeatures[_2][1];
  _4 = (int) _3;
  _5 = Clock_Ip_au8FractionalDividerCallbackIndex[_4];
  CallbackIndex_6 = (uint32) _5;
  # DEBUG CallbackIndex => CallbackIndex_6
  # DEBUG BEGIN_STMT
  _7 = Clock_Ip_axFracDivCallbacks[CallbackIndex_6].Complete;
  DfsStatus_8 = _7 (_2);
  # DEBUG DfsStatus => DfsStatus_8
  # DEBUG BEGIN_STMT
  if (DfsStatus_8 == 1)
    goto <bb 5>; [5.50%]
  else
    goto <bb 3>; [94.50%]

  <bb 3> [local count: 958878293]:
  # DEBUG BEGIN_STMT
  Index_9 = Index_1 + 1;
  # DEBUG Index => Index_9

  <bb 4> [local count: 1073741824]:
  # Index_1 = PHI <Index_9(3), 0(6)>
  # DEBUG Index => Index_1
  # DEBUG BEGIN_STMT
  _10 = Clock_Ip_driverContext.HwDfsNo;
  _11 = (long unsigned int) _10;
  if (Index_1 < _11)
    goto <bb 2>; [94.50%]
  else
    goto <bb 5>; [5.50%]

  <bb 5> [local count: 114863532]:
  # RetValue_12 = PHI <1(2), 0(4)>
  # DEBUG RetValue => RetValue_12
  # DEBUG BEGIN_STMT
  return RetValue_12;

}


Clock_Ip_TimeoutExpired (uint32 * StartTimeInOut, uint32 * ElapsedTimeInOut, uint32 TimeoutTicks)
{
  long unsigned int _1;
  long unsigned int _2;
  boolean iftmp.22_3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _7 = OsIf_GetElapsed (StartTimeInOut_5(D), 0);
  _1 = *ElapsedTimeInOut_8(D);
  _2 = _1 + _7;
  *ElapsedTimeInOut_8(D) = _2;
  # DEBUG BEGIN_STMT
  if (_2 >= TimeoutTicks_10(D))
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.22_3 = PHI <1(2), 0(3)>
  return iftmp.22_3;

}


Clock_Ip_StartTimeout (uint32 * StartTimeOut, uint32 * ElapsedTimeOut, uint32 * TimeoutTicksOut, uint32 TimeoutUs)
{
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = OsIf_GetCounter (0);
  *StartTimeOut_5(D) = _1;
  # DEBUG BEGIN_STMT
  *ElapsedTimeOut_7(D) = 0;
  # DEBUG BEGIN_STMT
  _2 = OsIf_MicrosToTicks (TimeoutUs_9(D), 0);
  *TimeoutTicksOut_11(D) = _2;
  return;

}


Clock_Ip_ReportClockErrors (Clock_Ip_NotificationType Error, Clock_Ip_NameType ClockName)
{
  void (*<T521>) (Clock_Ip_NotificationType, Clock_Ip_NameType) Clock_Ip_pfkNotificationsCallback.21_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback.21_1 = Clock_Ip_pfkNotificationsCallback;
  Clock_Ip_pfkNotificationsCallback.21_1 (Error_3(D), ClockName_4(D));
  return;

}


Clock_Ip_EnableSircInStandby ()
{
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.20_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.20_1 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.20_1, 2);
  # DEBUG BEGIN_STMT
  EnableSircInStandbyMode ();
  return;

}


Clock_Ip_DisableSircInStandby ()
{
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.19_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.19_1 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.19_1, 2);
  # DEBUG BEGIN_STMT
  DisableSircInStandbyMode ();
  return;

}


Clock_Ip_EnableFircInStandby ()
{
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.18_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.18_1 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.18_1, 2);
  # DEBUG BEGIN_STMT
  EnableFircInStandbyMode ();
  return;

}


Clock_Ip_DisableFircInStandby ()
{
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.17_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.17_1 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.17_1, 2);
  # DEBUG BEGIN_STMT
  DisableFircInStandbyMode ();
  return;

}


Clock_Ip_GetClockFrequency (Clock_Ip_NameType ClockName)
{
  uint32 _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_GetFreq (ClockName_2(D));
  return _4;

}


Clock_Ip_EnableModuleClock (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<Ta68>) (Clock_Ip_NameType, boolean) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8GateCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axGateCallbacks[CallbackIndex_7].Update;
  _4 (ClockName_6(D), 0);
  return;

}


Clock_Ip_DisableModuleClock (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<Ta68>) (Clock_Ip_NameType, boolean) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8GateCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axGateCallbacks[CallbackIndex_7].Update;
  _4 (ClockName_6(D), 1);
  return;

}


Clock_Ip_InstallNotificationsCallback (void (*Clock_Ip_NotificationsCallbackType) (Clock_Ip_NotificationType, Clock_Ip_NameType) Callback)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pfkNotificationsCallback = Callback_2(D);
  return;

}


Clock_Ip_ClearClockMonitorStatus (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<Ta02>) (Clock_Ip_NameType) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8CmuCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[CallbackIndex_7].Clear;
  _4 (ClockName_6(D));
  return;

}


Clock_Ip_GetClockMonitorStatus (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  Clock_Ip_CmuStatusType (*<Ta7d>) (Clock_Ip_NameType) _4;
  Clock_Ip_CmuStatusType _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8CmuCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[CallbackIndex_7].GetStatus;
  _9 = _4 (ClockName_6(D));
  return _9;

}


Clock_Ip_DisableClockMonitor (Clock_Ip_NameType ClockName)
{
  uint32 CallbackIndex;
  unsigned char _1;
  int _2;
  unsigned char _3;
  void (*<Ta02>) (Clock_Ip_NameType) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[ClockName_6(D)][1];
  _2 = (int) _1;
  _3 = Clock_Ip_au8CmuCallbackIndex[_2];
  CallbackIndex_7 = (uint32) _3;
  # DEBUG CallbackIndex => CallbackIndex_7
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[CallbackIndex_7].Disable;
  _4 (ClockName_6(D));
  return;

}


Clock_Ip_DistributePll ()
{
  uint32 CallbackIndex;
  uint32 Index;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.5_1;
  <unnamed type> _2;
  <unnamed type> _3;
  <unnamed type> _4;
  unsigned char _5;
  int _6;
  unsigned char _7;
  void (*<Ta57>) (const struct Clock_Ip_SelectorConfigType *) _8;
  const struct Clock_Ip_SelectorConfigType * _9;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.9_10;
  unsigned char _11;
  long unsigned int _12;
  unsigned char _13;

  <bb 2> [local count: 168730857]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.5_1 = Clock_Ip_pxConfig;
  if (Clock_Ip_pxConfig.5_1 != 0B)
    goto <bb 10>; [70.00%]
  else
    goto <bb 9>; [30.00%]

  <bb 10> [local count: 118111600]:
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _2 = Clock_Ip_pxConfig.9_10->Selectors[Index_16].Value;
  _3 = Clock_Ip_aeSourceTypeClockName[_2];
  if (_3 == 3)
    goto <bb 4>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 4> [local count: 324914276]:
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_pxConfig.9_10->Selectors[Index_16].Name;
  _5 = Clock_Ip_au8ClockFeatures[_4][1];
  _6 = (int) _5;
  _7 = Clock_Ip_au8SelectorCallbackIndex[_6];
  CallbackIndex_22 = (uint32) _7;
  # DEBUG CallbackIndex => CallbackIndex_22
  # DEBUG BEGIN_STMT
  _8 = Clock_Ip_axSelectorCallbacks[CallbackIndex_22].Set;
  _9 = &Clock_Ip_pxConfig.9_10->Selectors[Index_16];
  _8 (_9);

  <bb 5> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  Index_24 = Index_16 + 1;
  # DEBUG Index => Index_24

  <bb 6> [local count: 1073741824]:
  # Index_16 = PHI <Index_24(5), 0(10)>
  # DEBUG Index => Index_16
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.9_10 = Clock_Ip_pxConfig;
  _11 = Clock_Ip_pxConfig.9_10->SelectorsCount;
  _12 = (long unsigned int) _11;
  if (_12 > Index_16)
    goto <bb 3>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _13 = Clock_Ip_driverContext.ClockTreeIsConsumingPll;
  if (_13 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 59055800]:
  # Index_17 = PHI <0(7)>
  Clock_Ip_DistributePll.part.0 ();

  <bb 9> [local count: 168730859]:
  return;

}


Clock_Ip_GetPllStatus ()
{
  uint32 CallbackIndex;
  uint32 Index;
  Clock_Ip_PllStatusReturnType PllStatus;
  Clock_Ip_PllStatusType RetValue;
  <unnamed type> _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  Clock_Ip_PllStatusReturnType (*<Ta4a>) (Clock_Ip_NameType) _5;
  unsigned char _7;
  long unsigned int _8;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG RetValue => 2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_aeHwPllName[Index_14];
  _2 = Clock_Ip_au8ClockFeatures[_1][1];
  _3 = (int) _2;
  _4 = Clock_Ip_au8PllCallbackIndex[_3];
  CallbackIndex_20 = (uint32) _4;
  # DEBUG CallbackIndex => CallbackIndex_20
  # DEBUG BEGIN_STMT
  _5 = Clock_Ip_axPllCallbacks[CallbackIndex_20].Complete;
  PllStatus_22 = _5 (_1);
  # DEBUG PllStatus => PllStatus_22
  # DEBUG BEGIN_STMT
  if (PllStatus_22 == 1)
    goto <bb 8>; [5.50%]
  else
    goto <bb 4>; [94.50%]

  <bb 4> [local count: 958878293]:
  # DEBUG BEGIN_STMT
  if (PllStatus_22 == 2)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 326018619]:
  # DEBUG BEGIN_STMT
  # DEBUG RetValue => 0

  <bb 6> [local count: 958878293]:
  # RetValue_10 = PHI <RetValue_11(4), 0(5)>
  # DEBUG RetValue => RetValue_10
  # DEBUG BEGIN_STMT
  Index_23 = Index_14 + 1;
  # DEBUG Index => Index_23

  <bb 7> [local count: 1073741824]:
  # RetValue_11 = PHI <2(2), RetValue_10(6)>
  # Index_14 = PHI <0(2), Index_23(6)>
  # DEBUG Index => Index_14
  # DEBUG RetValue => RetValue_11
  # DEBUG BEGIN_STMT
  _7 = Clock_Ip_driverContext.HwPllsNo;
  _8 = (long unsigned int) _7;
  if (_8 > Index_14)
    goto <bb 3>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 8> [local count: 114863532]:
  # RetValue_12 = PHI <1(3), RetValue_11(7)>
  # DEBUG RetValue => RetValue_12
  # DEBUG BEGIN_STMT
  if (RetValue_12 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 57431766]:
  # Index_15 = PHI <0(8)>
  RetValue_6 = Clock_Ip_GetPllStatus.part.0 ();

  <bb 10> [local count: 114863531]:
  # RetValue_13 = PHI <RetValue_12(8), RetValue_6(9)>
  # DEBUG RetValue => RetValue_13
  # DEBUG BEGIN_STMT
  return RetValue_13;

}


Clock_Ip_InitClock (const struct Clock_Ip_ClockConfigType * Config)
{
  uint32 Index;
  uint32 CallbackIndex;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.0_1;
  <unnamed type> _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  void (*<Ta78>) (const struct Clock_Ip_CmuConfigType *) _6;
  const struct Clock_Ip_CmuConfigType * _7;
  unsigned char _8;
  long unsigned int _9;
  <unnamed type> _10;
  unsigned char _11;
  int _12;
  unsigned char _13;
  void (*<T9ff>) (const struct Clock_Ip_IrcoscConfigType *) _14;
  const struct Clock_Ip_IrcoscConfigType * _15;
  unsigned char _16;
  long unsigned int _17;
  <unnamed type> _18;
  unsigned char _19;
  int _20;
  unsigned char _21;
  void (*<Ta0e>) (const struct Clock_Ip_XoscConfigType *) _22;
  const struct Clock_Ip_XoscConfigType * _23;
  unsigned char _24;
  long unsigned int _25;
  <unnamed type> _26;
  unsigned char _27;
  int _28;
  unsigned char _29;
  void (*<Ta89>) (const struct Clock_Ip_PcfsConfigType *, uint32) _30;
  const struct Clock_Ip_PcfsConfigType * _31;
  unsigned char _32;
  long unsigned int _33;
  <unnamed type> _34;
  unsigned char _35;
  int _36;
  unsigned char _37;
  void (*<Ta27>) (const struct Clock_Ip_DividerTriggerConfigType *) _38;
  const struct Clock_Ip_DividerTriggerConfigType * _39;
  unsigned char _40;
  long unsigned int _41;
  <unnamed type> _42;
  unsigned char _43;
  int _44;
  unsigned char _45;
  void (*<Ta1c>) (const struct Clock_Ip_DividerConfigType *) _46;
  const struct Clock_Ip_DividerConfigType * _47;
  unsigned char _48;
  long unsigned int _49;
  <unnamed type> _50;
  unsigned char _51;
  int _52;
  unsigned char _53;
  void (*<Ta27>) (const struct Clock_Ip_DividerTriggerConfigType *) _54;
  const struct Clock_Ip_DividerTriggerConfigType * _55;
  unsigned char _56;
  long unsigned int _57;
  <unnamed type> _58;
  unsigned char _59;
  int _60;
  unsigned char _61;
  void (*<Ta44>) (const struct Clock_Ip_PllConfigType *) _62;
  const struct Clock_Ip_PllConfigType * _63;
  unsigned char _64;
  long unsigned int _65;
  <unnamed type> _66;
  unsigned char _67;
  int _68;
  unsigned char _69;
  void (*<Ta73>) (const struct Clock_Ip_CmuConfigType *, uint32) _70;
  const struct Clock_Ip_CmuConfigType * _71;
  unsigned char _72;
  long unsigned int _73;
  <unnamed type> _74;
  unsigned char _75;
  int _76;
  unsigned char _77;
  void (*<Ta0e>) (const struct Clock_Ip_XoscConfigType *) _78;
  const struct Clock_Ip_XoscConfigType * _79;
  unsigned char _80;
  long unsigned int _81;
  <unnamed type> _82;
  unsigned char _83;
  int _84;
  unsigned char _85;
  void (*<Ta44>) (const struct Clock_Ip_PllConfigType *) _86;
  const struct Clock_Ip_PllConfigType * _87;
  unsigned char _88;
  long unsigned int _89;
  <unnamed type> _90;
  unsigned char _91;
  int _92;
  unsigned char _93;
  void (*<Ta33>) (const struct Clock_Ip_FracDivConfigType *) _94;
  const struct Clock_Ip_FracDivConfigType * _95;
  unsigned char _96;
  long unsigned int _97;
  <unnamed type> _98;
  <unnamed type> _99;
  <unnamed type> _100;
  unsigned char _101;
  int _102;
  unsigned char _103;
  void (*<Ta57>) (const struct Clock_Ip_SelectorConfigType *) _104;
  const struct Clock_Ip_SelectorConfigType * _105;
  unsigned char _106;
  long unsigned int _107;
  unsigned char _108;
  <unnamed type> _109;
  unsigned char _110;
  int _111;
  unsigned char _112;
  void (*<Ta63>) (const struct Clock_Ip_GateConfigType *) _113;
  const struct Clock_Ip_GateConfigType * _114;
  unsigned char _115;
  long unsigned int _116;
  <unnamed type> _117;
  unsigned char _118;
  int _119;
  unsigned char _120;
  void (*<Ta78>) (const struct Clock_Ip_CmuConfigType *) _121;
  const struct Clock_Ip_CmuConfigType * _122;
  unsigned char _123;
  long unsigned int _124;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig = Config_159(D);
  # DEBUG BEGIN_STMT
  Clock_Ip_Command (Config_159(D), 1);
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.0_1 = Clock_Ip_pxConfig;
  if (Clock_Ip_pxConfig.0_1 != 0B)
    goto <bb 53>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 53> [local count: 82678120]:
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 330712481]:
  # DEBUG BEGIN_STMT
  _2 = Config_159(D)->Cmus[Index_125].Name;
  _3 = Clock_Ip_au8ClockFeatures[_2][1];
  _4 = (int) _3;
  _5 = Clock_Ip_au8CmuCallbackIndex[_4];
  CallbackIndex_162 = (uint32) _5;
  # DEBUG CallbackIndex => CallbackIndex_162
  # DEBUG BEGIN_STMT
  _6 = Clock_Ip_axCmuCallbacks[CallbackIndex_162].Reset;
  _7 = &Config_159(D)->Cmus[Index_125];
  _6 (_7);
  # DEBUG BEGIN_STMT
  Index_164 = Index_125 + 1;
  # DEBUG Index => Index_164

  <bb 4> [local count: 413390601]:
  # Index_125 = PHI <Index_164(3), 0(53)>
  # DEBUG Index => Index_125
  # DEBUG BEGIN_STMT
  _8 = Config_159(D)->CmusCount;
  _9 = (long unsigned int) _8;
  if (_9 > Index_125)
    goto <bb 3>; [80.00%]
  else
    goto <bb 5>; [20.00%]

  <bb 5> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Clock_Ip_ResetClockConfiguration (Config_159(D));
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 236258637]:
  # DEBUG BEGIN_STMT
  _10 = Config_159(D)->Ircoscs[Index_126].Name;
  _11 = Clock_Ip_au8ClockFeatures[_10][1];
  _12 = (int) _11;
  _13 = Clock_Ip_au8IrcoscCallbackIndex[_12];
  CallbackIndex_212 = (uint32) _13;
  # DEBUG CallbackIndex => CallbackIndex_212
  # DEBUG BEGIN_STMT
  _14 = Clock_Ip_axIntOscCallbacks[CallbackIndex_212].Set;
  _15 = &Config_159(D)->Ircoscs[Index_126];
  _14 (_15);
  # DEBUG BEGIN_STMT
  Index_214 = Index_126 + 1;
  # DEBUG Index => Index_214

  <bb 7> [local count: 354370238]:
  # Index_126 = PHI <0(5), Index_214(6)>
  # DEBUG Index => Index_126
  # DEBUG BEGIN_STMT
  _16 = Config_159(D)->IrcoscsCount;
  _17 = (long unsigned int) _16;
  if (_17 > Index_126)
    goto <bb 6>; [66.67%]
  else
    goto <bb 52>; [33.33%]

  <bb 52> [local count: 118111600]:
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 236258637]:
  # DEBUG BEGIN_STMT
  _18 = Config_159(D)->Xoscs[Index_127].Name;
  _19 = Clock_Ip_au8ClockFeatures[_18][1];
  _20 = (int) _19;
  _21 = Clock_Ip_au8XoscCallbackIndex[_20];
  CallbackIndex_209 = (uint32) _21;
  # DEBUG CallbackIndex => CallbackIndex_209
  # DEBUG BEGIN_STMT
  _22 = Clock_Ip_axExtOscCallbacks[CallbackIndex_209].Set;
  _23 = &Config_159(D)->Xoscs[Index_127];
  _22 (_23);
  # DEBUG BEGIN_STMT
  Index_211 = Index_127 + 1;
  # DEBUG Index => Index_211

  <bb 9> [local count: 354370238]:
  # Index_127 = PHI <Index_211(8), 0(52)>
  # DEBUG Index => Index_127
  # DEBUG BEGIN_STMT
  _24 = Config_159(D)->XoscsCount;
  _25 = (long unsigned int) _24;
  if (_25 > Index_127)
    goto <bb 8>; [66.67%]
  else
    goto <bb 10>; [33.33%]

  <bb 10> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Clock_Ip_UpdateDriverContext (Config_159(D));
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _26 = Config_159(D)->Pcfs[Index_128].Name;
  _27 = Clock_Ip_au8ClockFeatures[_26][1];
  _28 = (int) _27;
  _29 = Clock_Ip_au8PcfsCallbackIndex[_28];
  CallbackIndex_206 = (uint32) _29;
  # DEBUG CallbackIndex => CallbackIndex_206
  # DEBUG BEGIN_STMT
  _30 = Clock_Ip_axPcfsCallbacks[CallbackIndex_206].Set;
  _31 = &Config_159(D)->Pcfs[Index_128];
  _30 (_31, Index_128);
  # DEBUG BEGIN_STMT
  Index_208 = Index_128 + 1;
  # DEBUG Index => Index_208

  <bb 12> [local count: 236223200]:
  # Index_128 = PHI <0(10), Index_208(11)>
  # DEBUG Index => Index_128
  # DEBUG BEGIN_STMT
  _32 = Config_159(D)->PcfsCount;
  _33 = (long unsigned int) _32;
  if (_33 > Index_128)
    goto <bb 11>; [50.00%]
  else
    goto <bb 51>; [50.00%]

  <bb 51> [local count: 118111600]:
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 826781201]:
  # DEBUG BEGIN_STMT
  _34 = Config_159(D)->DividerTriggers[Index_129].Name;
  _35 = Clock_Ip_au8ClockFeatures[_34][1];
  _36 = (int) _35;
  _37 = Clock_Ip_au8DividerTriggerCallbackIndex[_36];
  CallbackIndex_203 = (uint32) _37;
  # DEBUG CallbackIndex => CallbackIndex_203
  # DEBUG BEGIN_STMT
  _38 = Clock_Ip_axDividerTriggerCallbacks[CallbackIndex_203].Configure;
  _39 = &Config_159(D)->DividerTriggers[Index_129];
  _38 (_39);
  # DEBUG BEGIN_STMT
  Index_205 = Index_129 + 1;
  # DEBUG Index => Index_205

  <bb 14> [local count: 944892802]:
  # Index_129 = PHI <Index_205(13), 0(51)>
  # DEBUG Index => Index_129
  # DEBUG BEGIN_STMT
  _40 = Config_159(D)->DividerTriggersCount;
  _41 = (long unsigned int) _40;
  if (_41 > Index_129)
    goto <bb 13>; [87.50%]
  else
    goto <bb 50>; [12.50%]

  <bb 50> [local count: 118111600]:
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _42 = Config_159(D)->Dividers[Index_130].Name;
  _43 = Clock_Ip_au8ClockFeatures[_42][1];
  _44 = (int) _43;
  _45 = Clock_Ip_au8DividerCallbackIndex[_44];
  CallbackIndex_200 = (uint32) _45;
  # DEBUG CallbackIndex => CallbackIndex_200
  # DEBUG BEGIN_STMT
  _46 = Clock_Ip_axDividerCallbacks[CallbackIndex_200].Set;
  _47 = &Config_159(D)->Dividers[Index_130];
  _46 (_47);
  # DEBUG BEGIN_STMT
  Index_202 = Index_130 + 1;
  # DEBUG Index => Index_202

  <bb 16> [local count: 1073741824]:
  # Index_130 = PHI <Index_202(15), 0(50)>
  # DEBUG Index => Index_130
  # DEBUG BEGIN_STMT
  _48 = Config_159(D)->DividersCount;
  _49 = (long unsigned int) _48;
  if (_49 > Index_130)
    goto <bb 15>; [89.00%]
  else
    goto <bb 49>; [11.00%]

  <bb 49> [local count: 118111601]:
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 826781205]:
  # DEBUG BEGIN_STMT
  _50 = Config_159(D)->DividerTriggers[Index_131].Name;
  _51 = Clock_Ip_au8ClockFeatures[_50][1];
  _52 = (int) _51;
  _53 = Clock_Ip_au8DividerTriggerCallbackIndex[_52];
  CallbackIndex_197 = (uint32) _53;
  # DEBUG CallbackIndex => CallbackIndex_197
  # DEBUG BEGIN_STMT
  _54 = Clock_Ip_axDividerTriggerCallbacks[CallbackIndex_197].TriggerUpdate;
  _55 = &Config_159(D)->DividerTriggers[Index_131];
  _54 (_55);
  # DEBUG BEGIN_STMT
  Index_199 = Index_131 + 1;
  # DEBUG Index => Index_199

  <bb 18> [local count: 944892807]:
  # Index_131 = PHI <Index_199(17), 0(49)>
  # DEBUG Index => Index_131
  # DEBUG BEGIN_STMT
  _56 = Config_159(D)->DividerTriggersCount;
  _57 = (long unsigned int) _56;
  if (_57 > Index_131)
    goto <bb 17>; [87.50%]
  else
    goto <bb 48>; [12.50%]

  <bb 48> [local count: 118111601]:
  goto <bb 20>; [100.00%]

  <bb 19> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _58 = Config_159(D)->Plls[Index_132].Name;
  _59 = Clock_Ip_au8ClockFeatures[_58][1];
  _60 = (int) _59;
  _61 = Clock_Ip_au8PllCallbackIndex[_60];
  CallbackIndex_194 = (uint32) _61;
  # DEBUG CallbackIndex => CallbackIndex_194
  # DEBUG BEGIN_STMT
  _62 = Clock_Ip_axPllCallbacks[CallbackIndex_194].Set;
  _63 = &Config_159(D)->Plls[Index_132];
  _62 (_63);
  # DEBUG BEGIN_STMT
  Index_196 = Index_132 + 1;
  # DEBUG Index => Index_196

  <bb 20> [local count: 236223202]:
  # Index_132 = PHI <Index_196(19), 0(48)>
  # DEBUG Index => Index_132
  # DEBUG BEGIN_STMT
  _64 = Config_159(D)->PllsCount;
  _65 = (long unsigned int) _64;
  if (_65 > Index_132)
    goto <bb 19>; [50.00%]
  else
    goto <bb 47>; [50.00%]

  <bb 47> [local count: 118111601]:
  goto <bb 22>; [100.00%]

  <bb 21> [local count: 472446405]:
  # DEBUG BEGIN_STMT
  _66 = Config_159(D)->Cmus[Index_133].Name;
  _67 = Clock_Ip_au8ClockFeatures[_66][1];
  _68 = (int) _67;
  _69 = Clock_Ip_au8CmuCallbackIndex[_68];
  CallbackIndex_191 = (uint32) _69;
  # DEBUG CallbackIndex => CallbackIndex_191
  # DEBUG BEGIN_STMT
  _70 = Clock_Ip_axCmuCallbacks[CallbackIndex_191].Set;
  _71 = &Config_159(D)->Cmus[Index_133];
  _70 (_71, Index_133);
  # DEBUG BEGIN_STMT
  Index_193 = Index_133 + 1;
  # DEBUG Index => Index_193

  <bb 22> [local count: 590558007]:
  # Index_133 = PHI <Index_193(21), 0(47)>
  # DEBUG Index => Index_133
  # DEBUG BEGIN_STMT
  _72 = Config_159(D)->CmusCount;
  _73 = (long unsigned int) _72;
  if (_73 > Index_133)
    goto <bb 21>; [80.00%]
  else
    goto <bb 46>; [20.00%]

  <bb 46> [local count: 118111601]:
  goto <bb 24>; [100.00%]

  <bb 23> [local count: 236258639]:
  # DEBUG BEGIN_STMT
  _74 = Config_159(D)->Xoscs[Index_134].Name;
  _75 = Clock_Ip_au8ClockFeatures[_74][1];
  _76 = (int) _75;
  _77 = Clock_Ip_au8XoscCallbackIndex[_76];
  CallbackIndex_188 = (uint32) _77;
  # DEBUG CallbackIndex => CallbackIndex_188
  # DEBUG BEGIN_STMT
  _78 = Clock_Ip_axExtOscCallbacks[CallbackIndex_188].Complete;
  _79 = &Config_159(D)->Xoscs[Index_134];
  _78 (_79);
  # DEBUG BEGIN_STMT
  Index_190 = Index_134 + 1;
  # DEBUG Index => Index_190

  <bb 24> [local count: 354370241]:
  # Index_134 = PHI <Index_190(23), 0(46)>
  # DEBUG Index => Index_134
  # DEBUG BEGIN_STMT
  _80 = Config_159(D)->XoscsCount;
  _81 = (long unsigned int) _80;
  if (_81 > Index_134)
    goto <bb 23>; [66.67%]
  else
    goto <bb 45>; [33.33%]

  <bb 45> [local count: 118111601]:
  goto <bb 26>; [100.00%]

  <bb 25> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _82 = Config_159(D)->Plls[Index_135].Name;
  _83 = Clock_Ip_au8ClockFeatures[_82][1];
  _84 = (int) _83;
  _85 = Clock_Ip_au8PllCallbackIndex[_84];
  CallbackIndex_185 = (uint32) _85;
  # DEBUG CallbackIndex => CallbackIndex_185
  # DEBUG BEGIN_STMT
  _86 = Clock_Ip_axPllCallbacks[CallbackIndex_185].Enable;
  _87 = &Config_159(D)->Plls[Index_135];
  _86 (_87);
  # DEBUG BEGIN_STMT
  Index_187 = Index_135 + 1;
  # DEBUG Index => Index_187

  <bb 26> [local count: 236223202]:
  # Index_135 = PHI <Index_187(25), 0(45)>
  # DEBUG Index => Index_135
  # DEBUG BEGIN_STMT
  _88 = Config_159(D)->PllsCount;
  _89 = (long unsigned int) _88;
  if (_89 > Index_135)
    goto <bb 25>; [50.00%]
  else
    goto <bb 44>; [50.00%]

  <bb 44> [local count: 118111601]:
  goto <bb 28>; [100.00%]

  <bb 27> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _90 = Config_159(D)->FracDivs[Index_136].Name;
  _91 = Clock_Ip_au8ClockFeatures[_90][1];
  _92 = (int) _91;
  _93 = Clock_Ip_au8FractionalDividerCallbackIndex[_92];
  CallbackIndex_182 = (uint32) _93;
  # DEBUG CallbackIndex => CallbackIndex_182
  # DEBUG BEGIN_STMT
  _94 = Clock_Ip_axFracDivCallbacks[CallbackIndex_182].Set;
  _95 = &Config_159(D)->FracDivs[Index_136];
  _94 (_95);
  # DEBUG BEGIN_STMT
  Index_184 = Index_136 + 1;
  # DEBUG Index => Index_184

  <bb 28> [local count: 236223202]:
  # Index_136 = PHI <Index_184(27), 0(44)>
  # DEBUG Index => Index_136
  # DEBUG BEGIN_STMT
  _96 = Config_159(D)->FracDivsCount;
  _97 = (long unsigned int) _96;
  if (_97 > Index_136)
    goto <bb 27>; [50.00%]
  else
    goto <bb 29>; [50.00%]

  <bb 29> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.ClockTreeIsConsumingPll = 0;
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.WaitStatesAreSupported = 0;
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.HwPllsNo = 1;
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.HwDfsNo = 0;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY NULL
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 34>; [100.00%]

  <bb 30> [local count: 955630216]:
  # DEBUG BEGIN_STMT
  _98 = Config_159(D)->Selectors[Index_137].Value;
  _99 = Clock_Ip_aeSourceTypeClockName[_98];
  if (_99 != 3)
    goto <bb 31>; [66.00%]
  else
    goto <bb 32>; [34.00%]

  <bb 31> [local count: 630715943]:
  # DEBUG BEGIN_STMT
  _100 = Config_159(D)->Selectors[Index_137].Name;
  _101 = Clock_Ip_au8ClockFeatures[_100][1];
  _102 = (int) _101;
  _103 = Clock_Ip_au8SelectorCallbackIndex[_102];
  CallbackIndex_179 = (uint32) _103;
  # DEBUG CallbackIndex => CallbackIndex_179
  # DEBUG BEGIN_STMT
  _104 = Clock_Ip_axSelectorCallbacks[CallbackIndex_179].Set;
  _105 = &Config_159(D)->Selectors[Index_137];
  _104 (_105);
  goto <bb 33>; [100.00%]

  <bb 32> [local count: 324914273]:
  # DEBUG BEGIN_STMT
  Clock_Ip_driverContext.ClockTreeIsConsumingPll = 1;

  <bb 33> [local count: 955630216]:
  # DEBUG BEGIN_STMT
  Index_181 = Index_137 + 1;
  # DEBUG Index => Index_181

  <bb 34> [local count: 1073741816]:
  # Index_137 = PHI <0(29), Index_181(33)>
  # DEBUG Index => Index_137
  # DEBUG BEGIN_STMT
  _106 = Config_159(D)->SelectorsCount;
  _107 = (long unsigned int) _106;
  if (_107 > Index_137)
    goto <bb 30>; [89.00%]
  else
    goto <bb 35>; [11.00%]

  <bb 35> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _108 = Clock_Ip_driverContext.ClockTreeIsConsumingPll;
  if (_108 == 0)
    goto <bb 43>; [50.00%]
  else
    goto <bb 41>; [50.00%]

  <bb 43> [local count: 59055800]:
  goto <bb 37>; [100.00%]

  <bb 36> [local count: 477815110]:
  # DEBUG BEGIN_STMT
  _109 = Config_159(D)->Gates[Index_138].Name;
  _110 = Clock_Ip_au8ClockFeatures[_109][1];
  _111 = (int) _110;
  _112 = Clock_Ip_au8GateCallbackIndex[_111];
  CallbackIndex_175 = (uint32) _112;
  # DEBUG CallbackIndex => CallbackIndex_175
  # DEBUG BEGIN_STMT
  _113 = Clock_Ip_axGateCallbacks[CallbackIndex_175].Set;
  _114 = &Config_159(D)->Gates[Index_138];
  _113 (_114);
  # DEBUG BEGIN_STMT
  Index_177 = Index_138 + 1;
  # DEBUG Index => Index_177

  <bb 37> [local count: 536870910]:
  # Index_138 = PHI <Index_177(36), 0(43)>
  # DEBUG Index => Index_138
  # DEBUG BEGIN_STMT
  _115 = Config_159(D)->GatesCount;
  _116 = (long unsigned int) _115;
  if (_116 > Index_138)
    goto <bb 36>; [89.00%]
  else
    goto <bb 42>; [11.00%]

  <bb 42> [local count: 59055800]:
  goto <bb 39>; [100.00%]

  <bb 38> [local count: 236223201]:
  # DEBUG BEGIN_STMT
  _117 = Config_159(D)->Cmus[Index_139].Name;
  _118 = Clock_Ip_au8ClockFeatures[_117][1];
  _119 = (int) _118;
  _120 = Clock_Ip_au8CmuCallbackIndex[_119];
  CallbackIndex_172 = (uint32) _120;
  # DEBUG CallbackIndex => CallbackIndex_172
  # DEBUG BEGIN_STMT
  _121 = Clock_Ip_axCmuCallbacks[CallbackIndex_172].Enable;
  _122 = &Config_159(D)->Cmus[Index_139];
  _121 (_122);
  # DEBUG BEGIN_STMT
  Index_174 = Index_139 + 1;
  # DEBUG Index => Index_174

  <bb 39> [local count: 295279002]:
  # Index_139 = PHI <Index_174(38), 0(42)>
  # DEBUG Index => Index_139
  # DEBUG BEGIN_STMT
  _123 = Config_159(D)->CmusCount;
  _124 = (long unsigned int) _123;
  if (_124 > Index_139)
    goto <bb 38>; [80.00%]
  else
    goto <bb 40>; [20.00%]

  <bb 40> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  Clock_Ip_Command (Config_159(D), 4);

  <bb 41> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  return;

}


Clock_Ip_Init (const struct Clock_Ip_ClockConfigType * Config)
{
  Clock_Ip_PllStatusType PllStatus;
  Clock_Ip_StatusType ClockStatus;
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ClockStatus => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_InitClock (Config_5(D));
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_driverContext.ClockTreeIsConsumingPll;
  if (_1 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  PllStatus_8 = Clock_Ip_GetPllStatus ();
  # DEBUG PllStatus => PllStatus_8
  # DEBUG BEGIN_STMT
  if (PllStatus_8 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 116930485]:
  # DEBUG BEGIN_STMT
  Clock_Ip_DistributePll ();
  # DEBUG BEGIN_STMT
  # DEBUG ClockStatus => 0

  <bb 5> [local count: 1073741824]:
  # ClockStatus_2 = PHI <0(4), 0(2), 1(3)>
  # DEBUG ClockStatus => ClockStatus_2
  # DEBUG BEGIN_STMT
  return ClockStatus_2;

}


Clock_Ip_ResetClockConfiguration (const struct Clock_Ip_ClockConfigType * Config)
{
  uint32 Index;
  uint32 CallbackIndex;
  unsigned char _1;
  long unsigned int _2;
  <unnamed type> _3;
  unsigned char _4;
  int _5;
  unsigned char _6;
  void (*<Ta57>) (const struct Clock_Ip_SelectorConfigType *) _7;
  const struct Clock_Ip_SelectorConfigType * _8;
  unsigned char _9;
  long unsigned int _10;
  <unnamed type> _11;
  unsigned char _12;
  int _13;
  unsigned char _14;
  void (*<Ta33>) (const struct Clock_Ip_FracDivConfigType *) _15;
  const struct Clock_Ip_FracDivConfigType * _16;
  unsigned char _17;
  long unsigned int _18;
  <unnamed type> _19;
  unsigned char _20;
  int _21;
  unsigned char _22;
  void (*<Ta44>) (const struct Clock_Ip_PllConfigType *) _23;
  const struct Clock_Ip_PllConfigType * _24;
  unsigned char _25;
  long unsigned int _26;
  <unnamed type> _27;
  unsigned char _28;
  int _29;
  unsigned char _30;
  void (*<Ta0e>) (const struct Clock_Ip_XoscConfigType *) _31;
  const struct Clock_Ip_XoscConfigType * _32;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Config_42(D)->SelectorsCount;
  Index_43 = (uint32) _1;
  # DEBUG Index => Index_43
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _2 = Index_33 + 4294967295;
  _3 = Config_42(D)->Selectors[_2].Name;
  _4 = Clock_Ip_au8ClockFeatures[_3][1];
  _5 = (int) _4;
  _6 = Clock_Ip_au8SelectorCallbackIndex[_5];
  CallbackIndex_53 = (uint32) _6;
  # DEBUG CallbackIndex => CallbackIndex_53
  # DEBUG BEGIN_STMT
  _7 = Clock_Ip_axSelectorCallbacks[CallbackIndex_53].Reset;
  _8 = &Config_42(D)->Selectors[_2];
  _7 (_8);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _2

  <bb 4> [local count: 1073741824]:
  # Index_33 = PHI <Index_43(2), _2(3)>
  # DEBUG Index => Index_33
  # DEBUG BEGIN_STMT
  if (Index_33 != 0)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _9 = Config_42(D)->FracDivsCount;
  Index_44 = (uint32) _9;
  # DEBUG Index => Index_44
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _10 = Index_34 + 4294967295;
  _11 = Config_42(D)->FracDivs[_10].Name;
  _12 = Clock_Ip_au8ClockFeatures[_11][1];
  _13 = (int) _12;
  _14 = Clock_Ip_au8FractionalDividerCallbackIndex[_13];
  CallbackIndex_51 = (uint32) _14;
  # DEBUG CallbackIndex => CallbackIndex_51
  # DEBUG BEGIN_STMT
  _15 = Clock_Ip_axFracDivCallbacks[CallbackIndex_51].Reset;
  _16 = &Config_42(D)->FracDivs[_10];
  _15 (_16);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _10

  <bb 7> [local count: 236223201]:
  # Index_34 = PHI <Index_44(5), _10(6)>
  # DEBUG Index => Index_34
  # DEBUG BEGIN_STMT
  if (Index_34 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _17 = Config_42(D)->PllsCount;
  Index_45 = (uint32) _17;
  # DEBUG Index => Index_45
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _18 = Index_35 + 4294967295;
  _19 = Config_42(D)->Plls[_18].Name;
  _20 = Clock_Ip_au8ClockFeatures[_19][1];
  _21 = (int) _20;
  _22 = Clock_Ip_au8PllCallbackIndex[_21];
  CallbackIndex_49 = (uint32) _22;
  # DEBUG CallbackIndex => CallbackIndex_49
  # DEBUG BEGIN_STMT
  _23 = Clock_Ip_axPllCallbacks[CallbackIndex_49].Reset;
  _24 = &Config_42(D)->Plls[_18];
  _23 (_24);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _18

  <bb 10> [local count: 236223201]:
  # Index_35 = PHI <Index_45(8), _18(9)>
  # DEBUG Index => Index_35
  # DEBUG BEGIN_STMT
  if (Index_35 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  _25 = Config_42(D)->XoscsCount;
  Index_46 = (uint32) _25;
  # DEBUG Index => Index_46
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 236258638]:
  # DEBUG BEGIN_STMT
  _26 = Index_36 + 4294967295;
  _27 = Config_42(D)->Xoscs[_26].Name;
  _28 = Clock_Ip_au8ClockFeatures[_27][1];
  _29 = (int) _28;
  _30 = Clock_Ip_au8XoscCallbackIndex[_29];
  CallbackIndex_47 = (uint32) _30;
  # DEBUG CallbackIndex => CallbackIndex_47
  # DEBUG BEGIN_STMT
  _31 = Clock_Ip_axExtOscCallbacks[CallbackIndex_47].Reset;
  _32 = &Config_42(D)->Xoscs[_26];
  _31 (_32);
  # DEBUG BEGIN_STMT
  # DEBUG Index => _26

  <bb 13> [local count: 354370239]:
  # Index_36 = PHI <Index_46(11), _26(12)>
  # DEBUG Index => Index_36
  # DEBUG BEGIN_STMT
  if (Index_36 != 0)
    goto <bb 12>; [66.67%]
  else
    goto <bb 14>; [33.33%]

  <bb 14> [local count: 118111601]:
  return;

}


Clock_Ip_CallEmptyCallbacks ()
{
  static boolean FunctionWasCalled = 0;
  unsigned char FunctionWasCalled.4_1;
  void (*<Ta73>) (const struct Clock_Ip_CmuConfigType *, uint32) _2;
  void (*<Ta02>) (Clock_Ip_NameType) _3;
  void (*<Ta02>) (Clock_Ip_NameType) _4;
  Clock_Ip_CmuStatusType (*<Ta7d>) (Clock_Ip_NameType) _5;
  void (*<Ta1c>) (const struct Clock_Ip_DividerConfigType *) _6;
  void (*<Ta27>) (const struct Clock_Ip_DividerTriggerConfigType *) _7;
  void (*<Ta0e>) (const struct Clock_Ip_XoscConfigType *) _8;
  void (*<Ta33>) (const struct Clock_Ip_FracDivConfigType *) _9;
  Clock_Ip_DfsStatusType (*<Ta39>) (Clock_Ip_NameType) _10;
  void (*<Ta63>) (const struct Clock_Ip_GateConfigType *) _11;
  void (*<Ta68>) (Clock_Ip_NameType, boolean) _12;
  void (*<T9ff>) (const struct Clock_Ip_IrcoscConfigType *) _13;
  void (*<Ta44>) (const struct Clock_Ip_PllConfigType *) _14;
  Clock_Ip_PllStatusReturnType (*<Ta4a>) (Clock_Ip_NameType) _15;
  void (*<Ta57>) (const struct Clock_Ip_SelectorConfigType *) _16;
  void (*<Ta89>) (const struct Clock_Ip_PcfsConfigType *, uint32) _17;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  FunctionWasCalled.4_1 = FunctionWasCalled;
  if (FunctionWasCalled.4_1 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  FunctionWasCalled = 1;
  # DEBUG BEGIN_STMT
  _2 = Clock_Ip_axCmuCallbacks[0].Set;
  _2 (0B, 0);
  # DEBUG BEGIN_STMT
  _3 = Clock_Ip_axCmuCallbacks[0].Disable;
  _3 (125);
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_axCmuCallbacks[0].Clear;
  _4 (125);
  # DEBUG BEGIN_STMT
  _5 = Clock_Ip_axCmuCallbacks[0].GetStatus;
  _5 (125);
  # DEBUG BEGIN_STMT
  _6 = Clock_Ip_axDividerCallbacks[0].Set;
  _6 (0B);
  # DEBUG BEGIN_STMT
  _7 = Clock_Ip_axDividerTriggerCallbacks[0].Configure;
  _7 (0B);
  # DEBUG BEGIN_STMT
  _8 = Clock_Ip_axExtOscCallbacks[0].Reset;
  _8 (0B);
  # DEBUG BEGIN_STMT
  _9 = Clock_Ip_axFracDivCallbacks[0].Set;
  _9 (0B);
  # DEBUG BEGIN_STMT
  _10 = Clock_Ip_axFracDivCallbacks[0].Complete;
  _10 (125);
  # DEBUG BEGIN_STMT
  _11 = Clock_Ip_axGateCallbacks[0].Set;
  _11 (0B);
  # DEBUG BEGIN_STMT
  _12 = Clock_Ip_axGateCallbacks[0].Update;
  _12 (125, 0);
  # DEBUG BEGIN_STMT
  _13 = Clock_Ip_axIntOscCallbacks[0].Set;
  _13 (0B);
  # DEBUG BEGIN_STMT
  _14 = Clock_Ip_axPllCallbacks[0].Set;
  _14 (0B);
  # DEBUG BEGIN_STMT
  _15 = Clock_Ip_axPllCallbacks[0].Complete;
  _15 (125);
  # DEBUG BEGIN_STMT
  _16 = Clock_Ip_axSelectorCallbacks[0].Set;
  _16 (0B);
  # DEBUG BEGIN_STMT
  _17 = Clock_Ip_axPcfsCallbacks[0].Set;
  _17 (0B, 0);

  <bb 4> [local count: 1073741824]:
  return;

}


Clock_Ip_UpdateDriverContext (const struct Clock_Ip_ClockConfigType * Config)
{
  uint8 Index;
  const struct Clock_Ip_ClockConfigType * Clock_Ip_pxConfig.1_1;
  int _2;
  <unnamed type> _3;
  long unsigned int _4;
  unsigned char _5;
  int _6;
  <unnamed type> _7;
  unsigned char _8;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Clock_Ip_pxConfig.1_1 = Clock_Ip_pxConfig;
  Clock_Ip_Command (Clock_Ip_pxConfig.1_1, 2);
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630220]:
  # DEBUG BEGIN_STMT
  _2 = (int) Index_9;
  _3 = Config_15(D)->ExtClks[_2].Name;
  _4 = Config_15(D)->ExtClks[_2].Value;
  Clock_Ip_SetExternalSignalFrequency (_3, _4);
  # DEBUG BEGIN_STMT
  Index_20 = Index_9 + 1;
  # DEBUG Index => Index_20

  <bb 4> [local count: 1073741821]:
  # Index_9 = PHI <0(2), Index_20(3)>
  # DEBUG Index => Index_9
  # DEBUG BEGIN_STMT
  _5 = Config_15(D)->ExtClksCount;
  if (_5 > Index_9)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Clock_Ip_CallEmptyCallbacks ();
  # DEBUG BEGIN_STMT
  # DEBUG Index => 1
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _6 = (int) Index_10;
  _7 = Config_15(D)->ConfiguredFrequencies[_6].Name;
  Clock_Ip_FreqIds[_7] = Index_10;
  # DEBUG BEGIN_STMT
  Index_18 = Index_10 + 1;
  # DEBUG Index => Index_18

  <bb 7> [local count: 1073741824]:
  # Index_10 = PHI <1(5), Index_18(6)>
  # DEBUG Index => Index_10
  # DEBUG BEGIN_STMT
  _8 = Config_15(D)->ConfigureFrequenciesCount;
  if (_8 > Index_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111601]:
  return;

}


Clock_Ip_NotificatonsEmptyCallback (Clock_Ip_NotificationType Notification, Clock_Ip_NameType ClockName)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


