E2E_MemCpy32 (void * dst, const void * src, uint32_least len)
{
  uint32_least len2;
  uint8 * dst2;
  const uint8 * src2;
  long unsigned int src2.0_1;
  long unsigned int _2;
  long unsigned int dst2.1_3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int src2.2_6;
  long unsigned int _7;
  long unsigned int dst2.3_8;
  long unsigned int _9;
  short unsigned int _10;
  unsigned char _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  src2_25 = src_24(D);
  # DEBUG src2 => src2_25
  # DEBUG BEGIN_STMT
  dst2_27 = dst_26(D);
  # DEBUG dst2 => dst2_27
  # DEBUG BEGIN_STMT
  len2_29 = len_28(D);
  # DEBUG len2 => len2_29
  # DEBUG BEGIN_STMT
  if (len2_29 > 15)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  src2.0_1 = (long unsigned int) src2_25;
  _2 = src2.0_1 & 3;
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  dst2.1_3 = (long unsigned int) dst2_27;
  _4 = dst2.1_3 & 3;
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _5 = MEM[(const uint32 *)src2_12];
  MEM[(uint32 *)dst2_15] = _5;
  # DEBUG BEGIN_STMT
  src2_32 = src2_12 + 4;
  # DEBUG src2 => src2_32
  # DEBUG BEGIN_STMT
  dst2_33 = dst2_15 + 4;
  # DEBUG dst2 => dst2_33
  # DEBUG BEGIN_STMT
  len2_34 = len2_18 + 4294967292;
  # DEBUG len2 => len2_34

  <bb 6> :
  # src2_12 = PHI <src2_25(4), src2_32(5)>
  # dst2_15 = PHI <dst2_27(4), dst2_33(5)>
  # len2_18 = PHI <len2_29(4), len2_34(5)>
  # DEBUG len2 => len2_18
  # DEBUG dst2 => dst2_15
  # DEBUG src2 => src2_12
  # DEBUG BEGIN_STMT
  if (len2_18 > 3)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  src2.2_6 = (long unsigned int) src2_25;
  _7 = src2.2_6 & 1;
  if (_7 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  dst2.3_8 = (long unsigned int) dst2_27;
  _9 = dst2.3_8 & 1;
  if (_9 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _10 = MEM[(const uint16 *)src2_13];
  MEM[(uint16 *)dst2_16] = _10;
  # DEBUG BEGIN_STMT
  src2_36 = src2_13 + 2;
  # DEBUG src2 => src2_36
  # DEBUG BEGIN_STMT
  dst2_37 = dst2_16 + 2;
  # DEBUG dst2 => dst2_37
  # DEBUG BEGIN_STMT
  len2_38 = len2_19 + 4294967294;
  # DEBUG len2 => len2_38

  <bb 10> :
  # src2_13 = PHI <src2_25(8), src2_36(9)>
  # dst2_16 = PHI <dst2_27(8), dst2_37(9)>
  # len2_19 = PHI <len2_29(8), len2_38(9)>
  # DEBUG len2 => len2_19
  # DEBUG dst2 => dst2_16
  # DEBUG src2 => src2_13
  # DEBUG BEGIN_STMT
  if (len2_19 > 1)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _11 = *src2_14;
  *dst2_17 = _11;
  # DEBUG BEGIN_STMT
  src2_40 = src2_14 + 1;
  # DEBUG src2 => src2_40
  # DEBUG BEGIN_STMT
  dst2_41 = dst2_17 + 1;
  # DEBUG dst2 => dst2_41
  # DEBUG BEGIN_STMT
  len2_42 = len2_20 + 4294967295;
  # DEBUG len2 => len2_42

  <bb 12> :
  # src2_14 = PHI <src2_12(6), src2_40(11), src2_25(2), src2_13(10), src2_25(8), src2_25(7)>
  # dst2_17 = PHI <dst2_15(6), dst2_41(11), dst2_27(2), dst2_16(10), dst2_27(8), dst2_27(7)>
  # len2_20 = PHI <len2_18(6), len2_42(11), len2_29(2), len2_19(10), len2_29(8), len2_29(7)>
  # DEBUG len2 => len2_20
  # DEBUG dst2 => dst2_17
  # DEBUG src2 => src2_14
  # DEBUG BEGIN_STMT
  if (len2_20 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  return;

}


