
Marking local functions:


Marking externally visible functions: OS_WrapRunSchedule


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_RunSchedule/2 (OS_RunSchedule) @06c59c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_WrapRunSchedule/0 
  Calls: 
OS_kernelData/1 (OS_kernelData) @06c35678
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_WrapRunSchedule/0 (addr)OS_WrapRunSchedule/0 (read)OS_WrapRunSchedule/0 (write)OS_WrapRunSchedule/0 (write)
  Availability: not_available
  Varpool flags:
OS_WrapRunSchedule/0 (OS_WrapRunSchedule) @06c59a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_RunSchedule/2 
__attribute__((target ("general-regs-only")))
OS_WrapRunSchedule (const struct os_alarm_t * a)
{
  struct os_kerneldata_t * const kernel_data;
  os_uint8_t save;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  save = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;
  # DEBUG BEGIN_STMT
  _1 = a->object;
  _2 = (unsigned char) _1;
  OS_RunSchedule (_2);
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = save;
  return;

}


