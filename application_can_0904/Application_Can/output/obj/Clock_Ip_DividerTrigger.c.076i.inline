IPA function summary for Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0/9 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       6
  self stack:      12
  global stack:    12
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Clock_Ip_ReportClockErrors/8 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant

IPA function summary for Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 inlinable
  global time:     79.116871
  self size:       32
  global size:     32
  min size:       0
  self stack:      12
  global stack:    12
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:11.000000, time:22.574499,  executed if:(op0[ref offset: 32] != 0)
  array index:(op0[ref offset: 0] changed)
  calls:
    Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0/9 function not considered for inlining
      loop depth: 0 freq:0.07 size: 2 time: 11callee size: 3 stack:12 predicate: (op0[ref offset: 32] != 0)
    Clock_Ip_TimeoutExpired/7 function body not available
      loop depth: 1 freq:3.08 size: 5 time: 14 predicate: (op0[ref offset: 32] != 0)
       op0 is compile time invariant
       op1 is compile time invariant
    Clock_Ip_StartTimeout/6 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14 predicate: (op0[ref offset: 32] != 0)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 inlinable
  global time:     11.000000
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:4.000000, time:2.000000,  executed if:(op0[ref offset: 32] == 0)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 32] != 0)
  array index:(op0[ref offset: 0] changed)
  calls:

IPA function summary for Clock_Ip_Callback_DividerTriggerEmpty/0 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 107.116871 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0/9.
Enqueueing calls in Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2.
Enqueueing calls in Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1.
Enqueueing calls in Clock_Ip_Callback_DividerTriggerEmpty/0.

Considering Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0/9 with 7 size
 to be inlined into Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 in unknown:0
 Estimated badness is -0.053041, frequency 0.07.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 92.217059 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :        3 calls, 3.481625 freq, 0 count
IPA function summary for Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 inlinable
  global time:     79.217059
  self size:       32
  global size:     34
  min size:       0
  self stack:      12
  global stack:    24
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:11.500000, time:22.607895,  executed if:(op0[ref offset: 32] != 0)
  array index:(op0[ref offset: 0] changed)
  calls:
    Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0/9 inlined
      loop depth: 0 freq:0.07 size: 2 time: 11callee size: 3 stack:12
      Stack frame offset 12, callee self size 12, callee size 12
      Clock_Ip_ReportClockErrors/8 function body not available
        loop depth: 0 freq:0.07 size: 3 time: 12 predicate: (op0[ref offset: 32] != 0)
         op0 is compile time invariant
    Clock_Ip_TimeoutExpired/7 function body not available
      loop depth: 1 freq:3.08 size: 5 time: 14 predicate: (op0[ref offset: 32] != 0)
       op0 is compile time invariant
       op1 is compile time invariant
    Clock_Ip_StartTimeout/6 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14 predicate: (op0[ref offset: 32] != 0)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 inlinable
  global time:     11.000000
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:4.000000, time:2.000000,  executed if:(op0[ref offset: 32] == 0)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 32] != 0)
  array index:(op0[ref offset: 0] changed)
  calls:

IPA function summary for Clock_Ip_Callback_DividerTriggerEmpty/0 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0/9 (Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0) @06fa8e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0/9 is inline copy in Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2
  Availability: local
  Function flags: count:23248379 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (inlined) (23248379 (estimated locally),0.07 per call) 
  Calls: Clock_Ip_ReportClockErrors/8 (23248379 (estimated locally),0.07 per call) 
Clock_Ip_ReportClockErrors/8 (Clock_Ip_ReportClockErrors) @06f67d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0/9 (23248379 (estimated locally),0.07 per call) 
  Calls: 
Clock_Ip_TimeoutExpired/7 (Clock_Ip_TimeoutExpired) @06f67c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (1073741824 (estimated locally),3.08 per call) 
  Calls: 
Clock_Ip_StartTimeout/6 (Clock_Ip_StartTimeout) @06f67b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (114863532 (estimated locally),0.33 per call) 
  Calls: 
Clock_Ip_apxCgm/5 (Clock_Ip_apxCgm) @06fa2360
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (read)Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (read)Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8ClockFeatures/4 (Clock_Ip_au8ClockFeatures) @06fa2318
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (read)Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (read)Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (read)Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (read)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axDividerTriggerCallbacks/3 (Clock_Ip_axDividerTriggerCallbacks) @06fa2000
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_Callback_DividerTriggerEmpty/0 (addr)Clock_Ip_Callback_DividerTriggerEmpty/0 (addr)Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (addr)Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (addr)
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2 (Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat) @06f678c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8ClockFeatures/4 (read)Clock_Ip_au8ClockFeatures/4 (read)Clock_Ip_apxCgm/5 (read)
  Referring: Clock_Ip_axDividerTriggerCallbacks/3 (addr)
  Availability: available
  Function flags: count:348071309 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat.part.0/9 (inlined) (23248379 (estimated locally),0.07 per call) Clock_Ip_TimeoutExpired/7 (1073741824 (estimated locally),3.08 per call) Clock_Ip_StartTimeout/6 (114863532 (estimated locally),0.33 per call) 
Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1 (Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat) @06f67620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8ClockFeatures/4 (read)Clock_Ip_au8ClockFeatures/4 (read)Clock_Ip_apxCgm/5 (read)Clock_Ip_apxCgm/5 (read)
  Referring: Clock_Ip_axDividerTriggerCallbacks/3 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_Callback_DividerTriggerEmpty/0 (Clock_Ip_Callback_DividerTriggerEmpty) @06f67460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axDividerTriggerCallbacks/3 (addr)Clock_Ip_axDividerTriggerCallbacks/3 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 

;; Function Clock_Ip_Callback_DividerTriggerEmpty (Clock_Ip_Callback_DividerTriggerEmpty, funcdef_no=0, decl_uid=8830, cgraph_uid=1, symbol_order=0)

Clock_Ip_Callback_DividerTriggerEmpty (const struct Clock_Ip_DividerTriggerConfigType * Config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat (Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat, funcdef_no=1, decl_uid=8832, cgraph_uid=2, symbol_order=1)

Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat (const struct Clock_Ip_DividerTriggerConfigType * Config)
{
  uint32 SelectorIndex;
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  unsigned char _3;
  <unnamed type> _4;
  volatile struct Clock_Ip_CgmMuxType * _5;
  volatile struct Clock_Ip_CgmMuxType * _6;
  long unsigned int _7;
  long unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = Config_11(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_12 = (uint32) _2;
  # DEBUG Instance => Instance_12
  # DEBUG BEGIN_STMT
  _3 = Clock_Ip_au8ClockFeatures[_1][4];
  SelectorIndex_13 = (uint32) _3;
  # DEBUG SelectorIndex => SelectorIndex_13
  # DEBUG BEGIN_STMT
  _4 = Config_11(D)->TriggerType;
  if (_4 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _5 = Clock_Ip_apxCgm[Instance_12][SelectorIndex_13];
  _5->MUX_DIV_TRIG_CTRL ={v} 1;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 = Clock_Ip_apxCgm[Instance_12][SelectorIndex_13];
  _7 ={v} _6->MUX_DIV_TRIG_CTRL;
  _8 = _7 & 4294967294;
  _6->MUX_DIV_TRIG_CTRL ={v} _8;

  <bb 5> [local count: 1073741824]:
  return;

}



;; Function Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat (Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat, funcdef_no=2, decl_uid=8834, cgraph_uid=3, symbol_order=2)


Symbols to be put in SSA form
{ D.8870 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


Removing basic block 7
Removing basic block 9
Removing basic block 10
Removing basic block 11
Merging blocks 12 and 13
No longer having address taken: StartTime
No longer having address taken: ElapsedTime
No longer having address taken: TimeoutTicks

Symbols to be put in SSA form
{ D.8893 D.8894 D.8895 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 4, latch 5
;;  depth 1, outer 0
;;  nodes: 4 5
;; 2 succs { 3 8 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 4 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat (const struct Clock_Ip_DividerTriggerConfigType * Config)
{
  uint32 DividerStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  uint32 SelectorIndex;
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  unsigned char _4;
  <unnamed type> _5;
  volatile struct Clock_Ip_CgmMuxType * _6;
  long unsigned int _8;
  long unsigned int TimeoutTicks.0_9;
  <unnamed type> _24;

  <bb 2> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  _1 = Config_12(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_13 = (uint32) _2;
  # DEBUG Instance => Instance_13
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_au8ClockFeatures[_1][4];
  SelectorIndex_14 = (uint32) _4;
  # DEBUG SelectorIndex => SelectorIndex_14
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Config_12(D)->TriggerType;
  if (_5 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 3> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  _6 = Clock_Ip_apxCgm[Instance_13][SelectorIndex_14];
  _6->MUX_DIV_TRIG ={v} 1;
  # DEBUG BEGIN_STMT
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 ={v} _6->MUX_DIV_UPD_STAT;
  DividerStatus_18 = _8 & 1;
  # DEBUG DividerStatus => DividerStatus_18
  # DEBUG BEGIN_STMT
  TimeoutTicks.0_9 = TimeoutTicks;
  TimeoutOccurred_20 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_9);
  # DEBUG TimeoutOccurred => TimeoutOccurred_20
  # DEBUG BEGIN_STMT
  if (DividerStatus_18 != 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686025]:
  if (TimeoutOccurred_20 == 0)
    goto <bb 4>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 6> [local count: 114863532]:
  # TimeoutOccurred_3 = PHI <TimeoutOccurred_20(4), TimeoutOccurred_20(5)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_3 == 1)
    goto <bb 7>; [20.24%]
  else
    goto <bb 8>; [79.76%]

  <bb 7> [local count: 23248379]:
  # DEBUG Config => Config_12(D)
  # DEBUG INLINE_ENTRY Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat
  # DEBUG BEGIN_STMT
  _24 = Config_12(D)->Name;
  Clock_Ip_ReportClockErrors (1, _24);
  # DEBUG D#1 => {CLOBBER}
  # DEBUG StartTime => D#1
  # DEBUG D#2 => {CLOBBER}
  # DEBUG ElapsedTime => D#2
  # DEBUG D#3 => {CLOBBER}
  # DEBUG TimeoutTicks => D#3

  <bb 8> [local count: 348071309]:
  # DEBUG Config => NULL
  # DEBUG Instance => NULL
  # DEBUG SelectorIndex => NULL
  # DEBUG TimeoutOccurred => NULL
  # DEBUG StartTime => NULL
  # DEBUG ElapsedTime => NULL
  # DEBUG TimeoutTicks => NULL
  # DEBUG DividerStatus => NULL
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


