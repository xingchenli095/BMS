Mcu_Ipw_SleepOnExit (Mcu_SleepOnExitType SleepOnExit)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  if (SleepOnExit_2(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Power_Ip_DisableSleepOnExit ();
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Power_Ip_EnableSleepOnExit ();

  <bb 5> :
  return;

}


Mcu_Ipw_GetResetRawValue ()
{
  Power_Ip_RawResetType ResetReason;
  Mcu_RawResetType _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ResetReason_3 = Power_Ip_GetResetRawValue ();
  # DEBUG ResetReason => ResetReason_3
  # DEBUG BEGIN_STMT
  _4 = ResetReason_3;
  return _4;

}


Mcu_Ipw_GetResetReason ()
{
  Power_Ip_ResetType ResetReason;
  Mcu_ResetType _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ResetReason_1 = 27;
  # DEBUG ResetReason => ResetReason_1
  # DEBUG BEGIN_STMT
  ResetReason_4 = Power_Ip_GetResetReason ();
  # DEBUG ResetReason => ResetReason_4
  # DEBUG BEGIN_STMT
  _5 = ResetReason_4;
  return _5;

}


Mcu_Ipw_PerformReset (const struct Mcu_HwIPsConfigType * HwIPsConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Power_Ip_PerformReset (HwIPsConfigPtr_2(D));
  return;

}


Mcu_Ipw_SetMode (const struct Mcu_ModeConfigType * ModeConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Power_Ip_SetMode (ModeConfigPtr_2(D));
  return;

}


MCU_Ipw_GetClockFrequency (Clock_Ip_NameType ClockName)
{
  uint32 _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_GetClockFrequency (ClockName_2(D));
  return _4;

}


Mcu_Ipw_GetPllStatus ()
{
  Mcu_PllStatusType PllStatus;
  <unnamed type> _1;
  Mcu_PllStatusType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_GetPllStatus ();
  switch (_1) <default: <L2> [INV], case 0: <L0> [INV], case 1: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  PllStatus_6 = 51;
  # DEBUG PllStatus => PllStatus_6
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  PllStatus_5 = 204;
  # DEBUG PllStatus => PllStatus_5
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  PllStatus_7 = 90;
  # DEBUG PllStatus => PllStatus_7
  # DEBUG BEGIN_STMT

  <bb 6> :
  # PllStatus_2 = PHI <PllStatus_6(3), PllStatus_5(4), PllStatus_7(5)>
  # DEBUG PllStatus => PllStatus_2
  # DEBUG BEGIN_STMT
  _8 = PllStatus_2;
  return _8;

}


Mcu_Ipw_DistributePllClock ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Clock_Ip_DistributePll ();
  return;

}


Mcu_Ipw_InitClock (const struct Mcu_ClockConfigType * ClockConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Clock_Ip_InitClock (ClockConfigPtr_2(D));
  return;

}


Mcu_Ipw_Init (const struct Power_Ip_HwIPsConfigType * HwIPsConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Power_Ip_Init (HwIPsConfigPtr_2(D));
  return;

}


