__attribute__((target ("general-regs-only")))
OS_LocalChainScheduleTable (os_scheduleid_t sc, os_scheduleid_t sn)
{
  os_errorresult_t result;
  os_boolean_t nextIsAccessible;
  os_boolean_t curIsAccessible;
  os_intstatus_t is;
  struct os_scheduledynamic_t * snd;
  struct os_scheduledynamic_t * scd;
  const struct os_schedule_t * OS_scheduleTableBase.0_1;
  unsigned int _2;
  unsigned int _3;
  const struct os_schedule_t * _4;
  const struct os_schedule_t * OS_scheduleTableBase.1_5;
  unsigned int _6;
  unsigned int _7;
  const struct os_schedule_t * _8;
  short unsigned int OS_kernDisableLevel.2_9;
  const struct os_schedule_t * OS_scheduleTableBase.3_10;
  unsigned int _11;
  unsigned int _12;
  const struct os_schedule_t * _13;
  const struct os_appcontext_t * _14;
  const struct os_schedule_t * OS_scheduleTableBase.4_15;
  unsigned int _16;
  unsigned int _17;
  const struct os_schedule_t * _18;
  const struct os_appcontext_t * _19;
  unsigned char _20;
  unsigned int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned int _24;
  unsigned int _25;
  unsigned char _26;
  unsigned char _27;
  const struct os_schedule_t * OS_scheduleTableBase.5_28;
  unsigned char _29;
  unsigned int _30;
  unsigned int _31;
  const struct os_schedule_t * _32;
  struct os_scheduledynamic_t * _33;
  os_errorresult_t _59;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  result_37 = 0;
  # DEBUG result => result_37
  # DEBUG BEGIN_STMT
  OS_scheduleTableBase.0_1 = OS_scheduleTableBase;
  _2 = (unsigned int) sc_39(D);
  _3 = _2 * 36;
  _4 = OS_scheduleTableBase.0_1 + _3;
  scd_40 = _4->dynamic;
  # DEBUG scd => scd_40
  # DEBUG BEGIN_STMT
  OS_scheduleTableBase.1_5 = OS_scheduleTableBase;
  _6 = (unsigned int) sn_41(D);
  _7 = _6 * 36;
  _8 = OS_scheduleTableBase.1_5 + _7;
  snd_42 = _8->dynamic;
  # DEBUG snd => snd_42
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.2_9 = OS_kernDisableLevel;
  is_44 = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.2_9);
  # DEBUG is => is_44
  # DEBUG BEGIN_STMT
  OS_scheduleTableBase.3_10 = OS_scheduleTableBase;
  _11 = (unsigned int) sc_39(D);
  _12 = _11 * 36;
  _13 = OS_scheduleTableBase.3_10 + _12;
  _14 = _13->app;
  curIsAccessible_46 = OS_AppIsAccessible (_14);
  # DEBUG curIsAccessible => curIsAccessible_46
  # DEBUG BEGIN_STMT
  OS_scheduleTableBase.4_15 = OS_scheduleTableBase;
  _16 = (unsigned int) sn_41(D);
  _17 = _16 * 36;
  _18 = OS_scheduleTableBase.4_15 + _17;
  _19 = _18->app;
  nextIsAccessible_48 = OS_AppIsAccessible (_19);
  # DEBUG nextIsAccessible => nextIsAccessible_48
  # DEBUG BEGIN_STMT
  if (curIsAccessible_46 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (nextIsAccessible_48 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  result_57 = 154;
  # DEBUG result => result_57
  goto <bb 13>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _20 = scd_40->status;
  _21 = (unsigned int) _20;
  _22 = _21 & 7;
  if (_22 != 3)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _23 = scd_40->status;
  _24 = (unsigned int) _23;
  _25 = _24 & 7;
  if (_25 != 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  result_49 = 41;
  # DEBUG result => result_49
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _26 = snd_42->status;
  if (_26 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  result_56 = 42;
  # DEBUG result => result_56
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _27 = scd_40->chain;
  if (_27 != 255)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_scheduleTableBase.5_28 = OS_scheduleTableBase;
  _29 = scd_40->chain;
  _30 = (unsigned int) _29;
  _31 = _30 * 36;
  _32 = OS_scheduleTableBase.5_28 + _31;
  _33 = _32->dynamic;
  _33->status = 0;

  <bb 12> :
  # DEBUG BEGIN_STMT
  scd_40->chain = sn_41(D);
  # DEBUG BEGIN_STMT
  snd_42->status = 2;
  # DEBUG BEGIN_STMT
  snd_42->adjRemaining = 0;
  # DEBUG BEGIN_STMT
  snd_42->chain = 255;
  # DEBUG BEGIN_STMT
  snd_42->next = 0;

  <bb 13> :
  # result_34 = PHI <result_57(4), result_49(7), result_56(9), result_37(12)>
  # DEBUG result => result_34
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_44);
  # DEBUG BEGIN_STMT
  _59 = result_34;
  return _59;

}


