
Marking local functions:


Marking externally visible functions: OS_CallShutdownHook


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_CORTEXM_Call/10 (OS_CORTEXM_Call) @06d2c1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_CallShutdownHook/0 
  Calls: 
OS_SetHookProtection/9 (OS_SetHookProtection) @06d2c0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_CallShutdownHook/0 
  Calls: 
OS_sHookStackLen/8 (OS_sHookStackLen) @06c49ee8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_CallShutdownHook/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_sHookMpuSize/7 (OS_sHookMpuSize) @06c49ea0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CORTEXM_IntSetDisablingLevel/6 (OS_CORTEXM_IntSetDisablingLevel) @06d2c000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_CallShutdownHook/0 OS_CallShutdownHook/0 
  Calls: 
OS_kernDisableLevel/5 (OS_kernDisableLevel) @06c49d80
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_HookHandler/4 (OS_svc_HookHandler) @06c49d38
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_CallShutdownHook/0 (addr)OS_CallShutdownHook/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/3 (OS_Error) @06c69ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_CallShutdownHook/0 OS_CallShutdownHook/0 
  Calls: 
OS_configMode/2 (OS_configMode) @06c49ca8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06c49c60
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_CallShutdownHook/0 (addr)OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (write)OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (write)OS_CallShutdownHook/0 (addr)OS_CallShutdownHook/0 (write)OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (write)OS_CallShutdownHook/0 (addr)OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (addr)OS_CallShutdownHook/0 (write)OS_CallShutdownHook/0 (write)OS_CallShutdownHook/0 (read)OS_CallShutdownHook/0 (write)OS_CallShutdownHook/0 (write)OS_CallShutdownHook/0 (write)
  Availability: not_available
  Varpool flags:
OS_CallShutdownHook/0 (OS_CallShutdownHook) @06c69d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_configMode/2 (read)OS_kernelData/1 (read)OS_svc_HookHandler/4 (addr)OS_kernDisableLevel/5 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_configMode/2 (read)OS_kernelData/1 (addr)OS_sHookMpuSize/7 (read)OS_sHookMpuSize/7 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_sHookStackLen/8 (read)OS_kernelData/1 (write)OS_sHookMpuSize/7 (read)OS_kernelData/1 (addr)OS_kernDisableLevel/5 (read)OS_kernelData/1 (read)OS_kernelData/1 (addr)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_svc_HookHandler/4 (addr)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_CORTEXM_IntSetDisablingLevel/6 OS_Error/3 OS_CORTEXM_Call/10 OS_SetHookProtection/9 OS_CORTEXM_IntSetDisablingLevel/6 OS_Error/3 
   Indirect call
__attribute__((target ("general-regs-only")))
OS_CallShutdownHook (const struct os_appcontext_t * app, os_result_t code)
{
  register os_stackelement_t * OS_getSpResult;
  struct os_kerneldata_t * const k_data;
  register os_stackelement_t * OS_getSpResult;
  os_intstatus_t is;
  os_oldlevel_t saveOldSuspendAll;
  os_uint8_t saveNestSuspendAll;
  const struct os_appcontext_t * saveHookApp;
  struct os_kerneldata_t * const kernel_data;
  os_uint8_t iftmp.10;
  unsigned int iftmp.4;
  os_stackelement_t * D.7416;
  os_stackelement_t * D.7413;
  int iftmp.0;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  saveHookApp = OS_kernelData.hookApp;
  # DEBUG BEGIN_STMT
  OS_kernelData.hookApp = app;
  # DEBUG BEGIN_STMT
  OS_configMode.1_1 = OS_configMode;
  _2 = OS_configMode.1_1 & 64;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mov	%0, r13" : "result" "=r" OS_getSpResult);
  # DEBUG BEGIN_STMT
  D.7413 = OS_getSpResult;
  _3 = OS_kernelData.iStackBase;
  _4 = D.7413 - _3;
  _5 = app->shutdownHookStack;
  _6 = (int) _5;
  if (_4 <= _6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.0 = 0;

  <bb 6> :
  if (iftmp.0 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_HookHandler, 57, 0B);
  goto <bb 20>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.2_7 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.2_7);
  # DEBUG BEGIN_STMT
  saveNestSuspendAll = OS_kernelData.nestSuspendAll;
  # DEBUG BEGIN_STMT
  saveOldSuspendAll = OS_kernelData.oldSuspendAll;
  # DEBUG BEGIN_STMT
  OS_kernelData.nestSuspendAll = 0;
  # DEBUG BEGIN_STMT
  OS_configMode.3_8 = OS_configMode;
  _9 = OS_configMode.3_8 & 4096;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _10 = app->shutdownHook;
  _10 (code);
  goto <bb 17>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  k_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mov	%0, r13" : "result" "=r" OS_getSpResult);
  # DEBUG BEGIN_STMT
  D.7416 = OS_getSpResult;
  _11 = (unsigned int) D.7416;
  _12 = _11 + 4294967232;
  OS_sHookMpuSize.5_13 = OS_sHookMpuSize;
  if (OS_sHookMpuSize.5_13 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  OS_sHookMpuSize.6_14 = OS_sHookMpuSize;
  _15 = (unsigned int) OS_sHookMpuSize.6_14;
  _16 = _15 >> 1;
  _17 = _16 + 1;
  _18 = 1 << _17;
  iftmp.4 = -_18;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.4 = 4294967288;

  <bb 13> :
  _19 = iftmp.4 & _12;
  _20 = (os_stackelement_t *) _19;
  OS_kernelData.sHookContext.c.sp = _20;
  # DEBUG BEGIN_STMT
  _21 = OS_kernelData.sHookContext.c.sp;
  OS_sHookStackLen.7_22 = OS_sHookStackLen;
  _23 = OS_sHookStackLen.7_22 & 4294967292;
  _24 = -_23;
  _25 = _21 + _24;
  OS_kernelData.sHookContext.c.stackLimit = _25;
  # DEBUG BEGIN_STMT
  OS_sHookMpuSize.8_26 = OS_sHookMpuSize;
  _27 = (unsigned int) OS_sHookMpuSize.8_26;
  OS_SetHookProtection (app, &OS_kernelData.sHookContext.c, _27);
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.9_28 = OS_kernDisableLevel;
  _29 = app->shutdownHook;
  _30 = OS_kernelData.sHookContext.c.sp;
  if (app != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.10 = app->flags;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.10 = 1;

  <bb 16> :
  OS_CORTEXM_Call (OS_kernDisableLevel.9_28, _29, &OS_kernelData.sHookContext.c.sp, _30, iftmp.10, code);
  # DEBUG BEGIN_STMT
  OS_kernelData.sHookContext.c.sp = 0B;
  # DEBUG BEGIN_STMT
  OS_kernelData.sHookContext.c.stackLimit = 0B;

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = OS_kernelData.nestSuspendAll;
  if (_31 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_HookHandler, 55, 0B);

  <bb 19> :
  # DEBUG BEGIN_STMT
  OS_kernelData.nestSuspendAll = saveNestSuspendAll;
  # DEBUG BEGIN_STMT
  OS_kernelData.oldSuspendAll = saveOldSuspendAll;
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_kernelData.hookApp = saveHookApp;
  return;

}


