NvM_FatalError ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel = 0;
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 1;
  return;

}


NvM_CheckCondEraseNvBlock (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  short unsigned int NvM_GlobalGenericStatus.62_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  short unsigned int _7;
  int _8;
  int _9;
  int _10;
  unsigned char _11;
  uint16 _31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_18 = NvM_GetBlockIndexForValidId (BlockId_16(D));
  # DEBUG RetBlockIndex => RetBlockIndex_18
  # DEBUG BEGIN_STMT
  ConditionValid_19 = 1;
  # DEBUG ConditionValid => ConditionValid_19
  # DEBUG BEGIN_STMT
  if (RetBlockIndex_18 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ConditionValid_28 = 0;
  # DEBUG ConditionValid => ConditionValid_28
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 10);
  goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.62_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.62_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ConditionValid_26 = 0;
  # DEBUG ConditionValid => ConditionValid_26
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 20);
  goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex_18;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ConditionValid_24 = 0;
  # DEBUG ConditionValid => ConditionValid_24
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 21);
  goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex_18;
  _7 = NvM_AdminBlockTable[_6].NvMDynStatus;
  _8 = (int) _7;
  _9 = _8 & 8;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ConditionValid_22 = 0;
  # DEBUG ConditionValid => ConditionValid_22
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 25);
  goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _10 = (int) RetBlockIndex_18;
  _11 = NvM_BlockDescriptorTable[_10].blockJobPriority;
  if (_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ConditionValid_20 = 0;
  # DEBUG ConditionValid => ConditionValid_20
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 24);

  <bb 12> :
  # ConditionValid_13 = PHI <ConditionValid_28(3), ConditionValid_26(5), ConditionValid_24(7), ConditionValid_22(9), ConditionValid_19(10), ConditionValid_20(11)>
  # DEBUG ConditionValid => ConditionValid_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ConditionValid_13 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_30 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_30

  <bb 14> :
  # RetBlockIndex_12 = PHI <RetBlockIndex_18(12), RetBlockIndex_30(13)>
  # DEBUG RetBlockIndex => RetBlockIndex_12
  # DEBUG BEGIN_STMT
  _31 = RetBlockIndex_12;
  return _31;

}


NvM_CheckCondInvalidateNvBlock (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  short unsigned int NvM_GlobalGenericStatus.61_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  short unsigned int _7;
  int _8;
  int _9;
  uint16 _24;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_16 = NvM_GetBlockIndexForValidId (BlockId_14(D));
  # DEBUG RetBlockIndex => RetBlockIndex_16
  # DEBUG BEGIN_STMT
  ConditionValid_17 = 0;
  # DEBUG ConditionValid => ConditionValid_17
  # DEBUG BEGIN_STMT
  if (RetBlockIndex_16 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 11, 10);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.61_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.61_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 11, 20);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex_16;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 11, 21);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex_16;
  _7 = NvM_AdminBlockTable[_6].NvMDynStatus;
  _8 = (int) _7;
  _9 = _8 & 8;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 11, 25);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ConditionValid_18 = 1;
  # DEBUG ConditionValid => ConditionValid_18

  <bb 11> :
  # ConditionValid_11 = PHI <ConditionValid_17(3), ConditionValid_17(5), ConditionValid_17(7), ConditionValid_17(9), ConditionValid_18(10)>
  # DEBUG ConditionValid => ConditionValid_11
  # DEBUG BEGIN_STMT
  if (ConditionValid_11 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_23 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_23

  <bb 13> :
  # RetBlockIndex_10 = PHI <RetBlockIndex_16(11), RetBlockIndex_23(12)>
  # DEBUG RetBlockIndex => RetBlockIndex_10
  # DEBUG BEGIN_STMT
  _24 = RetBlockIndex_10;
  return _24;

}


NvM_CheckCondCancelJobs (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  short unsigned int NvM_GlobalGenericStatus.60_1;
  unsigned int _2;
  unsigned int _3;
  uint16 _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_10 = NvM_GetBlockIndexForValidId (BlockId_8(D));
  # DEBUG RetBlockIndex => RetBlockIndex_10
  # DEBUG BEGIN_STMT
  ConditionValid_11 = 0;
  # DEBUG ConditionValid => ConditionValid_11
  # DEBUG BEGIN_STMT
  if (RetBlockIndex_10 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 16, 10);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.60_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.60_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 16, 20);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ConditionValid_12 = 1;
  # DEBUG ConditionValid => ConditionValid_12

  <bb 7> :
  # ConditionValid_5 = PHI <ConditionValid_11(3), ConditionValid_11(5), ConditionValid_12(6)>
  # DEBUG ConditionValid => ConditionValid_5
  # DEBUG BEGIN_STMT
  if (ConditionValid_5 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_15 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_15

  <bb 9> :
  # RetBlockIndex_4 = PHI <RetBlockIndex_10(7), RetBlockIndex_15(8)>
  # DEBUG RetBlockIndex => RetBlockIndex_4
  # DEBUG BEGIN_STMT
  _16 = RetBlockIndex_4;
  return _16;

}


NvM_CheckCondRestorePRAMBlockDefaults (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  short unsigned int NvM_GlobalGenericStatus.59_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  void * _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  int _11;
  const void * _12;
  int _13;
  Std_ReturnType (*<Tae0>) (void) _14;
  uint16 _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_21 = NvM_GetBlockIndexForValidId (BlockId_19(D));
  # DEBUG RetBlockIndex => RetBlockIndex_21
  # DEBUG BEGIN_STMT
  ConditionValid_22 = 0;
  # DEBUG ConditionValid => ConditionValid_22
  # DEBUG BEGIN_STMT
  if (RetBlockIndex_21 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 10);
  goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.59_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.59_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 20);
  goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex_21;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 21);
  goto <bb 15>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex_21;
  _7 = NvM_BlockDescriptorTable[_6].ramBlockDataAddress;
  if (_7 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _8 = (int) RetBlockIndex_21;
  _9 = NvM_BlockDescriptorTable[_8].blockDesc;
  _10 = _9 & 131072;
  if (_10 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 13);
  goto <bb 15>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _11 = (int) RetBlockIndex_21;
  _12 = NvM_BlockDescriptorTable[_11].romBlockDataAddress;
  if (_12 == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  _13 = (int) RetBlockIndex_21;
  _14 = NvM_BlockDescriptorTable[_13].initBlockCallback;
  if (_14 == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 17);
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ConditionValid_25 = 1;
  # DEBUG ConditionValid => ConditionValid_25

  <bb 15> :
  # ConditionValid_16 = PHI <ConditionValid_22(3), ConditionValid_22(5), ConditionValid_22(7), ConditionValid_22(10), ConditionValid_22(13), ConditionValid_25(14)>
  # DEBUG ConditionValid => ConditionValid_16
  # DEBUG BEGIN_STMT
  if (ConditionValid_16 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_29 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_29

  <bb 17> :
  # RetBlockIndex_15 = PHI <RetBlockIndex_21(15), RetBlockIndex_29(16)>
  # DEBUG RetBlockIndex => RetBlockIndex_15
  # DEBUG BEGIN_STMT
  _30 = RetBlockIndex_15;
  return _30;

}


NvM_CheckCondWritePRAMBlock (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  short unsigned int NvM_GlobalGenericStatus.58_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  short unsigned int _7;
  int _8;
  int _9;
  int _10;
  void * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  uint16 _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_21 = NvM_GetBlockIndexForValidId (BlockId_19(D));
  # DEBUG RetBlockIndex => RetBlockIndex_21
  # DEBUG BEGIN_STMT
  ConditionValid_22 = 0;
  # DEBUG ConditionValid => ConditionValid_22
  # DEBUG BEGIN_STMT
  if (RetBlockIndex_21 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 10);
  goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.58_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.58_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 20);
  goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex_21;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 21);
  goto <bb 14>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex_21;
  _7 = NvM_AdminBlockTable[_6].NvMDynStatus;
  _8 = (int) _7;
  _9 = _8 & 8;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 25);
  goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _10 = (int) RetBlockIndex_21;
  _11 = NvM_BlockDescriptorTable[_10].ramBlockDataAddress;
  if (_11 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  _12 = (int) RetBlockIndex_21;
  _13 = NvM_BlockDescriptorTable[_12].blockDesc;
  _14 = _13 & 131072;
  if (_14 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 13);
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  ConditionValid_24 = 1;
  # DEBUG ConditionValid => ConditionValid_24

  <bb 14> :
  # ConditionValid_16 = PHI <ConditionValid_22(3), ConditionValid_22(5), ConditionValid_22(7), ConditionValid_22(9), ConditionValid_22(12), ConditionValid_24(13)>
  # DEBUG ConditionValid => ConditionValid_16
  # DEBUG BEGIN_STMT
  if (ConditionValid_16 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_29 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_29

  <bb 16> :
  # RetBlockIndex_15 = PHI <RetBlockIndex_21(14), RetBlockIndex_29(15)>
  # DEBUG RetBlockIndex => RetBlockIndex_15
  # DEBUG BEGIN_STMT
  _30 = RetBlockIndex_15;
  return _30;

}


NvM_CheckCondReadPRAMBlock (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  short unsigned int NvM_GlobalGenericStatus.57_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  void * _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  uint16 _25;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_17 = NvM_GetBlockIndexForValidId (BlockId_15(D));
  # DEBUG RetBlockIndex => RetBlockIndex_17
  # DEBUG BEGIN_STMT
  ConditionValid_18 = 0;
  # DEBUG ConditionValid => ConditionValid_18
  # DEBUG BEGIN_STMT
  if (RetBlockIndex_17 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 22, 10);
  goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.57_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.57_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 22, 20);
  goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex_17;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 22, 21);
  goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex_17;
  _7 = NvM_BlockDescriptorTable[_6].ramBlockDataAddress;
  if (_7 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _8 = (int) RetBlockIndex_17;
  _9 = NvM_BlockDescriptorTable[_8].blockDesc;
  _10 = _9 & 131072;
  if (_10 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 22, 13);
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ConditionValid_20 = 1;
  # DEBUG ConditionValid => ConditionValid_20

  <bb 12> :
  # ConditionValid_12 = PHI <ConditionValid_18(3), ConditionValid_18(5), ConditionValid_18(7), ConditionValid_18(10), ConditionValid_20(11)>
  # DEBUG ConditionValid => ConditionValid_12
  # DEBUG BEGIN_STMT
  if (ConditionValid_12 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_24 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_24

  <bb 14> :
  # RetBlockIndex_11 = PHI <RetBlockIndex_17(12), RetBlockIndex_24(13)>
  # DEBUG RetBlockIndex => RetBlockIndex_11
  # DEBUG BEGIN_STMT
  _25 = RetBlockIndex_11;
  return _25;

}


NvM_CheckCondRestoreBlockDefaults (NvM_BlockIdType BlockId, void * NvM_DstPtr)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  short unsigned int NvM_GlobalGenericStatus.56_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  void * _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  int _11;
  const void * _12;
  int _13;
  Std_ReturnType (*<Tae0>) (void) _14;
  uint16 _31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_21 = NvM_GetBlockIndexForValidId (BlockId_19(D));
  # DEBUG RetBlockIndex => RetBlockIndex_21
  # DEBUG BEGIN_STMT
  ConditionValid_22 = 0;
  # DEBUG ConditionValid => ConditionValid_22
  # DEBUG BEGIN_STMT
  if (RetBlockIndex_21 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 10);
  goto <bb 16>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.56_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.56_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 20);
  goto <bb 16>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex_21;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 21);
  goto <bb 16>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex_21;
  _7 = NvM_BlockDescriptorTable[_6].ramBlockDataAddress;
  if (_7 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _8 = (int) RetBlockIndex_21;
  _9 = NvM_BlockDescriptorTable[_8].blockDesc;
  _10 = _9 & 131072;
  if (_10 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  if (NvM_DstPtr_23(D) == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 13);
  goto <bb 16>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _11 = (int) RetBlockIndex_21;
  _12 = NvM_BlockDescriptorTable[_11].romBlockDataAddress;
  if (_12 == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  _13 = (int) RetBlockIndex_21;
  _14 = NvM_BlockDescriptorTable[_13].initBlockCallback;
  if (_14 == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 17);
  goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  ConditionValid_26 = 1;
  # DEBUG ConditionValid => ConditionValid_26

  <bb 16> :
  # ConditionValid_16 = PHI <ConditionValid_22(3), ConditionValid_22(5), ConditionValid_22(7), ConditionValid_22(11), ConditionValid_22(14), ConditionValid_26(15)>
  # DEBUG ConditionValid => ConditionValid_16
  # DEBUG BEGIN_STMT
  if (ConditionValid_16 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_30 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_30

  <bb 18> :
  # RetBlockIndex_15 = PHI <RetBlockIndex_21(16), RetBlockIndex_30(17)>
  # DEBUG RetBlockIndex => RetBlockIndex_15
  # DEBUG BEGIN_STMT
  _31 = RetBlockIndex_15;
  return _31;

}


NvM_CheckCondWriteBlock (NvM_BlockIdType BlockId, const void * NvM_SrcPtr)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  short unsigned int NvM_GlobalGenericStatus.55_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  short unsigned int _7;
  int _8;
  int _9;
  int _10;
  void * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  uint16 _31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_21 = NvM_GetBlockIndexForValidId (BlockId_19(D));
  # DEBUG RetBlockIndex => RetBlockIndex_21
  # DEBUG BEGIN_STMT
  ConditionValid_22 = 0;
  # DEBUG ConditionValid => ConditionValid_22
  # DEBUG BEGIN_STMT
  if (RetBlockIndex_21 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 10);
  goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.55_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.55_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 20);
  goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex_21;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 21);
  goto <bb 15>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex_21;
  _7 = NvM_AdminBlockTable[_6].NvMDynStatus;
  _8 = (int) _7;
  _9 = _8 & 8;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 25);
  goto <bb 15>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _10 = (int) RetBlockIndex_21;
  _11 = NvM_BlockDescriptorTable[_10].ramBlockDataAddress;
  if (_11 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _12 = (int) RetBlockIndex_21;
  _13 = NvM_BlockDescriptorTable[_12].blockDesc;
  _14 = _13 & 131072;
  if (_14 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  if (NvM_SrcPtr_23(D) == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 13);
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ConditionValid_25 = 1;
  # DEBUG ConditionValid => ConditionValid_25

  <bb 15> :
  # ConditionValid_16 = PHI <ConditionValid_22(3), ConditionValid_22(5), ConditionValid_22(7), ConditionValid_22(9), ConditionValid_22(13), ConditionValid_25(14)>
  # DEBUG ConditionValid => ConditionValid_16
  # DEBUG BEGIN_STMT
  if (ConditionValid_16 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_30 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_30

  <bb 17> :
  # RetBlockIndex_15 = PHI <RetBlockIndex_21(15), RetBlockIndex_30(16)>
  # DEBUG RetBlockIndex => RetBlockIndex_15
  # DEBUG BEGIN_STMT
  _31 = RetBlockIndex_15;
  return _31;

}


NvM_CheckCondReadBlock (NvM_BlockIdType BlockId, void * NvM_DstPtr)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  short unsigned int NvM_GlobalGenericStatus.54_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  void * _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  uint16 _26;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_17 = NvM_GetBlockIndexForValidId (BlockId_15(D));
  # DEBUG RetBlockIndex => RetBlockIndex_17
  # DEBUG BEGIN_STMT
  ConditionValid_18 = 0;
  # DEBUG ConditionValid => ConditionValid_18
  # DEBUG BEGIN_STMT
  if (RetBlockIndex_17 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 6, 10);
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.54_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.54_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 6, 20);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex_17;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 6, 21);
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex_17;
  _7 = NvM_BlockDescriptorTable[_6].ramBlockDataAddress;
  if (_7 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _8 = (int) RetBlockIndex_17;
  _9 = NvM_BlockDescriptorTable[_8].blockDesc;
  _10 = _9 & 131072;
  if (_10 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  if (NvM_DstPtr_19(D) == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 6, 13);
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  ConditionValid_21 = 1;
  # DEBUG ConditionValid => ConditionValid_21

  <bb 13> :
  # ConditionValid_12 = PHI <ConditionValid_18(3), ConditionValid_18(5), ConditionValid_18(7), ConditionValid_18(11), ConditionValid_21(12)>
  # DEBUG ConditionValid => ConditionValid_12
  # DEBUG BEGIN_STMT
  if (ConditionValid_12 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_25 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_25

  <bb 15> :
  # RetBlockIndex_11 = PHI <RetBlockIndex_17(13), RetBlockIndex_25(14)>
  # DEBUG RetBlockIndex => RetBlockIndex_11
  # DEBUG BEGIN_STMT
  _26 = RetBlockIndex_11;
  return _26;

}


NvM_InsertRestoreBlockJob (boolean PRAM, uint16 BlockId, uint16 BlockIndex, void * NvM_DestPtr)
{
  uint8 CurrentServiceId;
  void (*NvM_CurrentFunctionPtrType) (void) StateMachineFunction;
  Std_ReturnType Result;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  unsigned char _8;
  int _9;
  unsigned char _10;
  int _11;
  unsigned char _12;
  int _13;
  unsigned char _14;
  int _15;
  int _16;
  unsigned char _17;
  int _18;
  int _19;
  unsigned char _20;
  int _21;
  int _22;
  int _23;
  unsigned char _24;
  int _25;
  Std_ReturnType _44;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_30 = 1;
  # DEBUG Result => Result_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PRAM_31(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  StateMachineFunction_34 = NvM_RestorePRAMBlockDefaults_Asc;
  # DEBUG StateMachineFunction => StateMachineFunction_34
  # DEBUG BEGIN_STMT
  CurrentServiceId_35 = 24;
  # DEBUG CurrentServiceId => CurrentServiceId_35
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  StateMachineFunction_32 = NvM_RestoreBlockDefaults_Asc;
  # DEBUG StateMachineFunction => StateMachineFunction_32
  # DEBUG BEGIN_STMT
  CurrentServiceId_33 = 8;
  # DEBUG CurrentServiceId => CurrentServiceId_33

  <bb 5> :
  # StateMachineFunction_27 = PHI <StateMachineFunction_34(3), StateMachineFunction_32(4)>
  # CurrentServiceId_28 = PHI <CurrentServiceId_35(3), CurrentServiceId_33(4)>
  # DEBUG CurrentServiceId => CurrentServiceId_28
  # DEBUG StateMachineFunction => StateMachineFunction_27
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = (int) BlockIndex_38(D);
  _2 = NvM_BlockDescriptorTable[_1].blockDesc;
  _3 = _2 >> 7;
  _4 = (unsigned char) _3;
  _5 = (unsigned int) _4;
  _6 = _5 & 3;
  if (_6 == 2)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  _7 = (int) BlockIndex_38(D);
  _8 = NvM_BlockDescriptorTable[_7].romBlockNum;
  if (_8 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _9 = (int) BlockIndex_38(D);
  _10 = NvM_AdminBlockTable[_9].NvMDatasetBlockIndex;
  _11 = (int) BlockIndex_38(D);
  _12 = NvM_BlockDescriptorTable[_11].nvBlockNum;
  if (_10 < _12)
    goto <bb 12>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _13 = (int) BlockIndex_38(D);
  _14 = NvM_AdminBlockTable[_13].NvMDatasetBlockIndex;
  _15 = (int) _14;
  _16 = (int) BlockIndex_38(D);
  _17 = NvM_BlockDescriptorTable[_16].romBlockNum;
  _18 = (int) _17;
  _19 = (int) BlockIndex_38(D);
  _20 = NvM_BlockDescriptorTable[_19].nvBlockNum;
  _21 = (int) _20;
  _22 = _18 + _21;
  if (_15 >= _22)
    goto <bb 12>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _23 = (int) BlockIndex_38(D);
  _24 = NvM_AdminBlockTable[_23].NvMResult;
  if (_24 != 2)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Result_41 = NvM_Queue_InsertStandard (BlockIndex_38(D), NvM_DestPtr_39(D), StateMachineFunction_27);
  # DEBUG Result => Result_41
  # DEBUG BEGIN_STMT
  if (Result_41 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _25 = (int) BlockIndex_38(D);
  NvM_AdminBlockTable[_25].NvMCurrentServiceId = CurrentServiceId_28;

  <bb 12> :
  # Result_26 = PHI <Result_30(8), Result_30(9), Result_41(10), Result_41(11), Result_30(7)>
  # DEBUG Result => Result_26
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _44 = Result_26;
  return _44;

}


NvM_CheckBlockStatus ()
{
  short unsigned int NvM_GlobalBlockNumber.50_1;
  int _2;
  unsigned char _3;
  short unsigned int NvM_GlobalGenericStatus.51_4;
  short unsigned int _5;
  short unsigned int NvM_GlobalBlockNumber.52_6;
  int _7;
  unsigned char _8;
  short unsigned int NvM_GlobalGenericStatus.53_9;
  short unsigned int _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.50_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.50_1;
  _3 = NvM_AdminBlockTable[_2].NvMResult;
  if (_3 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.51_4 = NvM_GlobalGenericStatus;
  _5 = NvM_GlobalGenericStatus.51_4 | 32;
  NvM_GlobalGenericStatus = _5;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.52_6 = NvM_GlobalBlockNumber;
  _7 = (int) NvM_GlobalBlockNumber.52_6;
  _8 = NvM_AdminBlockTable[_7].NvMResult;
  if (_8 == 6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.53_9 = NvM_GlobalGenericStatus;
  _10 = NvM_GlobalGenericStatus.53_9 | 64;
  NvM_GlobalGenericStatus = _10;

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  return;

}


NvM_MirrorCopy (Std_ReturnType (*NvM_NvToRamCopyCallbackType) (const void *) ReadCallback, Std_ReturnType (*NvM_RamToNvCopyCallbackType) (void *) WriteCallback, uint8 * DataBufPtr)
{
  Std_ReturnType ReturnVal;
  unsigned char NvM_CurrentServiceId.49_1;
  Std_ReturnType _20;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ReturnVal_6 = 1;
  # DEBUG ReturnVal => ReturnVal_6
  # DEBUG BEGIN_STMT
  if (ReadCallback_7(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ReturnVal_14 = ReadCallback_7(D) (DataBufPtr_10(D));
  # DEBUG ReturnVal => ReturnVal_14
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ReturnVal_12 = WriteCallback_9(D) (DataBufPtr_10(D));
  # DEBUG ReturnVal => ReturnVal_12

  <bb 5> :
  # ReturnVal_2 = PHI <ReturnVal_14(3), ReturnVal_12(4)>
  # DEBUG ReturnVal => ReturnVal_2
  # DEBUG BEGIN_STMT
  if (ReturnVal_2 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_MirrorRetryCount = 0;
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId.49_1 = NvM_CurrentServiceId;
  if (NvM_CurrentServiceId.49_1 == 5)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_RemoveElement ();

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_MirrorRetryCount = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  _20 = ReturnVal_2;
  return _20;

}


NvM_GetDataAddress ()
{
  uint8 * DataBufPtr;
  uint8 * _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  DataBufPtr_3 = NvM_GetBufferAddress ();
  # DEBUG DataBufPtr => DataBufPtr_3
  # DEBUG BEGIN_STMT
  _4 = DataBufPtr_3;
  return _4;

}


NvM_GetBufferAddress ()
{
  uint8 * DataBufPtr;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.47_1;
  long unsigned int _2;
  long unsigned int _3;
  short unsigned int NvM_GlobalWorkingStatus.48_4;
  unsigned int _5;
  unsigned int _6;
  uint8 * _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.47_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.47_1->blockDesc;
  _3 = _2 & 8192;
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  NvM_GlobalWorkingStatus.48_4 = NvM_GlobalWorkingStatus;
  _5 = (unsigned int) NvM_GlobalWorkingStatus.48_4;
  _6 = _5 & 4096;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  DataBufPtr_12 = &NvM_InternalBuffer;
  # DEBUG DataBufPtr => DataBufPtr_12
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DataBufPtr_11 = NvM_GetUserRamBlockAddress ();
  # DEBUG DataBufPtr => DataBufPtr_11

  <bb 6> :
  # DataBufPtr_7 = PHI <DataBufPtr_12(4), DataBufPtr_11(5)>
  # DEBUG DataBufPtr => DataBufPtr_7
  # DEBUG BEGIN_STMT
  _13 = DataBufPtr_7;
  return _13;

}


NvM_GetBlockLength (uint32 BlockDesc, uint16 BlkLength)
{
  uint16 Length;
  uint16 _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Length_2 = BlkLength_1(D);
  # DEBUG Length => Length_2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = Length_2;
  return _3;

}


NvM_GetBlockCRCLength (uint32 BlockDesc)
{
  uint8 NvMCrcLength;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  uint8 _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned char) BlockDesc_11(D);
  _2 = (unsigned int) _1;
  _3 = _2 & 7;
  if (_3 == 3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvMCrcLength_15 = 4;
  # DEBUG NvMCrcLength => NvMCrcLength_15
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) BlockDesc_11(D);
  _5 = (unsigned int) _4;
  _6 = _5 & 7;
  if (_6 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvMCrcLength_14 = 2;
  # DEBUG NvMCrcLength => NvMCrcLength_14
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = (unsigned char) BlockDesc_11(D);
  _8 = (unsigned int) _7;
  _9 = _8 & 7;
  if (_9 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvMCrcLength_13 = 1;
  # DEBUG NvMCrcLength => NvMCrcLength_13
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvMCrcLength_12 = 0;
  # DEBUG NvMCrcLength => NvMCrcLength_12

  <bb 9> :
  # NvMCrcLength_10 = PHI <NvMCrcLength_15(3), NvMCrcLength_14(5), NvMCrcLength_13(7), NvMCrcLength_12(8)>
  # DEBUG NvMCrcLength => NvMCrcLength_10
  # DEBUG BEGIN_STMT
  _16 = NvMCrcLength_10;
  return _16;

}


NvM_CheckDataSetRomBlock (uint16 BlockIndex)
{
  boolean Result;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  unsigned char _8;
  int _9;
  unsigned char _10;
  boolean _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_12 = 0;
  # DEBUG Result => Result_12
  # DEBUG BEGIN_STMT
  _1 = (int) BlockIndex_13(D);
  _2 = NvM_BlockDescriptorTable[_1].blockDesc;
  _3 = _2 >> 7;
  _4 = (unsigned char) _3;
  _5 = (unsigned int) _4;
  _6 = _5 & 3;
  if (_6 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _7 = (int) BlockIndex_13(D);
  _8 = NvM_AdminBlockTable[_7].NvMDatasetBlockIndex;
  _9 = (int) BlockIndex_13(D);
  _10 = NvM_BlockDescriptorTable[_9].nvBlockNum;
  if (_8 >= _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Result_15 = 1;
  # DEBUG Result => Result_15

  <bb 5> :
  # Result_11 = PHI <Result_12(2), Result_12(3), Result_15(4)>
  # DEBUG Result => Result_11
  # DEBUG BEGIN_STMT
  _16 = Result_11;
  return _16;

}


NvM_CheckWriteProtection (uint16 BlockIndex)
{
  boolean Result;
  int _1;
  short unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  unsigned char _5;
  boolean _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_8 = 0;
  # DEBUG Result => Result_8
  # DEBUG BEGIN_STMT
  _1 = (int) BlockIndex_9(D);
  _2 = NvM_AdminBlockTable[_1].NvMDynStatus;
  _3 = (unsigned int) _2;
  _4 = _3 & 34;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Result_13 = 1;
  # DEBUG Result => Result_13
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = NvM_CheckDataSetRomBlock (BlockIndex_9(D));
  if (_5 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Result_12 = 1;
  # DEBUG Result => Result_12

  <bb 6> :
  # Result_6 = PHI <Result_13(3), Result_8(4), Result_12(5)>
  # DEBUG Result => Result_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = Result_6;
  return _14;

}


NvM_InvokeSingleBlockCallback (uint16 BlockIndex, uint8 ServiceId, uint8 ErrorStatus)
{
  int _1;
  Std_ReturnType (*<Tae3>) (uint8, NvM_RequestResultType) _2;
  int _3;
  Std_ReturnType (*<Tae3>) (uint8, NvM_RequestResultType) _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) BlockIndex_6(D);
  _2 = NvM_BlockDescriptorTable[_1].singleBlockCallback;
  if (_2 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (int) BlockIndex_6(D);
  _4 = NvM_BlockDescriptorTable[_3].singleBlockCallback;
  _4 (ServiceId_8(D), ErrorStatus_9(D));

  <bb 4> :
  return;

}


NvM_MultiPostService_Function ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Fee_SetMode (0);
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber = 0;
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr = &NvM_BlockDescriptorTable[0];
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();
  return;

}


NvM_PostService_Function ()
{
  short unsigned int NvM_GlobalWorkingStatus.33_1;
  short unsigned int NvM_GlobalBlockNumber.34_2;
  int _3;
  short unsigned int _4;
  short unsigned int NvM_GlobalGenericStatus.35_5;
  unsigned int _6;
  unsigned int _7;
  short unsigned int NvM_GlobalBlockNumber.36_8;
  int _9;
  short unsigned int _10;
  short unsigned int NvM_GlobalBlockNumber.37_11;
  int _12;
  short unsigned int _13;
  short unsigned int NvM_GlobalGenericStatus.38_14;
  short unsigned int _15;
  short unsigned int NvM_GlobalGenericStatus.39_16;
  unsigned int _17;
  unsigned int _18;
  short unsigned int NvM_GlobalGenericStatus.40_19;
  short unsigned int _20;
  short unsigned int NvM_GlobalBlockNumber.41_21;
  int _22;
  short unsigned int NvM_GlobalGenericStatus.42_23;
  unsigned int _24;
  unsigned int _25;
  short unsigned int NvM_GlobalGenericStatus.43_26;
  short unsigned int _27;
  short unsigned int NvM_GlobalBlockNumber.44_28;
  int _29;
  short unsigned int NvM_GlobalBlockNumber.45_30;
  int _31;
  unsigned char NvM_GlobalErrorStatus.46_32;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.33_1 = NvM_GlobalWorkingStatus;
  NvM_GlobalBlockNumber.34_2 = NvM_GlobalBlockNumber;
  _3 = (int) NvM_GlobalBlockNumber.34_2;
  _4 = NvM_GlobalWorkingStatus.33_1 & 33023;
  NvM_AdminBlockTable[_3].NvMDynStatus = _4;
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.35_5 = NvM_GlobalGenericStatus;
  _6 = (unsigned int) NvM_GlobalGenericStatus.35_5;
  _7 = _6 & 128;
  if (_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.36_8 = NvM_GlobalBlockNumber;
  _9 = (int) NvM_GlobalBlockNumber.36_8;
  _10 = NvM_AdminBlockTable[_9].NvMDynStatus;
  NvM_GlobalBlockNumber.37_11 = NvM_GlobalBlockNumber;
  _12 = (int) NvM_GlobalBlockNumber.37_11;
  _13 = _10 | 8193;
  NvM_AdminBlockTable[_12].NvMDynStatus = _13;
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.38_14 = NvM_GlobalGenericStatus;
  _15 = NvM_GlobalGenericStatus.38_14 & 65407;
  NvM_GlobalGenericStatus = _15;

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.39_16 = NvM_GlobalGenericStatus;
  _17 = (unsigned int) NvM_GlobalGenericStatus.39_16;
  _18 = _17 & 96;
  if (_18 == 32)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.40_19 = NvM_GlobalGenericStatus;
  _20 = NvM_GlobalGenericStatus.40_19 & 65503;
  NvM_GlobalGenericStatus = _20;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.41_21 = NvM_GlobalBlockNumber;
  _22 = (int) NvM_GlobalBlockNumber.41_21;
  NvM_AdminBlockTable[_22].NvMResult = 2;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.42_23 = NvM_GlobalGenericStatus;
  _24 = (unsigned int) NvM_GlobalGenericStatus.42_23;
  _25 = _24 & 64;
  if (_25 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.43_26 = NvM_GlobalGenericStatus;
  _27 = NvM_GlobalGenericStatus.43_26 & 65471;
  NvM_GlobalGenericStatus = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.44_28 = NvM_GlobalBlockNumber;
  _29 = (int) NvM_GlobalBlockNumber.44_28;
  NvM_AdminBlockTable[_29].NvMResult = 6;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.45_30 = NvM_GlobalBlockNumber;
  _31 = (int) NvM_GlobalBlockNumber.45_30;
  NvM_GlobalErrorStatus.46_32 = NvM_GlobalErrorStatus;
  NvM_AdminBlockTable[_31].NvMResult = NvM_GlobalErrorStatus.46_32;

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_TempRamBlockAddress = 0B;
  return;

}


NvM_PreService_Function ()
{
  short unsigned int NvM_GlobalBlockNumber.23_1;
  int _2;
  const struct NvM_BlockDescriptorType * _3;
  short unsigned int NvM_GlobalBlockNumber.24_4;
  int _5;
  short unsigned int _6;
  short unsigned int NvM_GlobalWorkingStatus.25_7;
  short unsigned int _8;
  uint8 * NvM_TempRamBlockAddress.26_9;
  short unsigned int NvM_GlobalWorkingStatus.27_10;
  short unsigned int _11;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.28_12;
  long unsigned int _13;
  long unsigned int _14;
  short unsigned int NvM_GlobalWorkingStatus.29_15;
  short unsigned int _16;
  short unsigned int NvM_GlobalWorkingStatus.30_17;
  short unsigned int _18;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.31_19;
  void * _20;
  short unsigned int NvM_GlobalWorkingStatus.32_21;
  short unsigned int _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.23_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.23_1;
  _3 = &NvM_BlockDescriptorTable[_2];
  NvM_CurrentBlockDescriptorPtr = _3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.24_4 = NvM_GlobalBlockNumber;
  _5 = (int) NvM_GlobalBlockNumber.24_4;
  _6 = NvM_AdminBlockTable[_5].NvMDynStatus;
  NvM_GlobalWorkingStatus = _6;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.25_7 = NvM_GlobalWorkingStatus;
  _8 = NvM_GlobalWorkingStatus.25_7 & 47275;
  NvM_GlobalWorkingStatus = _8;
  # DEBUG BEGIN_STMT
  NvM_TempRamBlockAddress.26_9 = NvM_TempRamBlockAddress;
  if (NvM_TempRamBlockAddress.26_9 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.27_10 = NvM_GlobalWorkingStatus;
  _11 = NvM_GlobalWorkingStatus.27_10 & 65023;
  NvM_GlobalWorkingStatus = _11;
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.28_12 = NvM_CurrentBlockDescriptorPtr;
  _13 = NvM_CurrentBlockDescriptorPtr.28_12->blockDesc;
  _14 = _13 & 131072;
  if (_14 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.29_15 = NvM_GlobalWorkingStatus;
  _16 = NvM_GlobalWorkingStatus.29_15 | 4096;
  NvM_GlobalWorkingStatus = _16;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.30_17 = NvM_GlobalWorkingStatus;
  _18 = NvM_GlobalWorkingStatus.30_17 & 65023;
  NvM_GlobalWorkingStatus = _18;
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.31_19 = NvM_CurrentBlockDescriptorPtr;
  _20 = NvM_CurrentBlockDescriptorPtr.31_19->ramBlockDataAddress;
  if (_20 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.32_21 = NvM_GlobalWorkingStatus;
  _22 = NvM_GlobalWorkingStatus.32_21 | 512;
  NvM_GlobalWorkingStatus = _22;

  <bb 8> :
  return;

}


NvM_MultiRequestFinishedSingleBlock (void (*NvM_CurrentFunctionPtrType) (void) NextState)
{
  short unsigned int NvM_GlobalBlockNumber.16_1;
  unsigned char NvM_CurrentServiceId.17_2;
  unsigned char NvM_GlobalErrorStatus.18_3;
  unsigned char NvM_GlobalErrorStatus.19_4;
  unsigned char NvM_GlobalErrorStatus.20_5;
  unsigned char NvM_GlobalErrorStatus.21_6;
  unsigned char NvM_GlobalCallLevel.22_7;
  int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_PostService_Function ();
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.16_1 = NvM_GlobalBlockNumber;
  NvM_CurrentServiceId.17_2 = NvM_CurrentServiceId;
  NvM_GlobalErrorStatus.18_3 = NvM_GlobalErrorStatus;
  NvM_InvokeSingleBlockCallback (NvM_GlobalBlockNumber.16_1, NvM_CurrentServiceId.17_2, NvM_GlobalErrorStatus.18_3);
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus.19_4 = NvM_GlobalErrorStatus;
  if (NvM_GlobalErrorStatus.19_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  NvM_GlobalErrorStatus.20_5 = NvM_GlobalErrorStatus;
  if (NvM_GlobalErrorStatus.20_5 != 4)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  NvM_GlobalErrorStatus.21_6 = NvM_GlobalErrorStatus;
  if (NvM_GlobalErrorStatus.21_6 != 5)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_AdminBlockTable[0].NvMDatasetBlockIndex = 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.22_7 = NvM_GlobalCallLevel;
  _8 = (int) NvM_GlobalCallLevel.22_7;
  NvM_CurrentFunctionPtr[_8] = NextState_14(D);
  return;

}


NvM_ResetRedundantBlockDataIndex ()
{
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.14_1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;
  short unsigned int NvM_GlobalBlockNumber.15_7;
  int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.14_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.14_1->blockDesc;
  _3 = _2 >> 7;
  _4 = (unsigned char) _3;
  _5 = (unsigned int) _4;
  _6 = _5 & 3;
  if (_6 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.15_7 = NvM_GlobalBlockNumber;
  _8 = (int) NvM_GlobalBlockNumber.15_7;
  NvM_AdminBlockTable[_8].NvMDatasetBlockIndex = 0;

  <bb 4> :
  return;

}


NvM_GetMergedBlockNumber ()
{
  uint16 ret;
  short unsigned int NvM_GlobalBlockNumber.12_1;
  int _2;
  short unsigned int _3;
  short unsigned int NvM_GlobalBlockNumber.13_4;
  int _5;
  unsigned char _6;
  short unsigned int _7;
  uint16 _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.12_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.12_1;
  _3 = NvM_BlockDescriptorTable[_2].nvBlockBaseNum;
  NvM_GlobalBlockNumber.13_4 = NvM_GlobalBlockNumber;
  _5 = (int) NvM_GlobalBlockNumber.13_4;
  _6 = NvM_AdminBlockTable[_5].NvMDatasetBlockIndex;
  _7 = (short unsigned int) _6;
  ret_9 = _3 | _7;
  # DEBUG ret => ret_9
  # DEBUG BEGIN_STMT
  _10 = ret_9;
  return _10;

}


NvM_GetUserRamBlockAddress ()
{
  uint8 * UserRamBlockAddress;
  short unsigned int NvM_GlobalWorkingStatus.8_1;
  unsigned int _2;
  unsigned int _3;
  uint8 * NvM_TempRamBlockAddress.9_4;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.10_5;
  void * _6;
  short unsigned int NvM_GlobalBlockNumber.11_7;
  int _8;
  uint8 * _17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.8_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.8_1;
  _3 = _2 & 4096;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  UserRamBlockAddress_16 = &NvM_InternalBuffer;
  # DEBUG UserRamBlockAddress => UserRamBlockAddress_16
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_TempRamBlockAddress.9_4 = NvM_TempRamBlockAddress;
  if (NvM_TempRamBlockAddress.9_4 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  UserRamBlockAddress_15 = NvM_TempRamBlockAddress;
  # DEBUG UserRamBlockAddress => UserRamBlockAddress_15
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.10_5 = NvM_CurrentBlockDescriptorPtr;
  _6 = NvM_CurrentBlockDescriptorPtr.10_5->ramBlockDataAddress;
  if (_6 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.11_7 = NvM_GlobalBlockNumber;
  _8 = (int) NvM_GlobalBlockNumber.11_7;
  UserRamBlockAddress_14 = NvM_BlockDescriptorTable[_8].ramBlockDataAddress;
  # DEBUG UserRamBlockAddress => UserRamBlockAddress_14
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  UserRamBlockAddress_12 = 0B;
  # DEBUG UserRamBlockAddress => UserRamBlockAddress_12
  # DEBUG BEGIN_STMT
  NvM_FatalError ();

  <bb 9> :
  # UserRamBlockAddress_9 = PHI <UserRamBlockAddress_16(3), UserRamBlockAddress_15(5), UserRamBlockAddress_14(7), UserRamBlockAddress_12(8)>
  # DEBUG UserRamBlockAddress => UserRamBlockAddress_9
  # DEBUG BEGIN_STMT
  _17 = UserRamBlockAddress_9;
  return _17;

}


NvM_SetPermanentRamBlockChanged ()
{
  short unsigned int NvM_GlobalWorkingStatus.6_1;
  unsigned int _2;
  unsigned int _3;
  short unsigned int NvM_GlobalWorkingStatus.7_4;
  short unsigned int _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.6_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.6_1;
  _3 = _2 & 4608;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.7_4 = NvM_GlobalWorkingStatus;
  _5 = NvM_GlobalWorkingStatus.7_4 | 1;
  NvM_GlobalWorkingStatus = _5;

  <bb 4> :
  return;

}


NvM_SetPermanentRamBlockUnchanged ()
{
  short unsigned int NvM_GlobalWorkingStatus.4_1;
  unsigned int _2;
  unsigned int _3;
  short unsigned int NvM_GlobalWorkingStatus.5_4;
  short unsigned int _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.4_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.4_1;
  _3 = _2 & 4608;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.5_4 = NvM_GlobalWorkingStatus;
  _5 = NvM_GlobalWorkingStatus.5_4 & 65534;
  NvM_GlobalWorkingStatus = _5;

  <bb 4> :
  return;

}


NvM_SetPermanentRamBlockValid ()
{
  short unsigned int NvM_GlobalWorkingStatus.2_1;
  unsigned int _2;
  unsigned int _3;
  short unsigned int NvM_GlobalBlockNumber.3_4;
  int _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.2_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.2_1;
  _3 = _2 & 4608;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.3_4 = NvM_GlobalBlockNumber;
  _5 = (int) NvM_GlobalBlockNumber.3_4;
  NvM_AdminBlockTable[_5].NvMValid = 165;

  <bb 4> :
  return;

}


NvM_SetPermanentRamBlockInvalid ()
{
  short unsigned int NvM_GlobalWorkingStatus.0_1;
  unsigned int _2;
  unsigned int _3;
  short unsigned int NvM_GlobalBlockNumber.1_4;
  int _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.0_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.0_1;
  _3 = _2 & 4608;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.1_4 = NvM_GlobalBlockNumber;
  _5 = (int) NvM_GlobalBlockNumber.1_4;
  NvM_AdminBlockTable[_5].NvMValid = 255;

  <bb 4> :
  return;

}


NvM_GetBlockIndexForValidId (const NvM_BlockIdType BlockId)
{
  uint16 RetBlockIndex;
  short unsigned int _1;
  uint16 _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = BlockId_3(D) + 65535;
  if (_1 <= 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_5 = BlockId_3(D);
  # DEBUG RetBlockIndex => RetBlockIndex_5
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetBlockIndex_4 = 9;
  # DEBUG RetBlockIndex => RetBlockIndex_4

  <bb 5> :
  # RetBlockIndex_2 = PHI <RetBlockIndex_5(3), RetBlockIndex_4(4)>
  # DEBUG RetBlockIndex => RetBlockIndex_2
  # DEBUG BEGIN_STMT
  _6 = RetBlockIndex_2;
  return _6;

}


