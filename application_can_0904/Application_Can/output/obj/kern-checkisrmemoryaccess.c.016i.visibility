
Marking local functions: OS_DoCheckISRMemoryAccess


Marking externally visible functions: OS_KernCheckIsrMemoryAccess


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_ramLimit/13 (OS_ramLimit) @06d40090
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_DoCheckISRMemoryAccess/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_ramBase/12 (OS_ramBase) @06d40048
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_DoCheckISRMemoryAccess/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_romLimit/11 (OS_romLimit) @06d40000
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_DoCheckISRMemoryAccess/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_romBase/10 (OS_romBase) @06d03f78
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_DoCheckISRMemoryAccess/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_isrTableBase/9 (OS_isrTableBase) @06d03f30
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_DoCheckISRMemoryAccess/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nInterrupts/8 (OS_nInterrupts) @06d03318
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernCheckIsrMemoryAccess/1 (read)
  Availability: not_available
  Varpool flags: read-only
OS_iecMode/7 (OS_iecMode) @06d03288
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernCheckIsrMemoryAccess/1 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_CheckIsrMemoryAccess/6 (OS_svc_CheckIsrMemoryAccess) @06d03240
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernCheckIsrMemoryAccess/1 (addr)OS_KernCheckIsrMemoryAccess/1 (addr)OS_KernCheckIsrMemoryAccess/1 (addr)OS_DoCheckISRMemoryAccess/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/5 (OS_Error) @06ce0ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_DoCheckISRMemoryAccess/0 OS_KernCheckIsrMemoryAccess/1 OS_KernCheckIsrMemoryAccess/1 OS_KernCheckIsrMemoryAccess/1 
  Calls: 
OS_configMode/4 (OS_configMode) @06d031b0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernCheckIsrMemoryAccess/1 (read)OS_KernCheckIsrMemoryAccess/1 (read)OS_KernCheckIsrMemoryAccess/1 (read)OS_DoCheckISRMemoryAccess/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_permittedContext/3 (OS_permittedContext) @06d03168
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernCheckIsrMemoryAccess/1 (read)OS_KernCheckIsrMemoryAccess/1 (read)OS_KernCheckIsrMemoryAccess/1 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/2 (OS_kernelData) @06d03120
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernCheckIsrMemoryAccess/1 (read)OS_KernCheckIsrMemoryAccess/1 (read)OS_KernCheckIsrMemoryAccess/1 (read)OS_KernCheckIsrMemoryAccess/1 (read)OS_KernCheckIsrMemoryAccess/1 (read)OS_KernCheckIsrMemoryAccess/1 (read)OS_DoCheckISRMemoryAccess/0 (addr)
  Availability: not_available
  Varpool flags:
OS_KernCheckIsrMemoryAccess/1 (OS_KernCheckIsrMemoryAccess) @06ce0a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/2 (read)OS_permittedContext/3 (read)OS_permittedContext/3 (read)OS_kernelData/2 (read)OS_permittedContext/3 (read)OS_kernelData/2 (read)OS_configMode/4 (read)OS_svc_CheckIsrMemoryAccess/6 (addr)OS_iecMode/7 (read)OS_kernelData/2 (read)OS_kernelData/2 (read)OS_kernelData/2 (read)OS_configMode/4 (read)OS_svc_CheckIsrMemoryAccess/6 (addr)OS_nInterrupts/8 (read)OS_configMode/4 (read)OS_svc_CheckIsrMemoryAccess/6 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Error/5 OS_DoCheckISRMemoryAccess/0 OS_Error/5 OS_Error/5 
OS_DoCheckISRMemoryAccess/0 (OS_DoCheckISRMemoryAccess) @06ce0000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: OS_isrTableBase/9 (read)OS_kernelData/2 (addr)OS_romBase/10 (read)OS_romLimit/11 (read)OS_ramBase/12 (read)OS_ramLimit/13 (read)OS_configMode/4 (read)OS_svc_CheckIsrMemoryAccess/6 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: OS_KernCheckIsrMemoryAccess/1 
  Calls: OS_Error/5 
__attribute__((target ("general-regs-only")))
OS_KernCheckIsrMemoryAccess (os_isrid_t i, const void * ptr, os_size_t len)
{
  os_paramtype_t p[3];
  os_memoryaccess_t a;
  os_memoryaccess_t D.7462;
  int iftmp.2;
  _Bool iftmp.1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  a = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) i;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  ptr.0_2 = (unsigned int) ptr;
  p[1] = ptr.0_2;
  # DEBUG BEGIN_STMT
  p[2] = len;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = OS_kernelData.inFunction;
  if (_3 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.3_4 = OS_permittedContext;
  _5 = OS_permittedContext.3_4 + 6;
  _6 = *_5;
  _7 = (unsigned int) _6;
  _8 = _7 & 1024;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.4_9 = OS_permittedContext;
  _10 = OS_permittedContext.4_9 + 6;
  _11 = *_10;
  _12 = OS_kernelData.errorStatus.calledFrom;
  _13 = (int) _12;
  _14 = 1 << _13;
  _15 = (short unsigned int) _14;
  _16 = _11 & _15;
  if (_16 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2 = 0;

  <bb 7> :
  iftmp.1 = iftmp.2 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.5_17 = OS_permittedContext;
  _18 = OS_permittedContext.5_17 + 6;
  _19 = *_18;
  _20 = OS_kernelData.inFunction;
  _21 = (int) _20;
  _22 = 1 << _21;
  _23 = (short unsigned int) _22;
  _24 = _19 & _23;
  iftmp.1 = _24 == 0;

  <bb 9> :
  if (iftmp.1 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  OS_configMode.6_25 = OS_configMode;
  _26 = OS_configMode.6_25 & 1024;
  if (_26 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_CheckIsrMemoryAccess, 12, &p);
  goto <bb 22>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_iecMode.7_27 = OS_iecMode;
  if (OS_iecMode.7_27 > 1)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  _28 = OS_kernelData.inFunction;
  if (_28 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _29 = OS_kernelData.taskCurrent;
  _30 = _29->dynamic;
  _31 = BIT_FIELD_REF <MEM[(void *)_30], 16, 160>;
  _32 = _31;
  if (_32 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  _33 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _34 = _33;
  if (_34 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_configMode.8_35 = OS_configMode;
  _36 = OS_configMode.8_35 & 1024;
  if (_36 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_CheckIsrMemoryAccess, 55, &p);
  goto <bb 22>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  OS_nInterrupts.9_37 = OS_nInterrupts;
  if (i < OS_nInterrupts.9_37)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  a = OS_DoCheckISRMemoryAccess (i, ptr, len);
  goto <bb 22>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_configMode.10_38 = OS_configMode;
  _39 = OS_configMode.10_38 & 1024;
  if (_39 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_CheckIsrMemoryAccess, 47, &p);

  <bb 22> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7462 = a;
  p = {CLOBBER};
  return D.7462;

}


__attribute__((target ("general-regs-only")))
OS_DoCheckISRMemoryAccess (os_isrid_t i, const void * ptr, os_size_t len)
{
  os_paramtype_t p[3];
  os_address_t limit;
  os_address_t base;
  const struct os_appcontext_t * app;
  os_memoryaccess_t a;
  const struct os_isr_t * isr;
  os_address_t last;
  os_address_t first;
  struct os_kerneldata_t * kernel_data;
  os_memoryaccess_t D.7505;
  unsigned char iftmp.18;
  unsigned char iftmp.13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  a = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) i;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  ptr.11_2 = (unsigned int) ptr;
  p[1] = ptr.11_2;
  # DEBUG BEGIN_STMT
  p[2] = len;
  # DEBUG BEGIN_STMT
  first = (os_address_t) ptr;
  # DEBUG BEGIN_STMT
  last = first + len;
  # DEBUG BEGIN_STMT
  if (last > first)
    goto <bb 3>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.12_3 = OS_isrTableBase;
  _4 = (unsigned int) i;
  _5 = _4 * 68;
  isr = OS_isrTableBase.12_3 + _5;
  # DEBUG BEGIN_STMT
  app = isr->app;
  # DEBUG BEGIN_STMT
  if (app == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _6 = app->flags;
  _7 = (unsigned int) _6;
  _8 = _7 & 1;
  if (_8 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  a = 7;
  # DEBUG BEGIN_STMT
  _9 = isr->dynamic;
  _10 = _9->c.stackLimit;
  if (_10 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  _11 = kernel_data->iStackBase;
  base = (os_address_t) _11;
  # DEBUG BEGIN_STMT
  _12 = kernel_data->iStackLen;
  limit = base + _12;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _13 = isr->dynamic;
  _14 = _13->c.stackLimit;
  limit = (os_address_t) _14;
  # DEBUG BEGIN_STMT
  _15 = isr->stackLen;
  base = limit - _15;

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (first >= base)
    goto <bb 9>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 9> :
  if (last <= limit)
    goto <bb 10>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  a = a | 8;
  goto <bb 32>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _16 = isr->dataStart;
  _17 = (unsigned int) _16;
  if (first >= _17)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  _18 = isr->dataEnd;
  _19 = (unsigned int) _18;
  if (last <= _19)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  a = 3;
  goto <bb 32>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _20 = app->dataStart;
  _21 = (unsigned int) _20;
  if (first >= _21)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _22 = app->dataEnd;
  _23 = (unsigned int) _22;
  if (last <= _23)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  a = 3;
  goto <bb 32>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _24 = isr->dynamic;
  _25 = _24->c.stackLimit;
  if (_25 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _26 = isr->dynamic;
  _27 = _26->c.stackLimit;
  _28 = (unsigned int) _27;
  _29 = isr->stackLen;
  _30 = _28 - _29;
  if (first >= _30)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _31 = isr->dynamic;
  _32 = _31->c.stackLimit;
  _33 = (unsigned int) _32;
  if (last <= _33)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  a = 11;
  goto <bb 32>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  OS_romBase.14_34 = OS_romBase;
  OS_romBase.15_35 = (unsigned int) OS_romBase.14_34;
  if (first < OS_romBase.15_35)
    goto <bb 23>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  OS_romLimit.16_36 = OS_romLimit;
  OS_romLimit.17_37 = (unsigned int) OS_romLimit.16_36;
  if (last > OS_romLimit.17_37)
    goto <bb 23>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 23> :
  OS_ramBase.19_38 = OS_ramBase;
  OS_ramBase.20_39 = (unsigned int) OS_ramBase.19_38;
  if (first >= OS_ramBase.20_39)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 24> :
  OS_ramLimit.21_40 = OS_ramLimit;
  OS_ramLimit.22_41 = (unsigned int) OS_ramLimit.21_40;
  if (last <= OS_ramLimit.22_41)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  iftmp.18 = 1;
  goto <bb 27>; [INV]

  <bb 26> :
  iftmp.18 = 0;

  <bb 27> :
  iftmp.13 = iftmp.18;
  goto <bb 29>; [INV]

  <bb 28> :
  iftmp.13 = 5;

  <bb 29> :
  a = iftmp.13;
  goto <bb 32>; [INV]

  <bb 30> :
  # DEBUG BEGIN_STMT
  OS_configMode.23_42 = OS_configMode;
  _43 = OS_configMode.23_42 & 1024;
  if (_43 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_CheckIsrMemoryAccess, 48, &p);

  <bb 32> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7505 = a;
  p = {CLOBBER};
  return D.7505;

}


