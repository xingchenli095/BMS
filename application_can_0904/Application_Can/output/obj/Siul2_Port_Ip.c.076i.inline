IPA function summary for Siul2_Port_Ip_GetPinConfiguration/14 inlinable
  global time:     116.141645
  self size:       33
  global size:     33
  min size:       8
  self stack:      0
  global stack:    0
    size:19.500000, time:99.209331
    size:5.500000, time:6.616119,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed || op2 changed)
  calls:
    Siul2_Port_Ip_GetMSCRConfiguration/7 function not considered for inlining
      loop depth: 0 freq:0.49 size: 4 time: 13callee size:18 stack: 0

IPA function summary for Siul2_Port_Ip_RevertPinConfiguration/13 inlinable
  global time:     85.043468
  self size:       20
  global size:     20
  min size:       4
  self stack:      0
  global stack:    0
    size:10.500000, time:73.456064
    size:3.500000, time:2.242931,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed || op1 changed)
  array index:(op1 changed)
  calls:
    Siul2_Port_Ip_PinInit/4 function not considered for inlining
      loop depth: 0 freq:0.49 size: 2 time: 11callee size:31 stack: 0

IPA function summary for Siul2_Port_Ip_SetPinDirection/12 inlinable
  global time:     29.600000
  self size:       33
  global size:     33
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:10.000000, time:4.000000,  nonconst if:(op2 changed)
    size:1.000000, time:0.200000,  executed if:(op2 == 3) && (not inlined)
    size:2.000000, time:0.400000,  executed if:(op2 == 3)
    size:1.000000, time:0.200000,  executed if:(op2 == 2) && (not inlined)
    size:2.000000, time:0.400000,  executed if:(op2 == 2)
    size:2.000000, time:0.400000,  executed if:(op2 == 1) && (not inlined)
    size:4.000000, time:0.800000,  executed if:(op2 == 1)
    size:2.000000, time:0.400000,  executed if:(op2 == 0) && (not inlined)
    size:4.000000, time:0.800000,  executed if:(op2 == 0)
  array index:(op1 changed)
  calls:
    SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04/22 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04/21 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Siul2_Port_Ip_SetInputBuffer/11 inlinable
  global time:     35.890000
  self size:       26
  global size:     26
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.400000,  executed if:(op0 != 0B) && (not inlined)
    size:4.000000, time:2.800000,  executed if:(op0 != 0B)
    size:2.000000, time:1.400000,  executed if:(op0 != 0B),  nonconst if:(op2 changed) && (op0 != 0B)
    size:2.000000, time:2.000000,  nonconst if:(op4 changed)
    size:4.000000, time:2.640000,  executed if:(op4 != 16),  nonconst if:(op3 changed) && (op4 != 16)
    size:4.000000, time:1.320000,  executed if:(op3 <= 408) && (op4 != 16)
    size:1.000000, time:0.330000,  executed if:(op3 <= 408) && (op4 != 16),  nonconst if:(op4 changed) && (op3 <= 408) && (op4 != 16)
  array index:(op3 changed) && (op1 changed)
  calls:
    SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03/20 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03/19 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Siul2_Port_Ip_SetOutputBuffer/10 inlinable
  global time:     37.000000
  self size:       20
  global size:     20
  min size:       4
  self stack:      0
  global stack:    0
    size:8.000000, time:8.000000
    size:7.000000, time:6.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:1.000000, time:1.000000,  nonconst if:(op3 changed)
  array index:(op1 changed)
  calls:
    SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02/18 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02/17 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Siul2_Port_Ip_SetPullSel/9 inlinable
  global time:     28.500000
  self size:       23
  global size:     23
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:8.000000, time:4.000000,  nonconst if:(op2 changed)
    size:1.000000, time:0.250000,  executed if:(op2 == 2) && (not inlined)
    size:2.000000, time:0.500000,  executed if:(op2 == 2)
    size:1.000000, time:0.250000,  executed if:(op2 == 1) && (not inlined)
    size:2.000000, time:0.500000,  executed if:(op2 == 1)
    size:1.000000, time:0.250000,  executed if:(op2 == 0) && (not inlined)
    size:3.000000, time:0.750000,  executed if:(op2 == 0)
  array index:(op1 changed)
  calls:
    SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01/16 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01/15 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Siul2_Port_Ip_Init/8 inlinable
  global time:     135.454546
  self size:       12
  global size:     12
  min size:       4
  self stack:      0
  global stack:    0
    size:7.000000, time:44.454546
    size:3.000000, time:2.000000,  executed if:(not inlined)
  loop iterations:(op0 changed)
  calls:
    Siul2_Port_Ip_PinInit/4 function not considered for inlining
      loop depth: 1 freq:8.09 size: 2 time: 11callee size:31 stack: 0

IPA function summary for Siul2_Port_Ip_GetMSCRConfiguration/7 inlinable
  global time:     34.000000
  self size:       36
  global size:     36
  min size:       0
  self stack:      0
  global stack:    0
    size:27.500000, time:26.500000
    size:8.500000, time:7.500000,  executed if:(not inlined)
  array index:(op2 changed)
  calls:

IPA function summary for Siul2_Port_Ip_WriteIMCRConfiguration/6 inlinable
  global time:     29.183444
  self size:       17
  global size:     17
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 352] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 352] changed)
    size:10.000000, time:21.925590,  executed if:(op0[ref offset: 352] == 1)
    size:1.000000, time:2.257854,  executed if:(op0[ref offset: 352] == 1) && (not inlined)
  calls:

IPA function summary for Siul2_Port_Ip_WriteDCMConfiguration/5 inlinable
  global time:     23.002400
  self size:       17
  global size:     17
  min size:       0
  self stack:      0
  global stack:    0
    size:13.500000, time:20.002250
    size:3.500000, time:3.000150,  executed if:(not inlined)
  calls:

IPA function summary for Siul2_Port_Ip_PinInit/4 inlinable
  global time:     70.938800
  self size:       62
  global size:     62
  min size:       8
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:3.000000, time:1.980000,  executed if:(op0[ref offset: 64] != 2),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 64] != 2)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 320] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 320] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 288] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 288] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 256] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 256] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 192] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 352] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 352] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed || op0[ref offset: 352] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed || op0[ref offset: 352] changed || op0[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed || op0[ref offset: 352] changed || op0[ref offset: 160] changed || op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 96] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed || op0[ref offset: 352] changed || op0[ref offset: 160] changed || op0[ref offset: 128] changed || op0[ref offset: 96] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 96] == 0),  nonconst if:(op0[ref offset: 320] changed) && (op0[ref offset: 96] == 0)
    size:0.500000, time:0.085000,  executed if:(op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0) && (not inlined),  nonconst if:(op0[ref offset: 960] changed) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0) && (not inlined)
    size:2.500000, time:0.425000,  executed if:(op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0),  nonconst if:(op0[ref offset: 960] changed) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0)
    size:0.500000, time:0.056100,  executed if:(op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0) && (not inlined)
    size:2.500000, time:0.280500,  executed if:(op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0)
    size:1.000000, time:0.112200,  executed if:(op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0)
  calls:
    Siul2_Port_Ip_WriteDCMConfiguration/5 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 8 stack: 0
    Siul2_Port_Ip_WriteIMCRConfiguration/6 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 8 stack: 0


Flattening functions:
Overall time estimate: 624.754304 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Siul2_Port_Ip_GetPinConfiguration/14.
Enqueueing calls in Siul2_Port_Ip_RevertPinConfiguration/13.
Enqueueing calls in Siul2_Port_Ip_SetPinDirection/12.
Enqueueing calls in Siul2_Port_Ip_SetInputBuffer/11.
Enqueueing calls in Siul2_Port_Ip_SetOutputBuffer/10.
Enqueueing calls in Siul2_Port_Ip_SetPullSel/9.
Enqueueing calls in Siul2_Port_Ip_Init/8.
Enqueueing calls in Siul2_Port_Ip_GetMSCRConfiguration/7.
Enqueueing calls in Siul2_Port_Ip_WriteIMCRConfiguration/6.
Enqueueing calls in Siul2_Port_Ip_WriteDCMConfiguration/5.
Enqueueing calls in Siul2_Port_Ip_PinInit/4.

Considering Siul2_Port_Ip_WriteIMCRConfiguration/6 with 17 size
 to be inlined into Siul2_Port_Ip_PinInit/4 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Port_TS_T40D34M20I1R0/src/Siul2_Port_Ip.c:344
 Estimated badness is -0.627959, frequency 1.00.

Considering Siul2_Port_Ip_WriteDCMConfiguration/5 with 17 size
 to be inlined into Siul2_Port_Ip_PinInit/4 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Port_TS_T40D34M20I1R0/src/Siul2_Port_Ip.c:348
 Estimated badness is -0.504510, frequency 1.00.

Considering Siul2_Port_Ip_GetMSCRConfiguration/7 with 36 size
 to be inlined into Siul2_Port_Ip_GetPinConfiguration/14 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Port_TS_T40D34M20I1R0/src/Siul2_Port_Ip.c:913
 Estimated badness is -0.232986, frequency 0.49.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 567.555427 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :        8 calls, 8.000000 freq, 0 count
--param max-inline-insns-auto limit reached       :        1 calls, 0.485861 freq, 0 count
call is unlikely and code size would grow         :        1 calls, 8.090909 freq, 0 count
IPA function summary for Siul2_Port_Ip_GetPinConfiguration/14 inlinable
  global time:     122.700771
  self size:       33
  global size:     57
  min size:       8
  self stack:      0
  global stack:    0
    size:47.000000, time:112.084652
    size:5.500000, time:6.616119,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed || op2 changed)
  calls:
    Siul2_Port_Ip_GetMSCRConfiguration/7 inlined
      loop depth: 0 freq:0.49 size: 4 time: 13callee size:18 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for Siul2_Port_Ip_RevertPinConfiguration/13 inlinable
  global time:     85.043468
  self size:       20
  global size:     20
  min size:       4
  self stack:      0
  global stack:    0
    size:10.500000, time:73.456064
    size:3.500000, time:2.242931,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed || op1 changed)
  array index:(op1 changed)
  calls:
    Siul2_Port_Ip_PinInit/4 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.49 size: 2 time: 11callee size:42 stack: 0

IPA function summary for Siul2_Port_Ip_SetPinDirection/12 inlinable
  global time:     29.600000
  self size:       33
  global size:     33
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:10.000000, time:4.000000,  nonconst if:(op2 changed)
    size:1.000000, time:0.200000,  executed if:(op2 == 3) && (not inlined)
    size:2.000000, time:0.400000,  executed if:(op2 == 3)
    size:1.000000, time:0.200000,  executed if:(op2 == 2) && (not inlined)
    size:2.000000, time:0.400000,  executed if:(op2 == 2)
    size:2.000000, time:0.400000,  executed if:(op2 == 1) && (not inlined)
    size:4.000000, time:0.800000,  executed if:(op2 == 1)
    size:2.000000, time:0.400000,  executed if:(op2 == 0) && (not inlined)
    size:4.000000, time:0.800000,  executed if:(op2 == 0)
  array index:(op1 changed)
  calls:
    SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04/22 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04/21 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Siul2_Port_Ip_SetInputBuffer/11 inlinable
  global time:     35.890000
  self size:       26
  global size:     26
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.400000,  executed if:(op0 != 0B) && (not inlined)
    size:4.000000, time:2.800000,  executed if:(op0 != 0B)
    size:2.000000, time:1.400000,  executed if:(op0 != 0B),  nonconst if:(op2 changed) && (op0 != 0B)
    size:2.000000, time:2.000000,  nonconst if:(op4 changed)
    size:4.000000, time:2.640000,  executed if:(op4 != 16),  nonconst if:(op3 changed) && (op4 != 16)
    size:4.000000, time:1.320000,  executed if:(op3 <= 408) && (op4 != 16)
    size:1.000000, time:0.330000,  executed if:(op3 <= 408) && (op4 != 16),  nonconst if:(op4 changed) && (op3 <= 408) && (op4 != 16)
  array index:(op3 changed) && (op1 changed)
  calls:
    SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03/20 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03/19 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Siul2_Port_Ip_SetOutputBuffer/10 inlinable
  global time:     37.000000
  self size:       20
  global size:     20
  min size:       4
  self stack:      0
  global stack:    0
    size:8.000000, time:8.000000
    size:7.000000, time:6.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:1.000000, time:1.000000,  nonconst if:(op3 changed)
  array index:(op1 changed)
  calls:
    SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02/18 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02/17 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Siul2_Port_Ip_SetPullSel/9 inlinable
  global time:     28.500000
  self size:       23
  global size:     23
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:8.000000, time:4.000000,  nonconst if:(op2 changed)
    size:1.000000, time:0.250000,  executed if:(op2 == 2) && (not inlined)
    size:2.000000, time:0.500000,  executed if:(op2 == 2)
    size:1.000000, time:0.250000,  executed if:(op2 == 1) && (not inlined)
    size:2.000000, time:0.500000,  executed if:(op2 == 1)
    size:1.000000, time:0.250000,  executed if:(op2 == 0) && (not inlined)
    size:3.000000, time:0.750000,  executed if:(op2 == 0)
  array index:(op1 changed)
  calls:
    SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01/16 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01/15 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Siul2_Port_Ip_Init/8 inlinable
  global time:     135.454546
  self size:       12
  global size:     12
  min size:       4
  self stack:      0
  global stack:    0
    size:7.000000, time:44.454546
    size:3.000000, time:2.000000,  executed if:(not inlined)
  loop iterations:(op0 changed)
  calls:
    Siul2_Port_Ip_PinInit/4 call is unlikely and code size would grow
      loop depth: 1 freq:8.09 size: 2 time: 11callee size:42 stack: 0

IPA function summary for Siul2_Port_Ip_PinInit/4 inlinable
  global time:     93.366640
  self size:       62
  global size:     84
  min size:       28
  self stack:      0
  global stack:    0
  estimated growth:38
    size:28.000000, time:46.427840
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:3.000000, time:1.980000,  executed if:(op0[ref offset: 64] != 2),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 64] != 2)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 320] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 320] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 288] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 288] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 256] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 256] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 192] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 352] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 352] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed || op0[ref offset: 352] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed || op0[ref offset: 352] changed || op0[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed || op0[ref offset: 352] changed || op0[ref offset: 160] changed || op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 96] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 64] changed || op0[ref offset: 320] changed || op0[ref offset: 288] changed || op0[ref offset: 256] changed || op0[ref offset: 192] changed || op0[ref offset: 224] changed || op0[ref offset: 352] changed || op0[ref offset: 160] changed || op0[ref offset: 128] changed || op0[ref offset: 96] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 96] == 0),  nonconst if:(op0[ref offset: 320] changed) && (op0[ref offset: 96] == 0)
    size:0.500000, time:0.085000,  executed if:(op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0) && (not inlined),  nonconst if:(op0[ref offset: 960] changed) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0) && (not inlined)
    size:2.500000, time:0.425000,  executed if:(op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0),  nonconst if:(op0[ref offset: 960] changed) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0)
    size:0.500000, time:0.056100,  executed if:(op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0) && (not inlined)
    size:2.500000, time:0.280500,  executed if:(op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0)
    size:1.000000, time:0.112200,  executed if:(op0[ref offset: 960] != 2) && (op0[ref offset: 320] == 1) && (op0[ref offset: 96] == 0)
  calls:
    Siul2_Port_Ip_WriteDCMConfiguration/5 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 8 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    Siul2_Port_Ip_WriteIMCRConfiguration/6 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 8 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

Symbol table:

SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04/22 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04) @071307e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Siul2_Port_Ip_SetPinDirection/12 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04/21 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04) @07130700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Siul2_Port_Ip_SetPinDirection/12 (1073741823 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03/20 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03) @07130540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Siul2_Port_Ip_SetInputBuffer/11 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03/19 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03) @07130460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Siul2_Port_Ip_SetInputBuffer/11 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02/18 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02) @071302a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Siul2_Port_Ip_SetOutputBuffer/10 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02/17 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02) @071301c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Siul2_Port_Ip_SetOutputBuffer/10 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01/16 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01) @07130000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Siul2_Port_Ip_SetPullSel/9 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01/15 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01) @070deee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Siul2_Port_Ip_SetPullSel/9 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Siul2_Port_Ip_GetPinConfiguration/14 (Siul2_Port_Ip_GetPinConfiguration) @070de9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pPort_Setting/2 (read)u32MaxPinConfigured/3 (read)
  Referring: 
  Availability: available
  Function flags: count:114863532 (estimated locally) body optimize_size
  Called by: 
  Calls: Siul2_Port_Ip_GetMSCRConfiguration/7 (inlined) (55807732 (estimated locally),0.49 per call) 
Siul2_Port_Ip_RevertPinConfiguration/13 (Siul2_Port_Ip_RevertPinConfiguration) @070de7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pPort_Setting/2 (read)u32MaxPinConfigured/3 (read)
  Referring: 
  Availability: available
  Function flags: count:114863532 (estimated locally) body optimize_size
  Called by: 
  Calls: Siul2_Port_Ip_PinInit/4 (55807731 (estimated locally),0.49 per call) 
Siul2_Port_Ip_SetPinDirection/12 (Siul2_Port_Ip_SetPinDirection) @070de620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04/22 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04/21 (1073741823 (estimated locally),1.00 per call) 
Siul2_Port_Ip_SetInputBuffer/11 (Siul2_Port_Ip_SetInputBuffer) @070de2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03/20 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03/19 (1073741824 (estimated locally),1.00 per call) 
Siul2_Port_Ip_SetOutputBuffer/10 (Siul2_Port_Ip_SetOutputBuffer) @070b1ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02/18 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02/17 (1073741824 (estimated locally),1.00 per call) 
Siul2_Port_Ip_SetPullSel/9 (Siul2_Port_Ip_SetPullSel) @070b1b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01/16 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01/15 (1073741824 (estimated locally),1.00 per call) 
Siul2_Port_Ip_Init/8 (Siul2_Port_Ip_Init) @070b19a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pPort_Setting/2 (write)u32MaxPinConfigured/3 (write)
  Referring: 
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: Siul2_Port_Ip_PinInit/4 (955630223 (estimated locally),8.09 per call) 
Siul2_Port_Ip_GetMSCRConfiguration/7 (Siul2_Port_Ip_GetMSCRConfiguration) @070b17e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Siul2_Port_Ip_GetMSCRConfiguration/7 is inline copy in Siul2_Port_Ip_GetPinConfiguration/14
  Availability: local
  Function flags: count:55807732 (estimated locally) body local optimize_size
  Called by: Siul2_Port_Ip_GetPinConfiguration/14 (inlined) (55807732 (estimated locally),0.49 per call) 
  Calls: 
Siul2_Port_Ip_WriteIMCRConfiguration/6 (Siul2_Port_Ip_WriteIMCRConfiguration) @070b1620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Siul2_Port_Ip_WriteIMCRConfiguration/6 is inline copy in Siul2_Port_Ip_PinInit/4
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Siul2_Port_Ip_PinInit/4 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Siul2_Port_Ip_WriteDCMConfiguration/5 (Siul2_Port_Ip_WriteDCMConfiguration) @070b1380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Siul2_Port_Ip_WriteDCMConfiguration/5 is inline copy in Siul2_Port_Ip_PinInit/4
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Siul2_Port_Ip_PinInit/4 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Siul2_Port_Ip_PinInit/4 (Siul2_Port_Ip_PinInit) @070b11c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Siul2_Port_Ip_RevertPinConfiguration/13 (55807731 (estimated locally),0.49 per call) Siul2_Port_Ip_Init/8 (955630223 (estimated locally),8.09 per call) 
  Calls: Siul2_Port_Ip_WriteDCMConfiguration/5 (inlined) (1073741824 (estimated locally),1.00 per call) Siul2_Port_Ip_WriteIMCRConfiguration/6 (inlined) (1073741824 (estimated locally),1.00 per call) 
u32MaxPinConfigured/3 (u32MaxPinConfigured) @0707ccf0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Siul2_Port_Ip_Init/8 (write)Siul2_Port_Ip_RevertPinConfiguration/13 (read)Siul2_Port_Ip_GetPinConfiguration/14 (read)
  Availability: available
  Varpool flags:
pPort_Setting/2 (pPort_Setting) @0707cca8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Siul2_Port_Ip_Init/8 (write)Siul2_Port_Ip_RevertPinConfiguration/13 (read)Siul2_Port_Ip_GetPinConfiguration/14 (read)
  Availability: available
  Varpool flags:
Port_au32Siul2BaseAddr/1 (Port_au32Siul2BaseAddr) @0707cc60
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known

;; Function Siul2_Port_Ip_PinInit (Siul2_Port_Ip_PinInit, funcdef_no=1, decl_uid=8863, cgraph_uid=2, symbol_order=4)


Symbols to be put in SSA form
{ D.9040 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 27
Number of blocks to update: 26 ( 96%)


Merging blocks 8 and 19
Merging blocks 17 and 9
Removing basic block 18
Removing basic block 20
Merging blocks 26 and 10
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19 15 17 18 16
;;
;; Loop 2
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 13 14 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 9 14 }
;; 14 succs { 20 }
;; 15 succs { 16 19 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 15 21 }
;; 21 succs { 1 }
Siul2_Port_Ip_PinInit (const struct Siul2_Port_Ip_PinSettingsConfig * config)
{
  uint8 inputMuxIterator;
  uint32 imcrRegIdx;
  uint32 dcmrwf4RegValue;
  uint8 iterator;
  uint32 adcInterleaves;
  uint32 pinsValues;
  <unnamed type> _1;
  long unsigned int _2;
  long unsigned int _3;
  <unnamed type> _4;
  long unsigned int _5;
  long unsigned int _6;
  <unnamed type> _7;
  long unsigned int _8;
  long unsigned int _9;
  <unnamed type> _10;
  long unsigned int _11;
  long unsigned int _12;
  <unnamed type> _13;
  long unsigned int _14;
  long unsigned int _15;
  <unnamed type> _16;
  long unsigned int _17;
  long unsigned int _18;
  <unnamed type> _19;
  long unsigned int _20;
  long unsigned int _21;
  <unnamed type> _22;
  long unsigned int _23;
  long unsigned int _24;
  <unnamed type> _25;
  long unsigned int _26;
  long unsigned int _27;
  <unnamed type> _28;
  long unsigned int _29;
  unsigned char _30;
  long unsigned int _31;
  short unsigned int _32;
  short unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  volatile uint8 * _36;
  struct SIUL2_Type * _37;
  long unsigned int _38;
  int _59;
  long unsigned int _61;
  long unsigned int _67;
  <unnamed type> _69;
  int _71;
  <unnamed type> _72;
  long unsigned int _74;
  long unsigned int _75;

  <bb 2> [local count: 350860936]:
  # DEBUG BEGIN_STMT
  # DEBUG pinsValues => 0
  # DEBUG BEGIN_STMT
  # DEBUG siulInstance => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG siulInstance => 0
  # DEBUG BEGIN_STMT
  _1 = config_42(D)->pullConfig;
  if (_1 != 2)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 231568218]:
  # DEBUG BEGIN_STMT
  # DEBUG pinsValues => 8192
  # DEBUG BEGIN_STMT
  _2 = _1 << 11;
  _3 = _2 & 2048;
  pinsValues_43 = _3 | 8192;
  # DEBUG pinsValues => pinsValues_43

  <bb 4> [local count: 350860936]:
  # pinsValues_39 = PHI <0(2), pinsValues_43(3)>
  # DEBUG pinsValues => pinsValues_39
  # DEBUG BEGIN_STMT
  _4 = config_42(D)->outputBuffer;
  _5 = _4 << 21;
  _6 = _5 & 2097152;
  pinsValues_44 = _6 | pinsValues_39;
  # DEBUG pinsValues => pinsValues_44
  # DEBUG BEGIN_STMT
  _7 = config_42(D)->invert;
  _8 = _7 << 17;
  _9 = _8 & 131072;
  pinsValues_45 = _9 | pinsValues_44;
  # DEBUG pinsValues => pinsValues_45
  # DEBUG BEGIN_STMT
  _10 = config_42(D)->pullKeep;
  _11 = _10 << 16;
  _12 = _11 & 65536;
  pinsValues_46 = _12 | pinsValues_45;
  # DEBUG pinsValues => pinsValues_46
  # DEBUG BEGIN_STMT
  _13 = config_42(D)->driveStrength;
  _14 = _13 << 8;
  _15 = _14 & 256;
  pinsValues_47 = _15 | pinsValues_46;
  # DEBUG pinsValues => pinsValues_47
  # DEBUG BEGIN_STMT
  _16 = config_42(D)->inputFilter;
  _17 = _16 << 6;
  _18 = _17 & 64;
  pinsValues_48 = _18 | pinsValues_47;
  # DEBUG pinsValues => pinsValues_48
  # DEBUG BEGIN_STMT
  _19 = config_42(D)->inputBuffer;
  _20 = _19 << 19;
  _21 = _20 & 524288;
  pinsValues_49 = _21 | pinsValues_48;
  # DEBUG pinsValues => pinsValues_49
  # DEBUG BEGIN_STMT
  _22 = config_42(D)->slewRateCtrlSel;
  _23 = _22 << 14;
  _24 = _23 & 16384;
  pinsValues_50 = _24 | pinsValues_49;
  # DEBUG pinsValues => pinsValues_50
  # DEBUG BEGIN_STMT
  _25 = config_42(D)->safeMode;
  _26 = _25 << 5;
  _27 = _26 & 32;
  pinsValues_51 = _27 | pinsValues_50;
  # DEBUG pinsValues => pinsValues_51
  # DEBUG BEGIN_STMT
  _28 = config_42(D)->mux;
  _29 = _28 & 7;
  pinsValues_52 = _29 | pinsValues_51;
  # DEBUG pinsValues => pinsValues_52
  # DEBUG BEGIN_STMT
  if (_28 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 175430468]:
  if (_4 == 1)
    goto <bb 6>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 6> [local count: 59646359]:
  # DEBUG BEGIN_STMT
  _30 = config_42(D)->initValue;
  if (_30 != 2)
    goto <bb 7>; [66.00%]
  else
    goto <bb 8>; [34.00%]

  <bb 7> [local count: 39366597]:
  # DEBUG BEGIN_STMT
  _31 = config_42(D)->pinPortIdx;
  _32 = (short unsigned int) _31;
  _33 = _32 ^ 3;
  _34 = (long unsigned int) _33;
  _35 = _34 + 1076433664;
  _36 = (volatile uint8 *) _35;
  *_36 ={v} _30;

  <bb 8> [local count: 350860936]:
  # DEBUG BEGIN_STMT
  _37 = config_42(D)->base;
  _38 = config_42(D)->pinPortIdx;
  _37->MSCR[_38] ={v} pinsValues_52;
  # DEBUG BEGIN_STMT
  # DEBUG config => config_42(D)
  # DEBUG INLINE_ENTRY Siul2_Port_Ip_WriteIMCRConfiguration
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG imcrBase => 1076428800B
  # DEBUG BEGIN_STMT
  _69 = config_42(D)->inputBuffer;
  if (_69 == 1)
    goto <bb 13>; [34.00%]
  else
    goto <bb 14>; [66.00%]

  <bb 9> [local count: 954449108]:
  # DEBUG BEGIN_STMT
  _71 = (int) inputMuxIterator_70;
  _72 = config_42(D)->inputMux[_71];
  if (_72 != 16)
    goto <bb 10>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 10> [local count: 629936412]:
  # DEBUG BEGIN_STMT
  imcrRegIdx_73 = config_42(D)->inputMuxReg[_71];
  # DEBUG imcrRegIdx => imcrRegIdx_73
  # DEBUG BEGIN_STMT
  # DEBUG imcrBase => 1076428800B
  # DEBUG BEGIN_STMT
  if (imcrRegIdx_73 <= 408)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [local count: 314968206]:
  # DEBUG BEGIN_STMT
  _74 = imcrRegIdx_73;
  _75 = _72 & 15;
  MEM[(struct SIUL2_Type *)1076428800B].IMCR[_74] ={v} _75;

  <bb 12> [local count: 954449110]:
  # DEBUG imcrBase => 1076428800B
  # DEBUG BEGIN_STMT
  inputMuxIterator_76 = inputMuxIterator_70 + 1;
  # DEBUG inputMuxIterator => inputMuxIterator_76

  <bb 13> [local count: 1073741824]:
  # inputMuxIterator_70 = PHI <0(8), inputMuxIterator_76(12)>
  # DEBUG imcrBase => 1076428800B
  # DEBUG inputMuxIterator => inputMuxIterator_70
  # DEBUG BEGIN_STMT
  if (inputMuxIterator_70 != 8)
    goto <bb 9>; [88.89%]
  else
    goto <bb 14>; [11.11%]

  <bb 14> [local count: 350860934]:
  # DEBUG config => NULL
  # DEBUG imcrRegIdx => NULL
  # DEBUG inputMuxIterator => NULL
  # DEBUG BEGIN_STMT
  # DEBUG config => config_42(D)
  # DEBUG INLINE_ENTRY Siul2_Port_Ip_WriteDCMConfiguration
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  dcmrwf4RegValue_57 ={v} MEM[(volatile uint32 *)1076545036B];
  # DEBUG dcmrwf4RegValue => dcmrwf4RegValue_57
  # DEBUG BEGIN_STMT
  # DEBUG iterator => 0
  goto <bb 20>; [100.00%]

  <bb 15> [local count: 701827143]:
  # DEBUG BEGIN_STMT
  _59 = (int) iterator_58;
  adcInterleaves_60 = config_42(D)->adcInterleaves[_59];
  # DEBUG adcInterleaves => adcInterleaves_60
  # DEBUG BEGIN_STMT
  if (adcInterleaves_60 != 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 16> [local count: 350913571]:
  # DEBUG BEGIN_STMT
  _61 = adcInterleaves_60 & 32768;
  if (_61 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [local count: 175456786]:
  # DEBUG BEGIN_STMT
  dcmrwf4RegValue_63 = adcInterleaves_60 & dcmrwf4RegValue_62;
  # DEBUG dcmrwf4RegValue => dcmrwf4RegValue_63
  goto <bb 19>; [100.00%]

  <bb 18> [local count: 175456786]:
  # DEBUG BEGIN_STMT
  dcmrwf4RegValue_64 = adcInterleaves_60 | dcmrwf4RegValue_62;
  # DEBUG dcmrwf4RegValue => dcmrwf4RegValue_64

  <bb 19> [local count: 701827143]:
  # dcmrwf4RegValue_68 = PHI <dcmrwf4RegValue_62(15), dcmrwf4RegValue_63(17), dcmrwf4RegValue_64(18)>
  # DEBUG dcmrwf4RegValue => dcmrwf4RegValue_68
  # DEBUG BEGIN_STMT
  iterator_65 = iterator_58 + 1;
  # DEBUG iterator => iterator_65

  <bb 20> [local count: 1052688078]:
  # dcmrwf4RegValue_62 = PHI <dcmrwf4RegValue_57(14), dcmrwf4RegValue_68(19)>
  # iterator_58 = PHI <0(14), iterator_65(19)>
  # DEBUG iterator => iterator_58
  # DEBUG dcmrwf4RegValue => dcmrwf4RegValue_62
  # DEBUG BEGIN_STMT
  if (iterator_58 != 2)
    goto <bb 15>; [66.67%]
  else
    goto <bb 21>; [33.33%]

  <bb 21> [local count: 350860936]:
  # dcmrwf4RegValue_66 = PHI <dcmrwf4RegValue_62(20)>
  # DEBUG BEGIN_STMT
  _67 = dcmrwf4RegValue_66 | 1662;
  MEM[(volatile uint32 *)1076545036B] ={v} _67;
  # DEBUG config => NULL
  # DEBUG adcInterleaves => NULL
  # DEBUG iterator => NULL
  # DEBUG dcmrwf4RegValue => NULL
  return;

}



;; Function Siul2_Port_Ip_Init (Siul2_Port_Ip_Init, funcdef_no=5, decl_uid=8521, cgraph_uid=6, symbol_order=8)

Siul2_Port_Ip_Init (uint32 pinCount, const struct Siul2_Port_Ip_PinSettingsConfig * config)
{
  uint32 i;
  long unsigned int _1;
  const struct Siul2_Port_Ip_PinSettingsConfig * _2;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pPort_Setting = config_6(D);
  # DEBUG BEGIN_STMT
  u32MaxPinConfigured = pinCount_8(D);
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _1 = i_3 * 124;
  _2 = config_6(D) + _1;
  Siul2_Port_Ip_PinInit (_2);
  # DEBUG BEGIN_STMT
  i_11 = i_3 + 1;
  # DEBUG i => i_11

  <bb 4> [local count: 1073741824]:
  # i_3 = PHI <0(2), i_11(3)>
  # DEBUG i => i_3
  # DEBUG BEGIN_STMT
  if (i_3 < pinCount_8(D))
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return 0;

}



;; Function Siul2_Port_Ip_SetPullSel (Siul2_Port_Ip_SetPullSel, funcdef_no=6, decl_uid=8507, cgraph_uid=7, symbol_order=9)

Siul2_Port_Ip_SetPullSel (struct Siul2_Port_Ip_PortType * const base, uint16 pin, Siul2_Port_Ip_PortPullConfig pullConfig)
{
  uint32 regVal;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  int _4;
  int _5;
  long unsigned int _20;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG pueVal => 8192
  # DEBUG BEGIN_STMT
  # DEBUG pusVal => 2048
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01 ();
  # DEBUG BEGIN_STMT
  switch (pullConfig_9(D)) <default: <L5> [25.00%], case 0: <L1> [25.00%], case 1: <L2> [25.00%], case 2: <L0> [25.00%]>

  <bb 3> [local count: 268435456]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = (int) pin_10(D);
  _2 ={v} base_11(D)->MSCR[_1];
  _3 = _2 & 4294959103;
  base_11(D)->MSCR[_1] ={v} _3;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 268435456]:
<L1>:
  # DEBUG BEGIN_STMT
  _4 = (int) pin_10(D);
  regVal_16 ={v} base_11(D)->MSCR[_4];
  # DEBUG regVal => regVal_16
  # DEBUG BEGIN_STMT
  # DEBUG regVal => regVal_16 | 8192
  # DEBUG BEGIN_STMT
  _20 = regVal_16 & 4294965247;
  regVal_17 = _20 | 8192;
  # DEBUG regVal => regVal_17
  # DEBUG BEGIN_STMT
  base_11(D)->MSCR[_4] ={v} regVal_17;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 268435456]:
<L2>:
  # DEBUG BEGIN_STMT
  _5 = (int) pin_10(D);
  regVal_13 ={v} base_11(D)->MSCR[_5];
  # DEBUG regVal => regVal_13
  # DEBUG BEGIN_STMT
  # DEBUG regVal => regVal_13 | 8192
  # DEBUG BEGIN_STMT
  regVal_14 = regVal_13 | 10240;
  # DEBUG regVal => regVal_14
  # DEBUG BEGIN_STMT
  base_11(D)->MSCR[_5] ={v} regVal_14;
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
<L5>:
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01 ();
  return;

}



;; Function Siul2_Port_Ip_SetOutputBuffer (Siul2_Port_Ip_SetOutputBuffer, funcdef_no=7, decl_uid=8512, cgraph_uid=8, symbol_order=10)

Siul2_Port_Ip_SetOutputBuffer (struct Siul2_Port_Ip_PortType * const base, uint16 pin, boolean enable, Siul2_Port_Ip_PortMux mux)
{
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int iftmp.2_11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02 ();
  # DEBUG BEGIN_STMT
  _1 = (int) pin_14(D);
  _2 ={v} base_15(D)->MSCR[_1];
  _3 = _2 & 4292870143;
  base_15(D)->MSCR[_1] ={v} _3;
  # DEBUG BEGIN_STMT
  _4 ={v} base_15(D)->MSCR[_1];
  if (enable_17(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.2_11 = PHI <2097152(2), 0(3)>
  _5 = _4 | iftmp.2_11;
  base_15(D)->MSCR[_1] ={v} _5;
  # DEBUG BEGIN_STMT
  _6 ={v} base_15(D)->MSCR[_1];
  _7 = _6 & 4294967288;
  base_15(D)->MSCR[_1] ={v} _7;
  # DEBUG BEGIN_STMT
  _8 ={v} base_15(D)->MSCR[_1];
  _9 = mux_20(D) & 7;
  _10 = _8 | _9;
  base_15(D)->MSCR[_1] ={v} _10;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02 ();
  return;

}



;; Function Siul2_Port_Ip_SetInputBuffer (Siul2_Port_Ip_SetInputBuffer, funcdef_no=8, decl_uid=8518, cgraph_uid=9, symbol_order=11)

Siul2_Port_Ip_SetInputBuffer (struct Siul2_Port_Ip_PortType * const base, uint16 pin, boolean enable, uint32 inputMuxReg, Siul2_Port_Ip_PortInputMux inputMux)
{
  uint32 imcrVal;
  struct SIUL2_Type * siul2Base;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int iftmp.3_9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG siul2Base => 4294967295B
  # DEBUG BEGIN_STMT
  # DEBUG imcrRegIdx => inputMuxReg_12(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03 ();
  # DEBUG BEGIN_STMT
  if (base_15(D) != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 3> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  _1 = (int) pin_16(D);
  _2 ={v} base_15(D)->MSCR[_1];
  _3 = _2 & 4294443007;
  base_15(D)->MSCR[_1] ={v} _3;
  # DEBUG BEGIN_STMT
  _4 ={v} base_15(D)->MSCR[_1];
  if (enable_18(D) != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 375809639]:

  <bb 5> [local count: 751619278]:
  # iftmp.3_9 = PHI <524288(3), 0(4)>
  _5 = _4 | iftmp.3_9;
  base_15(D)->MSCR[_1] ={v} _5;

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (inputMux_20(D) != 16)
    goto <bb 7>; [66.00%]
  else
    goto <bb 11>; [34.00%]

  <bb 7> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  if (inputMuxReg_12(D) <= 511)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG siul2Base => 1076428800B

  <bb 9> [local count: 708669605]:
  # siul2Base_8 = PHI <4294967295B(7), 1076428800B(8)>
  # DEBUG siul2Base => siul2Base_8
  # DEBUG BEGIN_STMT
  if (inputMuxReg_12(D) <= 408)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  _6 = inputMuxReg_12(D);
  imcrVal_21 ={v} siul2Base_8->IMCR[_6];
  # DEBUG imcrVal => imcrVal_21
  # DEBUG BEGIN_STMT
  imcrVal_22 = imcrVal_21 & 4294967280;
  # DEBUG imcrVal => imcrVal_22
  # DEBUG BEGIN_STMT
  _7 = inputMux_20(D) & 15;
  imcrVal_23 = _7 | imcrVal_22;
  # DEBUG imcrVal => imcrVal_23
  # DEBUG BEGIN_STMT
  siul2Base_8->IMCR[_6] ={v} imcrVal_23;

  <bb 11> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03 ();
  return;

}



;; Function Siul2_Port_Ip_SetPinDirection (Siul2_Port_Ip_SetPinDirection, funcdef_no=9, decl_uid=8525, cgraph_uid=10, symbol_order=12)

Siul2_Port_Ip_SetPinDirection (struct Siul2_Port_Ip_PortType * const base, uint16 pin, Siul2_Port_Ip_PortDirectionType direction)
{
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  int _11;
  long unsigned int _12;
  long unsigned int _13;
  int _14;
  long unsigned int _15;
  long unsigned int _16;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04 ();
  # DEBUG BEGIN_STMT
  switch (direction_20(D)) <default: <L6> [20.00%], case 0: <L0> [20.00%], case 1: <L1> [20.00%], case 2: <L2> [20.00%], case 3: <L3> [20.00%]>

  <bb 3> [local count: 214748364]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 = (int) pin_21(D);
  _2 ={v} base_22(D)->MSCR[_1];
  _3 = _2 & 4292870143;
  base_22(D)->MSCR[_1] ={v} _3;
  # DEBUG BEGIN_STMT
  _4 ={v} base_22(D)->MSCR[_1];
  _5 = _4 | 524288;
  base_22(D)->MSCR[_1] ={v} _5;
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 214748364]:
<L1>:
  # DEBUG BEGIN_STMT
  _6 = (int) pin_21(D);
  _7 ={v} base_22(D)->MSCR[_6];
  _8 = _7 & 4294443007;
  base_22(D)->MSCR[_6] ={v} _8;
  # DEBUG BEGIN_STMT
  _9 ={v} base_22(D)->MSCR[_6];
  _10 = _9 | 2097152;
  base_22(D)->MSCR[_6] ={v} _10;
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 214748364]:
<L2>:
  # DEBUG BEGIN_STMT
  _11 = (int) pin_21(D);
  _12 ={v} base_22(D)->MSCR[_11];
  _13 = _12 | 2621440;
  base_22(D)->MSCR[_11] ={v} _13;
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 214748364]:
<L3>:
  # DEBUG BEGIN_STMT
  _14 = (int) pin_21(D);
  _15 ={v} base_22(D)->MSCR[_14];
  _16 = _15 & 4292345855;
  base_22(D)->MSCR[_14] ={v} _16;
  # DEBUG BEGIN_STMT

  <bb 7> [local count: 1073741824]:
<L6>:
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04 ();
  return;

}



;; Function Siul2_Port_Ip_RevertPinConfiguration (Siul2_Port_Ip_RevertPinConfiguration, funcdef_no=10, decl_uid=8528, cgraph_uid=11, symbol_order=13)

Siul2_Port_Ip_RevertPinConfiguration (const struct Siul2_Port_Ip_PortType * const base, uint16 pin)
{
  uint32 u32MscrId;
  uint32 portNumber;
  uint32 MaxPinConfigured;
  const struct Siul2_Port_Ip_PinSettingsConfig * ConfigPtr;
  uint32 u32RegVal;
  uint16 u16PinIdx;
  long unsigned int base.4_1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  const struct Siul2_Port_Ip_PinSettingsConfig * _5;
  unsigned int _6;
  const struct Siul2_Port_Ip_PinSettingsConfig * _7;
  long unsigned int _8;
  int _9;
  long unsigned int _10;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG u32RegVal => 4294967295
  # DEBUG BEGIN_STMT
  ConfigPtr_15 = pPort_Setting;
  # DEBUG ConfigPtr => ConfigPtr_15
  # DEBUG BEGIN_STMT
  MaxPinConfigured_16 = u32MaxPinConfigured;
  # DEBUG MaxPinConfigured => MaxPinConfigured_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base.4_1 = (long unsigned int) base_17(D);
  _2 = base.4_1 + 3218537920;
  portNumber_18 = _2 >> 6;
  # DEBUG portNumber => portNumber_18
  # DEBUG BEGIN_STMT
  _3 = portNumber_18 << 4;
  _4 = (long unsigned int) pin_19(D);
  u32MscrId_20 = _3 + _4;
  # DEBUG u32MscrId => u32MscrId_20
  # DEBUG BEGIN_STMT
  # DEBUG u16PinIdx => 0
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _6 = _10 * 124;
  _7 = ConfigPtr_15 + _6;
  _8 = _7->pinPortIdx;
  if (_8 == u32MscrId_20)
    goto <bb 4>; [5.50%]
  else
    goto <bb 5>; [94.50%]

  <bb 4> [local count: 55807731]:
  # _5 = PHI <_7(3)>
  # DEBUG BEGIN_STMT
  Siul2_Port_Ip_PinInit (_5);
  # DEBUG BEGIN_STMT
  _9 = (int) pin_19(D);
  u32RegVal_23 ={v} base_17(D)->MSCR[_9];
  # DEBUG u32RegVal => u32RegVal_23
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 958878293]:
  # DEBUG BEGIN_STMT
  u16PinIdx_21 = u16PinIdx_11 + 1;
  # DEBUG u16PinIdx => u16PinIdx_21

  <bb 6> [local count: 1073741824]:
  # u16PinIdx_11 = PHI <0(2), u16PinIdx_21(5)>
  # DEBUG u16PinIdx => u16PinIdx_11
  # DEBUG BEGIN_STMT
  _10 = (long unsigned int) u16PinIdx_11;
  if (_10 < MaxPinConfigured_16)
    goto <bb 3>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 7> [local count: 114863532]:
  # u32RegVal_12 = PHI <u32RegVal_23(4), 4294967295(6)>
  # DEBUG u32RegVal => u32RegVal_12
  # DEBUG BEGIN_STMT
  return u32RegVal_12;

}



;; Function Siul2_Port_Ip_GetPinConfiguration (Siul2_Port_Ip_GetPinConfiguration, funcdef_no=11, decl_uid=8532, cgraph_uid=12, symbol_order=14)


Symbols to be put in SSA form
{ D.9048 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 15
Number of blocks to update: 14 ( 93%)


Removing basic block 7
Removing basic block 11
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 2
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 3
;; 2 succs { 11 }
;; 3 succs { 4 10 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 12 }
;; 10 succs { 11 }
;; 11 succs { 3 12 }
;; 12 succs { 1 }
Siul2_Port_Ip_GetPinConfiguration (const struct Siul2_Port_Ip_PortType * const base, struct Siul2_Port_Ip_PinSettingsConfig * config, uint16 pin)
{
  uint32 u32RegVal;
  uint32 u32TempVal;
  Siul2_Port_Ip_PortPullConfig pullValue;
  uint8 inputMuxIterator;
  uint16 u16PinIdx;
  uint32 u32MscrId;
  uint32 portNumber;
  uint32 MaxPinConfigured;
  const struct Siul2_Port_Ip_PinSettingsConfig * ConfigPtr;
  long unsigned int base.6_1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  const struct Siul2_Port_Ip_PinSettingsConfig * _5;
  unsigned int _6;
  const struct Siul2_Port_Ip_PinSettingsConfig * _7;
  long unsigned int _8;
  struct SIUL2_Type * _9;
  unsigned char _10;
  int _11;
  long unsigned int _12;
  <unnamed type> _13;
  long unsigned int _14;
  long unsigned int _15;
  int _36;
  long unsigned int _39;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _45;
  long unsigned int _47;
  long unsigned int _49;
  long unsigned int _51;
  long unsigned int _53;
  long unsigned int _55;
  long unsigned int _57;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  ConfigPtr_21 = pPort_Setting;
  # DEBUG ConfigPtr => ConfigPtr_21
  # DEBUG BEGIN_STMT
  MaxPinConfigured_22 = u32MaxPinConfigured;
  # DEBUG MaxPinConfigured => MaxPinConfigured_22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG u32MscrBase => 1076429376
  # DEBUG BEGIN_STMT
  base.6_1 = (long unsigned int) base_23(D);
  _2 = base.6_1 + 3218537920;
  portNumber_24 = _2 >> 6;
  # DEBUG portNumber => portNumber_24
  # DEBUG BEGIN_STMT
  _3 = portNumber_24 << 4;
  _4 = (long unsigned int) pin_25(D);
  u32MscrId_26 = _3 + _4;
  # DEBUG u32MscrId => u32MscrId_26
  # DEBUG BEGIN_STMT
  # DEBUG u16PinIdx => 0
  goto <bb 11>; [100.00%]

  <bb 3> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _6 = _15 * 124;
  _7 = ConfigPtr_21 + _6;
  _8 = _7->pinPortIdx;
  if (_8 == u32MscrId_26)
    goto <bb 4>; [5.50%]
  else
    goto <bb 10>; [94.50%]

  <bb 4> [local count: 55807731]:
  # _5 = PHI <_7(3)>
  # _14 = PHI <_8(3)>
  # DEBUG BEGIN_STMT
  _9 = _5->base;
  config_28(D)->base = _9;
  # DEBUG BEGIN_STMT
  config_28(D)->pinPortIdx = _14;
  # DEBUG BEGIN_STMT
  _10 = _5->initValue;
  config_28(D)->initValue = _10;
  # DEBUG BEGIN_STMT
  # DEBUG inputMuxIterator => 0
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 446512084]:
  # DEBUG BEGIN_STMT
  _11 = (int) inputMuxIterator_17;
  _12 = _5->inputMuxReg[_11];
  config_28(D)->inputMuxReg[_11] = _12;
  # DEBUG BEGIN_STMT
  _13 = _5->inputMux[_11];
  config_28(D)->inputMux[_11] = _13;
  # DEBUG BEGIN_STMT
  inputMuxIterator_35 = inputMuxIterator_17 + 1;
  # DEBUG inputMuxIterator => inputMuxIterator_35

  <bb 6> [local count: 502319816]:
  # inputMuxIterator_17 = PHI <0(4), inputMuxIterator_35(5)>
  # DEBUG inputMuxIterator => inputMuxIterator_17
  # DEBUG BEGIN_STMT
  if (inputMuxIterator_17 != 8)
    goto <bb 5>; [88.89%]
  else
    goto <bb 7>; [11.11%]

  <bb 7> [local count: 55807732]:
  # DEBUG BEGIN_STMT
  # DEBUG config => config_28(D)
  # DEBUG base => base_23(D)
  # DEBUG pin => pin_25(D)
  # DEBUG INLINE_ENTRY Siul2_Port_Ip_GetMSCRConfiguration
  # DEBUG BEGIN_STMT
  # DEBUG u32RegVal => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG u32TempVal => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = (int) pin_25(D);
  u32RegVal_37 ={v} base_23(D)->MSCR[_36];
  # DEBUG u32RegVal => u32RegVal_37
  # DEBUG BEGIN_STMT
  u32TempVal_38 = u32RegVal_37 & 7;
  # DEBUG u32TempVal => u32TempVal_38
  # DEBUG BEGIN_STMT
  config_28(D)->mux = u32TempVal_38;
  # DEBUG BEGIN_STMT
  _39 = u32RegVal_37 >> 5;
  u32TempVal_40 = _39 & 1;
  # DEBUG u32TempVal => u32TempVal_40
  # DEBUG BEGIN_STMT
  config_28(D)->safeMode = u32TempVal_40;
  # DEBUG BEGIN_STMT
  _41 = u32RegVal_37 & 8192;
  if (_41 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 27903866]:
  # DEBUG BEGIN_STMT
  _42 = u32RegVal_37 >> 11;
  u32TempVal_43 = _42 & 1;
  # DEBUG u32TempVal => u32TempVal_43
  # DEBUG BEGIN_STMT
  # DEBUG pullValue => u32TempVal_43

  <bb 9> [local count: 55807732]:
  # pullValue_44 = PHI <2(7), u32TempVal_43(8)>
  # DEBUG pullValue => pullValue_44
  # DEBUG BEGIN_STMT
  config_28(D)->pullConfig = pullValue_44;
  # DEBUG BEGIN_STMT
  _45 = u32RegVal_37 >> 14;
  u32TempVal_46 = _45 & 1;
  # DEBUG u32TempVal => u32TempVal_46
  # DEBUG BEGIN_STMT
  config_28(D)->slewRateCtrlSel = u32TempVal_46;
  # DEBUG BEGIN_STMT
  _47 = u32RegVal_37 >> 8;
  u32TempVal_48 = _47 & 1;
  # DEBUG u32TempVal => u32TempVal_48
  # DEBUG BEGIN_STMT
  config_28(D)->driveStrength = u32TempVal_48;
  # DEBUG BEGIN_STMT
  _49 = u32RegVal_37 >> 6;
  u32TempVal_50 = _49 & 1;
  # DEBUG u32TempVal => u32TempVal_50
  # DEBUG BEGIN_STMT
  config_28(D)->inputFilter = u32TempVal_50;
  # DEBUG BEGIN_STMT
  _51 = u32RegVal_37 >> 17;
  u32TempVal_52 = _51 & 1;
  # DEBUG u32TempVal => u32TempVal_52
  # DEBUG BEGIN_STMT
  config_28(D)->invert = u32TempVal_52;
  # DEBUG BEGIN_STMT
  _53 = u32RegVal_37 >> 16;
  u32TempVal_54 = _53 & 1;
  # DEBUG u32TempVal => u32TempVal_54
  # DEBUG BEGIN_STMT
  config_28(D)->pullKeep = u32TempVal_54;
  # DEBUG BEGIN_STMT
  _55 = u32RegVal_37 >> 19;
  u32TempVal_56 = _55 & 1;
  # DEBUG u32TempVal => u32TempVal_56
  # DEBUG BEGIN_STMT
  config_28(D)->inputBuffer = u32TempVal_56;
  # DEBUG BEGIN_STMT
  _57 = u32RegVal_37 >> 21;
  u32TempVal_58 = _57 & 1;
  # DEBUG u32TempVal => u32TempVal_58
  # DEBUG BEGIN_STMT
  config_28(D)->outputBuffer = u32TempVal_58;
  goto <bb 12>; [100.00%]

  <bb 10> [local count: 958878293]:
  # DEBUG BEGIN_STMT
  u16PinIdx_27 = u16PinIdx_16 + 1;
  # DEBUG u16PinIdx => u16PinIdx_27

  <bb 11> [local count: 1073741824]:
  # u16PinIdx_16 = PHI <0(2), u16PinIdx_27(10)>
  # DEBUG u16PinIdx => u16PinIdx_16
  # DEBUG BEGIN_STMT
  _15 = (long unsigned int) u16PinIdx_16;
  if (_15 < MaxPinConfigured_22)
    goto <bb 3>; [94.50%]
  else
    goto <bb 12>; [5.50%]

  <bb 12> [local count: 114863532]:
  # DEBUG config => NULL
  # DEBUG base => NULL
  # DEBUG pin => NULL
  # DEBUG pullValue => NULL
  # DEBUG u32TempVal => NULL
  # DEBUG u32RegVal => NULL
  return;

}


