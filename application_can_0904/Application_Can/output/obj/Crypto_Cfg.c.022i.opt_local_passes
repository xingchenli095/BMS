Crypto_PL_MainFunction ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Crypto_AL_MACGENERATE_AES_CMAC_MainFunction (0B, 0B);
  # DEBUG BEGIN_STMT
  Crypto_AL_MACVERIFY_AES_CMAC_MainFunction (0B, 0B);
  return;

}


Crypto_PL_MACVERIFY_AES_CMAC_Cancel (uint32 ObjectId, struct Crypto_JobType * Job)
{
  Std_ReturnType RetVal;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_1 = 1;
  # DEBUG RetVal => RetVal_1
  # DEBUG BEGIN_STMT
  RetVal_6 = Crypto_AL_MACVERIFY_AES_CMAC_Cancel (ObjectId_3(D), Job_4(D));
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  _7 = RetVal_6;
  return _7;

}


Crypto_PL_MACVERIFY_AES_CMAC_Process_SyncUpdate (uint32 ObjectId, boolean Busy, Std_ReturnType RetVal, struct Crypto_JobType * Job)
{
  unsigned char _1;
  unsigned char RetVal.28_2;
  unsigned char Busy.29_3;
  Std_ReturnType _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Crypto_AL_MACVERIFY_AES_CMAC_Finish (ObjectId_7(D), Job_8(D));
  RetVal = _1;
  # DEBUG BEGIN_STMT
  RetVal.28_2 = RetVal;
  if (RetVal.28_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Crypto_AL_MACVERIFY_AES_CMAC_MainFunction (&RetVal, &Busy);
  # DEBUG BEGIN_STMT
  Busy.29_3 = Busy;
  if (Busy.29_3 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _12 = RetVal;
  return _12;

}


Crypto_PL_MACVERIFY_AES_CMAC_Process (uint32 ObjectId, struct Crypto_JobType * Job)
{
  struct Crypto_DriverObject * DriverObj;
  boolean Busy;
  Std_ReturnType RetVal;
  const struct Crypto_JobPrimitiveInfoType * _1;
  unsigned char _2;
  unsigned char _3;
  int _4;
  int _5;
  unsigned char _6;
  unsigned char RetVal.15_7;
  unsigned char RetVal.16_8;
  unsigned char _9;
  int _10;
  int _11;
  unsigned char _12;
  unsigned char RetVal.17_13;
  unsigned char RetVal.18_14;
  const struct Crypto_JobPrimitiveInfoType * _15;
  unsigned char _16;
  unsigned char RetVal.19_17;
  unsigned char Busy.20_18;
  unsigned char RetVal.21_19;
  unsigned char _20;
  int _21;
  int _22;
  const struct Crypto_JobPrimitiveInfoType * _23;
  unsigned char _24;
  unsigned char _25;
  int _26;
  int _27;
  unsigned char _28;
  int _29;
  int _30;
  unsigned char _31;
  const struct Crypto_JobPrimitiveInfoType * _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char RetVal.22_35;
  unsigned char Busy.23_36;
  unsigned char RetVal.24_37;
  unsigned char _38;
  int _39;
  int _40;
  const struct Crypto_JobPrimitiveInfoType * _41;
  unsigned char _42;
  unsigned char _43;
  int _44;
  int _45;
  unsigned char _46;
  int _47;
  int _48;
  unsigned char _49;
  const struct Crypto_JobPrimitiveInfoType * _50;
  unsigned char _51;
  unsigned char Busy.25_52;
  unsigned char RetVal.26_53;
  unsigned char _54;
  unsigned char RetVal.27_55;
  Std_ReturnType _106;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  Busy = 1;
  # DEBUG BEGIN_STMT
  DriverObj_70 = &Crypto_DriverObjects[ObjectId_69(D)];
  # DEBUG DriverObj => DriverObj_70
  # DEBUG BEGIN_STMT
  _1 = Job_71(D)->jobPrimitiveInfo;
  _2 = _1->processingType;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _3 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _4 = (int) _3;
  _5 = _4 & 7;
  if (_5 == 7)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = Crypto_AL_MACVERIFY_AES_CMAC_SyncSingleCall (ObjectId_69(D), Job_71(D));
  RetVal = _6;
  # DEBUG BEGIN_STMT
  RetVal.15_7 = RetVal;
  if (RetVal.15_7 == 8)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  RetVal.16_8 = RetVal;
  if (RetVal.16_8 == 6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  DriverObj_70->DriverObjectState = 0;
  # DEBUG BEGIN_STMT
  DriverObj_70->CurrentJob = 0B;
  # DEBUG BEGIN_STMT
  DriverObj_70->SkipPeriodicMainFunction = 1;
  # DEBUG BEGIN_STMT
  SchM_Exit_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  Job_71(D)->jobState = 0;
  goto <bb 32>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _9 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _10 = (int) _9;
  _11 = _10 & 1;
  if (_11 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _12 = Crypto_AL_MACVERIFY_AES_CMAC_Start (ObjectId_69(D), Job_71(D));
  RetVal = _12;
  # DEBUG BEGIN_STMT
  RetVal.17_13 = RetVal;
  if (RetVal.17_13 == 8)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  RetVal.18_14 = RetVal;
  if (RetVal.18_14 == 6)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 12> :
  # DEBUG BEGIN_STMT
  _15 = Job_71(D)->jobPrimitiveInfo;
  _16 = _15->processingType;
  if (_16 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  RetVal.19_17 = RetVal;
  if (RetVal.19_17 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Crypto_AL_MACVERIFY_AES_CMAC_MainFunction (&RetVal, &Busy);
  # DEBUG BEGIN_STMT
  Busy.20_18 = Busy;
  if (Busy.20_18 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  RetVal.21_19 = RetVal;
  if (RetVal.21_19 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 16> :
  _20 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _21 = (int) _20;
  _22 = _21 & 2;
  if (_22 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _23 = Job_71(D)->jobPrimitiveInfo;
  _24 = _23->processingType;
  if (_24 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _25 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _26 = (int) _25;
  _27 = _26 & 3;
  if (_27 != 3)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _28 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _29 = (int) _28;
  _30 = _29 & 7;
  if (_30 != 7)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _31 = Crypto_AL_MACVERIFY_AES_CMAC_Update (ObjectId_69(D), Job_71(D));
  RetVal = _31;

  <bb 21> :
  # DEBUG BEGIN_STMT
  _32 = Job_71(D)->jobPrimitiveInfo;
  _33 = _32->processingType;
  if (_33 == 1)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  _34 = Crypto_AL_MACVERIFY_AES_CMAC_Update (ObjectId_69(D), Job_71(D));
  RetVal = _34;
  # DEBUG BEGIN_STMT
  RetVal.22_35 = RetVal;
  if (RetVal.22_35 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Crypto_AL_MACVERIFY_AES_CMAC_MainFunction (&RetVal, &Busy);
  # DEBUG BEGIN_STMT
  Busy.23_36 = Busy;
  if (Busy.23_36 == 1)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  RetVal.24_37 = RetVal;
  if (RetVal.24_37 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 25> :
  _38 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _39 = (int) _38;
  _40 = _39 & 4;
  if (_40 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  _41 = Job_71(D)->jobPrimitiveInfo;
  _42 = _41->processingType;
  if (_42 == 0)
    goto <bb 27>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 27> :
  _43 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _44 = (int) _43;
  _45 = _44 & 3;
  if (_45 != 3)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 28> :
  _46 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _47 = (int) _46;
  _48 = _47 & 7;
  if (_48 != 7)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  _49 = Crypto_AL_MACVERIFY_AES_CMAC_Finish (ObjectId_69(D), Job_71(D));
  RetVal = _49;

  <bb 30> :
  # DEBUG BEGIN_STMT
  _50 = Job_71(D)->jobPrimitiveInfo;
  _51 = _50->processingType;
  if (_51 == 1)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  # DEBUG BEGIN_STMT
  Busy.25_52 = Busy;
  RetVal.26_53 = RetVal;
  _54 = Crypto_PL_MACVERIFY_AES_CMAC_Process_SyncUpdate (ObjectId_69(D), Busy.25_52, RetVal.26_53, Job_71(D));
  RetVal = _54;
  # DEBUG BEGIN_STMT
  SchM_Enter_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  DriverObj_70->DriverObjectState = 0;
  # DEBUG BEGIN_STMT
  DriverObj_70->SkipPeriodicMainFunction = 1;
  # DEBUG BEGIN_STMT
  DriverObj_70->CurrentJob = 0B;
  # DEBUG BEGIN_STMT
  SchM_Exit_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  Job_71(D)->jobState = 0;

  <bb 32> :
  # DEBUG BEGIN_STMT
  RetVal.27_55 = RetVal;
  if (RetVal.27_55 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  DriverObj_70->DriverObjectState = 0;
  # DEBUG BEGIN_STMT
  DriverObj_70->CurrentJob = 0B;
  # DEBUG BEGIN_STMT
  DriverObj_70->SkipPeriodicMainFunction = 1;
  # DEBUG BEGIN_STMT
  SchM_Exit_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  Job_71(D)->jobState = 0;

  <bb 34> :
  # DEBUG BEGIN_STMT
  _106 = RetVal;
  RetVal ={v} {CLOBBER};
  Busy ={v} {CLOBBER};
  return _106;

}


Crypto_PL_MACGENERATE_AES_CMAC_Cancel (uint32 ObjectId, struct Crypto_JobType * Job)
{
  Std_ReturnType RetVal;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_1 = 1;
  # DEBUG RetVal => RetVal_1
  # DEBUG BEGIN_STMT
  RetVal_6 = Crypto_AL_MACGENERATE_AES_CMAC_Cancel (ObjectId_3(D), Job_4(D));
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  _7 = RetVal_6;
  return _7;

}


Crypto_PL_MACGENERATE_AES_CMAC_Process_SyncUpdate (uint32 ObjectId, boolean Busy, Std_ReturnType RetVal, struct Crypto_JobType * Job)
{
  unsigned char _1;
  unsigned char RetVal.13_2;
  unsigned char Busy.14_3;
  Std_ReturnType _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Crypto_AL_MACGENERATE_AES_CMAC_Finish (ObjectId_7(D), Job_8(D));
  RetVal = _1;
  # DEBUG BEGIN_STMT
  RetVal.13_2 = RetVal;
  if (RetVal.13_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Crypto_AL_MACGENERATE_AES_CMAC_MainFunction (&RetVal, &Busy);
  # DEBUG BEGIN_STMT
  Busy.14_3 = Busy;
  if (Busy.14_3 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _12 = RetVal;
  return _12;

}


Crypto_PL_MACGENERATE_AES_CMAC_Process (uint32 ObjectId, struct Crypto_JobType * Job)
{
  struct Crypto_DriverObject * DriverObj;
  boolean Busy;
  Std_ReturnType RetVal;
  const struct Crypto_JobPrimitiveInfoType * _1;
  unsigned char _2;
  unsigned char _3;
  int _4;
  int _5;
  unsigned char _6;
  unsigned char RetVal.0_7;
  unsigned char RetVal.1_8;
  unsigned char _9;
  int _10;
  int _11;
  unsigned char _12;
  unsigned char RetVal.2_13;
  unsigned char RetVal.3_14;
  const struct Crypto_JobPrimitiveInfoType * _15;
  unsigned char _16;
  unsigned char RetVal.4_17;
  unsigned char Busy.5_18;
  unsigned char RetVal.6_19;
  unsigned char _20;
  int _21;
  int _22;
  const struct Crypto_JobPrimitiveInfoType * _23;
  unsigned char _24;
  unsigned char _25;
  int _26;
  int _27;
  unsigned char _28;
  int _29;
  int _30;
  unsigned char _31;
  const struct Crypto_JobPrimitiveInfoType * _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char RetVal.7_35;
  unsigned char Busy.8_36;
  unsigned char RetVal.9_37;
  unsigned char _38;
  int _39;
  int _40;
  const struct Crypto_JobPrimitiveInfoType * _41;
  unsigned char _42;
  unsigned char _43;
  int _44;
  int _45;
  unsigned char _46;
  int _47;
  int _48;
  unsigned char _49;
  const struct Crypto_JobPrimitiveInfoType * _50;
  unsigned char _51;
  unsigned char Busy.10_52;
  unsigned char RetVal.11_53;
  unsigned char _54;
  unsigned char RetVal.12_55;
  Std_ReturnType _106;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  Busy = 1;
  # DEBUG BEGIN_STMT
  DriverObj_70 = &Crypto_DriverObjects[ObjectId_69(D)];
  # DEBUG DriverObj => DriverObj_70
  # DEBUG BEGIN_STMT
  _1 = Job_71(D)->jobPrimitiveInfo;
  _2 = _1->processingType;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _3 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _4 = (int) _3;
  _5 = _4 & 7;
  if (_5 == 7)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = Crypto_AL_MACGENERATE_AES_CMAC_SyncSingleCall (ObjectId_69(D), Job_71(D));
  RetVal = _6;
  # DEBUG BEGIN_STMT
  RetVal.0_7 = RetVal;
  if (RetVal.0_7 == 8)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  RetVal.1_8 = RetVal;
  if (RetVal.1_8 == 6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  DriverObj_70->DriverObjectState = 0;
  # DEBUG BEGIN_STMT
  DriverObj_70->CurrentJob = 0B;
  # DEBUG BEGIN_STMT
  DriverObj_70->SkipPeriodicMainFunction = 1;
  # DEBUG BEGIN_STMT
  SchM_Exit_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  Job_71(D)->jobState = 0;
  goto <bb 32>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _9 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _10 = (int) _9;
  _11 = _10 & 1;
  if (_11 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _12 = Crypto_AL_MACGENERATE_AES_CMAC_Start (ObjectId_69(D), Job_71(D));
  RetVal = _12;
  # DEBUG BEGIN_STMT
  RetVal.2_13 = RetVal;
  if (RetVal.2_13 == 8)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  RetVal.3_14 = RetVal;
  if (RetVal.3_14 == 6)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 12> :
  # DEBUG BEGIN_STMT
  _15 = Job_71(D)->jobPrimitiveInfo;
  _16 = _15->processingType;
  if (_16 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  RetVal.4_17 = RetVal;
  if (RetVal.4_17 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Crypto_AL_MACGENERATE_AES_CMAC_MainFunction (&RetVal, &Busy);
  # DEBUG BEGIN_STMT
  Busy.5_18 = Busy;
  if (Busy.5_18 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  RetVal.6_19 = RetVal;
  if (RetVal.6_19 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 16> :
  _20 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _21 = (int) _20;
  _22 = _21 & 2;
  if (_22 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _23 = Job_71(D)->jobPrimitiveInfo;
  _24 = _23->processingType;
  if (_24 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _25 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _26 = (int) _25;
  _27 = _26 & 3;
  if (_27 != 3)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _28 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _29 = (int) _28;
  _30 = _29 & 7;
  if (_30 != 7)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _31 = Crypto_AL_MACGENERATE_AES_CMAC_Update (ObjectId_69(D), Job_71(D));
  RetVal = _31;

  <bb 21> :
  # DEBUG BEGIN_STMT
  _32 = Job_71(D)->jobPrimitiveInfo;
  _33 = _32->processingType;
  if (_33 == 1)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  _34 = Crypto_AL_MACGENERATE_AES_CMAC_Update (ObjectId_69(D), Job_71(D));
  RetVal = _34;
  # DEBUG BEGIN_STMT
  RetVal.7_35 = RetVal;
  if (RetVal.7_35 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Crypto_AL_MACGENERATE_AES_CMAC_MainFunction (&RetVal, &Busy);
  # DEBUG BEGIN_STMT
  Busy.8_36 = Busy;
  if (Busy.8_36 == 1)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  RetVal.9_37 = RetVal;
  if (RetVal.9_37 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 25> :
  _38 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _39 = (int) _38;
  _40 = _39 & 4;
  if (_40 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  _41 = Job_71(D)->jobPrimitiveInfo;
  _42 = _41->processingType;
  if (_42 == 0)
    goto <bb 27>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 27> :
  _43 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _44 = (int) _43;
  _45 = _44 & 3;
  if (_45 != 3)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 28> :
  _46 = Job_71(D)->jobPrimitiveInputOutput.mode;
  _47 = (int) _46;
  _48 = _47 & 7;
  if (_48 != 7)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  _49 = Crypto_AL_MACGENERATE_AES_CMAC_Finish (ObjectId_69(D), Job_71(D));
  RetVal = _49;

  <bb 30> :
  # DEBUG BEGIN_STMT
  _50 = Job_71(D)->jobPrimitiveInfo;
  _51 = _50->processingType;
  if (_51 == 1)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  # DEBUG BEGIN_STMT
  Busy.10_52 = Busy;
  RetVal.11_53 = RetVal;
  _54 = Crypto_PL_MACGENERATE_AES_CMAC_Process_SyncUpdate (ObjectId_69(D), Busy.10_52, RetVal.11_53, Job_71(D));
  RetVal = _54;
  # DEBUG BEGIN_STMT
  SchM_Enter_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  DriverObj_70->DriverObjectState = 0;
  # DEBUG BEGIN_STMT
  DriverObj_70->SkipPeriodicMainFunction = 1;
  # DEBUG BEGIN_STMT
  DriverObj_70->CurrentJob = 0B;
  # DEBUG BEGIN_STMT
  SchM_Exit_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  Job_71(D)->jobState = 0;

  <bb 32> :
  # DEBUG BEGIN_STMT
  RetVal.12_55 = RetVal;
  if (RetVal.12_55 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  DriverObj_70->DriverObjectState = 0;
  # DEBUG BEGIN_STMT
  DriverObj_70->CurrentJob = 0B;
  # DEBUG BEGIN_STMT
  DriverObj_70->SkipPeriodicMainFunction = 1;
  # DEBUG BEGIN_STMT
  SchM_Exit_Crypto_SCHM_CRYPTO_EXCLUSIVE_AREA_DRIVEROBJECT ();
  # DEBUG BEGIN_STMT
  Job_71(D)->jobState = 0;

  <bb 34> :
  # DEBUG BEGIN_STMT
  _106 = RetVal;
  RetVal ={v} {CLOBBER};
  Busy ={v} {CLOBBER};
  return _106;

}


