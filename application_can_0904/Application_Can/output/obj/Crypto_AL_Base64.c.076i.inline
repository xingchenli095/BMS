IPA function summary for Crypto_Base64DecodeOneBlock/2 inlinable
  global time:     2058.677235
  self size:       39
  global size:     39
  min size:       0
  self stack:      0
  global stack:    0
    size:36.000000, time:2056.677235
    size:3.000000, time:2.000000,  executed if:(not inlined)
  loop iterations:(op3 changed)
  calls:

IPA function summary for Crypto_AL_Base64Decode/1 inlinable
  global time:     1348.705002
  self size:       77
  global size:     77
  min size:       12
  self stack:      0
  global stack:    0
    size:66.500000, time:1333.014870
    size:3.500000, time:2.499999,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op3[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op3[ref offset: 0] changed)
  loop iterations:(op1 changed)
  calls:
    Crypto_Base64DecodeOneBlock/2 function not considered for inlining
      loop depth: 1 freq:0.81 size: 6 time: 15callee size:19 stack: 0


Flattening functions:
Overall time estimate: 3407.382236 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Crypto_Base64DecodeOneBlock/2.
Enqueueing calls in Crypto_AL_Base64Decode/1.

Considering Crypto_Base64DecodeOneBlock/2 with 39 size
 to be inlined into Crypto_AL_Base64Decode/1 in C:/Users/DELL/Desktop/new/Application_Can/output/generated/instance/Crypto/src/Crypto_AL_Base64.c:239
 Estimated badness is -0.017216, frequency 0.81.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 3007.926121 weighted by profile: 0.000000

Why inlining failed?
IPA function summary for Crypto_AL_Base64Decode/1 inlinable
  global time:     3007.926121
  self size:       77
  global size:     107
  min size:       12
  self stack:      0
  global stack:    0
    size:102.500000, time:3004.426121
    size:3.500000, time:2.499999,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op3[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op3[ref offset: 0] changed)
  loop iterations:(op1 changed)
  calls:
    Crypto_Base64DecodeOneBlock/2 inlined
      loop depth: 1 freq:0.81 size: 6 time: 15callee size:19 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

Symbol table:

Crypto_Base64DecodeOneBlock/2 (Crypto_Base64DecodeOneBlock) @06a80c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Crypto_Base64Mapping/0 (read)
  Referring: 
  Function Crypto_Base64DecodeOneBlock/2 is inline copy in Crypto_AL_Base64Decode/1
  Availability: local
  Function flags: count:11181965 (estimated locally) body local optimize_size
  Called by: Crypto_AL_Base64Decode/1 (inlined) (11181965 (estimated locally),0.81 per call) 
  Calls: 
Crypto_AL_Base64Decode/1 (Crypto_AL_Base64Decode) @06a80a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:13759446 (estimated locally) body optimize_size
  Called by: 
  Calls: Crypto_Base64DecodeOneBlock/2 (inlined) (11181965 (estimated locally),0.81 per call) 
Crypto_Base64Mapping/0 (Crypto_Base64Mapping) @0685d5a0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Crypto_Base64DecodeOneBlock/2 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known

;; Function Crypto_AL_Base64Decode (Crypto_AL_Base64Decode, funcdef_no=0, decl_uid=5372, cgraph_uid=1, symbol_order=1)


Symbols to be put in SSA form
{ D.5485 D.5497 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 62
Number of blocks to update: 61 ( 98%)


Merging blocks 31 and 43
Removing basic block 41
Removing basic block 50
Removing basic block 58
Merging blocks 61 and 42
;; 9 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
;;
;; Loop 3
;;  header 49, latch 48
;;  depth 1, outer 0
;;  nodes: 49 48 28 47 29 30 44 46 45 42 37 41 31 40 38 39 33 36 35 34 32 43 26 27 25 50 23 24 19 20 21 22
;;
;; Loop 5
;;  header 46, latch 45
;;  depth 2, outer 3
;;  nodes: 46 45
;;
;; Loop 6
;;  header 41, latch 40
;;  depth 2, outer 3
;;  nodes: 41 40 38 39 37 33 36 35 34 32 43 42
;;
;; Loop 7
;;  header 42, latch 37
;;  depth 3, outer 6
;;  nodes: 42 37 33 36 35 34 32 43
;;
;; Loop 8
;;  header 33, latch 32
;;  depth 4, outer 7
;;  nodes: 33 32 34 35 36
;;
;; Loop 4
;;  header 26, latch 25
;;  depth 2, outer 3
;;  nodes: 26 25 23 24 19 20 21 22 27
;;
;; Loop 2
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 12 11 14 13 10 17
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4 5 9
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { 16 }
;; 9 succs { 3 8 }
;; 10 succs { 11 12 }
;; 11 succs { 15 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 10 18 }
;; 18 succs { 49 }
;; 19 succs { 20 23 }
;; 20 succs { 21 23 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 19 28 }
;; 28 succs { 48 29 }
;; 29 succs { 48 30 }
;; 30 succs { 31 48 }
;; 31 succs { 41 }
;; 32 succs { 33 }
;; 33 succs { 34 37 }
;; 34 succs { 32 35 }
;; 35 succs { 32 36 }
;; 36 succs { 32 37 }
;; 37 succs { 38 42 }
;; 38 succs { 40 39 }
;; 39 succs { 40 }
;; 40 succs { 41 }
;; 41 succs { 42 }
;; 42 succs { 43 44 }
;; 43 succs { 33 }
;; 44 succs { 46 47 }
;; 45 succs { 46 }
;; 46 succs { 45 47 }
;; 47 succs { 48 }
;; 48 succs { 49 }
;; 49 succs { 50 51 }
;; 50 succs { 26 51 }
;; 51 succs { 52 56 }
;; 52 succs { 53 56 }
;; 53 succs { 55 54 }
;; 54 succs { 55 56 }
;; 55 succs { 56 }
;; 56 succs { 1 }
Crypto_AL_Base64Decode (const uint8 * Encoding, uint32 EncodingLength, uint8 * Result, uint32 * ResultLengthPtr)
{
  uint32 DecodedBytes;
  Std_ReturnType RetVal;
  uint32 i;
  uint32 j;
  uint8 SixDecodedBits;
  Std_ReturnType D.5497;
  boolean Finished;
  uint32 PaddingCharsAtEnd;
  uint32 TotalPaddingChars;
  uint32 ResultBufferLength;
  uint32 ResultBlockLength;
  uint32 EncodingBlockRealLength;
  uint32 EncodingBlockLength;
  uint32 ResultPosition;
  uint32 EncodingPosition;
  Std_ReturnType RetVal;
  const uint8 * _1;
  unsigned char _2;
  const uint8 * _5;
  unsigned char _6;
  const uint8 * _11;
  unsigned char _12;
  long unsigned int _18;
  long unsigned int _20;
  long unsigned int _21;
  const uint8 * _22;
  uint8 * _23;
  long unsigned int _24;
  const uint8 * _70;
  unsigned char _71;
  const uint8 * _74;
  unsigned char _75;
  int _76;
  long unsigned int _78;
  long unsigned int _80;
  long unsigned int _81;
  long unsigned int _82;
  long unsigned int _90;
  long unsigned int _91;
  long unsigned int _93;
  uint8 * _94;
  unsigned char _95;

  <bb 2> [local count: 5970364]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG EncodingPosition => EncodingLength_44(D)
  # DEBUG BEGIN_STMT
  # DEBUG EncodingLength => 0
  # DEBUG BEGIN_STMT
  # DEBUG Finished => 0
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 49840473]:
  # DEBUG BEGIN_STMT
  EncodingPosition_48 = EncodingPosition_28 + 4294967295;
  # DEBUG EncodingPosition => EncodingPosition_48
  # DEBUG BEGIN_STMT
  _1 = Encoding_49(D) + EncodingPosition_48;
  _2 = *_1;
  if (_2 != 10)
    goto <bb 4>; [66.00%]
  else
    goto <bb 6>; [34.00%]

  <bb 4> [local count: 32894712]:
  if (_2 != 13)
    goto <bb 5>; [66.00%]
  else
    goto <bb 6>; [34.00%]

  <bb 5> [local count: 21710510]:
  # DEBUG BEGIN_STMT
  # DEBUG Finished => 1
  # DEBUG BEGIN_STMT
  # DEBUG EncodingLength => EncodingPosition_28

  <bb 6> [local count: 49840473]:
  # EncodingLength_51 = PHI <EncodingLength_25(3), EncodingLength_25(4), EncodingPosition_28(5)>
  # EncodingPosition_4 = PHI <EncodingPosition_48(3), EncodingPosition_48(4), EncodingPosition_48(5)>
  # Finished_3 = PHI <0(3), 0(4), 1(5)>

  <bb 7> [local count: 55810837]:
  # EncodingLength_25 = PHI <EncodingLength_51(6), 0(2)>
  # EncodingPosition_28 = PHI <EncodingPosition_4(6), EncodingLength_44(D)(2)>
  # Finished_40 = PHI <Finished_3(6), 0(2)>
  # DEBUG Finished => Finished_40
  # DEBUG EncodingPosition => EncodingPosition_28
  # DEBUG EncodingLength => EncodingLength_25
  # DEBUG BEGIN_STMT
  if (EncodingPosition_28 != 0)
    goto <bb 9>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 8> [local count: 5970364]:
  # EncodingPosition_17 = PHI <EncodingLength_25(7), EncodingLength_25(9)>
  # EncodingLength_19 = PHI <EncodingLength_25(7), EncodingLength_25(9)>
  goto <bb 16>; [100.00%]

  <bb 9> [local count: 52741241]:
  if (Finished_40 == 0)
    goto <bb 3>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 10> [local count: 49840472]:
  # DEBUG BEGIN_STMT
  EncodingPosition_53 = EncodingPosition_29 + 4294967295;
  # DEBUG EncodingPosition => EncodingPosition_53
  # DEBUG BEGIN_STMT
  _5 = Encoding_49(D) + EncodingPosition_53;
  _6 = *_5;
  if (_6 == 61)
    goto <bb 11>; [34.00%]
  else
    goto <bb 12>; [66.00%]

  <bb 11> [local count: 16945760]:
  # DEBUG BEGIN_STMT
  PaddingCharsAtEnd_54 = PaddingCharsAtEnd_39 + 1;
  # DEBUG PaddingCharsAtEnd => PaddingCharsAtEnd_54
  goto <bb 15>; [100.00%]

  <bb 12> [local count: 32894711]:
  # DEBUG BEGIN_STMT
  if (_6 != 10)
    goto <bb 13>; [66.00%]
  else
    goto <bb 15>; [34.00%]

  <bb 13> [local count: 21710510]:
  if (_6 != 13)
    goto <bb 14>; [66.00%]
  else
    goto <bb 15>; [34.00%]

  <bb 14> [local count: 14328936]:
  # DEBUG BEGIN_STMT
  # DEBUG Finished => 1

  <bb 15> [local count: 49840472]:
  # EncodingPosition_8 = PHI <EncodingPosition_53(12), EncodingPosition_53(11), EncodingPosition_53(14), EncodingPosition_53(13)>
  # PaddingCharsAtEnd_7 = PHI <PaddingCharsAtEnd_39(12), PaddingCharsAtEnd_54(11), PaddingCharsAtEnd_39(14), PaddingCharsAtEnd_39(13)>
  # Finished_52 = PHI <0(12), 0(11), 1(14), 0(13)>

  <bb 16> [local count: 55810836]:
  # EncodingPosition_29 = PHI <EncodingPosition_8(15), EncodingPosition_17(8)>
  # PaddingCharsAtEnd_39 = PHI <PaddingCharsAtEnd_7(15), 0(8)>
  # Finished_41 = PHI <Finished_52(15), 0(8)>
  # DEBUG Finished => Finished_41
  # DEBUG PaddingCharsAtEnd => PaddingCharsAtEnd_39
  # DEBUG EncodingPosition => EncodingPosition_29
  # DEBUG BEGIN_STMT
  if (EncodingPosition_29 != 0)
    goto <bb 17>; [94.50%]
  else
    goto <bb 18>; [5.50%]

  <bb 17> [local count: 52741240]:
  if (Finished_41 == 0)
    goto <bb 10>; [94.50%]
  else
    goto <bb 18>; [5.50%]

  <bb 18> [local count: 5970364]:
  # PaddingCharsAtEnd_67 = PHI <PaddingCharsAtEnd_39(16), PaddingCharsAtEnd_39(17)>
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  # DEBUG EncodingPosition => 0
  # DEBUG BEGIN_STMT
  # DEBUG ResultPosition => 0
  # DEBUG BEGIN_STMT
  # DEBUG TotalPaddingChars => 0
  # DEBUG BEGIN_STMT
  ResultBufferLength_56 = *ResultLengthPtr_55(D);
  # DEBUG ResultBufferLength => ResultBufferLength_56
  # DEBUG BEGIN_STMT
  # DEBUG ResultBlockLength => 0
  # DEBUG BEGIN_STMT
  # DEBUG EncodingBlockRealLength => 0
  # DEBUG BEGIN_STMT
  goto <bb 49>; [100.00%]

  <bb 19> [local count: 416067103]:
  # DEBUG BEGIN_STMT
  _11 = Encoding_49(D) + _20;
  _12 = *_11;
  if (_12 != 13)
    goto <bb 20>; [66.00%]
  else
    goto <bb 23>; [34.00%]

  <bb 20> [local count: 274604288]:
  if (_12 != 10)
    goto <bb 21>; [66.00%]
  else
    goto <bb 23>; [34.00%]

  <bb 21> [local count: 181238830]:
  if (_12 != 61)
    goto <bb 22>; [66.00%]
  else
    goto <bb 23>; [34.00%]

  <bb 22> [local count: 119617628]:
  # DEBUG BEGIN_STMT
  EncodingBlockRealLength_57 = EncodingBlockRealLength_34 + 1;
  # DEBUG EncodingBlockRealLength => EncodingBlockRealLength_57

  <bb 23> [local count: 416067103]:
  # EncodingBlockRealLength_33 = PHI <EncodingBlockRealLength_34(19), EncodingBlockRealLength_34(20), EncodingBlockRealLength_34(21), EncodingBlockRealLength_57(22)>
  # DEBUG EncodingBlockRealLength => EncodingBlockRealLength_33
  # DEBUG BEGIN_STMT
  if (_12 == 61)
    goto <bb 24>; [34.00%]
  else
    goto <bb 25>; [66.00%]

  <bb 24> [local count: 141462815]:
  # DEBUG BEGIN_STMT
  TotalPaddingChars_58 = TotalPaddingChars_37 + 1;
  # DEBUG TotalPaddingChars => TotalPaddingChars_58

  <bb 25> [local count: 416067103]:
  # TotalPaddingChars_36 = PHI <TotalPaddingChars_37(23), TotalPaddingChars_58(24)>
  # DEBUG TotalPaddingChars => TotalPaddingChars_36
  # DEBUG BEGIN_STMT
  EncodingBlockLength_59 = EncodingBlockLength_32 + 1;
  # DEBUG EncodingBlockLength => EncodingBlockLength_59

  <bb 26> [local count: 465907565]:
  # EncodingBlockLength_32 = PHI <EncodingBlockLength_59(25), 0(50)>
  # EncodingBlockRealLength_34 = PHI <EncodingBlockRealLength_33(25), 0(50)>
  # TotalPaddingChars_37 = PHI <TotalPaddingChars_36(25), TotalPaddingChars_38(50)>
  # DEBUG TotalPaddingChars => TotalPaddingChars_37
  # DEBUG EncodingBlockRealLength => EncodingBlockRealLength_34
  # DEBUG EncodingBlockLength => EncodingBlockLength_32
  # DEBUG BEGIN_STMT
  _20 = EncodingPosition_30 + EncodingBlockLength_32;
  if (EncodingLength_19 > _20)
    goto <bb 27>; [94.50%]
  else
    goto <bb 28>; [5.50%]

  <bb 27> [local count: 440282649]:
  if (EncodingBlockRealLength_34 <= 3)
    goto <bb 19>; [94.50%]
  else
    goto <bb 28>; [5.50%]

  <bb 28> [local count: 49840462]:
  # _18 = PHI <_20(26), _20(27)>
  # EncodingBlockLength_43 = PHI <EncodingBlockLength_32(26), EncodingBlockLength_32(27)>
  # EncodingBlockRealLength_45 = PHI <EncodingBlockRealLength_34(26), EncodingBlockRealLength_34(27)>
  # TotalPaddingChars_47 = PHI <TotalPaddingChars_37(26), TotalPaddingChars_37(27)>
  # DEBUG BEGIN_STMT
  if (EncodingBlockRealLength_45 <= 1)
    goto <bb 48>; [41.00%]
  else
    goto <bb 29>; [59.00%]

  <bb 29> [local count: 29405872]:
  if (TotalPaddingChars_47 > PaddingCharsAtEnd_67)
    goto <bb 48>; [50.00%]
  else
    goto <bb 30>; [50.00%]

  <bb 30> [local count: 14702936]:
  # DEBUG BEGIN_STMT
  ResultBlockLength_60 = EncodingBlockRealLength_45 + 4294967295;
  # DEBUG ResultBlockLength => ResultBlockLength_60
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _21 = ResultPosition_31 + ResultBlockLength_60;
  if (_21 <= ResultBufferLength_56)
    goto <bb 31>; [33.00%]
  else
    goto <bb 48>; [67.00%]

  <bb 31> [local count: 4851969]:
  # DEBUG BEGIN_STMT
  _22 = Encoding_49(D) + EncodingPosition_30;
  _23 = Result_61(D) + ResultPosition_31;
  # DEBUG EncodingBlock => _22
  # DEBUG EncodingBlockLength => EncodingBlockLength_43
  # DEBUG ResultBlock => _23
  # DEBUG ResultBlockLength => ResultBlockLength_60
  # DEBUG INLINE_ENTRY Crypto_Base64DecodeOneBlock
  # DEBUG BEGIN_STMT
  # DEBUG DecodedBytes => 0
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  # DEBUG BEGIN_STMT
  # DEBUG j => 0
  # DEBUG BEGIN_STMT
  # DEBUG SixDecodedBits => 0
  # DEBUG BEGIN_STMT
  goto <bb 41>; [100.00%]

  <bb 32> [local count: 990376176]:
  # DEBUG BEGIN_STMT
  i_69 = i_68 + 1;
  # DEBUG i => i_69

  <bb 33> [local count: 1073741824]:
  # i_68 = PHI <i_69(32), i_87(43)>
  # DEBUG i => i_68
  # DEBUG BEGIN_STMT
  if (EncodingBlockLength_43 > i_68)
    goto <bb 34>; [94.50%]
  else
    goto <bb 37>; [5.50%]

  <bb 34> [local count: 1014686023]:
  _70 = _22 + i_68;
  _71 = *_70;
  if (_71 == 13)
    goto <bb 32>; [34.00%]
  else
    goto <bb 35>; [66.00%]

  <bb 35> [local count: 669692776]:
  if (_71 == 10)
    goto <bb 32>; [34.00%]
  else
    goto <bb 36>; [66.00%]

  <bb 36> [local count: 441997231]:
  if (_71 == 61)
    goto <bb 32>; [94.50%]
  else
    goto <bb 37>; [5.50%]

  <bb 37> [local count: 83365648]:
  # i_72 = PHI <i_68(33), i_68(36)>
  # DEBUG BEGIN_STMT
  if (EncodingBlockLength_43 > i_72)
    goto <bb 38>; [5.50%]
  else
    goto <bb 42>; [94.50%]

  <bb 38> [local count: 4585111]:
  # DecodedBytes_83 = PHI <DecodedBytes_97(37)>
  # RetVal_98 = PHI <RetVal_99(37)>
  # i_73 = PHI <i_72(37)>
  # j_79 = PHI <j_100(37)>
  # DEBUG BEGIN_STMT
  _74 = _22 + i_73;
  _75 = *_74;
  _76 = (int) _75;
  SixDecodedBits_77 = Crypto_Base64Mapping[_76];
  # DEBUG SixDecodedBits => SixDecodedBits_77
  # DEBUG BEGIN_STMT
  if (SixDecodedBits_77 == 255)
    goto <bb 40>; [34.00%]
  else
    goto <bb 39>; [66.00%]

  <bb 39> [local count: 3026173]:
  # DEBUG BEGIN_STMT
  _78 = (long unsigned int) SixDecodedBits_77;
  _80 = j_79 * 4294967290;
  _81 = _80 + 18;
  _82 = _78 << _81;
  DecodedBytes_84 = _82 | DecodedBytes_83;
  # DEBUG DecodedBytes => DecodedBytes_84

  <bb 40> [local count: 4585111]:
  # DecodedBytes_101 = PHI <DecodedBytes_83(38), DecodedBytes_84(39)>
  # RetVal_102 = PHI <1(38), RetVal_98(39)>
  # DEBUG RetVal => RetVal_102
  # DEBUG DecodedBytes => DecodedBytes_101
  # DEBUG BEGIN_STMT
  i_85 = i_73 + 1;
  # DEBUG i => i_85
  # DEBUG BEGIN_STMT
  j_86 = j_79 + 1;
  # DEBUG j => j_86

  <bb 41> [local count: 9437080]:
  # DecodedBytes_103 = PHI <0(31), DecodedBytes_101(40)>
  # RetVal_104 = PHI <0(31), RetVal_102(40)>
  # i_105 = PHI <0(31), i_85(40)>
  # j_106 = PHI <0(31), j_86(40)>

  <bb 42> [local count: 88217617]:
  # DecodedBytes_97 = PHI <DecodedBytes_97(37), DecodedBytes_103(41)>
  # RetVal_99 = PHI <RetVal_99(37), RetVal_104(41)>
  # i_87 = PHI <i_72(37), i_105(41)>
  # j_100 = PHI <j_100(37), j_106(41)>
  # DEBUG j => j_100
  # DEBUG i => i_87
  # DEBUG RetVal => RetVal_99
  # DEBUG DecodedBytes => DecodedBytes_97
  # DEBUG BEGIN_STMT
  if (EncodingBlockLength_43 > i_87)
    goto <bb 43>; [94.50%]
  else
    goto <bb 44>; [5.50%]

  <bb 43> [local count: 83365648]:
  goto <bb 33>; [100.00%]

  <bb 44> [local count: 4851969]:
  # DecodedBytes_92 = PHI <DecodedBytes_97(42)>
  # RetVal_88 = PHI <RetVal_99(42)>
  # DEBUG BEGIN_STMT
  if (RetVal_88 == 0)
    goto <bb 46>; [50.00%]
  else
    goto <bb 47>; [50.00%]

  <bb 45> [local count: 19628420]:
  # DEBUG BEGIN_STMT
  _90 = 2 - i_89;
  _91 = _90 * 8;
  _93 = DecodedBytes_92 >> _91;
  _94 = _23 + i_89;
  _95 = (unsigned char) _93;
  *_94 = _95;
  # DEBUG BEGIN_STMT
  i_96 = i_89 + 1;
  # DEBUG i => i_96

  <bb 46> [local count: 22054404]:
  # i_89 = PHI <0(44), i_96(45)>
  # DEBUG i => i_89
  # DEBUG BEGIN_STMT
  if (ResultBlockLength_60 > i_89)
    goto <bb 45>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 47> [local count: 4851969]:
  # DEBUG BEGIN_STMT
  _110 = RetVal_88;
  # DEBUG EncodingBlock => NULL
  # DEBUG EncodingBlockLength => NULL
  # DEBUG ResultBlock => NULL
  # DEBUG ResultBlockLength => NULL
  # DEBUG SixDecodedBits => NULL
  # DEBUG j => NULL
  # DEBUG i => NULL
  # DEBUG RetVal => NULL
  # DEBUG DecodedBytes => NULL
  RetVal_63 = _110;
  # DEBUG RetVal => RetVal_63
  # DEBUG BEGIN_STMT
  # DEBUG EncodingPosition => _18
  # DEBUG BEGIN_STMT
  # DEBUG ResultPosition => _21

  <bb 48> [local count: 49840462]:
  # RetVal_16 = PHI <1(28), RetVal_63(47), 1(29), 1(30)>
  # EncodingPosition_15 = PHI <EncodingPosition_30(28), _18(47), EncodingPosition_30(29), EncodingPosition_30(30)>
  # ResultPosition_14 = PHI <ResultPosition_31(28), _21(47), ResultPosition_31(29), ResultPosition_31(30)>
  # EncodingBlockRealLength_13 = PHI <EncodingBlockRealLength_45(28), EncodingBlockRealLength_45(47), EncodingBlockRealLength_45(29), EncodingBlockRealLength_45(30)>
  # TotalPaddingChars_10 = PHI <TotalPaddingChars_47(28), TotalPaddingChars_47(47), TotalPaddingChars_47(29), TotalPaddingChars_47(30)>

  <bb 49> [local count: 55810826]:
  # RetVal_26 = PHI <RetVal_16(48), 0(18)>
  # EncodingPosition_30 = PHI <EncodingPosition_15(48), 0(18)>
  # ResultPosition_31 = PHI <ResultPosition_14(48), 0(18)>
  # EncodingBlockRealLength_35 = PHI <EncodingBlockRealLength_13(48), 0(18)>
  # TotalPaddingChars_38 = PHI <TotalPaddingChars_10(48), 0(18)>
  # DEBUG TotalPaddingChars => TotalPaddingChars_38
  # DEBUG ResultBlockLength => NULL
  # DEBUG EncodingBlockRealLength => EncodingBlockRealLength_35
  # DEBUG ResultPosition => ResultPosition_31
  # DEBUG EncodingPosition => EncodingPosition_30
  # DEBUG RetVal => RetVal_26
  # DEBUG BEGIN_STMT
  if (EncodingLength_19 > EncodingPosition_30)
    goto <bb 50>; [94.50%]
  else
    goto <bb 51>; [5.50%]

  <bb 50> [local count: 52741231]:
  if (RetVal_26 == 0)
    goto <bb 26>; [94.50%]
  else
    goto <bb 51>; [5.50%]

  <bb 51> [local count: 5970363]:
  # RetVal_64 = PHI <RetVal_26(49), RetVal_26(50)>
  # ResultPosition_65 = PHI <ResultPosition_31(49), ResultPosition_31(50)>
  # EncodingBlockRealLength_46 = PHI <EncodingBlockRealLength_35(49), EncodingBlockRealLength_35(50)>
  # DEBUG BEGIN_STMT
  if (RetVal_64 == 0)
    goto <bb 52>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 52> [local count: 2985182]:
  if (PaddingCharsAtEnd_67 != 0)
    goto <bb 53>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 53> [local count: 1492591]:
  _24 = EncodingBlockRealLength_46 + PaddingCharsAtEnd_67;
  if (_24 != 4)
    goto <bb 55>; [66.00%]
  else
    goto <bb 54>; [34.00%]

  <bb 54> [local count: 507481]:
  if (PaddingCharsAtEnd_67 > 2)
    goto <bb 55>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 55> [local count: 1238850]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1

  <bb 56> [local count: 5970363]:
  # RetVal_27 = PHI <RetVal_64(51), 0(52), 0(54), 1(55)>
  # DEBUG RetVal => RetVal_27
  # DEBUG BEGIN_STMT
  *ResultLengthPtr_55(D) = ResultPosition_65;
  # DEBUG BEGIN_STMT
  return RetVal_27;

}


