__attribute__((target ("general-regs-only")))
OS_KernGetStackInfo (os_taskorisr_t toi, struct os_stackinfo_t * out)
{
  os_isrid_t iid;
  os_paramtype_t p[3];
  os_boolean_t ok;
  os_result_t r;
  const struct os_isr_t * is;
  const struct os_task_t * ts;
  os_taskid_t tid;
  struct os_kerneldata_t * const kernel_data;
  os_result_t D.7479;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ts = 0B;
  # DEBUG BEGIN_STMT
  is = 0B;
  # DEBUG BEGIN_STMT
  r = 0;
  # DEBUG BEGIN_STMT
  ok = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) toi;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  out.0_2 = (unsigned int) out;
  p[1] = out.0_2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = OS_CanWrite (out, 28);
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetStackInfo, 6, &p);
  goto <bb 25>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (toi == 65535)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = OS_kernelData.inFunction;
  if (_4 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ts = OS_kernelData.taskCurrent;
  # DEBUG BEGIN_STMT
  ok = 1;
  goto <bb 25>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.isrCurrent;
  if (_5 != 4095)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.1_6 = OS_isrTableBase;
  _7 = OS_kernelData.isrCurrent;
  _8 = (unsigned int) _7;
  _9 = _8 * 68;
  is = OS_isrTableBase.1_6 + _9;
  # DEBUG BEGIN_STMT
  ok = 1;
  goto <bb 25>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetStackInfo, 12, &p);
  goto <bb 25>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (toi <= 255)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  tid = (os_taskid_t) toi;
  # DEBUG BEGIN_STMT
  if (tid == 255)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _10 = OS_kernelData.taskCurrent;
  if (_10 == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  r = 5;
  goto <bb 25>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ts = OS_kernelData.taskCurrent;
  # DEBUG BEGIN_STMT
  ok = 1;
  goto <bb 25>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  OS_nTasks.2_11 = OS_nTasks;
  if (tid < OS_nTasks.2_11)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_taskTableBase.3_12 = OS_taskTableBase;
  _13 = (unsigned int) tid;
  _14 = _13 * 76;
  ts = OS_taskTableBase.3_12 + _14;
  # DEBUG BEGIN_STMT
  ok = 1;
  goto <bb 25>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetStackInfo, 2, &p);
  goto <bb 25>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  iid = toi + 65280;
  # DEBUG BEGIN_STMT
  if (iid == 4095)
    goto <bb 19>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _15 = OS_kernelData.isrCurrent;
  if (_15 != 4095)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.4_16 = OS_isrTableBase;
  _17 = OS_kernelData.isrCurrent;
  _18 = (unsigned int) _17;
  _19 = _18 * 68;
  is = OS_isrTableBase.4_16 + _19;

  <bb 21> :
  # DEBUG BEGIN_STMT
  ok = 1;
  goto <bb 25>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  OS_nInterrupts.5_20 = OS_nInterrupts;
  if (iid < OS_nInterrupts.5_20)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.6_21 = OS_isrTableBase;
  _22 = (unsigned int) iid;
  _23 = _22 * 68;
  is = OS_isrTableBase.6_21 + _23;
  # DEBUG BEGIN_STMT
  ok = 1;
  goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetStackInfo, 47, &p);

  <bb 25> :
  # DEBUG BEGIN_STMT
  if (ok != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  OS_FillStackInfo (&OS_kernelData, ts, is, out);
  # DEBUG BEGIN_STMT
  OS_ComputeStackStatus (out);

  <bb 27> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7479 = r;
  p = {CLOBBER};
  return D.7479;

}


__attribute__((target ("general-regs-only")))
OS_FillStackInfo (struct os_kerneldata_t * kernel_data, const struct os_task_t * ts, const struct os_isr_t * is, struct os_stackinfo_t * out)
{
  register os_stackelement_t * OS_getSpResult;
  register os_stackelement_t * OS_getSpResult;
  struct os_taskdynamic_t * td;
  os_stackelement_t * D.7428;
  os_stackelement_t * D.7426;
  unsigned int iftmp.7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ts != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  td = ts->dynamic;
  # DEBUG BEGIN_STMT
  _1 = ts->stackBase;
  _2 = (unsigned int) _1;
  out->stackBase = _2;
  # DEBUG BEGIN_STMT
  _3 = ts->stackLen;
  out->stackLen = _3;
  # DEBUG BEGIN_STMT
  _4 = td->state;
  if (_4 != 5)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = ts->dynamic;
  _6 = _5->state;
  if (_6 == 6)
    goto <bb 7>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _7 = ts->dynamic;
  _8 = _7->state;
  if (_8 == 3)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _9 = ts->dynamic;
  _10 = _9->state;
  if (_10 == 4)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _11 = ts->dynamic;
  _12 = _11->context.sp;
  iftmp.7 = (unsigned int) _12;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.7 = 0;

  <bb 9> :
  out->stackPointer = iftmp.7;

  <bb 10> :
  # DEBUG BEGIN_STMT
  out->isrStackBase = 0;
  # DEBUG BEGIN_STMT
  out->isrStackLen = 0;
  goto <bb 17>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (is == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  out->stackBase = 0;
  # DEBUG BEGIN_STMT
  _13 = kernel_data->iStackLen;
  out->isrStackLen = _13;
  # DEBUG BEGIN_STMT
  _14 = kernel_data->iStackBase;
  _15 = (unsigned int) _14;
  out->isrStackBase = _15;
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  out->stackBase = 0;
  # DEBUG BEGIN_STMT
  _16 = is->stackLen;
  out->isrStackLen = _16;
  # DEBUG BEGIN_STMT
  _17 = is->dynamic;
  _18 = _17->c.stackLimit;
  _19 = (unsigned int) _18;
  _20 = is->stackLen;
  _21 = _19 - _20;
  out->isrStackBase = _21;

  <bb 14> :
  # DEBUG BEGIN_STMT
  _22 = out->stackBase;
  if (_22 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _23 = kernel_data->iStackBase;
  _24 = (unsigned int) _23;
  out->stackBase = _24;
  # DEBUG BEGIN_STMT
  _25 = kernel_data->iStackLen;
  out->stackLen = _25;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mov	%0, r13" : "result" "=r" OS_getSpResult);
  # DEBUG BEGIN_STMT
  D.7426 = OS_getSpResult;
  _26 = (unsigned int) D.7426;
  out->stackPointer = _26;
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _27 = is->stackLen;
  out->stackLen = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mov	%0, r13" : "result" "=r" OS_getSpResult);
  # DEBUG BEGIN_STMT
  D.7428 = OS_getSpResult;
  _28 = (unsigned int) D.7428;
  out->stackPointer = _28;

  <bb 17> :
  return;

}


__attribute__((target ("general-regs-only")))
OS_ComputeStackStatus (struct os_stackinfo_t * out)
{
  os_stackelement_t * sp;
  os_size_t clean;

  <bb 2> :
  # DEBUG BEGIN_STMT
  clean = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = out->stackBase;
  sp = (os_stackelement_t *) _1;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  clean = clean + 4;
  # DEBUG BEGIN_STMT
  sp = sp + 4;

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = *sp;
  if (_2 == 3958107115)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = out->stackLen;
  if (clean < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = out->stackPointer;
  if (_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _5 = out->stackPointer;
  _6 = out->stackBase;
  if (_5 < _6)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  out->stackStatus = 1;
  goto <bb 15>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _7 = out->stackPointer;
  if (_7 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _8 = out->stackPointer;
  _9 = out->stackBase;
  _10 = out->stackLen;
  _11 = _9 + _10;
  if (_8 > _11)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  out->stackStatus = -1;
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (clean == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  out->stackStatus = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  out->stackStatus = 0;

  <bb 15> :
  # DEBUG BEGIN_STMT
  out->stackClean = clean;
  return;

}


