NvM_CopyBlockRom2Ram (uint8 * CurrentRamAddress)
{
  const uint8 * CurrentRomAddress;
  uint8 NvMDatasetBlockIndex;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvMDatasetBlockIndex = 0;
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.11_1 = NvM_CurrentBlockDescriptorPtr;
  CurrentRomAddress = NvM_CurrentBlockDescriptorPtr.11_1->romBlockDataAddress;
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.12_2 = NvM_CurrentBlockDescriptorPtr;
  _3 = NvM_CurrentBlockDescriptorPtr.12_2->blockDesc;
  _4 = _3 >> 7;
  _5 = (unsigned char) _4;
  _6 = (unsigned int) _5;
  _7 = _6 & 3;
  if (_7 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.13_8 = NvM_GlobalBlockNumber;
  _9 = (int) NvM_GlobalBlockNumber.13_8;
  NvMDatasetBlockIndex = NvM_AdminBlockTable[_9].NvMDatasetBlockIndex;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.14_10 = NvM_CurrentBlockDescriptorPtr;
  NvMDatasetBlockIndex = NvM_CurrentBlockDescriptorPtr.14_10->nvBlockNum;

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.15_11 = NvM_CurrentBlockDescriptorPtr;
  _12 = NvM_CurrentBlockDescriptorPtr.15_11->nvBlockLength;
  _13 = (int) _12;
  _14 = (int) NvMDatasetBlockIndex;
  NvM_CurrentBlockDescriptorPtr.16_15 = NvM_CurrentBlockDescriptorPtr;
  _16 = NvM_CurrentBlockDescriptorPtr.16_15->nvBlockNum;
  _17 = (int) _16;
  _18 = _14 - _17;
  _19 = _13 * _18;
  _20 = (sizetype) _19;
  CurrentRomAddress = CurrentRomAddress + _20;
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.17_21 = NvM_CurrentBlockDescriptorPtr;
  _22 = NvM_CurrentBlockDescriptorPtr.17_21->nvBlockLength;
  _23 = (long unsigned int) _22;
  TS_MemCpy32 (CurrentRamAddress, CurrentRomAddress, _23);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 0;
  return;

}


NvM_RestoreBlockDefaults_AscSt4 ()
{
  Std_ReturnType ReturnVal;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ReturnVal = 0;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.25_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.25_1;
  _3 = _2 & 4096;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockInvalid ();
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockUnchanged ();
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.26_4 = NvM_CurrentBlockDescriptorPtr;
  _5 = NvM_CurrentBlockDescriptorPtr.26_4->readRamFromNvCallback;
  ReturnVal = NvM_MirrorCopy (_5, 0B, &NvM_InternalBuffer);

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ReturnVal == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.27_6 = NvM_GlobalWorkingStatus;
  _7 = NvM_GlobalWorkingStatus.27_6 | 16;
  NvM_GlobalWorkingStatus = _7;
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockValid ();
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockChanged ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 8;
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();

  <bb 6> :
  return;

}


NvM_RestoreBlockDefaults_AscSt3 ()
{
  uint8 * DataAddress;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.19_1 = NvM_GlobalCallLevel;
  _2 = (int) NvM_GlobalCallLevel.19_1;
  NvM_CurrentFunctionPtr[_2] = NvM_RestoreBlockDefaults_AscSt4;
  # DEBUG BEGIN_STMT
  _3 = NvM_GetStoredRamCRCAddress ();
  NvM_CurrentBlockDescriptorPtr.20_4 = NvM_CurrentBlockDescriptorPtr;
  _5 = NvM_CurrentBlockDescriptorPtr.20_4->blockDesc;
  NvM_CopyCrc (_3, &NvM_CalcCrc_CalcBuffer, _5);
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.21_6 = NvM_CurrentBlockDescriptorPtr;
  _7 = NvM_CurrentBlockDescriptorPtr.21_6->blockDesc;
  _8 = _7 & 1048576;
  if (_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  NvM_GlobalWorkingStatus.22_9 = NvM_GlobalWorkingStatus;
  _10 = (unsigned int) NvM_GlobalWorkingStatus.22_9;
  _11 = _10 & 512;
  if (_11 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  DataAddress = NvM_GetUserRamBlockAddress ();
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.23_12 = NvM_CurrentBlockDescriptorPtr;
  _13 = NvM_CurrentBlockDescriptorPtr.23_12->nvBlockLength;
  _14 = (sizetype) _13;
  DataAddress = DataAddress + _14;
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.24_15 = NvM_CurrentBlockDescriptorPtr;
  _16 = NvM_CurrentBlockDescriptorPtr.24_15->blockDesc;
  NvM_CopyCrc (DataAddress, &NvM_CalcCrc_CalcBuffer, _16);

  <bb 5> :
  return;

}


NvM_RestoreBlockDefaults_AscSt2 ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.18_1 = NvM_GlobalCallLevel;
  _2 = (int) NvM_GlobalCallLevel.18_1;
  NvM_CurrentFunctionPtr[_2] = NvM_RestoreBlockDefaults_AscSt3;
  # DEBUG BEGIN_STMT
  _3 = NvM_GetUserRamBlockAddress ();
  NvM_CalculateCrc (_3);
  return;

}


NvM_RestoreBlockDefaults_AscSt1 ()
{
  uint8 * CurrentRamAddress;
  boolean DefaultsConfigured;

  <bb 2> :
  # DEBUG BEGIN_STMT
  DefaultsConfigured = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CurrentRamAddress = NvM_GetUserRamBlockAddress ();
  # DEBUG BEGIN_STMT
  if (CurrentRamAddress != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.7_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.7_1->romBlockDataAddress;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_CopyBlockRom2Ram (CurrentRamAddress);
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DefaultsConfigured = 0;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (DefaultsConfigured != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.8_3 = NvM_CurrentBlockDescriptorPtr;
  _4 = NvM_CurrentBlockDescriptorPtr.8_3->blockDesc;
  _5 = _4 & 8;
  if (_5 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.9_6 = NvM_GlobalCallLevel;
  _7 = (int) NvM_GlobalCallLevel.9_6;
  NvM_CurrentFunctionPtr[_7] = NvM_RestoreBlockDefaults_AscSt2;
  goto <bb 11>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.10_8 = NvM_GlobalCallLevel;
  _9 = (int) NvM_GlobalCallLevel.10_8;
  NvM_CurrentFunctionPtr[_9] = NvM_RestoreBlockDefaults_AscSt4;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 3;
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();

  <bb 11> :
  # DEBUG BEGIN_STMT
  return;

}


NvM_RestoreBlockDefaults_AscSt0 ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_MirrorRetryCount = 0;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.6_1 = NvM_GlobalWorkingStatus;
  _2 = NvM_GlobalWorkingStatus.6_1 & 65519;
  NvM_GlobalWorkingStatus = _2;
  # DEBUG BEGIN_STMT
  NvM_RestoreBlockDefaults_AscSt1 ();
  return;

}


NvM_RestorePRAMBlockDefaults_Asc ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId = 24;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.3_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.3_1;
  _3 = _2 & 4096;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockInvalid ();
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockUnchanged ();

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.4_4 = NvM_GlobalCallLevel;
  _5 = (int) NvM_GlobalCallLevel.4_4;
  NvM_CurrentFunctionPtr[_5] = NvM_RestoreBlockDefaults_AscSt0;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.5_6 = NvM_GlobalBlockNumber;
  _7 = (int) NvM_GlobalBlockNumber.5_6;
  _8 = NvM_AdminBlockTable[_7].NvMExtendedStatus;
  _9 = (unsigned int) _8;
  _10 = _9 & 2;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_RemoveElement ();

  <bb 6> :
  return;

}


NvM_RestoreBlockDefaults_Asc ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId = 8;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.0_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.0_1;
  _3 = _2 & 4096;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockInvalid ();
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockUnchanged ();

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.1_4 = NvM_GlobalCallLevel;
  _5 = (int) NvM_GlobalCallLevel.1_4;
  NvM_CurrentFunctionPtr[_5] = NvM_RestoreBlockDefaults_AscSt0;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.2_6 = NvM_GlobalBlockNumber;
  _7 = (int) NvM_GlobalBlockNumber.2_6;
  _8 = NvM_AdminBlockTable[_7].NvMExtendedStatus;
  _9 = (unsigned int) _8;
  _10 = _9 & 2;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_RemoveElement ();

  <bb 6> :
  return;

}


NvM_ASR42_RestorePRAMBlockDefaults (NvM_ASR42_BlockIdType BlockId)
{
  Std_ReturnType Result;
  uint16 BlockIndex;
  Std_ReturnType D.7883;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BlockIndex = NvM_CheckCondRestorePRAMBlockDefaults (BlockId);
  # DEBUG BEGIN_STMT
  if (BlockIndex != 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Result = NvM_InsertRestoreBlockJob (1, BlockId, BlockIndex, 0B);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7883 = Result;
  return D.7883;

}


NvM_ASR40_RestoreBlockDefaults (NvM_ASR40_BlockIdType BlockId, void * NvM_DestPtr)
{
  Std_ReturnType Result;
  uint16 BlockIndex;
  Std_ReturnType D.7879;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BlockIndex = NvM_CheckCondRestoreBlockDefaults (BlockId, NvM_DestPtr);
  # DEBUG BEGIN_STMT
  if (BlockIndex != 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Result = NvM_InsertRestoreBlockJob (0, BlockId, BlockIndex, NvM_DestPtr);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7879 = Result;
  return D.7879;

}


