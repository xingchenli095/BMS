Trivially needed symbols: OS_permittedContextAutosar


Initial Symbol table:

OS_permittedContextAutosar/0 (OS_permittedContextAutosar) @06c1a480
  Type: variable definition analyzed
  Visibility: public
  Aux: @017cfe80
  References: 
  Referring: 
  Availability: not-ready
  Varpool flags: initialized read-only const-value-known

Removing unused symbols:

Reclaimed Symbol table:

OS_permittedContextAutosar/0 (OS_permittedContextAutosar) @06c1a480
  Type: variable definition analyzed
  Visibility: public
  References: 
  Referring: 
  Availability: not-ready
  Varpool flags: initialized read-only const-value-known


Initial Symbol table:

OS_permittedContextAutosar/0 (OS_permittedContextAutosar) @06c1a480
  Type: variable definition analyzed
  Visibility: public
  References: 
  Referring: 
  Availability: not-ready
  Varpool flags: initialized read-only const-value-known

Removing unused symbols:

Reclaimed Symbol table:

OS_permittedContextAutosar/0 (OS_permittedContextAutosar) @06c1a480
  Type: variable definition analyzed
  Visibility: public
  References: 
  Referring: 
  Availability: not-ready
  Varpool flags: initialized read-only const-value-known

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Optimized Symbol table:

OS_permittedContextAutosar/0 (OS_permittedContextAutosar) @06c1a480
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Materializing clones
Materialization Call site updates done.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Trivially needed variables: OS_permittedContextAutosar
Removing variables:

Final Symbol table:

OS_permittedContextAutosar/0 (OS_permittedContextAutosar) @06c1a480
  Type: variable definition analyzed
  Visibility: externally_visible asm_written public
  Aux: @00000001
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
