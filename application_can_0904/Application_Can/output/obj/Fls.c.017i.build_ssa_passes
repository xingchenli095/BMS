Fls_LLDClrJobResult ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Fls_eLLDJobResult = 0;
  # DEBUG BEGIN_STMT
  Fls_eLLDJob = 0;
  return;

}


Fls_LLDGetJobResult ()
{
  MemIf_JobResultType D.9161;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.9161 = Fls_eLLDJobResult;
  return D.9161;

}


Fls_MainFunction ()
{
  MemIf_JobResultType WorkResult;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.42_1 = Fls_pConfigPtr;
  if (Fls_pConfigPtr.42_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fls_eJobResult.43_2 = Fls_eJobResult;
  if (Fls_eJobResult.43_2 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  WorkResult = 0;
  # DEBUG BEGIN_STMT
  Fls_u8JobStart.44_3 = Fls_u8JobStart;
  if (Fls_u8JobStart.44_3 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fls_u8JobStart = 0;
  # DEBUG BEGIN_STMT
  Fls_LLDClrJobResult ();
  # DEBUG BEGIN_STMT
  Fls_IPW_AbortSuspended ();

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fls_eLLDJob.45_4 = Fls_eLLDJob;
  if (Fls_eLLDJob.45_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fls_IPW_LLDMainFunction ();

  <bb 8> :
  # DEBUG BEGIN_STMT
  WorkResult = Fls_LLDGetJobResult ();
  # DEBUG BEGIN_STMT
  if (WorkResult == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  WorkResult = Fls_ProcessRequestedJobs ();

  <bb 10> :
  # DEBUG BEGIN_STMT
  Fls_MainFunction_CheckJobResult (WorkResult);

  <bb 11> :
  # DEBUG BEGIN_STMT
  return;

}


Fls_MainFunction_CheckJobResult (MemIf_JobResultType WorkResult)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Fls_eJobResult = WorkResult;
  # DEBUG BEGIN_STMT
  if (WorkResult == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.98_1 = Fls_pConfigPtr;
  _2 = Fls_pConfigPtr.98_1->jobEndNotificationPtr;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.99_3 = Fls_pConfigPtr;
  _4 = Fls_pConfigPtr.99_3->jobEndNotificationPtr;
  _4 ();
  goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (WorkResult == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (WorkResult == 3)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (WorkResult == 4)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.100_5 = Fls_pConfigPtr;
  _6 = Fls_pConfigPtr.100_5->jobErrorNotificationPtr;
  if (_6 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.101_7 = Fls_pConfigPtr;
  _8 = Fls_pConfigPtr.101_7->jobErrorNotificationPtr;
  _8 ();

  <bb 10> :
  return;

}


Fls_GetVersionInfo (struct Std_VersionInfoType * VersionInfoPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  if (VersionInfoPtr == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 16, 10);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  VersionInfoPtr->moduleID = 92;
  # DEBUG BEGIN_STMT
  VersionInfoPtr->vendorID = 43;
  # DEBUG BEGIN_STMT
  VersionInfoPtr->sw_major_version = 2;
  # DEBUG BEGIN_STMT
  VersionInfoPtr->sw_minor_version = 0;
  # DEBUG BEGIN_STMT
  VersionInfoPtr->sw_patch_version = 1;

  <bb 5> :
  return;

}


Fls_SetMode (MemIf_ModeType Mode)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.36_1 = Fls_pConfigPtr;
  if (Fls_pConfigPtr.36_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 9, 5);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fls_eJobResult.37_2 = Fls_eJobResult;
  if (Fls_eJobResult.37_2 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 9, 6);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _3 = (int) Mode;
  switch (_3) <default: <L10> [INV], case 0: <L5> [INV], case 1: <L4> [INV]>

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.38_4 = Fls_pConfigPtr;
  _5 = Fls_pConfigPtr.38_4->u32MaxReadFastMode;
  Fls_u32MaxRead = _5;
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.39_6 = Fls_pConfigPtr;
  _7 = Fls_pConfigPtr.39_6->u32MaxWriteFastMode;
  Fls_u32MaxWrite = _7;
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.40_8 = Fls_pConfigPtr;
  _9 = Fls_pConfigPtr.40_8->u32MaxReadNormalMode;
  Fls_u32MaxRead = _9;
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.41_10 = Fls_pConfigPtr;
  _11 = Fls_pConfigPtr.41_10->u32MaxWriteNormalMode;
  Fls_u32MaxWrite = _11;
  # DEBUG BEGIN_STMT

  <bb 9> :
<L10>:
  return;

}


Fls_Compare (Fls_AddressType SourceAddress, const uint8 * TargetAddressPtr, Fls_LengthType Length)
{
  Fls_AddressType TmpJobAddrEnd;
  Fls_SectorIndexType TmpJobSectorIt;
  Std_ReturnType RetVal;
  Std_ReturnType D.9277;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RetVal = Fls_CheckInputParamReadCompareJob (SourceAddress, TargetAddressPtr, Length, 8);
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  TmpJobSectorIt = Fls_GetSectorIndexByAddr (SourceAddress);
  # DEBUG BEGIN_STMT
  _1 = SourceAddress + Length;
  TmpJobAddrEnd = _1 + 4294967295;
  # DEBUG BEGIN_STMT
  SchM_Enter_Fls_FLS_EXCLUSIVE_AREA_13 ();
  # DEBUG BEGIN_STMT
  Fls_eJobResult.35_2 = Fls_eJobResult;
  if (Fls_eJobResult.35_2 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 8, 6);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fls_u32JobSectorIt = TmpJobSectorIt;
  # DEBUG BEGIN_STMT
  _3 = Fls_GetSectorIndexByAddr (TmpJobAddrEnd);
  Fls_u32JobSectorEnd = _3;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt = SourceAddress;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrEnd = TmpJobAddrEnd;
  # DEBUG BEGIN_STMT
  Fls_pJobDataSrcPtr = TargetAddressPtr;
  # DEBUG BEGIN_STMT
  Fls_eJob = 3;
  # DEBUG BEGIN_STMT
  Fls_u8JobStart = 1;
  # DEBUG BEGIN_STMT
  Fls_eJobResult = 2;

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Fls_FLS_EXCLUSIVE_AREA_13 ();

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.9277 = RetVal;
  return D.9277;

}


Fls_Read (Fls_AddressType SourceAddress, uint8 * TargetAddressPtr, Fls_LengthType Length)
{
  Fls_AddressType TmpJobAddrEnd;
  Fls_SectorIndexType TmpJobSectorIt;
  Std_ReturnType RetVal;
  Std_ReturnType D.9254;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  TmpJobSectorIt = 0;
  # DEBUG BEGIN_STMT
  TmpJobAddrEnd = 0;
  # DEBUG BEGIN_STMT
  RetVal = Fls_CheckInputParamReadCompareJob (SourceAddress, TargetAddressPtr, Length, 7);
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  TmpJobSectorIt = Fls_GetSectorIndexByAddr (SourceAddress);
  # DEBUG BEGIN_STMT
  _1 = SourceAddress + Length;
  TmpJobAddrEnd = _1 + 4294967295;
  # DEBUG BEGIN_STMT
  SchM_Enter_Fls_FLS_EXCLUSIVE_AREA_12 ();
  # DEBUG BEGIN_STMT
  Fls_eJobResult.29_2 = Fls_eJobResult;
  if (Fls_eJobResult.29_2 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 7, 6);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fls_u32JobSectorIt = TmpJobSectorIt;
  # DEBUG BEGIN_STMT
  _3 = Fls_GetSectorIndexByAddr (TmpJobAddrEnd);
  Fls_u32JobSectorEnd = _3;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt = SourceAddress;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrEnd = TmpJobAddrEnd;
  # DEBUG BEGIN_STMT
  Fls_pJobDataDestPtr = TargetAddressPtr;
  # DEBUG BEGIN_STMT
  Fls_eJob = 2;
  # DEBUG BEGIN_STMT
  Fls_u8JobStart = 1;
  # DEBUG BEGIN_STMT
  Fls_eJobResult = 2;

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Fls_FLS_EXCLUSIVE_AREA_12 ();

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.9254 = RetVal;
  return D.9254;

}


Fls_GetJobResult ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9247;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.28_1 = Fls_pConfigPtr;
  if (Fls_pConfigPtr.28_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 5, 5);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = Fls_eJobResult;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.9247 = RetVal;
  return D.9247;

}


Fls_GetStatus ()
{
  MemIf_StatusType RetVal;
  MemIf_StatusType D.9242;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.26_1 = Fls_pConfigPtr;
  if (Fls_pConfigPtr.26_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fls_eJobResult.27_2 = Fls_eJobResult;
  if (Fls_eJobResult.27_2 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.9242 = RetVal;
  return D.9242;

}


Fls_Write (Fls_AddressType TargetAddress, const uint8 * SourceAddressPtr, Fls_LengthType Length)
{
  Fls_AddressType TmpJobAddrEnd;
  Fls_SectorIndexType TmpJobSectorIt;
  Std_ReturnType RetVal;
  Std_ReturnType D.9216;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.18_1 = Fls_pConfigPtr;
  if (Fls_pConfigPtr.18_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 2, 5);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = Fls_IsAddrPageStartAligned (TargetAddress);
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 2, 2);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Length == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _3 = TargetAddress + Length;
  _4 = Fls_IsAddrPageEndAligned (_3);
  if (_4 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 2, 3);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 14>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (SourceAddressPtr == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 2, 4);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 14>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  TmpJobSectorIt = Fls_GetSectorIndexByAddr (TargetAddress);
  # DEBUG BEGIN_STMT
  _5 = TargetAddress + Length;
  TmpJobAddrEnd = _5 + 4294967295;
  # DEBUG BEGIN_STMT
  SchM_Enter_Fls_FLS_EXCLUSIVE_AREA_11 ();
  # DEBUG BEGIN_STMT
  Fls_eJobResult.19_6 = Fls_eJobResult;
  if (Fls_eJobResult.19_6 == 2)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 2, 6);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  SchM_Exit_Fls_FLS_EXCLUSIVE_AREA_11 ();
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Fls_u32JobSectorIt = TmpJobSectorIt;
  # DEBUG BEGIN_STMT
  _7 = Fls_GetSectorIndexByAddr (TmpJobAddrEnd);
  Fls_u32JobSectorEnd = _7;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrEnd = TmpJobAddrEnd;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt = TargetAddress;
  # DEBUG BEGIN_STMT
  Fls_pJobDataSrcPtr = SourceAddressPtr;
  # DEBUG BEGIN_STMT
  Fls_eJob = 1;
  # DEBUG BEGIN_STMT
  Fls_u8JobStart = 1;
  # DEBUG BEGIN_STMT
  Fls_eJobResult = 2;
  # DEBUG BEGIN_STMT
  SchM_Exit_Fls_FLS_EXCLUSIVE_AREA_11 ();

  <bb 14> :
  # DEBUG BEGIN_STMT
  D.9216 = RetVal;
  return D.9216;

}


Fls_Erase (Fls_AddressType TargetAddress, Fls_LengthType Length)
{
  Fls_SectorIndexType TmpJobSectorEnd;
  Fls_SectorIndexType TmpJobSectorIt;
  Std_ReturnType RetVal;
  Std_ReturnType D.9176;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.6_1 = Fls_pConfigPtr;
  if (Fls_pConfigPtr.6_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 1, 5);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = Fls_IsAddrSectorStartAligned (TargetAddress);
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 1, 2);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Length == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _3 = TargetAddress + Length;
  _4 = _3 + 4294967295;
  _5 = Fls_IsAddrSectorEndAligned (_4);
  if (_5 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 1, 3);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 12>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  TmpJobSectorIt = Fls_GetSectorIndexByAddr (TargetAddress);
  # DEBUG BEGIN_STMT
  _6 = TargetAddress + Length;
  _7 = _6 + 4294967295;
  TmpJobSectorEnd = Fls_GetSectorIndexByAddr (_7);
  # DEBUG BEGIN_STMT
  SchM_Enter_Fls_FLS_EXCLUSIVE_AREA_10 ();
  # DEBUG BEGIN_STMT
  Fls_eJobResult.7_8 = Fls_eJobResult;
  if (Fls_eJobResult.7_8 == 2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 1, 6);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  SchM_Exit_Fls_FLS_EXCLUSIVE_AREA_10 ();
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Fls_u32JobSectorIt = TmpJobSectorIt;
  # DEBUG BEGIN_STMT
  Fls_u32JobSectorEnd = TmpJobSectorEnd;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt = TargetAddress;
  # DEBUG BEGIN_STMT
  _9 = TargetAddress + Length;
  _10 = _9 + 4294967295;
  Fls_u32JobAddrEnd = _10;
  # DEBUG BEGIN_STMT
  Fls_eJob = 0;
  # DEBUG BEGIN_STMT
  Fls_u8JobStart = 1;
  # DEBUG BEGIN_STMT
  Fls_eJobResult = 2;
  # DEBUG BEGIN_STMT
  SchM_Exit_Fls_FLS_EXCLUSIVE_AREA_10 ();

  <bb 12> :
  # DEBUG BEGIN_STMT
  D.9176 = RetVal;
  return D.9176;

}


Fls_Init (const struct Fls_ConfigType * ConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  if (ConfigPtr == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 0, 1);
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fls_eJobResult.0_1 = Fls_eJobResult;
  if (Fls_eJobResult.0_1 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, 0, 6);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr = ConfigPtr;
  # DEBUG BEGIN_STMT
  _2 = Fls_CheckCfgCRC ();
  if (_2 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.1_3 = Fls_pConfigPtr;
  _4 = Fls_pConfigPtr.1_3->eDefaultMode;
  if (_4 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.2_5 = Fls_pConfigPtr;
  _6 = Fls_pConfigPtr.2_5->u32MaxReadNormalMode;
  Fls_u32MaxRead = _6;
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.3_7 = Fls_pConfigPtr;
  _8 = Fls_pConfigPtr.3_7->u32MaxWriteNormalMode;
  Fls_u32MaxWrite = _8;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.4_9 = Fls_pConfigPtr;
  _10 = Fls_pConfigPtr.4_9->u32MaxReadFastMode;
  Fls_u32MaxRead = _10;
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.5_11 = Fls_pConfigPtr;
  _12 = Fls_pConfigPtr.5_11->u32MaxWriteFastMode;
  Fls_u32MaxWrite = _12;

  <bb 10> :
  # DEBUG BEGIN_STMT
  Fls_IPW_Init ();
  # DEBUG BEGIN_STMT
  _13 = Fls_LLDGetJobResult ();
  if (_13 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Fls_eJobResult = 1;
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr = 0B;
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Fls_eJobResult = 0;

  <bb 13> :
  return;

}


Fls_ProcessRequestedJobs ()
{
  MemIf_JobResultType WorkResult;
  MemIf_JobResultType D.9306;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_eJob.46_1 = Fls_eJob;
  if (Fls_eJob.46_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  WorkResult = Fls_DoJobErase ();
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fls_eJob.47_2 = Fls_eJob;
  if (Fls_eJob.47_2 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fls_u32MaxWrite.48_3 = Fls_u32MaxWrite;
  WorkResult = Fls_DoJobDataTransfer (Fls_u32MaxWrite.48_3);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fls_u32MaxRead.49_4 = Fls_u32MaxRead;
  WorkResult = Fls_DoJobDataTransfer (Fls_u32MaxRead.49_4);

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.9306 = WorkResult;
  return D.9306;

}


Fls_CheckCfgCRC ()
{
  boolean RetVal;
  boolean D.9159;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  D.9159 = RetVal;
  return D.9159;

}


Fls_DoJobDataTransfer (const Fls_LengthType MaxTransfer)
{
  Fls_AddressType u32SectorTransferLength;
  Fls_AddressType SectorTransferOffset;
  Fls_LLDReturnType TransferRetVal;
  Fls_AddressType u32MaxTransferAddrEnd;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9348;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.67_1 = Fls_u32JobAddrIt;
  Fls_u32JobAddrEnd.68_2 = Fls_u32JobAddrEnd;
  if (Fls_u32JobAddrIt.67_1 > Fls_u32JobAddrEnd.68_2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 17>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u32MaxTransferAddrEnd = Fls_CalcMaxTransferAddrEnd (MaxTransfer);

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SectorTransferOffset = Fls_CalcSectorTransferOffset ();
  # DEBUG BEGIN_STMT
  u32SectorTransferLength = Fls_CalcSectorTransferLength (u32MaxTransferAddrEnd);
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.69_3 = Fls_u32JobAddrIt;
  _4 = u32SectorTransferLength + Fls_u32JobAddrIt.69_3;
  Fls_u32JobAddrIt = _4;
  # DEBUG BEGIN_STMT
  TransferRetVal = Fls_ProcessJobDataTransfer (SectorTransferOffset, u32SectorTransferLength);
  # DEBUG BEGIN_STMT
  if (TransferRetVal == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.70_5 = Fls_pConfigPtr;
  _6 = Fls_pConfigPtr.70_5->paSectorEndAddr;
  Fls_u32JobSectorIt.71_7 = Fls_u32JobSectorIt;
  _8 = *_6[Fls_u32JobSectorIt.71_7];
  Fls_u32JobAddrIt.72_9 = Fls_u32JobAddrIt;
  if (_8 < Fls_u32JobAddrIt.72_9)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fls_u32JobSectorIt.73_10 = Fls_u32JobSectorIt;
  _11 = Fls_u32JobSectorIt.73_10 + 1;
  Fls_u32JobSectorIt = _11;

  <bb 8> :
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.74_12 = Fls_u32JobAddrIt;
  if (u32MaxTransferAddrEnd >= Fls_u32JobAddrIt.74_12)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  if (TransferRetVal == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (TransferRetVal == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 17>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (TransferRetVal == 2)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  RetVal = 4;
  goto <bb 17>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.75_13 = Fls_u32JobAddrIt;
  Fls_u32JobAddrEnd.76_14 = Fls_u32JobAddrEnd;
  if (Fls_u32JobAddrIt.75_13 > Fls_u32JobAddrEnd.76_14)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  if (TransferRetVal == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.9348 = RetVal;
  return D.9348;

}


Fls_ProcessJobDataTransfer (const Fls_AddressType SectorOffset, const Fls_AddressType Length)
{
  Fls_LLDReturnType TransferRetVal;
  Fls_LLDReturnType D.9370;

  <bb 2> :
  # DEBUG BEGIN_STMT
  TransferRetVal = 1;
  # DEBUG BEGIN_STMT
  Fls_eJob.89_1 = Fls_eJob;
  switch (Fls_eJob.89_1) <default: <L10> [INV], case 1: <L0> [INV], case 2: <L1> [INV], case 3: <L4> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  TransferRetVal = Fls_DoJobWrite (SectorOffset, Length);
  # DEBUG BEGIN_STMT
  Fls_pJobDataSrcPtr.90_2 = Fls_pJobDataSrcPtr;
  _3 = Fls_pJobDataSrcPtr.90_2 + Length;
  Fls_pJobDataSrcPtr = _3;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  Fls_pJobDataDestPtr.91_4 = Fls_pJobDataDestPtr;
  TransferRetVal = Fls_IPW_SectorRead (SectorOffset, Length, Fls_pJobDataDestPtr.91_4, 0B);
  # DEBUG BEGIN_STMT
  if (TransferRetVal == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportTransientFault (92, 0, 6, 3);

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fls_pJobDataDestPtr.92_5 = Fls_pJobDataDestPtr;
  _6 = Fls_pJobDataDestPtr.92_5 + Length;
  Fls_pJobDataDestPtr = _6;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  Fls_pJobDataSrcPtr.93_7 = Fls_pJobDataSrcPtr;
  TransferRetVal = Fls_IPW_SectorRead (SectorOffset, Length, 0B, Fls_pJobDataSrcPtr.93_7);
  # DEBUG BEGIN_STMT
  _8 = TransferRetVal + 4294967295;
  if (_8 <= 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportTransientFault (92, 0, 6, 4);

  <bb 9> :
  # DEBUG BEGIN_STMT
  Fls_pJobDataSrcPtr.94_9 = Fls_pJobDataSrcPtr;
  _10 = Fls_pJobDataSrcPtr.94_9 + Length;
  Fls_pJobDataSrcPtr = _10;
  # DEBUG BEGIN_STMT

  <bb 10> :
<L10>:
  # DEBUG BEGIN_STMT
  D.9370 = TransferRetVal;
  return D.9370;

}


Fls_DoJobWrite (const Fls_AddressType SectorOffset, const Fls_AddressType Length)
{
  boolean Asynch;
  Fls_LLDReturnType RetVal;
  Fls_LLDReturnType D.9382;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.95_1 = Fls_pConfigPtr;
  _2 = Fls_pConfigPtr.95_1->paSectorFlags;
  Fls_u32JobSectorIt.96_3 = Fls_u32JobSectorIt;
  _4 = *_2[Fls_u32JobSectorIt.96_3];
  _5 = (unsigned int) _4;
  _6 = _5 & 2;
  if (_6 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Asynch = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Asynch = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fls_pJobDataSrcPtr.97_7 = Fls_pJobDataSrcPtr;
  RetVal = Fls_IPW_SectorWrite (SectorOffset, Length, Fls_pJobDataSrcPtr.97_7, Asynch);
  # DEBUG BEGIN_STMT
  if (RetVal == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportTransientFault (92, 0, 6, 2);
  goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (RetVal == 2)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.9382 = RetVal;
  return D.9382;

}


Fls_CalcSectorTransferLength (const Fls_AddressType MaxTransferEndAddr)
{
  uint32 InterfaceSize;
  uint32 TransferSize;
  Fls_AddressType MaxTransferAddr;
  Fls_AddressType SectorEndAddr;
  Fls_AddressType D.9364;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  MaxTransferAddr = MaxTransferEndAddr;
  # DEBUG BEGIN_STMT
  TransferSize = 0;
  # DEBUG BEGIN_STMT
  InterfaceSize = 0;
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.79_1 = Fls_pConfigPtr;
  _2 = Fls_pConfigPtr.79_1->paSectorEndAddr;
  Fls_u32JobSectorIt.80_3 = Fls_u32JobSectorIt;
  SectorEndAddr = *_2[Fls_u32JobSectorIt.80_3];
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.81_4 = Fls_pConfigPtr;
  _5 = Fls_pConfigPtr.81_4->paHwCh;
  Fls_u32JobSectorIt.82_6 = Fls_u32JobSectorIt;
  _7 = *_5[Fls_u32JobSectorIt.82_6];
  if (_7 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  Fls_eJob.83_8 = Fls_eJob;
  if (Fls_eJob.83_8 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  InterfaceSize = 128;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.84_9 = Fls_u32JobAddrIt;
  _10 = MaxTransferAddr - Fls_u32JobAddrIt.84_9;
  TransferSize = _10 + 1;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.85_11 = Fls_u32JobAddrIt;
  _12 = Fls_u32JobAddrIt.85_11 % InterfaceSize;
  _13 = InterfaceSize - _12;
  if (TransferSize > _13)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.86_14 = Fls_u32JobAddrIt;
  _15 = Fls_u32JobAddrIt.86_14 % InterfaceSize;
  _16 = InterfaceSize - _15;
  Fls_u32JobAddrIt.87_17 = Fls_u32JobAddrIt;
  _18 = _16 + Fls_u32JobAddrIt.87_17;
  MaxTransferAddr = _18 + 4294967295;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (SectorEndAddr > MaxTransferAddr)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  SectorEndAddr = MaxTransferAddr;

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.88_19 = Fls_u32JobAddrIt;
  _20 = SectorEndAddr - Fls_u32JobAddrIt.88_19;
  D.9364 = _20 + 1;
  return D.9364;

}


Fls_CalcSectorTransferOffset ()
{
  Fls_AddressType SectorAddrStart;
  Fls_AddressType D.9327;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_u32JobSectorIt.65_1 = Fls_u32JobSectorIt;
  SectorAddrStart = Fls_GetSectorStartAddr (Fls_u32JobSectorIt.65_1);
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.66_2 = Fls_u32JobAddrIt;
  D.9327 = Fls_u32JobAddrIt.66_2 - SectorAddrStart;
  return D.9327;

}


Fls_CalcMaxTransferAddrEnd (const Fls_LengthType MaxTransfer)
{
  Fls_AddressType MaxTransferEndAddr;
  Fls_AddressType D.9353;

  <bb 2> :
  # DEBUG BEGIN_STMT
  MaxTransferEndAddr = Fls_u32JobAddrEnd;
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.77_1 = Fls_u32JobAddrIt;
  _2 = MaxTransfer + Fls_u32JobAddrIt.77_1;
  if (MaxTransferEndAddr >= _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.78_3 = Fls_u32JobAddrIt;
  _4 = MaxTransfer + Fls_u32JobAddrIt.78_3;
  MaxTransferEndAddr = _4 + 4294967295;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.9353 = MaxTransferEndAddr;
  return D.9353;

}


Fls_DoJobErase ()
{
  Fls_LLDReturnType LldRetVal;
  boolean Asynch;
  Fls_AddressType SectorTransferOffset;
  Fls_LengthType PhysicalSectorSize;
  uint32 DataStore;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9325;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.50_1 = Fls_u32JobAddrIt;
  Fls_u32JobAddrEnd.51_2 = Fls_u32JobAddrEnd;
  if (Fls_u32JobAddrIt.50_1 > Fls_u32JobAddrEnd.51_2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SectorTransferOffset = Fls_CalcSectorTransferOffset ();
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.52_3 = Fls_pConfigPtr;
  _4 = Fls_pConfigPtr.52_3->paSectorFlags;
  Fls_u32JobSectorIt.53_5 = Fls_u32JobSectorIt;
  _6 = *_4[Fls_u32JobSectorIt.53_5];
  _7 = (unsigned int) _6;
  _8 = _7 & 1;
  if (_8 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Asynch = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Asynch = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.54_9 = Fls_pConfigPtr;
  _10 = Fls_pConfigPtr.54_9->paSectorSize;
  Fls_u32JobSectorIt.55_11 = Fls_u32JobSectorIt;
  PhysicalSectorSize = *_10[Fls_u32JobSectorIt.55_11];
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.56_12 = Fls_u32JobAddrIt;
  _13 = PhysicalSectorSize + Fls_u32JobAddrIt.56_12;
  Fls_u32JobAddrIt = _13;
  # DEBUG BEGIN_STMT
  LldRetVal = Fls_IPW_SectorErase (SectorTransferOffset, PhysicalSectorSize, Asynch);
  # DEBUG BEGIN_STMT
  Fls_u32JobAddrIt.57_14 = Fls_u32JobAddrIt;
  Fls_u32JobAddrEnd.58_15 = Fls_u32JobAddrEnd;
  if (Fls_u32JobAddrIt.57_14 > Fls_u32JobAddrEnd.58_15)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  if (LldRetVal == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 15>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (LldRetVal == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportTransientFault (92, 0, 6, 1);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.59_16 = Fls_pConfigPtr;
  _17 = Fls_pConfigPtr.59_16->paSectorFlags;
  Fls_u32JobSectorIt.60_18 = Fls_u32JobSectorIt;
  _19 = *_17[Fls_u32JobSectorIt.60_18];
  DataStore = (uint32) _19;
  # DEBUG BEGIN_STMT
  _20 = DataStore & 1;
  if (_20 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.61_21 = Fls_pConfigPtr;
  _22 = Fls_pConfigPtr.61_21->paSectorEndAddr;
  Fls_u32JobSectorIt.62_23 = Fls_u32JobSectorIt;
  _24 = *_22[Fls_u32JobSectorIt.62_23];
  Fls_u32JobAddrIt.63_25 = Fls_u32JobAddrIt;
  if (_24 < Fls_u32JobAddrIt.63_25)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  Fls_u32JobSectorIt.64_26 = Fls_u32JobSectorIt;
  _27 = Fls_u32JobSectorIt.64_26 + 1;
  Fls_u32JobSectorIt = _27;

  <bb 15> :
  # DEBUG BEGIN_STMT
  D.9325 = RetVal;
  return D.9325;

}


Fls_CheckInputParamReadCompareJob (Fls_AddressType SourceAddress, const uint8 * TargetAddressPtr, Fls_LengthType Length, uint8 ApiId)
{
  boolean CheckInputTemp;
  Std_ReturnType RetVal;
  Std_ReturnType D.9270;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  CheckInputTemp = 0;
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.30_1 = Fls_pConfigPtr;
  if (Fls_pConfigPtr.30_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, ApiId, 5);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.31_2 = Fls_pConfigPtr;
  _3 = Fls_pConfigPtr.31_2->paSectorEndAddr;
  Fls_pConfigPtr.32_4 = Fls_pConfigPtr;
  _5 = Fls_pConfigPtr.32_4->u32SectorCount;
  _6 = _5 + 4294967295;
  _7 = *_3[_6];
  _8 = _7 + 1;
  if (SourceAddress >= _8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, ApiId, 2);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Length == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _9 = SourceAddress + Length;
  Fls_pConfigPtr.33_10 = Fls_pConfigPtr;
  _11 = Fls_pConfigPtr.33_10->paSectorEndAddr;
  Fls_pConfigPtr.34_12 = Fls_pConfigPtr;
  _13 = Fls_pConfigPtr.34_12->u32SectorCount;
  _14 = _13 + 4294967295;
  _15 = *_11[_14];
  _16 = _15 + 1;
  if (_9 > _16)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, ApiId, 3);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  CheckInputTemp = 1;

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (CheckInputTemp == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (TargetAddressPtr == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (92, 0, ApiId, 4);
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 13> :
  # DEBUG BEGIN_STMT
  D.9270 = RetVal;
  return D.9270;

}


Fls_IsAddrSectorEndAligned (const Fls_AddressType TargetAddress)
{
  Fls_AddressType EndAddress;
  Fls_LengthType SectorSize;
  Fls_SectorIndexType SectorIndex;
  boolean RetVal;
  boolean D.9195;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.12_1 = Fls_pConfigPtr;
  _2 = Fls_pConfigPtr.12_1->paSectorEndAddr;
  Fls_pConfigPtr.13_3 = Fls_pConfigPtr;
  _4 = Fls_pConfigPtr.13_3->u32SectorCount;
  _5 = _4 + 4294967295;
  _6 = *_2[_5];
  _7 = _6 + 1;
  if (TargetAddress < _7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SectorIndex = Fls_GetSectorIndexByAddr (TargetAddress);
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.14_8 = Fls_pConfigPtr;
  _9 = Fls_pConfigPtr.14_8->paSectorSize;
  SectorSize = *_9[SectorIndex];
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.15_10 = Fls_pConfigPtr;
  _11 = Fls_pConfigPtr.15_10->paSectorEndAddr;
  EndAddress = *_11[SectorIndex];
  # DEBUG BEGIN_STMT
  _12 = EndAddress - TargetAddress;
  _13 = _12 % SectorSize;
  if (_13 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.9195 = RetVal;
  return D.9195;

}


Fls_IsAddrSectorStartAligned (const Fls_AddressType TargetAddress)
{
  Fls_LengthType SectorSize;
  Fls_SectorIndexType SectorIndex;
  boolean RetVal;
  boolean D.9183;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.8_1 = Fls_pConfigPtr;
  _2 = Fls_pConfigPtr.8_1->paSectorEndAddr;
  Fls_pConfigPtr.9_3 = Fls_pConfigPtr;
  _4 = Fls_pConfigPtr.9_3->u32SectorCount;
  _5 = _4 + 4294967295;
  _6 = *_2[_5];
  _7 = _6 + 1;
  if (TargetAddress < _7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SectorIndex = Fls_GetSectorIndexByAddr (TargetAddress);
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.10_8 = Fls_pConfigPtr;
  _9 = Fls_pConfigPtr.10_8->paSectorSize;
  SectorSize = *_9[SectorIndex];
  # DEBUG BEGIN_STMT
  _10 = Fls_GetSectorStartAddr (SectorIndex);
  _11 = TargetAddress - _10;
  _12 = _11 % SectorSize;
  if (_12 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.9183 = RetVal;
  return D.9183;

}


Fls_IsAddrPageEndAligned (const Fls_AddressType TargetAddress)
{
  Fls_LengthType SectorOffset;
  boolean RetVal;
  boolean D.9234;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Fls_GetSectorIndexByAddr (TargetAddress);
  _2 = Fls_GetSectorStartAddr (_1);
  SectorOffset = TargetAddress - _2;
  # DEBUG BEGIN_STMT
  _3 = TargetAddress + 4294967295;
  Fls_pConfigPtr.23_4 = Fls_pConfigPtr;
  _5 = Fls_pConfigPtr.23_4->paSectorEndAddr;
  Fls_pConfigPtr.24_6 = Fls_pConfigPtr;
  _7 = Fls_pConfigPtr.24_6->u32SectorCount;
  _8 = _7 + 4294967295;
  _9 = *_5[_8];
  _10 = _9 + 1;
  if (_3 < _10)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  Fls_pConfigPtr.25_11 = Fls_pConfigPtr;
  _12 = Fls_pConfigPtr.25_11->paSectorPageSize;
  _13 = Fls_GetSectorIndexByAddr (TargetAddress);
  _14 = *_12[_13];
  _15 = SectorOffset % _14;
  if (_15 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.9234 = RetVal;
  return D.9234;

}


Fls_IsAddrPageStartAligned (const Fls_AddressType TargetAddress)
{
  boolean RetVal;
  boolean D.9222;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.20_1 = Fls_pConfigPtr;
  _2 = Fls_pConfigPtr.20_1->paSectorEndAddr;
  Fls_pConfigPtr.21_3 = Fls_pConfigPtr;
  _4 = Fls_pConfigPtr.21_3->u32SectorCount;
  _5 = _4 + 4294967295;
  _6 = *_2[_5];
  _7 = _6 + 1;
  if (TargetAddress < _7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _8 = Fls_IsAddrPageAligned (TargetAddress);
  if (_8 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 6> :
  # DEBUG BEGIN_STMT
  D.9222 = RetVal;
  return D.9222;

}


Fls_IsAddrPageAligned (const Fls_AddressType TargetAddress)
{
  boolean RetVal;
  boolean D.9227;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.22_1 = Fls_pConfigPtr;
  _2 = Fls_pConfigPtr.22_1->paSectorPageSize;
  _3 = Fls_GetSectorIndexByAddr (TargetAddress);
  _4 = *_2[_3];
  _5 = TargetAddress % _4;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.9227 = RetVal;
  return D.9227;

}


Fls_GetSectorStartAddr (const Fls_SectorIndexType SectorIndex)
{
  Fls_AddressType TargetAddress;
  Fls_AddressType D.9188;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SectorIndex != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.11_1 = Fls_pConfigPtr;
  _2 = Fls_pConfigPtr.11_1->paSectorEndAddr;
  _3 = SectorIndex + 4294967295;
  _4 = *_2[_3];
  TargetAddress = _4 + 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  TargetAddress = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.9188 = TargetAddress;
  return D.9188;

}


Fls_GetSectorIndexByAddr (const Fls_AddressType TargetAddress)
{
  Fls_SectorIndexType SectorIndex;
  Fls_SectorIndexType D.9198;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SectorIndex = 0;
  goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.16_1 = Fls_pConfigPtr;
  _2 = Fls_pConfigPtr.16_1->paSectorEndAddr;
  _3 = *_2[SectorIndex];
  if (TargetAddress <= _3)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SectorIndex = SectorIndex + 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fls_pConfigPtr.17_4 = Fls_pConfigPtr;
  _5 = Fls_pConfigPtr.17_4->u32SectorCount;
  if (SectorIndex < _5)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  D.9198 = SectorIndex;
  return D.9198;

}


