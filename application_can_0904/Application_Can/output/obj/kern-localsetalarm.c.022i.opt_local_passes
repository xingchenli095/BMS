__attribute__((target ("general-regs-only")))
OS_LocalSetAlarm (os_alarmid_t a, const struct os_alarm_t * as, const struct os_counter_t * cs, os_tick_t val, os_tick_t per, os_boolean_t rel)
{
  struct os_counterdynamic_t * cd;
  struct os_alarmdynamic_t * ad;
  os_errorresult_t result;
  os_intstatus_t is;
  const struct os_appcontext_t * _1;
  int _2;
  const struct os_hwt_t * _3;
  unsigned char _4;
  void (*<T540>) (const struct os_counter_t *) _5;
  short unsigned int OS_kernDisableLevel.0_6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  const struct os_hwt_t * _13;
  unsigned char _14;
  short unsigned int _15;
  void (*<T540>) (const struct os_counter_t *) _16;
  os_tick_t iftmp.1_19;
  os_tick_t iftmp.1_42;
  os_tick_t iftmp.1_43;
  os_errorresult_t _51;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ad_26 = as_25(D)->dynamic;
  # DEBUG ad => ad_26
  # DEBUG BEGIN_STMT
  cd_28 = cs_27(D)->dynamic;
  # DEBUG cd => cd_28
  # DEBUG BEGIN_STMT
  _1 = as_25(D)->app;
  _2 = OS_AppIsAccessible (_1);
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  result_50 = 154;
  # DEBUG result => result_50
  goto <bb 23>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = cs_27(D)->hwt;
  if (_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = cd_28->lock;
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _5 = cs_27(D)->updFunc;
  _5 (cs_27(D));

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_6 = OS_kernDisableLevel;
  is_32 = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.0_6);
  # DEBUG is => is_32
  # DEBUG BEGIN_STMT
  result_33 = ad_26->inUse;
  # DEBUG result => result_33
  # DEBUG BEGIN_STMT
  if (result_33 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ad_26->inUse = 1;
  # DEBUG BEGIN_STMT
  ad_26->period = per_38(D);
  # DEBUG BEGIN_STMT
  if (rel_40(D) != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ad_26->delta = val_41(D);
  goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _7 = cd_28->current;
  if (val_41(D) < _7)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _8 = cd_28->current;
  _9 = val_41(D) - _8;
  _10 = cs_27(D)->maxallowedvalue;
  _11 = _9 + _10;
  iftmp.1_43 = _11 + 1;
  goto <bb 13>; [INV]

  <bb 12> :
  _12 = cd_28->current;
  iftmp.1_42 = val_41(D) - _12;

  <bb 13> :
  # iftmp.1_19 = PHI <iftmp.1_43(11), iftmp.1_42(12)>
  ad_26->delta = iftmp.1_19;

  <bb 14> :
  # DEBUG BEGIN_STMT
  OS_EnqueueAlarm (cs_27(D), cd_28, a_46(D), ad_26);
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_32);
  goto <bb 19>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_32);
  # DEBUG BEGIN_STMT
  if (result_33 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  result_36 = 20;
  # DEBUG result => result_36
  goto <bb 19>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  if (result_33 == 2)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  result_35 = 4;
  # DEBUG result => result_35

  <bb 19> :
  # result_17 = PHI <result_33(14), result_36(16), result_33(17), result_35(18)>
  # DEBUG result => result_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _13 = cs_27(D)->hwt;
  if (_13 != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _14 = cd_28->lock;
  if (_14 == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 21> :
  _15 = cd_28->head;
  if (a_46(D) == _15)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  _16 = cs_27(D)->updFunc;
  _16 (cs_27(D));

  <bb 23> :
  # result_18 = PHI <result_50(3), result_17(19), result_17(20), result_17(21), result_17(22)>
  # DEBUG result => result_18
  # DEBUG BEGIN_STMT
  _51 = result_18;
  return _51;

}


