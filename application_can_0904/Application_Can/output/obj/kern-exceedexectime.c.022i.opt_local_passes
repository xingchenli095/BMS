__attribute__((target ("general-regs-only")))
OS_ExceedExecTime ()
{
  os_uint8_t inFunctionSave;
  struct os_kerneldata_t * const kernel_data;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  unsigned char _6;
  int _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_10 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  inFunctionSave_12 = OS_kernelData.inFunction;
  # DEBUG inFunctionSave => inFunctionSave_12
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.accounting.inFunction;
  OS_kernelData.inFunction = _1;
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.inFunction = 255;
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.inFunction;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.taskTimingNesting = 1;
  # DEBUG BEGIN_STMT
  _3 = OS_kernelData.accounting.etType;
  _4 = (int) _3;
  switch (_4) <default: <L3> [INV], case 2: <L1> [INV], case 3: <L2> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 63, 0B);
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 65, 0B);
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 34, 0B);
  # DEBUG BEGIN_STMT

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.taskTimingNesting = 0;
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.inFunction;
  if (_5 == 3)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = OS_kernelData.accounting.etType;
  _7 = (int) _6;
  switch (_7) <default: <L9> [INV], case 2: <L7> [INV], case 3: <L8> [INV]>

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 64, 0B);
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 11> :
<L8>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 66, 0B);
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 12> :
<L9>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 35, 0B);
  # DEBUG BEGIN_STMT

  <bb 13> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = inFunctionSave_12;
  return;

}


