
Marking local functions:


Marking externally visible functions: OS_RestartApplication


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_actiTaskFunc/10 (OS_actiTaskFunc) @06c18f30
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nTasks/9 (OS_nTasks) @06c18ee8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_killTaskFunc/8 (OS_killTaskFunc) @06c18e10
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_taskTableBase/7 (OS_taskTableBase) @06c18dc8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nSchedules/6 (OS_nSchedules) @06c18d80
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_killScheduleFunc/5 (OS_killScheduleFunc) @06c18ca8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_scheduleTableBase/4 (OS_scheduleTableBase) @06c18c60
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nAlarms/3 (OS_nAlarms) @06c18c18
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_killAlarmFunc/2 (OS_killAlarmFunc) @06c18b40
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_alarmTableBase/1 (OS_alarmTableBase) @06c18af8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_RestartApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_RestartApplication/0 (OS_RestartApplication) @06c38a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_alarmTableBase/1 (read)OS_killAlarmFunc/2 (read)OS_nAlarms/3 (read)OS_scheduleTableBase/4 (read)OS_killScheduleFunc/5 (read)OS_nSchedules/6 (read)OS_taskTableBase/7 (read)OS_killTaskFunc/8 (read)OS_nTasks/9 (read)OS_nTasks/9 (read)OS_actiTaskFunc/10 (read)OS_actiTaskFunc/10 (read)OS_taskTableBase/7 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
   Indirect call
   Indirect call
   Indirect call
   Indirect call
__attribute__((target ("general-regs-only")))
OS_RestartApplication (const struct os_appcontext_t * app)
{
  const struct os_schedule_t * schedule;
  const struct os_alarm_t * alarm;
  const struct os_task_t * task;
  os_scheduleid_t scheduleid;
  os_alarmid_t alarmid;
  os_taskid_t taskid;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = app->dynamic;
  _1->appstate = 1;
  # DEBUG BEGIN_STMT
  alarm = OS_alarmTableBase;
  # DEBUG BEGIN_STMT
  alarmid = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = alarm->app;
  if (app == _2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_killAlarmFunc.0_3 = OS_killAlarmFunc;
  OS_killAlarmFunc.0_3 (alarmid, 0);

  <bb 5> :
  # DEBUG BEGIN_STMT
  alarm = alarm + 28;
  # DEBUG BEGIN_STMT
  alarmid.1_4 = alarmid;
  alarmid = alarmid.1_4 + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  OS_nAlarms.2_5 = OS_nAlarms;
  if (alarmid < OS_nAlarms.2_5)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  schedule = OS_scheduleTableBase;
  # DEBUG BEGIN_STMT
  scheduleid = 0;
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = schedule->app;
  if (app == _6)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  OS_killScheduleFunc.3_7 = OS_killScheduleFunc;
  OS_killScheduleFunc.3_7 (scheduleid, 0);

  <bb 10> :
  # DEBUG BEGIN_STMT
  schedule = schedule + 36;
  # DEBUG BEGIN_STMT
  scheduleid.4_8 = scheduleid;
  scheduleid = scheduleid.4_8 + 1;

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_nSchedules.5_9 = OS_nSchedules;
  if (scheduleid < OS_nSchedules.5_9)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  task = OS_taskTableBase;
  # DEBUG BEGIN_STMT
  taskid = 0;
  goto <bb 16>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _10 = task->app;
  if (app == _10)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  OS_killTaskFunc.6_11 = OS_killTaskFunc;
  OS_killTaskFunc.6_11 (task, 0);

  <bb 15> :
  # DEBUG BEGIN_STMT
  task = task + 76;
  # DEBUG BEGIN_STMT
  taskid.7_12 = taskid;
  taskid = taskid.7_12 + 1;

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_nTasks.8_13 = OS_nTasks;
  if (taskid < OS_nTasks.8_13)
    goto <bb 13>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _14 = app->restartTask;
  OS_nTasks.9_15 = OS_nTasks;
  if (_14 < OS_nTasks.9_15)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  OS_actiTaskFunc.10_16 = OS_actiTaskFunc;
  if (OS_actiTaskFunc.10_16 != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  OS_actiTaskFunc.11_17 = OS_actiTaskFunc;
  OS_taskTableBase.12_18 = OS_taskTableBase;
  _19 = app->restartTask;
  _20 = (unsigned int) _19;
  _21 = _20 * 76;
  _22 = OS_taskTableBase.12_18 + _21;
  OS_actiTaskFunc.11_17 (_22);

  <bb 20> :
  return;

}


