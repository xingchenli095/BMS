
Marking local functions:


Marking externally visible functions: OS_KernGetTaskId


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_CanWrite/6 (OS_CanWrite) @06d14540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetTaskId/0 
  Calls: 
OS_iecMode/5 (OS_iecMode) @06d18000
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetTaskId/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_GetTaskId/4 (OS_svc_GetTaskId) @06c4bf78
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetTaskId/0 (addr)OS_KernGetTaskId/0 (addr)OS_KernGetTaskId/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/3 (OS_Error) @06d14460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetTaskId/0 OS_KernGetTaskId/0 OS_KernGetTaskId/0 
  Calls: 
OS_permittedContext/2 (OS_permittedContext) @06c4bee8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetTaskId/0 (read)OS_KernGetTaskId/0 (read)OS_KernGetTaskId/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06c4bea0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetTaskId/0 (read)OS_KernGetTaskId/0 (read)OS_KernGetTaskId/0 (read)OS_KernGetTaskId/0 (read)OS_KernGetTaskId/0 (read)OS_KernGetTaskId/0 (read)OS_KernGetTaskId/0 (read)OS_KernGetTaskId/0 (read)
  Availability: not_available
  Varpool flags:
OS_KernGetTaskId/0 (OS_KernGetTaskId) @06d140e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_svc_GetTaskId/4 (addr)OS_iecMode/5 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_GetTaskId/4 (addr)OS_svc_GetTaskId/4 (addr)OS_kernelData/1 (read)OS_kernelData/1 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Error/3 OS_CanWrite/6 OS_Error/3 OS_Error/3 
__attribute__((target ("general-regs-only")))
OS_KernGetTaskId (os_taskid_t * out)
{
  os_paramtype_t p[3];
  os_result_t r;
  os_result_t D.7438;
  int iftmp.2;
  _Bool iftmp.1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  r = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  out.0_1 = (unsigned int) out;
  p[0] = out.0_1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.inFunction;
  if (_2 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.3_3 = OS_permittedContext;
  _4 = OS_permittedContext.3_3 + 52;
  _5 = *_4;
  _6 = (unsigned int) _5;
  _7 = _6 & 1024;
  if (_7 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.4_8 = OS_permittedContext;
  _9 = OS_permittedContext.4_8 + 52;
  _10 = *_9;
  _11 = OS_kernelData.errorStatus.calledFrom;
  _12 = (int) _11;
  _13 = 1 << _12;
  _14 = (short unsigned int) _13;
  _15 = _10 & _14;
  if (_15 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2 = 0;

  <bb 7> :
  iftmp.1 = iftmp.2 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.5_16 = OS_permittedContext;
  _17 = OS_permittedContext.5_16 + 52;
  _18 = *_17;
  _19 = OS_kernelData.inFunction;
  _20 = (int) _19;
  _21 = 1 << _20;
  _22 = (short unsigned int) _21;
  _23 = _18 & _22;
  iftmp.1 = _23 == 0;

  <bb 9> :
  if (iftmp.1 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetTaskId, 12, &p);
  goto <bb 21>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_iecMode.6_24 = OS_iecMode;
  if (OS_iecMode.6_24 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  _25 = OS_kernelData.inFunction;
  if (_25 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _26 = OS_kernelData.taskCurrent;
  _27 = _26->dynamic;
  _28 = BIT_FIELD_REF <MEM[(void *)_27], 16, 160>;
  _29 = _28;
  if (_29 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _30 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _31 = _30;
  if (_31 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetTaskId, 55, &p);
  goto <bb 21>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _32 = OS_CanWrite (out, 1);
  if (_32 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetTaskId, 6, &p);
  goto <bb 21>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _33 = OS_kernelData.taskCurrent;
  if (_33 == 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  *out = 255;
  goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _34 = OS_kernelData.taskCurrent;
  _35 = _34->taskId;
  *out = _35;

  <bb 21> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7438 = r;
  p = {CLOBBER};
  return D.7438;

}


