__attribute__((target ("general-regs-only")))
OS_KernChainTask (os_taskid_t t)
{
  os_errorresult_t e;
  os_paramtype_t p[3];
  os_intstatus_t is;
  os_result_t r;
  const struct os_task_t * ntp;
  struct os_taskdynamic_t * otd;
  const struct os_task_t * otp;
  struct os_kerneldata_t * const kernel_data;
  unsigned int _1;
  unsigned char _2;
  unsigned char OS_nTasks.0_3;
  unsigned char OS_iecMode.1_4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  const struct os_task_t * OS_taskTableBase.2_10;
  unsigned int _11;
  unsigned int _12;
  unsigned char _13;
  const struct os_task_t * _14;
  const struct os_appcontext_t * _15;
  unsigned char _16;
  const struct os_isr_t * OS_isrTableBase.3_17;
  short unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  const struct os_isr_t * _21;
  const struct os_appcontext_t * _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  const struct os_appcontext_t * _26;
  _Bool _27;
  unsigned char _28;
  const struct os_task_t * _29;
  unsigned char _30;
  const struct os_isr_t * OS_isrTableBase.7_31;
  short unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  const struct os_isr_t * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned int _39;
  unsigned int _40;
  unsigned int _41;
  short unsigned int OS_kernDisableLevel.9_42;
  unsigned char _43;
  struct os_taskdynamic_t * _44;
  int iftmp.4_48;
  const struct os_appcontext_t * iftmp.5_49;
  const struct os_appcontext_t * iftmp.6_50;
  const struct os_appcontext_t * iftmp.8_51;
  int iftmp.4_65;
  int iftmp.4_66;
  const struct os_appcontext_t * iftmp.8_67;
  const struct os_appcontext_t * iftmp.8_68;
  const struct os_appcontext_t * iftmp.6_69;
  const struct os_appcontext_t * iftmp.6_70;
  const struct os_appcontext_t * iftmp.5_71;
  const struct os_appcontext_t * iftmp.5_72;
  os_result_t _95;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_55 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_55
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  r_56 = 0;
  # DEBUG r => r_56
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) t_57(D);
  p[0] = _1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.inFunction;
  if (_2 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  r_94 = OS_Error (&OS_svc_ChainTask, 12, &p);
  # DEBUG r => r_94
  goto <bb 46>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_nTasks.0_3 = OS_nTasks;
  if (t_57(D) >= OS_nTasks.0_3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  r_92 = OS_Error (&OS_svc_ChainTask, 2, &p);
  # DEBUG r => r_92
  goto <bb 46>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  otp_60 = OS_kernelData.taskCurrent;
  # DEBUG otp => otp_60
  # DEBUG BEGIN_STMT
  otd_61 = otp_60->dynamic;
  # DEBUG otd => otd_61
  # DEBUG BEGIN_STMT
  OS_iecMode.1_4 = OS_iecMode;
  if (OS_iecMode.1_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _5 = BIT_FIELD_REF <MEM[(void *)otd_61], 16, 160>;
  _6 = _5;
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  r_63 = OS_Error (&OS_svc_ChainTask, 55, 0B);
  # DEBUG r => r_63
  goto <bb 46>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _7 = otd_61->lastLock;
  if (_7 != 4294967295)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _8 = otd_61->lastLock;
  _9 = _8 >> 24;
  if (_9 == 9)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  r_90 = OS_Error (&OS_svc_ChainTask, 156, &p);
  # DEBUG r => r_90
  goto <bb 46>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  r_88 = OS_Error (&OS_svc_ChainTask, 13, &p);
  # DEBUG r => r_88
  goto <bb 46>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  OS_taskTableBase.2_10 = OS_taskTableBase;
  _11 = (unsigned int) t_57(D);
  _12 = _11 * 76;
  ntp_64 = OS_taskTableBase.2_10 + _12;
  # DEBUG ntp => ntp_64
  # DEBUG BEGIN_STMT
  _13 = OS_kernelData.inFunction;
  if (_13 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _14 = OS_kernelData.taskCurrent;
  _15 = _14->app;
  if (_15 != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 15> :
  _16 = OS_kernelData.inFunction;
  if (_16 == 3)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  OS_isrTableBase.3_17 = OS_isrTableBase;
  _18 = OS_kernelData.isrCurrent;
  _19 = (unsigned int) _18;
  _20 = _19 * 68;
  _21 = OS_isrTableBase.3_17 + _20;
  _22 = _21->app;
  if (_22 != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 17> :
  _23 = OS_kernelData.inFunction;
  if (_23 == 10)
    goto <bb 20>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _24 = OS_kernelData.inFunction;
  if (_24 == 8)
    goto <bb 20>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  _25 = OS_kernelData.inFunction;
  if (_25 == 9)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  _26 = OS_kernelData.hookApp;
  if (_26 != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.4_65 = 1;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.4_66 = 0;

  <bb 23> :
  # iftmp.4_48 = PHI <iftmp.4_65(21), iftmp.4_66(22)>
  _27 = (_Bool) iftmp.4_48;
  if (_27 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 24> :
  _28 = OS_kernelData.inFunction;
  if (_28 == 1)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _29 = OS_kernelData.taskCurrent;
  iftmp.5_72 = _29->app;
  goto <bb 35>; [INV]

  <bb 26> :
  _30 = OS_kernelData.inFunction;
  if (_30 == 3)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  OS_isrTableBase.7_31 = OS_isrTableBase;
  _32 = OS_kernelData.isrCurrent;
  _33 = (unsigned int) _32;
  _34 = _33 * 68;
  _35 = OS_isrTableBase.7_31 + _34;
  iftmp.6_70 = _35->app;
  goto <bb 34>; [INV]

  <bb 28> :
  _36 = OS_kernelData.inFunction;
  if (_36 == 10)
    goto <bb 31>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _37 = OS_kernelData.inFunction;
  if (_37 == 8)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _38 = OS_kernelData.inFunction;
  if (_38 == 9)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.8_68 = OS_kernelData.hookApp;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.8_67 = 0B;

  <bb 33> :
  # iftmp.8_51 = PHI <iftmp.8_68(31), iftmp.8_67(32)>
  iftmp.6_69 = iftmp.8_51;

  <bb 34> :
  # iftmp.6_50 = PHI <iftmp.6_70(27), iftmp.6_69(33)>
  iftmp.5_71 = iftmp.6_50;

  <bb 35> :
  # iftmp.5_49 = PHI <iftmp.5_72(25), iftmp.5_71(34)>
  _39 = iftmp.5_49->permissionBit;
  _40 = ntp_64->permissions;
  _41 = _39 & _40;
  if (_41 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  # DEBUG BEGIN_STMT
  r_74 = OS_Error (&OS_svc_ChainTask, 37, &p);
  # DEBUG r => r_74
  goto <bb 46>; [INV]

  <bb 37> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ntp_64 == otp_60)
    goto <bb 38>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 38> :
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.9_42 = OS_kernDisableLevel;
  is_79 = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.9_42);
  # DEBUG is => is_79
  # DEBUG BEGIN_STMT
  _43 = otd_61->state;
  if (_43 == 5)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  # DEBUG BEGIN_STMT
  OS_DoTerminateTask (otp_60, otd_61);
  # DEBUG BEGIN_STMT
  e_83 = OS_LocalActivateTask (ntp_64);
  # DEBUG e => e_83
  goto <bb 41>; [INV]

  <bb 40> :
  # DEBUG BEGIN_STMT
  e_80 = 0;
  # DEBUG e => e_80

  <bb 41> :
  # e_46 = PHI <e_83(39), e_80(40)>
  # DEBUG e => e_46
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_79);
  goto <bb 44>; [INV]

  <bb 42> :
  # DEBUG BEGIN_STMT
  e_76 = OS_LocalActivateTask (ntp_64);
  # DEBUG e => e_76
  # DEBUG BEGIN_STMT
  if (e_76 == 0)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  # DEBUG BEGIN_STMT
  _44 = otp_60->dynamic;
  OS_DoTerminateTask (otp_60, _44);

  <bb 44> :
  # e_47 = PHI <e_46(41), e_76(42), e_76(43)>
  # DEBUG e => e_47
  # DEBUG BEGIN_STMT
  if (e_47 != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  # DEBUG BEGIN_STMT
  r_86 = OS_Error (&OS_svc_ChainTask, e_47, &p);
  # DEBUG r => r_86

  <bb 46> :
  # r_45 = PHI <r_94(3), r_92(5), r_63(8), r_88(12), r_74(36), r_56(44), r_86(45), r_90(11)>
  # DEBUG r => r_45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _95 = r_45;
  p ={v} {CLOBBER};
  return _95;

}


