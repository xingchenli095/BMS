Dcm_Dsp_CommunicationControl_ResetOnSessionChange (Dcm_SesCtrlType NewSession)
{
  Dcm_ProtocolIndexType ProtocolIdx;
  const struct Dcm_SidTabEntryConfigType * SidConfig;
  boolean CommunicationControlConfigExist;
  boolean ResetCommunicationControl;
  uint8_least sessionIdx;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ResetCommunicationControl = 1;
  # DEBUG BEGIN_STMT
  CommunicationControlConfigExist = 0;
  # DEBUG BEGIN_STMT
  SidConfig = 0B;
  # DEBUG BEGIN_STMT
  _1 = Dcm_Dsl_Supervisor_GetLatestExternalUDSProtocol ();
  _2 = (unsigned char) _1;
  ProtocolIdx = _2 + 244;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CommunicationControlConfigExist = Dcm_DspInternal_GetSidConfig (ProtocolIdx, 40, &SidConfig);
  # DEBUG BEGIN_STMT
  if (CommunicationControlConfigExist == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SidConfig.11_3 = SidConfig;
  _4 = SidConfig.11_3->NumSesCtrls;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  sessionIdx = 0;
  goto <bb 9>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SidConfig.12_5 = SidConfig;
  _6 = SidConfig.12_5->SesCtrls;
  _7 = _6 + sessionIdx;
  _8 = *_7;
  if (_8 == 255)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  SidConfig.13_9 = SidConfig;
  _10 = SidConfig.13_9->SesCtrls;
  _11 = _10 + sessionIdx;
  _12 = *_11;
  if (NewSession == _12)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ResetCommunicationControl = 0;
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  sessionIdx = sessionIdx + 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  SidConfig.14_13 = SidConfig;
  _14 = SidConfig.14_13->NumSesCtrls;
  _15 = (long unsigned int) _14;
  if (sessionIdx < _15)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ResetCommunicationControl = 0;

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (ResetCommunicationControl == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Dcm_Dsp_CommunicationControl_ResetCommunicationControl ();

  <bb 13> :
  # DEBUG BEGIN_STMT
  SidConfig = {CLOBBER};
  return;

}


Dcm_Dsp_CommunicationControl_ClearInternalVariables ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_RequestedModeConfirmation = 255;
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_RequestedModeDeclarationConfirmation = 255;
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_PositiveResponse = 0;
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_SubFunctionHandlerIsInternal = 0;
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_SubServiceHandler = 0B;
  return;

}


Dcm_Dsp_CommunicationControl_SetComMode_ModeDeclarationTrue (uint8 SubnetNumber, PduIdType DcmRxPduId)
{
  struct Dcm_RxPduIdInfoType RxPduIdInfo;
  uint8 SpecificAndAllChIndex;
  boolean EntryFoundInLookUpTable;
  uint8_least LookUpAndModeIndex;
  NetworkHandleType NetworkId;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LookUpAndModeIndex = 0;
  # DEBUG BEGIN_STMT
  EntryFoundInLookUpTable = 0;
  # DEBUG BEGIN_STMT
  SpecificAndAllChIndex = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SubnetNumber == 15)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Dcm_Dsl_RxConnectionGetRxPduIdInformation (DcmRxPduId, &RxPduIdInfo);
  # DEBUG BEGIN_STMT
  NetworkId = RxPduIdInfo.ComMChannelId;
  # DEBUG BEGIN_STMT
  LookUpAndModeIndex = 0;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = Dcm_CommunicationControlLookUpTable[LookUpAndModeIndex].ComMChannelId;
  if (NetworkId == _1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _2 = Dcm_CommunicationControlLookUpTable[LookUpAndModeIndex].SchMSwitchCommunicationControl;
  Dcm_CommunicationControl_RequestedModeDeclarationConfirmation.4_3 = Dcm_CommunicationControl_RequestedModeDeclarationConfirmation;
  _2 (Dcm_CommunicationControl_RequestedModeDeclarationConfirmation.4_3);
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_RequestedModeConfirmation.5_4 = Dcm_CommunicationControl_RequestedModeConfirmation;
  BswM_Dcm_CommunicationMode_CurrentState (NetworkId, Dcm_CommunicationControl_RequestedModeConfirmation.5_4);
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_RequestedModeConfirmation.6_5 = Dcm_CommunicationControl_RequestedModeConfirmation;
  Dcm_CommunicationControl_CommunicationMode[LookUpAndModeIndex] = Dcm_CommunicationControl_RequestedModeConfirmation.6_5;
  # DEBUG BEGIN_STMT
  EntryFoundInLookUpTable = 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  LookUpAndModeIndex = LookUpAndModeIndex + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (LookUpAndModeIndex == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 8> :
  if (EntryFoundInLookUpTable == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = SubnetNumber + 255;
  if (_6 <= 13)
    goto <bb 19>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  SpecificAndAllChIndex = 0;
  goto <bb 18>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  EntryFoundInLookUpTable = 0;
  # DEBUG BEGIN_STMT
  LookUpAndModeIndex = 0;
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _7 = Dcm_CommunicationControlLookUpTable[LookUpAndModeIndex].ComMChannelId;
  _8 = (int) SpecificAndAllChIndex;
  _9 = Dcm_CommunicationControlAllChannel[_8];
  if (_7 == _9)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _10 = Dcm_CommunicationControlLookUpTable[LookUpAndModeIndex].SchMSwitchCommunicationControl;
  Dcm_CommunicationControl_RequestedModeDeclarationConfirmation.7_11 = Dcm_CommunicationControl_RequestedModeDeclarationConfirmation;
  _10 (Dcm_CommunicationControl_RequestedModeDeclarationConfirmation.7_11);
  # DEBUG BEGIN_STMT
  _12 = (int) SpecificAndAllChIndex;
  _13 = Dcm_CommunicationControlAllChannel[_12];
  Dcm_CommunicationControl_RequestedModeConfirmation.8_14 = Dcm_CommunicationControl_RequestedModeConfirmation;
  BswM_Dcm_CommunicationMode_CurrentState (_13, Dcm_CommunicationControl_RequestedModeConfirmation.8_14);
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_RequestedModeConfirmation.9_15 = Dcm_CommunicationControl_RequestedModeConfirmation;
  Dcm_CommunicationControl_CommunicationMode[LookUpAndModeIndex] = Dcm_CommunicationControl_RequestedModeConfirmation.9_15;
  # DEBUG BEGIN_STMT
  EntryFoundInLookUpTable = 1;

  <bb 14> :
  # DEBUG BEGIN_STMT
  LookUpAndModeIndex = LookUpAndModeIndex + 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (LookUpAndModeIndex == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  if (EntryFoundInLookUpTable == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SpecificAndAllChIndex.10_16 = SpecificAndAllChIndex;
  SpecificAndAllChIndex = SpecificAndAllChIndex.10_16 + 1;

  <bb 18> :
  # DEBUG BEGIN_STMT
  if (SpecificAndAllChIndex == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  RxPduIdInfo = {CLOBBER};
  return;

}


Dcm_Dsp_CommunicationControl_CommonUnenhancedAddressInformation (Dcm_OpStatusType OpStatus, uint8 subService, struct Dcm_MsgContextType * pMsgContext)
{
  boolean ValidSubNetAndCommType;
  const uint8 SubnetNumber;
  const uint8 MessageType;
  Std_ReturnType ServiceProcessStatus;
  Std_ReturnType D.7317;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 30;
  # DEBUG BEGIN_STMT
  _1 = pMsgContext->reqData;
  _2 = *_1;
  MessageType = _2 & 3;
  # DEBUG BEGIN_STMT
  _3 = pMsgContext->reqData;
  _4 = *_3;
  SubnetNumber = _4 >> 4;
  # DEBUG BEGIN_STMT
  _5 = (int) OpStatus;
  switch (_5) <default: <L12> [INV], case 0: <L0> [INV], case 5: <L7> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _6 = pMsgContext->reqDataLen;
  if (_6 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ValidSubNetAndCommType = 0;
  # DEBUG BEGIN_STMT
  ValidSubNetAndCommType = Dcm_Dsp_CommunicationControl_CheckSubnetNumberAndCommType (MessageType, SubnetNumber);
  # DEBUG BEGIN_STMT
  if (ValidSubNetAndCommType == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_PositiveResponse = 1;
  # DEBUG BEGIN_STMT
  _7 = (int) MessageType;
  _8 = (int) subService;
  _9 = Dcm_AllCommunicationMode[_7][_8];
  Dcm_CommunicationControl_RequestedModeConfirmation = _9;
  # DEBUG BEGIN_STMT
  _10 = (int) MessageType;
  _11 = (int) subService;
  _12 = Dcm_AllCommunicationControlModeDeclarations[_10][_11];
  Dcm_CommunicationControl_RequestedModeDeclarationConfirmation = _12;
  # DEBUG BEGIN_STMT
  pMsgContext->resDataLen = 1;
  # DEBUG BEGIN_STMT
  _13 = pMsgContext->resData;
  *_13 = subService;
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 26;
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_PositiveResponse = 0;
  # DEBUG BEGIN_STMT
  Dcm_ExternalSetNegResponse (pMsgContext, 49);
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 26;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_PositiveResponse = 0;
  # DEBUG BEGIN_STMT
  Dcm_ExternalSetNegResponse (pMsgContext, 19);
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 26;

  <bb 8> :
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_SubFunctionHandlerIsInternal = 1;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 9> :
<L7>:
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_PositiveResponse.3_14 = Dcm_CommunicationControl_PositiveResponse;
  if (Dcm_CommunicationControl_PositiveResponse.3_14 == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _15 = Dcm_Dsl_DiagnosticSessionHandler_GetResetToDefaultSessionOccured (40);
  if (_15 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _16 = pMsgContext->dcmRxPduId;
  Dcm_Dsp_CommunicationControl_SetComMode_ModeDeclarationTrue (SubnetNumber, _16);

  <bb 12> :
  # DEBUG BEGIN_STMT
  Dcm_Dsp_CommunicationControl_ClearInternalVariables ();
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 26;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 13> :
<L12>:
  # DEBUG BEGIN_STMT
  Dcm_Dsp_CommunicationControl_ClearInternalVariables ();
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 26;
  # DEBUG BEGIN_STMT

  <bb 14> :
  # DEBUG BEGIN_STMT
  D.7317 = ServiceProcessStatus;
  return D.7317;

}


Dcm_Dsp_CommunicationControl_CheckSubnetNumberAndCommType (uint8 MessageType, uint8 SubnetNumber)
{
  boolean ValidSubNetAndCommType;
  boolean D.7324;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ValidSubNetAndCommType = 0;
  # DEBUG BEGIN_STMT
  if (MessageType != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = SubnetNumber + 255;
  if (_1 <= 13)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ValidSubNetAndCommType = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.7324 = ValidSubNetAndCommType;
  return D.7324;

}


Dcm_Dsp_CommunicationControl_SvcCont (Dcm_OpStatusType OpStatus, struct Dcm_MsgContextType * pMsgContext)
{
  Std_ReturnType ServiceProcessStatus;
  Std_ReturnType D.7303;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_SubServiceHandler.1_1 = Dcm_CommunicationControl_SubServiceHandler;
  ServiceProcessStatus = Dcm_CommunicationControl_SubServiceHandler.1_1 (OpStatus, pMsgContext);
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_SubFunctionHandlerIsInternal.2_2 = Dcm_CommunicationControl_SubFunctionHandlerIsInternal;
  if (Dcm_CommunicationControl_SubFunctionHandlerIsInternal.2_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (ServiceProcessStatus <= 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 26;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7303 = ServiceProcessStatus;
  return D.7303;

}


Dcm_Dsp_CommunicationControl_SvcStart (Dcm_OpStatusType OpStatus, struct Dcm_MsgContextType * pMsgContext)
{
  Std_ReturnType ServiceProcessStatus;
  Std_ReturnType D.7297;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_SubFunctionHandlerIsInternal = 0;
  # DEBUG BEGIN_STMT
  _1 = Dcm_Dsp_ExtractSubServiceHandler (OpStatus, pMsgContext);
  Dcm_CommunicationControl_SubServiceHandler = _1;
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = Dcm_Dsp_CommunicationControl_SvcCont (OpStatus, pMsgContext);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7297 = ServiceProcessStatus;
  return D.7297;

}


Dcm_Dsp_CommunicationControl_SessionChange (Dcm_SesCtrlType OldSession, Dcm_SesCtrlType NewSession)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (NewSession == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Dcm_Dsp_CommunicationControl_ResetCommunicationControl ();
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Dcm_Dsp_CommunicationControl_ResetOnSessionChange (NewSession);

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_Dsp_CommunicationControl_ResetCommunicationControl ()
{
  uint8_least ModeAndLookUpIndex;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ModeAndLookUpIndex = 0;
  # DEBUG BEGIN_STMT
  ModeAndLookUpIndex = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = Dcm_CommunicationControl_CommunicationMode[ModeAndLookUpIndex];
  if (_1 != 8)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = Dcm_CommunicationControlLookUpTable[ModeAndLookUpIndex].SchMSwitchCommunicationControl;
  _2 (8);
  # DEBUG BEGIN_STMT
  _3 = Dcm_CommunicationControlLookUpTable[ModeAndLookUpIndex].ComMChannelId;
  BswM_Dcm_CommunicationMode_CurrentState (_3, 8);
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_CommunicationMode[ModeAndLookUpIndex] = 8;

  <bb 5> :
  # DEBUG BEGIN_STMT
  ModeAndLookUpIndex = ModeAndLookUpIndex + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (ModeAndLookUpIndex == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


Dcm_Dsp_CommunicationControl_DisableRxAndTx_SSvcH (Dcm_OpStatusType OpStatus, struct Dcm_MsgContextType * pMsgContext)
{
  Std_ReturnType ServiceProcessStatus;
  Std_ReturnType D.7342;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = Dcm_Dsp_CommunicationControl_CommonUnenhancedAddressInformation (OpStatus, 3, pMsgContext);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7342 = ServiceProcessStatus;
  return D.7342;

}


Dcm_Dsp_CommunicationControl_DisableRxAndEnableTx_SSvcH (Dcm_OpStatusType OpStatus, struct Dcm_MsgContextType * pMsgContext)
{
  Std_ReturnType ServiceProcessStatus;
  Std_ReturnType D.7340;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = Dcm_Dsp_CommunicationControl_CommonUnenhancedAddressInformation (OpStatus, 2, pMsgContext);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7340 = ServiceProcessStatus;
  return D.7340;

}


Dcm_Dsp_CommunicationControl_EnableRxAndDisableTx_SSvcH (Dcm_OpStatusType OpStatus, struct Dcm_MsgContextType * pMsgContext)
{
  Std_ReturnType ServiceProcessStatus;
  Std_ReturnType D.7338;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = Dcm_Dsp_CommunicationControl_CommonUnenhancedAddressInformation (OpStatus, 1, pMsgContext);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7338 = ServiceProcessStatus;
  return D.7338;

}


Dcm_Dsp_CommunicationControl_EnableRxAndTx_SSvcH (Dcm_OpStatusType OpStatus, struct Dcm_MsgContextType * pMsgContext)
{
  Std_ReturnType ServiceProcessStatus;
  Std_ReturnType D.7305;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = Dcm_Dsp_CommunicationControl_CommonUnenhancedAddressInformation (OpStatus, 0, pMsgContext);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7305 = ServiceProcessStatus;
  return D.7305;

}


Dcm_Dsp_CommunicationControl_Init ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TS_MemSet32 (&Dcm_CommunicationControl_CommunicationMode, 8, 1);
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_RequestedModeConfirmation = 255;
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_RequestedModeDeclarationConfirmation = 255;
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_PositiveResponse = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_SubFunctionHandlerIsInternal = 0;
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_SubServiceHandler = 0B;
  # DEBUG BEGIN_STMT
  return;

}


Dcm_Dsp_CommunicationControl_SvcH (Dcm_OpStatusType OpStatus, struct Dcm_MsgContextType * pMsgContext)
{
  Std_ReturnType ServiceProcessStatus;
  Std_ReturnType D.7295;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) OpStatus;
  switch (_1) <default: <L8> [INV], case 0: <L0> [INV], case 1: <L1> [INV], case 2: <L2> [INV], case 5 ... 6: <L3> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = Dcm_Dsp_CommunicationControl_SvcStart (0, pMsgContext);
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = Dcm_Dsp_CommunicationControl_SvcCont (1, pMsgContext);
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = Dcm_Dsp_CommunicationControl_SvcCont (2, pMsgContext);
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  Dcm_CommunicationControl_SubFunctionHandlerIsInternal.0_2 = Dcm_CommunicationControl_SubFunctionHandlerIsInternal;
  if (Dcm_CommunicationControl_SubFunctionHandlerIsInternal.0_2 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = Dcm_Dsp_CommunicationControl_SvcCont (OpStatus, pMsgContext);
  goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 26;
  goto <bb 10>; [INV]

  <bb 9> :
<L8>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ServiceProcessStatus = 26;
  # DEBUG BEGIN_STMT

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7295 = ServiceProcessStatus;
  return D.7295;

}


