Dcm_Roe_CheckForTxEnable ()
{
  Dcm_ComMChannelOperationStateType ComMChnTxState;
  struct Dcm_RxPduIdInfoType RxPduIdInfo;
  boolean retValTxEnabled;
  Std_ReturnType GetRxPduIdResult;
  PduIdType RxPduId;
  short unsigned int RxPduId.0_1;
  unsigned char _2;
  boolean _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RxPduId = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retValTxEnabled_8 = 0;
  # DEBUG retValTxEnabled => retValTxEnabled_8
  # DEBUG BEGIN_STMT
  GetRxPduIdResult_10 = Dcm_Dsl_RoeServices_GetRxPduId (&RxPduId);
  # DEBUG GetRxPduIdResult => GetRxPduIdResult_10
  # DEBUG BEGIN_STMT
  if (GetRxPduIdResult_10 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComMChnTxState_12 = 0;
  # DEBUG ComMChnTxState => ComMChnTxState_12
  # DEBUG BEGIN_STMT
  RxPduId.0_1 = RxPduId;
  Dcm_Dsl_RxConnectionGetRxPduIdInformation (RxPduId.0_1, &RxPduIdInfo);
  # DEBUG BEGIN_STMT
  _2 = RxPduIdInfo.ComMChannelId;
  ComMChnTxState_15 = Dcm_Dsl_ComMChannelStateManager_GetTxState (_2);
  # DEBUG ComMChnTxState => ComMChnTxState_15
  # DEBUG BEGIN_STMT
  if (ComMChnTxState_15 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  retValTxEnabled_17 = 1;
  # DEBUG retValTxEnabled => retValTxEnabled_17
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  retValTxEnabled_16 = 0;
  # DEBUG retValTxEnabled => retValTxEnabled_16

  <bb 6> :
  # retValTxEnabled_3 = PHI <retValTxEnabled_17(4), retValTxEnabled_16(5)>
  # DEBUG retValTxEnabled => retValTxEnabled_3
  RxPduIdInfo ={v} {CLOBBER};
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  retValTxEnabled_11 = 0;
  # DEBUG retValTxEnabled => retValTxEnabled_11

  <bb 8> :
  # retValTxEnabled_4 = PHI <retValTxEnabled_3(6), retValTxEnabled_11(7)>
  # DEBUG retValTxEnabled => retValTxEnabled_4
  # DEBUG BEGIN_STMT
  _19 = retValTxEnabled_4;
  RxPduId ={v} {CLOBBER};
  return _19;

}


Dcm_BootloaderResponseRequired (const uint8 instIdx)
{
  boolean ConditionResult;
  int _1;
  unsigned char _2;
  boolean _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ConditionResult_4 = 1;
  # DEBUG ConditionResult => ConditionResult_4
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_5(D);
  _2 = Dcm_HsmInfo[_1].NextJob.JobRequestType;
  if (_2 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ConditionResult_7 = 0;
  # DEBUG ConditionResult => ConditionResult_7

  <bb 4> :
  # ConditionResult_3 = PHI <ConditionResult_4(2), ConditionResult_7(3)>
  # DEBUG ConditionResult => ConditionResult_3
  # DEBUG BEGIN_STMT
  _8 = ConditionResult_3;
  return _8;

}


Dcm_CheckForGeneralRejectConditions (const uint8 instIdx)
{
  uint16 MaxNumRP;
  boolean GeneralRejectConditionFulfill;
  int _1;
  short unsigned int _2;
  boolean _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  GeneralRejectConditionFulfill_4 = 0;
  # DEBUG GeneralRejectConditionFulfill => GeneralRejectConditionFulfill_4
  # DEBUG BEGIN_STMT
  MaxNumRP_8 = Dcm_Dsl_DiagnosticSessionHandler_GetSessionMaxRcrrp (instIdx_6(D));
  # DEBUG MaxNumRP => MaxNumRP_8
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_6(D);
  _2 = Dcm_HsmInfo[_1].rpCntr;
  if (MaxNumRP_8 == _2)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (MaxNumRP_8 != 255)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  GeneralRejectConditionFulfill_9 = 1;
  # DEBUG GeneralRejectConditionFulfill => GeneralRejectConditionFulfill_9

  <bb 5> :
  # GeneralRejectConditionFulfill_3 = PHI <GeneralRejectConditionFulfill_4(2), GeneralRejectConditionFulfill_4(3), GeneralRejectConditionFulfill_9(4)>
  # DEBUG GeneralRejectConditionFulfill => GeneralRejectConditionFulfill_3
  # DEBUG BEGIN_STMT
  _10 = GeneralRejectConditionFulfill_3;
  return _10;

}


RespPendInFirstCycle (const uint8 instIdx)
{
  Dcm_TimerValueType P2ServerAdjustTime;
  Dcm_TimerValueType P2MaxTime;
  int _1;
  short unsigned int _2;
  long unsigned int _3;
  int _4;
  unsigned char _5;
  short unsigned int _6;
  short unsigned int _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  P2MaxTime_12 = Dcm_Dsl_DiagnosticSessionHandler_GetP2MaxTime (instIdx_10(D));
  # DEBUG P2MaxTime => P2MaxTime_12
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_10(D);
  _2 = Dcm_ProtocolConfig[_1].P2ServerAdjustTime;
  P2ServerAdjustTime_13 = (Dcm_TimerValueType) _2;
  # DEBUG P2ServerAdjustTime => P2ServerAdjustTime_13
  # DEBUG BEGIN_STMT
  _3 = P2ServerAdjustTime_13 + 1;
  if (P2MaxTime_12 == _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = (int) instIdx_10(D);
  _5 = Dcm_HsmInfo[_4].requestValidationStatus;
  if (_5 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) instIdx_10(D);
  _7 = _6 + 12;
  Dcm_Dsl_DiagnosticSessionHandler_StartP2Timer (_7, instIdx_10(D), 0);

  <bb 5> :
  return;

}


Dcm_SuppressResponse (const uint8 instIdx)
{
  const Dcm_NegativeResponseCodeType nrc;
  boolean retVal;
  int _1;
  int _2;
  short unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  unsigned char _7;
  int _8;
  <unnamed-unsigned:1> _9;
  unsigned char _10;
  int _11;
  unsigned char _12;
  int _13;
  <unnamed-unsigned:1> _14;
  int _15;
  <unnamed-unsigned:1> _16;
  boolean _28;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal_18 = 0;
  # DEBUG retVal => retVal_18
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_19(D);
  nrc_21 = Dcm_HsmInfo[_1].negativeResponseCode;
  # DEBUG nrc => nrc_21
  # DEBUG BEGIN_STMT
  _2 = (int) instIdx_19(D);
  _3 = Dcm_HsmInfo[_2].rpCntr;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = (int) instIdx_19(D);
  _5 = Dcm_HsmInfo[_4].serviceId;
  if (_5 > 15)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  retVal_22 = 0;
  # DEBUG retVal => retVal_22
  goto <bb 21>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _6 = (int) instIdx_19(D);
  _7 = Dcm_HsmInfo[_6].RequestType;
  if (_7 == 14)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  retVal_27 = 0;
  # DEBUG retVal => retVal_27
  goto <bb 21>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (nrc_21 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _8 = (int) instIdx_19(D);
  _9 = Dcm_HsmInfo[_8].msgContext.msgAddInfo.reqType;
  if (_9 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  _10 = nrc_21 + 239;
  if (_10 <= 1)
    goto <bb 16>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (nrc_21 == 49)
    goto <bb 16>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  if (nrc_21 == 126)
    goto <bb 16>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  if (nrc_21 == 127)
    goto <bb 16>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _11 = (int) instIdx_19(D);
  _12 = Dcm_HsmInfo[_11].serviceId;
  if (_12 <= 15)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  _13 = (int) instIdx_19(D);
  _14 = Dcm_HsmInfo[_13].msgContext.msgAddInfo.suppressPosResponse;
  if (_14 == 1)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  if (nrc_21 == 17)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  retVal_26 = 1;
  # DEBUG retVal => retVal_26
  goto <bb 21>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  retVal_25 = 0;
  # DEBUG retVal => retVal_25
  goto <bb 21>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _15 = (int) instIdx_19(D);
  _16 = Dcm_HsmInfo[_15].msgContext.msgAddInfo.suppressPosResponse;
  if (_16 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  retVal_24 = 1;
  # DEBUG retVal => retVal_24
  goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  retVal_23 = 0;
  # DEBUG retVal => retVal_23

  <bb 21> :
  # retVal_17 = PHI <retVal_22(4), retVal_27(6), retVal_25(17), retVal_24(19), retVal_23(20), retVal_26(16)>
  # DEBUG retVal => retVal_17
  # DEBUG BEGIN_STMT
  _28 = retVal_17;
  return _28;

}


Dcm_HsmDcmSfPgBufDataRequestedAction1 (const uint8 instIdx)
{
  short unsigned int _1;
  short unsigned int _2;
  int _3;
  short unsigned int _4;
  int _5;
  short unsigned int _6;
  int _7;
  short unsigned int _8;
  int _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) instIdx_10(D);
  _2 = _1 + 12;
  _3 = (int) instIdx_10(D);
  _4 = Dcm_HsmInfo[_3].TxConnectionId;
  _5 = (int) instIdx_10(D);
  _6 = Dcm_HsmInfo[_5].TxBuffer.BufferId;
  Dcm_Dsl_BufferGive (_2, _4, _6);
  # DEBUG BEGIN_STMT
  _7 = (int) instIdx_10(D);
  _8 = Dcm_HsmInfo[_7].TxConnectionId;
  _9 = (int) instIdx_10(D);
  Dcm_Dsl_TxConnectionProcessNextTxBuffer (_8, Dcm_HsmInfo[_9].TxBuffer);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfPgBufDataAvailableAction1 (const uint8 instIdx)
{
  int _1;
  unsigned char _2;
  int _3;
  int _4;
  Dcm_MsgItemType * _5;
  int _6;
  long unsigned int _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_9(D);
  _2 = Dcm_HsmInfo[_1].dspService;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (int) instIdx_9(D);
  Dcm_HsmInfo[_3].TxBuffer.FilledLength = 0;
  # DEBUG BEGIN_STMT
  _4 = (int) instIdx_9(D);
  _5 = Dcm_HsmInfo[_4].TxBuffer.BufferPtr;
  _6 = (int) instIdx_9(D);
  _7 = Dcm_HsmInfo[_6].TxBuffer.Size;
  Dcm_DspInternal_UpdatePage (_5, _7);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfPgBufSendingCancellingEntry (const uint8 instIdx)
{
  int _1;
  short unsigned int _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolSetUpCancellation (2, instIdx_4(D));
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolCancelProcessing (instIdx_4(D));
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_4(D);
  _2 = Dcm_HsmInfo[_1].TxConnectionId;
  Dcm_Dsl_TxConnectionCancelTransmit (_2);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfNormalSendingCancellingEntry (const uint8 instIdx)
{
  int _1;
  short unsigned int _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolSetUpCancellation (1, instIdx_4(D));
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_4(D);
  _2 = Dcm_HsmInfo[_1].TxConnectionId;
  Dcm_Dsl_TxConnectionCancelTransmit (_2);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfSendingEntry (const uint8 instIdx)
{
  Dcm_TransmissionTimeoutType TransmissionTimeout;
  boolean SimulateTransmission;
  struct Dcm_HsmInfoType * curHsmInfo;
  int _1;
  unsigned char _2;
  Dcm_MsgItemType * _3;
  Dcm_MsgItemType * _4;
  Dcm_MsgItemType * _5;
  unsigned char _6;
  Dcm_MsgItemType * _7;
  Dcm_MsgItemType * _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  unsigned char _15;
  short unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  unsigned char _23;
  short unsigned int _24;
  short unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  int _28;
  unsigned char _29;
  unsigned char _30;
  short unsigned int _31;
  short unsigned int _32;
  short unsigned int _33;
  short unsigned int _34;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_37(D);
  curHsmInfo_38 = &Dcm_HsmInfo[_1];
  # DEBUG curHsmInfo => curHsmInfo_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SimulateTransmission_41 = Dcm_SuppressResponse (instIdx_37(D));
  # DEBUG SimulateTransmission => SimulateTransmission_41
  # DEBUG BEGIN_STMT
  TransmissionTimeout_43 = Dcm_Dsl_DiagnosticSessionHandler_GetTimerValue (instIdx_37(D), 2);
  # DEBUG TransmissionTimeout => TransmissionTimeout_43
  # DEBUG BEGIN_STMT
  _2 = curHsmInfo_38->negativeResponseCode;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = curHsmInfo_38->NRCBuffer.BufferPtr;
  *_3 = 127;
  # DEBUG BEGIN_STMT
  _4 = curHsmInfo_38->NRCBuffer.BufferPtr;
  _5 = _4 + 1;
  _6 = curHsmInfo_38->serviceId;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  _7 = curHsmInfo_38->NRCBuffer.BufferPtr;
  _8 = _7 + 2;
  _9 = curHsmInfo_38->negativeResponseCode;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  curHsmInfo_38->NRCBuffer.FilledLength = 3;
  # DEBUG BEGIN_STMT
  _10 = (short unsigned int) instIdx_37(D);
  _11 = _10 + 12;
  _12 = curHsmInfo_38->TxConnectionId;
  _13 = curHsmInfo_38->NRCBuffer.BufferId;
  Dcm_Dsl_BufferGive (_11, _12, _13);
  # DEBUG BEGIN_STMT
  _14 = curHsmInfo_38->TxConnectionId;
  _15 = curHsmInfo_38->ComMChannelId;
  _16 = (short unsigned int) instIdx_37(D);
  _17 = _16 + 12;
  Dcm_Dsl_TxConnectionTransmit (_14, _15, _17, SimulateTransmission_41, 3, TransmissionTimeout_43, curHsmInfo_38->NRCBuffer);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _18 = (short unsigned int) instIdx_37(D);
  _19 = _18 + 12;
  _20 = curHsmInfo_38->TxConnectionId;
  _21 = curHsmInfo_38->TxBuffer.BufferId;
  Dcm_Dsl_BufferGive (_19, _20, _21);
  # DEBUG BEGIN_STMT
  _22 = curHsmInfo_38->TxConnectionId;
  _23 = curHsmInfo_38->ComMChannelId;
  _24 = (short unsigned int) instIdx_37(D);
  _25 = _24 + 12;
  _26 = curHsmInfo_38->msgContext.resDataLen;
  _27 = _26 + 1;
  Dcm_Dsl_TxConnectionTransmit (_22, _23, _25, SimulateTransmission_41, _27, TransmissionTimeout_43, curHsmInfo_38->TxBuffer);

  <bb 5> :
  # DEBUG BEGIN_STMT
  _28 = (int) instIdx_37(D);
  _29 = Dcm_HsmInfo[_28].RequestType;
  _30 = _29 + 255;
  if (_30 <= 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _31 = (short unsigned int) instIdx_37(D);
  _32 = _31 + 12;
  Dcm_Dsl_DiagnosticSessionHandler_StopTimer (_32, instIdx_37(D), 2);
  # DEBUG BEGIN_STMT
  _33 = (short unsigned int) instIdx_37(D);
  _34 = _33 + 12;
  Dcm_Dsl_DiagnosticSessionHandler_FreeP2Timer (_34, instIdx_37(D));

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfWaitForApplGuard5 (const uint8 instIdx)
{
  boolean SendResponse;
  unsigned char _1;
  _Bool _2;
  boolean _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Dcm_CheckForGeneralRejectConditions (instIdx_4(D));
  _2 = _1 == 0;
  SendResponse_6 = (boolean) _2;
  # DEBUG SendResponse => SendResponse_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = SendResponse_6;
  return _7;

}


Dcm_HsmDcmSfWaitForApplGuard4 (const uint8 instIdx)
{
  boolean SendGeneralReject;
  boolean _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SendGeneralReject_4 = Dcm_CheckForGeneralRejectConditions (instIdx_2(D));
  # DEBUG SendGeneralReject => SendGeneralReject_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = SendGeneralReject_4;
  return _5;

}


Dcm_HsmDcmSfWaitForApplGuard3 (const uint8 instIdx)
{
  boolean SendResponsePending;
  unsigned char _1;
  _Bool _2;
  boolean _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Dcm_CheckForGeneralRejectConditions (instIdx_4(D));
  _2 = _1 == 0;
  SendResponsePending_6 = (boolean) _2;
  # DEBUG SendResponsePending => SendResponsePending_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = SendResponsePending_6;
  return _7;

}


Dcm_HsmDcmSfWaitForApplGuard2 (const uint8 instIdx)
{
  boolean SendGeneralReject;
  boolean _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SendGeneralReject_4 = Dcm_CheckForGeneralRejectConditions (instIdx_2(D));
  # DEBUG SendGeneralReject => SendGeneralReject_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = SendGeneralReject_4;
  return _5;

}


Dcm_HsmDcmSfSendRpForcedAction1 (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_DspInternal_SvcFunc (instIdx_2(D), 3);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfSendRpExit (const uint8 instIdx)
{
  Dcm_TimerValueType P2StarServerAdjustTime;
  Dcm_TimerValueType P2StarMaxTime;
  struct Dcm_HsmInfoType * const curHsmInfo;
  int _1;
  int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  long unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_10(D);
  curHsmInfo_11 = &Dcm_HsmInfo[_1];
  # DEBUG curHsmInfo => curHsmInfo_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  P2StarMaxTime_14 = Dcm_Dsl_DiagnosticSessionHandler_GetP2StarMaxTime (instIdx_10(D));
  # DEBUG P2StarMaxTime => P2StarMaxTime_14
  # DEBUG BEGIN_STMT
  _2 = (int) instIdx_10(D);
  _3 = Dcm_ProtocolConfig[_2].P2StarServerAdjustTime;
  P2StarServerAdjustTime_15 = (Dcm_TimerValueType) _3;
  # DEBUG P2StarServerAdjustTime => P2StarServerAdjustTime_15
  # DEBUG BEGIN_STMT
  if (P2StarMaxTime_14 > P2StarServerAdjustTime_15)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = (short unsigned int) instIdx_10(D);
  _5 = _4 + 12;
  _6 = P2StarMaxTime_14 - P2StarServerAdjustTime_15;
  Dcm_Dsl_DiagnosticSessionHandler_StartP2Timer (_5, instIdx_10(D), _6);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _7 = (short unsigned int) instIdx_10(D);
  _8 = _7 + 12;
  Dcm_Dsl_DiagnosticSessionHandler_StartP2Timer (_8, instIdx_10(D), 0);

  <bb 5> :
  # DEBUG BEGIN_STMT
  curHsmInfo_11->responsePendingTxStatus = 0;
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfSendRpEntry (const uint8 instIdx)
{
  struct Dcm_HsmInfoType * const curHsmInfo;
  boolean SendRCRRP;
  int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  Dcm_MsgItemType * _8;
  Dcm_MsgItemType * _9;
  Dcm_MsgItemType * _10;
  unsigned char _11;
  Dcm_MsgItemType * _12;
  Dcm_MsgItemType * _13;
  short unsigned int _14;
  short unsigned int _15;
  short unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  short unsigned int _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SendRCRRP_26 = 0;
  # DEBUG SendRCRRP => SendRCRRP_26
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_27(D);
  curHsmInfo_28 = &Dcm_HsmInfo[_1];
  # DEBUG curHsmInfo => curHsmInfo_28
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  curHsmInfo_28->msgContext.msgAddInfo.suppressPosResponse = 0;
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = curHsmInfo_28->rpCntr;
  _3 = curHsmInfo_28->rpCntrConfirmed;
  if (_2 == _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = curHsmInfo_28->responsePendingTxStatus;
  if (_4 != 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SendRCRRP_32 = 1;
  # DEBUG SendRCRRP => SendRCRRP_32

  <bb 5> :
  # SendRCRRP_24 = PHI <SendRCRRP_26(2), SendRCRRP_26(3), SendRCRRP_32(4)>
  # DEBUG SendRCRRP => SendRCRRP_24
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (SendRCRRP_24 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  curHsmInfo_28->responsePendingTxStatus = 1;
  # DEBUG BEGIN_STMT
  _5 = curHsmInfo_28->rpCntr;
  _6 = _5;
  _7 = _6 + 1;
  curHsmInfo_28->rpCntr = _7;
  # DEBUG BEGIN_STMT
  _8 = curHsmInfo_28->NRCBuffer.BufferPtr;
  *_8 = 127;
  # DEBUG BEGIN_STMT
  _9 = curHsmInfo_28->NRCBuffer.BufferPtr;
  _10 = _9 + 1;
  _11 = curHsmInfo_28->serviceId;
  *_10 = _11;
  # DEBUG BEGIN_STMT
  _12 = curHsmInfo_28->NRCBuffer.BufferPtr;
  _13 = _12 + 2;
  *_13 = 120;
  # DEBUG BEGIN_STMT
  curHsmInfo_28->NRCBuffer.FilledLength = 3;
  # DEBUG BEGIN_STMT
  _14 = (short unsigned int) instIdx_27(D);
  _15 = _14 + 12;
  _16 = curHsmInfo_28->TxConnectionId;
  _17 = curHsmInfo_28->NRCBuffer.BufferId;
  Dcm_Dsl_BufferGive (_15, _16, _17);
  # DEBUG BEGIN_STMT
  _18 = curHsmInfo_28->TxConnectionId;
  _19 = curHsmInfo_28->ComMChannelId;
  _20 = (short unsigned int) instIdx_27(D);
  _21 = _20 + 12;
  Dcm_Dsl_TxConnectionTransmit (_18, _19, _21, 0, 3, 0, curHsmInfo_28->NRCBuffer);

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = (short unsigned int) instIdx_27(D);
  _23 = _22 + 12;
  Dcm_Dsl_DiagnosticSessionHandler_StopTimer (_23, instIdx_27(D), 2);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfCancelWithGeneralRejectAction1 (const uint8 instIdx)
{
  int _1;
  unsigned char _2;
  int _3;
  short unsigned int _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_6(D);
  _2 = Dcm_HsmInfo[_1].CancellationConditions.FinalTransmissionDone;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (int) instIdx_6(D);
  _4 = Dcm_HsmInfo[_3].TxConnectionId;
  Dcm_Dsl_TxConnectionCancelTransmit (_4);

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfCancelWithGeneralRejectEntry (const uint8 instIdx)
{
  struct Dcm_HsmInfoType * const curHsmInfo;
  int _1;
  unsigned char _2;
  unsigned char _3;
  Dcm_MsgItemType * _4;
  Dcm_MsgItemType * _5;
  Dcm_MsgItemType * _6;
  unsigned char _7;
  Dcm_MsgItemType * _8;
  Dcm_MsgItemType * _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  unsigned char _16;
  short unsigned int _17;
  short unsigned int _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_20(D);
  curHsmInfo_21 = &Dcm_HsmInfo[_1];
  # DEBUG curHsmInfo => curHsmInfo_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = curHsmInfo_21->serviceId;
  if (_2 == 4)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = curHsmInfo_21->serviceId;
  if (_3 == 9)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  curHsmInfo_21->negativeResponseCode = 34;
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  curHsmInfo_21->negativeResponseCode = 16;

  <bb 6> :
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolSetUpCancellation (5, instIdx_20(D));
  # DEBUG BEGIN_STMT
  _4 = curHsmInfo_21->NRCBuffer.BufferPtr;
  *_4 = 127;
  # DEBUG BEGIN_STMT
  _5 = curHsmInfo_21->NRCBuffer.BufferPtr;
  _6 = _5 + 1;
  _7 = curHsmInfo_21->serviceId;
  *_6 = _7;
  # DEBUG BEGIN_STMT
  _8 = curHsmInfo_21->NRCBuffer.BufferPtr;
  _9 = _8 + 2;
  _10 = curHsmInfo_21->negativeResponseCode;
  *_9 = _10;
  # DEBUG BEGIN_STMT
  curHsmInfo_21->NRCBuffer.FilledLength = 3;
  # DEBUG BEGIN_STMT
  _11 = (short unsigned int) instIdx_20(D);
  _12 = _11 + 12;
  _13 = curHsmInfo_21->TxConnectionId;
  _14 = curHsmInfo_21->NRCBuffer.BufferId;
  Dcm_Dsl_BufferGive (_12, _13, _14);
  # DEBUG BEGIN_STMT
  _15 = curHsmInfo_21->TxConnectionId;
  _16 = curHsmInfo_21->ComMChannelId;
  _17 = (short unsigned int) instIdx_20(D);
  _18 = _17 + 12;
  Dcm_Dsl_TxConnectionTransmit (_15, _16, _18, 0, 3, 0, curHsmInfo_21->NRCBuffer);
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolCancelProcessing (instIdx_20(D));
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfWaitForTxAndProtocolEntry (const uint8 instIdx)
{
  int _1;
  short unsigned int _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolSetUpCancellation (5, instIdx_4(D));
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolCancelProcessing (instIdx_4(D));
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_4(D);
  _2 = Dcm_HsmInfo[_1].TxConnectionId;
  Dcm_Dsl_TxConnectionCancelTransmit (_2);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfWaitForProtocolEntry (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolSetUpCancellation (4, instIdx_2(D));
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolCancelProcessing (instIdx_2(D));
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfRequestCancellingEntry (const uint8 instIdx)
{
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  int _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) instIdx_6(D);
  _2 = _1 + 12;
  Dcm_Dsl_DiagnosticSessionHandler_StopTimer (_2, instIdx_6(D), 2);
  # DEBUG BEGIN_STMT
  _3 = (short unsigned int) instIdx_6(D);
  _4 = _3 + 12;
  Dcm_Dsl_DiagnosticSessionHandler_FreeP2Timer (_4, instIdx_6(D));
  # DEBUG BEGIN_STMT
  _5 = (int) instIdx_6(D);
  Dcm_HsmInfo[_5].retryTimer = 0;
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfRequestProcessingAction3 (const uint8 instIdx)
{
  Dcm_ProtocolIndexType protocolIndex;
  short unsigned int _1;
  short unsigned int _2;
  int _3;
  short unsigned int _4;
  int _5;
  short unsigned int _6;
  int _7;
  short unsigned int _8;
  short unsigned int _9;
  short unsigned int _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  protocolIndex_16 = instIdx_15(D);
  # DEBUG protocolIndex => protocolIndex_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) protocolIndex_16;
  _2 = _1 + 12;
  _3 = (int) instIdx_15(D);
  _4 = Dcm_HsmInfo[_3].RxBuffer.BufferId;
  _5 = (int) instIdx_15(D);
  _6 = Dcm_HsmInfo[_5].TxBuffer.BufferId;
  _7 = (int) instIdx_15(D);
  _8 = Dcm_HsmInfo[_7].NRCBuffer.BufferId;
  Dcm_Dsl_BufferFreeRxTxNRC (_2, _4, _6, _8);
  # DEBUG BEGIN_STMT
  _9 = (short unsigned int) protocolIndex_16;
  _10 = _9 + 12;
  Dcm_Dsl_DiagnosticSessionHandler_StopTimer (_10, protocolIndex_16, 2);
  # DEBUG BEGIN_STMT
  _11 = (short unsigned int) protocolIndex_16;
  _12 = _11 + 12;
  Dcm_Dsl_DiagnosticSessionHandler_FreeP2Timer (_12, protocolIndex_16);
  # DEBUG BEGIN_STMT
  _13 = (short unsigned int) instIdx_15(D);
  _14 = _13 + 12;
  Dcm_Dsl_Supervisor_ProtocolFree (_14);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfRequestProcessingEntry (const uint8 instIdx)
{
  int _1;
  int _2;
  short unsigned int _3;
  int _4;
  short unsigned int _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_7(D);
  Dcm_HsmInfo[_1].SetProgConditionsFinished = 0;
  # DEBUG BEGIN_STMT
  Dcm_DsdInternal_DispatchSvcReq (instIdx_7(D));
  # DEBUG BEGIN_STMT
  _2 = (int) instIdx_7(D);
  _3 = Dcm_HsmInfo[_2].rpCntr;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = (int) instIdx_7(D);
  _5 = Dcm_HsmInfo[_4].rpCntrConfirmed;
  if (_5 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RespPendInFirstCycle (instIdx_7(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfWaitForRoeProcessingCancellationEntry (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolSetUpCancellation (4, instIdx_2(D));
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ProtocolCancelProcessing (instIdx_2(D));
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfROEResponseProcessingEntry (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_DsdInternal_DispatchSvcReq (instIdx_2(D));
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfROEProcessingAction3 (const uint8 instIdx)
{
  short unsigned int _1;
  short unsigned int _2;
  int _3;
  short unsigned int _4;
  int _5;
  short unsigned int _6;
  int _7;
  short unsigned int _8;
  short unsigned int _9;
  short unsigned int _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) instIdx_11(D);
  _2 = _1 + 12;
  _3 = (int) instIdx_11(D);
  _4 = Dcm_HsmInfo[_3].RxBuffer.BufferId;
  _5 = (int) instIdx_11(D);
  _6 = Dcm_HsmInfo[_5].TxBuffer.BufferId;
  _7 = (int) instIdx_11(D);
  _8 = Dcm_HsmInfo[_7].NRCBuffer.BufferId;
  Dcm_Dsl_BufferFreeRxTxNRC (_2, _4, _6, _8);
  # DEBUG BEGIN_STMT
  _9 = (short unsigned int) instIdx_11(D);
  _10 = _9 + 12;
  Dcm_Dsl_Supervisor_ProtocolFree (_10);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfPeriodicSendingUUDTFinishingAction2 (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfPeriodicSendingUUDTFinishingAction1 (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfPeriodicSendingUUDTAction1 (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfPeriodicSendingUUDTEntry (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfPeriodicProcessingUUDTAction1 (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfPeriodicResponseProcessingEntry (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfPeriodicProcessingAction1 (const uint8 instIdx)
{
  short unsigned int _1;
  short unsigned int _2;
  int _3;
  short unsigned int _4;
  int _5;
  short unsigned int _6;
  int _7;
  short unsigned int _8;
  short unsigned int _9;
  short unsigned int _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) instIdx_11(D);
  _2 = _1 + 12;
  _3 = (int) instIdx_11(D);
  _4 = Dcm_HsmInfo[_3].RxBuffer.BufferId;
  _5 = (int) instIdx_11(D);
  _6 = Dcm_HsmInfo[_5].TxBuffer.BufferId;
  _7 = (int) instIdx_11(D);
  _8 = Dcm_HsmInfo[_7].NRCBuffer.BufferId;
  Dcm_Dsl_BufferFreeRxTxNRC (_2, _4, _6, _8);
  # DEBUG BEGIN_STMT
  _9 = (short unsigned int) instIdx_11(D);
  _10 = _9 + 12;
  Dcm_Dsl_Supervisor_ProtocolFree (_10);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfConfirmingOkEntry (const uint8 instIdx)
{
  Dcm_ConfirmationStatusType status;
  const struct Dcm_HsmInfoType * curHsmInfo;
  int _1;
  unsigned char _2;
  unsigned char _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_6(D);
  curHsmInfo_7 = &Dcm_HsmInfo[_1];
  # DEBUG curHsmInfo => curHsmInfo_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = curHsmInfo_7->negativeResponseCode;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  status_10 = 0;
  # DEBUG status => status_10
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  status_9 = 2;
  # DEBUG status => status_9

  <bb 5> :
  # status_4 = PHI <status_10(3), status_9(4)>
  # DEBUG status => status_4
  # DEBUG BEGIN_STMT
  _3 = curHsmInfo_7->RequestType;
  if (_3 != 14)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Dcm_DspInternal_DcmConfirmation (instIdx_6(D), status_4);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Dcm_HsmEmitInst (&Dcm_HsmScDcm, instIdx_6(D), 6);

  <bb 8> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfConfirmingNOkEntry (const uint8 instIdx)
{
  Dcm_ConfirmationStatusType status;
  const struct Dcm_HsmInfoType * curHsmInfo;
  int _1;
  unsigned char _2;
  unsigned char _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_6(D);
  curHsmInfo_7 = &Dcm_HsmInfo[_1];
  # DEBUG curHsmInfo => curHsmInfo_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = curHsmInfo_7->negativeResponseCode;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  status_10 = 1;
  # DEBUG status => status_10
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  status_9 = 3;
  # DEBUG status => status_9

  <bb 5> :
  # status_4 = PHI <status_10(3), status_9(4)>
  # DEBUG status => status_4
  # DEBUG BEGIN_STMT
  _3 = curHsmInfo_7->RequestType;
  if (_3 != 14)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Dcm_DspInternal_DcmConfirmation (instIdx_6(D), status_4);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Dcm_HsmEmitInst (&Dcm_HsmScDcm, instIdx_6(D), 6);

  <bb 8> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfInServiceAction1 (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_DspInternal_SvcFunc (instIdx_2(D), 1);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfInServiceEntry (const uint8 instIdx)
{
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  short unsigned int _7;
  int _8;
  int _9;
  unsigned char _10;
  int _11;
  int _12;
  short unsigned int _13;
  int _14;
  int _15;
  short unsigned int _16;
  int _17;
  int _18;
  int _19;
  int _20;
  unsigned char _21;
  int _22;
  int _23;
  short unsigned int _24;
  int _25;
  int _26;
  short unsigned int _27;
  int _28;
  int _29;
  unsigned char _30;
  int _31;
  int _32;
  int _33;
  int _34;
  int _35;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_38(D);
  Dcm_HsmInfo[_1].CancellationConditions.CancellationType = 0;
  # DEBUG BEGIN_STMT
  _2 = (int) instIdx_38(D);
  Dcm_HsmInfo[_2].CancellationConditions.FinalTransmissionDone = 0;
  # DEBUG BEGIN_STMT
  _3 = (int) instIdx_38(D);
  Dcm_HsmInfo[_3].negativeResponseCode = 0;
  # DEBUG BEGIN_STMT
  _4 = (int) instIdx_38(D);
  Dcm_HsmInfo[_4].msgContext.msgAddInfo.suppressPosResponse = 0;
  # DEBUG BEGIN_STMT
  _5 = (int) instIdx_38(D);
  _6 = (int) instIdx_38(D);
  _7 = Dcm_HsmInfo[_5].NextJob.JobRxConnectionId;
  Dcm_HsmInfo[_6].RxConnectionId = _7;
  # DEBUG BEGIN_STMT
  _8 = (int) instIdx_38(D);
  _9 = (int) instIdx_38(D);
  _10 = Dcm_HsmInfo[_8].NextJob.JobComMChannelId;
  Dcm_HsmInfo[_9].ComMChannelId = _10;
  # DEBUG BEGIN_STMT
  _11 = (int) instIdx_38(D);
  _12 = (int) instIdx_38(D);
  _13 = Dcm_HsmInfo[_11].NextJob.JobTxConnectionId;
  Dcm_HsmInfo[_12].TxConnectionId = _13;
  # DEBUG BEGIN_STMT
  _14 = (int) instIdx_38(D);
  _15 = (int) instIdx_38(D);
  _16 = Dcm_HsmInfo[_14].NextJob.JobTesterSourceAddress;
  Dcm_HsmInfo[_15].TesterSourceAddress = _16;
  # DEBUG BEGIN_STMT
  _17 = (int) instIdx_38(D);
  _18 = (int) instIdx_38(D);
  Dcm_HsmInfo[_18].RxBuffer = Dcm_HsmInfo[_17].NextJob.JobRxBuffer;
  # DEBUG BEGIN_STMT
  _19 = (int) instIdx_38(D);
  _20 = (int) instIdx_38(D);
  _21 = Dcm_HsmInfo[_19].NextJob.JobRequestType;
  Dcm_HsmInfo[_20].RequestType = _21;
  # DEBUG BEGIN_STMT
  _22 = (int) instIdx_38(D);
  _23 = (int) instIdx_38(D);
  _24 = Dcm_HsmInfo[_22].NextJob.JobRpCntr;
  Dcm_HsmInfo[_23].rpCntr = _24;
  # DEBUG BEGIN_STMT
  _25 = (int) instIdx_38(D);
  _26 = (int) instIdx_38(D);
  _27 = Dcm_HsmInfo[_25].NextJob.JobRpCntrConfirmed;
  Dcm_HsmInfo[_26].rpCntrConfirmed = _27;
  # DEBUG BEGIN_STMT
  _28 = (int) instIdx_38(D);
  _29 = (int) instIdx_38(D);
  _30 = Dcm_HsmInfo[_28].NextJob.JobResponsePendingTxStatus;
  Dcm_HsmInfo[_29].responsePendingTxStatus = _30;
  # DEBUG BEGIN_STMT
  _31 = (int) instIdx_38(D);
  Dcm_HsmInfo[_31].NextJob.JobRxConnectionId = 6;
  # DEBUG BEGIN_STMT
  _32 = (int) instIdx_38(D);
  Dcm_HsmInfo[_32].NextJob.JobComMChannelId = 1;
  # DEBUG BEGIN_STMT
  _33 = (int) instIdx_38(D);
  Dcm_HsmInfo[_33].NextJob.JobTxConnectionId = 6;
  # DEBUG BEGIN_STMT
  _34 = (int) instIdx_38(D);
  Dcm_HsmInfo[_34].NextJob.JobTesterSourceAddress = 0;
  # DEBUG BEGIN_STMT
  _35 = (int) instIdx_38(D);
  Dcm_HsmInfo[_35].NextJob.JobRequestType = 0;
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfOosNotifiedEntry (const uint8 instIdx)
{
  int _1;
  unsigned char _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  int _6;
  unsigned char _7;
  int _8;
  short unsigned int _9;
  int _10;
  short unsigned int _11;
  int _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_14(D);
  _2 = Dcm_HsmInfo[_1].RequestType;
  _3 = _2 + 255;
  if (_3 <= 1)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _4 = (int) instIdx_14(D);
  _5 = Dcm_HsmInfo[_4].RequestType;
  if (_5 == 8)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _6 = (int) instIdx_14(D);
  _7 = Dcm_HsmInfo[_6].RequestType;
  if (_7 == 9)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _8 = (int) instIdx_14(D);
  _9 = Dcm_HsmInfo[_8].RxConnectionId;
  if (_9 != 15)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _10 = (int) instIdx_14(D);
  _11 = Dcm_HsmInfo[_10].RxConnectionId;
  Dcm_Dsl_Supervisor_ProcessingEnd (_11);

  <bb 7> :
  # DEBUG BEGIN_STMT
  _12 = (int) instIdx_14(D);
  Dcm_HsmInfo[_12].requestValidationStatus = 0;
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfOosInitAction1 (const uint8 instIdx)
{
  struct Dcm_RxPduIdInfoType RxPduIdInfo;
  const struct Dcm_SesTabConfigType * sesTabConfig;
  const uint8 currentServiceID;
  uint8_least j;
  int _1;
  Dcm_MsgItemType * _2;
  int _3;
  const struct Dcm_SesTabEntryConfigType * _4;
  long unsigned int _5;
  const struct Dcm_SesTabEntryConfigType * _6;
  unsigned char _7;
  int _8;
  Dcm_MsgItemType * _9;
  Dcm_MsgItemType * _10;
  unsigned char _11;
  unsigned char _12;
  long unsigned int _13;
  unsigned char _14;
  long unsigned int _15;
  int _16;
  int _17;
  int _18;
  short unsigned int _19;
  int _20;

  <bb 2> :
  # DEBUG BEGIN_STMT
  j_24 = 0;
  # DEBUG j => j_24
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_25(D);
  _2 = Dcm_HsmInfo[_1].NextJob.JobRxBuffer.BufferPtr;
  currentServiceID_27 = *_2;
  # DEBUG currentServiceID => currentServiceID_27
  # DEBUG BEGIN_STMT
  _3 = (int) instIdx_25(D);
  sesTabConfig_28 = &Dcm_SesTabConfig[_3];
  # DEBUG sesTabConfig => sesTabConfig_28
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (currentServiceID_27 == 16)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  j_29 = 0;
  # DEBUG j => j_29
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _4 = sesTabConfig_28->SessionEntries;
  _5 = j_21 * 12;
  _6 = _4 + _5;
  _7 = _6->SesCtrl;
  _8 = (int) instIdx_25(D);
  _9 = Dcm_HsmInfo[_8].NextJob.JobRxBuffer.BufferPtr;
  _10 = _9 + 1;
  _11 = *_10;
  if (_7 == _11)
    goto <bb 7>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  j_30 = j_21 + 1;
  # DEBUG j => j_30

  <bb 6> :
  # j_21 = PHI <j_29(3), j_30(5)>
  # DEBUG j => j_21
  # DEBUG BEGIN_STMT
  _12 = sesTabConfig_28->NumEntries;
  _13 = (long unsigned int) _12;
  if (j_21 < _13)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # j_22 = PHI <j_24(2), j_21(4), j_21(6)>
  # DEBUG j => j_22
  # DEBUG BEGIN_STMT
  _14 = sesTabConfig_28->NumEntries;
  _15 = (long unsigned int) _14;
  if (j_22 >= _15)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  if (currentServiceID_27 == 16)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _16 = (int) instIdx_25(D);
  Dcm_HsmInfo[_16].NextJob.JobRequestType = 9;
  # DEBUG BEGIN_STMT
  _17 = (int) instIdx_25(D);
  Dcm_HsmInfo[_17].retryTimer = 1;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 75, 6);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _18 = (int) instIdx_25(D);
  _19 = Dcm_HsmInfo[_18].NextJob.JobRxConnectionId;
  Dcm_Dsl_RxConnectionGetRxPduIdInformation (_19, &RxPduIdInfo);
  # DEBUG BEGIN_STMT
  _20 = (int) instIdx_25(D);
  Dcm_HsmInfo[_20].retryTimer = 1;
  RxPduIdInfo ={v} {CLOBBER};

  <bb 11> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfOutOfServiceAction8 (const uint8 instIdx)
{
  short unsigned int _1;
  short unsigned int _2;
  int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) instIdx_9(D);
  _2 = _1 + 12;
  _3 = (int) instIdx_9(D);
  _4 = Dcm_HsmInfo[_3].NextJob.JobRxBuffer.BufferId;
  Dcm_Dsl_BufferFree (_2, _4);
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _5 = (short unsigned int) instIdx_9(D);
  _6 = _5 + 12;
  Dcm_Dsl_Supervisor_ProtocolFree (_6);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfOutOfServiceGuard8 (const uint8 instIdx)
{
  boolean retVal;
  unsigned char _1;
  _Bool _2;
  boolean _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal_3 = 0;
  # DEBUG retVal => retVal_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Dcm_Roe_CheckForTxEnable ();
  _2 = _1 == 0;
  retVal_6 = (boolean) _2;
  # DEBUG retVal => retVal_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = retVal_6;
  return _7;

}


Dcm_HsmDcmSfOutOfServiceAction7 (const uint8 instIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfOutOfServiceGuard7 (const uint8 instIdx)
{
  boolean retVal;
  boolean _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal_1 = 0;
  # DEBUG retVal => retVal_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retVal_4 = Dcm_Roe_CheckForTxEnable ();
  # DEBUG retVal => retVal_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = retVal_4;
  return _5;

}


Dcm_HsmDcmSfOutOfServiceAction4 (const uint8 instIdx)
{
  short unsigned int _1;
  short unsigned int _2;
  int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) instIdx_9(D);
  _2 = _1 + 12;
  _3 = (int) instIdx_9(D);
  _4 = Dcm_HsmInfo[_3].NextJob.JobRxBuffer.BufferId;
  Dcm_Dsl_BufferFree (_2, _4);
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _5 = (short unsigned int) instIdx_9(D);
  _6 = _5 + 12;
  Dcm_Dsl_Supervisor_ProtocolFree (_6);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfOutOfServiceGuard4 (const uint8 instIdx)
{
  boolean guardResult;
  boolean _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  guardResult_1 = 0;
  # DEBUG guardResult => guardResult_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = guardResult_1;
  return _2;

}


Dcm_HsmDcmSfOutOfServiceGuard3 (const uint8 instIdx)
{
  boolean guardResult;
  boolean _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  guardResult_1 = 0;
  # DEBUG guardResult => guardResult_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = guardResult_1;
  return _2;

}


Dcm_HsmDcmSfOutOfServiceAction2 (const uint8 instIdx)
{
  short unsigned int _1;
  short unsigned int _2;
  int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) instIdx_9(D);
  _2 = _1 + 12;
  _3 = (int) instIdx_9(D);
  _4 = Dcm_HsmInfo[_3].NextJob.JobRxBuffer.BufferId;
  Dcm_Dsl_BufferFree (_2, _4);
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _5 = (short unsigned int) instIdx_9(D);
  _6 = _5 + 12;
  Dcm_Dsl_Supervisor_ProtocolFree (_6);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfOutOfServiceGuard2 (const uint8 instIdx)
{
  boolean guardResult;
  boolean _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  guardResult_1 = 0;
  # DEBUG guardResult => guardResult_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = guardResult_1;
  return _2;

}


Dcm_HsmDcmSfOutOfServiceGuard1 (const uint8 instIdx)
{
  boolean guardResult;
  boolean _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  guardResult_1 = 0;
  # DEBUG guardResult => guardResult_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = guardResult_1;
  return _2;

}


Dcm_HsmDcmSfWaitForFullComAction3 (const uint8 instIdx)
{
  int _1;
  int _2;
  short unsigned int _3;
  int _4;
  int _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_9(D);
  _2 = (int) instIdx_9(D);
  _3 = Dcm_HsmInfo[_1].NextJob.JobTxConnectionId;
  Dcm_HsmInfo[_2].TxConnectionId = _3;
  # DEBUG BEGIN_STMT
  _4 = (int) instIdx_9(D);
  _5 = (int) instIdx_9(D);
  _6 = Dcm_HsmInfo[_4].NextJob.JobRxConnectionId;
  Dcm_HsmInfo[_5].RxConnectionId = _6;
  # DEBUG BEGIN_STMT
  _7 = (short unsigned int) instIdx_9(D);
  _8 = _7 + 12;
  Dcm_Dsl_Supervisor_ProtocolFree (_8);
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfWaitForFullComGuard3 (const uint8 instIdx)
{
  boolean ResponseNotRequired;
  unsigned char _1;
  _Bool _2;
  boolean _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Dcm_BootloaderResponseRequired (instIdx_4(D));
  _2 = _1 == 0;
  ResponseNotRequired_6 = (boolean) _2;
  # DEBUG ResponseNotRequired => ResponseNotRequired_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = ResponseNotRequired_6;
  return _7;

}


Dcm_HsmDcmSfWaitForFullComAction2 (const uint8 instIdx)
{
  const uint8 currentServiceID;
  struct Dcm_HsmInfoType * const curHsmInfo;
  const struct Dcm_SesTabConfigType * sesTabConfig;
  uint8 sesTabIdxNew;
  uint8_least SessionIndex;
  boolean SessionIndexFound;
  uint16 P2StarTime;
  int _1;
  int _2;
  Dcm_MsgItemType * _3;
  const struct Dcm_SesTabEntryConfigType * _4;
  long unsigned int _5;
  const struct Dcm_SesTabEntryConfigType * _6;
  unsigned char _7;
  Dcm_MsgItemType * _8;
  Dcm_MsgItemType * _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  struct Dcm_BufferType * _13;
  Dcm_MsgItemType * _14;
  unsigned char _15;
  Dcm_MsgItemType * _16;
  unsigned char _17;
  Dcm_MsgItemType * _18;
  Dcm_MsgItemType * _19;
  Dcm_MsgItemType * _20;
  unsigned char _21;
  const struct Dcm_SesTabEntryConfigType * _22;
  unsigned int _23;
  unsigned int _24;
  const struct Dcm_SesTabEntryConfigType * _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  const struct Dcm_SesTabEntryConfigType * _29;
  unsigned int _30;
  unsigned int _31;
  const struct Dcm_SesTabEntryConfigType * _32;
  short unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  Dcm_MsgItemType * _37;
  Dcm_MsgItemType * _38;
  unsigned char _39;
  const struct Dcm_SesTabEntryConfigType * _40;
  unsigned int _41;
  unsigned int _42;
  const struct Dcm_SesTabEntryConfigType * _43;
  short unsigned int _44;
  unsigned char _45;
  Dcm_MsgItemType * _46;
  Dcm_MsgItemType * _47;
  unsigned char _48;
  short unsigned int _49;
  Dcm_MsgItemType * _50;
  Dcm_MsgItemType * _51;
  unsigned char _52;
  Dcm_MsgItemType * _53;
  Dcm_MsgItemType * _54;
  unsigned char _55;
  Dcm_MsgItemType * _56;
  unsigned char _57;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SessionIndexFound_63 = 0;
  # DEBUG SessionIndexFound => SessionIndexFound_63
  # DEBUG BEGIN_STMT
  SessionIndex_64 = 0;
  # DEBUG SessionIndex => SessionIndex_64
  # DEBUG BEGIN_STMT
  sesTabIdxNew_65 = 0;
  # DEBUG sesTabIdxNew => sesTabIdxNew_65
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_66(D);
  sesTabConfig_67 = &Dcm_SesTabConfig[_1];
  # DEBUG sesTabConfig => sesTabConfig_67
  # DEBUG BEGIN_STMT
  _2 = (int) instIdx_66(D);
  curHsmInfo_68 = &Dcm_HsmInfo[_2];
  # DEBUG curHsmInfo => curHsmInfo_68
  # DEBUG BEGIN_STMT
  _3 = curHsmInfo_68->NextJob.JobRxBuffer.BufferPtr;
  currentServiceID_70 = *_3;
  # DEBUG currentServiceID => currentServiceID_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (currentServiceID_70 == 16)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = sesTabConfig_67->SessionEntries;
  _5 = SessionIndex_59 * 12;
  _6 = _4 + _5;
  _7 = _6->SesCtrl;
  _8 = curHsmInfo_68->NextJob.JobRxBuffer.BufferPtr;
  _9 = _8 + 1;
  _10 = *_9;
  if (_7 == _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SessionIndexFound_72 = 1;
  # DEBUG SessionIndexFound => SessionIndexFound_72
  # DEBUG BEGIN_STMT
  sesTabIdxNew_73 = (uint8) SessionIndex_59;
  # DEBUG sesTabIdxNew => sesTabIdxNew_73
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SessionIndex_71 = SessionIndex_59 + 1;
  # DEBUG SessionIndex => SessionIndex_71

  <bb 6> :
  # SessionIndexFound_58 = PHI <SessionIndexFound_63(2), SessionIndexFound_72(4), SessionIndexFound_58(5)>
  # SessionIndex_59 = PHI <SessionIndex_64(2), SessionIndex_59(4), SessionIndex_71(5)>
  # sesTabIdxNew_60 = PHI <sesTabIdxNew_65(2), sesTabIdxNew_73(4), sesTabIdxNew_60(5)>
  # DEBUG sesTabIdxNew => sesTabIdxNew_60
  # DEBUG SessionIndex => SessionIndex_59
  # DEBUG SessionIndexFound => SessionIndexFound_58
  # DEBUG BEGIN_STMT
  if (SessionIndexFound_58 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # sesTabIdxNew_61 = PHI <sesTabIdxNew_65(2), sesTabIdxNew_60(6)>
  # DEBUG sesTabIdxNew => sesTabIdxNew_61
  # DEBUG BEGIN_STMT
  _11 = (short unsigned int) instIdx_66(D);
  _12 = _11 + 12;
  _13 = &curHsmInfo_68->TxBuffer;
  Dcm_Dsl_BufferAllocate (_12, 4, 0, _13);
  # DEBUG BEGIN_STMT
  _14 = curHsmInfo_68->NextJob.JobRxBuffer.BufferPtr;
  _15 = *_14;
  _16 = curHsmInfo_68->TxBuffer.BufferPtr;
  _17 = _15 | 64;
  *_16 = _17;
  # DEBUG BEGIN_STMT
  _18 = curHsmInfo_68->NextJob.JobRxBuffer.BufferPtr;
  _19 = curHsmInfo_68->TxBuffer.BufferPtr;
  _20 = _19 + 1;
  _21 = MEM[(Dcm_MsgItemType *)_18 + 1B];
  *_20 = _21;
  # DEBUG BEGIN_STMT
  if (currentServiceID_70 == 16)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _22 = sesTabConfig_67->SessionEntries;
  _23 = (unsigned int) sesTabIdxNew_61;
  _24 = _23 * 12;
  _25 = _22 + _24;
  _26 = _25->P2StarMaxTime;
  _27 = _26 * 5;
  _28 = _27 / 10;
  P2StarTime_79 = (uint16) _28;
  # DEBUG P2StarTime => P2StarTime_79
  # DEBUG BEGIN_STMT
  _29 = sesTabConfig_67->SessionEntries;
  _30 = (unsigned int) sesTabIdxNew_61;
  _31 = _30 * 12;
  _32 = _29 + _31;
  _33 = _32->P2MaxTime;
  _34 = (unsigned int) _33;
  _35 = _34 * 5;
  _36 = _35 >> 8;
  _37 = curHsmInfo_68->TxBuffer.BufferPtr;
  _38 = _37 + 2;
  _39 = (unsigned char) _36;
  *_38 = _39;
  # DEBUG BEGIN_STMT
  _40 = sesTabConfig_67->SessionEntries;
  _41 = (unsigned int) sesTabIdxNew_61;
  _42 = _41 * 12;
  _43 = _40 + _42;
  _44 = _43->P2MaxTime;
  _45 = (unsigned char) _44;
  _46 = curHsmInfo_68->TxBuffer.BufferPtr;
  _47 = _46 + 3;
  _48 = _45 * 5;
  *_47 = _48;
  # DEBUG BEGIN_STMT
  _49 = P2StarTime_79 >> 8;
  _50 = curHsmInfo_68->TxBuffer.BufferPtr;
  _51 = _50 + 4;
  _52 = (unsigned char) _49;
  *_51 = _52;
  # DEBUG BEGIN_STMT
  _53 = curHsmInfo_68->TxBuffer.BufferPtr;
  _54 = _53 + 5;
  _55 = (unsigned char) P2StarTime_79;
  *_54 = _55;
  # DEBUG BEGIN_STMT
  curHsmInfo_68->msgContext.resDataLen = 5;
  # DEBUG BEGIN_STMT
  curHsmInfo_68->TxBuffer.FilledLength = 6;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  curHsmInfo_68->msgContext.resDataLen = 1;
  # DEBUG BEGIN_STMT
  curHsmInfo_68->TxBuffer.FilledLength = 2;

  <bb 10> :
  # DEBUG BEGIN_STMT
  _56 = curHsmInfo_68->NextJob.JobRxBuffer.BufferPtr;
  _57 = *_56;
  curHsmInfo_68->msgContext.idContext = _57;
  # DEBUG BEGIN_STMT
  return;

}


Dcm_HsmDcmSfWaitForFullComGuard2 (const uint8 instIdx)
{
  boolean ResponseRequired;
  boolean _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ResponseRequired_4 = Dcm_BootloaderResponseRequired (instIdx_2(D));
  # DEBUG ResponseRequired => ResponseRequired_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = ResponseRequired_4;
  return _5;

}


Dcm_HsmDcmSfWaitForFullComAction1 (const uint8 instIdx)
{
  struct Dcm_RxPduIdInfoType RxPduIdInfo;
  Dcm_ComMChannelOperationStateType ComMChnTxState;
  Dcm_ComMChannelOperationStateType ComMChnRxState;
  int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  int _5;
  int _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ComMChnRxState_8 = 0;
  # DEBUG ComMChnRxState => ComMChnRxState_8
  # DEBUG BEGIN_STMT
  ComMChnTxState_9 = 0;
  # DEBUG ComMChnTxState => ComMChnTxState_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_10(D);
  _2 = Dcm_HsmInfo[_1].NextJob.JobRxConnectionId;
  Dcm_Dsl_RxConnectionGetRxPduIdInformation (_2, &RxPduIdInfo);
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = RxPduIdInfo.ComMChannelId;
  ComMChnRxState_15 = Dcm_Dsl_ComMChannelStateManager_GetRxState (_3);
  # DEBUG ComMChnRxState => ComMChnRxState_15
  # DEBUG BEGIN_STMT
  _4 = RxPduIdInfo.ComMChannelId;
  ComMChnTxState_17 = Dcm_Dsl_ComMChannelStateManager_GetTxState (_4);
  # DEBUG ComMChnTxState => ComMChnTxState_17
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ComMChnRxState_15 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (ComMChnTxState_17 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = (int) instIdx_10(D);
  Dcm_HsmInfo[_5].retryTimer = 0;
  # DEBUG BEGIN_STMT
  Dcm_HsmEmitToSelfInst (&Dcm_HsmScDcm, instIdx_10(D), 20);
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _6 = (int) instIdx_10(D);
  Dcm_HsmInfo[_6].retryTimer = 1;

  <bb 6> :
  RxPduIdInfo ={v} {CLOBBER};
  return;

}


Dcm_HsmDcmSfTopEntry (const uint8 instIdx)
{
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx_9(D);
  Dcm_HsmInfo[_1].CancellationConditions.ServiceProcessingDone = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (int) instIdx_9(D);
  Dcm_HsmInfo[_2].retryTimer = 0;
  # DEBUG BEGIN_STMT
  _3 = (int) instIdx_9(D);
  Dcm_HsmInfo[_3].jumpToBLSupport = 0;
  # DEBUG BEGIN_STMT
  _4 = (int) instIdx_9(D);
  Dcm_HsmInfo[_4].jumpToBLExecution = 0;
  # DEBUG BEGIN_STMT
  _5 = (int) instIdx_9(D);
  Dcm_HsmInfo[_5].msgContext.msgAddInfo.requestOrigin = 0;
  # DEBUG BEGIN_STMT
  _6 = (int) instIdx_9(D);
  Dcm_HsmInfo[_6].responsePendingTxStatus = 0;
  # DEBUG BEGIN_STMT
  _7 = (int) instIdx_9(D);
  Dcm_HsmInfo[_7].requestValidationStatus = 0;
  # DEBUG BEGIN_STMT
  _8 = (int) instIdx_9(D);
  Dcm_HsmInfo[_8].RxConnectionId = 15;
  # DEBUG BEGIN_STMT
  return;

}


