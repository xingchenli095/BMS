
Marking local functions:


Marking externally visible functions: OS_AdvanceCounter


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_kernDisableLevel/4 (OS_kernDisableLevel) @06be6ca8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_AdvanceCounter/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CORTEXM_IntSetDisablingLevel/3 (OS_CORTEXM_IntSetDisablingLevel) @06c0ad20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_AdvanceCounter/0 OS_AdvanceCounter/0 
  Calls: 
OS_EnqueueAlarmNoAdjust/2 (OS_EnqueueAlarmNoAdjust) @06c0ac40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_AdvanceCounter/0 
  Calls: 
OS_alarmTableBase/1 (OS_alarmTableBase) @06be6b40
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_AdvanceCounter/0 (read)OS_AdvanceCounter/0 (read)OS_AdvanceCounter/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_AdvanceCounter/0 (OS_AdvanceCounter) @06c0aa80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_alarmTableBase/1 (read)OS_alarmTableBase/1 (read)OS_alarmTableBase/1 (read)OS_kernDisableLevel/4 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_CORTEXM_IntSetDisablingLevel/3 OS_CORTEXM_IntSetDisablingLevel/3 OS_EnqueueAlarmNoAdjust/2 
   Indirect call
__attribute__((target ("general-regs-only")))
OS_AdvanceCounter (const struct os_counter_t * cs, struct os_counterdynamic_t * cd, os_tick_t adv, os_intstatus_t is)
{
  os_tick_t returnTicks;
  struct os_alarmdynamic_t * ad;
  os_alarmid_t a;
  os_tick_t D.7431;
  os_tick_t iftmp.0;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  returnTicks = 0;
  # DEBUG BEGIN_STMT
  _1 = cs->maxallowedvalue;
  _2 = cd->current;
  _3 = _1 - _2;
  if (adv > _3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = cd->current;
  _5 = adv + _4;
  _6 = cs->maxallowedvalue;
  _7 = _5 - _6;
  iftmp.0 = _7 + 4294967295;
  goto <bb 5>; [INV]

  <bb 4> :
  _8 = cd->current;
  iftmp.0 = adv + _8;

  <bb 5> :
  cd->current = iftmp.0;
  # DEBUG BEGIN_STMT
  _9 = cd->error;
  _10 = adv + _9;
  cd->error = _10;
  # DEBUG BEGIN_STMT
  _11 = cd->lock;
  if (_11 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  cd->error = adv;
  # DEBUG BEGIN_STMT
  cd->lock = 1;
  # DEBUG BEGIN_STMT
  a = cd->head;
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_alarmTableBase.1_12 = OS_alarmTableBase;
  _13 = (unsigned int) a;
  _14 = _13 * 28;
  _15 = OS_alarmTableBase.1_12 + _14;
  ad = _15->dynamic;
  # DEBUG BEGIN_STMT
  _16 = ad->delta;
  _17 = cd->error;
  if (_16 > _17)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _18 = ad->delta;
  _19 = cd->error;
  _20 = _18 - _19;
  ad->delta = _20;
  # DEBUG BEGIN_STMT
  returnTicks = ad->delta;
  # DEBUG BEGIN_STMT
  a = 65535;
  goto <bb 13>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _21 = ad->next;
  cd->head = _21;
  # DEBUG BEGIN_STMT
  ad->next = 65535;
  # DEBUG BEGIN_STMT
  _22 = cd->error;
  _23 = ad->delta;
  _24 = _22 - _23;
  cd->error = _24;
  # DEBUG BEGIN_STMT
  _25 = ad->period;
  ad->delta = _25;
  # DEBUG BEGIN_STMT
  _26 = ad->delta;
  if (_26 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ad->inUse = 0;
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_EnqueueAlarmNoAdjust (cd, a, ad);

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  # DEBUG BEGIN_STMT
  OS_alarmTableBase.2_27 = OS_alarmTableBase;
  _28 = (unsigned int) a;
  _29 = _28 * 28;
  _30 = OS_alarmTableBase.2_27 + _29;
  _31 = _30->wrapper;
  OS_alarmTableBase.3_32 = OS_alarmTableBase;
  _33 = (unsigned int) a;
  _34 = _33 * 28;
  _35 = OS_alarmTableBase.3_32 + _34;
  _31 (_35);
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.4_36 = OS_kernDisableLevel;
  OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.4_36);
  # DEBUG BEGIN_STMT
  a = cd->head;

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (a != 65535)
    goto <bb 7>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  cd->error = 0;
  # DEBUG BEGIN_STMT
  cd->lock = 0;

  <bb 15> :
  # DEBUG BEGIN_STMT
  D.7431 = returnTicks;
  return D.7431;

}


