
Marking local functions:


Marking externally visible functions: OS_Dispatch


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_ShutdownNoHooks/17 (OS_ShutdownNoHooks) @06d19540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_Dispatch/0 
  Calls: 
OS_Panic/16 (OS_Panic) @06d19460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_Dispatch/0 
  Calls: 
OS_CORTEXM_ContextLoad/15 (OS_CORTEXM_ContextLoad) @06d19380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_Dispatch/0 OS_Dispatch/0 
  Calls: 
OS_CORTEXM_FPContextLoad/14 (OS_CORTEXM_FPContextLoad) @06d192a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_Dispatch/0 OS_Dispatch/0 
  Calls: 
OS_MissingTerminateTask/13 (OS_MissingTerminateTask) @06d191c0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: OS_Dispatch/0 (addr)
  Availability: not_available
  Function flags: optimize_size
  Called by: 
  Calls: 
OS_CORTEXM_StartTask/12 (OS_CORTEXM_StartTask) @06d190e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_Dispatch/0 
  Calls: 
OS_startTaskExecTimingFp/11 (OS_startTaskExecTimingFp) @06d157e0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_Dispatch/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_SetProtection/10 (OS_SetProtection) @06d19000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_Dispatch/0 
  Calls: 
OS_ptrPreTaskHook/9 (OS_ptrPreTaskHook) @06d156c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_Dispatch/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CORTEXM_Idle/8 (OS_CORTEXM_Idle) @06b74ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_Dispatch/0 
  Calls: 
OS_preemptTaskExecTimingFp/7 (OS_preemptTaskExecTimingFp) @06d155a0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_Dispatch/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_ptrPostTaskHook/6 (OS_ptrPostTaskHook) @06d154c8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_Dispatch/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_Dispatch/5 (OS_svc_Dispatch) @06d15480
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_Dispatch/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/4 (OS_Error) @06b74c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_Dispatch/0 
  Calls: 
OS_TaskSpOutOfBounds/3 (OS_TaskSpOutOfBounds) @06b74000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_Dispatch/0 
  Calls: 
OS_configMode/2 (OS_configMode) @06d153a8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_Dispatch/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06d15360
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_Dispatch/0 (addr)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (addr)OS_Dispatch/0 (read)OS_Dispatch/0 (write)OS_Dispatch/0 (write)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (write)OS_Dispatch/0 (read)OS_Dispatch/0 (write)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (addr)OS_Dispatch/0 (read)OS_Dispatch/0 (write)OS_Dispatch/0 (write)OS_Dispatch/0 (write)OS_Dispatch/0 (write)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)OS_Dispatch/0 (read)
  Availability: not_available
  Varpool flags:
OS_Dispatch/0 (OS_Dispatch) @06b74b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_configMode/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_Dispatch/5 (addr)OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_ptrPostTaskHook/6 (read)OS_kernelData/1 (write)OS_preemptTaskExecTimingFp/7 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_ptrPreTaskHook/9 (read)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_startTaskExecTimingFp/11 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_MissingTerminateTask/13 (addr)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_ShutdownNoHooks/17 OS_Panic/16 OS_CORTEXM_ContextLoad/15 OS_CORTEXM_FPContextLoad/14 OS_CORTEXM_ContextLoad/15 OS_CORTEXM_FPContextLoad/14 OS_CORTEXM_StartTask/12 OS_SetProtection/10 OS_CORTEXM_Idle/8 OS_Error/4 OS_TaskSpOutOfBounds/3 
   Indirect call
   Indirect call
   Indirect call
   Indirect call
__attribute__((target ("general-regs-only")))
OS_Dispatch (os_taskstate_t newstate)
{
  os_uint8_t Os_CallHookTmp;
  struct os_kerneldata_t * const OS_kd;
  os_uint8_t Os_CallHookTmp;
  struct os_kerneldata_t * const OS_kd;
  struct os_taskdynamic_t * td;
  os_taskstate_t qstate;
  struct os_kerneldata_t * const kernel_data;
  os_uint16_t iftmp.7;
  int iftmp.2;
  int iftmp.0;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.taskCurrent;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.taskCurrent;
  td = _2->dynamic;
  # DEBUG BEGIN_STMT
  OS_configMode.1_3 = OS_configMode;
  _4 = OS_configMode.1_3 & 64;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  _5 = OS_kernelData.taskCurrent;
  _6 = _5->stackBase;
  _7 = *_6;
  if (_7 != 3958107115)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _8 = td->context.sp;
  _9 = (unsigned int) _8;
  _10 = OS_kernelData.taskCurrent;
  _11 = OS_TaskSpOutOfBounds (_9, _10);
  if (_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.2 = 0;

  <bb 8> :
  if (iftmp.2 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  iftmp.0 = 1;
  goto <bb 11>; [INV]

  <bb 10> :
  iftmp.0 = 0;

  <bb 11> :
  if (iftmp.0 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_Dispatch, 74, 0B);

  <bb 13> :
  # DEBUG BEGIN_STMT
  _12 = td->state;
  if (_12 == 5)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd = &OS_kernelData;
  # DEBUG BEGIN_STMT
  Os_CallHookTmp = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 12;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ptrPostTaskHook.3_13 = OS_ptrPostTaskHook;
  OS_ptrPostTaskHook.3_13 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = Os_CallHookTmp;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td->state = newstate;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_preemptTaskExecTimingFp.4_14 = OS_preemptTaskExecTimingFp;
  _15 = OS_kernelData.taskCurrent;
  OS_preemptTaskExecTimingFp.4_14 (_15);

  <bb 15> :
  # DEBUG BEGIN_STMT
  _16 = OS_kernelData.taskQueueHead;
  if (_16 == 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_kernelData.taskCurrent = 0B;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_CORTEXM_Idle ();
  # DEBUG BEGIN_STMT
  goto <bb 33>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _17 = OS_kernelData.taskQueueHead;
  OS_kernelData.taskCurrent = _17;
  # DEBUG BEGIN_STMT
  _18 = OS_kernelData.taskCurrent;
  td = _18->dynamic;
  # DEBUG BEGIN_STMT
  qstate = td->state;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td->state = 5;
  # DEBUG BEGIN_STMT
  _19 = td->prio;
  _20 = OS_kernelData.taskCurrent;
  _21 = _20->runPrio;
  _22 = (short unsigned int) _21;
  if (_19 < _22)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _23 = OS_kernelData.taskCurrent;
  _24 = _23->runPrio;
  _25 = (short unsigned int) _24;
  td->prio = _25;

  <bb 19> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd = &OS_kernelData;
  # DEBUG BEGIN_STMT
  Os_CallHookTmp = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 11;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ptrPreTaskHook.5_26 = OS_ptrPreTaskHook;
  OS_ptrPreTaskHook.5_26 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = Os_CallHookTmp;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inKernel = 0;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 1;
  # DEBUG BEGIN_STMT
  _27 = OS_kernelData.taskCurrent;
  OS_SetProtection (_27);
  # DEBUG BEGIN_STMT
  OS_startTaskExecTimingFp.6_28 = OS_startTaskExecTimingFp;
  _29 = OS_kernelData.taskCurrent;
  OS_startTaskExecTimingFp.6_28 (_29);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (qstate == 2)
    goto <bb 20>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _30 = OS_kernelData.taskCurrent;
  _31 = _30->entry;
  _32 = OS_kernelData.taskCurrent;
  _33 = _32->stackBase;
  _34 = (unsigned int) _33;
  _35 = OS_kernelData.taskCurrent;
  _36 = _35->stackLen;
  _37 = _34 + _36;
  _38 = (os_stackelement_t *) _37;
  _39 = OS_kernelData.taskCurrent;
  _40 = _39->app;
  if (_40 != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _41 = OS_kernelData.taskCurrent;
  _42 = _41->app;
  _43 = _42->flags;
  _44 = (short unsigned int) _43;
  iftmp.7 = _44 << 8;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.7 = 256;

  <bb 23> :
  _45 = OS_kernelData.taskCurrent;
  _46 = _45->flags;
  _47 = (short unsigned int) _46;
  _48 = iftmp.7 | _47;
  OS_CORTEXM_StartTask (_31, _38, _48, OS_MissingTerminateTask);
  goto <bb 32>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  if (qstate == 4)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _49 = OS_kernelData.taskCurrent;
  _50 = _49->flags;
  _51 = (signed char) _50;
  if (_51 < 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  _52 = OS_kernelData.taskCurrent;
  _53 = _52->dynamic;
  _54 = _53->context.sp;
  OS_CORTEXM_FPContextLoad (_54);
  goto <bb 32>; [INV]

  <bb 27> :
  _55 = OS_kernelData.taskCurrent;
  _56 = _55->dynamic;
  _57 = _56->context.sp;
  OS_CORTEXM_ContextLoad (_57);
  goto <bb 32>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  if (qstate == 3)
    goto <bb 29>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = OS_kernelData.taskCurrent;
  _59 = _58->flags;
  _60 = (signed char) _59;
  if (_60 < 0)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  _61 = OS_kernelData.taskCurrent;
  _62 = _61->dynamic;
  _63 = _62->context.sp;
  OS_CORTEXM_FPContextLoad (_63);
  goto <bb 32>; [INV]

  <bb 31> :
  _64 = OS_kernelData.taskCurrent;
  _65 = _64->dynamic;
  _66 = _65->context.sp;
  OS_CORTEXM_ContextLoad (_66);

  <bb 32> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_Panic (9);
  # DEBUG BEGIN_STMT
  OS_ShutdownNoHooks ();

  <bb 33> :
  return;

}


