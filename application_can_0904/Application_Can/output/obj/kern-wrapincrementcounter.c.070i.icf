Parsed function:OS_WrapIncrementCounter
Dump after hash based groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Dump after WPA based types groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Init called for 0 items (0.00%).
Dump after full equality comparison of groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes



Item count: 1
Congruent classes before: 1, after: 1
Average class size before: 1.00, after: 1.00
Average non-singular class size: 0.00, count: 0
Equal symbols: 0
Fraction of visited symbols: 0.00%

__attribute__((target ("general-regs-only")))
OS_WrapIncrementCounter (const struct os_alarm_t * a)
{
  os_uint8_t save;
  struct os_counterdynamic_t * cd;
  const struct os_counter_t * cp;
  os_intstatus_t is;
  unsigned int _1;
  const struct os_counter_t * OS_counterTableBase.0_2;
  unsigned int _3;
  short unsigned int OS_kernDisableLevel.1_4;
  unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG kernel_data => &OS_kernelData
  # DEBUG BEGIN_STMT
  save_7 = OS_kernelData.inFunction;
  # DEBUG save => save_7
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 7;
  # DEBUG BEGIN_STMT
  _1 = a_9(D)->object;
  # DEBUG c => (os_counterid_t) _1
  # DEBUG BEGIN_STMT
  OS_counterTableBase.0_2 = OS_counterTableBase;
  _5 = _1 & 255;
  _3 = _5 * 32;
  cp_10 = OS_counterTableBase.0_2 + _3;
  # DEBUG cp => cp_10
  # DEBUG BEGIN_STMT
  cd_11 = cp_10->dynamic;
  # DEBUG cd => cd_11
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.1_4 = OS_kernDisableLevel;
  is_13 = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.1_4);
  # DEBUG is => is_13
  # DEBUG BEGIN_STMT
  OS_AdvanceCounter (cp_10, cd_11, 1, is_13);
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_13);
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = save_7;
  return;

}


