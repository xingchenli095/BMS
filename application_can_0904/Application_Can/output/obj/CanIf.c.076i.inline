IPA function summary for CanIf_BinarySwFiltering.constprop/64 inlinable
  global time:     75.103958
  self size:       36
  global size:     36
  min size:       0
  self stack:      0
  global stack:    0
    size:30.000000, time:70.955382
    size:4.000000, time:2.148576,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed || op1 changed)
  calls:

IPA function summary for CanIf_PerformSwFiltering.constprop/63 inlinable
  global time:     18.379812
  self size:       29
  global size:     29
  min size:       24
  self stack:      0
  global stack:    0
    size:16.500000, time:6.408812
    size:3.500000, time:2.127800,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed || op1 changed)
    size:1.000000, time:0.511200,  nonconst if:(op0 changed)
  calls:
    CanIf_BinarySwFiltering.constprop/64 function not considered for inlining
      loop depth: 0 freq:0.49 size: 6 time: 15callee size:18 stack: 0

IPA function summary for CanIf_SoftwareFiltering.constprop/62 inlinable
  global time:     18.074872
  self size:       26
  global size:     26
  min size:       24
  self stack:      0
  global stack:    0
    size:15.500000, time:12.772726
    size:3.500000, time:2.145926,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    CanIf_PerformSwFiltering.constprop/63 function not considered for inlining
      loop depth: 0 freq:0.14 size: 6 time: 15callee size:14 stack: 0

IPA function summary for CanIf_IsValidConfig.part.0/61 inlinable
  global time:     7.020000
  self size:       10
  global size:     10
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.170000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:2.500000, time:0.850000,  nonconst if:(op0[ref offset: 96] changed)
  calls:

IPA function summary for CanIf_ProcessRxPdu.isra.0/60 inlinable
  global time:     55.718800
  self size:       41
  global size:     41
  min size:       16
  self stack:      8
  global stack:    8
    size:28.000000, time:15.718800
    size:4.000000, time:2.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op2 changed)
  calls:
    CanIf_SendRxIndication.isra.0/59 function not considered for inlining
      loop depth: 0 freq:0.50 size: 4 time: 13callee size: 6 stack: 0
       op2 is compile time invariant
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for CanIf_SendRxIndication.isra.0/59 inlinable
  global time:     13.834000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:3.000000, time:1.980000,  executed if:(op0 != 255)
  array index:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:0.46 size: 5 time: 17predicate: (op0 != 255)

IPA function summary for CanIf_ProcessTxLength/39 inlinable
  global time:     18.460912
  self size:       32
  global size:     32
  min size:       20
  self stack:      0
  global stack:    0
    size:18.000000, time:13.080800
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Det_ASR43_ReportRuntimeError/49 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.07 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_SendTxConfirmation/37 inlinable
  global time:     18.372000
  self size:       17
  global size:     17
  min size:       8
  self stack:      0
  global stack:    0
    size:9.000000, time:7.980000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:0.46 size: 4 time: 16

IPA function summary for CanIf_RxIndication_DetChecks/35 inlinable
  global time:     24.684094
  self size:       54
  global size:     54
  min size:       20
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:8.000000, time:3.702353,  nonconst if:(op1 changed)
    size:2.000000, time:0.632949,  nonconst if:(op2 changed)
    size:2.000000, time:0.424076,  executed if:(op2 <= 64),  nonconst if:(op3 changed) && (op2 <= 64)
    size:9.000000, time:1.575717,  executed if:(op3 != 0B) && (op2 <= 64)
    size:1.000000, time:0.175080,  executed if:(op3 != 0B) && (op2 <= 64),  nonconst if:(op0 changed) && (op3 != 0B) && (op2 <= 64)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.04 size: 5 time: 14 predicate: (op3 != 0B) && (op2 <= 64)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.04 size: 5 time: 14 predicate: (op3 == 0B) && (op2 <= 64)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14 predicate: (op2 > 64)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.35 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_SetPduModeInternal/30 inlinable
  global time:     9.884278
  self size:       27
  global size:     27
  min size:       4
  self stack:      0
  global stack:    0
    size:13.000000, time:3.535380
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:6.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.333300,  executed if:(op1 == 3)
    size:1.000000, time:0.333300,  executed if:(op1 == 0)
    size:1.000000, time:0.333300,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10

IPA function summary for CanIf_SetControllerModeInternal/29 inlinable
  global time:     32.755000
  self size:       60
  global size:     60
  min size:       0
  self stack:      0
  global stack:    0
    size:7.000000, time:7.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:8.000000, time:4.000000,  nonconst if:(op1 changed)
    size:16.000000, time:3.505000,  executed if:(op1 == 3)
    size:4.000000, time:1.000000,  executed if:(op1 == 2)
    size:3.000000, time:0.750000,  executed if:(op1 == 1)
  array index:(op0 changed)
  calls:
    indirect call loop depth: 0 freq:0.25 size: 6 time: 18predicate: (op1 == 3)
    indirect call loop depth: 0 freq:0.25 size: 6 time: 18predicate: (op1 == 1)
    indirect call loop depth: 0 freq:0.25 size: 6 time: 18predicate: (op1 == 2)

IPA function summary for CanIf_CheckTrcvWakeFlagIndication/28 inlinable
  global time:     20.675000
  self size:       22
  global size:     22
  min size:       24
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanSM_CheckTransceiverWakeFlagIndication/57 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ClearTrcvWufFlagIndication/27 inlinable
  global time:     20.675000
  self size:       22
  global size:     22
  min size:       24
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanSM_ClearTrcvWufFlagIndication/56 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ConfirmPnAvailability/26 inlinable
  global time:     20.675000
  self size:       22
  global size:     22
  min size:       24
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanSM_ConfirmPnAvailability/55 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_TrcvModeIndication/25 inlinable
  global time:     21.010000
  self size:       23
  global size:     23
  min size:       26
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanSM_TransceiverModeIndication/54 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ControllerModeIndication/24 inlinable
  global time:     23.433109
  self size:       35
  global size:     35
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:2.000000, time:0.716085,  executed if:(op1 != 3),  nonconst if:(op1 changed) && (op1 != 3)
    size:2.000000, time:0.472616,  executed if:(op1 != 1) && (op1 != 3),  nonconst if:(op1 changed) && (op1 != 1) && (op1 != 3)
    size:1.000000, time:0.333393,  executed if:(op1 == 3 || op1 == 1 || op1 == 2)
  array index:(op0 changed)
  calls:
    CanSM_ControllerModeIndication/53 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12 predicate: (op1 == 3 || op1 == 1 || op1 == 2)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 != 2) && (op1 != 1) && (op1 != 3)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ControllerBusOff/23 inlinable
  global time:     28.045000
  self size:       26
  global size:     26
  min size:       28
  self stack:      0
  global stack:    0
    size:9.000000, time:6.350000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    CanSM_ControllerBusOff/52 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_RxIndication/22 inlinable
  global time:     29.394420
  self size:       62
  global size:     62
  min size:       10
  self stack:      10
  global stack:    10
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 32] changed) && (op0 != 0B)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 40] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 40] changed) && (op0 != 0B)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op0 != 0B)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op0 != 0B)
    size:24.000000, time:3.409677,  executed if:(op0 != 0B)
  calls:
    CanIf_ProcessRxPdu.isra.0/60 function not considered for inlining
      loop depth: 0 freq:0.05 size: 4 time: 13callee size:20 stack: 8 predicate: (op0 != 0B)
       op0 is compile time invariant
    CanIf_SoftwareFiltering.constprop/62 function not considered for inlining
      loop depth: 0 freq:0.15 size: 5 time: 14callee size:13 stack: 0 predicate: (op0 != 0B)
       op2 is compile time invariant
    CanIf_RxIndication_DetChecks/35 function not considered for inlining
      loop depth: 0 freq:0.47 size: 6 time: 15callee size:27 stack: 0 predicate: (op0 != 0B)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.20 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_TxConfirmation/21 inlinable
  global time:     29.720000
  self size:       31
  global size:     31
  min size:       28
  self stack:      0
  global stack:    0
    size:13.000000, time:7.690000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.335000,  nonconst if:(op0 changed)
  calls:
    CanIf_SendTxConfirmation/37 function not considered for inlining
      loop depth: 0 freq:0.33 size: 2 time: 11callee size: 8 stack: 0
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_CheckTrcvWakeFlag/20 inlinable
  global time:     26.169000
  self size:       32
  global size:     32
  min size:       30
  self stack:      0
  global stack:    0
    size:13.000000, time:8.373400
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.448900,  nonconst if:(op0 changed)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.45 size: 5 time: 17

IPA function summary for CanIf_ClearTrcvWufFlag/19 inlinable
  global time:     26.169000
  self size:       32
  global size:     32
  min size:       30
  self stack:      0
  global stack:    0
    size:13.000000, time:8.373400
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.448900,  nonconst if:(op0 changed)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.45 size: 5 time: 17

IPA function summary for CanIf_CheckWakeup/18 inlinable
  global time:     146.837219
  self size:       41
  global size:     41
  min size:       30
  self stack:      0
  global stack:    0
    size:23.000000, time:91.044092
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 1 freq:2.71 size: 5 time: 17

IPA function summary for CanIf_SetTrcvWakeupMode/17 inlinable
  global time:     25.886193
  self size:       40
  global size:     40
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:6.000000, time:1.804578,  executed if:(op1 <= 2)
    size:1.000000, time:0.300763,  executed if:(op1 <= 2),  nonconst if:(op0 changed) && (op1 <= 2)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.15 size: 5 time: 14 predicate: (op1 > 2)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.30 size: 6 time: 18predicate: (op1 <= 2)

IPA function summary for CanIf_GetTrcvWakeupReason/16 inlinable
  global time:     26.630100
  self size:       40
  global size:     40
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op1 changed)
    size:10.000000, time:4.436816,  executed if:(op1 != 0B)
    size:1.000000, time:0.370657,  executed if:(op1 != 0B),  nonconst if:(op0 changed) && (op1 != 0B)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.18 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.37 size: 6 time: 18predicate: (op1 != 0B)

IPA function summary for CanIf_GetTrcvMode/15 inlinable
  global time:     26.630100
  self size:       40
  global size:     40
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
    size:10.000000, time:4.436816,  executed if:(op0 != 0B)
    size:1.000000, time:0.370657,  executed if:(op0 != 0B),  nonconst if:(op1 changed) && (op0 != 0B)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.18 size: 5 time: 14 predicate: (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.37 size: 6 time: 18predicate: (op0 != 0B)

IPA function summary for CanIf_SetTrcvMode/14 inlinable
  global time:     25.886193
  self size:       40
  global size:     40
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:6.000000, time:1.804578,  executed if:(op1 <= 2)
    size:1.000000, time:0.300763,  executed if:(op1 <= 2),  nonconst if:(op0 changed) && (op1 <= 2)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.15 size: 5 time: 14 predicate: (op1 > 2)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.30 size: 6 time: 18predicate: (op1 <= 2)

IPA function summary for CanIf_GetPduMode/13 inlinable
  global time:     18.129919
  self size:       29
  global size:     29
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:1.500000, time:0.555985,  executed if:(op1 != 0B)
    size:0.500000, time:0.185328,  executed if:(op1 != 0B) && (not inlined)
  array index:(op0 changed)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_SetPduMode/12 inlinable
  global time:     21.477912
  self size:       35
  global size:     35
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:2.000000, time:0.601526,  executed if:(op1 <= 3),  nonconst if:(op1 changed) && (op1 <= 3)
    size:3.000000, time:0.595511,  executed if:(op1 != 2) && (op1 <= 3)
  array index:(op0 changed)
  calls:
    CanIf_SetPduModeInternal/30 function not considered for inlining
      loop depth: 0 freq:0.04 size: 3 time: 12callee size:13 stack: 0 predicate: (op1 != 2) && (op1 <= 3)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.25 size: 5 time: 14 predicate: (op1 > 3 || op1 == 2)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_Transmit/11 inlinable
  global time:     29.788065
  self size:       96
  global size:     96
  min size:       20
  self stack:      12
  global stack:    12
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:0.500000, time:0.185328,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:0.926642,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:0.500000, time:0.129730,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
    size:0.500000, time:0.129730,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:41.500000, time:2.367953,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:1.000000, time:0.126824,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:0.500000, time:0.013858,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
  calls:
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.01 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.06 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.13 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    CanIf_ProcessTxLength/39 function not considered for inlining
      loop depth: 0 freq:0.26 size: 4 time: 13callee size:16 stack: 0 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.11 size: 5 time: 14 predicate: (op1[ref offset: 0] == 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.03 size: 6 time: 18predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)

IPA function summary for CanIf_GetControllerMode/10 inlinable
  global time:     25.091640
  self size:       31
  global size:     31
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:1.500000, time:0.471345,  executed if:(op1 != 0B)
    size:0.500000, time:0.157115,  executed if:(op1 != 0B) && (not inlined)
  array index:(op0 changed)
  calls:
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.31 size: 1 time: 10 predicate: (op1 != 0B)
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.31 size: 1 time: 10 predicate: (op1 != 0B)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.13 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_SetControllerMode/9 inlinable
  global time:     23.433109
  self size:       35
  global size:     35
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:2.000000, time:0.716085,  executed if:(op1 != 3),  nonconst if:(op1 changed) && (op1 != 3)
    size:2.000000, time:0.472616,  executed if:(op1 != 1) && (op1 != 3),  nonconst if:(op1 changed) && (op1 != 1) && (op1 != 3)
  calls:
    CanIf_SetControllerModeInternal/29 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:30 stack: 0 predicate: (op1 == 3 || op1 == 1 || op1 == 2)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 != 2) && (op1 != 1) && (op1 != 3)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_Init/8 inlinable
  global time:     54.362455
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:18.500000, time:33.824955,  executed if:(op0 != 0B)
    size:1.500000, time:0.703500,  executed if:(op0 != 0B) && (not inlined)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.23 size: 5 time: 14 predicate: (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanIf_IsValidConfig/7 function not considered for inlining
      loop depth: 0 freq:0.70 size: 3 time: 12callee size: 8 stack: 0 predicate: (op0 != 0B)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.30 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_IsValidConfig/7 inlinable
  global time:     13.307630
  self size:       17
  global size:     17
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B)
    size:4.500000, time:1.523895,  executed if:(op0 != 0B)
    size:0.500000, time:0.090899,  executed if:(op0 != 0B) && (not inlined)
  calls:
    CanIf_IsValidConfig.part.0/61 function not considered for inlining
      loop depth: 0 freq:0.06 size: 3 time: 12callee size: 5 stack: 0 predicate: (op0 != 0B)
    TS_PlatformSigIsValid/41 function body not available
      loop depth: 0 freq:0.53 size: 3 time: 12 predicate: (op0 != 0B)

IPA function summary for CanIf_CheckWakeFlag_HlpNoPn/6 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ClearTrcvWufFlag_HlpNoPn/5 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant


Flattening functions:
Overall time estimate: 1007.713793 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in CanIf_BinarySwFiltering.constprop/64.
Enqueueing calls in CanIf_PerformSwFiltering.constprop/63.
Enqueueing calls in CanIf_SoftwareFiltering.constprop/62.
Enqueueing calls in CanIf_IsValidConfig.part.0/61.
Enqueueing calls in CanIf_ProcessRxPdu.isra.0/60.
Enqueueing calls in CanIf_SendRxIndication.isra.0/59.
Enqueueing calls in CanIf_ProcessTxLength/39.
Enqueueing calls in CanIf_SendTxConfirmation/37.
Enqueueing calls in CanIf_RxIndication_DetChecks/35.
Enqueueing calls in CanIf_SetPduModeInternal/30.
Enqueueing calls in CanIf_SetControllerModeInternal/29.
Enqueueing calls in CanIf_CheckTrcvWakeFlagIndication/28.
Enqueueing calls in CanIf_ClearTrcvWufFlagIndication/27.
Enqueueing calls in CanIf_ConfirmPnAvailability/26.
Enqueueing calls in CanIf_TrcvModeIndication/25.
Enqueueing calls in CanIf_ControllerModeIndication/24.
Enqueueing calls in CanIf_ControllerBusOff/23.
Enqueueing calls in CanIf_RxIndication/22.
Enqueueing calls in CanIf_TxConfirmation/21.
Enqueueing calls in CanIf_CheckTrcvWakeFlag/20.
Enqueueing calls in CanIf_ClearTrcvWufFlag/19.
Enqueueing calls in CanIf_CheckWakeup/18.
Enqueueing calls in CanIf_SetTrcvWakeupMode/17.
Enqueueing calls in CanIf_GetTrcvWakeupReason/16.
Enqueueing calls in CanIf_GetTrcvMode/15.
Enqueueing calls in CanIf_SetTrcvMode/14.
Enqueueing calls in CanIf_GetPduMode/13.
Enqueueing calls in CanIf_SetPduMode/12.
Enqueueing calls in CanIf_Transmit/11.
Enqueueing calls in CanIf_GetControllerMode/10.
Enqueueing calls in CanIf_SetControllerMode/9.
Enqueueing calls in CanIf_Init/8.
Enqueueing calls in CanIf_IsValidConfig/7.
Enqueueing calls in CanIf_CheckWakeFlag_HlpNoPn/6.
Enqueueing calls in CanIf_ClearTrcvWufFlag_HlpNoPn/5.

Considering CanIf_SendRxIndication.isra.0/59 with 13 size
 to be inlined into CanIf_ProcessRxPdu.isra.0/60 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:6267
 Estimated badness is -0.106383, frequency 0.50.

Considering CanIf_IsValidConfig.part.0/61 with 10 size
 to be inlined into CanIf_IsValidConfig/7 in unknown:0
 Estimated badness is -0.060451, frequency 0.06.

Considering CanIf_SendTxConfirmation/37 with 17 size
 to be inlined into CanIf_TxConfirmation/21 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:3728
 Estimated badness is -0.033760, frequency 0.33.

Considering CanIf_BinarySwFiltering.constprop/64 with 36 size
 to be inlined into CanIf_PerformSwFiltering.constprop/63 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:5267
 Estimated badness is -0.023447, frequency 0.49.

Considering CanIf_SoftwareFiltering.constprop/62 with 26 size
 to be inlined into CanIf_RxIndication/22 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:3860
 Estimated badness is -0.006941, frequency 0.15.

Considering CanIf_RxIndication_DetChecks/35 with 54 size
 to be inlined into CanIf_RxIndication/22 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:3814
 Estimated badness is -0.006623, frequency 0.47.

Considering CanIf_ProcessTxLength/39 with 32 size
 to be inlined into CanIf_Transmit/11 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:1772
 Estimated badness is -0.005146, frequency 0.26.

Considering CanIf_SetControllerModeInternal/29 with 60 size
 to be inlined into CanIf_SetControllerMode/9 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:1586
 Estimated badness is -0.004289, frequency 0.33.

Considering CanIf_SetPduModeInternal/30 with 27 size
 to be inlined into CanIf_SetPduMode/12 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:2514
 Estimated badness is -0.001913, frequency 0.04.

Considering CanIf_ProcessRxPdu.isra.0/60 with 47 size
 to be inlined into CanIf_RxIndication/22 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:3938
 Estimated badness is -0.000804, frequency 0.05.

Considering CanIf_PerformSwFiltering.constprop/63 with 55 size
 to be inlined into CanIf_SoftwareFiltering.constprop/62 in D:/eb2/plugins/CanIf_TS_TxDxM6I10R0/src/CanIf.c:5202
 Estimated badness is -0.000307, frequency 0.02.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 729.989683 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :       88 calls, 20.984036 freq, 0 count
call is unlikely and code size would grow         :        1 calls, 0.700000 freq, 0 count
IPA function summary for CanIf_CheckTrcvWakeFlagIndication/28 inlinable
  global time:     20.675000
  self size:       22
  global size:     22
  min size:       24
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanSM_CheckTransceiverWakeFlagIndication/57 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ClearTrcvWufFlagIndication/27 inlinable
  global time:     20.675000
  self size:       22
  global size:     22
  min size:       24
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanSM_ClearTrcvWufFlagIndication/56 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ConfirmPnAvailability/26 inlinable
  global time:     20.675000
  self size:       22
  global size:     22
  min size:       24
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanSM_ConfirmPnAvailability/55 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_TrcvModeIndication/25 inlinable
  global time:     21.010000
  self size:       23
  global size:     23
  min size:       26
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanSM_TransceiverModeIndication/54 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ControllerModeIndication/24 inlinable
  global time:     23.433109
  self size:       35
  global size:     35
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:2.000000, time:0.716085,  executed if:(op1 != 3),  nonconst if:(op1 changed) && (op1 != 3)
    size:2.000000, time:0.472616,  executed if:(op1 != 1) && (op1 != 3),  nonconst if:(op1 changed) && (op1 != 1) && (op1 != 3)
    size:1.000000, time:0.333393,  executed if:(op1 == 3 || op1 == 1 || op1 == 2)
  array index:(op0 changed)
  calls:
    CanSM_ControllerModeIndication/53 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12 predicate: (op1 == 3 || op1 == 1 || op1 == 2)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 != 2) && (op1 != 1) && (op1 != 3)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ControllerBusOff/23 inlinable
  global time:     28.045000
  self size:       26
  global size:     26
  min size:       28
  self stack:      0
  global stack:    0
    size:9.000000, time:6.350000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    CanSM_ControllerBusOff/52 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_RxIndication/22 inlinable
  global time:     35.979272
  self size:       62
  global size:     209
  min size:       50
  self stack:      10
  global stack:    18
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 32] changed) && (op0 != 0B)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 40] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 40] changed) && (op0 != 0B)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op0 != 0B)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.234500,  executed if:(op0 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op0 != 0B)
    size:152.000000, time:12.417913,  executed if:(op0 != 0B)
  calls:
    CanIf_ProcessRxPdu.isra.0/60 inlined
      loop depth: 0 freq:0.05 size: 4 time: 13callee size:23 stack: 8
      Stack frame offset 10, callee self size 8, callee size 8
      CanIf_SendRxIndication.isra.0/59 inlined
        loop depth: 0 freq:0.03 size: 4 time: 13callee size: 6 stack: 0
        Stack frame offset 18, callee self size 0, callee size 0
        indirect call loop depth: 0 freq:0.01 size: 5 time: 17predicate: (op0 != 0B)
      SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
        loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op0 != 0B)
      SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
        loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op0 != 0B)
      SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
        loop depth: 0 freq:0.05 size: 1 time: 10 predicate: (op0 != 0B)
      SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
        loop depth: 0 freq:0.05 size: 1 time: 10 predicate: (op0 != 0B)
    CanIf_SoftwareFiltering.constprop/62 inlined
      loop depth: 0 freq:0.15 size: 5 time: 14callee size:13 stack: 0
      Stack frame offset 10, callee self size 0, callee size 0
      CanIf_PerformSwFiltering.constprop/63 inlined
        loop depth: 0 freq:0.02 size: 6 time: 15callee size:27 stack: 0
        Stack frame offset 10, callee self size 0, callee size 0
        CanIf_BinarySwFiltering.constprop/64 inlined
          loop depth: 0 freq:0.01 size: 6 time: 15callee size:18 stack: 0
          Stack frame offset 10, callee self size 0, callee size 0
    CanIf_RxIndication_DetChecks/35 inlined
      loop depth: 0 freq:0.47 size: 6 time: 15callee size:27 stack: 0
      Stack frame offset 10, callee self size 0, callee size 0
      Det_ASR40_ReportError/40 function body not available
        loop depth: 0 freq:0.02 size: 5 time: 14 predicate: (op0 != 0B)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
      Det_ASR40_ReportError/40 function body not available
        loop depth: 0 freq:0.02 size: 5 time: 14 predicate: (op0 != 0B)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
      Det_ASR40_ReportError/40 function body not available
        loop depth: 0 freq:0.05 size: 5 time: 14 predicate: (op0 != 0B)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
      Det_ASR40_ReportError/40 function body not available
        loop depth: 0 freq:0.17 size: 5 time: 14 predicate: (op0 != 0B)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
      Det_ASR40_ReportError/40 function body not available
        loop depth: 0 freq:0.15 size: 5 time: 14 predicate: (op0 != 0B)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.20 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_TxConfirmation/21 inlinable
  global time:     31.519620
  self size:       31
  global size:     43
  min size:       60
  self stack:      0
  global stack:    0
    size:22.000000, time:10.363300
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.670000,  nonconst if:(op0 changed)
  calls:
    CanIf_SendTxConfirmation/37 inlined
      loop depth: 0 freq:0.33 size: 2 time: 11callee size: 8 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      indirect call loop depth: 0 freq:0.15 size: 4 time: 16
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_CheckTrcvWakeFlag/20 inlinable
  global time:     26.169000
  self size:       32
  global size:     32
  min size:       30
  self stack:      0
  global stack:    0
    size:13.000000, time:8.373400
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.448900,  nonconst if:(op0 changed)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.45 size: 5 time: 17

IPA function summary for CanIf_ClearTrcvWufFlag/19 inlinable
  global time:     26.169000
  self size:       32
  global size:     32
  min size:       30
  self stack:      0
  global stack:    0
    size:13.000000, time:8.373400
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.448900,  nonconst if:(op0 changed)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.45 size: 5 time: 17

IPA function summary for CanIf_CheckWakeup/18 inlinable
  global time:     146.837219
  self size:       41
  global size:     41
  min size:       30
  self stack:      0
  global stack:    0
    size:23.000000, time:91.044092
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 1 freq:2.71 size: 5 time: 17

IPA function summary for CanIf_SetTrcvWakeupMode/17 inlinable
  global time:     25.886193
  self size:       40
  global size:     40
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:6.000000, time:1.804578,  executed if:(op1 <= 2)
    size:1.000000, time:0.300763,  executed if:(op1 <= 2),  nonconst if:(op0 changed) && (op1 <= 2)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.15 size: 5 time: 14 predicate: (op1 > 2)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.30 size: 6 time: 18predicate: (op1 <= 2)

IPA function summary for CanIf_GetTrcvWakeupReason/16 inlinable
  global time:     26.630100
  self size:       40
  global size:     40
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op1 changed)
    size:10.000000, time:4.436816,  executed if:(op1 != 0B)
    size:1.000000, time:0.370657,  executed if:(op1 != 0B),  nonconst if:(op0 changed) && (op1 != 0B)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.18 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.37 size: 6 time: 18predicate: (op1 != 0B)

IPA function summary for CanIf_GetTrcvMode/15 inlinable
  global time:     26.630100
  self size:       40
  global size:     40
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
    size:10.000000, time:4.436816,  executed if:(op0 != 0B)
    size:1.000000, time:0.370657,  executed if:(op0 != 0B),  nonconst if:(op1 changed) && (op0 != 0B)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.18 size: 5 time: 14 predicate: (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.37 size: 6 time: 18predicate: (op0 != 0B)

IPA function summary for CanIf_SetTrcvMode/14 inlinable
  global time:     25.886193
  self size:       40
  global size:     40
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:6.000000, time:1.804578,  executed if:(op1 <= 2)
    size:1.000000, time:0.300763,  executed if:(op1 <= 2),  nonconst if:(op0 changed) && (op1 <= 2)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.15 size: 5 time: 14 predicate: (op1 > 2)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.30 size: 6 time: 18predicate: (op1 <= 2)

IPA function summary for CanIf_GetPduMode/13 inlinable
  global time:     18.129919
  self size:       29
  global size:     29
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:1.500000, time:0.555985,  executed if:(op1 != 0B)
    size:0.500000, time:0.185328,  executed if:(op1 != 0B) && (not inlined)
  array index:(op0 changed)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_SetPduMode/12 inlinable
  global time:     21.312562
  self size:       35
  global size:     56
  min size:       40
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:2.000000, time:0.601526,  executed if:(op1 <= 3),  nonconst if:(op1 changed) && (op1 <= 3)
    size:16.000000, time:0.737552,  executed if:(op1 != 2) && (op1 <= 3)
    size:6.000000, time:0.080354,  executed if:(op1 != 2) && (op1 <= 3),  nonconst if:(op1 changed) && (op1 != 2) && (op1 <= 3)
    size:1.000000, time:0.013391,  executed if:(op1 == 3) && (op1 != 2) && (op1 <= 3)
    size:1.000000, time:0.013391,  executed if:(op1 == 0) && (op1 != 2) && (op1 <= 3)
    size:1.000000, time:0.013391,  executed if:(op1 != 2) && (op1 <= 3),  nonconst if:(op0 changed) && (op1 != 2) && (op1 <= 3)
  array index:(op0 changed)
  calls:
    CanIf_SetPduModeInternal/30 inlined
      loop depth: 0 freq:0.04 size: 3 time: 12callee size:13 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
        loop depth: 0 freq:0.00 size: 1 time: 10 predicate: (op1 != 2) && (op1 <= 3)
      SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
        loop depth: 0 freq:0.00 size: 1 time: 10 predicate: (op1 != 2) && (op1 <= 3)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.25 size: 5 time: 14 predicate: (op1 > 3 || op1 == 2)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_Transmit/11 inlinable
  global time:     30.686032
  self size:       96
  global size:     121
  min size:       40
  self stack:      12
  global stack:    12
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:0.500000, time:0.185328,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:0.926642,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:0.500000, time:0.129730,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
    size:0.500000, time:0.129730,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:59.500000, time:5.761893,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:2.000000, time:0.386284,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:0.500000, time:0.013858,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
  calls:
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.01 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.06 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.13 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    CanIf_ProcessTxLength/39 inlined
      loop depth: 0 freq:0.26 size: 4 time: 13callee size:16 stack: 0
      Stack frame offset 12, callee self size 0, callee size 0
      Det_ASR43_ReportRuntimeError/49 function body not available
        loop depth: 0 freq:0.03 size: 5 time: 14 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
      Det_ASR40_ReportError/40 function body not available
        loop depth: 0 freq:0.02 size: 5 time: 14 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.11 size: 5 time: 14 predicate: (op1[ref offset: 0] == 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.03 size: 6 time: 18predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)

IPA function summary for CanIf_GetControllerMode/10 inlinable
  global time:     25.091640
  self size:       31
  global size:     31
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:1.500000, time:0.471345,  executed if:(op1 != 0B)
    size:0.500000, time:0.157115,  executed if:(op1 != 0B) && (not inlined)
  array index:(op0 changed)
  calls:
    SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 function body not available
      loop depth: 0 freq:0.31 size: 1 time: 10 predicate: (op1 != 0B)
    SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 function body not available
      loop depth: 0 freq:0.31 size: 1 time: 10 predicate: (op1 != 0B)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.13 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_SetControllerMode/9 inlinable
  global time:     29.352494
  self size:       35
  global size:     88
  min size:       40
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:2.000000, time:0.716085,  executed if:(op1 != 3),  nonconst if:(op1 changed) && (op1 != 3)
    size:2.000000, time:0.472616,  executed if:(op1 != 1) && (op1 != 3),  nonconst if:(op1 changed) && (op1 != 1) && (op1 != 3)
    size:7.000000, time:2.333748,  executed if:(op1 == 3 || op1 == 1 || op1 == 2)
    size:1.000000, time:0.333393,  executed if:(op1 == 3 || op1 == 1 || op1 == 2),  nonconst if:(op0 changed) && (op1 == 3 || op1 == 1 || op1 == 2)
    size:8.000000, time:1.333570,  executed if:(op1 == 3 || op1 == 1 || op1 == 2),  nonconst if:(op1 changed) && (op1 == 3 || op1 == 1 || op1 == 2)
    size:16.000000, time:1.168541,  executed if:(op1 == 3)
    size:4.000000, time:0.333393,  executed if:(op1 == 2)
    size:3.000000, time:0.250044,  executed if:(op1 == 1)
  calls:
    CanIf_SetControllerModeInternal/29 inlined
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:30 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      indirect call loop depth: 0 freq:0.08 size: 6 time: 18predicate: (op1 == 3)
      indirect call loop depth: 0 freq:0.08 size: 6 time: 18predicate: (op1 == 1)
      indirect call loop depth: 0 freq:0.08 size: 6 time: 18predicate: (op1 == 2)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 != 2) && (op1 != 1) && (op1 != 3)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_Init/8 inlinable
  global time:     54.362455
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:18.500000, time:33.824955,  executed if:(op0 != 0B)
    size:1.500000, time:0.703500,  executed if:(op0 != 0B) && (not inlined)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.23 size: 5 time: 14 predicate: (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    CanIf_IsValidConfig/7 call is unlikely and code size would grow
      loop depth: 0 freq:0.70 size: 3 time: 12callee size:10 stack: 0 predicate: (op0 != 0B)
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:0.30 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_IsValidConfig/7 inlinable
  global time:     12.834773
  self size:       17
  global size:     20
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:10
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B)
    size:10.500000, time:1.792774,  executed if:(op0 != 0B)
    size:0.500000, time:0.090899,  executed if:(op0 != 0B) && (not inlined)
  calls:
    CanIf_IsValidConfig.part.0/61 inlined
      loop depth: 0 freq:0.06 size: 3 time: 12callee size: 5 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    TS_PlatformSigIsValid/41 function body not available
      loop depth: 0 freq:0.53 size: 3 time: 12 predicate: (op0 != 0B)

IPA function summary for CanIf_CheckWakeFlag_HlpNoPn/6 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for CanIf_ClearTrcvWufFlag_HlpNoPn/5 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/40 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

Symbol table:

CanIf_BinarySwFiltering.constprop.0/64 (CanIf_BinarySwFiltering.constprop) @0719e2a0
  Type: function definition analyzed
  Visibility:
  References: CanIf_ConfigPtr/1 (read)
  Referring: 
  Function CanIf_BinarySwFiltering.constprop/64 is inline copy in CanIf_RxIndication/22
  Clone of CanIf_BinarySwFiltering/34
  Availability: local
  Function flags: count:11676688 (estimated locally) local optimize_size
  Called by: CanIf_PerformSwFiltering.constprop/63 (inlined) (11676688 (estimated locally),0.01 per call) 
  Calls: 
CanIf_PerformSwFiltering.constprop.0/63 (CanIf_PerformSwFiltering.constprop) @07142ee0
  Type: function definition analyzed
  Visibility:
  References: CanIf_ConfigPtr/1 (read)
  Referring: 
  Function CanIf_PerformSwFiltering.constprop/63 is inline copy in CanIf_RxIndication/22
  Clone of CanIf_PerformSwFiltering/33
  Availability: local
  Function flags: count:23888477 (estimated locally) local optimize_size
  Called by: CanIf_SoftwareFiltering.constprop/62 (inlined) (23888477 (estimated locally),0.02 per call) 
  Calls: CanIf_BinarySwFiltering.constprop/64 (inlined) (11676688 (estimated locally),0.01 per call) 
CanIf_SoftwareFiltering.constprop.0/62 (CanIf_SoftwareFiltering.constprop) @07138700
  Type: function definition analyzed
  Visibility:
  References: CanIf_ConfigPtr/1 (read)
  Referring: 
  Function CanIf_SoftwareFiltering.constprop/62 is inline copy in CanIf_RxIndication/22
  Clone of CanIf_SoftwareFiltering/32
  Availability: local
  Function flags: count:166183022 (estimated locally) local optimize_size
  Called by: CanIf_RxIndication/22 (inlined) (166183022 (estimated locally),0.15 per call) 
  Calls: CanIf_PerformSwFiltering.constprop/63 (inlined) (23888477 (estimated locally),0.02 per call) 
CanIf_IsValidConfig.part.0/61 (CanIf_IsValidConfig.part.0) @07356e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: CanIf_LcfgSignature/42 (read)
  Referring: 
  Function CanIf_IsValidConfig.part.0/61 is inline copy in CanIf_IsValidConfig/7
  Availability: local
  Function flags: count:66369400 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: CanIf_IsValidConfig/7 (inlined) (66369400 (estimated locally),0.06 per call) 
  Calls: 
CanIf_ProcessRxPdu.isra.0/60 (CanIf_ProcessRxPdu.isra.0) @0725c9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: CanIf_RxPduConfigPtr/3 (read)CanIf_CanControllerMode/43 (read)CanIf_PduMode/45 (read)CanIf_CanControllerFlags/44 (read)CanIf_CanControllerFlags/44 (write)
  Referring: 
  Function CanIf_ProcessRxPdu.isra.0/60 is inline copy in CanIf_RxIndication/22
  Availability: local
  Function flags: count:54840397 (estimated locally) body local optimize_size
  Called by: CanIf_RxIndication/22 (inlined) (54840397 (estimated locally),0.05 per call) 
  Calls: CanIf_SendRxIndication.isra.0/59 (inlined) (27420199 (estimated locally),0.03 per call) SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (27420199 (estimated locally),0.03 per call) SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 (27420199 (estimated locally),0.03 per call) SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (54840397 (estimated locally),0.05 per call) SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 (54840397 (estimated locally),0.05 per call) 
CanIf_SendRxIndication.isra.0/59 (CanIf_SendRxIndication.isra.0) @0725c620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: CanIf_CbkFctPtrTbl/50 (read)
  Referring: 
  Function CanIf_SendRxIndication.isra.0/59 is inline copy in CanIf_RxIndication/22
  Availability: local
  Function flags: count:27420199 (estimated locally) body local optimize_size
  Called by: CanIf_ProcessRxPdu.isra.0/60 (inlined) (27420199 (estimated locally),0.03 per call) 
  Calls: 
   Indirect call(12668132 (estimated locally),0.01 per call) 
CanSM_CheckTransceiverWakeFlagIndication/57 (CanSM_CheckTransceiverWakeFlagIndication) @07226d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_CheckTrcvWakeFlagIndication/28 (359703511 (estimated locally),0.33 per call) 
  Calls: 
CanSM_ClearTrcvWufFlagIndication/56 (CanSM_ClearTrcvWufFlagIndication) @07226b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_ClearTrcvWufFlagIndication/27 (359703511 (estimated locally),0.33 per call) 
  Calls: 
CanSM_ConfirmPnAvailability/55 (CanSM_ConfirmPnAvailability) @072269a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_ConfirmPnAvailability/26 (359703511 (estimated locally),0.33 per call) 
  Calls: 
CanSM_TransceiverModeIndication/54 (CanSM_TransceiverModeIndication) @072267e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_TrcvModeIndication/25 (359703511 (estimated locally),0.33 per call) 
  Calls: 
CanSM_ControllerModeIndication/53 (CanSM_ControllerModeIndication) @07226620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_ControllerModeIndication/24 (357977557 (estimated locally),0.33 per call) 
  Calls: 
CanSM_ControllerBusOff/52 (CanSM_ControllerBusOff) @07226460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_ControllerBusOff/23 (359703511 (estimated locally),0.33 per call) 
  Calls: 
CanIf_CanTrcvConfig/51 (CanIf_CanTrcvConfig) @071c3510
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanIf_CheckWakeup/18 (read)CanIf_ClearTrcvWufFlag/19 (read)CanIf_SetTrcvMode/14 (read)CanIf_GetTrcvMode/15 (read)CanIf_GetTrcvWakeupReason/16 (read)CanIf_SetTrcvWakeupMode/17 (read)CanIf_CheckTrcvWakeFlag/20 (read)
  Availability: not_available
  Varpool flags: read-only
CanIf_CbkFctPtrTbl/50 (CanIf_CbkFctPtrTbl) @071bd288
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanIf_SendTxConfirmation/37 (read)CanIf_SendRxIndication.isra.0/59 (read)
  Availability: not_available
  Varpool flags: read-only
Det_ASR43_ReportRuntimeError/49 (Det_ASR43_ReportRuntimeError) @071b5540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_ProcessTxLength/39 (29196519 (estimated locally),0.03 per call) 
  Calls: 
SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0) @071b5000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_ControllerBusOff/23 (359703511 (estimated locally),0.33 per call) CanIf_TxConfirmation/21 (359703511 (estimated locally),0.33 per call) CanIf_Transmit/11 (29759104 (estimated locally),0.03 per call) CanIf_Transmit/11 (34026951 (estimated locally),0.03 per call) CanIf_Transmit/11 (29759104 (estimated locally),0.03 per call) CanIf_Transmit/11 (5827183 (estimated locally),0.01 per call) CanIf_Transmit/11 (66562894 (estimated locally),0.06 per call) CanIf_GetControllerMode/10 (337401893 (estimated locally),0.31 per call) CanIf_ProcessRxPdu.isra.0/60 (27420199 (estimated locally),0.03 per call) CanIf_ProcessRxPdu.isra.0/60 (54840397 (estimated locally),0.05 per call) CanIf_SetPduModeInternal/30 (2910211 (estimated locally),0.00 per call) 
  Calls: 
SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 (SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0) @0719eee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_ControllerBusOff/23 (359703511 (estimated locally),0.33 per call) CanIf_TxConfirmation/21 (359703511 (estimated locally),0.33 per call) CanIf_Transmit/11 (29759104 (estimated locally),0.03 per call) CanIf_Transmit/11 (136176133 (estimated locally),0.13 per call) CanIf_GetControllerMode/10 (337401893 (estimated locally),0.31 per call) CanIf_ProcessRxPdu.isra.0/60 (27420199 (estimated locally),0.03 per call) CanIf_ProcessRxPdu.isra.0/60 (54840397 (estimated locally),0.05 per call) CanIf_SetPduModeInternal/30 (2910211 (estimated locally),0.00 per call) 
  Calls: 
CanIf_CanDrvFctConfig/46 (CanIf_CanDrvFctConfig) @071ac6c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanIf_SetControllerModeInternal/29 (read)CanIf_Transmit/11 (read)CanIf_SetControllerModeInternal/29 (read)CanIf_SetControllerModeInternal/29 (read)CanIf_RxIndication/22 (read)
  Availability: not_available
  Varpool flags: read-only
CanIf_PduMode/45 (CanIf_PduMode) @07196ca8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanIf_SetPduModeInternal/30 (write)CanIf_SetControllerModeInternal/29 (write)CanIf_GetPduMode/13 (read)CanIf_ProcessRxPdu.isra.0/60 (read)CanIf_SetPduModeInternal/30 (write)CanIf_SetPduModeInternal/30 (write)CanIf_SetControllerModeInternal/29 (write)CanIf_ControllerBusOff/23 (write)CanIf_Init/8 (write)CanIf_Transmit/11 (read)
  Availability: not_available
  Varpool flags:
CanIf_CanControllerFlags/44 (CanIf_CanControllerFlags) @07196c60
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanIf_SetPduModeInternal/30 (write)CanIf_SetControllerModeInternal/29 (read)CanIf_SetControllerModeInternal/29 (write)CanIf_ProcessRxPdu.isra.0/60 (write)CanIf_ProcessRxPdu.isra.0/60 (read)CanIf_Transmit/11 (read)CanIf_SetPduModeInternal/30 (read)CanIf_Init/8 (write)CanIf_TxConfirmation/21 (read)CanIf_TxConfirmation/21 (write)
  Availability: not_available
  Varpool flags:
CanIf_CanControllerMode/43 (CanIf_CanControllerMode) @07196c18
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanIf_ControllerBusOff/23 (write)CanIf_ProcessRxPdu.isra.0/60 (read)CanIf_Init/8 (write)CanIf_GetControllerMode/10 (read)CanIf_Transmit/11 (read)CanIf_ControllerModeIndication/24 (write)CanIf_SetPduMode/12 (read)
  Availability: not_available
  Varpool flags:
CanIf_LcfgSignature/42 (CanIf_LcfgSignature) @071967e0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CanIf_IsValidConfig.part.0/61 (read)
  Availability: not_available
  Varpool flags: read-only
TS_PlatformSigIsValid/41 (TS_PlatformSigIsValid) @0719ea80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_IsValidConfig/7 (574129754 (estimated locally),0.53 per call) 
  Calls: 
Det_ASR40_ReportError/40 (Det_ASR40_ReportError) @0719e7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: CanIf_CheckTrcvWakeFlagIndication/28 (359703511 (estimated locally),0.33 per call) CanIf_CheckTrcvWakeFlagIndication/28 (354334802 (estimated locally),0.33 per call) CanIf_ClearTrcvWufFlagIndication/27 (359703511 (estimated locally),0.33 per call) CanIf_ClearTrcvWufFlagIndication/27 (354334802 (estimated locally),0.33 per call) CanIf_ConfirmPnAvailability/26 (359703511 (estimated locally),0.33 per call) CanIf_ConfirmPnAvailability/26 (354334802 (estimated locally),0.33 per call) CanIf_TrcvModeIndication/25 (359703511 (estimated locally),0.33 per call) CanIf_TrcvModeIndication/25 (354334802 (estimated locally),0.33 per call) CanIf_ControllerModeIndication/24 (124025147 (estimated locally),0.12 per call) CanIf_ControllerModeIndication/24 (237404317 (estimated locally),0.22 per call) CanIf_ControllerModeIndication/24 (354334802 (estimated locally),0.33 per call) CanIf_ControllerBusOff/23 (359703511 (estimated locally),0.33 per call) CanIf_ControllerBusOff/23 (354334802 (estimated locally),0.33 per call) CanIf_RxIndication/22 (215822106 (estimated locally),0.20 per call) CanIf_RxIndication/22 (354334802 (estimated locally),0.33 per call) CanIf_TxConfirmation/21 (359703511 (estimated locally),0.33 per call) CanIf_TxConfirmation/21 (354334802 (estimated locally),0.33 per call) CanIf_CheckTrcvWakeFlag/20 (237404317 (estimated locally),0.22 per call) CanIf_CheckTrcvWakeFlag/20 (354334802 (estimated locally),0.33 per call) CanIf_ClearTrcvWufFlag/19 (237404317 (estimated locally),0.22 per call) CanIf_ClearTrcvWufFlag/19 (354334802 (estimated locally),0.33 per call) CanIf_CheckWakeup/18 (38976828 (estimated locally),0.22 per call) CanIf_CheckWakeup/18 (58174370 (estimated locally),0.33 per call) CanIf_SetTrcvWakeupMode/17 (159060892 (estimated locally),0.15 per call) CanIf_SetTrcvWakeupMode/17 (237404317 (estimated locally),0.22 per call) CanIf_SetTrcvWakeupMode/17 (354334802 (estimated locally),0.33 per call) CanIf_GetTrcvWakeupReason/16 (196024745 (estimated locally),0.18 per call) CanIf_GetTrcvWakeupReason/16 (125392644 (estimated locally),0.12 per call) CanIf_GetTrcvWakeupReason/16 (354334802 (estimated locally),0.33 per call) CanIf_GetTrcvMode/15 (196024745 (estimated locally),0.18 per call) CanIf_GetTrcvMode/15 (125392644 (estimated locally),0.12 per call) CanIf_GetTrcvMode/15 (354334802 (estimated locally),0.33 per call) CanIf_SetTrcvMode/14 (159060892 (estimated locally),0.15 per call) CanIf_SetTrcvMode/14 (237404317 (estimated locally),0.22 per call) CanIf_SetTrcvMode/14 (354334802 (estimated locally),0.33 per call) CanIf_GetPduMode/13 (84013071 (estimated locally),0.08 per call) CanIf_GetPduMode/13 (237404317 (estimated locally),0.22 per call) CanIf_GetPduMode/13 (354334802 (estimated locally),0.33 per call) CanIf_SetPduMode/12 (268861108 (estimated locally),0.25 per call) CanIf_SetPduMode/12 (237404317 (estimated locally),0.22 per call) CanIf_SetPduMode/12 (354334802 (estimated locally),0.33 per call) CanIf_Transmit/11 (119396890 (estimated locally),0.11 per call) CanIf_Transmit/11 (84013071 (estimated locally),0.08 per call) CanIf_Transmit/11 (237404317 (estimated locally),0.22 per call) CanIf_Transmit/11 (354334802 (estimated locally),0.33 per call) CanIf_GetControllerMode/10 (144600811 (estimated locally),0.13 per call) CanIf_GetControllerMode/10 (237404317 (estimated locally),0.22 per call) CanIf_GetControllerMode/10 (354334802 (estimated locally),0.33 per call) CanIf_SetControllerMode/9 (124025147 (estimated locally),0.12 per call) CanIf_SetControllerMode/9 (237404317 (estimated locally),0.22 per call) CanIf_SetControllerMode/9 (354334802 (estimated locally),0.33 per call) CanIf_Init/8 (58174370 (estimated locally),0.23 per call) CanIf_Init/8 (75551130 (estimated locally),0.30 per call) CanIf_CheckWakeFlag_HlpNoPn/6 (1073741824 (estimated locally),1.00 per call) CanIf_ClearTrcvWufFlag_HlpNoPn/5 (1073741824 (estimated locally),1.00 per call) CanIf_ProcessTxLength/39 (18166476 (estimated locally),0.02 per call) CanIf_RxIndication_DetChecks/35 (22482712 (estimated locally),0.02 per call) CanIf_RxIndication_DetChecks/35 (18611596 (estimated locally),0.02 per call) CanIf_RxIndication_DetChecks/35 (52592689 (estimated locally),0.05 per call) CanIf_RxIndication_DetChecks/35 (178030109 (estimated locally),0.17 per call) CanIf_RxIndication_DetChecks/35 (166183022 (estimated locally),0.15 per call) 
  Calls: 
CanIf_ProcessTxLength/39 (CanIf_ProcessTxLength) @0719e620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanIf_TxPduConfigPtr/0 (read)
  Referring: 
  Function CanIf_ProcessTxLength/39 is inline copy in CanIf_Transmit/11
  Availability: local
  Function flags: count:278592743 (estimated locally) body local optimize_size
  Called by: CanIf_Transmit/11 (inlined) (278592743 (estimated locally),0.26 per call) 
  Calls: Det_ASR43_ReportRuntimeError/49 (29196519 (estimated locally),0.03 per call) Det_ASR40_ReportError/40 (18166476 (estimated locally),0.02 per call) 
CanIf_SendTxConfirmation/37 (CanIf_SendTxConfirmation) @0719e0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanIf_TxPduConfigPtr/0 (read)CanIf_CbkFctPtrTbl/50 (read)
  Referring: 
  Function CanIf_SendTxConfirmation/37 is inline copy in CanIf_TxConfirmation/21
  Availability: local
  Function flags: count:359703511 (estimated locally) body local optimize_size
  Called by: CanIf_TxConfirmation/21 (inlined) (359703511 (estimated locally),0.33 per call) 
  Calls: 
   Indirect call(166183022 (estimated locally),0.15 per call) 
CanIf_RxIndication_DetChecks/35 (CanIf_RxIndication_DetChecks) @07142d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanIf_DriverConfigPtr/4 (read)CanIf_ConfigPtr/1 (read)
  Referring: 
  Function CanIf_RxIndication_DetChecks/35 is inline copy in CanIf_RxIndication/22
  Availability: local
  Function flags: count:503584915 (estimated locally) body local optimize_size
  Called by: CanIf_RxIndication/22 (inlined) (503584915 (estimated locally),0.47 per call) 
  Calls: Det_ASR40_ReportError/40 (22482712 (estimated locally),0.02 per call) Det_ASR40_ReportError/40 (18611596 (estimated locally),0.02 per call) Det_ASR40_ReportError/40 (52592689 (estimated locally),0.05 per call) Det_ASR40_ReportError/40 (178030109 (estimated locally),0.17 per call) Det_ASR40_ReportError/40 (166183022 (estimated locally),0.15 per call) 
CanIf_BinarySwFiltering/34 (CanIf_BinarySwFiltering) @071429a0
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:229727064 (estimated locally) body optimize_size
  Called by: 
  Calls: 
CanIf_PerformSwFiltering/33 (CanIf_PerformSwFiltering) @07142540
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
CanIf_SoftwareFiltering/32 (CanIf_SoftwareFiltering) @07138e00
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: 
CanIf_SetPduModeInternal/30 (CanIf_SetPduModeInternal) @07138540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanIf_PduMode/45 (write)CanIf_PduMode/45 (write)CanIf_PduMode/45 (write)CanIf_ConfigPtr/1 (read)CanIf_CanControllerFlags/44 (read)CanIf_CanControllerFlags/44 (write)
  Referring: 
  Function CanIf_SetPduModeInternal/30 is inline copy in CanIf_SetPduMode/12
  Availability: local
  Function flags: count:43139859 (estimated locally) body local optimize_size
  Called by: CanIf_SetPduMode/12 (inlined) (43139859 (estimated locally),0.04 per call) 
  Calls: SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (2910211 (estimated locally),0.00 per call) SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 (2910211 (estimated locally),0.00 per call) 
CanIf_SetControllerModeInternal/29 (CanIf_SetControllerModeInternal) @071381c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: CanIf_ConfigPtr/1 (read)CanIf_PduMode/45 (write)CanIf_CanDrvFctConfig/46 (read)CanIf_CanDrvFctConfig/46 (read)CanIf_CanDrvFctConfig/46 (read)CanIf_PduMode/45 (write)CanIf_ConfigPtr/1 (read)CanIf_CanControllerFlags/44 (read)CanIf_CanControllerFlags/44 (write)
  Referring: 
  Function CanIf_SetControllerModeInternal/29 is inline copy in CanIf_SetControllerMode/9
  Availability: local
  Function flags: count:357977557 (estimated locally) body local optimize_size
  Called by: CanIf_SetControllerMode/9 (inlined) (357977557 (estimated locally),0.33 per call) 
  Calls: 
   Indirect call(89494389 (estimated locally),0.08 per call) 
   Indirect call(89494389 (estimated locally),0.08 per call) 
   Indirect call(89494389 (estimated locally),0.08 per call) 
CanIf_CheckTrcvWakeFlagIndication/28 (CanIf_CheckTrcvWakeFlagIndication) @07131b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: CanSM_CheckTransceiverWakeFlagIndication/57 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_ClearTrcvWufFlagIndication/27 (CanIf_ClearTrcvWufFlagIndication) @071319a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: CanSM_ClearTrcvWufFlagIndication/56 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_ConfirmPnAvailability/26 (CanIf_ConfirmPnAvailability) @071317e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: CanSM_ConfirmPnAvailability/55 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_TrcvModeIndication/25 (CanIf_TrcvModeIndication) @07131620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: CanSM_TransceiverModeIndication/54 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_ControllerModeIndication/24 (CanIf_ControllerModeIndication) @07131460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_DriverConfigPtr/4 (read)CanIf_CanControllerMode/43 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: CanSM_ControllerModeIndication/53 (357977557 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (124025147 (estimated locally),0.12 per call) Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_ControllerBusOff/23 (CanIf_ControllerBusOff) @071310e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_DriverConfigPtr/4 (read)CanIf_CanControllerMode/43 (write)CanIf_PduMode/45 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: CanSM_ControllerBusOff/52 (359703511 (estimated locally),0.33 per call) SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (359703511 (estimated locally),0.33 per call) SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_RxIndication/22 (CanIf_RxIndication) @07126ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)CanIf_CanDrvFctConfig/46 (read)CanIf_ConfigPtr/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: CanIf_ProcessRxPdu.isra.0/60 (inlined) (54840397 (estimated locally),0.05 per call) CanIf_SoftwareFiltering.constprop/62 (inlined) (166183022 (estimated locally),0.15 per call) CanIf_RxIndication_DetChecks/35 (inlined) (503584915 (estimated locally),0.47 per call) Det_ASR40_ReportError/40 (215822106 (estimated locally),0.20 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_TxConfirmation/21 (CanIf_TxConfirmation) @071267e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)CanIf_TxPduConfigPtr/0 (read)CanIf_CanControllerFlags/44 (read)CanIf_CanControllerFlags/44 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: CanIf_SendTxConfirmation/37 (inlined) (359703511 (estimated locally),0.33 per call) SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (359703511 (estimated locally),0.33 per call) SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_CheckTrcvWakeFlag/20 (CanIf_CheckTrcvWakeFlag) @07126620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)CanIf_CanTrcvConfig/51 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
   Indirect call(482002704 (estimated locally),0.45 per call) 
CanIf_ClearTrcvWufFlag/19 (CanIf_ClearTrcvWufFlag) @071262a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)CanIf_CanTrcvConfig/51 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
   Indirect call(482002704 (estimated locally),0.45 per call) 
CanIf_CheckWakeup/18 (CanIf_CheckWakeup) @0710bee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_CanTrcvConfig/51 (read)CanIf_ConfigPtr/1 (read)
  Referring: 
  Availability: available
  Function flags: count:176285970 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (38976828 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (58174370 (estimated locally),0.33 per call) 
   Indirect call(477815112 (estimated locally),2.71 per call) 
CanIf_SetTrcvWakeupMode/17 (CanIf_SetTrcvWakeupMode) @0710bc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)CanIf_CanTrcvConfig/51 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (159060892 (estimated locally),0.15 per call) Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
   Indirect call(322941812 (estimated locally),0.30 per call) 
CanIf_GetTrcvWakeupReason/16 (CanIf_GetTrcvWakeupReason) @0710b8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)CanIf_CanTrcvConfig/51 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (196024745 (estimated locally),0.18 per call) Det_ASR40_ReportError/40 (125392644 (estimated locally),0.12 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
   Indirect call(397989633 (estimated locally),0.37 per call) 
CanIf_GetTrcvMode/15 (CanIf_GetTrcvMode) @0710b540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)CanIf_CanTrcvConfig/51 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (196024745 (estimated locally),0.18 per call) Det_ASR40_ReportError/40 (125392644 (estimated locally),0.12 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
   Indirect call(397989633 (estimated locally),0.37 per call) 
CanIf_SetTrcvMode/14 (CanIf_SetTrcvMode) @0710b1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)CanIf_CanTrcvConfig/51 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (159060892 (estimated locally),0.15 per call) Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
   Indirect call(322941812 (estimated locally),0.30 per call) 
CanIf_GetPduMode/13 (CanIf_GetPduMode) @070efe00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_DriverConfigPtr/4 (read)CanIf_PduMode/45 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (84013071 (estimated locally),0.08 per call) Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_SetPduMode/12 (CanIf_SetPduMode) @070efb60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_DriverConfigPtr/4 (read)CanIf_CanControllerMode/43 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: CanIf_SetPduModeInternal/30 (inlined) (43139859 (estimated locally),0.04 per call) Det_ASR40_ReportError/40 (268861108 (estimated locally),0.25 per call) Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_Transmit/11 (CanIf_Transmit) @070ef9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_ConfigPtr/1 (read)CanIf_TxPduConfigPtr/0 (read)CanIf_CanControllerMode/43 (read)CanIf_PduMode/45 (read)CanIf_ConfigPtr/1 (read)CanIf_CanControllerFlags/44 (read)CanIf_TxPduConfigPtr/0 (read)CanIf_TxPduConfigPtr/0 (read)CanIf_CanDrvFctConfig/46 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (29759104 (estimated locally),0.03 per call) SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (34026951 (estimated locally),0.03 per call) SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 (29759104 (estimated locally),0.03 per call) SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (29759104 (estimated locally),0.03 per call) SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (5827183 (estimated locally),0.01 per call) SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (66562894 (estimated locally),0.06 per call) SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 (136176133 (estimated locally),0.13 per call) CanIf_ProcessTxLength/39 (inlined) (278592743 (estimated locally),0.26 per call) Det_ASR40_ReportError/40 (119396890 (estimated locally),0.11 per call) Det_ASR40_ReportError/40 (84013071 (estimated locally),0.08 per call) Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
   Indirect call(29759104 (estimated locally),0.03 per call) 
CanIf_GetControllerMode/10 (CanIf_GetControllerMode) @070ef620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_DriverConfigPtr/4 (read)CanIf_CanControllerMode/43 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/48 (337401893 (estimated locally),0.31 per call) SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0/47 (337401893 (estimated locally),0.31 per call) Det_ASR40_ReportError/40 (144600811 (estimated locally),0.13 per call) Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_SetControllerMode/9 (CanIf_SetControllerMode) @070ef460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_State/2 (read)CanIf_DriverConfigPtr/4 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: CanIf_SetControllerModeInternal/29 (inlined) (357977557 (estimated locally),0.33 per call) Det_ASR40_ReportError/40 (124025147 (estimated locally),0.12 per call) Det_ASR40_ReportError/40 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/40 (354334802 (estimated locally),0.33 per call) 
CanIf_Init/8 (CanIf_Init) @070ef2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CanIf_ConfigPtr/1 (write)CanIf_TxPduConfigPtr/0 (write)CanIf_RxPduConfigPtr/3 (write)CanIf_DriverConfigPtr/4 (write)CanIf_CanControllerMode/43 (write)CanIf_CanControllerFlags/44 (write)CanIf_PduMode/45 (write)CanIf_State/2 (write)
  Referring: 
  Availability: available
  Function flags: count:251837100 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (58174370 (estimated locally),0.23 per call) CanIf_IsValidConfig/7 (176285970 (estimated locally),0.70 per call) Det_ASR40_ReportError/40 (75551130 (estimated locally),0.30 per call) 
CanIf_IsValidConfig/7 (CanIf_IsValidConfig) @06fffe00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: CanIf_Init/8 (176285970 (estimated locally),0.70 per call) 
  Calls: CanIf_IsValidConfig.part.0/61 (inlined) (66369400 (estimated locally),0.06 per call) TS_PlatformSigIsValid/41 (574129754 (estimated locally),0.53 per call) 
CanIf_CheckWakeFlag_HlpNoPn/6 (CanIf_CheckWakeFlag_HlpNoPn) @06fffc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (1073741824 (estimated locally),1.00 per call) 
CanIf_ClearTrcvWufFlag_HlpNoPn/5 (CanIf_ClearTrcvWufFlag_HlpNoPn) @06fffa80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/40 (1073741824 (estimated locally),1.00 per call) 
CanIf_DriverConfigPtr/4 (CanIf_DriverConfigPtr) @0709d708
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: CanIf_SetPduMode/12 (read)CanIf_ControllerBusOff/23 (read)CanIf_RxIndication_DetChecks/35 (read)CanIf_Init/8 (write)CanIf_SetControllerMode/9 (read)CanIf_GetControllerMode/10 (read)CanIf_GetPduMode/13 (read)CanIf_ControllerModeIndication/24 (read)
  Availability: available
  Varpool flags:
CanIf_RxPduConfigPtr/3 (CanIf_RxPduConfigPtr) @0709d6c0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: CanIf_ProcessRxPdu.isra.0/60 (read)CanIf_Init/8 (write)
  Availability: available
  Varpool flags:
CanIf_State/2 (CanIf_State) @0709d678
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: CanIf_ConfirmPnAvailability/26 (read)CanIf_ClearTrcvWufFlagIndication/27 (read)CanIf_Init/8 (write)CanIf_SetControllerMode/9 (read)CanIf_GetControllerMode/10 (read)CanIf_Transmit/11 (read)CanIf_SetPduMode/12 (read)CanIf_GetPduMode/13 (read)CanIf_SetTrcvMode/14 (read)CanIf_GetTrcvMode/15 (read)CanIf_GetTrcvWakeupReason/16 (read)CanIf_SetTrcvWakeupMode/17 (read)CanIf_CheckWakeup/18 (read)CanIf_ClearTrcvWufFlag/19 (read)CanIf_CheckTrcvWakeFlag/20 (read)CanIf_TxConfirmation/21 (read)CanIf_RxIndication/22 (read)CanIf_ControllerBusOff/23 (read)CanIf_ControllerModeIndication/24 (read)CanIf_TrcvModeIndication/25 (read)CanIf_CheckTrcvWakeFlagIndication/28 (read)
  Availability: available
  Varpool flags: initialized
CanIf_ConfigPtr/1 (CanIf_ConfigPtr) @0709d630
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: CanIf_GetTrcvMode/15 (read)CanIf_SetTrcvMode/14 (read)CanIf_SetControllerModeInternal/29 (read)CanIf_SetControllerModeInternal/29 (read)CanIf_ClearTrcvWufFlag/19 (read)CanIf_PerformSwFiltering.constprop.0/63 (read)CanIf_RxIndication_DetChecks/35 (read)CanIf_GetTrcvWakeupReason/16 (read)CanIf_ClearTrcvWufFlagIndication/27 (read)CanIf_TxConfirmation/21 (read)CanIf_RxIndication/22 (read)CanIf_TrcvModeIndication/25 (read)CanIf_ConfirmPnAvailability/26 (read)CanIf_Transmit/11 (read)CanIf_CheckTrcvWakeFlag/20 (read)CanIf_BinarySwFiltering.constprop.0/64 (read)CanIf_SetPduModeInternal/30 (read)CanIf_CheckWakeup/18 (read)CanIf_Init/8 (write)CanIf_SoftwareFiltering.constprop.0/62 (read)CanIf_Transmit/11 (read)CanIf_SetTrcvWakeupMode/17 (read)CanIf_RxIndication/22 (read)CanIf_CheckTrcvWakeFlagIndication/28 (read)
  Availability: available
  Varpool flags:
CanIf_TxPduConfigPtr/0 (CanIf_TxPduConfigPtr) @0709d5e8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: CanIf_SendTxConfirmation/37 (read)CanIf_Init/8 (write)CanIf_ProcessTxLength/39 (read)CanIf_Transmit/11 (read)CanIf_Transmit/11 (read)CanIf_Transmit/11 (read)CanIf_TxConfirmation/21 (read)
  Availability: available
  Varpool flags:

;; Function CanIf_ClearTrcvWufFlag_HlpNoPn (CanIf_ClearTrcvWufFlag_HlpNoPn, funcdef_no=0, decl_uid=8269, cgraph_uid=1, symbol_order=5)

CanIf_ClearTrcvWufFlag_HlpNoPn (uint8 TransceiverId)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 30, 17);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return 1;

}



;; Function CanIf_CheckWakeFlag_HlpNoPn (CanIf_CheckWakeFlag_HlpNoPn, funcdef_no=1, decl_uid=8271, cgraph_uid=2, symbol_order=6)

CanIf_CheckWakeFlag_HlpNoPn (uint8 TransceiverId)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 31, 17);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return 1;

}



;; Function CanIf_IsValidConfig (CanIf_IsValidConfig, funcdef_no=2, decl_uid=8208, cgraph_uid=3, symbol_order=7)


Symbols to be put in SSA form
{ D.10188 D.10317 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


Removing basic block 5
Removing basic block 8
Merging blocks 12 and 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 9 }
;; 3 succs { 4 9 }
;; 4 succs { 5 9 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
CanIf_IsValidConfig (const void * voidConfigPtr)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.10317;
  Std_ReturnType RetVal;
  long unsigned int _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _11;
  long unsigned int CanIf_LcfgSignature.0_12;
  long unsigned int _13;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG ConfigPtr => voidConfigPtr_6(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (voidConfigPtr_6(D) != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 9>; [46.53%]

  <bb 3> [local count: 574129754]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const struct CanIf_ConfigType *)voidConfigPtr_6(D)].PlatformSignature;
  _2 = TS_PlatformSigIsValid (_1);
  if (_2 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 4> [local count: 195204116]:
  # DEBUG BEGIN_STMT
  _3 = MEM[(const struct CanIf_ConfigType *)voidConfigPtr_6(D)].CfgSignature;
  if (_3 == 4094173456)
    goto <bb 5>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 5> [local count: 66369399]:
  # DEBUG voidConfigPtr => voidConfigPtr_6(D)
  # DEBUG INLINE_ENTRY CanIf_IsValidConfig
  # DEBUG BEGIN_STMT
  _11 = MEM[(const struct CanIf_ConfigType *)voidConfigPtr_6(D)].LcfgSignature;
  CanIf_LcfgSignature.0_12 = CanIf_LcfgSignature;
  if (_11 == CanIf_LcfgSignature.0_12)
    goto <bb 6>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 6> [local count: 22565596]:
  # DEBUG BEGIN_STMT
  _13 = MEM[(const struct CanIf_ConfigType *)voidConfigPtr_6(D)].PublicInfoSignature;
  if (_13 == 3439471228)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 7672303]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 8> [local count: 66369399]:
  # RetVal_14 = PHI <1(5), 1(6), 0(7)>
  # DEBUG RetVal => RetVal_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = RetVal_14;
  # DEBUG voidConfigPtr => NULL
  # DEBUG RetVal => NULL
  # DEBUG ConfigPtr => NULL
  RetVal_10 = _15;

  <bb 9> [local count: 1073741823]:
  # RetVal_4 = PHI <1(2), 1(3), 1(4), RetVal_10(8)>
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_4;

}



;; Function CanIf_Init (CanIf_Init, funcdef_no=3, decl_uid=8210, cgraph_uid=4, symbol_order=8)

CanIf_Init (const struct CanIf_ConfigType * ConfigPtr)
{
  uint16 i;
  unsigned char _1;
  long unsigned int _2;
  const struct CanIf_TxLPduConfigType * _3;
  long unsigned int _4;
  const struct CanIf_RxLPduConfigType * _5;
  long unsigned int _6;
  const struct CanIf_CanDriverConfigType * _7;
  int _8;
  unsigned char _9;
  short unsigned int _10;

  <bb 2> [local count: 251837100]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG LocalConfigPtr => ConfigPtr_14(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ConfigPtr_14(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 75551130]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 1, 20);
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 176285970]:
  # DEBUG BEGIN_STMT
  _1 = CanIf_IsValidConfig (ConfigPtr_14(D));
  if (_1 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 58174370]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 1, 20);
  goto <bb 10>; [100.00%]

  <bb 6> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr = ConfigPtr_14(D);
  # DEBUG BEGIN_STMT
  _2 = ConfigPtr_14(D)->txLPduConfigPtr;
  _3 = ConfigPtr_14(D) + _2;
  CanIf_TxPduConfigPtr = _3;
  # DEBUG BEGIN_STMT
  _4 = ConfigPtr_14(D)->rxLPduConfigPtr;
  _5 = ConfigPtr_14(D) + _4;
  CanIf_RxPduConfigPtr = _5;
  # DEBUG BEGIN_STMT
  _6 = ConfigPtr_14(D)->driverConfigPtr;
  _7 = ConfigPtr_14(D) + _6;
  CanIf_DriverConfigPtr = _7;
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = (int) i_11;
  CanIf_CanControllerMode[_8] = 2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_CanControllerFlags[_8] = 8;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_PduMode[_8] = 0;
  # DEBUG BEGIN_STMT
  i_25 = i_11 + 1;
  # DEBUG i => i_25

  <bb 8> [local count: 1073741824]:
  # i_11 = PHI <0(6), i_25(7)>
  # DEBUG i => i_11
  # DEBUG BEGIN_STMT
  _9 = _7->nrOfControllers;
  _10 = (short unsigned int) _9;
  if (_10 > i_11)
    goto <bb 7>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State = 1;

  <bb 10> [local count: 251837101]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanIf_SetControllerMode (CanIf_SetControllerMode, funcdef_no=4, decl_uid=8213, cgraph_uid=5, symbol_order=9)


Symbols to be put in SSA form
{ D.10190 D.10348 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 23
Number of blocks to update: 22 ( 96%)


Removing basic block 10
Merging blocks 22 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 3 4 }
;; 3 succs { 20 }
;; 4 succs { 5 6 }
;; 5 succs { 20 }
;; 6 succs { 7 10 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 20 }
;; 10 succs { 19 13 11 15 }
;; 11 succs { 12 19 }
;; 12 succs { 19 }
;; 13 succs { 14 19 }
;; 14 succs { 19 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 1 }
CanIf_SetControllerMode (uint8 ControllerId, CanIf_ControllerModeType ControllerMode)
{
  Std_ReturnType RetVal;
  uint8 canCtrlId;
  Std_ReturnType D.10348;
  Std_ReturnType RetVal;
  unsigned char CanIf_State.9_1;
  const struct CanIf_CanDriverConfigType * CanIf_DriverConfigPtr.10_2;
  unsigned char _3;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.11_14;
  long unsigned int _15;
  const struct CanIf_CanDriverConfigType * _16;
  long unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  sizetype _20;
  const struct CanIf_CanControllerConfigType * _21;
  int _23;
  Std_ReturnType (*<T8c3>) (uint8, Can_ControllerStateType) _24;
  unsigned char _25;
  Std_ReturnType (*<T8c3>) (uint8, Can_ControllerStateType) _26;
  unsigned char _27;
  Std_ReturnType (*<T8c3>) (uint8, Can_ControllerStateType) _28;
  unsigned char _29;
  int _30;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.14_31;
  long unsigned int _32;
  const struct CanIf_CanDriverConfigType * _33;
  long unsigned int _34;
  sizetype _35;
  const struct CanIf_CanControllerConfigType * _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.9_1 = CanIf_State;
  if (CanIf_State.9_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 3, 30);
  goto <bb 20>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  CanIf_DriverConfigPtr.10_2 = CanIf_DriverConfigPtr;
  _3 = CanIf_DriverConfigPtr.10_2->nrOfControllers;
  if (_3 <= ControllerId_7(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 3, 15);
  goto <bb 20>; [100.00%]

  <bb 6> [local count: 482002704]:
  # DEBUG BEGIN_STMT
  if (ControllerMode_8(D) != 3)
    goto <bb 7>; [79.76%]
  else
    goto <bb 10>; [20.24%]

  <bb 7> [local count: 384445357]:
  if (ControllerMode_8(D) != 1)
    goto <bb 8>; [66.00%]
  else
    goto <bb 10>; [34.00%]

  <bb 8> [local count: 253733935]:
  if (ControllerMode_8(D) != 2)
    goto <bb 9>; [48.88%]
  else
    goto <bb 10>; [51.12%]

  <bb 9> [local count: 124025147]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 3, 21);
  goto <bb 20>; [100.00%]

  <bb 10> [local count: 357977557]:
  # DEBUG BEGIN_STMT
  # DEBUG ControllerId => ControllerId_7(D)
  # DEBUG ControllerMode => ControllerMode_8(D)
  # DEBUG INLINE_ENTRY CanIf_SetControllerModeInternal
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG canIdx => 0
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.11_14 = CanIf_ConfigPtr;
  _15 = CanIf_ConfigPtr.11_14->driverConfigPtr;
  _16 = CanIf_ConfigPtr.11_14 + _15;
  _17 = _16->ctrlConfigPtr;
  _18 = (unsigned int) ControllerId_7(D);
  _19 = _18 * 12;
  _20 = _17 + _19;
  _21 = CanIf_ConfigPtr.11_14 + _20;
  canCtrlId_22 = _21->controllerId;
  # DEBUG canCtrlId => canCtrlId_22
  # DEBUG BEGIN_STMT
  switch (ControllerMode_8(D)) <default: <L15> [25.00%], case 1: <L13> [25.00%], case 2: <L12> [25.00%], case 3: <L14> [25.00%]>

  <bb 11> [local count: 89494389]:
<L12>:
  # DEBUG BEGIN_STMT
  _23 = (int) ControllerId_7(D);
  CanIf_PduMode[_23] = 1;
  # DEBUG BEGIN_STMT
  _24 = CanIf_CanDrvFctConfig[0].SetControllerMode;
  _25 = _24 (canCtrlId_22, 2);
  if (_25 == 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 12> [local count: 44747195]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  goto <bb 19>; [100.00%]

  <bb 13> [local count: 89494389]:
<L13>:
  # DEBUG BEGIN_STMT
  _26 = CanIf_CanDrvFctConfig[0].SetControllerMode;
  _27 = _26 (canCtrlId_22, 1);
  if (_27 == 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 14> [local count: 44747195]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  goto <bb 19>; [100.00%]

  <bb 15> [local count: 89494389]:
<L14>:
  # DEBUG BEGIN_STMT
  _28 = CanIf_CanDrvFctConfig[0].SetControllerMode;
  _29 = _28 (canCtrlId_22, 3);
  if (_29 == 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 16> [local count: 44747195]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 17> [local count: 89494389]:
  # RetVal_41 = PHI <1(15), 0(16)>
  # DEBUG RetVal => RetVal_41
  # DEBUG BEGIN_STMT
  _30 = (int) ControllerId_7(D);
  CanIf_PduMode[_30] = 0;
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.14_31 = CanIf_ConfigPtr;
  _32 = CanIf_ConfigPtr.14_31->driverConfigPtr;
  _33 = CanIf_ConfigPtr.14_31 + _32;
  _34 = _33->ctrlConfigPtr;
  _35 = _19 + _34;
  _36 = CanIf_ConfigPtr.14_31 + _35;
  _37 = _36->pNFilterEnabled;
  if (_37 == 1)
    goto <bb 18>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 18> [local count: 30428092]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = CanIf_CanControllerFlags[_30];
  _39 = _38 | 8;
  CanIf_CanControllerFlags[_30] = _39;

  <bb 19> [local count: 357977558]:
  # RetVal_40 = PHI <1(10), 1(11), 0(12), 1(13), 0(14), RetVal_41(17), RetVal_41(18)>
<L15>:
  # DEBUG RetVal => RetVal_40
  # DEBUG BEGIN_STMT
  _49 = RetVal_40;
  # DEBUG ControllerId => NULL
  # DEBUG ControllerMode => NULL
  # DEBUG canCtrlId => NULL
  # DEBUG RetVal => NULL
  RetVal_11 = _49;
  # DEBUG RetVal => RetVal_11

  <bb 20> [local count: 1073741824]:
  # RetVal_4 = PHI <1(3), 1(5), 1(9), RetVal_11(19)>
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_4;

}



;; Function CanIf_GetControllerMode (CanIf_GetControllerMode, funcdef_no=5, decl_uid=8216, cgraph_uid=6, symbol_order=10)

CanIf_GetControllerMode (uint8 ControllerId, CanIf_ControllerModeType * ControllerModePtr)
{
  Std_ReturnType RetVal;
  unsigned char CanIf_State.17_1;
  const struct CanIf_CanDriverConfigType * CanIf_DriverConfigPtr.18_2;
  unsigned char _3;
  int _4;
  <unnamed type> _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.17_1 = CanIf_State;
  if (CanIf_State.17_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 4, 30);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_DriverConfigPtr.18_2 = CanIf_DriverConfigPtr;
  _3 = CanIf_DriverConfigPtr.18_2->nrOfControllers;
  if (_3 <= ControllerId_9(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 4, 15);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 482002705]:
  # DEBUG BEGIN_STMT
  if (ControllerModePtr_10(D) == 0B)
    goto <bb 7>; [30.00%]
  else
    goto <bb 8>; [70.00%]

  <bb 7> [local count: 144600811]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 4, 20);
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 337401893]:
  # DEBUG BEGIN_STMT
  SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _4 = (int) ControllerId_9(D);
  _5 = CanIf_CanControllerMode[_4];
  *ControllerModePtr_10(D) = _5;
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 9> [local count: 1073741824]:
  # RetVal_6 = PHI <1(3), 1(5), 1(7), 0(8)>
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_6;

}



;; Function CanIf_Transmit (CanIf_Transmit, funcdef_no=6, decl_uid=8219, cgraph_uid=7, symbol_order=11)


Symbols to be put in SSA form
{ D.10192 D.10364 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 33
Number of blocks to update: 32 ( 97%)


Merging blocks 10 and 24
Merging blocks 32 and 23
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
;; 2 succs { 3 4 }
;; 3 succs { 30 }
;; 4 succs { 5 6 }
;; 5 succs { 30 }
;; 6 succs { 7 8 }
;; 7 succs { 30 }
;; 8 succs { 9 10 }
;; 9 succs { 30 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 18 }
;; 13 succs { 14 17 }
;; 14 succs { 15 18 }
;; 15 succs { 16 18 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 30 }
;; 19 succs { 21 20 }
;; 20 succs { 30 }
;; 21 succs { 22 27 }
;; 22 succs { 26 23 }
;; 23 succs { 26 24 }
;; 24 succs { 26 25 }
;; 25 succs { 30 }
;; 26 succs { 29 28 }
;; 27 succs { 30 }
;; 28 succs { 29 }
;; 29 succs { 30 }
;; 30 succs { 1 }
CanIf_Transmit (PduIdType CanTxPduId, const struct PduInfoType * PduInfoPtr)
{
  uint8 truncOpt;
  PduLengthType MaxFrameLength;
  PduLengthType TransmitLength;
  PduLengthType D.10364;
  Can_IdType TmpCanId;
  PduLengthType sduLengthInt;
  uint8 ControllerId;
  struct Can_PduType PduInfo;
  Can_HwHandleType CanHth;
  Std_ReturnType RetVal;
  unsigned char CanIf_State.19_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.20_2;
  short unsigned int _3;
  uint8 * _4;
  short unsigned int _5;
  const struct CanIf_TxLPduConfigType * CanIf_TxPduConfigPtr.21_6;
  unsigned int _7;
  unsigned int _8;
  const struct CanIf_TxLPduConfigType * _9;
  int _10;
  <unnamed type> _11;
  <unnamed type> _12;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.23_13;
  long unsigned int _14;
  const struct CanIf_CanDriverConfigType * _15;
  long unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  sizetype _19;
  const struct CanIf_CanControllerConfigType * _20;
  unsigned char _21;
  unsigned char _22;
  const struct CanIf_TxLPduConfigType * CanIf_TxPduConfigPtr.26_23;
  const struct CanIf_TxLPduConfigType * _24;
  unsigned char _25;
  const struct CanIf_TxLPduConfigType * CanIf_TxPduConfigPtr.27_26;
  const struct CanIf_TxLPduConfigType * _27;
  unsigned char _28;
  uint8 * _29;
  Std_ReturnType (*<T8be>) (Can_HwHandleType, const struct Can_PduType *) _30;
  unsigned char _31;
  unsigned char _52;
  const struct CanIf_TxLPduConfigType * CanIf_TxPduConfigPtr.28_61;
  unsigned int _62;
  unsigned int _63;
  const struct CanIf_TxLPduConfigType * _64;
  long unsigned int _66;
  long unsigned int _67;
  short unsigned int _68;
  unsigned char _69;
  unsigned char _70;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG send_message => 0
  # DEBUG BEGIN_STMT
  # DEBUG CallTxConfirmation => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.19_1 = CanIf_State;
  if (CanIf_State.19_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 5, 30);
  goto <bb 30>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.20_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.20_2->nrOfTxLPdus;
  if (_3 <= CanTxPduId_37(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 5, 50);
  goto <bb 30>; [100.00%]

  <bb 6> [local count: 482002705]:
  # DEBUG BEGIN_STMT
  if (PduInfoPtr_38(D) == 0B)
    goto <bb 7>; [17.43%]
  else
    goto <bb 8>; [82.57%]

  <bb 7> [local count: 84013071]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 5, 20);
  goto <bb 30>; [100.00%]

  <bb 8> [local count: 397989633]:
  # DEBUG BEGIN_STMT
  _4 = PduInfoPtr_38(D)->SduDataPtr;
  if (_4 == 0B)
    goto <bb 9>; [30.00%]
  else
    goto <bb 10>; [70.00%]

  <bb 9> [local count: 119396890]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 5, 20);
  goto <bb 30>; [100.00%]

  <bb 10> [local count: 278592743]:
  # DEBUG BEGIN_STMT
  _5 = PduInfoPtr_38(D)->SduLength;
  # DEBUG CanIfTxPduId => CanTxPduId_37(D)
  # DEBUG RequestedTxLength => _5
  # DEBUG INLINE_ENTRY CanIf_ProcessTxLength
  # DEBUG BEGIN_STMT
  CanIf_TxPduConfigPtr.28_61 = CanIf_TxPduConfigPtr;
  _62 = (unsigned int) CanTxPduId_37(D);
  _63 = _62 * 16;
  _64 = CanIf_TxPduConfigPtr.28_61 + _63;
  truncOpt_65 = _64->truncateOptions;
  # DEBUG truncOpt => truncOpt_65
  # DEBUG BEGIN_STMT
  # DEBUG MaxFrameLength => 8
  # DEBUG BEGIN_STMT
  # DEBUG TransmitLength => 255
  # DEBUG BEGIN_STMT
  _66 = _64->canId;
  _67 = _66 & 1073741824;
  if (_67 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [local count: 139296372]:
  # DEBUG BEGIN_STMT
  # DEBUG MaxFrameLength => 64

  <bb 12> [local count: 278592743]:
  # MaxFrameLength_71 = PHI <8(10), 64(11)>
  # DEBUG MaxFrameLength => MaxFrameLength_71
  # DEBUG BEGIN_STMT
  _68 = _64->PduLength;
  if (_5 > _68)
    goto <bb 13>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 13> [local count: 139296372]:
  # DEBUG BEGIN_STMT
  _69 = truncOpt_65 & 1;
  if (_69 != 0)
    goto <bb 14>; [79.04%]
  else
    goto <bb 17>; [20.96%]

  <bb 14> [local count: 110099852]:
  # DEBUG BEGIN_STMT
  _70 = truncOpt_65 & 2;
  if (_70 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 15> [local count: 55049926]:
  # DEBUG BEGIN_STMT
  if (_5 > MaxFrameLength_71)
    goto <bb 16>; [33.00%]
  else
    goto <bb 18>; [67.00%]

  <bb 16> [local count: 18166476]:
  # DEBUG BEGIN_STMT
  # DEBUG TransmitLength => MaxFrameLength_71
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 5, 11);
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 29196519]:
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (60, 0, 5, 90);

  <bb 18> [local count: 278592743]:
  # TransmitLength_72 = PHI <_5(12), _68(14), _5(15), MaxFrameLength_71(16), 255(17)>
  # DEBUG TransmitLength => TransmitLength_72
  # DEBUG BEGIN_STMT
  _76 = TransmitLength_72;
  # DEBUG CanIfTxPduId => NULL
  # DEBUG RequestedTxLength => NULL
  # DEBUG TransmitLength => NULL
  # DEBUG MaxFrameLength => NULL
  # DEBUG truncOpt => NULL
  sduLengthInt_40 = _76;
  # DEBUG sduLengthInt => sduLengthInt_40
  # DEBUG BEGIN_STMT
  if (sduLengthInt_40 != 255)
    goto <bb 19>; [48.88%]
  else
    goto <bb 30>; [51.12%]

  <bb 19> [local count: 136176133]:
  # DEBUG BEGIN_STMT
  CanIf_TxPduConfigPtr.21_6 = CanIf_TxPduConfigPtr;
  _7 = (unsigned int) CanTxPduId_37(D);
  _8 = _7 * 16;
  _9 = CanIf_TxPduConfigPtr.21_6 + _8;
  CanHth_41 = _9->hth;
  # DEBUG CanHth => CanHth_41
  # DEBUG BEGIN_STMT
  ControllerId_42 = _9->intCtrlIdx;
  # DEBUG ControllerId => ControllerId_42
  # DEBUG BEGIN_STMT
  SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = (int) ControllerId_42;
  _11 = CanIf_CanControllerMode[_10];
  if (_11 == 1)
    goto <bb 21>; [51.12%]
  else
    goto <bb 20>; [48.88%]

  <bb 20> [local count: 66562894]:
  # DEBUG send_message => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 30>; [100.00%]

  <bb 21> [local count: 69613239]:
  # DEBUG BEGIN_STMT
  _12 = CanIf_PduMode[_10];
  if (_12 == 3)
    goto <bb 22>; [51.12%]
  else
    goto <bb 27>; [48.88%]

  <bb 22> [local count: 35586288]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.23_13 = CanIf_ConfigPtr;
  _14 = CanIf_ConfigPtr.23_13->driverConfigPtr;
  _15 = CanIf_ConfigPtr.23_13 + _14;
  _16 = _15->ctrlConfigPtr;
  _17 = (unsigned int) ControllerId_42;
  _18 = _17 * 12;
  _19 = _16 + _18;
  _20 = CanIf_ConfigPtr.23_13 + _19;
  _21 = _20->pNFilterEnabled;
  if (_21 == 0)
    goto <bb 26>; [33.00%]
  else
    goto <bb 23>; [67.00%]

  <bb 23> [local count: 23842813]:
  _22 = CanIf_CanControllerFlags[_10];
  _52 = _22 & 8;
  if (_52 == 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 24> [local count: 11921406]:
  CanIf_TxPduConfigPtr.26_23 = CanIf_TxPduConfigPtr;
  _24 = CanIf_TxPduConfigPtr.26_23 + _8;
  _25 = _24->pNFilterFlag;
  if (_25 == 1)
    goto <bb 26>; [51.12%]
  else
    goto <bb 25>; [48.88%]

  <bb 25> [local count: 5827183]:
  # DEBUG send_message => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 30>; [100.00%]

  <bb 26> [local count: 29759104]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_TxPduConfigPtr.27_26 = CanIf_TxPduConfigPtr;
  _27 = CanIf_TxPduConfigPtr.27_26 + _8;
  TmpCanId_44 = _27->canId;
  # DEBUG TmpCanId => TmpCanId_44
  # DEBUG BEGIN_STMT
  PduInfo.id = TmpCanId_44;
  # DEBUG BEGIN_STMT
  _28 = (unsigned char) sduLengthInt_40;
  PduInfo.length = _28;
  # DEBUG BEGIN_STMT
  _29 = PduInfoPtr_38(D)->SduDataPtr;
  PduInfo.sdu = _29;
  # DEBUG BEGIN_STMT
  PduInfo.swPduHandle = CanTxPduId_37(D);
  # DEBUG BEGIN_STMT
  # DEBUG send_message => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _30 = CanIf_CanDrvFctConfig[0].Write;
  _31 = _30 (CanHth_41, &PduInfo);
  # DEBUG CanRetVal => (Can_ReturnType) _31
  # DEBUG BEGIN_STMT
  if (_31 != 0)
    goto <bb 29>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 27> [local count: 34026951]:
  # DEBUG send_message => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 30>; [100.00%]

  <bb 28> [local count: 14879552]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 29> [local count: 29759104]:
  # RetVal_32 = PHI <1(26), 0(28)>
  # DEBUG RetVal => RetVal_32
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();

  <bb 30> [local count: 1073741824]:
  # RetVal_33 = PHI <1(3), 1(5), 1(7), 1(9), 1(18), RetVal_32(29), 1(27), 1(25), 1(20)>
  # DEBUG RetVal => RetVal_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PduInfo ={v} {CLOBBER};
  return RetVal_33;

}



;; Function CanIf_SetPduMode (CanIf_SetPduMode, funcdef_no=7, decl_uid=8222, cgraph_uid=8, symbol_order=12)


Symbols to be put in SSA form
{ D.10193 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 19
Number of blocks to update: 18 ( 95%)


Removing basic block 10
Removing basic block 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 3 4 }
;; 3 succs { 16 }
;; 4 succs { 5 6 }
;; 5 succs { 16 }
;; 6 succs { 8 7 }
;; 7 succs { 8 9 }
;; 8 succs { 16 }
;; 9 succs { 10 16 }
;; 10 succs { 13 11 12 }
;; 11 succs { 15 }
;; 12 succs { 15 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
CanIf_SetPduMode (uint8 ControllerId, CanIf_PduModeType PduModeRequest)
{
  CanIf_ControllerModeType CanControllerMode;
  Std_ReturnType RetVal;
  unsigned char CanIf_State.34_1;
  const struct CanIf_CanDriverConfigType * CanIf_DriverConfigPtr.35_2;
  unsigned char _3;
  int _4;
  int _15;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.36_16;
  long unsigned int _17;
  const struct CanIf_CanDriverConfigType * _18;
  long unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  const struct CanIf_CanControllerConfigType * _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.34_1 = CanIf_State;
  if (CanIf_State.34_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 9, 30);
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_DriverConfigPtr.35_2 = CanIf_DriverConfigPtr;
  _3 = CanIf_DriverConfigPtr.35_2->nrOfControllers;
  if (_3 <= ControllerId_8(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 9, 15);
  goto <bb 16>; [100.00%]

  <bb 6> [local count: 482002705]:
  # DEBUG BEGIN_STMT
  if (PduModeRequest_9(D) > 3)
    goto <bb 8>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 7> [local count: 322941812]:
  if (PduModeRequest_9(D) == 2)
    goto <bb 8>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 8> [local count: 268861109]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 9, 22);
  goto <bb 16>; [100.00%]

  <bb 9> [local count: 213141596]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = (int) ControllerId_8(D);
  CanControllerMode_10 = CanIf_CanControllerMode[_4];
  # DEBUG CanControllerMode => CanControllerMode_10
  # DEBUG BEGIN_STMT
  if (CanControllerMode_10 == 1)
    goto <bb 10>; [20.24%]
  else
    goto <bb 16>; [79.76%]

  <bb 10> [local count: 43139859]:
  # DEBUG BEGIN_STMT
  # DEBUG ControllerId => ControllerId_8(D)
  # DEBUG PduModeRequest => PduModeRequest_9(D)
  # DEBUG INLINE_ENTRY CanIf_SetPduModeInternal
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = (int) ControllerId_8(D);
  # DEBUG D#3 => CanIf_PduMode[_15]
  # DEBUG OldPduMode => D#3
  # DEBUG BEGIN_STMT
  switch (PduModeRequest_9(D)) <default: <L15> [33.33%], case 0: <L13> [33.33%], case 3: <L14> [33.33%]>

  <bb 11> [local count: 14378515]:
<L13>:
  # DEBUG BEGIN_STMT
  # DEBUG D#1 => D#3
  # DEBUG ControllerId => ControllerId_8(D)
  # DEBUG INLINE_ENTRY CanIf_SetOffline
  # DEBUG OldPduMode => D#1
  # DEBUG BEGIN_STMT
  CanIf_PduMode[_15] = 0;
  # DEBUG BEGIN_STMT
  goto <bb 15>; [100.00%]

  <bb 12> [local count: 14378515]:
<L14>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_PduMode[_15] = 3;
  # DEBUG BEGIN_STMT
  goto <bb 15>; [100.00%]

  <bb 13> [local count: 14378515]:
<L15>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_PduMode[_15] = 1;
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.36_16 = CanIf_ConfigPtr;
  _17 = CanIf_ConfigPtr.36_16->driverConfigPtr;
  _18 = CanIf_ConfigPtr.36_16 + _17;
  _19 = _18->ctrlConfigPtr;
  _20 = (unsigned int) ControllerId_8(D);
  _21 = _20 * 12;
  _22 = _19 + _21;
  _23 = CanIf_ConfigPtr.36_16 + _22;
  _24 = _23->pNFilterEnabled;
  if (_24 == 1)
    goto <bb 14>; [20.24%]
  else
    goto <bb 15>; [79.76%]

  <bb 14> [local count: 2910211]:
  # DEBUG BEGIN_STMT
  SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = CanIf_CanControllerFlags[_15];
  _26 = _25 | 8;
  CanIf_CanControllerFlags[_15] = _26;
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();

  <bb 15> [local count: 43135545]:
  # DEBUG ControllerId => NULL

  <bb 16> [local count: 1073737512]:
  # RetVal_5 = PHI <1(3), 1(5), 1(8), 1(9), 0(15)>
  # DEBUG ControllerId => NULL
  # DEBUG PduModeRequest => NULL
  # DEBUG RetVal => NULL
  # DEBUG RetVal => RetVal_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_5;

}



;; Function CanIf_GetPduMode (CanIf_GetPduMode, funcdef_no=8, decl_uid=8225, cgraph_uid=9, symbol_order=13)

CanIf_GetPduMode (uint8 ControllerId, CanIf_PduModeType * PduModePtr)
{
  Std_ReturnType RetVal;
  unsigned char CanIf_State.39_1;
  const struct CanIf_CanDriverConfigType * CanIf_DriverConfigPtr.40_2;
  unsigned char _3;
  int _4;
  <unnamed type> _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.39_1 = CanIf_State;
  if (CanIf_State.39_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 10, 30);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_DriverConfigPtr.40_2 = CanIf_DriverConfigPtr;
  _3 = CanIf_DriverConfigPtr.40_2->nrOfControllers;
  if (_3 <= ControllerId_9(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 10, 15);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 482002705]:
  # DEBUG BEGIN_STMT
  if (PduModePtr_10(D) == 0B)
    goto <bb 7>; [17.43%]
  else
    goto <bb 8>; [82.57%]

  <bb 7> [local count: 84013071]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 10, 20);
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 397989633]:
  # DEBUG BEGIN_STMT
  _4 = (int) ControllerId_9(D);
  _5 = CanIf_PduMode[_4];
  *PduModePtr_10(D) = _5;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 9> [local count: 1073741824]:
  # RetVal_6 = PHI <1(3), 1(5), 1(7), 0(8)>
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_6;

}



;; Function CanIf_SetTrcvMode (CanIf_SetTrcvMode, funcdef_no=9, decl_uid=8228, cgraph_uid=10, symbol_order=14)

CanIf_SetTrcvMode (uint8 TransceiverId, CanTrcv_TrcvModeType TransceiverMode)
{
  uint8 TrcvDrvIdx;
  Std_ReturnType RetVal;
  unsigned char CanIf_State.41_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.42_2;
  unsigned char _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanIf_CanTrcvChnlConfigType * _8;
  int _9;
  Std_ReturnType (*<T8c8>) (uint8, CanTrcv_TrcvModeType) _10;
  unsigned char _11;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.41_1 = CanIf_State;
  if (CanIf_State.41_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 13, 30);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.42_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.42_2->nrOfTransceivers;
  if (_3 <= TransceiverId_15(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 13, 17);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 482002704]:
  # DEBUG BEGIN_STMT
  if (TransceiverMode_16(D) > 2)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 159060892]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 13, 18);
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 322941812]:
  # DEBUG BEGIN_STMT
  _4 = CanIf_ConfigPtr.42_2->trcvChnlConfigPtr;
  _5 = (unsigned int) TransceiverId_15(D);
  _6 = _5 * 12;
  _7 = _4 + _6;
  _8 = CanIf_ConfigPtr.42_2 + _7;
  TrcvDrvIdx_17 = _8->trcvDrvIdx;
  # DEBUG TrcvDrvIdx => TrcvDrvIdx_17
  # DEBUG BEGIN_STMT
  _9 = (int) TrcvDrvIdx_17;
  _10 = CanIf_CanTrcvConfig[_9].setOpMode;
  _11 = _8->trcvChnlId;
  RetVal_19 = _10 (_11, TransceiverMode_16(D));
  # DEBUG RetVal => RetVal_19

  <bb 9> [local count: 1073741824]:
  # RetVal_12 = PHI <1(3), 1(5), 1(7), RetVal_19(8)>
  # DEBUG RetVal => RetVal_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_12;

}



;; Function CanIf_GetTrcvMode (CanIf_GetTrcvMode, funcdef_no=10, decl_uid=8231, cgraph_uid=11, symbol_order=15)

CanIf_GetTrcvMode (CanTrcv_TrcvModeType * TransceiverModePtr, uint8 TransceiverId)
{
  Std_ReturnType RetVal;
  uint8 TrcvDrvIdx;
  unsigned char CanIf_State.47_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.48_2;
  unsigned char _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanIf_CanTrcvChnlConfigType * _8;
  int _9;
  Std_ReturnType (*<T8cf>) (uint8, CanTrcv_TrcvModeType *) _10;
  unsigned char _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.47_1 = CanIf_State;
  if (CanIf_State.47_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 14, 30);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  if (TransceiverModePtr_15(D) == 0B)
    goto <bb 5>; [17.43%]
  else
    goto <bb 6>; [82.57%]

  <bb 5> [local count: 125392644]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 14, 20);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 594014379]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.48_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.48_2->nrOfTransceivers;
  if (_3 <= TransceiverId_16(D))
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 196024745]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 14, 17);
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 397989633]:
  # DEBUG BEGIN_STMT
  _4 = CanIf_ConfigPtr.48_2->trcvChnlConfigPtr;
  _5 = (unsigned int) TransceiverId_16(D);
  _6 = _5 * 12;
  _7 = _4 + _6;
  _8 = CanIf_ConfigPtr.48_2 + _7;
  TrcvDrvIdx_17 = _8->trcvDrvIdx;
  # DEBUG TrcvDrvIdx => TrcvDrvIdx_17
  # DEBUG BEGIN_STMT
  _9 = (int) TrcvDrvIdx_17;
  _10 = CanIf_CanTrcvConfig[_9].getOpMode;
  _11 = _8->trcvChnlId;
  RetVal_19 = _10 (_11, TransceiverModePtr_15(D));
  # DEBUG RetVal => RetVal_19

  <bb 9> [local count: 1073741824]:
  # RetVal_12 = PHI <1(3), 1(5), 1(7), RetVal_19(8)>
  # DEBUG RetVal => RetVal_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_12;

}



;; Function CanIf_GetTrcvWakeupReason (CanIf_GetTrcvWakeupReason, funcdef_no=11, decl_uid=8234, cgraph_uid=12, symbol_order=16)

CanIf_GetTrcvWakeupReason (uint8 TransceiverId, CanTrcv_TrcvWakeupReasonType * TrcvWuReasonPtr)
{
  uint8 TrcvDrvIdx;
  Std_ReturnType RetVal;
  unsigned char CanIf_State.53_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.54_2;
  unsigned char _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanIf_CanTrcvChnlConfigType * _8;
  int _9;
  Std_ReturnType (*<T8d6>) (uint8, CanTrcv_TrcvWakeupReasonType *) _10;
  unsigned char _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.53_1 = CanIf_State;
  if (CanIf_State.53_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 15, 30);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  if (TrcvWuReasonPtr_15(D) == 0B)
    goto <bb 5>; [17.43%]
  else
    goto <bb 6>; [82.57%]

  <bb 5> [local count: 125392644]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 15, 20);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 594014379]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.54_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.54_2->nrOfTransceivers;
  if (_3 <= TransceiverId_16(D))
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 196024745]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 15, 17);
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 397989633]:
  # DEBUG BEGIN_STMT
  _4 = CanIf_ConfigPtr.54_2->trcvChnlConfigPtr;
  _5 = (unsigned int) TransceiverId_16(D);
  _6 = _5 * 12;
  _7 = _4 + _6;
  _8 = CanIf_ConfigPtr.54_2 + _7;
  TrcvDrvIdx_17 = _8->trcvDrvIdx;
  # DEBUG TrcvDrvIdx => TrcvDrvIdx_17
  # DEBUG BEGIN_STMT
  _9 = (int) TrcvDrvIdx_17;
  _10 = CanIf_CanTrcvConfig[_9].getBusWuReason;
  _11 = _8->trcvChnlId;
  RetVal_19 = _10 (_11, TrcvWuReasonPtr_15(D));
  # DEBUG RetVal => RetVal_19

  <bb 9> [local count: 1073741824]:
  # RetVal_12 = PHI <1(3), 1(5), 1(7), RetVal_19(8)>
  # DEBUG RetVal => RetVal_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_12;

}



;; Function CanIf_SetTrcvWakeupMode (CanIf_SetTrcvWakeupMode, funcdef_no=12, decl_uid=8237, cgraph_uid=13, symbol_order=17)

CanIf_SetTrcvWakeupMode (uint8 TransceiverId, CanTrcv_TrcvWakeupModeType TrcvWakeupMode)
{
  uint8 TrcvDrvIdx;
  Std_ReturnType RetVal;
  unsigned char CanIf_State.59_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.60_2;
  unsigned char _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanIf_CanTrcvChnlConfigType * _8;
  int _9;
  Std_ReturnType (*<T8db>) (uint8, CanTrcv_TrcvWakeupModeType) _10;
  unsigned char _11;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.59_1 = CanIf_State;
  if (CanIf_State.59_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 16, 30);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.60_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.60_2->nrOfTransceivers;
  if (_3 <= TransceiverId_15(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 16, 17);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 482002704]:
  # DEBUG BEGIN_STMT
  if (TrcvWakeupMode_16(D) > 2)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 159060892]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 16, 19);
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 322941812]:
  # DEBUG BEGIN_STMT
  _4 = CanIf_ConfigPtr.60_2->trcvChnlConfigPtr;
  _5 = (unsigned int) TransceiverId_15(D);
  _6 = _5 * 12;
  _7 = _4 + _6;
  _8 = CanIf_ConfigPtr.60_2 + _7;
  TrcvDrvIdx_17 = _8->trcvDrvIdx;
  # DEBUG TrcvDrvIdx => TrcvDrvIdx_17
  # DEBUG BEGIN_STMT
  _9 = (int) TrcvDrvIdx_17;
  _10 = CanIf_CanTrcvConfig[_9].setWakeupMode;
  _11 = _8->trcvChnlId;
  RetVal_19 = _10 (_11, TrcvWakeupMode_16(D));
  # DEBUG RetVal => RetVal_19

  <bb 9> [local count: 1073741824]:
  # RetVal_12 = PHI <1(3), 1(5), 1(7), RetVal_19(8)>
  # DEBUG RetVal => RetVal_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_12;

}



;; Function CanIf_CheckWakeup (CanIf_CheckWakeup, funcdef_no=13, decl_uid=8239, cgraph_uid=14, symbol_order=18)

CanIf_CheckWakeup (EcuM_WakeupSourceType WakeupSource)
{
  const struct CanIf_CanTrcvChnlConfigType * TrcvChnlConfigPtr;
  uint8_least i;
  Std_ReturnType Result;
  boolean WakeupSourceValid;
  unsigned char CanIf_State.65_1;
  long unsigned int _4;
  long unsigned int _5;
  sizetype _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char _9;
  int _10;
  Std_ReturnType (*<T8df>) (uint8) _11;
  unsigned char _12;
  unsigned char _13;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.68_14;
  unsigned char _15;
  long unsigned int _16;

  <bb 2> [local count: 176285970]:
  # DEBUG BEGIN_STMT
  # DEBUG WakeupSourceValid => 0
  # DEBUG BEGIN_STMT
  # DEBUG Result => 1
  # DEBUG BEGIN_STMT
  # DEBUG CheckedSources => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.65_1 = CanIf_State;
  if (CanIf_State.65_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 13>; [67.00%]

  <bb 13> [local count: 118111600]:
  goto <bb 9>; [100.00%]

  <bb 3> [local count: 58174370]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 17, 30);
  goto <bb 12>; [100.00%]

  <bb 4> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  _4 = CanIf_ConfigPtr.68_14->trcvChnlConfigPtr;
  _5 = i_22 * 12;
  _6 = _4 + _5;
  TrcvChnlConfigPtr_28 = CanIf_ConfigPtr.68_14 + _6;
  # DEBUG TrcvChnlConfigPtr => TrcvChnlConfigPtr_28
  # DEBUG BEGIN_STMT
  _7 = TrcvChnlConfigPtr_28->wakeupSourceIn;
  _8 = _7 & WakeupSource_29(D);
  if (_8 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 477815112]:
  # DEBUG BEGIN_STMT
  _9 = TrcvChnlConfigPtr_28->trcvDrvIdx;
  _10 = (int) _9;
  _11 = CanIf_CanTrcvConfig[_10].chkWakeupByBus;
  _12 = TrcvChnlConfigPtr_28->trcvChnlId;
  _13 = _11 (_12);
  if (_13 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 238907556]:
  # DEBUG BEGIN_STMT
  # DEBUG Result => 0

  <bb 8> [local count: 955630224]:
  # WakeupSourceValid_17 = PHI <WakeupSourceValid_18(4), 1(6), 1(5)>
  # Result_19 = PHI <Result_20(4), 0(6), Result_20(5)>
  # DEBUG Result => Result_19
  # DEBUG WakeupSourceValid => WakeupSourceValid_17
  # DEBUG BEGIN_STMT
  i_31 = i_22 + 1;
  # DEBUG i => i_31

  <bb 9> [local count: 1073741824]:
  # WakeupSourceValid_18 = PHI <WakeupSourceValid_17(8), 0(13)>
  # Result_20 = PHI <Result_19(8), 1(13)>
  # i_22 = PHI <i_31(8), 0(13)>
  # DEBUG i => i_22
  # DEBUG Result => Result_20
  # DEBUG WakeupSourceValid => WakeupSourceValid_18
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.68_14 = CanIf_ConfigPtr;
  _15 = CanIf_ConfigPtr.68_14->nrOfTransceivers;
  _16 = (long unsigned int) _15;
  if (_16 > i_22)
    goto <bb 4>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # WakeupSourceValid_2 = PHI <WakeupSourceValid_18(9)>
  # Result_3 = PHI <Result_20(9)>
  # DEBUG BEGIN_STMT
  if (WakeupSourceValid_2 == 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 12>; [67.00%]

  <bb 11> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 17, 16);

  <bb 12> [local count: 176285971]:
  # Result_21 = PHI <1(3), Result_3(10), Result_3(11)>
  # DEBUG Result => Result_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return Result_21;

}



;; Function CanIf_ClearTrcvWufFlag (CanIf_ClearTrcvWufFlag, funcdef_no=14, decl_uid=8241, cgraph_uid=15, symbol_order=19)

CanIf_ClearTrcvWufFlag (uint8 TransceiverId)
{
  uint8 TrcvDrvIdx;
  Std_ReturnType RetVal;
  unsigned char CanIf_State.69_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.70_2;
  unsigned char _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanIf_CanTrcvChnlConfigType * _8;
  int _9;
  Std_ReturnType (*<T8df>) (uint8) _10;
  unsigned char _11;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.69_1 = CanIf_State;
  if (CanIf_State.69_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 30, 30);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.70_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.70_2->nrOfTransceivers;
  if (_3 <= TransceiverId_15(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 30, 17);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 482002704]:
  # DEBUG BEGIN_STMT
  _4 = CanIf_ConfigPtr.70_2->trcvChnlConfigPtr;
  _5 = (unsigned int) TransceiverId_15(D);
  _6 = _5 * 12;
  _7 = _4 + _6;
  _8 = CanIf_ConfigPtr.70_2 + _7;
  TrcvDrvIdx_16 = _8->trcvDrvIdx;
  # DEBUG TrcvDrvIdx => TrcvDrvIdx_16
  # DEBUG BEGIN_STMT
  _9 = (int) TrcvDrvIdx_16;
  _10 = CanIf_CanTrcvConfig[_9].clearWufFlag;
  _11 = _8->trcvChnlId;
  RetVal_18 = _10 (_11);
  # DEBUG RetVal => RetVal_18

  <bb 7> [local count: 1073741824]:
  # RetVal_12 = PHI <1(3), 1(5), RetVal_18(6)>
  # DEBUG RetVal => RetVal_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_12;

}



;; Function CanIf_CheckTrcvWakeFlag (CanIf_CheckTrcvWakeFlag, funcdef_no=15, decl_uid=8243, cgraph_uid=16, symbol_order=20)

CanIf_CheckTrcvWakeFlag (uint8 TransceiverId)
{
  uint8 TrcvDrvIdx;
  Std_ReturnType RetVal;
  unsigned char CanIf_State.75_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.76_2;
  unsigned char _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanIf_CanTrcvChnlConfigType * _8;
  int _9;
  Std_ReturnType (*<T8df>) (uint8) _10;
  unsigned char _11;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.75_1 = CanIf_State;
  if (CanIf_State.75_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 31, 30);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.76_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.76_2->nrOfTransceivers;
  if (_3 <= TransceiverId_15(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 31, 17);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 482002704]:
  # DEBUG BEGIN_STMT
  _4 = CanIf_ConfigPtr.76_2->trcvChnlConfigPtr;
  _5 = (unsigned int) TransceiverId_15(D);
  _6 = _5 * 12;
  _7 = _4 + _6;
  _8 = CanIf_ConfigPtr.76_2 + _7;
  TrcvDrvIdx_16 = _8->trcvDrvIdx;
  # DEBUG TrcvDrvIdx => TrcvDrvIdx_16
  # DEBUG BEGIN_STMT
  _9 = (int) TrcvDrvIdx_16;
  _10 = CanIf_CanTrcvConfig[_9].checkWakeFlag;
  _11 = _8->trcvChnlId;
  RetVal_18 = _10 (_11);
  # DEBUG RetVal => RetVal_18

  <bb 7> [local count: 1073741824]:
  # RetVal_12 = PHI <1(3), 1(5), RetVal_18(6)>
  # DEBUG RetVal => RetVal_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_12;

}



;; Function CanIf_TxConfirmation (CanIf_TxConfirmation, funcdef_no=16, decl_uid=8245, cgraph_uid=17, symbol_order=21)


Symbols to be put in SSA form
{ D.10202 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


Merging blocks 6 and 9
Removing basic block 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 5 6 }
;; 5 succs { 10 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
CanIf_TxConfirmation (PduIdType CanTxPduId)
{
  uint8 userType;
  PduIdType sourcePduId;
  const uint8 ControllerId;
  unsigned char CanIf_State.81_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.82_2;
  short unsigned int _3;
  const struct CanIf_TxLPduConfigType * CanIf_TxPduConfigPtr.83_4;
  unsigned int _5;
  unsigned int _6;
  const struct CanIf_TxLPduConfigType * _7;
  int _8;
  unsigned char _9;
  unsigned char _10;
  const struct CanIf_TxLPduConfigType * CanIf_TxPduConfigPtr.32_21;
  unsigned int _22;
  unsigned int _23;
  const struct CanIf_TxLPduConfigType * _24;
  int _27;
  void (*<T8f0>) (PduIdType) _28;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.81_1 = CanIf_State;
  if (CanIf_State.81_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 19, 30);
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.82_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.82_2->nrOfTxLPdus;
  if (_3 <= CanTxPduId_13(D))
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 19, 13);
  goto <bb 10>; [100.00%]

  <bb 6> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  CanIf_TxPduConfigPtr.83_4 = CanIf_TxPduConfigPtr;
  _5 = (unsigned int) CanTxPduId_13(D);
  _6 = _5 * 16;
  _7 = CanIf_TxPduConfigPtr.83_4 + _6;
  ControllerId_14 = _7->intCtrlIdx;
  # DEBUG ControllerId => ControllerId_14
  # DEBUG BEGIN_STMT
  SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = (int) ControllerId_14;
  _9 = CanIf_CanControllerFlags[_8];
  _10 = _9 & 247;
  CanIf_CanControllerFlags[_8] = _10;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG CanTxPduId => CanTxPduId_13(D)
  # DEBUG INLINE_ENTRY CanIf_SendTxConfirmation
  # DEBUG BEGIN_STMT
  CanIf_TxPduConfigPtr.32_21 = CanIf_TxPduConfigPtr;
  _22 = (unsigned int) CanTxPduId_13(D);
  _23 = _22 * 16;
  _24 = CanIf_TxPduConfigPtr.32_21 + _23;
  userType_25 = _24->userType;
  # DEBUG userType => userType_25
  # DEBUG BEGIN_STMT
  sourcePduId_26 = _24->sourcePduId_UL;
  # DEBUG sourcePduId => sourcePduId_26
  # DEBUG BEGIN_STMT
  if (userType_25 != 255)
    goto <bb 7>; [66.00%]
  else
    goto <bb 9>; [34.00%]

  <bb 7> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  _27 = (int) userType_25;
  _28 = CanIf_CbkFctPtrTbl[_27].TxConfFctPtr;
  if (_28 != 0B)
    goto <bb 8>; [70.00%]
  else
    goto <bb 9>; [30.00%]

  <bb 8> [local count: 166183022]:
  # DEBUG BEGIN_STMT
  _28 (sourcePduId_26);

  <bb 9> [local count: 359703511]:
  # DEBUG BEGIN_STMT

  <bb 10> [local count: 1073741824]:
  # DEBUG CanTxPduId => NULL
  # DEBUG sourcePduId => NULL
  # DEBUG userType => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanIf_RxIndication (CanIf_RxIndication, funcdef_no=17, decl_uid=8248, cgraph_uid=18, symbol_order=22)


Symbols to be put in SSA form
{ D.10203 D.10407 D.10414 D.10420 D.10430 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 82
Number of blocks to update: 81 ( 99%)


Merging blocks 6 and 12
Merging blocks 7 and 26
Merging blocks 8 and 64
Merging blocks 24 and 11
Removing basic block 30
Merging blocks 32 and 25
Removing basic block 34
Removing basic block 43
Merging blocks 44 and 33
Removing basic block 46
Removing basic block 48
Removing basic block 55
Merging blocks 62 and 45
Merging blocks 74 and 77
Merging blocks 75 and 63
Merging blocks 81 and 76
Merging blocks 7 and 27
Merging blocks 8 and 65
Merging blocks 74 and 78
No longer having address taken: Index
No longer having address taken: RxPduInfo

Symbols to be put in SSA form
{ D.9706 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 63
Number of blocks to update: 62 ( 98%)


;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
;;
;; Loop 1
;;  header 31, latch 36
;;  depth 1, outer 0
;;  nodes: 31 36 34 35 33
;; 2 succs { 3 4 }
;; 3 succs { 62 }
;; 4 succs { 5 6 }
;; 5 succs { 62 }
;; 6 succs { 7 8 }
;; 7 succs { 18 }
;; 8 succs { 11 9 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 18 }
;; 12 succs { 13 14 }
;; 13 succs { 18 }
;; 14 succs { 15 16 }
;; 15 succs { 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 62 }
;; 19 succs { 20 46 }
;; 20 succs { 21 46 }
;; 21 succs { 22 45 }
;; 22 succs { 23 30 }
;; 23 succs { 24 27 }
;; 24 succs { 28 25 }
;; 25 succs { 28 26 }
;; 26 succs { 28 27 }
;; 27 succs { 28 }
;; 28 succs { 29 44 }
;; 29 succs { 44 }
;; 30 succs { 43 31 }
;; 31 succs { 32 33 }
;; 32 succs { 43 }
;; 33 succs { 34 35 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 31 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 43 }
;; 40 succs { 41 43 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 44 succs { 46 }
;; 45 succs { 46 }
;; 46 succs { 47 61 }
;; 47 succs { 51 48 }
;; 48 succs { 49 50 }
;; 49 succs { 51 50 }
;; 50 succs { 51 }
;; 51 succs { 52 60 }
;; 52 succs { 53 54 }
;; 53 succs { 54 }
;; 54 succs { 55 56 }
;; 55 succs { 56 }
;; 56 succs { 57 59 }
;; 57 succs { 58 59 }
;; 58 succs { 59 }
;; 59 succs { 60 }
;; 60 succs { 61 }
;; 61 succs { 62 }
;; 62 succs { 1 }
CanIf_RxIndication (const struct Can_HwType * Mailbox, const struct PduInfoType * PduInfoPtr)
{
  const uint8 cfgPduLength;
  struct PduInfoType PduInfo;
  boolean Rx_Condition_not_allowed;
  const struct CanIf_RxLPduConfigType * const RxLPduConfig;
  uint32 cfgCanId;
  sint32 middle;
  sint32 right;
  sint32 left;
  Std_ReturnType RetVal;
  Std_ReturnType D.10430;
  Std_ReturnType RetVal;
  Std_ReturnType D.10420;
  CanIf_LPduIndexType LastIdx;
  CanIf_LPduIndexType FirstIdx;
  Std_ReturnType RetVal;
  Std_ReturnType D.10414;
  Std_ReturnType RetCode;
  const uint16 CanIfHrhIdx;
  Std_ReturnType D.10407;
  struct PduInfoType RxPduInfo;
  const CanIf_LPduIndexType PduIdx;
  const Std_ReturnType SwFilterResult;
  CanIf_LPduIndexType Index;
  const uint16 CanIfHrhIdx;
  const uint8 * CanSduPtrLcl;
  const PduLengthType LclDlc;
  const uint8 ControllerId;
  const Can_IdType CanIdLcl;
  const Can_HwHandleType HrhLcl;
  unsigned char CanIf_State.84_1;
  unsigned char _2;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.85_3;
  long unsigned int _4;
  const struct CanIf_CanDriverConfigType * _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  sizetype _12;
  const uint16 * _13;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.88_14;
  long unsigned int _15;
  short unsigned int Index.90_16;
  unsigned int _17;
  unsigned int _18;
  sizetype _19;
  const struct CanIf_SortedRxLPduConfigType * _20;
  const struct CanIf_CanDriverConfigType * CanIf_DriverConfigPtr.91_44;
  unsigned char _45;
  long unsigned int _46;
  signed int CanId.92_47;
  long unsigned int _48;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.93_49;
  long unsigned int _50;
  const struct CanIf_CanDriverConfigType * _51;
  long unsigned int _52;
  unsigned int _53;
  unsigned int _54;
  sizetype _55;
  const uint16 * _56;
  signed short CanIfHrhIdx.96_58;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.97_60;
  long unsigned int _61;
  const struct CanIf_CanDriverConfigType * _62;
  long unsigned int _63;
  unsigned int _64;
  unsigned int _65;
  sizetype _66;
  const struct CanIf_HrhConfigType * _67;
  unsigned char _70;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.107_73;
  long unsigned int _74;
  unsigned int _75;
  unsigned int _76;
  sizetype _77;
  const struct CanIf_SortedRxLPduConfigType * _78;
  long unsigned int _79;
  long unsigned int _80;
  int iftmp.106_81;
  long int _89;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.115_91;
  long unsigned int _92;
  unsigned int middle.117_93;
  unsigned int _94;
  sizetype _95;
  const struct CanIf_SortedRxLPduConfigType * _96;
  short unsigned int _99;
  unsigned int middle.120_108;
  unsigned int _109;
  long unsigned int _110;
  sizetype _111;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.115_112;
  const struct CanIf_SortedRxLPduConfigType * _113;
  long unsigned int _114;
  short unsigned int _115;
  const struct CanIf_RxLPduConfigType * CanIf_RxPduConfigPtr.124_117;
  unsigned int _118;
  unsigned int _119;
  int _121;
  <unnamed type> _122;
  <unnamed type> _123;
  int iftmp.125_124;
  short unsigned int _126;
  short unsigned int _127;
  short unsigned int _129;
  uint8 * _130;
  unsigned char _131;
  unsigned char _132;
  unsigned char _133;
  unsigned char _134;
  short unsigned int _135;
  int _136;
  void (*<T8e7>) (PduIdType, struct PduInfoType *) _137;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.84_1 = CanIf_State;
  if (CanIf_State.84_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 20, 30);
  goto <bb 62>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  if (Mailbox_24(D) == 0B)
    goto <bb 5>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 5> [local count: 215822106]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 20, 20);
  goto <bb 62>; [100.00%]

  <bb 6> [local count: 503584915]:
  # DEBUG BEGIN_STMT
  HrhLcl_25 = Mailbox_24(D)->Hoh;
  # DEBUG HrhLcl => HrhLcl_25
  # DEBUG BEGIN_STMT
  CanIdLcl_26 = Mailbox_24(D)->CanId;
  # DEBUG CanIdLcl => CanIdLcl_26
  # DEBUG BEGIN_STMT
  ControllerId_27 = Mailbox_24(D)->ControllerId;
  # DEBUG ControllerId => ControllerId_27
  # DEBUG BEGIN_STMT
  LclDlc_29 = PduInfoPtr_28(D)->SduLength;
  # DEBUG LclDlc => LclDlc_29
  # DEBUG BEGIN_STMT
  CanSduPtrLcl_30 = PduInfoPtr_28(D)->SduDataPtr;
  # DEBUG CanSduPtrLcl => CanSduPtrLcl_30
  # DEBUG BEGIN_STMT
  # DEBUG Hrh => HrhLcl_25
  # DEBUG CanId => CanIdLcl_26
  # DEBUG CanDlc => LclDlc_29
  # DEBUG CanSduPtr => CanSduPtrLcl_30
  # DEBUG INLINE_ENTRY CanIf_RxIndication_DetChecks
  # DEBUG BEGIN_STMT
  # DEBUG RetCode => 1
  # DEBUG BEGIN_STMT
  CanIf_DriverConfigPtr.91_44 = CanIf_DriverConfigPtr;
  _45 = CanIf_DriverConfigPtr.91_44->upperHohIdLimit;
  if (HrhLcl_25 >= _45)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 166183022]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 20, 12);
  goto <bb 18>; [100.00%]

  <bb 8> [local count: 337401893]:
  # DEBUG BEGIN_STMT
  _46 = CanIdLcl_26 & 536870912;
  if (_46 != 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 9> [local count: 226059268]:
  CanId.92_47 = (signed int) CanIdLcl_26;
  if (CanId.92_47 >= 0)
    goto <bb 10>; [59.00%]
  else
    goto <bb 12>; [41.00%]

  <bb 10> [local count: 133374968]:
  _48 = CanIdLcl_26 & 1073739776;
  if (_48 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [local count: 178030109]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 20, 10);
  goto <bb 18>; [100.00%]

  <bb 12> [local count: 159371784]:
  # DEBUG BEGIN_STMT
  if (LclDlc_29 > 64)
    goto <bb 13>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 13> [local count: 52592689]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 20, 11);
  goto <bb 18>; [100.00%]

  <bb 14> [local count: 106779095]:
  # DEBUG BEGIN_STMT
  if (CanSduPtrLcl_30 == 0B)
    goto <bb 15>; [17.43%]
  else
    goto <bb 16>; [82.57%]

  <bb 15> [local count: 18611596]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 20, 20);
  goto <bb 18>; [100.00%]

  <bb 16> [local count: 88167499]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.93_49 = CanIf_ConfigPtr;
  _50 = CanIf_ConfigPtr.93_49->driverConfigPtr;
  _51 = CanIf_ConfigPtr.93_49 + _50;
  _52 = _51->hohIdToCanIfIdxPtr;
  _53 = (unsigned int) HrhLcl_25;
  _54 = _53 * 2;
  _55 = _52 + _54;
  _56 = CanIf_ConfigPtr.93_49 + _55;
  CanIfHrhIdx_57 = *_56;
  # DEBUG CanIfHrhIdx => CanIfHrhIdx_57
  # DEBUG BEGIN_STMT
  CanIfHrhIdx.96_58 = (signed short) CanIfHrhIdx_57;
  if (CanIfHrhIdx.96_58 < 0)
    goto <bb 17>; [25.50%]
  else
    goto <bb 18>; [74.50%]

  <bb 17> [local count: 22482712]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 20, 12);

  <bb 18> [local count: 503584916]:
  # RetCode_59 = PHI <1(7), 1(11), 1(13), 1(15), 0(16), 1(17)>
  # DEBUG RetCode => RetCode_59
  # DEBUG BEGIN_STMT
  _151 = RetCode_59;
  # DEBUG Hrh => NULL
  # DEBUG CanId => NULL
  # DEBUG CanDlc => NULL
  # DEBUG CanSduPtr => NULL
  # DEBUG CanIfHrhIdx => NULL
  # DEBUG RetCode => NULL
  _2 = _151;
  if (_2 == 0)
    goto <bb 19>; [33.00%]
  else
    goto <bb 62>; [67.00%]

  <bb 19> [local count: 166183022]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.85_3 = CanIf_ConfigPtr;
  _4 = CanIf_ConfigPtr.85_3->driverConfigPtr;
  _5 = CanIf_ConfigPtr.85_3 + _4;
  _6 = _5->hohIdToCanIfIdxPtr;
  _7 = (long unsigned int) HrhLcl_25;
  _8 = CanIf_CanDrvFctConfig[0].HohIdOffset;
  _9 = (long unsigned int) _8;
  _10 = _7 + _9;
  _11 = _10 * 2;
  _12 = _6 + _11;
  _13 = CanIf_ConfigPtr.85_3 + _12;
  CanIfHrhIdx_32 = *_13;
  # DEBUG CanIfHrhIdx => CanIfHrhIdx_32
  # DEBUG BEGIN_STMT
  # DEBUG ConfCanId => CanIdLcl_26
  # DEBUG BEGIN_STMT
  Index_172 = 65535;
  # DEBUG Index => Index_172
  # DEBUG BEGIN_STMT
  # DEBUG CanIfHrhIdx => CanIfHrhIdx_32
  # DEBUG CanId => CanIdLcl_26
  # DEBUG Index => &Index
  # DEBUG INLINE_ENTRY CanIf_SoftwareFiltering
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.97_60 = CanIf_ConfigPtr;
  _61 = CanIf_ConfigPtr.97_60->driverConfigPtr;
  _62 = CanIf_ConfigPtr.97_60 + _61;
  _63 = _62->hrhConfigPtr;
  _64 = (unsigned int) CanIfHrhIdx_32;
  _65 = _64 * 6;
  _66 = _63 + _65;
  _67 = CanIf_ConfigPtr.97_60 + _66;
  FirstIdx_68 = _67->firstIndex;
  # DEBUG FirstIdx => FirstIdx_68
  # DEBUG BEGIN_STMT
  LastIdx_69 = _67->lastIndex;
  # DEBUG LastIdx => LastIdx_69
  # DEBUG BEGIN_STMT
  if (LastIdx_69 != 65535)
    goto <bb 20>; [66.00%]
  else
    goto <bb 46>; [34.00%]

  <bb 20> [local count: 109680795]:
  if (FirstIdx_68 != 65535)
    goto <bb 21>; [66.00%]
  else
    goto <bb 46>; [34.00%]

  <bb 21> [local count: 72389324]:
  # DEBUG BEGIN_STMT
  _70 = _67->swFiltering;
  if (_70 == 0)
    goto <bb 22>; [33.00%]
  else
    goto <bb 45>; [67.00%]

  <bb 22> [local count: 23888477]:
  # DEBUG BEGIN_STMT
  # DEBUG FirstIdx => FirstIdx_68
  # DEBUG LastIdx => LastIdx_69
  # DEBUG CanId => CanIdLcl_26
  # DEBUG Index => &Index
  # DEBUG INLINE_ENTRY CanIf_PerformSwFiltering
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  if (FirstIdx_68 == LastIdx_69)
    goto <bb 23>; [51.12%]
  else
    goto <bb 30>; [48.88%]

  <bb 23> [local count: 12211789]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.107_73 = CanIf_ConfigPtr;
  _74 = CanIf_ConfigPtr.107_73->sortedRxLPduConfigPtr;
  _75 = (unsigned int) FirstIdx_68;
  _76 = _75 * 12;
  _77 = _74 + _76;
  _78 = CanIf_ConfigPtr.107_73 + _77;
  _79 = _78->canId;
  if (CanIdLcl_26 != _79)
    goto <bb 24>; [66.00%]
  else
    goto <bb 27>; [34.00%]

  <bb 24> [local count: 8059781]:
  _80 = _78->upperRangeCanId;
  if (_80 == 4294967295)
    goto <bb 28>; [34.00%]
  else
    goto <bb 25>; [66.00%]

  <bb 25> [local count: 5319455]:
  if (CanIdLcl_26 < _79)
    goto <bb 28>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 26> [local count: 2659728]:
  if (CanIdLcl_26 > _80)
    goto <bb 28>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 27> [local count: 5481872]:

  <bb 28> [local count: 12211789]:
  # iftmp.106_81 = PHI <1(24), 1(25), 1(26), 0(27)>
  RetVal_82 = (Std_ReturnType) iftmp.106_81;
  # DEBUG RetVal => RetVal_82
  # DEBUG BEGIN_STMT
  if (RetVal_82 == 0)
    goto <bb 29>; [50.00%]
  else
    goto <bb 44>; [50.00%]

  <bb 29> [local count: 6105895]:
  # DEBUG BEGIN_STMT
  Index_176 = FirstIdx_68;
  # DEBUG Index => Index_176
  goto <bb 44>; [100.00%]

  <bb 30> [local count: 11676688]:
  # DEBUG BEGIN_STMT
  # DEBUG FirstIdx => FirstIdx_68
  # DEBUG LastIdx => LastIdx_69
  # DEBUG CanId => CanIdLcl_26
  # DEBUG Index => &Index
  # DEBUG INLINE_ENTRY CanIf_BinarySwFiltering
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  left_85 = (sint32) FirstIdx_68;
  # DEBUG left => left_85
  # DEBUG BEGIN_STMT
  right_86 = (sint32) LastIdx_69;
  # DEBUG right => right_86
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (left_85 > right_86)
    goto <bb 43>; [50.00%]
  else
    goto <bb 31>; [50.00%]

  <bb 31> [local count: 54576712]:
  # left_87 = PHI <left_85(30), left_102(36)>
  # right_88 = PHI <right_86(30), right_103(36)>
  # DEBUG right => right_88
  # DEBUG left => left_87
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _89 = left_87 + right_88;
  middle_90 = _89 / 2;
  # DEBUG middle => middle_90
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.115_91 = CanIf_ConfigPtr;
  _92 = CanIf_ConfigPtr.115_91->sortedRxLPduConfigPtr;
  middle.117_93 = (unsigned int) middle_90;
  _94 = middle.117_93 * 12;
  _95 = _92 + _94;
  _96 = CanIf_ConfigPtr.115_91 + _95;
  cfgCanId_97 = _96->canId;
  # DEBUG cfgCanId => cfgCanId_97
  # DEBUG BEGIN_STMT
  if (CanIdLcl_26 == cfgCanId_97)
    goto <bb 32>; [5.50%]
  else
    goto <bb 33>; [94.50%]

  <bb 32> [local count: 3001719]:
  # middle_98 = PHI <middle_90(31)>
  # DEBUG BEGIN_STMT
  _99 = (short unsigned int) middle_98;
  Index_175 = _99;
  # DEBUG Index => Index_175
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  goto <bb 43>; [100.00%]

  <bb 33> [local count: 51574993]:
  # DEBUG BEGIN_STMT
  if (CanIdLcl_26 < cfgCanId_97)
    goto <bb 34>; [50.00%]
  else
    goto <bb 35>; [50.00%]

  <bb 34> [local count: 25787496]:
  # DEBUG BEGIN_STMT
  right_100 = middle_90 + -1;
  # DEBUG right => right_100
  goto <bb 36>; [100.00%]

  <bb 35> [local count: 25787496]:
  # DEBUG BEGIN_STMT
  left_101 = middle_90 + 1;
  # DEBUG left => left_101

  <bb 36> [local count: 51574993]:
  # left_102 = PHI <left_87(34), left_101(35)>
  # right_103 = PHI <right_100(34), right_88(35)>
  # DEBUG right => right_103
  # DEBUG left => left_102
  # DEBUG BEGIN_STMT
  if (left_102 <= right_103)
    goto <bb 31>; [94.50%]
  else
    goto <bb 37>; [5.50%]

  <bb 37> [local count: 2836625]:
  # CanIf_ConfigPtr.115_112 = PHI <CanIf_ConfigPtr.115_91(36)>
  # _110 = PHI <_92(36)>
  # middle_105 = PHI <middle_90(36)>
  # cfgCanId_104 = PHI <cfgCanId_97(36)>
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CanIdLcl_26 < cfgCanId_104)
    goto <bb 38>; [50.00%]
  else
    goto <bb 39>; [50.00%]

  <bb 38> [local count: 1418312]:
  # DEBUG BEGIN_STMT
  middle_106 = middle_105 + -1;
  # DEBUG middle => middle_106

  <bb 39> [local count: 2836625]:
  # middle_107 = PHI <middle_105(37), middle_106(38)>
  # DEBUG middle => middle_107
  # DEBUG BEGIN_STMT
  if (left_85 <= middle_107)
    goto <bb 40>; [50.00%]
  else
    goto <bb 43>; [50.00%]

  <bb 40> [local count: 1418312]:
  middle.120_108 = (unsigned int) middle_107;
  _109 = middle.120_108 * 12;
  _111 = _109 + _110;
  _113 = CanIf_ConfigPtr.115_112 + _111;
  _114 = _113->upperRangeCanId;
  if (_114 != 4294967295)
    goto <bb 41>; [66.00%]
  else
    goto <bb 43>; [34.00%]

  <bb 41> [local count: 936086]:
  if (CanIdLcl_26 <= _114)
    goto <bb 42>; [50.00%]
  else
    goto <bb 43>; [50.00%]

  <bb 42> [local count: 468043]:
  # DEBUG BEGIN_STMT
  _115 = (short unsigned int) middle_107;
  Index_174 = _115;
  # DEBUG Index => Index_174
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 43> [local count: 11676688]:
  # RetVal_116 = PHI <1(30), 0(32), 1(39), 1(40), 1(41), 0(42)>
  # Index_169 = PHI <Index_172(30), Index_175(32), Index_172(39), Index_172(40), Index_172(41), Index_174(42)>
  # DEBUG Index => Index_169
  # DEBUG RetVal => RetVal_116
  # DEBUG BEGIN_STMT
  _155 = RetVal_116;
  # DEBUG FirstIdx => NULL
  # DEBUG LastIdx => NULL
  # DEBUG CanId => NULL
  # DEBUG Index => NULL
  # DEBUG RetVal => NULL
  # DEBUG left => NULL
  # DEBUG right => NULL
  # DEBUG middle => NULL
  # DEBUG cfgCanId => NULL
  RetVal_83 = _155;
  # DEBUG RetVal => RetVal_83

  <bb 44> [local count: 23888477]:
  # RetVal_84 = PHI <RetVal_82(28), 0(29), RetVal_83(43)>
  # Index_170 = PHI <Index_172(28), Index_176(29), Index_169(43)>
  # DEBUG Index => Index_170
  # DEBUG RetVal => RetVal_84
  # DEBUG BEGIN_STMT
  _157 = RetVal_84;
  # DEBUG FirstIdx => NULL
  # DEBUG LastIdx => NULL
  # DEBUG CanId => NULL
  # DEBUG Index => NULL
  # DEBUG RetVal => NULL
  RetVal_71 = _157;
  # DEBUG RetVal => RetVal_71
  goto <bb 46>; [100.00%]

  <bb 45> [local count: 48500847]:
  # DEBUG BEGIN_STMT
  Index_173 = FirstIdx_68;
  # DEBUG Index => Index_173
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 46> [local count: 166183022]:
  # RetVal_72 = PHI <1(19), 1(20), RetVal_71(44), 0(45)>
  # Index_171 = PHI <Index_172(19), Index_172(20), Index_170(44), Index_173(45)>
  # DEBUG Index => Index_171
  # DEBUG RetVal => RetVal_72
  # DEBUG BEGIN_STMT
  _158 = RetVal_72;
  # DEBUG CanIfHrhIdx => NULL
  # DEBUG CanId => NULL
  # DEBUG Index => NULL
  # DEBUG RetVal => NULL
  # DEBUG FirstIdx => NULL
  # DEBUG LastIdx => NULL
  SwFilterResult_35 = _158;
  # DEBUG SwFilterResult => SwFilterResult_35
  # DEBUG BEGIN_STMT
  if (SwFilterResult_35 == 0)
    goto <bb 47>; [33.00%]
  else
    goto <bb 61>; [67.00%]

  <bb 47> [local count: 54840397]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.88_14 = CanIf_ConfigPtr;
  _15 = CanIf_ConfigPtr.88_14->sortedRxLPduConfigPtr;
  Index.90_16 = Index_171;
  _17 = (unsigned int) Index.90_16;
  _18 = _17 * 12;
  _19 = _15 + _18;
  _20 = CanIf_ConfigPtr.88_14 + _19;
  PduIdx_36 = _20->rxLPduIndex;
  # DEBUG PduIdx => PduIdx_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RxPduInfo.SduLength = LclDlc_29;
  # DEBUG BEGIN_STMT
  RxPduInfo.SduDataPtr = CanSduPtrLcl_30;
  # DEBUG BEGIN_STMT
  # DEBUG D#5 => CanIdLcl_26
  # DEBUG PduInfoPtr => &RxPduInfo
  # DEBUG RxPduId => PduIdx_36
  # DEBUG ControllerId => ControllerId_27
  # DEBUG INLINE_ENTRY CanIf_ProcessRxPdu
  # DEBUG CanId => D#5
  # DEBUG D#4 => D#5
  # DEBUG BEGIN_STMT
  CanIf_RxPduConfigPtr.124_117 = CanIf_RxPduConfigPtr;
  _118 = (unsigned int) PduIdx_36;
  _119 = _118 * 4;
  RxLPduConfig_120 = CanIf_RxPduConfigPtr.124_117 + _119;
  # DEBUG RxLPduConfig => RxLPduConfig_120
  # DEBUG BEGIN_STMT
  # DEBUG Rx_Condition_not_allowed => 0
  # DEBUG BEGIN_STMT
  SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _121 = (int) ControllerId_27;
  _122 = CanIf_CanControllerMode[_121];
  if (_122 != 1)
    goto <bb 51>; [66.00%]
  else
    goto <bb 48>; [34.00%]

  <bb 48> [local count: 18645735]:
  _123 = CanIf_PduMode[_121];
  if (_123 != 3)
    goto <bb 49>; [66.00%]
  else
    goto <bb 50>; [34.00%]

  <bb 49> [local count: 12306185]:
  if (_123 != 1)
    goto <bb 51>; [66.00%]
  else
    goto <bb 50>; [34.00%]

  <bb 50> [local count: 10523653]:

  <bb 51> [local count: 54840397]:
  # iftmp.125_124 = PHI <1(47), 1(49), 0(50)>
  Rx_Condition_not_allowed_125 = (boolean) iftmp.125_124;
  # DEBUG Rx_Condition_not_allowed => Rx_Condition_not_allowed_125
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (Rx_Condition_not_allowed_125 == 0)
    goto <bb 52>; [50.00%]
  else
    goto <bb 60>; [50.00%]

  <bb 52> [local count: 27420199]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _126 = RxPduInfo.SduLength;
  _127 = _126 & 255;
  PduInfo.SduLength = _127;
  # DEBUG BEGIN_STMT
  cfgPduLength_128 = RxLPduConfig_120->limitedPduLength;
  # DEBUG cfgPduLength => cfgPduLength_128
  # DEBUG BEGIN_STMT
  _129 = (short unsigned int) cfgPduLength_128;
  if (_127 > _129)
    goto <bb 53>; [50.00%]
  else
    goto <bb 54>; [50.00%]

  <bb 53> [local count: 13710099]:
  # DEBUG BEGIN_STMT
  PduInfo.SduLength = _129;

  <bb 54> [local count: 27420199]:
  # DEBUG BEGIN_STMT
  _130 = RxPduInfo.SduDataPtr;
  PduInfo.SduDataPtr = _130;
  # DEBUG BEGIN_STMT
  SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _131 = CanIf_CanControllerFlags[_121];
  _132 = _131 & 8;
  if (_132 != 0)
    goto <bb 55>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 55> [local count: 13710099]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _133 = _131 & 247;
  CanIf_CanControllerFlags[_121] = _133;

  <bb 56> [local count: 27420199]:
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _134 = RxLPduConfig_120->userType;
  _135 = RxLPduConfig_120->targetPduId;
  # DEBUG D#2 => D#4
  # DEBUG userType => _134
  # DEBUG RxLPduId => _135
  # DEBUG PduInfoPtr => &PduInfo
  # DEBUG INLINE_ENTRY CanIf_SendRxIndication
  # DEBUG CanId => D#2
  # DEBUG BEGIN_STMT
  if (_134 != 255)
    goto <bb 57>; [66.00%]
  else
    goto <bb 59>; [34.00%]

  <bb 57> [local count: 18097331]:
  # DEBUG BEGIN_STMT
  _136 = (int) _134;
  _137 = CanIf_CbkFctPtrTbl[_136].UlRxIndFctPtr;
  if (_137 != 0B)
    goto <bb 58>; [70.00%]
  else
    goto <bb 59>; [30.00%]

  <bb 58> [local count: 12668132]:
  # DEBUG BEGIN_STMT
  _137 (_135, &PduInfo);

  <bb 59> [local count: 27420199]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG userType => NULL
  # DEBUG RxLPduId => NULL
  # DEBUG PduInfoPtr => NULL
  PduInfo ={v} {CLOBBER};

  <bb 60> [local count: 54840397]:
  # DEBUG PduInfoPtr => NULL
  # DEBUG RxPduId => NULL
  # DEBUG ControllerId => NULL
  # DEBUG RxLPduConfig => NULL
  # DEBUG Rx_Condition_not_allowed => NULL
  # DEBUG cfgPduLength => NULL
  RxPduInfo ={v} {CLOBBER};

  <bb 61> [local count: 166183022]:
  # DEBUG D#11 => {CLOBBER}
  # DEBUG Index => D#11

  <bb 62> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanIf_ControllerBusOff (CanIf_ControllerBusOff, funcdef_no=18, decl_uid=8250, cgraph_uid=19, symbol_order=23)

CanIf_ControllerBusOff (uint8 Controller)
{
  unsigned char CanIf_State.126_1;
  const struct CanIf_CanDriverConfigType * CanIf_DriverConfigPtr.127_2;
  unsigned char _3;
  int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.126_1 = CanIf_State;
  if (CanIf_State.126_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 22, 30);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_DriverConfigPtr.127_2 = CanIf_DriverConfigPtr;
  _3 = CanIf_DriverConfigPtr.127_2->nrOfControllers;
  if (_3 <= Controller_7(D))
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 22, 14);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _4 = (int) Controller_7(D);
  CanIf_CanControllerMode[_4] = 2;
  # DEBUG BEGIN_STMT
  CanIf_PduMode[_4] = 1;
  # DEBUG BEGIN_STMT
  SchM_Exit_CanIf_SCHM_CANIF_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  CanSM_ControllerBusOff (Controller_7(D));

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanIf_ControllerModeIndication (CanIf_ControllerModeIndication, funcdef_no=19, decl_uid=8253, cgraph_uid=20, symbol_order=24)

CanIf_ControllerModeIndication (uint8 ControllerId, Can_ControllerStateType ControllerMode)
{
  unsigned char CanIf_State.128_1;
  const struct CanIf_CanDriverConfigType * CanIf_DriverConfigPtr.129_2;
  unsigned char _3;
  int _4;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.128_1 = CanIf_State;
  if (CanIf_State.128_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 23, 30);
  goto <bb 11>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  CanIf_DriverConfigPtr.129_2 = CanIf_DriverConfigPtr;
  _3 = CanIf_DriverConfigPtr.129_2->nrOfControllers;
  if (_3 <= ControllerId_7(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 23, 14);
  goto <bb 11>; [100.00%]

  <bb 6> [local count: 482002704]:
  # DEBUG BEGIN_STMT
  if (ControllerMode_8(D) != 3)
    goto <bb 7>; [79.76%]
  else
    goto <bb 10>; [20.24%]

  <bb 7> [local count: 384445357]:
  if (ControllerMode_8(D) != 1)
    goto <bb 8>; [66.00%]
  else
    goto <bb 10>; [34.00%]

  <bb 8> [local count: 253733935]:
  if (ControllerMode_8(D) != 2)
    goto <bb 9>; [48.88%]
  else
    goto <bb 10>; [51.12%]

  <bb 9> [local count: 124025147]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 23, 21);
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 357977557]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = (int) ControllerId_7(D);
  CanIf_CanControllerMode[_4] = ControllerMode_8(D);
  # DEBUG BEGIN_STMT
  CanSM_ControllerModeIndication (ControllerId_7(D), ControllerMode_8(D));

  <bb 11> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanIf_TrcvModeIndication (CanIf_TrcvModeIndication, funcdef_no=20, decl_uid=8256, cgraph_uid=21, symbol_order=25)

CanIf_TrcvModeIndication (uint8 Transceiver, CanTrcv_TrcvModeType TransceiverMode)
{
  unsigned char CanIf_State.130_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.131_2;
  unsigned char _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.130_1 = CanIf_State;
  if (CanIf_State.130_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 24, 30);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.131_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.131_2->nrOfTransceivers;
  if (_3 <= Transceiver_6(D))
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 24, 17);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  CanSM_TransceiverModeIndication (Transceiver_6(D), TransceiverMode_7(D));

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanIf_ConfirmPnAvailability (CanIf_ConfirmPnAvailability, funcdef_no=21, decl_uid=8258, cgraph_uid=22, symbol_order=26)

CanIf_ConfirmPnAvailability (uint8 Transceiver)
{
  unsigned char CanIf_State.132_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.133_2;
  unsigned char _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.132_1 = CanIf_State;
  if (CanIf_State.132_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 26, 30);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.133_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.133_2->nrOfTransceivers;
  if (_3 <= Transceiver_6(D))
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 26, 17);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  CanSM_ConfirmPnAvailability (Transceiver_6(D));

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanIf_ClearTrcvWufFlagIndication (CanIf_ClearTrcvWufFlagIndication, funcdef_no=22, decl_uid=8260, cgraph_uid=23, symbol_order=27)

CanIf_ClearTrcvWufFlagIndication (uint8 Transceiver)
{
  unsigned char CanIf_State.134_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.135_2;
  unsigned char _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.134_1 = CanIf_State;
  if (CanIf_State.134_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 32, 30);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.135_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.135_2->nrOfTransceivers;
  if (_3 <= Transceiver_6(D))
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 32, 17);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  CanSM_ClearTrcvWufFlagIndication (Transceiver_6(D));

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function CanIf_CheckTrcvWakeFlagIndication (CanIf_CheckTrcvWakeFlagIndication, funcdef_no=23, decl_uid=8262, cgraph_uid=24, symbol_order=28)

CanIf_CheckTrcvWakeFlagIndication (uint8 Transceiver)
{
  unsigned char CanIf_State.136_1;
  const struct CanIf_ConfigType * CanIf_ConfigPtr.137_2;
  unsigned char _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIf_State.136_1 = CanIf_State;
  if (CanIf_State.136_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 33, 30);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  CanIf_ConfigPtr.137_2 = CanIf_ConfigPtr;
  _3 = CanIf_ConfigPtr.137_2->nrOfTransceivers;
  if (_3 <= Transceiver_6(D))
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (60, 0, 33, 17);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  CanSM_CheckTransceiverWakeFlagIndication (Transceiver_6(D));

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


