Dcm_MainFunction_Part2 ()
{
  uint8_least i;

  <bb 2> :
  # DEBUG BEGIN_STMT
  i = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (unsigned char) i;
  Dcm_Internal_ProcessRetryTimer (_1);
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (i <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Dcm_Dsp_DidSignals_SignalBufferOperationsPoll ();
  # DEBUG BEGIN_STMT
  Dcm_Dsp_SecurityAccess_MainFunction ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_TxConnectionProcessTxConnections ();
  # DEBUG BEGIN_STMT
  Dcm_HsmMain (&Dcm_HsmScDcm);
  # DEBUG BEGIN_STMT
  Dcm_Dsl_DiagnosticSessionHandler_P2TimerHandlingMainFunction ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_Supervisor_PostProcessingMainFunction ();
  # DEBUG BEGIN_STMT
  return;

}


Dcm_MainFunction_Part1 ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ControlDTCSetting_MainFunction ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_RoeServices_MainFunction ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_PostBootOperationsHandler_MainFunction ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_Supervisor_PreProcessingMainFunction ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_DiagnosticSessionHandler_S3TimerHandlingMainFunction ();
  # DEBUG BEGIN_STMT
  return;

}


Dcm_Dsp_Init ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Dcm_Dsp_DidServices_Init ();
  # DEBUG BEGIN_STMT
  Dcm_HsmInit (&Dcm_HsmScDcm);
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ServiceProcessorInit ();
  # DEBUG BEGIN_STMT
  Dcm_Dsp_CommunicationControl_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsp_SecurityAccess_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsp_RoutineControl_Init ();
  # DEBUG BEGIN_STMT
  Dcm_DIDInit ();
  # DEBUG BEGIN_STMT
  Dcm_Dsp_DemFacade_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ControlDTCSettingState_Init ();
  return;

}


Dcm_Internal_ProcessRetryTimer (const uint8 instIdx)
{
  struct Dcm_HsmInfoType * const curHsmInfo;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) instIdx;
  curHsmInfo = &Dcm_HsmInfo[_1];
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = curHsmInfo->retryTimer;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_HsmEmitInst (&Dcm_HsmScDcm, instIdx, 19);
  # DEBUG BEGIN_STMT
  _3 = curHsmInfo->retryTimer;
  _4 = _3 + 65535;
  curHsmInfo->retryTimer = _4;

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  return;

}


Dcm_Init (const Dcm_ConfigType * ConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Initialized.7_1 = Dcm_Initialized;
  if (Dcm_Initialized.7_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 1, 34);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Dcm_Dsl_DiagnosticSessionHandler_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_Supervisor_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsp_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_RoeServices_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_ComMChannelStateManager_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_SecurityLevelHandler_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsl_PostBootOperationsHandler_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Initialized = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_DIDInit ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Dcm_Dsp_DidSignals_SignalBufferContextNvM_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsp_ReadDataByIdentifier_Init ();
  # DEBUG BEGIN_STMT
  Dcm_Dsp_WriteDataByIdentifier_Init ();
  return;

}


Dcm_GetSesCtrlTypeExt (Dcm_SesCtrlType * SesCtrlType)
{
  Std_ReturnType retVal;
  Std_ReturnType D.8575;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Initialized.6_1 = Dcm_Initialized;
  if (Dcm_Initialized.6_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 6, 5);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (SesCtrlType == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 6, 7);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = Dcm_Dsl_DiagnosticSessionHandler_GetCurrentSession ();
  *SesCtrlType = _2;
  # DEBUG BEGIN_STMT
  retVal = 0;
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.8575 = retVal;
  return D.8575;

}


Dcm_DemTriggerOnDTCStatus (uint32 DTC, uint8 DTCStatusOld, uint8 DTCStatusNew)
{
  Std_ReturnType retVal;
  Std_ReturnType D.8567;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Initialized.5_1 = Dcm_Initialized;
  if (Dcm_Initialized.5_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 43, 5);
  # DEBUG BEGIN_STMT
  retVal = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Dcm_Dsl_RoeServices_TriggerOnDTCStatus (DTCStatusOld, DTCStatusNew);
  # DEBUG BEGIN_STMT
  retVal = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.8567 = retVal;
  return D.8567;

}


Dcm_MainFunction ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Initialized.4_1 = Dcm_Initialized;
  if (Dcm_Initialized.4_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Dcm_MainFunction_Part1 ();
  # DEBUG BEGIN_STMT
  Dcm_MainFunction_Part2 ();

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_Internal_ReleaseLock (Dcm_MutexType * MutexPtr)
{
  Dcm_MutexType PreviousMutexState;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PreviousMutexState = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  PreviousMutexState = *MutexPtr;
  # DEBUG BEGIN_STMT
  *MutexPtr = 0;
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (PreviousMutexState == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 255, 18);

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Dcm_Internal_GetLock (Dcm_MutexType * MutexPtr)
{
  Dcm_MutexType PreviousMutexState;
  Std_ReturnType RetVal;
  Std_ReturnType D.8556;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 31;
  # DEBUG BEGIN_STMT
  PreviousMutexState = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  PreviousMutexState = *MutexPtr;
  # DEBUG BEGIN_STMT
  *MutexPtr = 1;
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (PreviousMutexState == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 31;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.8556 = RetVal;
  return D.8556;

}


Dcm_TriggerOnEvent (uint8 RoeEventId)
{
  Std_ReturnType apiRetVal;
  Std_ReturnType D.8551;

  <bb 2> :
  # DEBUG BEGIN_STMT
  apiRetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Initialized.3_1 = Dcm_Initialized;
  if (Dcm_Initialized.3_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 45, 5);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (RoeEventId == 255)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 45, 6);
  # DEBUG BEGIN_STMT
  apiRetVal = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  apiRetVal = Dcm_Dsl_RoeServices_TriggerOnEvent (RoeEventId);

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.8551 = apiRetVal;
  return D.8551;

}


Dcm_ResetToDefaultSession ()
{
  Std_ReturnType Retval;
  Std_ReturnType D.8543;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Retval = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Initialized.2_1 = Dcm_Initialized;
  if (Dcm_Initialized.2_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 42, 5);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Dcm_Dsl_DiagnosticSessionHandler_ResetToDefaultSession (2);
  # DEBUG BEGIN_STMT
  Retval = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.8543 = Retval;
  return D.8543;

}


Dcm_GetActiveProtocol (Dcm_ProtocolType * ActiveProtocol)
{
  struct Dcm_ProtocolConfigType CurProtocolConfig;
  Std_ReturnType retVal;
  Std_ReturnType D.8538;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Initialized.1_1 = Dcm_Initialized;
  if (Dcm_Initialized.1_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 15, 5);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ActiveProtocol == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 15, 7);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retVal = Dcm_Dsl_Supervisor_GetLatestExternalUDSProtocolConfig (&CurProtocolConfig);
  # DEBUG BEGIN_STMT
  if (retVal == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _2 = CurProtocolConfig.Type;
  *ActiveProtocol = _2;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  *ActiveProtocol = 12;

  <bb 9> :
  CurProtocolConfig = {CLOBBER};
  # DEBUG BEGIN_STMT
  SchM_Exit_Dcm_SCHM_DCM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  retVal = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.8538 = retVal;
  return D.8538;

}


Dcm_GetSesCtrlType (Dcm_SesCtrlType * SesCtrlType)
{
  Std_ReturnType retVal;
  Std_ReturnType D.8527;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retVal = Dcm_GetSesCtrlTypeExt (SesCtrlType);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.8527 = retVal;
  return D.8527;

}


Dcm_GetSecurityLevel (Dcm_SecLevelType * SecLevel)
{
  Std_ReturnType retVal;
  Std_ReturnType D.8525;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dcm_Initialized.0_1 = Dcm_Initialized;
  if (Dcm_Initialized.0_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 13, 5);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (SecLevel == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (53, 0, 13, 7);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = Dcm_Dsl_SecurityLevelHandler_GetSecurityLevel ();
  *SecLevel = _2;
  # DEBUG BEGIN_STMT
  retVal = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.8525 = retVal;
  return D.8525;

}


