__attribute__((target ("general-regs-only")))
OS_KernGetStackInfo (os_taskorisr_t toi, struct os_stackinfo_t * out)
{
  os_isrid_t iid;
  os_paramtype_t p[3];
  os_boolean_t ok;
  os_result_t r;
  const struct os_isr_t * is;
  const struct os_task_t * ts;
  os_taskid_t tid;
  struct os_kerneldata_t * const kernel_data;
  unsigned int _1;
  unsigned int out.0_2;
  int _3;
  unsigned char _4;
  short unsigned int _5;
  const struct os_isr_t * OS_isrTableBase.1_6;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  const struct os_task_t * _10;
  unsigned char OS_nTasks.2_11;
  const struct os_task_t * OS_taskTableBase.3_12;
  unsigned int _13;
  unsigned int _14;
  short unsigned int _15;
  const struct os_isr_t * OS_isrTableBase.4_16;
  short unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  short unsigned int OS_nInterrupts.5_20;
  const struct os_isr_t * OS_isrTableBase.6_21;
  unsigned int _22;
  unsigned int _23;
  os_result_t _67;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_31 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ts_32 = 0B;
  # DEBUG ts => ts_32
  # DEBUG BEGIN_STMT
  is_33 = 0B;
  # DEBUG is => is_33
  # DEBUG BEGIN_STMT
  r_34 = 0;
  # DEBUG r => r_34
  # DEBUG BEGIN_STMT
  ok_35 = 0;
  # DEBUG ok => ok_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) toi_36(D);
  p[0] = _1;
  # DEBUG BEGIN_STMT
  out.0_2 = (unsigned int) out_39(D);
  p[1] = out.0_2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = OS_CanWrite (out_39(D), 28);
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  r_64 = OS_Error (&OS_svc_GetStackInfo, 6, &p);
  # DEBUG r => r_64
  goto <bb 25>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (toi_36(D) == 65535)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = OS_kernelData.inFunction;
  if (_4 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ts_61 = OS_kernelData.taskCurrent;
  # DEBUG ts => ts_61
  # DEBUG BEGIN_STMT
  ok_62 = 1;
  # DEBUG ok => ok_62
  goto <bb 25>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.isrCurrent;
  if (_5 != 4095)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.1_6 = OS_isrTableBase;
  _7 = OS_kernelData.isrCurrent;
  _8 = (unsigned int) _7;
  _9 = _8 * 68;
  is_59 = OS_isrTableBase.1_6 + _9;
  # DEBUG is => is_59
  # DEBUG BEGIN_STMT
  ok_60 = 1;
  # DEBUG ok => ok_60
  goto <bb 25>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  r_58 = OS_Error (&OS_svc_GetStackInfo, 12, &p);
  # DEBUG r => r_58
  goto <bb 25>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (toi_36(D) <= 255)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  tid_49 = (os_taskid_t) toi_36(D);
  # DEBUG tid => tid_49
  # DEBUG BEGIN_STMT
  if (tid_49 == 255)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _10 = OS_kernelData.taskCurrent;
  if (_10 == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  r_56 = 5;
  # DEBUG r => r_56
  goto <bb 25>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ts_54 = OS_kernelData.taskCurrent;
  # DEBUG ts => ts_54
  # DEBUG BEGIN_STMT
  ok_55 = 1;
  # DEBUG ok => ok_55
  goto <bb 25>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  OS_nTasks.2_11 = OS_nTasks;
  if (tid_49 < OS_nTasks.2_11)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_taskTableBase.3_12 = OS_taskTableBase;
  _13 = (unsigned int) tid_49;
  _14 = _13 * 76;
  ts_52 = OS_taskTableBase.3_12 + _14;
  # DEBUG ts => ts_52
  # DEBUG BEGIN_STMT
  ok_53 = 1;
  # DEBUG ok => ok_53
  goto <bb 25>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  r_51 = OS_Error (&OS_svc_GetStackInfo, 2, &p);
  # DEBUG r => r_51
  goto <bb 25>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  iid_42 = toi_36(D) + 65280;
  # DEBUG iid => iid_42
  # DEBUG BEGIN_STMT
  if (iid_42 == 4095)
    goto <bb 19>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _15 = OS_kernelData.isrCurrent;
  if (_15 != 4095)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.4_16 = OS_isrTableBase;
  _17 = OS_kernelData.isrCurrent;
  _18 = (unsigned int) _17;
  _19 = _18 * 68;
  is_47 = OS_isrTableBase.4_16 + _19;
  # DEBUG is => is_47

  <bb 21> :
  # is_25 = PHI <is_33(19), is_47(20)>
  # DEBUG is => is_25
  # DEBUG BEGIN_STMT
  ok_48 = 1;
  # DEBUG ok => ok_48
  goto <bb 25>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  OS_nInterrupts.5_20 = OS_nInterrupts;
  if (iid_42 < OS_nInterrupts.5_20)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.6_21 = OS_isrTableBase;
  _22 = (unsigned int) iid_42;
  _23 = _22 * 68;
  is_45 = OS_isrTableBase.6_21 + _23;
  # DEBUG is => is_45
  # DEBUG BEGIN_STMT
  ok_46 = 1;
  # DEBUG ok => ok_46
  goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  r_44 = OS_Error (&OS_svc_GetStackInfo, 47, &p);
  # DEBUG r => r_44

  <bb 25> :
  # ts_24 = PHI <ts_32(3), ts_32(8), ts_52(16), ts_32(21), ts_32(23), ts_32(24), ts_61(6), ts_32(9), ts_54(14), ts_32(13), ts_32(17)>
  # is_26 = PHI <is_33(3), is_59(8), is_33(16), is_25(21), is_45(23), is_33(24), is_33(6), is_33(9), is_33(14), is_33(13), is_33(17)>
  # r_27 = PHI <r_64(3), r_34(8), r_34(16), r_34(21), r_34(23), r_44(24), r_34(6), r_58(9), r_34(14), r_56(13), r_51(17)>
  # ok_28 = PHI <ok_35(3), ok_60(8), ok_53(16), ok_48(21), ok_46(23), ok_35(24), ok_62(6), ok_35(9), ok_55(14), ok_35(13), ok_35(17)>
  # DEBUG ok => ok_28
  # DEBUG r => r_27
  # DEBUG is => is_26
  # DEBUG ts => ts_24
  # DEBUG BEGIN_STMT
  if (ok_28 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  OS_FillStackInfo (&OS_kernelData, ts_24, is_26, out_39(D));
  # DEBUG BEGIN_STMT
  OS_ComputeStackStatus (out_39(D));

  <bb 27> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _67 = r_27;
  p ={v} {CLOBBER};
  return _67;

}


__attribute__((target ("general-regs-only")))
OS_FillStackInfo (struct os_kerneldata_t * kernel_data, const struct os_task_t * ts, const struct os_isr_t * is, struct os_stackinfo_t * out)
{
  register os_stackelement_t * OS_getSpResult;
  register os_stackelement_t * OS_getSpResult;
  struct os_taskdynamic_t * td;
  os_stackelement_t * _1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  struct os_taskdynamic_t * _5;
  unsigned char _6;
  struct os_taskdynamic_t * _7;
  unsigned char _8;
  struct os_taskdynamic_t * _9;
  unsigned char _10;
  struct os_taskdynamic_t * _11;
  os_stackelement_t * _12;
  unsigned int _13;
  os_stackelement_t * _14;
  unsigned int _15;
  unsigned int _16;
  struct os_isrdynamic_t * _17;
  os_stackelement_t * _18;
  unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  os_stackelement_t * _23;
  unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int iftmp.7_29;
  os_stackelement_t * _46;
  os_stackelement_t * _51;
  unsigned int iftmp.7_56;
  unsigned int iftmp.7_57;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ts_33(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  td_53 = ts_33(D)->dynamic;
  # DEBUG td => td_53
  # DEBUG BEGIN_STMT
  _1 = ts_33(D)->stackBase;
  _2 = (unsigned int) _1;
  out_36(D)->stackBase = _2;
  # DEBUG BEGIN_STMT
  _3 = ts_33(D)->stackLen;
  out_36(D)->stackLen = _3;
  # DEBUG BEGIN_STMT
  _4 = td_53->state;
  if (_4 != 5)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = ts_33(D)->dynamic;
  _6 = _5->state;
  if (_6 == 6)
    goto <bb 7>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _7 = ts_33(D)->dynamic;
  _8 = _7->state;
  if (_8 == 3)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _9 = ts_33(D)->dynamic;
  _10 = _9->state;
  if (_10 == 4)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _11 = ts_33(D)->dynamic;
  _12 = _11->context.sp;
  iftmp.7_57 = (unsigned int) _12;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.7_56 = 0;

  <bb 9> :
  # iftmp.7_29 = PHI <iftmp.7_57(7), iftmp.7_56(8)>
  out_36(D)->stackPointer = iftmp.7_29;

  <bb 10> :
  # DEBUG BEGIN_STMT
  out_36(D)->isrStackBase = 0;
  # DEBUG BEGIN_STMT
  out_36(D)->isrStackLen = 0;
  goto <bb 17>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (is_34(D) == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  out_36(D)->stackBase = 0;
  # DEBUG BEGIN_STMT
  _13 = kernel_data_41(D)->iStackLen;
  out_36(D)->isrStackLen = _13;
  # DEBUG BEGIN_STMT
  _14 = kernel_data_41(D)->iStackBase;
  _15 = (unsigned int) _14;
  out_36(D)->isrStackBase = _15;
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  out_36(D)->stackBase = 0;
  # DEBUG BEGIN_STMT
  _16 = is_34(D)->stackLen;
  out_36(D)->isrStackLen = _16;
  # DEBUG BEGIN_STMT
  _17 = is_34(D)->dynamic;
  _18 = _17->c.stackLimit;
  _19 = (unsigned int) _18;
  _20 = is_34(D)->stackLen;
  _21 = _19 - _20;
  out_36(D)->isrStackBase = _21;

  <bb 14> :
  # DEBUG BEGIN_STMT
  _22 = out_36(D)->stackBase;
  if (_22 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _23 = kernel_data_41(D)->iStackBase;
  _24 = (unsigned int) _23;
  out_36(D)->stackBase = _24;
  # DEBUG BEGIN_STMT
  _25 = kernel_data_41(D)->iStackLen;
  out_36(D)->stackLen = _25;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mov	%0, r13" : "result" "=r" OS_getSpResult_50);
  # DEBUG OS_getSpResult => OS_getSpResult_50
  # DEBUG BEGIN_STMT
  _51 = OS_getSpResult_50;
  _26 = (unsigned int) _51;
  out_36(D)->stackPointer = _26;
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _27 = is_34(D)->stackLen;
  out_36(D)->stackLen = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mov	%0, r13" : "result" "=r" OS_getSpResult_45);
  # DEBUG OS_getSpResult => OS_getSpResult_45
  # DEBUG BEGIN_STMT
  _46 = OS_getSpResult_45;
  _28 = (unsigned int) _46;
  out_36(D)->stackPointer = _28;

  <bb 17> :
  return;

}


__attribute__((target ("general-regs-only")))
OS_ComputeStackStatus (struct os_stackinfo_t * out)
{
  os_stackelement_t * sp;
  os_size_t clean;
  unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  clean_15 = 0;
  # DEBUG clean => clean_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = out_17(D)->stackBase;
  sp_18 = (os_stackelement_t *) _1;
  # DEBUG sp => sp_18
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  clean_19 = clean_12 + 4;
  # DEBUG clean => clean_19
  # DEBUG BEGIN_STMT
  sp_20 = sp_13 + 4;
  # DEBUG sp => sp_20

  <bb 4> :
  # clean_12 = PHI <clean_15(2), clean_19(3)>
  # sp_13 = PHI <sp_18(2), sp_20(3)>
  # DEBUG sp => sp_13
  # DEBUG clean => clean_12
  # DEBUG BEGIN_STMT
  _2 = *sp_13;
  if (_2 == 3958107115)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = out_17(D)->stackLen;
  if (clean_12 < _3)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = out_17(D)->stackPointer;
  if (_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _5 = out_17(D)->stackPointer;
  _6 = out_17(D)->stackBase;
  if (_5 < _6)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  out_17(D)->stackStatus = 1;
  goto <bb 15>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _7 = out_17(D)->stackPointer;
  if (_7 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _8 = out_17(D)->stackPointer;
  _9 = out_17(D)->stackBase;
  _10 = out_17(D)->stackLen;
  _11 = _9 + _10;
  if (_8 > _11)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  out_17(D)->stackStatus = -1;
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (clean_12 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  out_17(D)->stackStatus = 1;
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  out_17(D)->stackStatus = 0;

  <bb 15> :
  # DEBUG BEGIN_STMT
  out_17(D)->stackClean = clean_12;
  return;

}


