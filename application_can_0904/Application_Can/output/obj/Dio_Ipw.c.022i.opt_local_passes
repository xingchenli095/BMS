Dio_Ipw_WriteChannelGroup (const struct Dio_ChannelGroupType * pChannelGroupIdPtr, Dio_PortLevelType Level)
{
  uint8 u8Siul2Instance;
  Dio_PortType PortId;
  int _1;
  int _2;
  unsigned char _3;
  int _4;
  int _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PortId_11 = pChannelGroupIdPtr_10(D)->port;
  # DEBUG PortId => PortId_11
  # DEBUG BEGIN_STMT
  _1 = (int) PortId_11;
  u8Siul2Instance_12 = Dio_au8PortSiul2Instance[_1];
  # DEBUG u8Siul2Instance => u8Siul2Instance_12
  # DEBUG BEGIN_STMT
  _2 = (int) Level_13(D);
  _3 = pChannelGroupIdPtr_10(D)->u8offset;
  _4 = (int) _3;
  _5 = _2 << _4;
  _6 = (short unsigned int) _5;
  _7 = pChannelGroupIdPtr_10(D)->mask;
  _8 = Dio_Ipw_ReverseBits (_7);
  Siul2_Dio_Ip_MaskedWritePins (u8Siul2Instance_12, PortId_11, _6, _8);
  return;

}


Dio_Ipw_ReadChannelGroup (const struct Dio_ChannelGroupType * pChannelGroupIdPtr)
{
  Dio_PortLevelType maskRevValue;
  Dio_PortLevelType pinsValue;
  uint32 u32PGPDOAdrress;
  Dio_PortType PortOffset;
  Dio_PortType PortId;
  uint8 u8Siul2Instance;
  Dio_PortLevelType PortLevel;
  int _1;
  int _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  unsigned char _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  const struct Siul2_Dio_Ip_GpioType * u32PGPDOAdrress.2_18;
  short unsigned int _19;
  short unsigned int _20;
  int _21;
  unsigned char _22;
  int _23;
  int _24;
  Dio_PortLevelType _37;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PortLevel_25 = 0;
  # DEBUG PortLevel => PortLevel_25
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PortId_28 = pChannelGroupIdPtr_27(D)->port;
  # DEBUG PortId => PortId_28
  # DEBUG BEGIN_STMT
  _1 = (int) PortId_28;
  u8Siul2Instance_29 = Dio_au8PortSiul2Instance[_1];
  # DEBUG u8Siul2Instance => u8Siul2Instance_29
  # DEBUG BEGIN_STMT
  _2 = (int) u8Siul2Instance_29;
  PortOffset_30 = Dio_au8Port0OffsetInSiul2Instance[_2];
  # DEBUG PortOffset => PortOffset_30
  # DEBUG BEGIN_STMT
  _3 = (int) u8Siul2Instance_29;
  _4 = Siul2_Dio_Ip_au32BaseAdresses[_3];
  _5 = (long unsigned int) PortId_28;
  _6 = (long unsigned int) PortOffset_30;
  _7 = _5 - _6;
  _8 = _7 / 2;
  _9 = _8 + 1;
  _10 = _9 * 2;
  _11 = PortId_28 - PortOffset_30;
  _12 = (long unsigned int) _11;
  _13 = _12 & 1;
  _14 = _10 - _13;
  _15 = _14 + 4294967295;
  _16 = _15 << 1;
  _17 = _4 + _16;
  u32PGPDOAdrress_31 = _17 + 5888;
  # DEBUG u32PGPDOAdrress => u32PGPDOAdrress_31
  # DEBUG BEGIN_STMT
  u32PGPDOAdrress.2_18 = (const struct Siul2_Dio_Ip_GpioType *) u32PGPDOAdrress_31;
  pinsValue_33 = Siul2_Dio_Ip_ReadPins (u32PGPDOAdrress.2_18);
  # DEBUG pinsValue => pinsValue_33
  # DEBUG BEGIN_STMT
  _19 = pChannelGroupIdPtr_27(D)->mask;
  maskRevValue_35 = Dio_Ipw_ReverseBits (_19);
  # DEBUG maskRevValue => maskRevValue_35
  # DEBUG BEGIN_STMT
  _20 = pinsValue_33 & maskRevValue_35;
  _21 = (int) _20;
  _22 = pChannelGroupIdPtr_27(D)->u8offset;
  _23 = (int) _22;
  _24 = _21 >> _23;
  PortLevel_36 = (Dio_PortLevelType) _24;
  # DEBUG PortLevel => PortLevel_36
  # DEBUG BEGIN_STMT
  _37 = PortLevel_36;
  return _37;

}


Dio_Ipw_WritePort (Dio_PortType PortId, Dio_PortLevelType Level)
{
  uint8 u8Siul2Instance;
  uint32 u32PGPDOAdrress;
  Dio_PortType PortOffset;
  Dio_PortLevelType CrtLevel;
  int _1;
  int _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  unsigned char _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  struct Siul2_Dio_Ip_GpioType * u32PGPDOAdrress.1_18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CrtLevel_20 = Level_19(D);
  # DEBUG CrtLevel => CrtLevel_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) PortId_21(D);
  u8Siul2Instance_23 = Dio_au8PortSiul2Instance[_1];
  # DEBUG u8Siul2Instance => u8Siul2Instance_23
  # DEBUG BEGIN_STMT
  _2 = (int) u8Siul2Instance_23;
  PortOffset_24 = Dio_au8Port0OffsetInSiul2Instance[_2];
  # DEBUG PortOffset => PortOffset_24
  # DEBUG BEGIN_STMT
  _3 = (int) u8Siul2Instance_23;
  _4 = Siul2_Dio_Ip_au32BaseAdresses[_3];
  _5 = (long unsigned int) PortId_21(D);
  _6 = (long unsigned int) PortOffset_24;
  _7 = _5 - _6;
  _8 = _7 / 2;
  _9 = _8 + 1;
  _10 = _9 * 2;
  _11 = PortId_21(D) - PortOffset_24;
  _12 = (long unsigned int) _11;
  _13 = _12 & 1;
  _14 = _10 - _13;
  _15 = _14 + 4294967295;
  _16 = _15 << 1;
  _17 = _4 + _16;
  u32PGPDOAdrress_25 = _17 + 5888;
  # DEBUG u32PGPDOAdrress => u32PGPDOAdrress_25
  # DEBUG BEGIN_STMT
  u32PGPDOAdrress.1_18 = (struct Siul2_Dio_Ip_GpioType *) u32PGPDOAdrress_25;
  Siul2_Dio_Ip_WritePins (u32PGPDOAdrress.1_18, CrtLevel_20);
  return;

}


Dio_Ipw_ReadPort (Dio_PortType PortId)
{
  uint32 u32PGPDOAdrress;
  Dio_PortType PortOffset;
  uint8 u8Siul2Instance;
  Dio_PortLevelType PortLevel;
  int _1;
  int _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  unsigned char _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  const struct Siul2_Dio_Ip_GpioType * u32PGPDOAdrress.0_18;
  Dio_PortLevelType _27;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PortLevel_19 = 0;
  # DEBUG PortLevel => PortLevel_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) PortId_20(D);
  u8Siul2Instance_22 = Dio_au8PortSiul2Instance[_1];
  # DEBUG u8Siul2Instance => u8Siul2Instance_22
  # DEBUG BEGIN_STMT
  _2 = (int) u8Siul2Instance_22;
  PortOffset_23 = Dio_au8Port0OffsetInSiul2Instance[_2];
  # DEBUG PortOffset => PortOffset_23
  # DEBUG BEGIN_STMT
  _3 = (int) u8Siul2Instance_22;
  _4 = Siul2_Dio_Ip_au32BaseAdresses[_3];
  _5 = (long unsigned int) PortId_20(D);
  _6 = (long unsigned int) PortOffset_23;
  _7 = _5 - _6;
  _8 = _7 / 2;
  _9 = _8 + 1;
  _10 = _9 * 2;
  _11 = PortId_20(D) - PortOffset_23;
  _12 = (long unsigned int) _11;
  _13 = _12 & 1;
  _14 = _10 - _13;
  _15 = _14 + 4294967295;
  _16 = _15 << 1;
  _17 = _4 + _16;
  u32PGPDOAdrress_24 = _17 + 5888;
  # DEBUG u32PGPDOAdrress => u32PGPDOAdrress_24
  # DEBUG BEGIN_STMT
  u32PGPDOAdrress.0_18 = (const struct Siul2_Dio_Ip_GpioType *) u32PGPDOAdrress_24;
  PortLevel_26 = Siul2_Dio_Ip_ReadPins (u32PGPDOAdrress.0_18);
  # DEBUG PortLevel => PortLevel_26
  # DEBUG BEGIN_STMT
  _27 = PortLevel_26;
  return _27;

}


Dio_Ipw_WriteChannel (Dio_ChannelType ChannelId, Dio_LevelType Level)
{
  Dio_ChannelType ChannelIndex;
  Dio_ChannelType ChannelOffset;
  uint8 u8Siul2Instance;
  Dio_PortType PortId;
  short unsigned int _1;
  int _2;
  int _3;
  unsigned char _4;
  short unsigned int _5;
  int _6;
  long unsigned int _7;
  short unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  Dio_LevelType * _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelId_13(D) >> 4;
  PortId_14 = (Dio_PortType) _1;
  # DEBUG PortId => PortId_14
  # DEBUG BEGIN_STMT
  _2 = (int) PortId_14;
  u8Siul2Instance_16 = Dio_au8PortSiul2Instance[_2];
  # DEBUG u8Siul2Instance => u8Siul2Instance_16
  # DEBUG BEGIN_STMT
  _3 = (int) u8Siul2Instance_16;
  _4 = Dio_au8Port0OffsetInSiul2Instance[_3];
  _5 = (short unsigned int) _4;
  ChannelOffset_17 = _5 * 16;
  # DEBUG ChannelOffset => ChannelOffset_17
  # DEBUG BEGIN_STMT
  ChannelIndex_18 = ChannelId_13(D) - ChannelOffset_17;
  # DEBUG ChannelIndex => ChannelIndex_18
  # DEBUG BEGIN_STMT
  _6 = (int) u8Siul2Instance_16;
  _7 = Siul2_Dio_Ip_au32BaseAdresses[_6];
  _8 = ChannelIndex_18 ^ 3;
  _9 = (long unsigned int) _8;
  _10 = _7 + _9;
  _11 = _10 + 4864;
  _12 = (Dio_LevelType *) _11;
  *_12 = Level_19(D);
  return;

}


Dio_Ipw_ReadChannel (Dio_ChannelType ChannelId)
{
  Dio_ChannelType ChannelIndex;
  Dio_ChannelType ChannelOffset;
  uint8 u8Siul2Instance;
  Dio_PortType PortId;
  Dio_LevelType ChannelLevel;
  short unsigned int _1;
  int _2;
  int _3;
  unsigned char _4;
  short unsigned int _5;
  Dio_LevelType _15;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ChannelLevel_6 = 0;
  # DEBUG ChannelLevel => ChannelLevel_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelId_7(D) >> 4;
  PortId_8 = (Dio_PortType) _1;
  # DEBUG PortId => PortId_8
  # DEBUG BEGIN_STMT
  _2 = (int) PortId_8;
  u8Siul2Instance_10 = Dio_au8PortSiul2Instance[_2];
  # DEBUG u8Siul2Instance => u8Siul2Instance_10
  # DEBUG BEGIN_STMT
  _3 = (int) u8Siul2Instance_10;
  _4 = Dio_au8Port0OffsetInSiul2Instance[_3];
  _5 = (short unsigned int) _4;
  ChannelOffset_11 = _5 * 16;
  # DEBUG ChannelOffset => ChannelOffset_11
  # DEBUG BEGIN_STMT
  ChannelIndex_12 = ChannelId_7(D) - ChannelOffset_11;
  # DEBUG ChannelIndex => ChannelIndex_12
  # DEBUG BEGIN_STMT
  ChannelLevel_14 = Dio_Ipw_ReadChannelValue (u8Siul2Instance_10, ChannelIndex_12);
  # DEBUG ChannelLevel => ChannelLevel_14
  # DEBUG BEGIN_STMT
  _15 = ChannelLevel_14;
  return _15;

}


Dio_Ipw_ReadChannelValue (uint8 u8Siul2Instance, Dio_ChannelType Channel)
{
  Dio_LevelType returnValue;
  int _1;
  long unsigned int _2;
  short unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  Dio_LevelType * _7;
  Dio_LevelType _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  returnValue_8 = 0;
  # DEBUG returnValue => returnValue_8
  # DEBUG BEGIN_STMT
  _1 = (int) u8Siul2Instance_9(D);
  _2 = Siul2_Dio_Ip_au32BaseAdresses[_1];
  _3 = Channel_11(D) ^ 3;
  _4 = (long unsigned int) _3;
  _5 = _2 + _4;
  _6 = _5 + 5376;
  _7 = (Dio_LevelType *) _6;
  returnValue_12 = *_7;
  # DEBUG returnValue => returnValue_12
  # DEBUG BEGIN_STMT
  returnValue_13 = returnValue_12 & 1;
  # DEBUG returnValue => returnValue_13
  # DEBUG BEGIN_STMT
  _14 = returnValue_13;
  return _14;

}


Dio_Ipw_ReverseBits (Dio_PortLevelType Level)
{
  Dio_PortLevelType NumShifts;
  Dio_PortLevelType RevLevel;
  Dio_PortLevelType TempLevel;
  signed short TempLevel.3_1;
  signed short _2;
  signed short RevLevel.4_3;
  signed short _4;
  short unsigned int NumShifts.5_5;
  long unsigned int _6;
  int _7;
  long unsigned int _8;
  Dio_PortLevelType _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  TempLevel_13 = Level_12(D);
  # DEBUG TempLevel => TempLevel_13
  # DEBUG BEGIN_STMT
  RevLevel_14 = TempLevel_13;
  # DEBUG RevLevel => RevLevel_14
  # DEBUG BEGIN_STMT
  NumShifts_15 = 15;
  # DEBUG NumShifts => NumShifts_15
  # DEBUG BEGIN_STMT
  TempLevel_16 = TempLevel_13 >> 1;
  # DEBUG TempLevel => TempLevel_16
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RevLevel_20 = RevLevel_10 << 1;
  # DEBUG RevLevel => RevLevel_20
  # DEBUG BEGIN_STMT
  TempLevel.3_1 = (signed short) TempLevel_9;
  _2 = TempLevel.3_1 & 1;
  RevLevel.4_3 = (signed short) RevLevel_20;
  _4 = _2 | RevLevel.4_3;
  RevLevel_21 = (Dio_PortLevelType) _4;
  # DEBUG RevLevel => RevLevel_21
  # DEBUG BEGIN_STMT
  NumShifts.5_5 = NumShifts_11;
  NumShifts_22 = NumShifts.5_5 + 65535;
  # DEBUG NumShifts => NumShifts_22
  # DEBUG BEGIN_STMT
  TempLevel_23 = TempLevel_9 >> 1;
  # DEBUG TempLevel => TempLevel_23

  <bb 4> :
  # TempLevel_9 = PHI <TempLevel_16(2), TempLevel_23(3)>
  # RevLevel_10 = PHI <RevLevel_14(2), RevLevel_21(3)>
  # NumShifts_11 = PHI <NumShifts_15(2), NumShifts_22(3)>
  # DEBUG NumShifts => NumShifts_11
  # DEBUG RevLevel => RevLevel_10
  # DEBUG TempLevel => TempLevel_9
  # DEBUG BEGIN_STMT
  if (TempLevel_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _6 = (long unsigned int) RevLevel_10;
  _7 = (int) NumShifts_11;
  _8 = _6 << _7;
  RevLevel_17 = (Dio_PortLevelType) _8;
  # DEBUG RevLevel => RevLevel_17
  # DEBUG BEGIN_STMT
  _18 = RevLevel_17;
  return _18;

}


