

 local analysis of OS_GetCurrentStackArea
   scanning: _1 = OS_kernelData.inFunction;
  scanning: if (_1 == 1)
  scanning: _2 = OS_kernelData.taskCurrent;
  scanning: if (_2 != 0B)
  scanning: _3 = _2->stackBase;
    Indirect ref read is not const
  scanning: rBegin_18 = (os_address_t) _3;
  scanning: _4 = _2->stackLen;
    Indirect ref read is not const
  scanning: rEnd_19 = _4 + rBegin_18;
  scanning: if (_1 == 3)
  scanning: _5 = OS_kernelData.isrCurrent;
  scanning: OS_nInterrupts.0_6 = OS_nInterrupts;
  scanning: if (_5 < OS_nInterrupts.0_6)
  scanning: _7 = OS_kernelData.iStackBase;
  scanning: rBegin_16 = (os_address_t) _7;
  scanning: _8 = OS_kernelData.iStackLen;
  scanning: rEnd_17 = _8 + rBegin_16;
  scanning: if (begin_20(D) != 0B)
  scanning: rBegin.2_9 = (void *) rBegin_11;
  scanning: *begin_20(D) = rBegin.2_9;
    Indirect ref write is not const/pure
  scanning: if (end_22(D) != 0B)
  scanning: rEnd.3_10 = (void *) rEnd_12;
  scanning: *end_22(D) = rEnd.3_10;
    Indirect ref write is not const/pure
  scanning: return;
callgraph:

OS_GetCurrentStackArea/0 (OS_GetCurrentStackArea) @06c21000
  Type: function definition analyzed
  Visibility: externally_visible public
  Aux: @068773f0
  References: OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_nInterrupts/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: 


 ordered call graph: reduced for nothrow
OS_GetCurrentStackArea/0 (OS_GetCurrentStackArea) @06c21000
  Type: function definition analyzed
  Visibility: externally_visible public
  Aux: @068773f0
  References: OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_nInterrupts/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: 



MALLOC LATTICE Initial:
OS_GetCurrentStackArea: malloc_bottom


MALLOC LATTICE after propagation:
OS_GetCurrentStackArea: malloc_bottom
callgraph:

OS_GetCurrentStackArea/0 (OS_GetCurrentStackArea) @06c21000
  Type: function definition analyzed
  Visibility: externally_visible public
  Aux: @06877090
  References: OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_nInterrupts/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: 


 ordered call graph: reduced
OS_GetCurrentStackArea/0 (OS_GetCurrentStackArea) @06c21000
  Type: function definition analyzed
  Visibility: externally_visible public
  Aux: @06877090
  References: OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_nInterrupts/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: 

Function found not to call free: OS_GetCurrentStackArea
__attribute__((target ("general-regs-only")))
OS_GetCurrentStackArea (void * * begin, void * * end)
{
  os_address_t rEnd;
  os_address_t rBegin;
  unsigned char _1;
  const struct os_task_t * _2;
  os_stackelement_t * _3;
  unsigned int _4;
  short unsigned int _5;
  short unsigned int OS_nInterrupts.0_6;
  os_stackelement_t * _7;
  unsigned int _8;
  void * rBegin.2_9;
  void * rEnd.3_10;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG kernel_data => &OS_kernelData
  # DEBUG BEGIN_STMT
  # DEBUG rBegin => 0
  # DEBUG BEGIN_STMT
  # DEBUG rEnd => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.inFunction;
  if (_1 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.taskCurrent;
  if (_2 != 0B)
    goto <bb 4>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 4> [local count: 255550554]:
  # DEBUG BEGIN_STMT
  _3 = _2->stackBase;
  rBegin_18 = (os_address_t) _3;
  # DEBUG rBegin => rBegin_18
  # DEBUG BEGIN_STMT
  _4 = _2->stackLen;
  rEnd_19 = _4 + rBegin_18;
  # DEBUG rEnd => rEnd_19
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 708669604]:
  # DEBUG BEGIN_STMT
  if (_1 == 3)
    goto <bb 6>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 6> [local count: 240947665]:
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.isrCurrent;
  OS_nInterrupts.0_6 = OS_nInterrupts;
  if (_5 < OS_nInterrupts.0_6)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 120473832]:
  # DEBUG BEGIN_STMT
  # DEBUG D#3 => OS_isrTableBase
  # DEBUG D#2 => (unsigned int) _5
  # DEBUG D#1 => D#2 * 68
  # DEBUG isr => D#3 + D#1
  # DEBUG BEGIN_STMT
  # DEBUG rBegin => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = OS_kernelData.iStackBase;
  rBegin_16 = (os_address_t) _7;
  # DEBUG rBegin => rBegin_16
  # DEBUG BEGIN_STMT
  _8 = OS_kernelData.iStackLen;
  rEnd_17 = _8 + rBegin_16;
  # DEBUG rEnd => rEnd_17

  <bb 8> [local count: 1073741824]:
  # rBegin_11 = PHI <rBegin_18(4), 0(5), rBegin_16(7), 0(3), 0(6)>
  # rEnd_12 = PHI <rEnd_19(4), 0(5), rEnd_17(7), 0(3), 0(6)>
  # DEBUG rEnd => rEnd_12
  # DEBUG rBegin => rBegin_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (begin_20(D) != 0B)
    goto <bb 9>; [70.00%]
  else
    goto <bb 10>; [30.00%]

  <bb 9> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  rBegin.2_9 = (void *) rBegin_11;
  *begin_20(D) = rBegin.2_9;

  <bb 10> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (end_22(D) != 0B)
    goto <bb 11>; [70.00%]
  else
    goto <bb 12>; [30.00%]

  <bb 11> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  rEnd.3_10 = (void *) rEnd_12;
  *end_22(D) = rEnd.3_10;

  <bb 12> [local count: 1073741824]:
  return;

}


