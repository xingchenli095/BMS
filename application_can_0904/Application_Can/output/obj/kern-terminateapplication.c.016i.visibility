
Marking local functions:


Marking externally visible functions: OS_KernTerminateApplication


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_killHookFunc/11 (OS_killHookFunc) @06de3c18
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_Shutdown/10 (OS_Shutdown) @06db4b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernTerminateApplication/0 OS_KernTerminateApplication/0 OS_KernTerminateApplication/0 OS_KernTerminateApplication/0 
  Calls: 
OS_killIsrFunc/9 (OS_killIsrFunc) @06de3ab0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_LocalTerminateApplication/8 (OS_LocalTerminateApplication) @06db4a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernTerminateApplication/0 
  Calls: 
OS_isrTableBase/7 (OS_isrTableBase) @06de3990
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_appTableBase/6 (OS_appTableBase) @06de3948
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernTerminateApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nApps/5 (OS_nApps) @06de3870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernTerminateApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_TerminateApplication/4 (OS_svc_TerminateApplication) @06de3828
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernTerminateApplication/0 (addr)OS_KernTerminateApplication/0 (addr)OS_KernTerminateApplication/0 (addr)OS_KernTerminateApplication/0 (addr)OS_KernTerminateApplication/0 (addr)OS_KernTerminateApplication/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/3 (OS_Error) @06db48c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernTerminateApplication/0 OS_KernTerminateApplication/0 OS_KernTerminateApplication/0 OS_KernTerminateApplication/0 OS_KernTerminateApplication/0 OS_KernTerminateApplication/0 
  Calls: 
OS_iecMode/2 (OS_iecMode) @06de3798
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernTerminateApplication/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06de3750
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernTerminateApplication/0 (addr)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (read)OS_KernTerminateApplication/0 (write)OS_KernTerminateApplication/0 (addr)
  Availability: not_available
  Varpool flags:
OS_KernTerminateApplication/0 (OS_KernTerminateApplication) @06db4540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_iecMode/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_TerminateApplication/4 (addr)OS_nApps/5 (read)OS_svc_TerminateApplication/4 (addr)OS_svc_TerminateApplication/4 (addr)OS_appTableBase/6 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_isrTableBase/7 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_TerminateApplication/4 (addr)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_TerminateApplication/4 (addr)OS_kernelData/1 (read)OS_isrTableBase/7 (read)OS_kernelData/1 (read)OS_killIsrFunc/9 (read)OS_killIsrFunc/9 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_killHookFunc/11 (read)OS_killHookFunc/11 (read)OS_kernelData/1 (addr)OS_svc_TerminateApplication/4 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Error/3 OS_Shutdown/10 OS_Shutdown/10 OS_Shutdown/10 OS_Shutdown/10 OS_Error/3 OS_LocalTerminateApplication/8 OS_Error/3 OS_Error/3 OS_Error/3 OS_Error/3 
   Indirect call
   Indirect call
__attribute__((target ("general-regs-only")))
OS_KernTerminateApplication (os_applicationid_t appid, os_restart_t restart)
{
  os_errorresult_t e;
  const struct os_appcontext_t * const callingApp;
  const struct os_appcontext_t * const app;
  os_paramtype_t p[3];
  os_result_t r;
  struct os_kerneldata_t * const kernel_data;
  os_result_t D.7480;
  os_erroraction_t iftmp.10;
  const struct os_appcontext_t * iftmp.6;
  const struct os_appcontext_t * iftmp.4;
  const struct os_appcontext_t * iftmp.3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  r = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) appid;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  _2 = (unsigned int) restart;
  p[1] = _2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_iecMode.0_3 = OS_iecMode;
  if (OS_iecMode.0_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _4 = OS_kernelData.inFunction;
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _5 = OS_kernelData.taskCurrent;
  _6 = _5->dynamic;
  _7 = BIT_FIELD_REF <MEM[(void *)_6], 16, 160>;
  _8 = _7;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _9 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _10 = _9;
  if (_10 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_TerminateApplication, 55, &p);
  goto <bb 48>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_nApps.1_11 = OS_nApps;
  if (appid >= OS_nApps.1_11)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_TerminateApplication, 46, 0B);
  goto <bb 48>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (restart > 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_TerminateApplication, 70, &p);
  goto <bb 48>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_appTableBase.2_12 = OS_appTableBase;
  _13 = (unsigned int) appid;
  _14 = _13 * 64;
  app = OS_appTableBase.2_12 + _14;
  # DEBUG BEGIN_STMT
  _15 = OS_kernelData.inFunction;
  if (_15 == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _16 = OS_kernelData.taskCurrent;
  iftmp.3 = _16->app;
  goto <bb 22>; [INV]

  <bb 13> :
  _17 = OS_kernelData.inFunction;
  if (_17 == 3)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  OS_isrTableBase.5_18 = OS_isrTableBase;
  _19 = OS_kernelData.isrCurrent;
  _20 = (unsigned int) _19;
  _21 = _20 * 68;
  _22 = OS_isrTableBase.5_18 + _21;
  iftmp.4 = _22->app;
  goto <bb 21>; [INV]

  <bb 15> :
  _23 = OS_kernelData.inFunction;
  if (_23 == 10)
    goto <bb 18>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _24 = OS_kernelData.inFunction;
  if (_24 == 8)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _25 = OS_kernelData.inFunction;
  if (_25 == 9)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  iftmp.6 = OS_kernelData.hookApp;
  goto <bb 20>; [INV]

  <bb 19> :
  iftmp.6 = 0B;

  <bb 20> :
  iftmp.4 = iftmp.6;

  <bb 21> :
  iftmp.3 = iftmp.4;

  <bb 22> :
  callingApp = iftmp.3;
  # DEBUG BEGIN_STMT
  if (callingApp != app)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  if (callingApp != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 24> :
  _26 = callingApp->flags;
  _27 = (unsigned int) _26;
  _28 = _27 & 1;
  if (_28 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_TerminateApplication, 37, &p);
  goto <bb 48>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  _29 = OS_kernelData.inFunction;
  if (_29 == 1)
    goto <bb 28>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _30 = OS_kernelData.inFunction;
  if (_30 == 3)
    goto <bb 28>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  e = OS_LocalTerminateApplication (app, restart);
  # DEBUG BEGIN_STMT
  if (e != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_TerminateApplication, e, &p);

  <bb 30> :
  # DEBUG BEGIN_STMT
  _31 = OS_kernelData.inFunction;
  if (_31 == 3)
    goto <bb 31>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 31> :
  OS_isrTableBase.7_32 = OS_isrTableBase;
  _33 = OS_kernelData.isrCurrent;
  _34 = (unsigned int) _33;
  _35 = _34 * 68;
  _36 = OS_isrTableBase.7_32 + _35;
  _37 = _36->app;
  if (app == _37)
    goto <bb 32>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 32> :
  # DEBUG BEGIN_STMT
  r = 30;
  # DEBUG BEGIN_STMT
  OS_killIsrFunc.8_38 = OS_killIsrFunc;
  if (OS_killIsrFunc.8_38 == 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  # DEBUG BEGIN_STMT
  OS_Shutdown (r, 0);
  goto <bb 48>; [INV]

  <bb 34> :
  # DEBUG BEGIN_STMT
  OS_killIsrFunc.9_39 = OS_killIsrFunc;
  _40 = OS_kernelData.isrCurrent;
  r = OS_killIsrFunc.9_39 (_40);
  # DEBUG BEGIN_STMT
  if (r != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 35> :
  # DEBUG BEGIN_STMT
  OS_Shutdown (r, 0);
  goto <bb 48>; [INV]

  <bb 36> :
  # DEBUG BEGIN_STMT
  _41 = OS_kernelData.inFunction;
  if (_41 == 10)
    goto <bb 37>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 37> :
  if (app == callingApp)
    goto <bb 38>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 38> :
  # DEBUG BEGIN_STMT
  _42 = OS_kernelData.errorStatus.action;
  if (_42 != 6)
    goto <bb 39>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 39> :
  # DEBUG BEGIN_STMT
  if (restart == 1)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  iftmp.10 = 5;
  goto <bb 42>; [INV]

  <bb 41> :
  iftmp.10 = 4;

  <bb 42> :
  OS_kernelData.errorStatus.action = iftmp.10;

  <bb 43> :
  # DEBUG BEGIN_STMT
  r = 30;
  # DEBUG BEGIN_STMT
  OS_killHookFunc.11_43 = OS_killHookFunc;
  if (OS_killHookFunc.11_43 == 0B)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  # DEBUG BEGIN_STMT
  OS_Shutdown (r, 0);
  goto <bb 48>; [INV]

  <bb 45> :
  # DEBUG BEGIN_STMT
  OS_killHookFunc.12_44 = OS_killHookFunc;
  r = OS_killHookFunc.12_44 (&OS_kernelData.eHookContext);
  # DEBUG BEGIN_STMT
  if (r != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 46> :
  # DEBUG BEGIN_STMT
  OS_Shutdown (r, 0);
  goto <bb 48>; [INV]

  <bb 47> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_TerminateApplication, 12, &p);

  <bb 48> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7480 = r;
  p = {CLOBBER};
  return D.7480;

}


