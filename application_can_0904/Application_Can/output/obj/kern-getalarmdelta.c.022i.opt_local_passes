__attribute__((target ("general-regs-only")))
OS_GetAlarmDelta (os_alarmid_t a, const struct os_alarm_t * as, struct os_alarmdynamic_t * ad, os_tick_t * out)
{
  os_tick_t total;
  os_alarmid_t ap;
  os_int_t result;
  struct os_counterdynamic_t * cd;
  const struct os_counter_t * cs;
  const struct os_counter_t * OS_counterTableBase.0_1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  const struct os_hwt_t * _5;
  unsigned char _6;
  void (*<T540>) (const struct os_counter_t *) _7;
  unsigned char _8;
  const struct os_alarm_t * OS_alarmTableBase.1_9;
  unsigned int _10;
  unsigned int _11;
  const struct os_alarm_t * _12;
  unsigned int _13;
  short unsigned int OS_totalAlarms.2_14;
  os_int_t _37;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  result_20 = 0;
  # DEBUG result => result_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_counterTableBase.0_1 = OS_counterTableBase;
  _2 = as_22(D)->counter;
  _3 = (unsigned int) _2;
  _4 = _3 * 32;
  cs_23 = OS_counterTableBase.0_1 + _4;
  # DEBUG cs => cs_23
  # DEBUG BEGIN_STMT
  cd_24 = cs_23->dynamic;
  # DEBUG cd => cd_24
  # DEBUG BEGIN_STMT
  _5 = cs_23->hwt;
  if (_5 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _6 = cd_24->lock;
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _7 = cs_23->updFunc;
  _7 (cs_23);

  <bb 5> :
  # DEBUG BEGIN_STMT
  _8 = ad_26(D)->inUse;
  if (_8 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  total_28 = ad_26(D)->delta;
  # DEBUG total => total_28
  # DEBUG BEGIN_STMT
  ap_29 = cd_24->head;
  # DEBUG ap => ap_29
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_alarmTableBase.1_9 = OS_alarmTableBase;
  _10 = (unsigned int) ap_16;
  _11 = _10 * 28;
  _12 = OS_alarmTableBase.1_9 + _11;
  ad_31 = _12->dynamic;
  # DEBUG ad => ad_31
  # DEBUG BEGIN_STMT
  _13 = ad_31->delta;
  total_32 = total_17 + _13;
  # DEBUG total => total_32
  # DEBUG BEGIN_STMT
  ap_33 = ad_31->next;
  # DEBUG ap => ap_33

  <bb 8> :
  # ap_16 = PHI <ap_29(6), ap_33(7)>
  # total_17 = PHI <total_28(6), total_32(7)>
  # DEBUG total => total_17
  # DEBUG ap => ap_16
  # DEBUG BEGIN_STMT
  OS_totalAlarms.2_14 = OS_totalAlarms;
  if (ap_16 < OS_totalAlarms.2_14)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  if (ap_16 != a_30(D))
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (ap_16 == a_30(D))
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  *out_35(D) = total_17;
  goto <bb 14>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  result_34 = -1;
  # DEBUG result => result_34
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  result_27 = 1;
  # DEBUG result => result_27

  <bb 14> :
  # result_15 = PHI <result_34(12), result_27(13), result_20(11)>
  # DEBUG result => result_15
  # DEBUG BEGIN_STMT
  _37 = result_15;
  return _37;

}


