Parsed function:OS_DiffTime32
Dump after hash based groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Dump after WPA based types groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Init called for 0 items (0.00%).
Dump after full equality comparison of groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes



Item count: 1
Congruent classes before: 1, after: 1
Average class size before: 1.00, after: 1.00
Average non-singular class size: 0.00, count: 0
Equal symbols: 0
Fraction of visited symbols: 0.00%

__attribute__((target ("general-regs-only")))
OS_DiffTime32 (const struct os_timestamp_t * newTime, const struct os_timestamp_t * oldTime)
{
  unsigned int diffTime$tsHi;
  unsigned int diffTime$tsLo;
  unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = newTime_9(D)->tsHi;
  _2 = oldTime_10(D)->tsHi;
  _3 = _1 - _2;
  # DEBUG diffTime$tsHi => _3
  # DEBUG BEGIN_STMT
  _4 = oldTime_10(D)->tsLo;
  _5 = newTime_9(D)->tsLo;
  if (_4 > _5)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 = _3 + 4294967295;
  # DEBUG diffTime$tsHi => _6

  <bb 4> [local count: 1073741824]:
  # diffTime$tsHi_12 = PHI <_3(2), _6(3)>
  # DEBUG diffTime$tsHi => diffTime$tsHi_12
  # DEBUG BEGIN_STMT
  _7 = _5 - _4;
  # DEBUG diffTime$tsLo => _7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (diffTime$tsHi_12 != 0)
    goto <bb 5>; [35.00%]
  else
    goto <bb 6>; [65.00%]

  <bb 5> [local count: 375809639]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG diffTime$tsLo => 4294967295

  <bb 6> [local count: 1073741824]:
  # diffTime$tsLo_11 = PHI <_7(4), 4294967295(5)>
  # DEBUG diffTime$tsLo => diffTime$tsLo_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return diffTime$tsLo_11;

}


