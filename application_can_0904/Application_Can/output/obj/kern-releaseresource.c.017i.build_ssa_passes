__attribute__((target ("general-regs-only")))
OS_KernReleaseResource (os_resourceid_t r)
{
  os_paramtype_t p[3];
  os_result_t result;
  struct os_kerneldata_t * const kernel_data;
  os_result_t D.7470;
  _Bool iftmp.5;
  int iftmp.1;
  _Bool iftmp.0;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) r;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.inFunction;
  if (_2 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.2_3 = OS_permittedContext;
  _4 = OS_permittedContext.2_3 + 62;
  _5 = *_4;
  _6 = (unsigned int) _5;
  _7 = _6 & 1024;
  if (_7 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.3_8 = OS_permittedContext;
  _9 = OS_permittedContext.3_8 + 62;
  _10 = *_9;
  _11 = OS_kernelData.errorStatus.calledFrom;
  _12 = (int) _11;
  _13 = 1 << _12;
  _14 = (short unsigned int) _13;
  _15 = _10 & _14;
  if (_15 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1 = 0;

  <bb 7> :
  iftmp.0 = iftmp.1 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.4_16 = OS_permittedContext;
  _17 = OS_permittedContext.4_16 + 62;
  _18 = *_17;
  _19 = OS_kernelData.inFunction;
  _20 = (int) _19;
  _21 = 1 << _20;
  _22 = (short unsigned int) _21;
  _23 = _18 & _22;
  iftmp.0 = _23 == 0;

  <bb 9> :
  if (iftmp.0 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  result = OS_Error (&OS_svc_ReleaseResource, 12, &p);
  goto <bb 22>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _24 = OS_kernelData.inFunction;
  if (_24 == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _25 = OS_kernelData.taskCurrent;
  _26 = _25->dynamic;
  _27 = BIT_FIELD_REF <MEM[(void *)_26], 16, 160>;
  _28 = _27;
  iftmp.5 = _28 != 0;
  goto <bb 14>; [INV]

  <bb 13> :
  _29 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _30 = _29;
  iftmp.5 = _30 != 0;

  <bb 14> :
  if (iftmp.5 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  result = OS_Error (&OS_svc_ReleaseResource, 55, &p);
  goto <bb 22>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_nResources.6_31 = OS_nResources;
  if (r >= OS_nResources.6_31)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  result = OS_Error (&OS_svc_ReleaseResource, 24, &p);
  goto <bb 22>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _32 = OS_kernelData.inFunction;
  if (_32 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  result = OS_DoReleaseResourceTask (r, &OS_kernelData);
  goto <bb 22>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _33 = OS_kernelData.inFunction;
  if (_33 == 3)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  result = OS_DoReleaseResourceISRC2 (r, &OS_kernelData);

  <bb 22> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7470 = result;
  p = {CLOBBER};
  return D.7470;

}


__attribute__((target ("general-regs-only")))
OS_DoReleaseResourceISRC2 (os_resourceid_t r, struct os_kerneldata_t * const kernel_data)
{
  os_prio_t newLevel;
  const struct os_isr_t * const isrp;
  os_paramtype_t p[3];
  os_result_t result;
  os_prio_t prevprio;
  struct os_resourcedynamic_t * rd;
  os_intstatus_t is;
  os_result_t D.7502;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) r;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  kernel_data.11_2 = (unsigned int) kernel_data;
  p[1] = kernel_data.11_2;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.12_3 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.12_3);
  # DEBUG BEGIN_STMT
  _4 = OS_kernelData.isrLastLock;
  _5 = (unsigned int) r;
  _6 = _5 | 67108864;
  if (_4 == _6)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.13_7 = OS_isrTableBase;
  _8 = kernel_data->isrCurrent;
  _9 = (unsigned int) _8;
  _10 = _9 * 68;
  isrp = OS_isrTableBase.13_7 + _10;
  # DEBUG BEGIN_STMT
  OS_resourceTableBase.14_11 = OS_resourceTableBase;
  _12 = (unsigned int) r;
  _13 = _12 * 16;
  _14 = OS_resourceTableBase.14_11 + _13;
  rd = _14->dynamic;
  # DEBUG BEGIN_STMT
  _15 = rd->next;
  kernel_data->isrLastLock = _15;
  # DEBUG BEGIN_STMT
  prevprio = rd->lastPrio;
  # DEBUG BEGIN_STMT
  rd->next = 4294967295;
  # DEBUG BEGIN_STMT
  rd->takenBy = 255;
  # DEBUG BEGIN_STMT
  rd->lastPrio = 0;
  # DEBUG BEGIN_STMT
  _16 = isrp->resourceLockTime;
  if (_16 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _17 = isrp->resourceLockTime;
  _18 = (unsigned int) r;
  _19 = _18 * 4;
  _20 = _17 + _19;
  _21 = *_20;
  if (_21 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  OS_stopResLockTimingFp.15_22 = OS_stopResLockTimingFp;
  OS_stopResLockTimingFp.15_22 (rd);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  newLevel = 272 - prevprio;
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (newLevel);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  # DEBUG BEGIN_STMT
  result = OS_Error (&OS_svc_ReleaseResource, 27, &p);

  <bb 8> :
  # DEBUG BEGIN_STMT
  D.7502 = result;
  p = {CLOBBER};
  return D.7502;

}


__attribute__((target ("general-regs-only")))
OS_DoReleaseResourceTask (os_resourceid_t r, struct os_kerneldata_t * const kernel_data)
{
  os_prio_t newLevel;
  os_paramtype_t p[3];
  os_result_t result;
  os_prio_t prevprio;
  os_prio_t currprio;
  os_intstatus_t is;
  struct os_taskdynamic_t * td;
  struct os_resourcedynamic_t * rd;
  os_result_t D.7492;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) r;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  kernel_data.7_2 = (unsigned int) kernel_data;
  p[1] = kernel_data.7_2;
  # DEBUG BEGIN_STMT
  _3 = kernel_data->taskCurrent;
  td = _3->dynamic;
  # DEBUG BEGIN_STMT
  OS_resourceTableBase.8_4 = OS_resourceTableBase;
  _5 = (unsigned int) r;
  _6 = _5 * 16;
  _7 = OS_resourceTableBase.8_4 + _6;
  rd = _7->dynamic;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.9_8 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.9_8);
  # DEBUG BEGIN_STMT
  _9 = td->lastLock;
  _10 = (unsigned int) r;
  _11 = _10 | 67108864;
  if (_9 == _11)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  currprio = td->prio;
  # DEBUG BEGIN_STMT
  _12 = rd->next;
  td->lastLock = _12;
  # DEBUG BEGIN_STMT
  prevprio = rd->lastPrio;
  # DEBUG BEGIN_STMT
  rd->next = 4294967295;
  # DEBUG BEGIN_STMT
  rd->takenBy = 255;
  # DEBUG BEGIN_STMT
  rd->lastPrio = 0;
  # DEBUG BEGIN_STMT
  _13 = kernel_data->taskCurrent;
  _14 = _13->resourceLockTime;
  if (_14 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _15 = kernel_data->taskCurrent;
  _16 = _15->resourceLockTime;
  _17 = (unsigned int) r;
  _18 = _17 * 4;
  _19 = _16 + _18;
  _20 = *_19;
  if (_20 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  OS_stopResLockTimingFp.10_21 = OS_stopResLockTimingFp;
  OS_stopResLockTimingFp.10_21 (rd);

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (currprio == prevprio)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _22 = td->state;
  if (_22 != 5)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  goto <bb 17>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  OS_LowerCurrentTasksPriority (prevprio);
  # DEBUG BEGIN_STMT
  if (currprio > 255)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (prevprio <= 255)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  prevprio = 256;

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  newLevel = 272 - prevprio;
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (newLevel);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 17>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  goto <bb 17>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _23 = td->state;
  if (_23 == 5)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  # DEBUG BEGIN_STMT
  result = OS_Error (&OS_svc_ReleaseResource, 27, &p);
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);

  <bb 17> :
  # DEBUG BEGIN_STMT
  D.7492 = result;
  p = {CLOBBER};
  return D.7492;

}


