__attribute__((target ("general-regs-only")))
OS_KernClearEvent (os_eventmask_t e)
{
  os_paramtype_t p[3];
  os_result_t r;
  struct os_taskdynamic_t * td;
  const struct os_task_t * ts;
  os_intstatus_t is;
  struct os_kerneldata_t * const kernel_data;
  unsigned char _1;
  unsigned char OS_iecMode.0_2;
  short unsigned int _3;
  short unsigned int _4;
  unsigned char _5;
  unsigned int _6;
  unsigned int _7;
  short unsigned int OS_kernDisableLevel.1_8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  os_result_t _31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_14 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  r_15 = 0;
  # DEBUG r => r_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  p[0] = e_17(D);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.inFunction;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ts_21 = OS_kernelData.taskCurrent;
  # DEBUG ts => ts_21
  # DEBUG BEGIN_STMT
  td_22 = ts_21->dynamic;
  # DEBUG td => td_22
  # DEBUG BEGIN_STMT
  OS_iecMode.0_2 = OS_iecMode;
  if (OS_iecMode.0_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = BIT_FIELD_REF <MEM[(void *)td_22], 16, 160>;
  _4 = _3;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  r_24 = OS_Error (&OS_svc_ClearEvent, 55, 0B);
  # DEBUG r => r_24
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _5 = ts_21->flags;
  _6 = (unsigned int) _5;
  _7 = _6 & 2;
  if (_7 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.1_8 = OS_kernDisableLevel;
  is_28 = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.1_8);
  # DEBUG is => is_28
  # DEBUG BEGIN_STMT
  _9 = td_22->pEvents;
  _10 = ~e_17(D);
  _11 = _9 & _10;
  td_22->pEvents = _11;
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_28);
  goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  r_26 = OS_Error (&OS_svc_ClearEvent, 15, &p);
  # DEBUG r => r_26
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  r_20 = OS_Error (&OS_svc_ClearEvent, 12, &p);
  # DEBUG r => r_20

  <bb 10> :
  # r_12 = PHI <r_15(7), r_20(9), r_24(5), r_26(8)>
  # DEBUG r => r_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = r_12;
  p ={v} {CLOBBER};
  return _31;

}


