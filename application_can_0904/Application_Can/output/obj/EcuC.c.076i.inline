IPA function summary for EcuC_TpTransmission_entry_IDLE/13 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    TS_MemBZero32/14 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for EcuC_TpReception_entry_IDLE/12 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    TS_MemBZero32/14 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for EcuC_TpTxConfirmation/11 inlinable
  global time:     16.500000
  self size:       10
  global size:     10
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:0.500000, time:0.250000,  executed if:(op1 == 0) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op1 == 0) && (not inlined)
    size:2.500000, time:1.250000,  executed if:(op1 == 0),  nonconst if:(op0[ref offset: 16] changed) && (op1 == 0)
  calls:
    EcuC_TpTransmission_entry_IDLE/13 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for EcuC_TpTransmit/10 inlinable
  global time:     18.623060
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 16] changed)
    size:2.000000, time:1.320000,  executed if:(op0[ref offset: 16] != 2),  nonconst if:(op3 changed) && (op0[ref offset: 16] != 2)
    size:0.500000, time:0.231000,  executed if:(op3 != 0B) && (op0[ref offset: 16] != 2) && (not inlined),  nonconst if:(op2[ref offset: 32] changed) && (op3 != 0B) && (op0[ref offset: 16] != 2) && (not inlined)
    size:0.500000, time:0.231000,  executed if:(op3 != 0B) && (op0[ref offset: 16] != 2),  nonconst if:(op2[ref offset: 32] changed) && (op3 != 0B) && (op0[ref offset: 16] != 2)
    size:1.000000, time:0.462000,  executed if:(op3 != 0B) && (op0[ref offset: 16] != 2) && (not inlined)
    size:3.000000, time:1.386000,  executed if:(op3 != 0B) && (op0[ref offset: 16] != 2)
  calls:
    EcuC_TpTransmission_entry_IDLE/13 function not considered for inlining
      loop depth: 0 freq:0.15 size: 2 time: 11callee size: 3 stack: 0 predicate: (op3 != 0B) && (op0[ref offset: 16] != 2)
    indirect call loop depth: 0 freq:0.46 size: 6 time: 18predicate: (op3 != 0B) && (op0[ref offset: 16] != 2)

IPA function summary for EcuC_TxBufferIsLocked/9 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 16] changed)
  calls:

IPA function summary for EcuC_CopyTxData/8 inlinable
  global time:     11.047253
  self size:       40
  global size:     40
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 16] changed)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 16] == 2)
    size:1.000000, time:0.340000,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op1[ref offset: 32] changed || op0[ref offset: 0] changed) && (op0[ref offset: 16] == 2)
    size:2.000000, time:0.680000,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op3 changed) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.119000,  executed if:(op3 != 0B) && (op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op3[ref offset: 0] changed) && (op3 != 0B) && (op0[ref offset: 16] == 2) && (not inlined)
    size:2.500000, time:0.595000,  executed if:(op3 != 0B) && (op0[ref offset: 16] == 2),  nonconst if:(op3[ref offset: 0] changed) && (op3 != 0B) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.040460,  executed if:(op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op3[ref offset: 32] changed) && (op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.040460,  executed if:(op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2),  nonconst if:(op3[ref offset: 32] changed) && (op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2)
    size:2.000000, time:0.161840,  executed if:(op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2),  nonconst if:(op1[ref offset: 32] changed || op0[ref offset: 0] changed || op3[ref offset: 32] changed) && (op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.149770,  executed if:(op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op2[ref offset: 32] changed) && (op0[ref offset: 16] == 2) && (not inlined)
    size:2.500000, time:0.539172,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op2[ref offset: 32] changed) && (op0[ref offset: 16] == 2)
    size:4.000000, time:1.093321,  executed if:(op0[ref offset: 16] == 2)
    size:0.500000, time:0.032126,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.032126,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.032126,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.032126,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2),  nonconst if:(op1[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2)
    size:7.500000, time:0.385508,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2)
    size:1.500000, time:0.064251,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined)
    size:1.000000, time:0.194701,  executed if:(op0[ref offset: 16] == 2) && (not inlined)
  calls:
    TS_MemCpy32/15 function body not available
      loop depth: 0 freq:0.06 size: 4 time: 13 predicate: (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2)

IPA function summary for EcuC_InitTx/7 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EcuC_TpTransmission_entry_IDLE/13 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for EcuC_TpRxIndication/6 inlinable
  global time:     13.420000
  self size:       14
  global size:     14
  min size:       4
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:5.000000, time:4.000000,  executed if:(not inlined)
    size:2.000000, time:0.680000,  nonconst if:(op1 changed)
  calls:
    EcuC_TpReception_entry_IDLE/12 function not considered for inlining
      loop depth: 0 freq:0.34 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for EcuC_StartOfReceptionDet/5 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
  calls:

IPA function summary for EcuC_CopyRxDataDet/4 inlinable
  global time:     7.605000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.400000,  executed if:(op0 != 0B),  nonconst if:(op1 changed) && (op0 != 0B)
    size:0.500000, time:0.245000,  executed if:(op1 != 0B) && (op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op1 != 0B) && (op0 != 0B) && (not inlined)
    size:2.500000, time:1.225000,  executed if:(op1 != 0B) && (op0 != 0B),  nonconst if:(op0[ref offset: 32] changed) && (op1 != 0B) && (op0 != 0B)
    size:0.500000, time:0.122500,  executed if:(op0[ref offset: 32] != 0) && (op1 != 0B) && (op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] != 0) && (op1 != 0B) && (op0 != 0B) && (not inlined)
    size:2.500000, time:0.612500,  executed if:(op0[ref offset: 32] != 0) && (op1 != 0B) && (op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] != 0) && (op1 != 0B) && (op0 != 0B)
  calls:

IPA function summary for EcuC_RxBufferIsLocked/3 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:

IPA function summary for EcuC_CopyRxData/2 inlinable
  global time:     9.760000
  self size:       30
  global size:     30
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op2[ref offset: 32] changed) && (op0[ref offset: 32] == 1) && (not inlined)
    size:2.500000, time:0.850000,  executed if:(op0[ref offset: 32] == 1),  nonconst if:(op2[ref offset: 32] changed) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:2.000000, time:0.340000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op2[ref offset: 32] changed || op0[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op1[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 16] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:1.000000, time:0.085000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 0] changed || op0[ref offset: 16] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:1.000000, time:0.085000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 0] changed || op1[ref offset: 0] changed || op0[ref offset: 16] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:2.000000, time:0.170000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:3.000000, time:0.255000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 0] changed) && (op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1)
  calls:
    TS_MemCpy32/15 function body not available
      loop depth: 0 freq:0.08 size: 4 time: 13 predicate: (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    EcuC_TpReception_entry_IDLE/12 function not considered for inlining
      loop depth: 0 freq:0.08 size: 2 time: 11callee size: 3 stack: 0 predicate: (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)

IPA function summary for EcuC_StartOfReception/1 inlinable
  global time:     8.450000
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 32] == 0) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 32] == 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 32] == 0),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 32] == 0)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 32] == 0),  nonconst if:(op1[ref offset: 32] changed || op2 changed) && (op0[ref offset: 32] == 0)
    size:2.000000, time:0.650000,  executed if:(op0[ref offset: 32] == 0),  nonconst if:(op2 changed) && (op0[ref offset: 32] == 0)
    size:2.000000, time:0.650000,  executed if:(op0[ref offset: 32] == 0) && (not inlined)
    size:2.000000, time:0.650000,  executed if:(op0[ref offset: 32] == 0)
  calls:

IPA function summary for EcuC_InitRx/0 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       4
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EcuC_TpReception_entry_IDLE/12 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0


Flattening functions:
Overall time estimate: 153.405313 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in EcuC_TpTransmission_entry_IDLE/13.
Enqueueing calls in EcuC_TpReception_entry_IDLE/12.
Enqueueing calls in EcuC_TpTxConfirmation/11.
Enqueueing calls in EcuC_TpTransmit/10.
Enqueueing calls in EcuC_TxBufferIsLocked/9.
Enqueueing calls in EcuC_CopyTxData/8.
Enqueueing calls in EcuC_InitTx/7.
Enqueueing calls in EcuC_TpRxIndication/6.
Enqueueing calls in EcuC_StartOfReceptionDet/5.
Enqueueing calls in EcuC_CopyRxDataDet/4.
Enqueueing calls in EcuC_RxBufferIsLocked/3.
Enqueueing calls in EcuC_CopyRxData/2.
Enqueueing calls in EcuC_StartOfReception/1.
Enqueueing calls in EcuC_InitRx/0.

Considering EcuC_TpTransmission_entry_IDLE/13 with 6 size
 to be inlined into EcuC_InitTx/7 in D:/eb2/plugins/EcuC_TS_TxDxM5I0R0/src/EcuC.c:324
 Estimated badness is -8.666667, frequency 1.00.

Considering EcuC_TpReception_entry_IDLE/12 with 6 size
 to be inlined into EcuC_InitRx/0 in D:/eb2/plugins/EcuC_TS_TxDxM5I0R0/src/EcuC.c:78
 Estimated badness is -8.666667, frequency 1.00.

Considering EcuC_TpTransmission_entry_IDLE/13 with 6 size
 to be inlined into EcuC_TpTxConfirmation/11 in D:/eb2/plugins/EcuC_TS_TxDxM5I0R0/src/EcuC.c:479
 Estimated badness is -4.727273, frequency 1.00.

Considering EcuC_TpReception_entry_IDLE/12 with 6 size
 to be inlined into EcuC_TpRxIndication/6 in D:/eb2/plugins/EcuC_TS_TxDxM5I0R0/src/EcuC.c:306
 Estimated badness is -1.178667, frequency 0.34.

Considering EcuC_TpTransmission_entry_IDLE/13 with 6 size
 to be inlined into EcuC_TpTransmit/10 in D:/eb2/plugins/EcuC_TS_TxDxM5I0R0/src/EcuC.c:448
 Estimated badness is -0.360360, frequency 0.15.

Considering EcuC_TpReception_entry_IDLE/12 with 6 size
 to be inlined into EcuC_CopyRxData/2 in D:/eb2/plugins/EcuC_TS_TxDxM5I0R0/src/EcuC.c:171
 Estimated badness is -0.142581, frequency 0.08.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 128.982774 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :        8 calls, 3.726711 freq, 0 count
IPA function summary for EcuC_TpTxConfirmation/11 inlinable
  global time:     17.500000
  self size:       10
  global size:     11
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:0.500000, time:0.250000,  executed if:(op1 == 0) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op1 == 0) && (not inlined)
    size:2.500000, time:1.250000,  executed if:(op1 == 0),  nonconst if:(op0[ref offset: 16] changed) && (op1 == 0)
  calls:
    EcuC_TpTransmission_entry_IDLE/18 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemBZero32/14 function body not available
        loop depth: 0 freq:1.00 size: 3 time: 12
         op1 is compile time invariant

IPA function summary for EcuC_TpTransmit/10 inlinable
  global time:     18.775520
  self size:       21
  global size:     22
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 16] changed)
    size:2.000000, time:1.320000,  executed if:(op0[ref offset: 16] != 2),  nonconst if:(op3 changed) && (op0[ref offset: 16] != 2)
    size:0.500000, time:0.231000,  executed if:(op3 != 0B) && (op0[ref offset: 16] != 2) && (not inlined),  nonconst if:(op2[ref offset: 32] changed) && (op3 != 0B) && (op0[ref offset: 16] != 2) && (not inlined)
    size:0.500000, time:0.231000,  executed if:(op3 != 0B) && (op0[ref offset: 16] != 2),  nonconst if:(op2[ref offset: 32] changed) && (op3 != 0B) && (op0[ref offset: 16] != 2)
    size:1.000000, time:0.462000,  executed if:(op3 != 0B) && (op0[ref offset: 16] != 2) && (not inlined)
    size:3.000000, time:1.386000,  executed if:(op3 != 0B) && (op0[ref offset: 16] != 2)
  calls:
    EcuC_TpTransmission_entry_IDLE/13 inlined
      loop depth: 0 freq:0.15 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemBZero32/14 function body not available
        loop depth: 0 freq:0.15 size: 3 time: 12 predicate: (op3 != 0B) && (op0[ref offset: 16] != 2)
         op1 is compile time invariant
    indirect call loop depth: 0 freq:0.46 size: 6 time: 18predicate: (op3 != 0B) && (op0[ref offset: 16] != 2)

IPA function summary for EcuC_TxBufferIsLocked/9 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 16] changed)
  calls:

IPA function summary for EcuC_CopyTxData/8 inlinable
  global time:     11.047253
  self size:       40
  global size:     40
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 16] changed)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 16] == 2)
    size:1.000000, time:0.340000,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op1[ref offset: 32] changed || op0[ref offset: 0] changed) && (op0[ref offset: 16] == 2)
    size:2.000000, time:0.680000,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op3 changed) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.119000,  executed if:(op3 != 0B) && (op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op3[ref offset: 0] changed) && (op3 != 0B) && (op0[ref offset: 16] == 2) && (not inlined)
    size:2.500000, time:0.595000,  executed if:(op3 != 0B) && (op0[ref offset: 16] == 2),  nonconst if:(op3[ref offset: 0] changed) && (op3 != 0B) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.040460,  executed if:(op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op3[ref offset: 32] changed) && (op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.040460,  executed if:(op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2),  nonconst if:(op3[ref offset: 32] changed) && (op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2)
    size:2.000000, time:0.161840,  executed if:(op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2),  nonconst if:(op1[ref offset: 32] changed || op0[ref offset: 0] changed || op3[ref offset: 32] changed) && (op3[ref offset: 0] == 1) && (op3 != 0B) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.149770,  executed if:(op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op2[ref offset: 32] changed) && (op0[ref offset: 16] == 2) && (not inlined)
    size:2.500000, time:0.539172,  executed if:(op0[ref offset: 16] == 2),  nonconst if:(op2[ref offset: 32] changed) && (op0[ref offset: 16] == 2)
    size:4.000000, time:1.093321,  executed if:(op0[ref offset: 16] == 2)
    size:0.500000, time:0.032126,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.032126,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2)
    size:0.500000, time:0.032126,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined)
    size:0.500000, time:0.032126,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2),  nonconst if:(op1[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2)
    size:7.500000, time:0.385508,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2)
    size:1.500000, time:0.064251,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2) && (not inlined)
    size:1.000000, time:0.194701,  executed if:(op0[ref offset: 16] == 2) && (not inlined)
  calls:
    TS_MemCpy32/15 function body not available
      loop depth: 0 freq:0.06 size: 4 time: 13 predicate: (op2[ref offset: 32] != 0) && (op0[ref offset: 16] == 2)

IPA function summary for EcuC_InitTx/7 inlinable
  global time:     14.000000
  self size:       5
  global size:     6
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EcuC_TpTransmission_entry_IDLE/16 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemBZero32/14 function body not available
        loop depth: 0 freq:1.00 size: 3 time: 12
         op1 is compile time invariant

IPA function summary for EcuC_TpRxIndication/6 inlinable
  global time:     13.760000
  self size:       14
  global size:     15
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:5.000000, time:4.000000,  executed if:(not inlined)
    size:2.000000, time:0.680000,  nonconst if:(op1 changed)
  calls:
    EcuC_TpReception_entry_IDLE/19 inlined
      loop depth: 0 freq:0.34 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemBZero32/14 function body not available
        loop depth: 0 freq:0.34 size: 3 time: 12
         op1 is compile time invariant

IPA function summary for EcuC_StartOfReceptionDet/5 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
  calls:

IPA function summary for EcuC_CopyRxDataDet/4 inlinable
  global time:     7.605000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.400000,  executed if:(op0 != 0B),  nonconst if:(op1 changed) && (op0 != 0B)
    size:0.500000, time:0.245000,  executed if:(op1 != 0B) && (op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op1 != 0B) && (op0 != 0B) && (not inlined)
    size:2.500000, time:1.225000,  executed if:(op1 != 0B) && (op0 != 0B),  nonconst if:(op0[ref offset: 32] changed) && (op1 != 0B) && (op0 != 0B)
    size:0.500000, time:0.122500,  executed if:(op0[ref offset: 32] != 0) && (op1 != 0B) && (op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] != 0) && (op1 != 0B) && (op0 != 0B) && (not inlined)
    size:2.500000, time:0.612500,  executed if:(op0[ref offset: 32] != 0) && (op1 != 0B) && (op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] != 0) && (op1 != 0B) && (op0 != 0B)
  calls:

IPA function summary for EcuC_RxBufferIsLocked/3 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:

IPA function summary for EcuC_CopyRxData/2 inlinable
  global time:     9.845000
  self size:       30
  global size:     31
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op2[ref offset: 32] changed) && (op0[ref offset: 32] == 1) && (not inlined)
    size:2.500000, time:0.850000,  executed if:(op0[ref offset: 32] == 1),  nonconst if:(op2[ref offset: 32] changed) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:2.000000, time:0.340000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op2[ref offset: 32] changed || op0[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op1[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 16] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:1.000000, time:0.085000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 0] changed || op0[ref offset: 16] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:1.000000, time:0.085000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 0] changed || op1[ref offset: 0] changed || op0[ref offset: 16] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.042500,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:2.000000, time:0.170000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:3.000000, time:0.255000,  executed if:(op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1),  nonconst if:(op0[ref offset: 0] changed) && (op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1) && (not inlined)
    size:0.500000, time:0.085000,  executed if:(op2[ref offset: 32] == 0) && (op0[ref offset: 32] == 1)
  calls:
    TS_MemCpy32/15 function body not available
      loop depth: 0 freq:0.08 size: 4 time: 13 predicate: (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
    EcuC_TpReception_entry_IDLE/12 inlined
      loop depth: 0 freq:0.08 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemBZero32/14 function body not available
        loop depth: 0 freq:0.08 size: 3 time: 12 predicate: (op2[ref offset: 32] != 0) && (op0[ref offset: 32] == 1)
         op1 is compile time invariant

IPA function summary for EcuC_StartOfReception/1 inlinable
  global time:     8.450000
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 32] == 0) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 32] == 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 32] == 0),  nonconst if:(op1[ref offset: 32] changed) && (op0[ref offset: 32] == 0)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 32] == 0),  nonconst if:(op1[ref offset: 32] changed || op2 changed) && (op0[ref offset: 32] == 0)
    size:2.000000, time:0.650000,  executed if:(op0[ref offset: 32] == 0),  nonconst if:(op2 changed) && (op0[ref offset: 32] == 0)
    size:2.000000, time:0.650000,  executed if:(op0[ref offset: 32] == 0) && (not inlined)
    size:2.000000, time:0.650000,  executed if:(op0[ref offset: 32] == 0)
  calls:

IPA function summary for EcuC_InitRx/0 inlinable
  global time:     14.000000
  self size:       5
  global size:     6
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    EcuC_TpReception_entry_IDLE/17 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemBZero32/14 function body not available
        loop depth: 0 freq:1.00 size: 3 time: 12
         op1 is compile time invariant

Symbol table:

EcuC_TpReception_entry_IDLE/19 (EcuC_TpReception_entry_IDLE) @06c2eee0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 17
  References: 
  Referring: 
  Function EcuC_TpReception_entry_IDLE/19 is inline copy in EcuC_TpRxIndication/6
  Clone of EcuC_TpReception_entry_IDLE/12
  Availability: local
  Function flags: count:365072220 (estimated locally) body local optimize_size
  Called by: EcuC_TpRxIndication/6 (inlined) (365072220 (estimated locally),0.34 per call) 
  Calls: TS_MemBZero32/14 (365072220 (estimated locally),0.34 per call) 
EcuC_TpTransmission_entry_IDLE/18 (EcuC_TpTransmission_entry_IDLE) @06c2ee00
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 16
  References: 
  Referring: 
  Function EcuC_TpTransmission_entry_IDLE/18 is inline copy in EcuC_TpTxConfirmation/11
  Clone of EcuC_TpTransmission_entry_IDLE/13
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: EcuC_TpTxConfirmation/11 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: TS_MemBZero32/14 (1073741824 (estimated locally),1.00 per call) 
EcuC_TpReception_entry_IDLE/17 (EcuC_TpReception_entry_IDLE) @06c2ed20
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 12
  previous sharing asm name: 19
  References: 
  Referring: 
  Function EcuC_TpReception_entry_IDLE/17 is inline copy in EcuC_InitRx/0
  Clone of EcuC_TpReception_entry_IDLE/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: EcuC_InitRx/0 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: TS_MemBZero32/14 (1073741824 (estimated locally),1.00 per call) 
EcuC_TpTransmission_entry_IDLE/16 (EcuC_TpTransmission_entry_IDLE) @06c2ec40
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 13
  previous sharing asm name: 18
  References: 
  Referring: 
  Function EcuC_TpTransmission_entry_IDLE/16 is inline copy in EcuC_InitTx/7
  Clone of EcuC_TpTransmission_entry_IDLE/13
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: EcuC_InitTx/7 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: TS_MemBZero32/14 (1073741824 (estimated locally),1.00 per call) 
TS_MemCpy32/15 (TS_MemCpy32) @06bda7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: EcuC_CopyTxData/8 (68989340 (estimated locally),0.06 per call) EcuC_CopyRxData/2 (91268055 (estimated locally),0.08 per call) 
  Calls: 
TS_MemBZero32/14 (TS_MemBZero32) @06bda540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: EcuC_TpReception_entry_IDLE/19 (365072220 (estimated locally),0.34 per call) EcuC_TpTransmission_entry_IDLE/18 (1073741824 (estimated locally),1.00 per call) EcuC_TpReception_entry_IDLE/17 (1073741824 (estimated locally),1.00 per call) EcuC_TpTransmission_entry_IDLE/16 (1073741824 (estimated locally),1.00 per call) EcuC_TpTransmission_entry_IDLE/13 (163702678 (estimated locally),0.15 per call) EcuC_TpReception_entry_IDLE/12 (91268055 (estimated locally),0.08 per call) 
  Calls: 
EcuC_TpTransmission_entry_IDLE/13 (EcuC_TpTransmission_entry_IDLE) @06bda2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 16
  References: 
  Referring: 
  Function EcuC_TpTransmission_entry_IDLE/13 is inline copy in EcuC_TpTransmit/10
  Availability: local
  Function flags: count:163702678 (estimated locally) body local optimize_size
  Called by: EcuC_TpTransmit/10 (inlined) (163702678 (estimated locally),0.15 per call) 
  Calls: TS_MemBZero32/14 (163702678 (estimated locally),0.15 per call) 
EcuC_TpReception_entry_IDLE/12 (EcuC_TpReception_entry_IDLE) @06bda000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 17
  References: 
  Referring: 
  Function EcuC_TpReception_entry_IDLE/12 is inline copy in EcuC_CopyRxData/2
  Availability: local
  Function flags: count:91268055 (estimated locally) body local optimize_size
  Called by: EcuC_CopyRxData/2 (inlined) (91268055 (estimated locally),0.08 per call) 
  Calls: TS_MemBZero32/14 (91268055 (estimated locally),0.08 per call) 
EcuC_TpTxConfirmation/11 (EcuC_TpTxConfirmation) @06bd3d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EcuC_TpTransmission_entry_IDLE/18 (inlined) (1073741824 (estimated locally),1.00 per call) 
EcuC_TpTransmit/10 (EcuC_TpTransmit) @06bd3b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EcuC_TpTransmission_entry_IDLE/13 (inlined) (163702678 (estimated locally),0.15 per call) 
   Indirect call(496068723 (estimated locally),0.46 per call)  of param:3 (vptr maybe changed)
EcuC_TxBufferIsLocked/9 (EcuC_TxBufferIsLocked) @06bd39a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
EcuC_CopyTxData/8 (EcuC_CopyTxData) @06bd37e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: TS_MemCpy32/15 (68989340 (estimated locally),0.06 per call) 
EcuC_InitTx/7 (EcuC_InitTx) @06bd3620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EcuC_TpTransmission_entry_IDLE/16 (inlined) (1073741824 (estimated locally),1.00 per call) 
EcuC_TpRxIndication/6 (EcuC_TpRxIndication) @06bd3460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EcuC_TpReception_entry_IDLE/19 (inlined) (365072220 (estimated locally),0.34 per call) 
EcuC_StartOfReceptionDet/5 (EcuC_StartOfReceptionDet) @06bd32a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
EcuC_CopyRxDataDet/4 (EcuC_CopyRxDataDet) @06bd30e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
EcuC_RxBufferIsLocked/3 (EcuC_RxBufferIsLocked) @06b9aee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
EcuC_CopyRxData/2 (EcuC_CopyRxData) @06b9ad20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: TS_MemCpy32/15 (91268055 (estimated locally),0.08 per call) EcuC_TpReception_entry_IDLE/12 (inlined) (91268055 (estimated locally),0.08 per call) 
EcuC_StartOfReception/1 (EcuC_StartOfReception) @06b9ab60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
EcuC_InitRx/0 (EcuC_InitRx) @06b9a9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: EcuC_TpReception_entry_IDLE/17 (inlined) (1073741824 (estimated locally),1.00 per call) 

;; Function EcuC_InitRx (EcuC_InitRx, funcdef_no=0, decl_uid=5508, cgraph_uid=1, symbol_order=0)


Symbols to be put in SSA form
{ D.5742 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


Merging blocks 2 and 4
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
EcuC_InitRx (struct EcuC_RxControlInfoType * RxControlInfoPtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RxControlInfoPtr => RxControlInfoPtr_2(D)
  # DEBUG INLINE_ENTRY EcuC_TpReception_entry_IDLE
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (RxControlInfoPtr_2(D), 6);
  # DEBUG RxControlInfoPtr => NULL
  return;

}



;; Function EcuC_StartOfReception (EcuC_StartOfReception, funcdef_no=1, decl_uid=5513, cgraph_uid=2, symbol_order=1)

EcuC_StartOfReception (struct EcuC_RxControlInfoType * RxControlInfoPtr, struct PduInfoType * RxBufferInfoPtr, PduLengthType TpSduLength, PduLengthType * RxBufferSizePtr)
{
  PduLengthType msgSize;
  BufReq_ReturnType Result;
  unsigned char _1;
  short unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Result => 1
  # DEBUG BEGIN_STMT
  _1 = RxControlInfoPtr_7(D)->state;
  if (_1 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 3> [local count: 536870913]:
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG msgSize => 0
  # DEBUG BEGIN_STMT
  _2 = RxBufferInfoPtr_8(D)->SduLength;
  if (_2 < TpSduLength_9(D))
    goto <bb 7>; [35.00%]
  else
    goto <bb 4>; [65.00%]

  <bb 4> [local count: 348966093]:
  # DEBUG BEGIN_STMT
  if (TpSduLength_9(D) == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 174483046]:
  # DEBUG BEGIN_STMT
  # DEBUG msgSize => _2

  <bb 6> [local count: 348966093]:
  # msgSize_4 = PHI <_2(5), TpSduLength_9(D)(4)>
  # DEBUG msgSize => msgSize_4
  # DEBUG BEGIN_STMT
  RxControlInfoPtr_7(D)->remainMsgSize = msgSize_4;
  # DEBUG BEGIN_STMT
  RxControlInfoPtr_7(D)->totalMsgSize = msgSize_4;
  # DEBUG BEGIN_STMT
  RxControlInfoPtr_7(D)->state = 1;
  # DEBUG BEGIN_STMT
  *RxBufferSizePtr_13(D) = msgSize_4;
  # DEBUG BEGIN_STMT
  # DEBUG Result => 0

  <bb 7> [local count: 1073741824]:
  # Result_3 = PHI <0(6), 3(3), 1(2)>
<L12>:
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  return Result_3;

}



;; Function EcuC_CopyRxData (EcuC_CopyRxData, funcdef_no=2, decl_uid=5518, cgraph_uid=3, symbol_order=2)


Symbols to be put in SSA form
{ D.5744 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 11
Number of blocks to update: 10 ( 91%)


Removing basic block 6
Removing basic block 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
EcuC_CopyRxData (struct EcuC_RxControlInfoType * RxControlInfoPtr, struct PduInfoType * RxBufferInfoPtr, const struct PduInfoType * PduInfoPtr, PduLengthType * RxBufferSizePtr)
{
  BufReq_ReturnType Result;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  uint8 * _5;
  short unsigned int _6;
  int _7;
  int _8;
  int _9;
  sizetype _10;
  uint8 * _11;
  uint8 * _12;
  long unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  short unsigned int _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Result => 1
  # DEBUG BEGIN_STMT
  _1 = RxControlInfoPtr_20(D)->state;
  if (_1 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 3> [local count: 365072220]:
<L1>:
  # DEBUG BEGIN_STMT
  _2 = PduInfoPtr_21(D)->SduLength;
  if (_2 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 182536110]:
  # DEBUG BEGIN_STMT
  _3 = RxControlInfoPtr_20(D)->remainMsgSize;
  *RxBufferSizePtr_25(D) = _3;
  # DEBUG BEGIN_STMT
  # DEBUG Result => 0
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 182536110]:
  # DEBUG BEGIN_STMT
  _4 = RxControlInfoPtr_20(D)->remainMsgSize;
  if (_2 > _4)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 91268055]:
  # DEBUG BEGIN_STMT
  # DEBUG RxControlInfoPtr => RxControlInfoPtr_20(D)
  # DEBUG INLINE_ENTRY EcuC_TpReception_entry_IDLE
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (RxControlInfoPtr_20(D), 6);
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 91268055]:
  # DEBUG BEGIN_STMT
  _5 = RxBufferInfoPtr_22(D)->SduDataPtr;
  _6 = RxControlInfoPtr_20(D)->totalMsgSize;
  _7 = (int) _6;
  _8 = (int) _4;
  _9 = _7 - _8;
  _10 = (sizetype) _9;
  _11 = _5 + _10;
  _12 = PduInfoPtr_21(D)->SduDataPtr;
  _13 = (long unsigned int) _2;
  TS_MemCpy32 (_11, _12, _13);
  # DEBUG BEGIN_STMT
  _14 = RxControlInfoPtr_20(D)->remainMsgSize;
  _15 = PduInfoPtr_21(D)->SduLength;
  _16 = _14 - _15;
  RxControlInfoPtr_20(D)->remainMsgSize = _16;
  # DEBUG BEGIN_STMT
  *RxBufferSizePtr_25(D) = _16;
  # DEBUG BEGIN_STMT
  # DEBUG Result => 0

  <bb 8> [local count: 1073741824]:
  # Result_17 = PHI <0(7), 1(6), 1(2), 0(4)>
<L12>:
  # DEBUG RxControlInfoPtr => NULL
  # DEBUG Result => NULL
  # DEBUG Result => Result_17
  # DEBUG BEGIN_STMT
  return Result_17;

}



;; Function EcuC_RxBufferIsLocked (EcuC_RxBufferIsLocked, funcdef_no=3, decl_uid=5520, cgraph_uid=4, symbol_order=3)

EcuC_RxBufferIsLocked (struct EcuC_RxControlInfoType * RxControlInfoPtr)
{
  boolean Result;
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Result => 1
  # DEBUG BEGIN_STMT
  _1 = RxControlInfoPtr_4(D)->state;
  if (_1 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG Result => 0
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  # Result_2 = PHI <0(3), 1(2)>
<L6>:
  # DEBUG Result => Result_2
  # DEBUG BEGIN_STMT
  return Result_2;

}



;; Function EcuC_CopyRxDataDet (EcuC_CopyRxDataDet, funcdef_no=4, decl_uid=5523, cgraph_uid=5, symbol_order=4)

EcuC_CopyRxDataDet (const struct PduInfoType * PduInfoPtr, PduLengthType * RxBufferSizePtr)
{
  Std_ReturnType Result;
  short unsigned int _1;
  uint8 * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Result => 1
  # DEBUG BEGIN_STMT
  if (PduInfoPtr_4(D) == 0B)
    goto <bb 7>; [30.00%]
  else
    goto <bb 3>; [70.00%]

  <bb 3> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  if (RxBufferSizePtr_5(D) == 0B)
    goto <bb 7>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 4> [local count: 526133494]:
  # DEBUG BEGIN_STMT
  _1 = PduInfoPtr_4(D)->SduLength;
  if (_1 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 263066747]:
  _2 = PduInfoPtr_4(D)->SduDataPtr;
  if (_2 == 0B)
    goto <bb 7>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 6> [local count: 447213470]:
  # DEBUG BEGIN_STMT
  # DEBUG Result => 0

  <bb 7> [local count: 1073741824]:
  # Result_3 = PHI <1(2), 1(3), 1(5), 0(6)>
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  return Result_3;

}



;; Function EcuC_StartOfReceptionDet (EcuC_StartOfReceptionDet, funcdef_no=5, decl_uid=5526, cgraph_uid=6, symbol_order=5)

EcuC_StartOfReceptionDet (PduLengthType TpSduLength, PduLengthType * RxBufferSizePtr)
{
  Std_ReturnType Result;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (RxBufferSizePtr_2(D) == 0B)
    goto <bb 4>; [30.00%]
  else
    goto <bb 3>; [70.00%]

  <bb 3> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  # DEBUG Result => 0

  <bb 4> [local count: 1073741824]:
  # Result_1 = PHI <1(2), 0(3)>
  # DEBUG Result => Result_1
  # DEBUG BEGIN_STMT
  return Result_1;

}



;; Function EcuC_TpRxIndication (EcuC_TpRxIndication, funcdef_no=6, decl_uid=5530, cgraph_uid=7, symbol_order=6)


Symbols to be put in SSA form
{ D.5748 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


Merging blocks 5 and 8
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
EcuC_TpRxIndication (struct EcuC_RxControlInfoType * RxControlInfoPtr, NotifResultType Result, PduLengthType * CopiedDataSize)
{
  Std_ReturnType retVal;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retVal => 1
  # DEBUG BEGIN_STMT
  _1 = RxControlInfoPtr_9(D)->totalMsgSize;
  _2 = RxControlInfoPtr_9(D)->remainMsgSize;
  _3 = _1 - _2;
  *CopiedDataSize_10(D) = _3;
  # DEBUG BEGIN_STMT
  _4 = RxControlInfoPtr_9(D)->state;
  if (_4 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 3> [local count: 365072220]:
<L1>:
  # DEBUG BEGIN_STMT
  if (Result_12(D) == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 182536110]:
  # DEBUG BEGIN_STMT
  # DEBUG retVal => 1

  <bb 5> [local count: 365072220]:
  # retVal_5 = PHI <0(3), 1(4)>
  # DEBUG retVal => retVal_5
  # DEBUG BEGIN_STMT
  # DEBUG RxControlInfoPtr => RxControlInfoPtr_9(D)
  # DEBUG INLINE_ENTRY EcuC_TpReception_entry_IDLE
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (RxControlInfoPtr_9(D), 6);

  <bb 6> [local count: 1073741824]:
  # retVal_6 = PHI <1(2), retVal_5(5)>
<L9>:
  # DEBUG RxControlInfoPtr => NULL
  # DEBUG retVal => retVal_6
  # DEBUG BEGIN_STMT
  return retVal_6;

}



;; Function EcuC_InitTx (EcuC_InitTx, funcdef_no=7, decl_uid=5532, cgraph_uid=8, symbol_order=7)


Symbols to be put in SSA form
{ D.5749 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


Merging blocks 2 and 4
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
EcuC_InitTx (struct EcuC_TxControlInfoType * TxControlInfoPtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG TxControlInfoPtr => TxControlInfoPtr_2(D)
  # DEBUG INLINE_ENTRY EcuC_TpTransmission_entry_IDLE
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (TxControlInfoPtr_2(D), 4);
  # DEBUG TxControlInfoPtr => NULL
  return;

}



;; Function EcuC_CopyTxData (EcuC_CopyTxData, funcdef_no=8, decl_uid=5538, cgraph_uid=9, symbol_order=8)

EcuC_CopyTxData (struct EcuC_TxControlInfoType * TxControlInfoPtr, const struct PduInfoType * TxBufferInfoPtr, struct PduInfoType * PduInfoPtr, struct RetryInfoType * RetryInfoPtr, PduLengthType * TxDataCntPtr)
{
  PduLengthType retry;
  PduLengthType copiedOffset;
  BufReq_ReturnType retVal;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  <unnamed type> _4;
  short unsigned int _5;
  short unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  uint8 * _11;
  uint8 * _12;
  int _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  long unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retVal => 0
  # DEBUG BEGIN_STMT
  _1 = TxControlInfoPtr_27(D)->state;
  if (_1 == 2)
    goto <bb 3>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _2 = TxBufferInfoPtr_28(D)->SduLength;
  _3 = TxControlInfoPtr_27(D)->remainMsgSize;
  copiedOffset_29 = _2 - _3;
  # DEBUG copiedOffset => copiedOffset_29
  # DEBUG BEGIN_STMT
  # DEBUG retry => 0
  # DEBUG BEGIN_STMT
  if (RetryInfoPtr_30(D) != 0B)
    goto <bb 4>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 4> [local count: 255550554]:
  # DEBUG BEGIN_STMT
  _4 = RetryInfoPtr_30(D)->TpDataState;
  if (_4 == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 86887188]:
  # DEBUG BEGIN_STMT
  _5 = RetryInfoPtr_30(D)->TxTpDataCnt;
  if (_5 > copiedOffset_29)
    goto <bb 11>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 321628626]:
  # retry_36 = PHI <0(4), 0(3), _5(5)>
  # DEBUG retry => NULL
  # DEBUG retVal => NULL
  # DEBUG BEGIN_STMT
  _6 = PduInfoPtr_31(D)->SduLength;
  _7 = (int) _6;
  _8 = (int) _3;
  _9 = (int) retry_36;
  _10 = _8 + _9;
  if (_7 > _10)
    goto <bb 11>; [35.00%]
  else
    goto <bb 7>; [65.00%]

  <bb 7> [local count: 209058607]:
  # DEBUG BEGIN_STMT
  if (_6 != 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 8> [local count: 68989340]:
  # DEBUG BEGIN_STMT
  _11 = PduInfoPtr_31(D)->SduDataPtr;
  _12 = TxBufferInfoPtr_28(D)->SduDataPtr;
  _13 = (int) copiedOffset_29;
  _14 = _13 - _9;
  _15 = (sizetype) _14;
  _16 = _12 + _15;
  _17 = (long unsigned int) _6;
  TS_MemCpy32 (_11, _16, _17);
  # DEBUG BEGIN_STMT
  _18 = PduInfoPtr_31(D)->SduLength;
  if (_18 > retry_36)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 34494670]:
  # DEBUG BEGIN_STMT
  _19 = TxControlInfoPtr_27(D)->remainMsgSize;
  _20 = retry_36 - _18;
  _21 = _19 + _20;
  TxControlInfoPtr_27(D)->remainMsgSize = _21;

  <bb 10> [local count: 209058607]:
  # DEBUG BEGIN_STMT
  _22 = TxControlInfoPtr_27(D)->remainMsgSize;
  *TxDataCntPtr_34(D) = _22;
  # DEBUG BEGIN_STMT
  # DEBUG retVal => 0

  <bb 11> [local count: 1073741824]:
  # retVal_23 = PHI <2(6), 1(2), 1(5), 0(10)>
  # DEBUG retry => NULL
  # DEBUG retVal => retVal_23
  # DEBUG BEGIN_STMT
  return retVal_23;

}



;; Function EcuC_TxBufferIsLocked (EcuC_TxBufferIsLocked, funcdef_no=9, decl_uid=5540, cgraph_uid=10, symbol_order=9)

EcuC_TxBufferIsLocked (struct EcuC_TxControlInfoType * TxControlInfoPtr)
{
  boolean retVal;
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retVal => 0
  # DEBUG BEGIN_STMT
  _1 = TxControlInfoPtr_4(D)->state;
  if (_1 == 2)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
<L1>:
  # DEBUG BEGIN_STMT
  # DEBUG retVal => 1
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  # retVal_2 = PHI <0(2), 1(3)>
<L6>:
  # DEBUG retVal => retVal_2
  # DEBUG BEGIN_STMT
  return retVal_2;

}



;; Function EcuC_TpTransmit (EcuC_TpTransmit, funcdef_no=10, decl_uid=5545, cgraph_uid=11, symbol_order=10)


Symbols to be put in SSA form
{ D.5752 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


Removing basic block 5
Removing basic block 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
EcuC_TpTransmit (struct EcuC_TxControlInfoType * TxControlInfoPtr, PduIdType PduId, const struct PduInfoType * TxBufferInfoPtr, Std_ReturnType (*EcuC_LoTpTransmitFunctPtrType) (PduIdType, const struct PduInfoType *) LoTpTransmitFunctPtr)
{
  Std_ReturnType retVal;
  unsigned char _1;
  short unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retVal => 1
  # DEBUG BEGIN_STMT
  _1 = TxControlInfoPtr_6(D)->state;
  if (_1 == 2)
    goto <bb 6>; [34.00%]
  else
    goto <bb 3>; [66.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  if (LoTpTransmitFunctPtr_7(D) != 0B)
    goto <bb 4>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 4> [local count: 496068723]:
  # DEBUG BEGIN_STMT
  _2 = TxBufferInfoPtr_8(D)->SduLength;
  TxControlInfoPtr_6(D)->remainMsgSize = _2;
  # DEBUG BEGIN_STMT
  TxControlInfoPtr_6(D)->state = 2;
  # DEBUG BEGIN_STMT
  retVal_13 = LoTpTransmitFunctPtr_7(D) (PduId_11(D), TxBufferInfoPtr_8(D));
  # DEBUG retVal => retVal_13
  # DEBUG BEGIN_STMT
  if (retVal_13 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 163702678]:
  # DEBUG BEGIN_STMT
  # DEBUG TxControlInfoPtr => TxControlInfoPtr_6(D)
  # DEBUG INLINE_ENTRY EcuC_TpTransmission_entry_IDLE
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (TxControlInfoPtr_6(D), 4);

  <bb 6> [local count: 1073741824]:
  # retVal_3 = PHI <1(2), 1(3), retVal_13(4), retVal_13(5)>
  # DEBUG TxControlInfoPtr => NULL
  # DEBUG retVal => retVal_3
  # DEBUG BEGIN_STMT
  return retVal_3;

}



;; Function EcuC_TpTxConfirmation (EcuC_TpTxConfirmation, funcdef_no=11, decl_uid=5548, cgraph_uid=12, symbol_order=11)


Symbols to be put in SSA form
{ D.5753 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 8
Number of blocks to update: 7 ( 88%)


Merging blocks 5 and 7
Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
EcuC_TpTxConfirmation (struct EcuC_TxControlInfoType * TxControlInfoPtr, NotifResultType Result)
{
  Std_ReturnType retVal;
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Result_3(D) == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _1 = TxControlInfoPtr_5(D)->state;
  if (_1 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  # DEBUG retVal => 0

  <bb 5> [local count: 1073741824]:
  # retVal_2 = PHI <0(4), 1(2), 1(3)>
  # DEBUG retVal => retVal_2
  # DEBUG BEGIN_STMT
  # DEBUG TxControlInfoPtr => TxControlInfoPtr_5(D)
  # DEBUG INLINE_ENTRY EcuC_TpTransmission_entry_IDLE
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (TxControlInfoPtr_5(D), 4);
  # DEBUG TxControlInfoPtr => NULL
  # DEBUG BEGIN_STMT
  return retVal_2;

}


