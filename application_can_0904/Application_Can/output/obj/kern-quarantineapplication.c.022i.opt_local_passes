__attribute__((target ("general-regs-only")))
OS_QuarantineApplication (const struct os_appcontext_t * app)
{
  const struct os_schedule_t * schedule;
  const struct os_alarm_t * alarm;
  const struct os_task_t * task;
  const struct os_isr_t * isr;
  os_scheduleid_t scheduleid;
  os_alarmid_t alarmid;
  os_isrid_t isrid;
  os_taskid_t taskid;
  const struct os_isr_t * OS_isrTableBase.0_1;
  unsigned int _2;
  unsigned int _3;
  const struct os_appcontext_t * _4;
  const struct os_archisr_t * _5;
  struct os_isrdynamic_t * _6;
  unsigned char _7;
  struct os_isrdynamic_t * _8;
  unsigned char _9;
  struct os_isrdynamic_t * _10;
  unsigned char _11;
  struct os_isrdynamic_t * _12;
  unsigned char _13;
  short unsigned int isrid.1_14;
  short unsigned int OS_nInterrupts.2_15;
  const struct os_appcontext_t * _16;
  os_result_t (*<T562>) (os_alarmid_t, os_uint8_t) OS_killAlarmFunc.3_17;
  short unsigned int alarmid.4_18;
  short unsigned int OS_nAlarms.5_19;
  const struct os_appcontext_t * _20;
  os_result_t (*<T57f>) (os_scheduleid_t, os_schedulestatus_t) OS_killScheduleFunc.6_21;
  unsigned char scheduleid.7_22;
  unsigned char OS_nSchedules.8_23;
  const struct os_appcontext_t * _24;
  os_result_t (*<T69c>) (const struct os_task_t *, os_taskstate_t) OS_killTaskFunc.9_25;
  unsigned char taskid.10_26;
  unsigned char OS_nTasks.11_27;
  struct os_appdynamic_t * _28;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  isrid_44 = 0;
  # DEBUG isrid => isrid_44
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.0_1 = OS_isrTableBase;
  _2 = (unsigned int) isrid_30;
  _3 = _2 * 68;
  isr_63 = OS_isrTableBase.0_1 + _3;
  # DEBUG isr => isr_63
  # DEBUG BEGIN_STMT
  _4 = isr_63->app;
  if (app_52(D) == _4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = &isr_63->arch;
  OS_CORTEXM_IntDisableIsr (_5);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = isr_63->dynamic;
  _7 = _6->statusflags;
  _8 = isr_63->dynamic;
  _9 = _7 | 64;
  _8->statusflags = _9;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = isr_63->dynamic;
  _11 = _10->statusflags;
  _12 = isr_63->dynamic;
  _13 = _11 | 32;
  _12->statusflags = _13;

  <bb 5> :
  # DEBUG BEGIN_STMT
  isrid.1_14 = isrid_30;
  isrid_67 = isrid.1_14 + 1;
  # DEBUG isrid => isrid_67

  <bb 6> :
  # isrid_30 = PHI <isrid_44(2), isrid_67(5)>
  # DEBUG isrid => isrid_30
  # DEBUG BEGIN_STMT
  OS_nInterrupts.2_15 = OS_nInterrupts;
  if (isrid_30 < OS_nInterrupts.2_15)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  alarm_46 = OS_alarmTableBase;
  # DEBUG alarm => alarm_46
  # DEBUG BEGIN_STMT
  alarmid_47 = 0;
  # DEBUG alarmid => alarmid_47
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _16 = alarm_34->app;
  if (app_52(D) == _16)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  OS_killAlarmFunc.3_17 = OS_killAlarmFunc;
  OS_killAlarmFunc.3_17 (alarmid_31, 2);

  <bb 10> :
  # DEBUG BEGIN_STMT
  alarm_61 = alarm_34 + 28;
  # DEBUG alarm => alarm_61
  # DEBUG BEGIN_STMT
  alarmid.4_18 = alarmid_31;
  alarmid_62 = alarmid.4_18 + 1;
  # DEBUG alarmid => alarmid_62

  <bb 11> :
  # alarmid_31 = PHI <alarmid_47(7), alarmid_62(10)>
  # alarm_34 = PHI <alarm_46(7), alarm_61(10)>
  # DEBUG alarm => alarm_34
  # DEBUG alarmid => alarmid_31
  # DEBUG BEGIN_STMT
  OS_nAlarms.5_19 = OS_nAlarms;
  if (alarmid_31 < OS_nAlarms.5_19)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  schedule_48 = OS_scheduleTableBase;
  # DEBUG schedule => schedule_48
  # DEBUG BEGIN_STMT
  scheduleid_49 = 0;
  # DEBUG scheduleid => scheduleid_49
  goto <bb 16>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _20 = schedule_35->app;
  if (app_52(D) == _20)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  OS_killScheduleFunc.6_21 = OS_killScheduleFunc;
  OS_killScheduleFunc.6_21 (scheduleid_32, 4);

  <bb 15> :
  # DEBUG BEGIN_STMT
  schedule_58 = schedule_35 + 36;
  # DEBUG schedule => schedule_58
  # DEBUG BEGIN_STMT
  scheduleid.7_22 = scheduleid_32;
  scheduleid_59 = scheduleid.7_22 + 1;
  # DEBUG scheduleid => scheduleid_59

  <bb 16> :
  # scheduleid_32 = PHI <scheduleid_49(12), scheduleid_59(15)>
  # schedule_35 = PHI <schedule_48(12), schedule_58(15)>
  # DEBUG schedule => schedule_35
  # DEBUG scheduleid => scheduleid_32
  # DEBUG BEGIN_STMT
  OS_nSchedules.8_23 = OS_nSchedules;
  if (scheduleid_32 < OS_nSchedules.8_23)
    goto <bb 13>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  task_50 = OS_taskTableBase;
  # DEBUG task => task_50
  # DEBUG BEGIN_STMT
  taskid_51 = 0;
  # DEBUG taskid => taskid_51
  goto <bb 21>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _24 = task_33->app;
  if (app_52(D) == _24)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  OS_killTaskFunc.9_25 = OS_killTaskFunc;
  OS_killTaskFunc.9_25 (task_33, 1);

  <bb 20> :
  # DEBUG BEGIN_STMT
  task_55 = task_33 + 76;
  # DEBUG task => task_55
  # DEBUG BEGIN_STMT
  taskid.10_26 = taskid_29;
  taskid_56 = taskid.10_26 + 1;
  # DEBUG taskid => taskid_56

  <bb 21> :
  # taskid_29 = PHI <taskid_51(17), taskid_56(20)>
  # task_33 = PHI <task_50(17), task_55(20)>
  # DEBUG task => task_33
  # DEBUG taskid => taskid_29
  # DEBUG BEGIN_STMT
  OS_nTasks.11_27 = OS_nTasks;
  if (taskid_29 < OS_nTasks.11_27)
    goto <bb 18>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  _28 = app_52(D)->dynamic;
  _28->appstate = 0;
  return;

}


