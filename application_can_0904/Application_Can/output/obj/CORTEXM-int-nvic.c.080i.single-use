__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntDisableUnknownInterrupt ()
{
  register os_uint32_t OS_CurIpsr;
  unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  os_uint32_t _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, ipsr" : "result" "=r" OS_CurIpsr_6);
  # DEBUG OS_CurIpsr => OS_CurIpsr_6
  # DEBUG BEGIN_STMT
  _7 = OS_CurIpsr_6 + 4294967280;
  # DEBUG curSource => _7
  # DEBUG BEGIN_STMT
  if (_7 <= 239)
    goto <bb 3>; [67.00%]
  else
    goto <bb 4>; [33.00%]

  <bb 3> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  _1 = _7 & 31;
  _2 = _7 >> 5;
  _3 = _2;
  _4 = 1 << _1;
  MEM[(struct os_arm_int_nvic_reg_t *)3758153984B].icer[_3] ={v} _4;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  OS_Panic (15);

  <bb 5> [local count: 1073741824]:
  return;

}


__attribute__((target ("general-regs-only")))
OS_IntDisableConditionalX ()
{
  register os_uint32_t newBasepri;
  register os_uint32_t OS_CurBasepri;
  unsigned int _1;
  short unsigned int OS_kernDisableLevel.2_2;
  int _3;
  int _4;
  short unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, basepri" : "result" "=r" OS_CurBasepri_5);
  # DEBUG OS_CurBasepri => OS_CurBasepri_5
  # DEBUG BEGIN_STMT
  _1 = OS_CurBasepri_5 >> 4;
  _6 = (short unsigned int) _1;
  # DEBUG prevDisablingLevel => _6
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.2_2 = OS_kernDisableLevel;
  if (OS_kernDisableLevel.2_2 < _6)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
  if (_6 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 805306369]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = (int) OS_kernDisableLevel.2_2;
  _4 = _3 << 4;
  newBasepri_8 = (os_uint32_t) _4;
  # DEBUG newBasepri => newBasepri_8
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("msr basepri, %0" :  : "input" "r" newBasepri_8);

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return _6;

}


__attribute__((target ("general-regs-only")))
OS_IntDisableConditional ()
{
  register os_uint32_t OS_CurBasepri;
  os_oldlevel_t prevDisablingLevel;
  unsigned int _1;
  short unsigned int OS_kernDisableLevel.0_2;
  short unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, basepri" : "result" "=r" OS_CurBasepri_5);
  # DEBUG OS_CurBasepri => OS_CurBasepri_5
  # DEBUG BEGIN_STMT
  _1 = OS_CurBasepri_5 >> 4;
  _6 = (short unsigned int) _1;
  # DEBUG prevDisablingLevel => _6
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_2 = OS_kernDisableLevel;
  if (OS_kernDisableLevel.0_2 < _6)
    goto <bb 4>; [33.00%]
  else
    goto <bb 3>; [67.00%]

  <bb 3> [local count: 719407023]:
  if (_6 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 714038314]:
  # DEBUG BEGIN_STMT
  prevDisablingLevel_9 = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.0_2);
  # DEBUG prevDisablingLevel => prevDisablingLevel_9

  <bb 5> [local count: 1073741824]:
  # prevDisablingLevel_3 = PHI <_6(3), prevDisablingLevel_9(4)>
  # DEBUG prevDisablingLevel => prevDisablingLevel_3
  # DEBUG BEGIN_STMT
  return prevDisablingLevel_3;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntSetDisablingLevel (os_oldlevel_t level)
{
  register os_uint32_t newBasepri;
  register os_uint32_t OS_CurBasepri;
  register os_uint32_t OS_DIRQResult;
  unsigned int _1;
  int _2;
  int _3;
  unsigned int _7;
  short unsigned int _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, primask" : "result" "=r" OS_DIRQResult_4);
  # DEBUG OS_DIRQResult => OS_DIRQResult_4
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("cpsid	i");
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG old_state => (const os_intstatus_t) OS_DIRQResult_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, basepri" : "result" "=r" OS_CurBasepri_8);
  # DEBUG OS_CurBasepri => OS_CurBasepri_8
  # DEBUG BEGIN_STMT
  _1 = OS_CurBasepri_8 >> 4;
  _9 = (short unsigned int) _1;
  # DEBUG prevDisablingLevel => _9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (int) level_10(D);
  _3 = _2 << 4;
  newBasepri_11 = (os_uint32_t) _3;
  # DEBUG newBasepri => newBasepri_11
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("msr basepri, %0" :  : "input" "r" newBasepri_11);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = OS_DIRQResult_4 & 65535;
  # DEBUG newPrimask => _7
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("msr primask, %0" :  : "input" "r" _7);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return _9;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntClearIsr (const struct os_archisr_t * isr)
{
  short unsigned int _1;
  unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  short unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = isr_8(D)->source;
  _3 = _1 & 31;
  _2 = (unsigned int) _3;
  _4 = _1 >> 5;
  _10 = _4 & 15;
  _5 = (unsigned int) _10;
  _6 = 1 << _2;
  MEM[(struct os_arm_int_nvic_reg_t *)3758153984B].icpr[_5] ={v} _6;
  return;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntDisableIsr (const struct os_archisr_t * isr)
{
  short unsigned int _1;
  unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  short unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = isr_8(D)->source;
  _3 = _1 & 31;
  _2 = (unsigned int) _3;
  _4 = _1 >> 5;
  _10 = _4 & 15;
  _5 = (unsigned int) _10;
  _6 = 1 << _2;
  MEM[(struct os_arm_int_nvic_reg_t *)3758153984B].icer[_5] ={v} _6;
  return;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntEnableIsr (const struct os_archisr_t * isr)
{
  short unsigned int _1;
  unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  short unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = isr_8(D)->source;
  _3 = _1 & 31;
  _2 = (unsigned int) _3;
  _4 = _1 >> 5;
  _10 = _4 & 15;
  _5 = (unsigned int) _10;
  _6 = 1 << _2;
  MEM[(struct os_arm_int_nvic_reg_t *)3758153984B].iser[_5] ={v} _6;
  return;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntSetupIsr (const struct os_archisr_t * isr)
{
  short unsigned int _1;
  unsigned char _2;
  short unsigned int _3;
  int _4;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = isr_7(D)->priority;
  _2 = (unsigned char) _1;
  _3 = isr_7(D)->source;
  _4 = (int) _3;
  _5 = _2 << 4;
  MEM[(struct os_arm_int_nvic_reg_t *)3758153984B].ipr[_4] ={v} _5;
  return;

}


