IPA function summary for Power_Ip_MC_RGM_ClearDesResetFlags.part.0/15 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       6
  self stack:      12
  global stack:    12
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       6
  self stack:      12
  global stack:    12
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_ReportPowerErrors/12 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_PerformReset/9 inlinable
  global time:     12.332400
  self size:       14
  global size:     14
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:6.500000, time:2.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Power_Ip_MC_ME_SocTriggerResetEvent/13 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11 predicate: (op0[ref offset: 0] == 60)
       op0 is compile time invariant
    Power_Ip_MC_ME_SocTriggerResetEvent/13 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11 predicate: (op0[ref offset: 0] == 90)
       op0 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_GetResetRawValue/8 inlinable
  global time:     336.031345
  self size:       51
  global size:     51
  min size:       8
  self stack:      0
  global stack:    0
    size:44.000000, time:323.031345
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearDesResetFlags/4 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:13 stack:12
    Power_Ip_MC_RGM_ClearFesResetFlags/3 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:13 stack:12

IPA function summary for Power_Ip_MC_RGM_GetResetReason/7 inlinable
  global time:     48.560000
  self size:       36
  global size:     36
  min size:       28
  self stack:      4
  global stack:    4
    size:19.000000, time:13.750000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags/3 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:13 stack:12
    Power_Ip_MC_RGM_CheckResetReason/6 function not considered for inlining
      loop depth: 0 freq:0.17 size: 5 time: 14callee size:10 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    Power_Ip_MC_RGM_ClearDesResetFlags/4 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack:12
    Power_Ip_MC_RGM_CheckResetReason/6 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:10 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_CheckResetReason/6 inlinable
  global time:     223.459873
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:14.500000, time:217.959873
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
  calls:

IPA function summary for Power_Ip_MC_RGM_ResetInit/5 inlinable
  global time:     20.960000
  self size:       23
  global size:     23
  min size:       4
  self stack:      0
  global stack:    0
    size:16.500000, time:14.330000
    size:4.500000, time:3.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags/3 function not considered for inlining
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:13 stack:12

IPA function summary for Power_Ip_MC_RGM_ClearDesResetFlags/4 inlinable
  global time:     80.980825
  self size:       27
  global size:     27
  min size:       0
  self stack:      12
  global stack:    12
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:11.000000, time:28.084164,  executed if:(op0 != 0)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 function not considered for inlining
      loop depth: 0 freq:0.11 size: 1 time: 10callee size: 3 stack:12 predicate: (op0 != 0)
    Power_Ip_TimeoutExpired/11 function body not available
      loop depth: 1 freq:3.08 size: 5 time: 14 predicate: (op0 != 0)
       op0 is compile time invariant
       op1 is compile time invariant
    Power_Ip_StartTimeout/10 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14 predicate: (op0 != 0)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_ClearFesResetFlags/3 inlinable
  global time:     80.980825
  self size:       27
  global size:     27
  min size:       0
  self stack:      12
  global stack:    12
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:11.000000, time:28.084164,  executed if:(op0 != 0)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 function not considered for inlining
      loop depth: 0 freq:0.11 size: 1 time: 10callee size: 3 stack:12 predicate: (op0 != 0)
    Power_Ip_TimeoutExpired/11 function body not available
      loop depth: 1 freq:3.08 size: 5 time: 14 predicate: (op0 != 0)
       op0 is compile time invariant
       op1 is compile time invariant
    Power_Ip_StartTimeout/10 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14 predicate: (op0 != 0)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant


Flattening functions:
Overall time estimate: 817.305270 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Power_Ip_MC_RGM_ClearDesResetFlags.part.0/15.
Enqueueing calls in Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14.
Enqueueing calls in Power_Ip_MC_RGM_PerformReset/9.
Enqueueing calls in Power_Ip_MC_RGM_GetResetRawValue/8.
Enqueueing calls in Power_Ip_MC_RGM_GetResetReason/7.
Enqueueing calls in Power_Ip_MC_RGM_CheckResetReason/6.
Enqueueing calls in Power_Ip_MC_RGM_ResetInit/5.
Enqueueing calls in Power_Ip_MC_RGM_ClearDesResetFlags/4.
Enqueueing calls in Power_Ip_MC_RGM_ClearFesResetFlags/3.

Considering Power_Ip_MC_RGM_CheckResetReason/6 with 21 size
 to be inlined into Power_Ip_MC_RGM_GetResetReason/7 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Mcu_TS_T40D34M20I1R0/src/Power_Ip_MC_RGM.c:518
 Estimated badness is -0.169565, frequency 1.00.

Considering Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 with 6 size
 to be inlined into Power_Ip_MC_RGM_ClearFesResetFlags/3 in unknown:0
 Estimated badness is -0.090124, frequency 0.11.

Considering Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 with 6 size
 to be inlined into Power_Ip_MC_RGM_ClearDesResetFlags/4 in unknown:0
 Estimated badness is -0.090124, frequency 0.11.

Considering Power_Ip_MC_RGM_CheckResetReason/6 with 21 size
 to be inlined into Power_Ip_MC_RGM_GetResetReason/7 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Mcu_TS_T40D34M20I1R0/src/Power_Ip_MC_RGM.c:539
 Estimated badness is -0.027978, frequency 0.17.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 817.894249 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :        8 calls, 7.714066 freq, 0 count
call is unlikely and code size would grow         :        5 calls, 2.830000 freq, 0 count
IPA function summary for Power_Ip_MC_RGM_PerformReset/9 inlinable
  global time:     12.332400
  self size:       14
  global size:     14
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:6.500000, time:2.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Power_Ip_MC_ME_SocTriggerResetEvent/13 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11 predicate: (op0[ref offset: 0] == 60)
       op0 is compile time invariant
    Power_Ip_MC_ME_SocTriggerResetEvent/13 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11 predicate: (op0[ref offset: 0] == 90)
       op0 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_GetResetRawValue/8 inlinable
  global time:     336.031345
  self size:       51
  global size:     51
  min size:       8
  self stack:      0
  global stack:    0
    size:44.000000, time:323.031345
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearDesResetFlags/4 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:14 stack:24
    Power_Ip_MC_RGM_ClearFesResetFlags/3 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:14 stack:24

IPA function summary for Power_Ip_MC_RGM_GetResetReason/7 inlinable
  global time:     286.173253
  self size:       36
  global size:     56
  min size:       54
  self stack:      4
  global stack:    4
    size:49.000000, time:267.673253
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags/3 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:14 stack:24
    Power_Ip_MC_RGM_CheckResetReason/6 inlined
      loop depth: 0 freq:0.17 size: 5 time: 14callee size:10 stack: 0
      Stack frame offset 4, callee self size 0, callee size 0
    Power_Ip_MC_RGM_ClearDesResetFlags/4 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:14 stack:24
    Power_Ip_MC_RGM_CheckResetReason/16 inlined
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:10 stack: 0
      Stack frame offset 4, callee self size 0, callee size 0

IPA function summary for Power_Ip_MC_RGM_ResetInit/5 inlinable
  global time:     20.960000
  self size:       23
  global size:     23
  min size:       4
  self stack:      0
  global stack:    0
    size:16.500000, time:14.330000
    size:4.500000, time:3.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags/3 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:14 stack:24

IPA function summary for Power_Ip_MC_RGM_ClearDesResetFlags/4 inlinable
  global time:     81.198625
  self size:       27
  global size:     29
  min size:       0
  self stack:      12
  global stack:    24
  estimated growth:17
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:11.000000, time:28.084164,  executed if:(op0 != 0)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 inlined
      loop depth: 0 freq:0.11 size: 1 time: 10callee size: 3 stack:12
      Stack frame offset 12, callee self size 12, callee size 12
      Power_Ip_ReportPowerErrors/12 function body not available
        loop depth: 0 freq:0.11 size: 3 time: 12 predicate: (op0 != 0)
         op0 is compile time invariant
         op1 is compile time invariant
    Power_Ip_TimeoutExpired/11 function body not available
      loop depth: 1 freq:3.08 size: 5 time: 14 predicate: (op0 != 0)
       op0 is compile time invariant
       op1 is compile time invariant
    Power_Ip_StartTimeout/10 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14 predicate: (op0 != 0)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_ClearFesResetFlags/3 inlinable
  global time:     81.198625
  self size:       27
  global size:     29
  min size:       0
  self stack:      12
  global stack:    24
  estimated growth:39
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:11.000000, time:28.084164,  executed if:(op0 != 0)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags.part.0/17 inlined
      loop depth: 0 freq:0.11 size: 1 time: 10callee size: 3 stack:12
      Stack frame offset 12, callee self size 12, callee size 12
      Power_Ip_ReportPowerErrors/12 function body not available
        loop depth: 0 freq:0.11 size: 3 time: 12 predicate: (op0 != 0)
         op0 is compile time invariant
         op1 is compile time invariant
    Power_Ip_TimeoutExpired/11 function body not available
      loop depth: 1 freq:3.08 size: 5 time: 14 predicate: (op0 != 0)
       op0 is compile time invariant
       op1 is compile time invariant
    Power_Ip_StartTimeout/10 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14 predicate: (op0 != 0)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

Symbol table:

Power_Ip_MC_RGM_ClearFesResetFlags.part.0/17 (Power_Ip_MC_RGM_ClearFesResetFlags.part.0) @07103620
  Type: function definition analyzed
  Visibility: artificial
  next sharing asm name: 14
  References: 
  Referring: 
  Function Power_Ip_MC_RGM_ClearFesResetFlags.part.0/17 is inline copy in Power_Ip_MC_RGM_ClearFesResetFlags/3
  Clone of Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14
  Availability: local
  Function flags: count:37904965 (estimated locally) first_run:1 body local icf_merged split_part optimize_size
  Called by: Power_Ip_MC_RGM_ClearFesResetFlags/3 (inlined) (37904965 (estimated locally),0.11 per call) 
  Calls: Power_Ip_ReportPowerErrors/12 (37904965 (estimated locally),0.11 per call) 
Power_Ip_MC_RGM_CheckResetReason/16 (Power_Ip_MC_RGM_CheckResetReason) @07103460
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 6
  References: 
  Referring: 
  Function Power_Ip_MC_RGM_CheckResetReason/16 is inline copy in Power_Ip_MC_RGM_GetResetReason/7
  Clone of Power_Ip_MC_RGM_CheckResetReason/6
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Power_Ip_MC_RGM_GetResetReason/7 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 (Power_Ip_MC_RGM_ClearFesResetFlags.part.0) @070237e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  previous sharing asm name: 17
  References: 
  Referring: 
  Function Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 is inline copy in Power_Ip_MC_RGM_ClearDesResetFlags/4
  Availability: local
  Function flags: count:37904965 (estimated locally) first_run:1 body local icf_merged split_part optimize_size
  Called by: Power_Ip_MC_RGM_ClearDesResetFlags/4 (inlined) (37904965 (estimated locally),0.11 per call) 
  Calls: Power_Ip_ReportPowerErrors/12 (37904965 (estimated locally),0.11 per call) 
Power_Ip_MC_ME_SocTriggerResetEvent/13 (Power_Ip_MC_ME_SocTriggerResetEvent) @0701a000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_MC_RGM_PerformReset/9 (357878150 (estimated locally),0.33 per call) Power_Ip_MC_RGM_PerformReset/9 (357878150 (estimated locally),0.33 per call) 
  Calls: 
Power_Ip_ReportPowerErrors/12 (Power_Ip_ReportPowerErrors) @06fdc700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_MC_RGM_ClearFesResetFlags.part.0/17 (37904965 (estimated locally),0.11 per call) Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 (37904965 (estimated locally),0.11 per call) 
  Calls: 
Power_Ip_TimeoutExpired/11 (Power_Ip_TimeoutExpired) @06fdc620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_MC_RGM_ClearDesResetFlags/4 (1073741824 (estimated locally),3.08 per call) Power_Ip_MC_RGM_ClearFesResetFlags/3 (1073741824 (estimated locally),3.08 per call) 
  Calls: 
Power_Ip_StartTimeout/10 (Power_Ip_StartTimeout) @06fdc540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_MC_RGM_ClearDesResetFlags/4 (114863532 (estimated locally),0.33 per call) Power_Ip_MC_RGM_ClearFesResetFlags/3 (114863532 (estimated locally),0.33 per call) 
  Calls: 
Power_Ip_MC_RGM_PerformReset/9 (Power_Ip_MC_RGM_PerformReset) @06fdc1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_MC_ME_SocTriggerResetEvent/13 (357878150 (estimated locally),0.33 per call) Power_Ip_MC_ME_SocTriggerResetEvent/13 (357878150 (estimated locally),0.33 per call) 
Power_Ip_MC_RGM_GetResetRawValue/8 (Power_Ip_MC_RGM_GetResetRawValue) @06fdc000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Power_Ip_pxMC_RGM/2 (read)Power_Ip_u32FesResetStatus/1 (write)Power_Ip_u32FesResetStatus/1 (read)Power_Ip_pxMC_RGM/2 (read)Power_Ip_u32DesResetStatus/0 (write)Power_Ip_u32DesResetStatus/0 (read)
  Referring: 
  Availability: available
  Function flags: count:65068756 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_MC_RGM_ClearDesResetFlags/4 (32534377 (estimated locally),0.50 per call) Power_Ip_MC_RGM_ClearFesResetFlags/3 (32534377 (estimated locally),0.50 per call) 
Power_Ip_MC_RGM_GetResetReason/7 (Power_Ip_MC_RGM_GetResetReason) @06fbfc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Power_Ip_pxMC_RGM/2 (read)Power_Ip_u32DesResetStatus/0 (write)Power_Ip_u32DesResetStatus/0 (read)Power_Ip_pxMC_RGM/2 (read)Power_Ip_u32FesResetStatus/1 (write)Power_Ip_u32FesResetStatus/1 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_MC_RGM_ClearFesResetFlags/3 (536870913 (estimated locally),0.50 per call) Power_Ip_MC_RGM_CheckResetReason/6 (inlined) (177167401 (estimated locally),0.17 per call) Power_Ip_MC_RGM_ClearDesResetFlags/4 (1073741824 (estimated locally),1.00 per call) Power_Ip_MC_RGM_CheckResetReason/16 (inlined) (1073741824 (estimated locally),1.00 per call) 
Power_Ip_MC_RGM_CheckResetReason/6 (Power_Ip_MC_RGM_CheckResetReason) @06fbf9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 16
  References: 
  Referring: 
  Function Power_Ip_MC_RGM_CheckResetReason/6 is inline copy in Power_Ip_MC_RGM_GetResetReason/7
  Availability: local
  Function flags: count:177167401 (estimated locally) body local optimize_size
  Called by: Power_Ip_MC_RGM_GetResetReason/7 (inlined) (177167401 (estimated locally),0.17 per call) 
  Calls: 
Power_Ip_MC_RGM_ResetInit/5 (Power_Ip_MC_RGM_ResetInit) @06fbf700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Power_Ip_pxMC_RGM/2 (read)Power_Ip_u32FesResetStatus/1 (write)Power_Ip_pxMC_RGM/2 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_MC_RGM_ClearFesResetFlags/3 (354334802 (estimated locally),0.33 per call) 
Power_Ip_MC_RGM_ClearDesResetFlags/4 (Power_Ip_MC_RGM_ClearDesResetFlags) @06fbf540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Power_Ip_pxMC_RGM/2 (read)
  Referring: 
  Availability: local
  Function flags: count:348071309 (estimated locally) body local optimize_size
  Called by: Power_Ip_MC_RGM_GetResetRawValue/8 (32534377 (estimated locally),0.50 per call) Power_Ip_MC_RGM_GetResetReason/7 (1073741824 (estimated locally),1.00 per call) 
  Calls: Power_Ip_MC_RGM_ClearFesResetFlags.part.0/14 (inlined) (37904965 (estimated locally),0.11 per call) Power_Ip_TimeoutExpired/11 (1073741824 (estimated locally),3.08 per call) Power_Ip_StartTimeout/10 (114863532 (estimated locally),0.33 per call) 
Power_Ip_MC_RGM_ClearFesResetFlags/3 (Power_Ip_MC_RGM_ClearFesResetFlags) @06fbf380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Power_Ip_pxMC_RGM/2 (read)
  Referring: 
  Availability: local
  Function flags: count:348071309 (estimated locally) body local optimize_size
  Called by: Power_Ip_MC_RGM_GetResetRawValue/8 (32534377 (estimated locally),0.50 per call) Power_Ip_MC_RGM_GetResetReason/7 (536870913 (estimated locally),0.50 per call) Power_Ip_MC_RGM_ResetInit/5 (354334802 (estimated locally),0.33 per call) 
  Calls: Power_Ip_MC_RGM_ClearFesResetFlags.part.0/17 (inlined) (37904965 (estimated locally),0.11 per call) Power_Ip_TimeoutExpired/11 (1073741824 (estimated locally),3.08 per call) Power_Ip_StartTimeout/10 (114863532 (estimated locally),0.33 per call) 
Power_Ip_pxMC_RGM/2 (Power_Ip_pxMC_RGM) @06f1ec60
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Power_Ip_MC_RGM_ClearDesResetFlags/4 (read)Power_Ip_MC_RGM_GetResetReason/7 (read)Power_Ip_MC_RGM_GetResetReason/7 (read)Power_Ip_MC_RGM_ResetInit/5 (read)Power_Ip_MC_RGM_ClearFesResetFlags/3 (read)Power_Ip_MC_RGM_ResetInit/5 (read)Power_Ip_MC_RGM_GetResetRawValue/8 (read)Power_Ip_MC_RGM_GetResetRawValue/8 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Power_Ip_u32FesResetStatus/1 (Power_Ip_u32FesResetStatus) @06f1ec18
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Power_Ip_MC_RGM_ResetInit/5 (write)Power_Ip_MC_RGM_GetResetReason/7 (write)Power_Ip_MC_RGM_GetResetReason/7 (read)Power_Ip_MC_RGM_GetResetRawValue/8 (write)Power_Ip_MC_RGM_GetResetRawValue/8 (read)
  Availability: available
  Varpool flags:
Power_Ip_u32DesResetStatus/0 (Power_Ip_u32DesResetStatus) @06f1ebd0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Power_Ip_MC_RGM_GetResetReason/7 (write)Power_Ip_MC_RGM_GetResetReason/7 (read)Power_Ip_MC_RGM_GetResetRawValue/8 (write)Power_Ip_MC_RGM_GetResetRawValue/8 (read)
  Availability: available
  Varpool flags:

;; Function Power_Ip_MC_RGM_ClearDesResetFlags (Power_Ip_MC_RGM_ClearDesResetFlags, funcdef_no=1, decl_uid=8379, cgraph_uid=2, symbol_order=4)


Symbols to be put in SSA form
{ D.8516 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


Removing basic block 7
Removing basic block 9
Removing basic block 10
Removing basic block 11
Merging blocks 12 and 13
No longer having address taken: StartTime
No longer having address taken: ElapsedTime
No longer having address taken: TimeoutTicks

Symbols to be put in SSA form
{ D.8546 D.8547 D.8548 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 4, latch 5
;;  depth 1, outer 0
;;  nodes: 4 5
;; 2 succs { 3 8 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 4 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Power_Ip_MC_RGM_ClearDesResetFlags (uint32 RegValue)
{
  uint32 RegValueTemp;
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  long unsigned int TimeoutTicks.10_1;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.11_2;
  long unsigned int _4;

  <bb 2> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG RegValueTemp => RegValue_8(D)
  # DEBUG BEGIN_STMT
  if (RegValue_8(D) != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 3> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> [local count: 1073741824]:
  # RegValueTemp_5 = PHI <RegValue_8(D)(3), RegValueTemp_15(5)>
  # DEBUG RegValueTemp => RegValueTemp_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.10_1 = TimeoutTicks;
  TimeoutOccurred_13 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.10_1);
  # DEBUG TimeoutOccurred => TimeoutOccurred_13
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.11_2 = Power_Ip_pxMC_RGM;
  Power_Ip_pxMC_RGM.11_2->DES ={v} RegValueTemp_5;
  # DEBUG BEGIN_STMT
  _4 ={v} Power_Ip_pxMC_RGM.11_2->DES;
  RegValueTemp_15 = _4 & 1611061081;
  # DEBUG RegValueTemp => RegValueTemp_15
  # DEBUG BEGIN_STMT
  if (RegValueTemp_15 != 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686025]:
  if (TimeoutOccurred_13 == 0)
    goto <bb 4>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 6> [local count: 114863532]:
  # TimeoutOccurred_3 = PHI <TimeoutOccurred_13(4), TimeoutOccurred_13(5)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_3 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 37904965]:
  # DEBUG D#3 => RegValue_8(D)
  # DEBUG INLINE_ENTRY Power_Ip_MC_RGM_ClearFesResetFlags
  # DEBUG D#2 => D#1
  # DEBUG RegValue => D#2
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);
  # DEBUG D#5 => {CLOBBER}
  # DEBUG StartTime => D#5
  # DEBUG D#6 => {CLOBBER}
  # DEBUG ElapsedTime => D#6
  # DEBUG D#7 => {CLOBBER}
  # DEBUG TimeoutTicks => D#7

  <bb 8> [local count: 348071309]:
  # DEBUG StartTime => NULL
  # DEBUG ElapsedTime => NULL
  # DEBUG TimeoutTicks => NULL
  # DEBUG TimeoutOccurred => NULL
  # DEBUG RegValueTemp => NULL
  # DEBUG RegValue => NULL
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}



;; Function Power_Ip_MC_RGM_ClearFesResetFlags (Power_Ip_MC_RGM_ClearFesResetFlags, funcdef_no=0, decl_uid=8377, cgraph_uid=1, symbol_order=3)


Symbols to be put in SSA form
{ D.8515 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


Removing basic block 7
Removing basic block 9
Removing basic block 10
Removing basic block 11
Merging blocks 12 and 13
No longer having address taken: StartTime
No longer having address taken: ElapsedTime
No longer having address taken: TimeoutTicks

Symbols to be put in SSA form
{ D.8554 D.8555 D.8556 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 4, latch 5
;;  depth 1, outer 0
;;  nodes: 4 5
;; 2 succs { 3 8 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 4 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Power_Ip_MC_RGM_ClearFesResetFlags (uint32 RegValue)
{
  uint32 RegValueTemp;
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  long unsigned int TimeoutTicks.5_1;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.6_2;
  long unsigned int _4;

  <bb 2> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG RegValueTemp => RegValue_8(D)
  # DEBUG BEGIN_STMT
  if (RegValue_8(D) != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 3> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> [local count: 1073741824]:
  # RegValueTemp_5 = PHI <RegValue_8(D)(3), RegValueTemp_15(5)>
  # DEBUG RegValueTemp => RegValueTemp_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.5_1 = TimeoutTicks;
  TimeoutOccurred_13 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.5_1);
  # DEBUG TimeoutOccurred => TimeoutOccurred_13
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.6_2 = Power_Ip_pxMC_RGM;
  Power_Ip_pxMC_RGM.6_2->FES ={v} RegValueTemp_5;
  # DEBUG BEGIN_STMT
  _4 ={v} Power_Ip_pxMC_RGM.6_2->FES;
  RegValueTemp_15 = _4 & 1611727449;
  # DEBUG RegValueTemp => RegValueTemp_15
  # DEBUG BEGIN_STMT
  if (RegValueTemp_15 != 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686025]:
  if (TimeoutOccurred_13 == 0)
    goto <bb 4>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 6> [local count: 114863532]:
  # TimeoutOccurred_3 = PHI <TimeoutOccurred_13(4), TimeoutOccurred_13(5)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_3 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 37904965]:
  # DEBUG D#1 => RegValue_8(D)
  # DEBUG INLINE_ENTRY Power_Ip_MC_RGM_ClearFesResetFlags
  # DEBUG D#2 => D#1
  # DEBUG RegValue => D#2
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);
  # DEBUG D#9 => {CLOBBER}
  # DEBUG StartTime => D#9
  # DEBUG D#10 => {CLOBBER}
  # DEBUG ElapsedTime => D#10
  # DEBUG D#11 => {CLOBBER}
  # DEBUG TimeoutTicks => D#11

  <bb 8> [local count: 348071309]:
  # DEBUG StartTime => NULL
  # DEBUG ElapsedTime => NULL
  # DEBUG TimeoutTicks => NULL
  # DEBUG TimeoutOccurred => NULL
  # DEBUG RegValueTemp => NULL
  # DEBUG RegValue => NULL
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}



;; Function Power_Ip_MC_RGM_ResetInit (Power_Ip_MC_RGM_ResetInit, funcdef_no=2, decl_uid=8342, cgraph_uid=3, symbol_order=5)

Power_Ip_MC_RGM_ResetInit (const struct Power_Ip_MC_RGM_ConfigType * ConfigPtr)
{
  uint32 DesResetReason;
  uint32 FesResetReason;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.0_1;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.1_2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FesResetReason => 0
  # DEBUG BEGIN_STMT
  # DEBUG DesResetReason => 0
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.0_1 = Power_Ip_pxMC_RGM;
  FesResetReason_11 ={v} Power_Ip_pxMC_RGM.0_1->FES;
  # DEBUG FesResetReason => FesResetReason_11
  # DEBUG BEGIN_STMT
  if (FesResetReason_11 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Power_Ip_u32FesResetStatus = FesResetReason_11;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_RGM_ClearFesResetFlags (FesResetReason_11);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.1_2 = Power_Ip_pxMC_RGM;
  _3 = ConfigPtr_14(D)->FuncResetOpt;
  Power_Ip_pxMC_RGM.1_2->FERD ={v} _3;
  # DEBUG BEGIN_STMT
  DesResetReason_16 ={v} Power_Ip_pxMC_RGM.1_2->DES;
  # DEBUG DesResetReason => DesResetReason_16
  # DEBUG BEGIN_STMT
  if (DesResetReason_16 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _4 = ConfigPtr_14(D)->FesThresholdReset;
  Power_Ip_pxMC_RGM.1_2->FRET ={v} _4;

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _5 = DesResetReason_16 & 1;
  if (_5 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 = ConfigPtr_14(D)->DesThresholdReset;
  Power_Ip_pxMC_RGM.1_2->DRET ={v} _6;

  <bb 8> [local count: 1073741824]:
  return;

}



;; Function Power_Ip_MC_RGM_GetResetReason (Power_Ip_MC_RGM_GetResetReason, funcdef_no=4, decl_uid=8344, cgraph_uid=5, symbol_order=7)

Removing basic block 13

Symbols to be put in SSA form
{ D.8518 D.8573 D.8583 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 33
Number of blocks to update: 31 ( 94%)


Merging blocks 4 and 12
Removing basic block 8
Merging blocks 21 and 11
Merging blocks 23 and 24
Merging blocks 32 and 22
Merging blocks 4 and 14
Merging blocks 23 and 25
No longer having address taken: Position

Symbols to be put in SSA form
{ D.8429 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 25
Number of blocks to update: 24 ( 96%)


;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
;;
;; Loop 2
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 16 19 17 18
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 5 8 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 10 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 5 11 }
;; 11 succs { 12 24 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 23 }
;; 15 succs { 21 }
;; 16 succs { 17 20 }
;; 17 succs { 18 19 }
;; 18 succs { 22 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 16 22 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 1 }
Power_Ip_MC_RGM_GetResetReason ()
{
  Power_Ip_ResetType ResetReason;
  uint32 NumberOfFlags;
  uint32 Index;
  uint32 DynamicMask;
  uint32 Position;
  Power_Ip_ResetType D.8583;
  Power_Ip_ResetType ResetReason;
  uint32 NumberOfFlags;
  uint32 Index;
  uint32 DynamicMask;
  uint32 Position;
  Power_Ip_ResetType D.8573;
  uint32 Position;
  uint32 ActiveValue;
  uint32 RegValue;
  Power_Ip_ResetType ResetReason;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.8_1;
  long unsigned int _2;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.9_3;
  long unsigned int _4;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _49;
  long unsigned int _50;

  <bb 2> [local count: 46850980]:
  # DEBUG BEGIN_STMT
  # DEBUG ResetReason => 25
  # DEBUG BEGIN_STMT
  # DEBUG RegValue => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Position_68 = 0;
  # DEBUG Position => Position_68
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.8_1 = Power_Ip_pxMC_RGM;
  _2 ={v} Power_Ip_pxMC_RGM.8_1->DES;
  RegValue_13 = _2 & 1611061081;
  # DEBUG RegValue => RegValue_13
  # DEBUG BEGIN_STMT
  if (RegValue_13 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 23425490]:
  # DEBUG BEGIN_STMT
  Power_Ip_u32DesResetStatus = RegValue_13;

  <bb 4> [local count: 46850980]:
  # DEBUG BEGIN_STMT
  ActiveValue_15 = Power_Ip_u32DesResetStatus;
  # DEBUG ActiveValue => ActiveValue_15
  # DEBUG BEGIN_STMT
  # DEBUG ActiveValue => ActiveValue_15
  # DEBUG ResetMode => 0
  # DEBUG PositionPtr => &Position
  # DEBUG INLINE_ENTRY Power_Ip_MC_RGM_CheckResetReason
  # DEBUG BEGIN_STMT
  # DEBUG ResetReason => 25
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG NumberOfFlags => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Position_26 = Position_68;
  # DEBUG Position => Position_26
  # DEBUG BEGIN_STMT
  # DEBUG ResetMask => 1611061081
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 10>; [100.00%]

  <bb 5> [local count: 1041207447]:
  # DEBUG BEGIN_STMT
  DynamicMask_28 = 1 << Index_27;
  # DEBUG DynamicMask => DynamicMask_28
  # DEBUG BEGIN_STMT
  _30 = DynamicMask_28 & 1611061081;
  if (_30 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 6> [local count: 520603723]:
  # DEBUG BEGIN_STMT
  _31 = ActiveValue_15 & DynamicMask_28;
  if (_31 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 260301862]:
  # DEBUG BEGIN_STMT
  # DEBUG ResetReason => Position_34
  # DEBUG BEGIN_STMT
  NumberOfFlags_33 = NumberOfFlags_32 + 1;
  # DEBUG NumberOfFlags => NumberOfFlags_33
  # DEBUG BEGIN_STMT
  if (NumberOfFlags_33 > 1)
    goto <bb 11>; [5.50%]
  else
    goto <bb 8>; [94.50%]

  <bb 8> [local count: 506287121]:
  # ResetReason_39 = PHI <ResetReason_40(6), Position_34(7)>
  # NumberOfFlags_41 = PHI <NumberOfFlags_32(6), NumberOfFlags_33(7)>
  # DEBUG NumberOfFlags => NumberOfFlags_41
  # DEBUG ResetReason => ResetReason_39
  # DEBUG BEGIN_STMT
  Position_35 = Position_34 + 1;
  # DEBUG Position => Position_35

  <bb 9> [local count: 1026890845]:
  # ResetReason_42 = PHI <ResetReason_40(5), ResetReason_39(8)>
  # NumberOfFlags_43 = PHI <NumberOfFlags_32(5), NumberOfFlags_41(8)>
  # Position_44 = PHI <Position_34(5), Position_35(8)>
  # DEBUG Position => Position_44
  # DEBUG NumberOfFlags => NumberOfFlags_43
  # DEBUG ResetReason => ResetReason_42
  # DEBUG BEGIN_STMT
  Index_36 = Index_27 + 1;
  # DEBUG Index => Index_36

  <bb 10> [local count: 1073741824]:
  # ResetReason_40 = PHI <25(4), ResetReason_42(9)>
  # NumberOfFlags_32 = PHI <0(4), NumberOfFlags_43(9)>
  # Index_27 = PHI <0(4), Index_36(9)>
  # Position_34 = PHI <Position_26(4), Position_44(9)>
  # DEBUG Position => Position_34
  # DEBUG Index => Index_27
  # DEBUG NumberOfFlags => NumberOfFlags_32
  # DEBUG ResetReason => ResetReason_40
  # DEBUG BEGIN_STMT
  if (Index_27 != 32)
    goto <bb 5>; [96.97%]
  else
    goto <bb 11>; [3.03%]

  <bb 11> [local count: 46850980]:
  # ResetReason_38 = PHI <26(7), ResetReason_40(10)>
  # Position_37 = PHI <Position_34(7), Position_34(10)>
  # DEBUG ResetReason => ResetReason_38
  # DEBUG BEGIN_STMT
  Position_69 = Position_37;
  # DEBUG Position => Position_69
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _65 = ResetReason_38;
  # DEBUG ActiveValue => NULL
  # DEBUG ResetMode => NULL
  # DEBUG PositionPtr => NULL
  # DEBUG Position => NULL
  # DEBUG DynamicMask => NULL
  # DEBUG Index => NULL
  # DEBUG NumberOfFlags => NULL
  # DEBUG ResetMask => NULL
  # DEBUG ResetReason => NULL
  ResetReason_17 = _65;
  # DEBUG ResetReason => ResetReason_17
  # DEBUG BEGIN_STMT
  Power_Ip_MC_RGM_ClearDesResetFlags (RegValue_13);
  # DEBUG BEGIN_STMT
  if (RegValue_13 == 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 12> [local count: 23425490]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.9_3 = Power_Ip_pxMC_RGM;
  _4 ={v} Power_Ip_pxMC_RGM.9_3->FES;
  RegValue_19 = _4 & 1611727449;
  # DEBUG RegValue => RegValue_19
  # DEBUG BEGIN_STMT
  if (RegValue_19 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 11712745]:
  # DEBUG BEGIN_STMT
  Power_Ip_u32FesResetStatus = RegValue_19;

  <bb 14> [local count: 23425490]:
  # DEBUG BEGIN_STMT
  ActiveValue_21 = Power_Ip_u32FesResetStatus;
  # DEBUG ActiveValue => ActiveValue_21
  # DEBUG BEGIN_STMT
  if (ActiveValue_21 != 0)
    goto <bb 15>; [33.00%]
  else
    goto <bb 23>; [67.00%]

  <bb 15> [local count: 7730412]:
  # DEBUG BEGIN_STMT
  # DEBUG ActiveValue => ActiveValue_21
  # DEBUG ResetMode => 1
  # DEBUG PositionPtr => &Position
  # DEBUG INLINE_ENTRY Power_Ip_MC_RGM_CheckResetReason
  # DEBUG BEGIN_STMT
  # DEBUG ResetReason => 25
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG NumberOfFlags => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Position_45 = Position_69;
  # DEBUG Position => Position_45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ResetMask => 1611727577
  # DEBUG ResetMask => 1611727577
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 21>; [100.00%]

  <bb 16> [local count: 171799227]:
  # DEBUG BEGIN_STMT
  DynamicMask_47 = 1 << Index_46;
  # DEBUG DynamicMask => DynamicMask_47
  # DEBUG BEGIN_STMT
  _49 = DynamicMask_47 & 1611727577;
  if (_49 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 17> [local count: 85899614]:
  # DEBUG BEGIN_STMT
  _50 = ActiveValue_21 & DynamicMask_47;
  if (_50 != 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 18> [local count: 42949807]:
  # DEBUG BEGIN_STMT
  # DEBUG ResetReason => Position_53
  # DEBUG BEGIN_STMT
  NumberOfFlags_52 = NumberOfFlags_51 + 1;
  # DEBUG NumberOfFlags => NumberOfFlags_52
  # DEBUG BEGIN_STMT
  if (NumberOfFlags_52 > 1)
    goto <bb 22>; [5.50%]
  else
    goto <bb 19>; [94.50%]

  <bb 19> [local count: 83537374]:
  # ResetReason_58 = PHI <ResetReason_59(17), Position_53(18)>
  # NumberOfFlags_60 = PHI <NumberOfFlags_51(17), NumberOfFlags_52(18)>
  # DEBUG NumberOfFlags => NumberOfFlags_60
  # DEBUG ResetReason => ResetReason_58
  # DEBUG BEGIN_STMT
  Position_54 = Position_53 + 1;
  # DEBUG Position => Position_54

  <bb 20> [local count: 169436988]:
  # ResetReason_61 = PHI <ResetReason_59(16), ResetReason_58(19)>
  # NumberOfFlags_62 = PHI <NumberOfFlags_51(16), NumberOfFlags_60(19)>
  # Position_63 = PHI <Position_53(16), Position_54(19)>
  # DEBUG Position => Position_63
  # DEBUG NumberOfFlags => NumberOfFlags_62
  # DEBUG ResetReason => ResetReason_61
  # DEBUG BEGIN_STMT
  Index_55 = Index_46 + 1;
  # DEBUG Index => Index_55

  <bb 21> [local count: 177167400]:
  # ResetReason_59 = PHI <25(15), ResetReason_61(20)>
  # NumberOfFlags_51 = PHI <0(15), NumberOfFlags_62(20)>
  # Index_46 = PHI <0(15), Index_55(20)>
  # Position_53 = PHI <Position_45(15), Position_63(20)>
  # DEBUG Position => Position_53
  # DEBUG Index => Index_46
  # DEBUG NumberOfFlags => NumberOfFlags_51
  # DEBUG ResetReason => ResetReason_59
  # DEBUG BEGIN_STMT
  if (Index_46 != 32)
    goto <bb 16>; [96.97%]
  else
    goto <bb 22>; [3.03%]

  <bb 22> [local count: 7730412]:
  # ResetReason_57 = PHI <26(18), ResetReason_59(21)>
  # Position_56 = PHI <Position_53(18), Position_53(21)>
  # DEBUG ResetReason => ResetReason_57
  # DEBUG BEGIN_STMT
  Position_70 = Position_56;
  # DEBUG Position => Position_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _67 = ResetReason_57;
  # DEBUG ActiveValue => NULL
  # DEBUG ResetMode => NULL
  # DEBUG PositionPtr => NULL
  # DEBUG Position => NULL
  # DEBUG DynamicMask => NULL
  # DEBUG Index => NULL
  # DEBUG NumberOfFlags => NULL
  # DEBUG ResetMask => NULL
  # DEBUG ResetReason => NULL
  ResetReason_23 = _67;
  # DEBUG ResetReason => ResetReason_23

  <bb 23> [local count: 23425490]:
  # ResetReason_5 = PHI <ResetReason_17(14), ResetReason_23(22)>
  # DEBUG ResetReason => ResetReason_5
  # DEBUG BEGIN_STMT
  Power_Ip_MC_RGM_ClearFesResetFlags (RegValue_19);

  <bb 24> [local count: 46850980]:
  # ResetReason_6 = PHI <ResetReason_17(11), ResetReason_5(23)>
  # DEBUG ResetReason => ResetReason_6
  # DEBUG BEGIN_STMT
  # DEBUG D#13 => {CLOBBER}
  # DEBUG Position => D#13
  return ResetReason_6;

}



;; Function Power_Ip_MC_RGM_GetResetRawValue (Power_Ip_MC_RGM_GetResetRawValue, funcdef_no=5, decl_uid=8346, cgraph_uid=6, symbol_order=8)

Power_Ip_MC_RGM_GetResetRawValue ()
{
  uint32 Position;
  uint32 DynamicMask;
  uint32 Index;
  uint32 ActiveValue;
  uint32 RegValue;
  uint32 RawReset;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.13_1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.14_6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 65068756]:
  # DEBUG BEGIN_STMT
  # DEBUG RawReset => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.13_1 = Power_Ip_pxMC_RGM;
  _2 ={v} Power_Ip_pxMC_RGM.13_1->FES;
  RegValue_31 = _2 & 1611727449;
  # DEBUG RegValue => RegValue_31
  # DEBUG BEGIN_STMT
  if (RegValue_31 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 32534378]:
  # DEBUG BEGIN_STMT
  Power_Ip_u32FesResetStatus = RegValue_31;

  <bb 4> [local count: 65068756]:
  # DEBUG BEGIN_STMT
  # DEBUG ResetMask => 1611727577
  # DEBUG BEGIN_STMT
  ActiveValue_33 = Power_Ip_u32FesResetStatus;
  # DEBUG ActiveValue => ActiveValue_33
  # DEBUG BEGIN_STMT
  if (ActiveValue_33 != 0)
    goto <bb 24>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 24> [local count: 32534378]:
  goto <bb 10>; [100.00%]

  <bb 5> [local count: 1041207447]:
  # DEBUG BEGIN_STMT
  DynamicMask_35 = 1 << Index_19;
  # DEBUG DynamicMask => DynamicMask_35
  # DEBUG BEGIN_STMT
  _3 = DynamicMask_35 & 1611727577;
  if (_3 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 6> [local count: 520603723]:
  # DEBUG BEGIN_STMT
  _4 = ActiveValue_33 & DynamicMask_35;
  if (_4 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 260301862]:
  # DEBUG BEGIN_STMT
  _5 = 1 << Position_22;
  RawReset_36 = _5 | RawReset_13;
  # DEBUG RawReset => RawReset_36

  <bb 8> [local count: 520603723]:
  # RawReset_11 = PHI <RawReset_13(6), RawReset_36(7)>
  # DEBUG RawReset => RawReset_11
  # DEBUG BEGIN_STMT
  Position_37 = Position_22 + 1;
  # DEBUG Position => Position_37

  <bb 9> [local count: 1041207447]:
  # RawReset_12 = PHI <RawReset_13(5), RawReset_11(8)>
  # Position_21 = PHI <Position_22(5), Position_37(8)>
  # DEBUG Position => Position_21
  # DEBUG RawReset => RawReset_12
  # DEBUG BEGIN_STMT
  Index_38 = Index_19 + 1;
  # DEBUG Index => Index_38

  <bb 10> [local count: 1073741824]:
  # RawReset_13 = PHI <RawReset_12(9), 0(24)>
  # Index_19 = PHI <Index_38(9), 0(24)>
  # Position_22 = PHI <Position_21(9), 0(24)>
  # DEBUG Position => Position_22
  # DEBUG Index => Index_19
  # DEBUG RawReset => RawReset_13
  # DEBUG BEGIN_STMT
  if (Index_19 != 32)
    goto <bb 5>; [96.97%]
  else
    goto <bb 11>; [3.03%]

  <bb 11> [local count: 32534377]:
  # RawReset_47 = PHI <RawReset_13(10)>
  # DEBUG BEGIN_STMT
  Power_Ip_MC_RGM_ClearFesResetFlags (RegValue_31);

  <bb 12> [local count: 65068755]:
  # RawReset_14 = PHI <0(4), RawReset_47(11)>
  # DEBUG RawReset => RawReset_14
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.14_6 = Power_Ip_pxMC_RGM;
  _7 ={v} Power_Ip_pxMC_RGM.14_6->DES;
  RegValue_39 = _7 & 1611061081;
  # DEBUG RegValue => RegValue_39
  # DEBUG BEGIN_STMT
  if (RegValue_39 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 32534378]:
  # DEBUG BEGIN_STMT
  Power_Ip_u32DesResetStatus = RegValue_39;

  <bb 14> [local count: 65068755]:
  # DEBUG BEGIN_STMT
  ActiveValue_41 = Power_Ip_u32DesResetStatus;
  # DEBUG ActiveValue => ActiveValue_41
  # DEBUG BEGIN_STMT
  if (ActiveValue_41 != 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 23> [local count: 32534378]:
  goto <bb 20>; [100.00%]

  <bb 15> [local count: 1041207436]:
  # DEBUG BEGIN_STMT
  DynamicMask_43 = 1 << Index_20;
  # DEBUG DynamicMask => DynamicMask_43
  # DEBUG BEGIN_STMT
  _8 = DynamicMask_43 & 1611061081;
  if (_8 != 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 16> [local count: 520603718]:
  # DEBUG BEGIN_STMT
  _9 = ActiveValue_41 & DynamicMask_43;
  if (_9 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [local count: 260301859]:
  # DEBUG BEGIN_STMT
  _10 = 1 << Position_24;
  RawReset_44 = _10 | RawReset_17;
  # DEBUG RawReset => RawReset_44

  <bb 18> [local count: 520603718]:
  # RawReset_15 = PHI <RawReset_17(16), RawReset_44(17)>
  # DEBUG RawReset => RawReset_15
  # DEBUG BEGIN_STMT
  Position_45 = Position_24 + 1;
  # DEBUG Position => Position_45

  <bb 19> [local count: 1041207436]:
  # RawReset_16 = PHI <RawReset_17(15), RawReset_15(18)>
  # Position_23 = PHI <Position_24(15), Position_45(18)>
  # DEBUG Position => Position_23
  # DEBUG RawReset => RawReset_16
  # DEBUG BEGIN_STMT
  Index_46 = Index_20 + 1;
  # DEBUG Index => Index_46

  <bb 20> [local count: 1073741814]:
  # RawReset_17 = PHI <RawReset_16(19), RawReset_14(23)>
  # Index_20 = PHI <Index_46(19), 0(23)>
  # Position_24 = PHI <Position_23(19), 15(23)>
  # DEBUG Position => Position_24
  # DEBUG Index => Index_20
  # DEBUG RawReset => RawReset_17
  # DEBUG BEGIN_STMT
  if (Index_20 != 32)
    goto <bb 15>; [96.97%]
  else
    goto <bb 21>; [3.03%]

  <bb 21> [local count: 32534377]:
  # RawReset_29 = PHI <RawReset_17(20)>
  # DEBUG BEGIN_STMT
  Power_Ip_MC_RGM_ClearDesResetFlags (RegValue_39);

  <bb 22> [local count: 65068755]:
  # RawReset_18 = PHI <RawReset_14(14), RawReset_29(21)>
  # DEBUG RawReset => RawReset_18
  # DEBUG BEGIN_STMT
  return RawReset_18;

}



;; Function Power_Ip_MC_RGM_PerformReset (Power_Ip_MC_RGM_PerformReset, funcdef_no=6, decl_uid=8348, cgraph_uid=7, symbol_order=9)

Power_Ip_MC_RGM_PerformReset (const struct Power_Ip_MC_RGM_ConfigType * ConfigPtr)
{
  <unnamed type> _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = ConfigPtr_4(D)->ResetType;
  switch (_1) <default: <L4> [33.33%], case 60: <L1> [33.33%], case 90: <L0> [33.33%]>

  <bb 3> [local count: 357878150]:
<L0>:
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_SocTriggerResetEvent (1);
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  Power_Ip_MC_ME_SocTriggerResetEvent (0);
  # DEBUG BEGIN_STMT

  <bb 5> [local count: 1073634451]:
<L4>:
  return;

}


