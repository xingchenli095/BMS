
Marking local functions: EcuC_TpTransmission_entry_IDLE EcuC_TpReception_entry_IDLE


Marking externally visible functions: EcuC_TpTxConfirmation EcuC_TpTransmit EcuC_TxBufferIsLocked EcuC_CopyTxData EcuC_InitTx EcuC_TpRxIndication EcuC_StartOfReceptionDet EcuC_CopyRxDataDet EcuC_RxBufferIsLocked EcuC_CopyRxData EcuC_StartOfReception EcuC_InitRx


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

TS_MemCpy32/15 (TS_MemCpy32) @06bda7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: EcuC_CopyTxData/8 EcuC_CopyRxData/2 
  Calls: 
TS_MemBZero32/14 (TS_MemBZero32) @06bda540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: EcuC_TpTransmission_entry_IDLE/13 EcuC_TpReception_entry_IDLE/12 
  Calls: 
EcuC_TpTransmission_entry_IDLE/13 (EcuC_TpTransmission_entry_IDLE) @06bda2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: EcuC_TpTxConfirmation/11 EcuC_TpTransmit/10 EcuC_InitTx/7 
  Calls: TS_MemBZero32/14 
EcuC_TpReception_entry_IDLE/12 (EcuC_TpReception_entry_IDLE) @06bda000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: EcuC_TpRxIndication/6 EcuC_CopyRxData/2 EcuC_InitRx/0 
  Calls: TS_MemBZero32/14 
EcuC_TpTxConfirmation/11 (EcuC_TpTxConfirmation) @06bd3d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: EcuC_TpTransmission_entry_IDLE/13 
EcuC_TpTransmit/10 (EcuC_TpTransmit) @06bd3b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: EcuC_TpTransmission_entry_IDLE/13 
   Indirect call
EcuC_TxBufferIsLocked/9 (EcuC_TxBufferIsLocked) @06bd39a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
EcuC_CopyTxData/8 (EcuC_CopyTxData) @06bd37e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: TS_MemCpy32/15 
EcuC_InitTx/7 (EcuC_InitTx) @06bd3620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: EcuC_TpTransmission_entry_IDLE/13 
EcuC_TpRxIndication/6 (EcuC_TpRxIndication) @06bd3460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: EcuC_TpReception_entry_IDLE/12 
EcuC_StartOfReceptionDet/5 (EcuC_StartOfReceptionDet) @06bd32a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
EcuC_CopyRxDataDet/4 (EcuC_CopyRxDataDet) @06bd30e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
EcuC_RxBufferIsLocked/3 (EcuC_RxBufferIsLocked) @06b9aee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
EcuC_CopyRxData/2 (EcuC_CopyRxData) @06b9ad20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: TS_MemCpy32/15 EcuC_TpReception_entry_IDLE/12 
EcuC_StartOfReception/1 (EcuC_StartOfReception) @06b9ab60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
EcuC_InitRx/0 (EcuC_InitRx) @06b9a9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: EcuC_TpReception_entry_IDLE/12 
EcuC_TpTransmission_entry_IDLE (struct EcuC_TxControlInfoType * TxControlInfoPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (TxControlInfoPtr, 4);
  return;

}


EcuC_TpReception_entry_IDLE (struct EcuC_RxControlInfoType * RxControlInfoPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  TS_MemBZero32 (RxControlInfoPtr, 6);
  return;

}


EcuC_TpTxConfirmation (struct EcuC_TxControlInfoType * TxControlInfoPtr, NotifResultType Result)
{
  Std_ReturnType retVal;
  Std_ReturnType D.5738;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Result == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = TxControlInfoPtr->state;
  if (_1 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  retVal = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  retVal = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  EcuC_TpTransmission_entry_IDLE (TxControlInfoPtr);
  # DEBUG BEGIN_STMT
  D.5738 = retVal;
  return D.5738;

}


EcuC_TpTransmit (struct EcuC_TxControlInfoType * TxControlInfoPtr, PduIdType PduId, const struct PduInfoType * TxBufferInfoPtr, Std_ReturnType (*EcuC_LoTpTransmitFunctPtrType) (PduIdType, const struct PduInfoType *) LoTpTransmitFunctPtr)
{
  Std_ReturnType retVal;
  Std_ReturnType D.5730;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  _1 = TxControlInfoPtr->state;
  if (_1 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (LoTpTransmitFunctPtr != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _2 = TxBufferInfoPtr->SduLength;
  TxControlInfoPtr->remainMsgSize = _2;
  # DEBUG BEGIN_STMT
  TxControlInfoPtr->state = 2;
  # DEBUG BEGIN_STMT
  retVal = LoTpTransmitFunctPtr (PduId, TxBufferInfoPtr);
  # DEBUG BEGIN_STMT
  if (retVal != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  EcuC_TpTransmission_entry_IDLE (TxControlInfoPtr);

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.5730 = retVal;
  return D.5730;

}


EcuC_TxBufferIsLocked (struct EcuC_TxControlInfoType * TxControlInfoPtr)
{
  boolean retVal;
  boolean D.5720;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 0;
  # DEBUG BEGIN_STMT
  _1 = TxControlInfoPtr->state;
  _2 = (int) _1;
  switch (_2) <default: <L6> [INV], case 0: <L0> [INV], case 2: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  retVal = 0;
  # DEBUG BEGIN_STMT
  goto <bb 5>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT

  <bb 5> :
<L6>:
  # DEBUG BEGIN_STMT
  D.5720 = retVal;
  return D.5720;

}


EcuC_CopyTxData (struct EcuC_TxControlInfoType * TxControlInfoPtr, const struct PduInfoType * TxBufferInfoPtr, struct PduInfoType * PduInfoPtr, struct RetryInfoType * RetryInfoPtr, PduLengthType * TxDataCntPtr)
{
  PduLengthType retry;
  PduLengthType copiedOffset;
  BufReq_ReturnType retVal;
  BufReq_ReturnType D.5718;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 0;
  # DEBUG BEGIN_STMT
  _1 = TxControlInfoPtr->state;
  if (_1 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = TxBufferInfoPtr->SduLength;
  _3 = TxControlInfoPtr->remainMsgSize;
  copiedOffset = _2 - _3;
  # DEBUG BEGIN_STMT
  retry = 0;
  # DEBUG BEGIN_STMT
  if (RetryInfoPtr != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _4 = RetryInfoPtr->TpDataState;
  if (_4 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _5 = RetryInfoPtr->TxTpDataCnt;
  if (copiedOffset < _5)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  retry = RetryInfoPtr->TxTpDataCnt;

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (retVal == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = PduInfoPtr->SduLength;
  _7 = (int) _6;
  _8 = TxControlInfoPtr->remainMsgSize;
  _9 = (int) _8;
  _10 = (int) retry;
  _11 = _9 + _10;
  if (_7 > _11)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  retVal = 2;
  goto <bb 16>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _12 = PduInfoPtr->SduLength;
  if (_12 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _13 = PduInfoPtr->SduDataPtr;
  _14 = TxBufferInfoPtr->SduDataPtr;
  _15 = (int) copiedOffset;
  _16 = (int) retry;
  _17 = _15 - _16;
  _18 = (sizetype) _17;
  _19 = _14 + _18;
  _20 = PduInfoPtr->SduLength;
  _21 = (long unsigned int) _20;
  TS_MemCpy32 (_13, _19, _21);
  # DEBUG BEGIN_STMT
  _22 = PduInfoPtr->SduLength;
  if (retry < _22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _23 = TxControlInfoPtr->remainMsgSize;
  _24 = PduInfoPtr->SduLength;
  _25 = retry - _24;
  _26 = _23 + _25;
  TxControlInfoPtr->remainMsgSize = _26;

  <bb 14> :
  # DEBUG BEGIN_STMT
  _27 = TxControlInfoPtr->remainMsgSize;
  *TxDataCntPtr = _27;
  # DEBUG BEGIN_STMT
  retVal = 0;
  goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  retVal = 1;

  <bb 16> :
  # DEBUG BEGIN_STMT
  D.5718 = retVal;
  return D.5718;

}


EcuC_InitTx (struct EcuC_TxControlInfoType * TxControlInfoPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  EcuC_TpTransmission_entry_IDLE (TxControlInfoPtr);
  return;

}


EcuC_TpRxIndication (struct EcuC_RxControlInfoType * RxControlInfoPtr, NotifResultType Result, PduLengthType * CopiedDataSize)
{
  Std_ReturnType retVal;
  Std_ReturnType D.5696;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  _1 = RxControlInfoPtr->totalMsgSize;
  _2 = RxControlInfoPtr->remainMsgSize;
  _3 = _1 - _2;
  *CopiedDataSize = _3;
  # DEBUG BEGIN_STMT
  _4 = RxControlInfoPtr->state;
  _5 = (int) _4;
  switch (_5) <default: <L9> [INV], case 0: <L0> [INV], case 1: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  retVal = 1;
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  if (Result == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  retVal = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  retVal = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  EcuC_TpReception_entry_IDLE (RxControlInfoPtr);
  # DEBUG BEGIN_STMT

  <bb 8> :
<L9>:
  # DEBUG BEGIN_STMT
  D.5696 = retVal;
  return D.5696;

}


EcuC_StartOfReceptionDet (PduLengthType TpSduLength, PduLengthType * RxBufferSizePtr)
{
  Std_ReturnType Result;
  Std_ReturnType D.5691;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (RxBufferSizePtr == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Result = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Result = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.5691 = Result;
  return D.5691;

}


EcuC_CopyRxDataDet (const struct PduInfoType * PduInfoPtr, PduLengthType * RxBufferSizePtr)
{
  Std_ReturnType Result;
  Std_ReturnType D.5686;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  if (PduInfoPtr == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Result = 1;
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (RxBufferSizePtr == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Result = 1;
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _1 = PduInfoPtr->SduLength;
  if (_1 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _2 = PduInfoPtr->SduDataPtr;
  if (_2 == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Result = 1;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Result = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  D.5686 = Result;
  return D.5686;

}


EcuC_RxBufferIsLocked (struct EcuC_RxControlInfoType * RxControlInfoPtr)
{
  boolean Result;
  boolean D.5673;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  _1 = RxControlInfoPtr->state;
  _2 = (int) _1;
  switch (_2) <default: <L6> [INV], case 0: <L0> [INV], case 1: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Result = 0;
  # DEBUG BEGIN_STMT
  goto <bb 5>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT

  <bb 5> :
<L6>:
  # DEBUG BEGIN_STMT
  D.5673 = Result;
  return D.5673;

}


EcuC_CopyRxData (struct EcuC_RxControlInfoType * RxControlInfoPtr, struct PduInfoType * RxBufferInfoPtr, const struct PduInfoType * PduInfoPtr, PduLengthType * RxBufferSizePtr)
{
  BufReq_ReturnType Result;
  BufReq_ReturnType D.5670;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  _1 = RxControlInfoPtr->state;
  _2 = (int) _1;
  switch (_2) <default: <L12> [INV], case 0: <L0> [INV], case 1: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _3 = PduInfoPtr->SduLength;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = RxControlInfoPtr->remainMsgSize;
  *RxBufferSizePtr = _4;
  # DEBUG BEGIN_STMT
  Result = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _5 = PduInfoPtr->SduLength;
  _6 = RxControlInfoPtr->remainMsgSize;
  if (_5 > _6)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  EcuC_TpReception_entry_IDLE (RxControlInfoPtr);
  # DEBUG BEGIN_STMT
  Result = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _7 = RxBufferInfoPtr->SduDataPtr;
  _8 = RxControlInfoPtr->totalMsgSize;
  _9 = (int) _8;
  _10 = RxControlInfoPtr->remainMsgSize;
  _11 = (int) _10;
  _12 = _9 - _11;
  _13 = (sizetype) _12;
  _14 = _7 + _13;
  _15 = PduInfoPtr->SduDataPtr;
  _16 = PduInfoPtr->SduLength;
  _17 = (long unsigned int) _16;
  TS_MemCpy32 (_14, _15, _17);
  # DEBUG BEGIN_STMT
  _18 = RxControlInfoPtr->remainMsgSize;
  _19 = PduInfoPtr->SduLength;
  _20 = _18 - _19;
  RxControlInfoPtr->remainMsgSize = _20;
  # DEBUG BEGIN_STMT
  _21 = RxControlInfoPtr->remainMsgSize;
  *RxBufferSizePtr = _21;
  # DEBUG BEGIN_STMT
  Result = 0;

  <bb 9> :
<L12>:
  # DEBUG BEGIN_STMT
  D.5670 = Result;
  return D.5670;

}


EcuC_StartOfReception (struct EcuC_RxControlInfoType * RxControlInfoPtr, struct PduInfoType * RxBufferInfoPtr, PduLengthType TpSduLength, PduLengthType * RxBufferSizePtr)
{
  PduLengthType msgSize;
  BufReq_ReturnType Result;
  BufReq_ReturnType D.5661;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  _1 = RxControlInfoPtr->state;
  _2 = (int) _1;
  switch (_2) <default: <L12> [INV], case 0: <L0> [INV], case 1: <L7> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  msgSize = 0;
  # DEBUG BEGIN_STMT
  _3 = RxBufferInfoPtr->SduLength;
  if (TpSduLength > _3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Result = 3;
  goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (TpSduLength == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  msgSize = RxBufferInfoPtr->SduLength;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  msgSize = TpSduLength;

  <bb 8> :
  # DEBUG BEGIN_STMT
  RxControlInfoPtr->remainMsgSize = msgSize;
  # DEBUG BEGIN_STMT
  RxControlInfoPtr->totalMsgSize = msgSize;
  # DEBUG BEGIN_STMT
  RxControlInfoPtr->state = 1;
  # DEBUG BEGIN_STMT
  *RxBufferSizePtr = msgSize;
  # DEBUG BEGIN_STMT
  Result = 0;
  goto <bb 10>; [INV]

  <bb 9> :
<L7>:
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT

  <bb 10> :
<L12>:
  # DEBUG BEGIN_STMT
  D.5661 = Result;
  return D.5661;

}


EcuC_InitRx (struct EcuC_RxControlInfoType * RxControlInfoPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  EcuC_TpReception_entry_IDLE (RxControlInfoPtr);
  return;

}


