NvM_SetRamBlockStatus_Async_CalcCrc_End ()
{
  uint8 * _1;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.51_2;
  long unsigned int _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = NvM_GetStoredRamCRCAddress ();
  NvM_CurrentBlockDescriptorPtr.51_2 = NvM_CurrentBlockDescriptorPtr;
  _3 = NvM_CurrentBlockDescriptorPtr.51_2->blockDesc;
  NvM_CopyCrc (_1, &NvM_CalcCrc_CalcBuffer, _3);
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 0;
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_RemoveElement ();
  return;

}


NvM_SetRamBlockStatus_Async_CalcCrc_Start ()
{
  uint8 * BufferAddr;
  Std_ReturnType ReturnVal;
  unsigned char NvM_CurrentServiceId.45_1;
  short unsigned int NvM_GlobalWorkingStatus.46_2;
  unsigned int _3;
  unsigned int _4;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.47_5;
  Std_ReturnType (*<Tae1>) (void *) _6;
  unsigned char NvM_MirrorRetryCount.48_7;
  unsigned char NvM_GlobalCallLevel.49_8;
  int _9;
  unsigned char NvM_GlobalCallLevel.50_10;
  int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ReturnVal_16 = 0;
  # DEBUG ReturnVal => ReturnVal_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BufferAddr_19 = NvM_GetUserRamBlockAddress ();
  # DEBUG BufferAddr => BufferAddr_19
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId.45_1 = NvM_CurrentServiceId;
  if (NvM_CurrentServiceId.45_1 != 25)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId = 5;

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.46_2 = NvM_GlobalWorkingStatus;
  _3 = (unsigned int) NvM_GlobalWorkingStatus.46_2;
  _4 = _3 & 4096;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.47_5 = NvM_CurrentBlockDescriptorPtr;
  _6 = NvM_CurrentBlockDescriptorPtr.47_5->writeRamToNvCallback;
  ReturnVal_23 = NvM_MirrorCopy (0B, _6, BufferAddr_19);
  # DEBUG ReturnVal => ReturnVal_23

  <bb 6> :
  # ReturnVal_12 = PHI <ReturnVal_16(4), ReturnVal_23(5)>
  # DEBUG ReturnVal => ReturnVal_12
  # DEBUG BEGIN_STMT
  if (ReturnVal_12 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_MirrorRetryCount.48_7 = NvM_MirrorRetryCount;
  if (NvM_MirrorRetryCount.48_7 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.49_8 = NvM_GlobalCallLevel;
  _9 = (int) NvM_GlobalCallLevel.49_8;
  NvM_CurrentFunctionPtr[_9] = NvM_SetRamBlockStatus_Async_CalcCrc_Start;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.50_10 = NvM_GlobalCallLevel;
  _11 = (int) NvM_GlobalCallLevel.50_10;
  NvM_CurrentFunctionPtr[_11] = NvM_SetRamBlockStatus_Async_CalcCrc_End;
  # DEBUG BEGIN_STMT
  NvM_CalculateCrc (BufferAddr_19);

  <bb 10> :
  return;

}


NvM_EraseNvBlock_Async_State1 ()
{
  MemIf_StatusType Status;
  short unsigned int _1;
  unsigned char _2;
  unsigned char NvM_GlobalCallLevel.32_3;
  int _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Status_8 = Fee_GetStatus ();
  # DEBUG Status => Status_8
  # DEBUG BEGIN_STMT
  if (Status_8 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = NvM_GetMergedBlockNumber ();
  _2 = Fee_EraseImmediateBlock (_1);
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.32_3 = NvM_GlobalCallLevel;
  _4 = (int) NvM_GlobalCallLevel.32_3;
  NvM_CurrentFunctionPtr[_4] = NvM_StateMachine_ProcessJobResult;
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_StateMachine_RedundantBlockError ();
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 2;

  <bb 7> :
  return;

}


NvM_EraseNvBlock_Async ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId = 9;
  # DEBUG BEGIN_STMT
  NvM_StateMachine_ProcessRedundantBlock (NvM_EraseNvBlock_Async_State1);
  return;

}


NvM_InvalidateNvBlock_Async_State1 ()
{
  MemIf_StatusType Status;
  short unsigned int _1;
  unsigned char _2;
  unsigned char NvM_GlobalCallLevel.33_3;
  int _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Status_8 = Fee_GetStatus ();
  # DEBUG Status => Status_8
  # DEBUG BEGIN_STMT
  if (Status_8 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = NvM_GetMergedBlockNumber ();
  _2 = Fee_InvalidateBlock (_1);
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.33_3 = NvM_GlobalCallLevel;
  _4 = (int) NvM_GlobalCallLevel.33_3;
  NvM_CurrentFunctionPtr[_4] = NvM_StateMachine_ProcessJobResult;
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_StateMachine_RedundantBlockError ();
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 2;

  <bb 7> :
  return;

}


NvM_InvalidateNvBlock_Async ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId = 11;
  # DEBUG BEGIN_STMT
  NvM_StateMachine_ProcessRedundantBlock (NvM_InvalidateNvBlock_Async_State1);
  return;

}


NvM_JobErrorNotification ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


NvM_JobEndNotification ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


NvM_ASR40_CancelJobs (NvM_BlockIdType BlockId)
{
  boolean RequestFound;
  uint16 Queue_Standard_TopIndex;
  struct NvM_QueueItemType QueueTemp;
  uint16 QueueCopyIndex;
  uint16 QueueIndex;
  Std_ReturnType Result;
  uint16 BlockIndex;
  short unsigned int NvM_Queue_IndexStandard.37_1;
  short unsigned int NvM_Queue_CancelledStandardJobs.38_2;
  int _3;
  unsigned char _4;
  short unsigned int NvM_GlobalBlockNumber.39_5;
  int _6;
  short unsigned int NvM_Queue_CancelledStandardJobs.40_7;
  short unsigned int NvM_Queue_CancelledStandardJobs.41_8;
  short unsigned int _9;
  int _10;
  short unsigned int _11;
  int _12;
  unsigned int _13;
  unsigned int _14;
  int _15;
  short unsigned int QueueCopyIndex.42_16;
  short unsigned int NvM_Queue_CancelledStandardJobs.43_17;
  unsigned int _18;
  unsigned int _19;
  short unsigned int QueueIndex.44_20;
  Std_ReturnType _52;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Result_32 = 1;
  # DEBUG Result => Result_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RequestFound_33 = 0;
  # DEBUG RequestFound => RequestFound_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BlockIndex_37 = NvM_CheckCondCancelJobs (BlockId_35(D));
  # DEBUG BlockIndex => BlockIndex_37
  # DEBUG BEGIN_STMT
  if (BlockIndex_37 != 9)
    goto <bb 3>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_Queue_IndexStandard.37_1 = NvM_Queue_IndexStandard;
  NvM_Queue_CancelledStandardJobs.38_2 = NvM_Queue_CancelledStandardJobs;
  Queue_Standard_TopIndex_39 = NvM_Queue_IndexStandard.37_1 - NvM_Queue_CancelledStandardJobs.38_2;
  # DEBUG Queue_Standard_TopIndex => Queue_Standard_TopIndex_39
  # DEBUG BEGIN_STMT
  _3 = (int) BlockIndex_37;
  _4 = NvM_AdminBlockTable[_3].NvMResult;
  if (_4 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 4> :
  NvM_GlobalBlockNumber.39_5 = NvM_GlobalBlockNumber;
  if (BlockIndex_37 != NvM_GlobalBlockNumber.39_5)
    goto <bb 5>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _6 = (int) BlockIndex_37;
  NvM_AdminBlockTable[_6].NvMResult = 6;
  # DEBUG BEGIN_STMT
  NvM_Queue_CancelledStandardJobs.40_7 = NvM_Queue_CancelledStandardJobs;
  NvM_Queue_CancelledStandardJobs.41_8 = NvM_Queue_CancelledStandardJobs.40_7;
  _9 = NvM_Queue_CancelledStandardJobs.41_8 + 1;
  NvM_Queue_CancelledStandardJobs = _9;
  # DEBUG BEGIN_STMT
  QueueIndex_42 = Queue_Standard_TopIndex_39;
  # DEBUG QueueIndex => QueueIndex_42
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _10 = (int) QueueIndex_23;
  _11 = NvM_Queue_Standard[_10].NvMBlockDescriptorIndex;
  if (BlockIndex_37 == _11)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _12 = (int) QueueIndex_23;
  QueueTemp = NvM_Queue_Standard[_12];
  # DEBUG BEGIN_STMT
  QueueCopyIndex_44 = QueueIndex_23;
  # DEBUG QueueCopyIndex => QueueCopyIndex_44
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _13 = (unsigned int) QueueCopyIndex_24;
  _14 = _13 + 1;
  _15 = (int) QueueCopyIndex_24;
  NvM_Queue_Standard[_15] = NvM_Queue_Standard[_14];
  # DEBUG BEGIN_STMT
  QueueCopyIndex.42_16 = QueueCopyIndex_24;
  QueueCopyIndex_48 = QueueCopyIndex.42_16 + 1;
  # DEBUG QueueCopyIndex => QueueCopyIndex_48

  <bb 9> :
  # QueueCopyIndex_24 = PHI <QueueCopyIndex_44(7), QueueCopyIndex_48(8)>
  # DEBUG QueueCopyIndex => QueueCopyIndex_24
  # DEBUG BEGIN_STMT
  if (QueueCopyIndex_24 < Queue_Standard_TopIndex_39)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  NvM_Queue_CancelledStandardJobs.43_17 = NvM_Queue_CancelledStandardJobs;
  _18 = (unsigned int) NvM_Queue_CancelledStandardJobs.43_17;
  _19 = 4 - _18;
  NvM_Queue_Standard[_19] = QueueTemp;
  # DEBUG BEGIN_STMT
  RequestFound_46 = 1;
  # DEBUG RequestFound => RequestFound_46

  <bb 11> :
  # RequestFound_25 = PHI <RequestFound_26(6), RequestFound_46(10)>
  # DEBUG RequestFound => RequestFound_25
  # DEBUG BEGIN_STMT
  QueueIndex.44_20 = QueueIndex_23;
  QueueIndex_49 = QueueIndex.44_20 + 65535;
  # DEBUG QueueIndex => QueueIndex_49

  <bb 12> :
  # QueueIndex_23 = PHI <QueueIndex_42(5), QueueIndex_49(11)>
  # RequestFound_26 = PHI <RequestFound_33(5), RequestFound_25(11)>
  # DEBUG RequestFound => RequestFound_26
  # DEBUG QueueIndex => QueueIndex_23
  # DEBUG BEGIN_STMT
  if (QueueIndex_23 != 65535)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  if (RequestFound_26 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  Result_50 = 0;
  # DEBUG Result => Result_50

  <bb 15> :
  # Result_21 = PHI <Result_32(3), Result_32(4), Result_50(14)>
  # DEBUG Result => Result_21
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();

  <bb 16> :
  # Result_22 = PHI <Result_32(2), Result_21(15)>
  # DEBUG Result => Result_22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _52 = Result_22;
  QueueTemp ={v} {CLOBBER};
  return _52;

}


NvM_SetBlockLockStatus (NvM_ASR40_BlockIdType BlockId, boolean BlockLocked)
{
  uint16 BlockIndex;
  short unsigned int NvM_GlobalGenericStatus.36_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  void * _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  int _11;
  short unsigned int _12;
  int _13;
  short unsigned int _14;
  int _15;
  short unsigned int _16;
  int _17;
  short unsigned int _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  BlockIndex_24 = NvM_GetBlockIndexForValidId (BlockId_22(D));
  # DEBUG BlockIndex => BlockIndex_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.36_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.36_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 19, 20);
  goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (BlockIndex_24 == 9)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 19, 10);
  goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) BlockIndex_24;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 19, 21);
  goto <bb 14>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) BlockIndex_24;
  _7 = NvM_BlockDescriptorTable[_6].ramBlockDataAddress;
  if (_7 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _8 = (int) BlockIndex_24;
  _9 = NvM_BlockDescriptorTable[_8].blockDesc;
  _10 = _9 & 131072;
  if (_10 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (BlockLocked_26(D) == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _11 = (int) BlockIndex_24;
  _12 = NvM_AdminBlockTable[_11].NvMDynStatus;
  _13 = (int) BlockIndex_24;
  _14 = _12 | 8;
  NvM_AdminBlockTable[_13].NvMDynStatus = _14;
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _15 = (int) BlockIndex_24;
  _16 = NvM_AdminBlockTable[_15].NvMDynStatus;
  _17 = (int) BlockIndex_24;
  _18 = _16 & 65527;
  NvM_AdminBlockTable[_17].NvMDynStatus = _18;

  <bb 13> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();

  <bb 14> :
  # DEBUG BEGIN_STMT
  return;

}


NvM_ASR40_SetRamBlockStatus (NvM_ASR40_BlockIdType BlockId, boolean BlockChanged)
{
  Std_ReturnType Result;
  uint16 BlockIndex;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorLocalPtr;
  short unsigned int NvM_GlobalGenericStatus.35_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  int _6;
  short unsigned int _7;
  int _8;
  int _9;
  int _10;
  unsigned char _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  void * _15;
  long unsigned int _16;
  long unsigned int _17;
  int _18;
  int _19;
  short unsigned int _20;
  int _21;
  short unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  int _25;
  unsigned char _26;
  unsigned int _27;
  unsigned int _28;
  int _29;
  int _30;
  short unsigned int _31;
  int _32;
  short unsigned int _33;
  int _34;
  Std_ReturnType _59;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorLocalPtr_38 = 0B;
  # DEBUG NvM_CurrentBlockDescriptorLocalPtr => NvM_CurrentBlockDescriptorLocalPtr_38
  # DEBUG BEGIN_STMT
  BlockIndex_42 = NvM_GetBlockIndexForValidId (BlockId_40(D));
  # DEBUG BlockIndex => BlockIndex_42
  # DEBUG BEGIN_STMT
  Result_43 = 1;
  # DEBUG Result => Result_43
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (BlockIndex_42 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 5, 10);
  goto <bb 20>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.35_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.35_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 5, 20);
  goto <bb 20>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) BlockIndex_42;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 5, 21);
  goto <bb 20>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) BlockIndex_42;
  _7 = NvM_AdminBlockTable[_6].NvMDynStatus;
  _8 = (int) _7;
  _9 = _8 & 8;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 5, 25);
  goto <bb 20>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _10 = (int) BlockIndex_42;
  _11 = NvM_AdminBlockTable[_10].NvMResult;
  if (_11 != 2)
    goto <bb 11>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _12 = (int) BlockIndex_42;
  NvM_CurrentBlockDescriptorLocalPtr_44 = &NvM_BlockDescriptorTable[_12];
  # DEBUG NvM_CurrentBlockDescriptorLocalPtr => NvM_CurrentBlockDescriptorLocalPtr_44
  # DEBUG BEGIN_STMT
  _13 = NvM_CurrentBlockDescriptorLocalPtr_44->blockDesc;
  _14 = _13 & 4194304;
  if (_14 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 12> :
  _15 = NvM_CurrentBlockDescriptorLocalPtr_44->ramBlockDataAddress;
  if (_15 != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _16 = NvM_CurrentBlockDescriptorLocalPtr_44->blockDesc;
  _17 = _16 & 131072;
  if (_17 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (BlockChanged_46(D) == 1)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _18 = (int) BlockIndex_42;
  NvM_AdminBlockTable[_18].NvMValid = 165;
  # DEBUG BEGIN_STMT
  _19 = (int) BlockIndex_42;
  _20 = NvM_AdminBlockTable[_19].NvMDynStatus;
  _21 = (int) BlockIndex_42;
  _22 = _20 | 8193;
  NvM_AdminBlockTable[_21].NvMDynStatus = _22;
  # DEBUG BEGIN_STMT
  _23 = NvM_CurrentBlockDescriptorLocalPtr_44->blockDesc;
  _24 = _23 & 8;
  if (_24 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  _25 = (int) BlockIndex_42;
  _26 = NvM_AdminBlockTable[_25].NvMExtendedStatus;
  _27 = (unsigned int) _26;
  _28 = _27 & 2;
  if (_28 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _29 = (int) BlockIndex_42;
  NvM_AdminBlockTable[_29].NvMResult = 0;
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_EnqueueElement (BlockIndex_42);
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _30 = (int) BlockIndex_42;
  _31 = NvM_AdminBlockTable[_30].NvMDynStatus;
  _32 = (int) BlockIndex_42;
  _33 = _31 & 65534;
  NvM_AdminBlockTable[_32].NvMDynStatus = _33;
  # DEBUG BEGIN_STMT
  _34 = (int) BlockIndex_42;
  NvM_AdminBlockTable[_34].NvMValid = 255;

  <bb 19> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Result_54 = 0;
  # DEBUG Result => Result_54

  <bb 20> :
  # Result_35 = PHI <Result_43(3), Result_43(5), Result_43(7), Result_43(9), Result_43(10), Result_43(11), Result_43(13), Result_54(19)>
  # DEBUG Result => Result_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _59 = Result_35;
  return _59;

}


NvM_ASR40_SetBlockProtection (NvM_ASR40_BlockIdType BlockId, boolean ProtectionEnabled)
{
  Std_ReturnType Result;
  uint16 BlockIndex;
  short unsigned int NvM_GlobalGenericStatus.34_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  short unsigned int _5;
  int _6;
  int _7;
  int _8;
  unsigned char _9;
  int _10;
  short unsigned int _11;
  int _12;
  short unsigned int _13;
  int _14;
  short unsigned int _15;
  int _16;
  short unsigned int _17;
  Std_ReturnType _35;

  <bb 2> :
  # DEBUG BEGIN_STMT
  BlockIndex_24 = NvM_GetBlockIndexForValidId (BlockId_22(D));
  # DEBUG BlockIndex => BlockIndex_24
  # DEBUG BEGIN_STMT
  Result_25 = 1;
  # DEBUG Result => Result_25
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (BlockIndex_24 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 3, 10);
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.34_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.34_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 3, 20);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) BlockIndex_24;
  _5 = NvM_AdminBlockTable[_4].NvMDynStatus;
  _6 = (int) _5;
  _7 = _6 & 8;
  if (_7 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 3, 25);
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _8 = (int) BlockIndex_24;
  _9 = NvM_AdminBlockTable[_8].NvMResult;
  if (_9 != 2)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ProtectionEnabled_27(D) == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _10 = (int) BlockIndex_24;
  _11 = NvM_AdminBlockTable[_10].NvMDynStatus;
  _12 = (int) BlockIndex_24;
  _13 = _11 | 2;
  NvM_AdminBlockTable[_12].NvMDynStatus = _13;
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _14 = (int) BlockIndex_24;
  _15 = NvM_AdminBlockTable[_14].NvMDynStatus;
  _16 = (int) BlockIndex_24;
  _17 = _15 & 65533;
  NvM_AdminBlockTable[_16].NvMDynStatus = _17;

  <bb 12> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Result_31 = 0;
  # DEBUG Result => Result_31

  <bb 13> :
  # Result_18 = PHI <Result_25(3), Result_25(5), Result_25(7), Result_25(8), Result_31(12)>
  # DEBUG Result => Result_18
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _35 = Result_18;
  return _35;

}


NvM_ASR40_InvalidateNvBlock (NvM_ASR40_BlockIdType BlockId)
{
  boolean ReportWriteOnceUnknown;
  Std_ReturnType Result;
  uint16 BlockIndex;
  unsigned char _1;
  unsigned char _2;
  int _3;
  short unsigned int _4;
  int _5;
  int _6;
  int _7;
  unsigned char _8;
  int _9;
  Std_ReturnType _29;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Result_15 = 1;
  # DEBUG Result => Result_15
  # DEBUG BEGIN_STMT
  ReportWriteOnceUnknown_16 = 0;
  # DEBUG ReportWriteOnceUnknown => ReportWriteOnceUnknown_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BlockIndex_20 = NvM_CheckCondInvalidateNvBlock (BlockId_18(D));
  # DEBUG BlockIndex => BlockIndex_20
  # DEBUG BEGIN_STMT
  if (BlockIndex_20 != 9)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = NvM_CheckWriteProtection (BlockIndex_20);
  if (_1 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = NvM_CheckDataSetRomBlock (BlockIndex_20);
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = (int) BlockIndex_20;
  _4 = NvM_AdminBlockTable[_3].NvMDynStatus;
  _5 = (int) _4;
  _6 = _5 & 8;
  if (_6 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = (int) BlockIndex_20;
  _8 = NvM_AdminBlockTable[_7].NvMResult;
  if (_8 != 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Result_25 = NvM_Queue_InsertStandard (BlockIndex_20, 0B, NvM_InvalidateNvBlock_Async);
  # DEBUG Result => Result_25

  <bb 8> :
  # Result_10 = PHI <Result_15(3), Result_15(4), Result_15(5), Result_25(7), Result_15(6)>
  # DEBUG Result => Result_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Result_10 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _9 = (int) BlockIndex_20;
  NvM_AdminBlockTable[_9].NvMCurrentServiceId = 11;

  <bb 10> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ReportWriteOnceUnknown_16 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 11, 26);

  <bb 12> :
  # Result_11 = PHI <Result_15(2), Result_10(10), Result_10(11)>
  # DEBUG Result => Result_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = Result_11;
  return _29;

}


NvM_ASR40_EraseNvBlock (NvM_ASR40_BlockIdType BlockId)
{
  boolean ReportWriteOnceUnknown;
  Std_ReturnType Result;
  uint16 BlockIndex;
  unsigned char _1;
  unsigned char _2;
  int _3;
  short unsigned int _4;
  int _5;
  int _6;
  int _7;
  unsigned char _8;
  int _9;
  Std_ReturnType _29;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Result_15 = 1;
  # DEBUG Result => Result_15
  # DEBUG BEGIN_STMT
  ReportWriteOnceUnknown_16 = 0;
  # DEBUG ReportWriteOnceUnknown => ReportWriteOnceUnknown_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BlockIndex_20 = NvM_CheckCondEraseNvBlock (BlockId_18(D));
  # DEBUG BlockIndex => BlockIndex_20
  # DEBUG BEGIN_STMT
  if (BlockIndex_20 != 9)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = NvM_CheckWriteProtection (BlockIndex_20);
  if (_1 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = NvM_CheckDataSetRomBlock (BlockIndex_20);
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = (int) BlockIndex_20;
  _4 = NvM_AdminBlockTable[_3].NvMDynStatus;
  _5 = (int) _4;
  _6 = _5 & 8;
  if (_6 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = (int) BlockIndex_20;
  _8 = NvM_AdminBlockTable[_7].NvMResult;
  if (_8 != 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Result_25 = NvM_Queue_InsertStandard (BlockIndex_20, 0B, NvM_EraseNvBlock_Async);
  # DEBUG Result => Result_25

  <bb 8> :
  # Result_10 = PHI <Result_15(3), Result_15(4), Result_15(5), Result_25(7), Result_15(6)>
  # DEBUG Result => Result_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Result_10 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _9 = (int) BlockIndex_20;
  NvM_AdminBlockTable[_9].NvMCurrentServiceId = 9;

  <bb 10> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ReportWriteOnceUnknown_16 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 26);

  <bb 12> :
  # Result_11 = PHI <Result_15(2), Result_10(10), Result_10(11)>
  # DEBUG Result => Result_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = Result_11;
  return _29;

}


NvM_ASR40_GetDataIndex (NvM_ASR40_BlockIdType BlockId, uint8 * DataIndex)
{
  Std_ReturnType Result;
  uint16 BlockIndex;
  short unsigned int NvM_GlobalGenericStatus.31_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  long unsigned int _5;
  long unsigned int _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  unsigned char _11;
  Std_ReturnType _27;

  <bb 2> :
  # DEBUG BEGIN_STMT
  BlockIndex_17 = NvM_GetBlockIndexForValidId (BlockId_15(D));
  # DEBUG BlockIndex => BlockIndex_17
  # DEBUG BEGIN_STMT
  Result_18 = 1;
  # DEBUG Result => Result_18
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (BlockIndex_17 == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 2, 10);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.31_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.31_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 2, 20);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (DataIndex_19(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 2, 14);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _4 = (int) BlockIndex_17;
  _5 = NvM_BlockDescriptorTable[_4].blockDesc;
  _6 = _5 >> 7;
  _7 = (unsigned char) _6;
  _8 = (unsigned int) _7;
  _9 = _8 & 3;
  if (_9 == 2)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _10 = (int) BlockIndex_17;
  _11 = NvM_AdminBlockTable[_10].NvMDatasetBlockIndex;
  *DataIndex_19(D) = _11;
  # DEBUG BEGIN_STMT
  Result_23 = 0;
  # DEBUG Result => Result_23
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 2, 11);
  # DEBUG BEGIN_STMT
  *DataIndex_19(D) = 0;

  <bb 11> :
  # Result_12 = PHI <Result_18(3), Result_18(5), Result_18(7), Result_23(9), Result_18(10)>
  # DEBUG Result => Result_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _27 = Result_12;
  return _27;

}


NvM_ASR40_SetDataIndex (NvM_ASR40_BlockIdType BlockId, uint8 DataIndex)
{
  Std_ReturnType Result;
  uint16 BlockIndex;
  short unsigned int NvM_GlobalGenericStatus.30_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  long unsigned int _5;
  long unsigned int _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  int _11;
  unsigned char _12;
  int _13;
  int _14;
  unsigned char _15;
  int _16;
  int _17;
  int _18;
  unsigned char _19;
  int _20;
  long unsigned int _21;
  long unsigned int _22;
  unsigned char _23;
  unsigned int _24;
  unsigned int _25;
  int _26;
  unsigned char _27;
  int _28;
  Std_ReturnType _44;

  <bb 2> :
  # DEBUG BEGIN_STMT
  BlockIndex_34 = NvM_GetBlockIndexForValidId (BlockId_32(D));
  # DEBUG BlockIndex => BlockIndex_34
  # DEBUG BEGIN_STMT
  Result_35 = 1;
  # DEBUG Result => Result_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.30_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.30_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 1, 20);
  goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (BlockIndex_34 == 9)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 1, 10);
  goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) BlockIndex_34;
  _5 = NvM_BlockDescriptorTable[_4].blockDesc;
  _6 = _5 >> 7;
  _7 = (unsigned char) _6;
  _8 = (unsigned int) _7;
  _9 = _8 & 3;
  if (_9 != 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 1, 11);
  goto <bb 15>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _10 = (int) DataIndex_36(D);
  _11 = (int) BlockIndex_34;
  _12 = NvM_BlockDescriptorTable[_11].nvBlockNum;
  _13 = (int) _12;
  _14 = (int) BlockIndex_34;
  _15 = NvM_BlockDescriptorTable[_14].romBlockNum;
  _16 = (int) _15;
  _17 = _13 + _16;
  if (_10 >= _17)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 1, 12);
  goto <bb 15>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _18 = (int) BlockIndex_34;
  _19 = NvM_AdminBlockTable[_18].NvMResult;
  if (_19 == 2)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 1, 21);
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _20 = (int) BlockIndex_34;
  _21 = NvM_BlockDescriptorTable[_20].blockDesc;
  _22 = _21 >> 7;
  _23 = (unsigned char) _22;
  _24 = (unsigned int) _23;
  _25 = _24 & 3;
  if (_25 == 2)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _26 = (int) BlockIndex_34;
  _27 = NvM_AdminBlockTable[_26].NvMResult;
  if (_27 != 2)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _28 = (int) BlockIndex_34;
  NvM_AdminBlockTable[_28].NvMDatasetBlockIndex = DataIndex_36(D);
  # DEBUG BEGIN_STMT
  Result_38 = 0;
  # DEBUG Result => Result_38

  <bb 15> :
  # Result_29 = PHI <Result_35(3), Result_35(5), Result_35(7), Result_35(9), Result_35(11), Result_35(12), Result_35(13), Result_38(14)>
  # DEBUG Result => Result_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _44 = Result_29;
  return _44;

}


NvM_ASR40_GetErrorStatus (NvM_ASR40_BlockIdType BlockId, NvM_ASR40_RequestResultType * RequestResultPtr)
{
  Std_ReturnType Result;
  uint16 BlockIndex;
  short unsigned int NvM_GlobalGenericStatus.29_1;
  unsigned int _2;
  unsigned int _3;
  int _4;
  unsigned char _5;
  Std_ReturnType _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Result_10 = 1;
  # DEBUG Result => Result_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (BlockId_11(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  BlockIndex_15 = NvM_GetBlockIndexForValidId (BlockId_11(D));
  # DEBUG BlockIndex => BlockIndex_15
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  BlockIndex_12 = 0;
  # DEBUG BlockIndex => BlockIndex_12

  <bb 5> :
  # BlockIndex_6 = PHI <BlockIndex_15(3), BlockIndex_12(4)>
  # DEBUG BlockIndex => BlockIndex_6
  # DEBUG BEGIN_STMT
  if (BlockIndex_6 > 8)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 4, 10);
  goto <bb 12>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.29_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.29_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 4, 20);
  goto <bb 12>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (RequestResultPtr_16(D) == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 4, 14);
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _4 = (int) BlockIndex_6;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  *RequestResultPtr_16(D) = _5;
  # DEBUG BEGIN_STMT
  Result_18 = 0;
  # DEBUG Result => Result_18

  <bb 12> :
  # Result_7 = PHI <Result_10(6), Result_10(8), Result_10(10), Result_18(11)>
  # DEBUG Result => Result_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = Result_7;
  return _22;

}


NvM_ProcessBlockCallback ()
{
  unsigned char NvM_CurrentServiceId.24_1;
  unsigned char _2;
  unsigned char NvM_CurrentServiceId.25_3;
  short unsigned int NvM_GlobalBlockNumber.26_4;
  unsigned char NvM_CurrentServiceId.27_5;
  unsigned char NvM_GlobalErrorStatus.28_6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId.24_1 = NvM_CurrentServiceId;
  _2 = NvM_CurrentServiceId.24_1 + 244;
  if (_2 <= 1)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  NvM_CurrentServiceId.25_3 = NvM_CurrentServiceId;
  if (NvM_CurrentServiceId.25_3 == 25)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.26_4 = NvM_GlobalBlockNumber;
  NvM_CurrentServiceId.27_5 = NvM_CurrentServiceId;
  NvM_GlobalErrorStatus.28_6 = NvM_GlobalErrorStatus;
  NvM_InvokeSingleBlockCallback (NvM_GlobalBlockNumber.26_4, NvM_CurrentServiceId.27_5, NvM_GlobalErrorStatus.28_6);

  <bb 5> :
  return;

}


NvM_ProcessCanceledJob ()
{
  uint16 CurrentBlock;
  boolean ExecuteBlockCallback;
  short unsigned int NvM_GlobalGenericStatus.17_1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  short unsigned int NvM_GlobalGenericStatus.18_5;
  short unsigned int _6;
  short unsigned int NvM_Queue_IndexStandard.19_7;
  short unsigned int NvM_Queue_CancelledStandardJobs.20_8;
  short unsigned int NvM_Queue_IndexStandard.21_9;
  short unsigned int NvM_Queue_CancelledStandardJobs.22_10;
  short unsigned int _11;
  unsigned char _12;
  int _13;
  unsigned char _14;
  int _15;
  unsigned char _16;
  int _17;
  unsigned char _18;
  int _19;
  short unsigned int CurrentBlock.23_20;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ExecuteBlockCallback_27 = 0;
  # DEBUG ExecuteBlockCallback => ExecuteBlockCallback_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.17_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.17_1;
  _3 = _2 & 2;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = Nvm_Queue_CheckEmpty ();
  if (_4 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.18_5 = NvM_GlobalGenericStatus;
  _6 = NvM_GlobalGenericStatus.18_5 & 65533;
  NvM_GlobalGenericStatus = _6;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 6;
  # DEBUG BEGIN_STMT
  ExecuteBlockCallback_36 = 1;
  # DEBUG ExecuteBlockCallback => ExecuteBlockCallback_36
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_Queue_IndexStandard.19_7 = NvM_Queue_IndexStandard;
  if (NvM_Queue_IndexStandard.19_7 != 65535)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  NvM_Queue_CancelledStandardJobs.20_8 = NvM_Queue_CancelledStandardJobs;
  if (NvM_Queue_CancelledStandardJobs.20_8 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_Queue_IndexStandard.21_9 = NvM_Queue_IndexStandard;
  NvM_Queue_CancelledStandardJobs.22_10 = NvM_Queue_CancelledStandardJobs;
  _11 = NvM_Queue_IndexStandard.21_9 - NvM_Queue_CancelledStandardJobs.22_10;
  NvM_Queue_IndexStandard = _11;
  # DEBUG BEGIN_STMT
  NvM_Queue_CancelledStandardJobs = 0;
  # DEBUG BEGIN_STMT
  ExecuteBlockCallback_32 = 1;
  # DEBUG ExecuteBlockCallback => ExecuteBlockCallback_32

  <bb 8> :
  # ExecuteBlockCallback_21 = PHI <ExecuteBlockCallback_36(4), ExecuteBlockCallback_27(5), ExecuteBlockCallback_27(6), ExecuteBlockCallback_32(7), ExecuteBlockCallback_27(3)>
  # DEBUG ExecuteBlockCallback => ExecuteBlockCallback_21
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ExecuteBlockCallback_21 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _12 = NvM_AdminBlockTable[0].NvMResult;
  if (_12 == 6)
    goto <bb 16>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  CurrentBlock_38 = 1;
  # DEBUG CurrentBlock => CurrentBlock_38
  goto <bb 15>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _13 = (int) CurrentBlock_22;
  _14 = NvM_AdminBlockTable[_13].NvMResult;
  if (_14 == 6)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  _15 = (int) CurrentBlock_22;
  _16 = NvM_AdminBlockTable[_15].NvMCurrentServiceId;
  if (_16 != 255)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _17 = (int) CurrentBlock_22;
  _18 = NvM_AdminBlockTable[_17].NvMCurrentServiceId;
  NvM_InvokeSingleBlockCallback (CurrentBlock_22, _18, 6);
  # DEBUG BEGIN_STMT
  _19 = (int) CurrentBlock_22;
  NvM_AdminBlockTable[_19].NvMCurrentServiceId = 255;

  <bb 14> :
  # DEBUG BEGIN_STMT
  CurrentBlock.23_20 = CurrentBlock_22;
  CurrentBlock_41 = CurrentBlock.23_20 + 1;
  # DEBUG CurrentBlock => CurrentBlock_41

  <bb 15> :
  # CurrentBlock_22 = PHI <CurrentBlock_38(10), CurrentBlock_41(14)>
  # DEBUG CurrentBlock => CurrentBlock_22
  # DEBUG BEGIN_STMT
  if (CurrentBlock_22 <= 8)
    goto <bb 11>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  return;

}


NvM_MainFunction ()
{
  boolean ExecuteMainFunction;
  uint8 JobEndIndicator;
  short unsigned int NvM_GlobalGenericStatus.3_1;
  unsigned int _2;
  unsigned int _3;
  short unsigned int NvM_GlobalGenericStatus.4_4;
  short unsigned int _5;
  unsigned char NvM_GlobalCallLevel.5_6;
  unsigned char _7;
  short unsigned int NvM_RamBlockCrcCalcCount.6_8;
  unsigned char NvM_CurrentServiceId.7_9;
  short unsigned int NvM_Queue_IndexStandard.8_10;
  unsigned char NvM_GlobalCallLevel.9_11;
  int _12;
  void (*<T59e>) (void) _13;
  unsigned char NvM_GlobalCallLevel.10_14;
  unsigned char NvM_GlobalErrorStatus.11_15;
  unsigned char NvM_GlobalCallLevel.12_16;
  unsigned char NvM_CurrentServiceId.13_17;
  short unsigned int NvM_GlobalBlockNumber.14_18;
  int _19;
  unsigned char _20;
  short unsigned int NvM_GlobalBlockNumber.15_21;
  int _22;
  short unsigned int NvM_GlobalGenericStatus.16_23;
  short unsigned int _24;

  <bb 2> :
  # DEBUG BEGIN_STMT
  JobEndIndicator_34 = 0;
  # DEBUG JobEndIndicator => JobEndIndicator_34
  # DEBUG BEGIN_STMT
  ExecuteMainFunction_35 = 0;
  # DEBUG ExecuteMainFunction => ExecuteMainFunction_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.3_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.3_1;
  _3 = _2 & 5;
  if (_3 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.4_4 = NvM_GlobalGenericStatus;
  _5 = NvM_GlobalGenericStatus.4_4 | 4;
  NvM_GlobalGenericStatus = _5;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ExecuteMainFunction_39 = 1;
  # DEBUG ExecuteMainFunction => ExecuteMainFunction_39

  <bb 4> :
  # ExecuteMainFunction_26 = PHI <ExecuteMainFunction_35(2), ExecuteMainFunction_39(3)>
  # DEBUG ExecuteMainFunction => ExecuteMainFunction_26
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ExecuteMainFunction_26 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_ProcessCanceledJob ();
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.5_6 = NvM_GlobalCallLevel;
  if (NvM_GlobalCallLevel.5_6 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = Nvm_Queue_CheckEmpty ();
  if (_7 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  NvM_RamBlockCrcCalcCount.6_8 = NvM_RamBlockCrcCalcCount;
  if (NvM_RamBlockCrcCalcCount.6_8 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvM_StateMachine_SetNextRequest ();
  # DEBUG BEGIN_STMT
  NvM_PreService_Function ();
  # DEBUG BEGIN_STMT
  JobEndIndicator_48 = 1;
  # DEBUG JobEndIndicator => JobEndIndicator_48
  goto <bb 14>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId.7_9 = NvM_CurrentServiceId;
  if (NvM_CurrentServiceId.7_9 == 5)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  NvM_Queue_IndexStandard.8_10 = NvM_Queue_IndexStandard;
  if (NvM_Queue_IndexStandard.8_10 != 65535)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  NvM_ProcessStandardPriorityJob ();

  <bb 12> :
  # DEBUG BEGIN_STMT
  JobEndIndicator_44 = 1;
  # DEBUG JobEndIndicator => JobEndIndicator_44
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.9_11 = NvM_GlobalCallLevel;
  _12 = (int) NvM_GlobalCallLevel.9_11;
  _13 = NvM_CurrentFunctionPtr[_12];
  _13 ();

  <bb 14> :
  # JobEndIndicator_25 = PHI <JobEndIndicator_44(12), JobEndIndicator_25(13), JobEndIndicator_48(8), JobEndIndicator_34(7)>
  # DEBUG JobEndIndicator => JobEndIndicator_25
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.10_14 = NvM_GlobalCallLevel;
  if (NvM_GlobalCallLevel.10_14 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  NvM_GlobalErrorStatus.11_15 = NvM_GlobalErrorStatus;
  if (NvM_GlobalErrorStatus.11_15 != 2)
    goto <bb 13>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  if (JobEndIndicator_25 == 1)
    goto <bb 17>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 17> :
  NvM_GlobalCallLevel.12_16 = NvM_GlobalCallLevel;
  if (NvM_GlobalCallLevel.12_16 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  NvM_PostService_Function ();
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId.13_17 = NvM_CurrentServiceId;
  if (NvM_CurrentServiceId.13_17 != 5)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  NvM_Queue_RemoveFirstItem ();
  # DEBUG BEGIN_STMT
  NvM_ProcessBlockCallback ();

  <bb 20> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId = 255;
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.14_18 = NvM_GlobalBlockNumber;
  _19 = (int) NvM_GlobalBlockNumber.14_18;
  _20 = NvM_AdminBlockTable[_19].NvMResult;
  if (_20 != 2)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.15_21 = NvM_GlobalBlockNumber;
  _22 = (int) NvM_GlobalBlockNumber.15_21;
  NvM_AdminBlockTable[_22].NvMCurrentServiceId = 255;

  <bb 22> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber = 9;

  <bb 23> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.16_23 = NvM_GlobalGenericStatus;
  _24 = NvM_GlobalGenericStatus.16_23 & 65531;
  NvM_GlobalGenericStatus = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();

  <bb 24> :
  # DEBUG BEGIN_STMT
  return;

}


NvM_Init ()
{
  struct NvM_AdminBlockType * CurrentAdminBlockPtr;
  uint16 i;
  int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  int _5;
  short unsigned int _6;
  int _7;
  short unsigned int _8;
  short unsigned int i.0_9;
  int _10;
  short unsigned int i.1_11;
  short unsigned int NvM_GlobalGenericStatus.2_12;
  short unsigned int _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CurrentAdminBlockPtr_19 = 0B;
  # DEBUG CurrentAdminBlockPtr => CurrentAdminBlockPtr_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus = 0;
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId = 255;
  # DEBUG BEGIN_STMT
  NvM_Queue_IndexStandard = 65535;
  # DEBUG BEGIN_STMT
  NvM_Queue_CancelledStandardJobs = 0;
  # DEBUG BEGIN_STMT
  NvM_InitStoredCrcBuf ();
  # DEBUG BEGIN_STMT
  NvM_MirrorRetryCount = 0;
  # DEBUG BEGIN_STMT
  i_27 = 0;
  # DEBUG i => i_27
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) i_14;
  CurrentAdminBlockPtr_34 = &NvM_AdminBlockTable[_1];
  # DEBUG CurrentAdminBlockPtr => CurrentAdminBlockPtr_34
  # DEBUG BEGIN_STMT
  CurrentAdminBlockPtr_34->NvMDatasetBlockIndex = 0;
  # DEBUG BEGIN_STMT
  CurrentAdminBlockPtr_34->NvMResult = 0;
  # DEBUG BEGIN_STMT
  CurrentAdminBlockPtr_34->NvMDynStatus = 0;
  # DEBUG BEGIN_STMT
  CurrentAdminBlockPtr_34->NvMExtendedStatus = 0;
  # DEBUG BEGIN_STMT
  CurrentAdminBlockPtr_34->NvMCurrentServiceId = 255;
  # DEBUG BEGIN_STMT
  _2 = (int) i_14;
  _3 = NvM_BlockDescriptorTable[_2].blockDesc;
  _4 = _3 & 16;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = (int) i_14;
  _6 = NvM_AdminBlockTable[_5].NvMDynStatus;
  _7 = (int) i_14;
  _8 = _6 | 2;
  NvM_AdminBlockTable[_7].NvMDynStatus = _8;

  <bb 5> :
  # DEBUG BEGIN_STMT
  i.0_9 = i_14;
  i_41 = i.0_9 + 1;
  # DEBUG i => i_41

  <bb 6> :
  # i_14 = PHI <i_27(2), i_41(5)>
  # DEBUG i => i_14
  # DEBUG BEGIN_STMT
  if (i_14 <= 8)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  i_28 = 0;
  # DEBUG i => i_28
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _10 = (int) i_15;
  NvM_CrcQueue[_10] = 0;
  # DEBUG BEGIN_STMT
  i.1_11 = i_15;
  i_33 = i.1_11 + 1;
  # DEBUG i => i_33

  <bb 9> :
  # i_15 = PHI <i_28(7), i_33(8)>
  # DEBUG i => i_15
  # DEBUG BEGIN_STMT
  if (i_15 <= 4)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  NvM_TempRamBlockAddress = 0B;
  # DEBUG BEGIN_STMT
  NvM_RamBlockCrcCalcCount = 0;
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.2_12 = NvM_GlobalGenericStatus;
  _13 = NvM_GlobalGenericStatus.2_12 | 1;
  NvM_GlobalGenericStatus = _13;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


