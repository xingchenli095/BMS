IPA function summary for Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop/380 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       20
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:42 stack: 0

IPA function summary for Com_IsValidConfig.part.0/379 inlinable
  global time:     7.020000
  self size:       10
  global size:     10
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 96] changed)
    size:0.500000, time:0.170000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:0.850000,  nonconst if:(op0[ref offset: 32] changed)
  calls:

IPA function summary for Com_EB_SendSignalGroup.part.0/378 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_SendSignalGroupArray_DETCheck.part.0/377 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_RouteSignalGroup.isra.0/376 inlinable
  global time:     98.104668
  self size:       53
  global size:     53
  min size:       0
  self stack:      0
  global stack:    0
    size:25.000000, time:19.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.375000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:1.875000,  nonconst if:(op1[ref offset: 32] changed)
    size:0.500000, time:0.251250,  executed if:(op1[ref offset: 32] != 0) && (not inlined),  nonconst if:(op1[ref offset: 48] changed) && (op1[ref offset: 32] != 0) && (not inlined)
    size:0.500000, time:0.251250,  executed if:(op1[ref offset: 32] != 0),  nonconst if:(op1[ref offset: 48] changed) && (op1[ref offset: 32] != 0)
    size:1.000000, time:4.568182,  executed if:(op1[ref offset: 32] != 0) && (not inlined)
    size:14.000000, time:55.686758,  executed if:(op1[ref offset: 32] != 0)
  calls:
    Com_EB_RouteReceiveSignalGroup/235 function not considered for inlining
      loop depth: 0 freq:0.25 size: 2 time: 11callee size: 4 stack: 1 predicate: (op1[ref offset: 32] == 0)
    Com_EB_RouteSG_2_SG.isra.0/375 function not considered for inlining
      loop depth: 1 freq:0.82 size: 3 time: 12callee size: 9 stack: 0 predicate: (op1[ref offset: 32] != 0)

IPA function summary for Com_EB_RouteSG_2_SG.isra.0/375 inlinable
  global time:     26.000000
  self size:       18
  global size:     18
  min size:       12
  self stack:      0
  global stack:    0
    size:9.000000, time:9.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_SendSignalGroupArray/206 function not considered for inlining
      loop depth: 0 freq:1.00 size: 6 time: 15callee size: 9 stack: 0
       op4 is compile time invariant

IPA function summary for Com_EB_RouteSignal.isra.0/374 inlinable
  global time:     32.345000
  self size:       33
  global size:     33
  min size:       8
  self stack:      0
  global stack:    0
    size:25.000000, time:20.700000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Com_EB_RouteSignalHelper/232 function not considered for inlining
      loop depth: 0 freq:0.67 size: 4 time: 13callee size:61 stack:23

IPA function summary for Com_EB_RouteSignalHelper_Write.part.0/373 inlinable
  global time:     37.500000
  self size:       21
  global size:     21
  min size:       10
  self stack:      0
  global stack:    0
    size:9.500000, time:9.000000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 144] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 144] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 16] changed)
  calls:
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_WriteDynSignal_ExitArea_0/202 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:22 stack: 0

IPA function summary for Com_EB_SendSignal_Transmit.part.0/372 inlinable
  global time:     27.000000
  self size:       19
  global size:     19
  min size:       10
  self stack:      0
  global stack:    0
    size:8.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 176] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 176] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 32] changed)
  calls:
    Com_EB_Request_Send_Pdu/176 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:13 stack: 0

IPA function summary for Com_EB_Send_Pdu.part.0/371 inlinable
  global time:     10.630000
  self size:       10
  global size:     10
  min size:       4
  self stack:      8
  global stack:    8
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 496] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op0[ref offset: 496] changed)
  calls:
    Com_EB_ClearTxUpdateBits/197 function not considered for inlining
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:33 stack: 0

IPA function summary for Com_EB_HandleTxConfirmations.part.0/370 inlinable
  global time:     22.000000
  self size:       14
  global size:     14
  min size:       6
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 480] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 480] changed)
  calls:
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12

IPA function summary for Com_EB_HandleRxConfirm.isra.0/369 inlinable
  global time:     17.500000
  self size:       12
  global size:     12
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 352] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op1[ref offset: 352] changed)
  calls:
    Com_EB_NotifyReceivers.isra.0/367 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 7 stack: 0
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.50 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Com_EB_WriteShadowBuffer.isra.0/368 inlinable
  global time:     87.387450
  self size:       81
  global size:     81
  min size:       10
  self stack:      1
  global stack:    1
    size:13.500000, time:8.820000
    size:4.500000, time:2.830000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 64] != 0)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 32] != 0)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 240] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 240] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 112] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 112] changed)
    size:25.000000, time:28.110531,  executed if:(op0[ref offset: 128] != 0)
    size:3.000000, time:1.862157,  executed if:(op0[ref offset: 128] != 0),  nonconst if:(op1[ref offset: 0] changed || op0[ref offset: 112] changed) && (op0[ref offset: 128] != 0)
  loop iterations:(op0[ref offset: 128] changed) && (op0[ref offset: 128] != 0)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.04 size: 4 time: 13 predicate: (op0[ref offset: 128] != 0)
    Com_EB_WriteShadowBuffer_Fragment/208 function not considered for inlining
      loop depth: 0 freq:0.27 size: 7 time: 16callee size:13 stack: 0 predicate: (op0[ref offset: 128] != 0)
       op4 is compile time invariant
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_NotifyReceivers.isra.0/367 inlinable
  global time:     59.000000
  self size:       15
  global size:     15
  min size:       24
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_HandleRxSignalGroups.isra.0/353 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:19 stack: 0
    Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack: 1
    Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:19 stack: 1
    Com_EB_HandleRxSignalsWithBuffer.isra.0/366 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:31 stack: 1
    Com_EB_HandlePduRxDM/149 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0

IPA function summary for Com_EB_HandleRxSignalsWithBuffer.isra.0/366 inlinable
  global time:     329.395686
  self size:       63
  global size:     63
  min size:       30
  self stack:      1
  global stack:    1
    size:44.000000, time:176.105507
    size:4.000000, time:10.590909,  executed if:(not inlined)
  calls:
    Com_EB_SetBuffer/13 function not considered for inlining
      loop depth: 1 freq:0.06 size: 2 time: 11callee size:77 stack:22
    Com_EB_CalculateFilter/12 function not considered for inlining
      loop depth: 1 freq:1.64 size: 5 time: 14callee size:36 stack: 0
    Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 function not considered for inlining
      loop depth: 1 freq:8.09 size: 5 time: 14callee size:42 stack: 0
       op2 is compile time invariant
    indirect call loop depth: 1 freq:0.39 size: 3 time: 15

IPA function summary for Com_EB_CalculateGroupSignalTM.isra.0/364 inlinable
  global time:     44.130000
  self size:       51
  global size:     51
  min size:       0
  self stack:      0
  global stack:    0
    size:11.000000, time:11.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 192] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed || op0[ref offset: 192] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:6.000000, time:6.000000,  nonconst if:(op2 changed)
    size:4.000000, time:1.500000,  executed if:(op2 == 0)
    size:6.000000, time:1.660000,  executed if:(op2 != 0)
    size:0.500000, time:0.330000,  executed if:(op2 != 1) && (not inlined)
    size:1.500000, time:0.990000,  executed if:(op2 != 1)
    size:0.500000, time:0.170000,  executed if:(op2 == 1) && (not inlined)
    size:1.500000, time:0.510000,  executed if:(op2 == 1)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.66 size: 3 time: 12 predicate: (op2 != 1)
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.34 size: 3 time: 12 predicate: (op2 == 1)
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.17 size: 3 time: 12 predicate: (op2 != 0)
       op1 is compile time invariant
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.08 size: 3 time: 12 predicate: (op2 == 0)
       op1 is compile time invariant

IPA function summary for Com_EB_CalculateFilter_Bool.isra.0/363 inlinable
  global time:     22.000000
  self size:       14
  global size:     14
  min size:       8
  self stack:      1
  global stack:    1
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed || op1 changed)
  calls:
    Com_EB_FilterBoolean/217 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:37 stack: 0
       op1 is compile time invariant

IPA function summary for Com_CopyRxSignalGroupArray_Array.part.0/362 inlinable
  global time:     20.000000
  self size:       12
  global size:     12
  min size:       10
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Com_CopyRxSignalGroupArray/271 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:13 stack: 0

IPA function summary for Com_CopyRxSignalGroupArray_Shadow.part.0/361 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_CopyRxSignalGroupArray.part.0/360 inlinable
  global time:     21.000000
  self size:       13
  global size:     13
  min size:       8
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 0] changed || op1[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 48] changed)
  calls:
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for Com_EB_InitSGBuffer.isra.0/359 inlinable
  global time:     20.000000
  self size:       12
  global size:     12
  min size:       8
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 128] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 112] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 112] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed || op1[ref offset: 112] changed)
  calls:
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for Com_GetTxSignalGroupCfg.part.0/358 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_GetTxSignalCfg.part.0/357 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_GetRxSignalGroupCfg.part.0/356 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_GetRxSignalCfg.part.0/355 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_CheckMdtforPdu.isra.0/354 inlinable
  global time:     36.020000
  self size:       21
  global size:     21
  min size:       4
  self stack:      0
  global stack:    0
    size:15.000000, time:13.020000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_HandleRxSignalGroups.isra.0/353 inlinable
  global time:     309.625966
  self size:       38
  global size:     38
  min size:       14
  self stack:      0
  global stack:    0
    size:27.000000, time:166.619237
    size:4.000000, time:10.590909,  executed if:(not inlined)
  calls:
    Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 function not considered for inlining
      loop depth: 1 freq:8.09 size: 4 time: 13callee size:36 stack: 0
    indirect call loop depth: 1 freq:1.82 size: 3 time: 15

IPA function summary for Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 inlinable
  global time:     24.111874
  self size:       73
  global size:     73
  min size:       16
  self stack:      0
  global stack:    0
    size:57.500000, time:17.365915
    size:4.500000, time:2.050370,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:0.500000, time:0.250000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.250000,  nonconst if:(op1[ref offset: 0] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.08 size: 1 time: 10
    Com_EB_RxDMSignalGroupQueue.isra.0/329 function not considered for inlining
      loop depth: 0 freq:0.02 size: 3 time: 12callee size: 8 stack: 0
    Com_EB_RxDMSignalGroupQueue.isra.0/329 function not considered for inlining
      loop depth: 0 freq:0.03 size: 3 time: 12callee size: 8 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.08 size: 1 time: 10

IPA function summary for Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 inlinable
  global time:     227.454547
  self size:       26
  global size:     26
  min size:       8
  self stack:      1
  global stack:    1
    size:14.000000, time:115.272728
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 192] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 192] changed || op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 192] changed || op0[ref offset: 160] changed)
  loop iterations:(op0[ref offset: 192] changed || op0[ref offset: 128] changed || op0[ref offset: 160] changed)
  calls:
    Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop/380 function not considered for inlining
      loop depth: 1 freq:8.09 size: 4 time: 13callee size: 4 stack: 0
       op1 change 12.350000% of time
       op2 is compile time invariant

IPA function summary for Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 inlinable
  global time:     328.180002
  self size:       39
  global size:     39
  min size:       16
  self stack:      1
  global stack:    1
    size:25.500000, time:165.598183
    size:3.500000, time:6.045455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 144] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 144] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 160] changed)
  loop iterations:(op0[ref offset: 144] changed || op0[ref offset: 160] changed)
  calls:
    Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 function not considered for inlining
      loop depth: 1 freq:8.09 size: 5 time: 14callee size:42 stack: 0
       op2 is compile time invariant
    indirect call loop depth: 1 freq:2.75 size: 3 time: 15

IPA function summary for Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 inlinable
  global time:     25.861016
  self size:       85
  global size:     85
  min size:       18
  self stack:      0
  global stack:    0
    size:69.000000, time:19.015702
    size:5.000000, time:2.536964,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 128] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.05 size: 1 time: 10
    Com_EB_RxDMSignalQueue.isra.0/330 function not considered for inlining
      loop depth: 0 freq:0.03 size: 3 time: 12callee size: 6 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10
    Com_EB_RxDMSignalQueue.isra.0/330 function not considered for inlining
      loop depth: 0 freq:0.03 size: 3 time: 12callee size: 6 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.08 size: 1 time: 10

IPA function summary for Com_EB_MdtQueue.isra.0/345 inlinable
  global time:     38.000000
  self size:       21
  global size:     21
  min size:       4
  self stack:      0
  global stack:    0
    size:15.000000, time:15.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_TxDM_TMNone.part.0/344 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       8
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 416] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 416] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 432] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 432] changed)
  calls:
    Com_EB_TxDMQueue/194 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:10 stack: 0

IPA function summary for Com_EB_FilterUint64.part.0/343 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       6
  self stack:      6
  global stack:    6
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:

IPA function summary for Com_EB_FilterSint64.part.0/342 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       6
  self stack:      6
  global stack:    6
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Com_EB_FilterOneEveryN/216 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:11 stack: 0

IPA function summary for Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 inlinable
  global time:     65.000000
  self size:       30
  global size:     30
  min size:       24
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:21 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:21 stack: 0
       op2 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 inlinable
  global time:     65.000000
  self size:       30
  global size:     30
  min size:       24
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:21 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:21 stack: 0
       op2 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 inlinable
  global time:     65.000000
  self size:       30
  global size:     30
  min size:       24
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:26 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:26 stack: 0
       op2 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 inlinable
  global time:     65.000000
  self size:       30
  global size:     30
  min size:       24
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:26 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:26 stack: 0
       op2 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 inlinable
  global time:     65.000000
  self size:       30
  global size:     30
  min size:       24
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:25 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:25 stack: 0
       op2 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 inlinable
  global time:     65.000000
  self size:       30
  global size:     30
  min size:       24
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:25 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:25 stack: 0
       op2 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 inlinable
  global time:     65.000000
  self size:       30
  global size:     30
  min size:       24
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:30 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:30 stack: 0
       op2 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 inlinable
  global time:     65.000000
  self size:       30
  global size:     30
  min size:       24
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:30 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:30 stack: 0
       op2 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_ReceiveSignalGroup_Replace.isra.0/333 inlinable
  global time:     17.500000
  self size:       34
  global size:     34
  min size:       0
  self stack:      0
  global stack:    0
    size:30.000000, time:14.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Com_EB_Read_SignalExt.part.0/332 inlinable
  global time:     24.000000
  self size:       13
  global size:     13
  min size:       14
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_GetSendSignalRetVal.isra.0/331 inlinable
  global time:     11.000000
  self size:       12
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:9.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_RxDMSignalQueue.isra.0/330 inlinable
  global time:     11.000000
  self size:       12
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:8.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Com_EB_RxDMSignalGroupQueue.isra.0/329 inlinable
  global time:     16.000000
  self size:       17
  global size:     17
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:13.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Com_EB_RxDMQueue.isra.0/328 inlinable
  global time:     11.000000
  self size:       12
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:8.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327 inlinable
  global time:     45.000000
  self size:       28
  global size:     28
  min size:       20
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:30 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:30 stack: 0
       op2 is compile time invariant

IPA function summary for Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326 inlinable
  global time:     45.000000
  self size:       28
  global size:     28
  min size:       20
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:30 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:30 stack: 0
       op2 is compile time invariant

IPA function summary for Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325 inlinable
  global time:     45.000000
  self size:       28
  global size:     28
  min size:       20
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:25 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:25 stack: 0
       op2 is compile time invariant

IPA function summary for Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324 inlinable
  global time:     45.000000
  self size:       28
  global size:     28
  min size:       20
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:25 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:25 stack: 0
       op2 is compile time invariant

IPA function summary for Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323 inlinable
  global time:     45.000000
  self size:       28
  global size:     28
  min size:       20
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:26 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:26 stack: 0
       op2 is compile time invariant

IPA function summary for Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322 inlinable
  global time:     45.000000
  self size:       28
  global size:     28
  min size:       20
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:26 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:26 stack: 0
       op2 is compile time invariant

IPA function summary for Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321 inlinable
  global time:     45.000000
  self size:       28
  global size:     28
  min size:       20
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:21 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:21 stack: 0
       op2 is compile time invariant

IPA function summary for Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320 inlinable
  global time:     45.000000
  self size:       28
  global size:     28
  min size:       20
  self stack:      26
  global stack:    26
    size:14.000000, time:14.000000
    size:4.000000, time:3.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:21 stack: 0
       op2 is compile time invariant
    Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:21 stack: 0
       op2 is compile time invariant

IPA function summary for Com_StartOfReception/300 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_CopyRxData/299 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_CopyTxData/298 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_GetStatus/297 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_DeInit/296 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_GetVersionInfo/295 inlinable
  global time:     10.568700
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.500000, time:2.064250,  executed if:(op0 != 0B) && (not inlined)
    size:2.500000, time:2.064250,  executed if:(op0 != 0B)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_UpdateShadowSignal/294 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SendSignal/278 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:27 stack: 6

IPA function summary for Com_TpTxConfirmation/293 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_TpRxIndication/276 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 1 stack: 0

IPA function summary for Com_TxConfirmation/292 inlinable
  global time:     22.350000
  self size:       27
  global size:     27
  min size:       26
  self stack:      0
  global stack:    0
    size:10.000000, time:6.685000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.335000,  nonconst if:(op0 changed)
  calls:
    Com_EB_HlpTxConfirmation/291 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:44 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_HlpTxConfirmation/291 inlinable
  global time:     60.055400
  self size:       89
  global size:     89
  min size:       36
  self stack:      0
  global stack:    0
    size:60.500000, time:28.718000
    size:5.500000, time:2.879500,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 496] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op1[ref offset: 496] changed)
  calls:
    Com_EB_HandleTxConfirmations/290 function not considered for inlining
      loop depth: 0 freq:0.20 size: 2 time: 11callee size: 5 stack: 0
    Com_EB_TxDM_TMNone/195 function not considered for inlining
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:13 stack: 0
    Com_EB_HandleTxConfirmations/290 function not considered for inlining
      loop depth: 0 freq:0.45 size: 2 time: 11callee size: 5 stack: 0
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.45 size: 3 time: 12
       op1 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1/319 function body not available
      loop depth: 0 freq:0.10 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1/318 function body not available
      loop depth: 0 freq:0.10 size: 1 time: 10
    Com_EB_MdtQueue.isra.0/345 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:10 stack: 0
    Com_EB_ClearTxUpdateBits/197 function not considered for inlining
      loop depth: 0 freq:0.20 size: 2 time: 11callee size:33 stack: 0

IPA function summary for Com_EB_HandleTxConfirmations/290 inlinable
  global time:     17.000000
  self size:       11
  global size:     11
  min size:       8
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 496] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 496] changed)
  calls:
    Com_EB_HandleTxConfirmations.part.0/370 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 7 stack: 0
    Com_EB_TxConfirmations/196 function not considered for inlining
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:10 stack: 0

IPA function summary for Com_TriggerTransmit/289 inlinable
  global time:     36.258812
  self size:       84
  global size:     84
  min size:       0
  self stack:      8
  global stack:    8
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:0.500000, time:0.412850,  executed if:(op1 != 0B) && (not inlined)
    size:3.500000, time:2.889950,  executed if:(op1 != 0B)
    size:0.500000, time:0.276610,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:1.383048,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:36.000000, time:9.876320,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:2.000000, time:0.612103,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:1.000000, time:0.100997,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
  calls:
    Com_EB_ClearTxUpdateBits/197 function not considered for inlining
      loop depth: 0 freq:0.02 size: 2 time: 11callee size:33 stack: 0 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.10 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.10 size: 4 time: 13 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.10 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.15 size: 5 time: 14 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14 predicate: (op1[ref offset: 0] == 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.27 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.20 size: 5 time: 17predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)

IPA function summary for Com_TriggerIPDUSend/288 inlinable
  global time:     26.169000
  self size:       38
  global size:     38
  min size:       32
  self stack:      0
  global stack:    0
    size:18.000000, time:10.617900
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.448900,  nonconst if:(op0 changed)
  calls:
    Com_EB_Send_Pdu/180 function not considered for inlining
      loop depth: 0 freq:0.22 size: 3 time: 12callee size:19 stack: 8
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.22 size: 3 time: 12
       op1 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_SwitchIpduTxMode/287 inlinable
  global time:     25.945897
  self size:       44
  global size:     44
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:11.000000, time:1.899386,  executed if:(op1 <= 1)
    size:2.000000, time:0.242945,  executed if:(op1 <= 1),  nonconst if:(op1 changed) && (op1 <= 1)
    size:1.000000, time:0.080172,  executed if:(op1 != 1) && (op1 <= 1)
    size:1.000000, time:0.041301,  executed if:(op1 == 1) && (op1 <= 1)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.18 size: 1 time: 10 predicate: (op1 <= 1)
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.18 size: 1 time: 10 predicate: (op1 <= 1)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.26 size: 5 time: 14 predicate: (op1 > 1)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ComXf_TxPrepareBuffer/286 inlinable
  global time:     21.375280
  self size:       23
  global size:     23
  min size:       8
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.400000,  nonconst if:(op2 changed)
    size:7.000000, time:0.991760,  executed if:(op2 == 1)
  calls:
    Com_EB_InitSGBuffer.isra.0/359 function not considered for inlining
      loop depth: 0 freq:0.14 size: 5 time: 14callee size: 6 stack: 0 predicate: (op2 == 1)
    Com_GetTxSignalGroupCfg/282 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op1 is compile time invariant

IPA function summary for Com_SendSignalGroupArray/285 inlinable
  global time:     18.000000
  self size:       10
  global size:     10
  min size:       14
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SetupTxSignalGroup_DET/283 function not considered for inlining
      loop depth: 0 freq:1.00 size: 7 time: 16callee size: 9 stack: 1
       op2 is compile time invariant
       op4 is compile time invariant

IPA function summary for Com_SendSignalGroup/284 inlinable
  global time:     18.000000
  self size:       10
  global size:     10
  min size:       14
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SetupTxSignalGroup_DET/283 function not considered for inlining
      loop depth: 0 freq:1.00 size: 7 time: 16callee size: 9 stack: 1
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op4 is compile time invariant

IPA function summary for Com_SetupTxSignalGroup_DET/283 inlinable
  global time:     27.555200
  self size:       18
  global size:     18
  min size:       22
  self stack:      1
  global stack:    1
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SetupTxSignalGroup/213 function not considered for inlining
      loop depth: 0 freq:0.53 size: 7 time: 16callee size:10 stack: 0
       op4 is compile time invariant
       op5 is compile time invariant
    Com_GetTxSignalGroupCfg/282 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0

IPA function summary for Com_GetTxSignalGroupCfg/282 inlinable
  global time:     15.120550
  self size:       22
  global size:     22
  min size:       16
  self stack:      0
  global stack:    0
    size:10.000000, time:8.409169
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.693056,  nonconst if:(op0 changed)
  calls:
    Com_GetTxSignalGroupCfg.part.0/358 function not considered for inlining
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 4 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_GetTxSignalCfg/281 inlinable
  global time:     15.120550
  self size:       22
  global size:     22
  min size:       16
  self stack:      0
  global stack:    0
    size:10.000000, time:8.409169
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.693056,  nonconst if:(op0 changed)
  calls:
    Com_GetTxSignalCfg.part.0/357 function not considered for inlining
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 4 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ComXf_GetTxSGId/280 inlinable
  global time:     17.812500
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:2.812500
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_GetTxSignalCfg/281 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op1 is compile time invariant

IPA function summary for Com_SendDynSignal/279 inlinable
  global time:     40.864110
  self size:       47
  global size:     47
  min size:       8
  self stack:      6
  global stack:    6
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.625000,  nonconst if:(op1 changed)
    size:13.000000, time:5.807606,  executed if:(op1 != 0B)
  calls:
    Com_EB_WriteDynSignal_ExitArea_0/202 function not considered for inlining
      loop depth: 0 freq:0.24 size: 4 time: 13callee size:22 stack: 0 predicate: (op1 != 0B)
       op2 is compile time invariant
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.24 size: 1 time: 10 predicate: (op1 != 0B)
    Com_GetSendSignalRetVal.isra.0/331 function not considered for inlining
      loop depth: 0 freq:0.24 size: 3 time: 12callee size: 6 stack: 0 predicate: (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.24 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.25 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_GetTxSignalCfg/281 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op1 is compile time invariant

IPA function summary for Com_SendSignal/278 inlinable
  global time:     50.655386
  self size:       54
  global size:     54
  min size:       8
  self stack:      6
  global stack:    6
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.625000,  nonconst if:(op1 changed)
    size:18.000000, time:11.055454,  executed if:(op1 != 0B)
  calls:
    Com_GetSendSignalRetVal.isra.0/331 function not considered for inlining
      loop depth: 0 freq:0.56 size: 3 time: 12callee size: 6 stack: 0 predicate: (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.09 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_GetTxSignalCfg/281 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:0.56 size: 7 time: 19predicate: (op1 != 0B)

IPA function summary for Com_TpRxIndication/276 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_RxIndication/275 inlinable
  global time:     31.222775
  self size:       92
  global size:     92
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op1 changed)
    size:0.500000, time:0.276610,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:1.383048,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:40.000000, time:7.173630,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:2.000000, time:0.378522,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:1.000000, time:0.072470,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
  calls:
    Com_EB_HandleRxConfirm.isra.0/369 function not considered for inlining
      loop depth: 0 freq:0.07 size: 3 time: 12callee size: 6 stack: 0 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.04 size: 3 time: 12 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1/319 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.07 size: 4 time: 13 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1/318 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.15 size: 5 time: 14 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14 predicate: (op1[ref offset: 0] == 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.12 size: 6 time: 18predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)

IPA function summary for Com_ComXf_Get_RxSignalGroupSize/274 inlinable
  global time:     17.700000
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:2.700000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_GetRxSignalGroupCfg/266 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op1 is compile time invariant

IPA function summary for Com_ReceiveSignalGroupArray/273 inlinable
  global time:     24.341419
  self size:       29
  global size:     29
  min size:       0
  self stack:      12
  global stack:    12
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:2.000000, time:1.795800,  executed if:(op2 != 0B),  nonconst if:(op1 changed) && (op2 != 0B)
    size:3.500000, time:2.553403,  executed if:(op1 != 0B) && (op2 != 0B)
    size:0.500000, time:0.364772,  executed if:(op1 != 0B) && (op2 != 0B) && (not inlined),  nonconst if:(op2[ref offset: 0] changed) && (op1 != 0B) && (op2 != 0B) && (not inlined)
    size:0.500000, time:0.364772,  executed if:(op1 != 0B) && (op2 != 0B),  nonconst if:(op2[ref offset: 0] changed) && (op1 != 0B) && (op2 != 0B)
    size:0.500000, time:0.364772,  executed if:(op1 != 0B) && (op2 != 0B) && (not inlined)
    size:0.500000, time:0.084178,  executed if:(op1 == 0B) && (op2 != 0B) && (not inlined)
    size:0.500000, time:0.084178,  executed if:(op1 == 0B) && (op2 != 0B)
  calls:
    Com_SetupRxSignalGroup_DET/267 function not considered for inlining
      loop depth: 0 freq:0.73 size: 6 time: 15callee size: 8 stack: 1 predicate: (op1 != 0B) && (op2 != 0B)
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14 predicate: (op1 == 0B) && (op2 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14 predicate: (op2 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ReceiveSignalGroup/272 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       12
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SetupRxSignalGroup_DET/267 function not considered for inlining
      loop depth: 0 freq:1.00 size: 6 time: 15callee size: 8 stack: 1
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_CopyRxSignalGroupArray/271 inlinable
  global time:     48.160000
  self size:       26
  global size:     26
  min size:       28
  self stack:      0
  global stack:    0
    size:5.000000, time:4.150000
    size:4.000000, time:2.830000,  executed if:(not inlined)
    size:0.500000, time:0.330000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 80] changed) && (not inlined)
    size:0.500000, time:0.330000,  nonconst if:(op2[ref offset: 80] changed)
    size:0.500000, time:0.330000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.330000,  nonconst if:(op1[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 80] changed || op1[ref offset: 32] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.66 size: 1 time: 10
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.66 size: 4 time: 13
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.66 size: 1 time: 10
    Com_CopyRxSignalGroupArray.part.0/360 function not considered for inlining
      loop depth: 0 freq:0.34 size: 4 time: 13callee size: 6 stack: 0
    Com_ReceiveSignalGroup_Replace.isra.0/333 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:17 stack: 0

IPA function summary for Com_CopyRxSignalGroupArray_Shadow/270 inlinable
  global time:     19.300000
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.320000,  executed if:(op2[ref offset: 16] != 65535)
  calls:
    Com_CopyRxSignalGroupArray/271 function not considered for inlining
      loop depth: 0 freq:0.66 size: 5 time: 14callee size:13 stack: 0 predicate: (op2[ref offset: 16] != 65535)
    Com_CopyRxSignalGroupArray_Shadow.part.0/361 function not considered for inlining
      loop depth: 0 freq:0.34 size: 2 time: 11callee size: 4 stack: 0 predicate: (op2[ref offset: 16] == 65535)

IPA function summary for Com_CopyRxSignalGroupArray_Array/269 inlinable
  global time:     20.500000
  self size:       18
  global size:     18
  min size:       20
  self stack:      0
  global stack:    0
    size:0.500000, time:0.250000
    size:3.500000, time:2.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 48] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1[ref offset: 64] changed || op2[ref offset: 48] changed)
  calls:
    Com_CopyRxSignalGroupArray_Array.part.0/362 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size: 6 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.50 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_SetupRxSignalGroup/268 inlinable
  global time:     36.500000
  self size:       26
  global size:     26
  min size:       16
  self stack:      0
  global stack:    0
    size:12.500000, time:12.250000
    size:3.500000, time:2.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 8 time: 20

IPA function summary for Com_SetupRxSignalGroup_DET/267 inlinable
  global time:     26.485800
  self size:       16
  global size:     16
  min size:       18
  self stack:      1
  global stack:    1
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SetupRxSignalGroup/268 function not considered for inlining
      loop depth: 0 freq:0.53 size: 5 time: 14callee size:13 stack: 0
       op0 is compile time invariant
    Com_GetRxSignalGroupCfg/266 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0

IPA function summary for Com_GetRxSignalGroupCfg/266 inlinable
  global time:     15.120550
  self size:       22
  global size:     22
  min size:       16
  self stack:      0
  global stack:    0
    size:10.000000, time:8.409169
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.693056,  nonconst if:(op0 changed)
  calls:
    Com_GetRxSignalGroupCfg.part.0/356 function not considered for inlining
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 4 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ComXf_GetRxSGId/264 inlinable
  global time:     17.812500
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:2.812500
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_GetRxSignalCfg/261 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op1 is compile time invariant

IPA function summary for Com_ReceiveDynSignal/263 inlinable
  global time:     39.378108
  self size:       57
  global size:     57
  min size:       8
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.625000,  nonconst if:(op1 changed)
    size:2.000000, time:1.459088,  executed if:(op1 != 0B),  nonconst if:(op2 changed) && (op1 != 0B)
    size:22.000000, time:7.278506,  executed if:(op2 != 0B) && (op1 != 0B)
  calls:
    Com_EB_ReadValue_Uint8Dyn/256 function not considered for inlining
      loop depth: 0 freq:0.32 size: 7 time: 16callee size:22 stack: 0 predicate: (op2 != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14 predicate: (op2 != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.07 size: 5 time: 14 predicate: (op2 == 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_GetRxSignalCfg/261 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op1 is compile time invariant

IPA function summary for Com_ReceiveSignal/262 inlinable
  global time:     41.275367
  self size:       57
  global size:     57
  min size:       8
  self stack:      1
  global stack:    1
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.400000,  nonconst if:(op1 changed)
    size:22.000000, time:9.236880,  executed if:(op1 != 0B)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.09 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_GetRxSignalCfg/261 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:11 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:0.37 size: 7 time: 19predicate: (op1 != 0B)

IPA function summary for Com_GetRxSignalCfg/261 inlinable
  global time:     15.120550
  self size:       22
  global size:     22
  min size:       16
  self stack:      0
  global stack:    0
    size:10.000000, time:8.409169
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.693056,  nonconst if:(op0 changed)
  calls:
    Com_GetRxSignalCfg.part.0/355 function not considered for inlining
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 4 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_Read_SignalExt/260 inlinable
  global time:     36.774784
  self size:       37
  global size:     37
  min size:       20
  self stack:      0
  global stack:    0
    size:9.000000, time:4.380000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.330000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 96] changed) && (not inlined)
    size:2.500000, time:1.650000,  nonconst if:(op2[ref offset: 96] changed)
    size:0.500000, time:0.170000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:1.500000, time:0.510000,  nonconst if:(op2[ref offset: 144] changed)
    size:0.500000, time:0.170000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.510000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    Com_EB_Read_SignalExt.part.0/332 function not considered for inlining
      loop depth: 0 freq:0.34 size: 5 time: 14callee size: 6 stack: 0 predicate: (op2[ref offset: 96] == 65535)
    Com_EB_Read_SignalExt_SigBuffer/258 function not considered for inlining
      loop depth: 0 freq:0.32 size: 3 time: 12callee size:43 stack: 0 predicate: (op2[ref offset: 96] != 65535)
    Com_EB_Read_SignalReplace/259 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 9 stack: 0
    indirect call loop depth: 0 freq:0.34 size: 7 time: 19

IPA function summary for Com_EB_Read_SignalReplace/259 inlinable
  global time:     26.000000
  self size:       19
  global size:     19
  min size:       8
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 112] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 112] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 144] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 144] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 112] != 0)
  calls:
    Com_EB_CheckRxSignalDM/257 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:15 stack: 0

IPA function summary for Com_EB_Read_SignalExt_SigBuffer/258 inlinable
  global time:     19.000000
  self size:       86
  global size:     86
  min size:       0
  self stack:      0
  global stack:    0
    size:47.500000, time:5.937500
    size:6.500000, time:2.437500,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:18.500000, time:8.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:3.500000, time:0.437500,  executed if:(not inlined),  nonconst if:(op1[ref offset: 96] changed) && (not inlined)
    size:9.500000, time:1.187500,  nonconst if:(op1[ref offset: 96] changed)
  calls:

IPA function summary for Com_EB_CheckRxSignalDM/257 inlinable
  global time:     13.000000
  self size:       31
  global size:     31
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:7.500000, time:5.500000,  nonconst if:(op0[ref offset: 96] changed)
    size:0.500000, time:0.125000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:3.500000, time:0.875000,  nonconst if:(op0[ref offset: 48] changed)
  calls:

IPA function summary for Com_EB_ReadValue_Uint8Dyn/256 inlinable
  global time:     42.873184
  self size:       45
  global size:     45
  min size:       26
  self stack:      0
  global stack:    0
    size:17.000000, time:8.702992
    size:4.000000, time:2.744400,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:0.500000, time:0.244400,  executed if:(not inlined),  nonconst if:(op2[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.244400,  nonconst if:(op2[ref offset: 64] changed)
    size:1.000000, time:0.488800,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 64] changed)
    size:1.000000, time:0.488800,  nonconst if:(op4 changed)
    size:0.500000, time:0.255600,  executed if:(not inlined),  nonconst if:(op3[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.255600,  nonconst if:(op3[ref offset: 48] changed)
    size:1.000000, time:0.511200,  nonconst if:(op2[ref offset: 16] changed || op3[ref offset: 48] changed)
    size:0.500000, time:0.255600,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.255600,  nonconst if:(op1[ref offset: 0] changed)
    size:2.000000, time:1.022400,  nonconst if:(op2[ref offset: 16] changed || op3[ref offset: 48] changed || op1[ref offset: 0] changed)
    size:0.500000, time:0.084348,  executed if:(not inlined),  nonconst if:(op3[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.084348,  nonconst if:(op3[ref offset: 0] changed)
    size:1.000000, time:0.168696,  nonconst if:(op2[ref offset: 16] changed || op3[ref offset: 0] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.49 size: 1 time: 10
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.16 size: 4 time: 13
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.49 size: 1 time: 10
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.17 size: 4 time: 13
    Com_EB_Read_SignalReplace/259 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 9 stack: 0

IPA function summary for Com_ReceiveShadowSignal/255 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_ReceiveSignal/262 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:28 stack: 1

IPA function summary for Com_MainFunctionTx/254 inlinable
  global time:     50.374546
  self size:       13
  global size:     13
  min size:       4
  self stack:      0
  global stack:    0
    size:8.000000, time:18.114546
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_MainFunctionTx_hlp/253 function not considered for inlining
      loop depth: 1 freq:2.75 size: 2 time: 11callee size:33 stack: 0

IPA function summary for Com_EB_MainFunctionTx_hlp/253 inlinable
  global time:     51.951600
  self size:       66
  global size:     66
  min size:       50
  self stack:      0
  global stack:    0
    size:37.000000, time:20.943400
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_HandleDeferredTxConfirm/251 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack: 0
    Com_EB_Handle_Send_Pdu/252 function not considered for inlining
      loop depth: 0 freq:0.33 size: 5 time: 14callee size:11 stack: 0
    Com_EB_CheckPeriodicSendforPdu/247 function not considered for inlining
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:36 stack: 0
    Com_EB_CheckNTimesSendforPdu/248 function not considered for inlining
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:30 stack: 0
    Com_EB_CheckTxDMforPdu/250 function not considered for inlining
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:28 stack: 0
    Com_EB_CheckTMSforPdu/245 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:11 stack: 0
    Com_EB_CheckMdtforPdu.isra.0/354 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:10 stack: 0

IPA function summary for Com_EB_Handle_Send_Pdu/252 inlinable
  global time:     17.078000
  self size:       23
  global size:     23
  min size:       12
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:6.500000, time:5.000000,  nonconst if:(op2[ref offset: 0] changed)
    size:4.000000, time:1.670000,  nonconst if:(op3 changed)
  calls:
    Com_EB_Send_Pdu/180 function not considered for inlining
      loop depth: 0 freq:0.28 size: 3 time: 12callee size:19 stack: 8
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.28 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.10 size: 3 time: 12 predicate: (op3 == 1)
       op1 is compile time invariant

IPA function summary for Com_EB_HandleDeferredTxConfirm/251 inlinable
  global time:     16.625000
  self size:       27
  global size:     27
  min size:       10
  self stack:      0
  global stack:    0
    size:11.000000, time:4.830000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 496] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 496] changed)
    size:0.500000, time:0.250000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 480] changed) && (not inlined)
    size:3.500000, time:1.750000,  nonconst if:(op0[ref offset: 480] changed)
  calls:
    Com_EB_TxConfirmations/196 function not considered for inlining
      loop depth: 0 freq:0.17 size: 2 time: 11callee size:10 stack: 0
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.17 size: 3 time: 12

IPA function summary for Com_EB_CheckTxDMforPdu/250 inlinable
  global time:     121.171855
  self size:       56
  global size:     56
  min size:       18
  self stack:      0
  global stack:    0
    size:39.500000, time:51.130909
    size:5.500000, time:5.430909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 432] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 432] changed)
  calls:
    Com_EB_TxDM_TMNone/195 function not considered for inlining
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:13 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.34 size: 1 time: 10
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.66 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    indirect call loop depth: 1 freq:2.75 size: 3 time: 15

IPA function summary for Com_EB_CheckNTimesSendforPdu/248 inlinable
  global time:     49.532553
  self size:       60
  global size:     60
  min size:       12
  self stack:      0
  global stack:    0
    size:46.500000, time:20.738112
    size:5.500000, time:2.504926,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 368] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 368] changed)
  calls:
    Com_EB_NTimesSendQueue/177 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:10 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_CheckPeriodicSendforPdu/247 inlinable
  global time:     55.740058
  self size:       73
  global size:     73
  min size:       18
  self stack:      0
  global stack:    0
    size:55.000000, time:24.080726
    size:7.000000, time:2.941100,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 352] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 352] changed)
  calls:
    Com_EB_TxDMQueue/194 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:10 stack: 0
    Com_EB_PeriodicSendQueue/179 function not considered for inlining
      loop depth: 0 freq:0.20 size: 3 time: 12callee size: 7 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_TMSwitch/246 inlinable
  global time:     36.130209
  self size:       85
  global size:     85
  min size:       50
  self stack:      0
  global stack:    0
    size:25.000000, time:7.788708
    size:5.000000, time:2.128576,  executed if:(not inlined)
    size:6.000000, time:2.666800,  nonconst if:(op2 changed)
    size:0.500000, time:0.330000,  executed if:(op2 != 1) && (not inlined),  nonconst if:(op1[ref offset: 504] changed) && (op2 != 1) && (not inlined)
    size:1.500000, time:0.990000,  executed if:(op2 != 1),  nonconst if:(op1[ref offset: 504] changed) && (op2 != 1)
    size:0.500000, time:0.170000,  executed if:(op2 == 1) && (not inlined),  nonconst if:(op1[ref offset: 504] changed) && (op2 == 1) && (not inlined)
    size:1.500000, time:0.510000,  executed if:(op2 == 1),  nonconst if:(op1[ref offset: 504] changed) && (op2 == 1)
    size:14.000000, time:4.000000,  nonconst if:(op2 changed || op1[ref offset: 504] changed)
    size:1.000000, time:0.110022,  executed if:(op2 != 1) && (not inlined),  nonconst if:(op1[ref offset: 336] changed) && (op2 != 1) && (not inlined)
    size:1.000000, time:0.110022,  executed if:(op2 != 1),  nonconst if:(op1[ref offset: 336] changed) && (op2 != 1)
    size:1.000000, time:0.056678,  executed if:(op2 == 1) && (not inlined),  nonconst if:(op1[ref offset: 320] changed) && (op2 == 1) && (not inlined)
    size:1.000000, time:0.056678,  executed if:(op2 == 1),  nonconst if:(op1[ref offset: 320] changed) && (op2 == 1)
    size:2.000000, time:0.333400,  nonconst if:(op2 changed || op1[ref offset: 336] changed || op1[ref offset: 320] changed)
  calls:
    Com_EB_TxDMQueue/194 function not considered for inlining
      loop depth: 0 freq:0.02 size: 4 time: 13callee size:10 stack: 0
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.11 size: 3 time: 12
       op1 is compile time invariant
    Com_EB_PeriodicSendQueue/179 function not considered for inlining
      loop depth: 0 freq:0.11 size: 3 time: 12callee size: 7 stack: 0
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.17 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.17 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.17 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Com_EB_CheckTMSforPdu/245 inlinable
  global time:     17.395000
  self size:       22
  global size:     22
  min size:       16
  self stack:      0
  global stack:    0
    size:11.000000, time:8.765000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_TMSwitch/246 function not considered for inlining
      loop depth: 0 freq:0.25 size: 5 time: 14callee size:42 stack: 0
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Com_MainFunctionRx/244 inlinable
  global time:     55.167783
  self size:       37
  global size:     37
  min size:       20
  self stack:      0
  global stack:    0
    size:24.000000, time:30.618400
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_CheckRxSignalGroupDMTable/243 function not considered for inlining
      loop depth: 0 freq:0.20 size: 1 time: 10callee size:31 stack: 0
    Com_EB_CheckRxSignalDMTable/242 function not considered for inlining
      loop depth: 0 freq:0.20 size: 1 time: 10callee size:31 stack: 0
    Com_EB_CheckRxDMTable/241 function not considered for inlining
      loop depth: 0 freq:0.20 size: 1 time: 10callee size:30 stack: 0
    Com_EB_NotifyReceivers.isra.0/367 function not considered for inlining
      loop depth: 1 freq:0.54 size: 2 time: 11callee size: 7 stack: 0
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:0.54 size: 3 time: 12
       op1 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.20 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.20 size: 1 time: 10

IPA function summary for Com_EB_CheckRxSignalGroupDMTable/243 inlinable
  global time:     552.017936
  self size:       63
  global size:     63
  min size:       26
  self stack:      0
  global stack:    0
    size:47.000000, time:325.718358
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:3.58 size: 1 time: 10
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:1.84 size: 1 time: 10
    Com_EB_RxDMSignalGroupQueue.isra.0/329 function not considered for inlining
      loop depth: 1 freq:1.84 size: 3 time: 12callee size: 8 stack: 0
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 1 freq:1.84 size: 3 time: 12
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:2.67 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 1 freq:8.09 size: 1 time: 10
    indirect call loop depth: 1 freq:1.22 size: 3 time: 15

IPA function summary for Com_EB_CheckRxSignalDMTable/242 inlinable
  global time:     552.017936
  self size:       63
  global size:     63
  min size:       26
  self stack:      0
  global stack:    0
    size:47.000000, time:325.718358
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:3.58 size: 1 time: 10
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:1.84 size: 1 time: 10
    Com_EB_RxDMSignalQueue.isra.0/330 function not considered for inlining
      loop depth: 1 freq:1.84 size: 3 time: 12callee size: 6 stack: 0
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 1 freq:1.84 size: 3 time: 12
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:2.67 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 1 freq:8.09 size: 1 time: 10
    indirect call loop depth: 1 freq:1.22 size: 3 time: 15

IPA function summary for Com_EB_CheckRxDMTable/241 inlinable
  global time:     605.679307
  self size:       61
  global size:     61
  min size:       20
  self stack:      0
  global stack:    0
    size:48.000000, time:326.188784
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:4.55 size: 1 time: 10
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:0.87 size: 1 time: 10
    Com_EB_RxDMQueue.isra.0/328 function not considered for inlining
      loop depth: 1 freq:0.87 size: 3 time: 12callee size: 6 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:2.67 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 1 freq:8.09 size: 1 time: 10
    indirect call loop depth: 2 freq:7.02 size: 3 time: 15

IPA function summary for Com_MainFunctionRouteSignals/240 inlinable
  global time:     98.763036
  self size:       37
  global size:     37
  min size:       10
  self stack:      0
  global stack:    0
    size:29.000000, time:75.883636
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_MainFunctionRouteSignals_Src_Generic_hlp/239 function not considered for inlining
      loop depth: 1 freq:0.91 size: 2 time: 11callee size:18 stack: 0
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:0.91 size: 3 time: 12

IPA function summary for Com_MainFunctionRouteSignals_Src_Generic_hlp/239 inlinable
  global time:     226.340911
  self size:       37
  global size:     37
  min size:       22
  self stack:      0
  global stack:    0
    size:20.000000, time:127.386364
    size:5.000000, time:13.113636,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 336] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 336] changed)
  calls:
    Com_EB_CheckSendSignalGroup/231 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size:15 stack: 1
    Com_EB_RouteGroupSignal/237 function not considered for inlining
      loop depth: 1 freq:2.02 size: 3 time: 12callee size: 7 stack: 0
    Com_EB_RouteSignalGroup.isra.0/376 function not considered for inlining
      loop depth: 1 freq:2.02 size: 4 time: 13callee size:26 stack: 0
    Com_EB_RouteSignal.isra.0/374 function not considered for inlining
      loop depth: 1 freq:2.02 size: 3 time: 12callee size:16 stack: 0

IPA function summary for Com_EB_RouteGroupSignal/237 inlinable
  global time:     7.845600
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:5.000000, time:1.012000,  executed if:(op1 == 1)
    size:0.500000, time:0.101200,  executed if:(op1 == 1) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 1) && (not inlined)
    size:0.500000, time:0.101200,  executed if:(op1 == 1),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 1)
  calls:
    Com_EB_RouteSignalHelper/232 function not considered for inlining
      loop depth: 0 freq:0.20 size: 4 time: 13callee size:61 stack:23 predicate: (op1 == 1)

IPA function summary for Com_EB_RouteReceiveSignalGroup/235 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      1
  global stack:    1
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SetupRxSignalGroup/268 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:13 stack: 0
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_RouteSignalHelper_Write/233 inlinable
  global time:     31.368800
  self size:       28
  global size:     28
  min size:       24
  self stack:      0
  global stack:    0
    size:3.500000, time:2.791600
    size:3.500000, time:2.398800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.398800,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.398800,  nonconst if:(op1[ref offset: 64] changed)
    size:0.500000, time:0.398800,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.398800,  nonconst if:(op1[ref offset: 32] changed)
    size:0.500000, time:0.398800,  executed if:(not inlined),  nonconst if:(op1[ref offset: 128] changed) && (not inlined)
    size:1.500000, time:1.196400,  nonconst if:(op1[ref offset: 128] changed)
  array index:(op1[ref offset: 128] changed)
  calls:
    Com_EB_RouteSignalHelper_Write.part.0/373 function not considered for inlining
      loop depth: 0 freq:0.20 size: 5 time: 14callee size:10 stack: 0
    indirect call loop depth: 0 freq:0.80 size: 7 time: 19

IPA function summary for Com_EB_RouteSignalHelper/232 inlinable
  global time:     376.922600
  self size:       122
  global size:     122
  min size:       106
  self stack:      23
  global stack:    23
    size:33.500000, time:175.369208
    size:4.500000, time:11.583309,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:28.500000, time:9.531765,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.205000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.205000,  nonconst if:(op0[ref offset: 16] changed)
    size:1.000000, time:0.410000,  nonconst if:(op0[ref offset: 16] changed || op2 changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_SetSendSignalGroup/230 function not considered for inlining
      loop depth: 1 freq:2.69 size: 2 time: 11callee size:10 stack: 0
    Com_EB_RouteSignalHelper_Write/233 function not considered for inlining
      loop depth: 1 freq:2.69 size: 5 time: 14callee size:14 stack: 0
       op0 change 37.100000% of time
       op2 change 37.100000% of time
       op3 is compile time invariant
    Com_EB_SendSignal_Transmit/201 function not considered for inlining
      loop depth: 1 freq:2.69 size: 3 time: 12callee size:16 stack: 0
       op1 is compile time invariant
    Com_EB_RouteSignalHelper_Write/233 function not considered for inlining
      loop depth: 1 freq:2.69 size: 5 time: 14callee size:14 stack: 0
       op0 change 37.100000% of time
       op2 change 37.100000% of time
       op3 is compile time invariant
    Com_GetSendSignalRetVal.isra.0/331 function not considered for inlining
      loop depth: 1 freq:2.69 size: 3 time: 12callee size: 6 stack: 0
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19

IPA function summary for Com_EB_CheckSendSignalGroup/231 inlinable
  global time:     218.881729
  self size:       31
  global size:     31
  min size:       14
  self stack:      1
  global stack:    1
    size:21.000000, time:151.593859
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SetupTxSignalGroup/213 function not considered for inlining
      loop depth: 1 freq:4.08 size: 7 time: 16callee size:10 stack: 0
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op4 is compile time invariant
       op5 is compile time invariant

IPA function summary for Com_EB_SetSendSignalGroup/230 inlinable
  global time:     145.084018
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:18.000000, time:143.084018
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_SetIpduGroup/229 inlinable
  global time:     20.884921
  self size:       44
  global size:     44
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
    size:4.000000, time:2.212876,  executed if:(op0 != 0B)
    size:2.000000, time:0.741313,  executed if:(op0 != 0B),  nonconst if:(op2 changed) && (op0 != 0B)
    size:3.000000, time:0.555985,  executed if:(op2 != 0) && (op0 != 0B),  nonconst if:(op1 changed) && (op2 != 0) && (op0 != 0B)
    size:1.000000, time:0.185328,  executed if:(op2 != 0) && (op0 != 0B),  nonconst if:(op0 changed || op1 changed) && (op2 != 0) && (op0 != 0B)
    size:3.000000, time:0.555985,  executed if:(op2 != 0) && (op0 != 0B)
    size:4.000000, time:0.741313,  executed if:(op2 == 0) && (op0 != 0B),  nonconst if:(op1 changed) && (op2 == 0) && (op0 != 0B)
    size:1.000000, time:0.185328,  executed if:(op2 == 0) && (op0 != 0B),  nonconst if:(op0 changed || op1 changed) && (op2 == 0) && (op0 != 0B)
    size:3.000000, time:0.555985,  executed if:(op2 == 0) && (op0 != 0B)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.18 size: 5 time: 14 predicate: (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ClearIpduGroupVector/228 inlinable
  global time:     24.765752
  self size:       23
  global size:     23
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
    size:5.000000, time:12.170818,  executed if:(op0 != 0B)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_Init/227 inlinable
  global time:     290.812730
  self size:       51
  global size:     51
  min size:       24
  self stack:      0
  global stack:    0
    size:35.000000, time:146.841820
    size:4.000000, time:8.090909,  executed if:(not inlined)
  calls:
    Com_EB_InitStartTxIPdu/193 function not considered for inlining
      loop depth: 1 freq:5.42 size: 2 time: 11callee size: 8 stack: 0
    Com_EB_InitStartRxIPdu/164 function not considered for inlining
      loop depth: 1 freq:5.42 size: 2 time: 11callee size:12 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_IsValidConfig/17 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 8 stack: 0

IPA function summary for Com_GetConfigurationId/226 inlinable
  global time:     9.515200
  self size:       13
  global size:     13
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:4.580800
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.21 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_FilterSint64/225 inlinable
  global time:     31.779252
  self size:       37
  global size:     37
  min size:       0
  self stack:      6
  global stack:    6
    size:4.000000, time:4.000000
    size:3.000000, time:1.999868,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:11.500000, time:4.069956,  executed if:(op0[ref offset: 32] != 7)
    size:0.500000, time:0.330000,  executed if:(op0[ref offset: 32] != 7) && (not inlined)
  calls:
    Com_EB_FilterUint32/222 function not considered for inlining
      loop depth: 0 freq:0.22 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
       op0 is compile time invariant
    Com_EB_FilterUint32/222 function not considered for inlining
      loop depth: 0 freq:0.22 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
       op0 is compile time invariant
    Com_EB_FilterUint32/222 function not considered for inlining
      loop depth: 0 freq:0.66 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
    Com_EB_FilterSint64.part.0/342 function not considered for inlining
      loop depth: 0 freq:0.34 size: 3 time: 12callee size: 3 stack: 6 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterUint64/224 inlinable
  global time:     31.779252
  self size:       37
  global size:     37
  min size:       0
  self stack:      6
  global stack:    6
    size:4.000000, time:4.000000
    size:3.000000, time:1.999868,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:11.500000, time:4.069956,  executed if:(op0[ref offset: 32] != 7)
    size:0.500000, time:0.330000,  executed if:(op0[ref offset: 32] != 7) && (not inlined)
  calls:
    Com_EB_FilterUint32/222 function not considered for inlining
      loop depth: 0 freq:0.22 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
       op0 is compile time invariant
    Com_EB_FilterUint32/222 function not considered for inlining
      loop depth: 0 freq:0.22 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
       op0 is compile time invariant
    Com_EB_FilterUint32/222 function not considered for inlining
      loop depth: 0 freq:0.66 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
    Com_EB_FilterSint64.part.0/342 function not considered for inlining
      loop depth: 0 freq:0.34 size: 3 time: 12callee size: 3 stack: 6 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterSint32/223 inlinable
  global time:     24.949318
  self size:       74
  global size:     74
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:11.500000, time:4.125667,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterUint32/222 inlinable
  global time:     24.949318
  self size:       74
  global size:     74
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:11.500000, time:4.125667,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterSint16/221 inlinable
  global time:     24.949318
  self size:       74
  global size:     74
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:11.500000, time:4.125667,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterUint16/220 inlinable
  global time:     24.949318
  self size:       74
  global size:     74
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:11.500000, time:4.125667,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterSint8/219 inlinable
  global time:     24.073299
  self size:       71
  global size:     71
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:10.500000, time:3.916248,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterUint8/218 inlinable
  global time:     24.073299
  self size:       71
  global size:     71
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:10.500000, time:3.916248,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterBoolean/217 inlinable
  global time:     27.315074
  self size:       75
  global size:     75
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:1.999800
    size:3.000000, time:1.999733,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:12.500000, time:3.166600,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:15.000000, time:4.999500,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:2.500000, time:0.833250,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:0.222178,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.222178,  executed if:(op0[ref offset: 32] == 3)
    size:8.500000, time:3.330784,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    size:0.500000, time:0.151092,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4) && (not inlined)
    size:2.000000, time:0.398883,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4),  nonconst if:(op1[ref offset: 0] changed) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    size:3.000000, time:0.394895,  executed if:(op1[ref offset: 0] != 1) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    size:3.000000, time:0.203431,  executed if:(op1[ref offset: 0] == 1) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.13 size: 3 time: 12 predicate: (op1[ref offset: 0] != 1) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.07 size: 3 time: 12 predicate: (op1[ref offset: 0] == 1) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    Com_EB_FilterOneEveryN/216 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterOneEveryN/216 inlinable
  global time:     49.000000
  self size:       23
  global size:     23
  min size:       4
  self stack:      0
  global stack:    0
    size:17.000000, time:26.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_ReceptionDMControl/215 inlinable
  global time:     19.871000
  self size:       22
  global size:     22
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
  calls:
    Com_EB_HandlePduGroupRx/147 function not considered for inlining
      loop depth: 0 freq:0.47 size: 4 time: 13callee size:19 stack: 0 predicate: (op0 != 0B)
       op0 is compile time invariant
       op2 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.20 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_IpduGroupControl/214 inlinable
  global time:     25.499000
  self size:       25
  global size:     25
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
  calls:
    Com_EB_HandlePduGroupTx/148 function not considered for inlining
      loop depth: 0 freq:0.47 size: 3 time: 12callee size:19 stack: 0 predicate: (op0 != 0B)
    Com_EB_HandlePduGroupRx/147 function not considered for inlining
      loop depth: 0 freq:0.47 size: 4 time: 13callee size:19 stack: 0 predicate: (op0 != 0B)
       op0 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.20 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_SetupTxSignalGroup/213 inlinable
  global time:     31.000000
  self size:       20
  global size:     20
  min size:       20
  self stack:      0
  global stack:    0
    size:4.500000, time:4.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op3[ref offset: 96] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op3[ref offset: 96] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size:10 time: 22

IPA function summary for Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 inlinable
  global time:     364.000002
  self size:       30
  global size:     30
  min size:       18
  self stack:      0
  global stack:    0
    size:15.500000, time:129.409092
    size:4.500000, time:15.136364,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 224] changed)
  calls:
    Com_EB_CalculateGroupSignalTM.isra.0/364 function not considered for inlining
      loop depth: 1 freq:8.09 size: 4 time: 13callee size:25 stack: 0
    Com_EB_CalculateFilter/12 function not considered for inlining
      loop depth: 1 freq:8.09 size: 5 time: 14callee size:36 stack: 0
       op1 change 12.350000% of time

IPA function summary for Com_EB_WriteShadowBuffer_Fragment/208 inlinable
  global time:     167.840910
  self size:       26
  global size:     26
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:107.181819
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:16.181818,  nonconst if:(op3 changed)
    size:7.500000, time:41.061364,  executed if:(op3 != 0B)
    size:0.500000, time:1.415909,  executed if:(op3 != 0B) && (not inlined)
  loop iterations:(op5 changed)
  calls:

IPA function summary for Com_EB_CalculateSignalGroupTM/207 inlinable
  global time:     105.957904
  self size:       119
  global size:     119
  min size:       26
  self stack:      0
  global stack:    0
    size:98.500000, time:74.102677
    size:7.500000, time:3.105500,  executed if:(not inlined)
  calls:
    Com_EB_SendUponSendApiCall/175 function not considered for inlining
      loop depth: 0 freq:0.17 size: 3 time: 12callee size:38 stack: 0
    Com_EB_Request_Send_Pdu/176 function not considered for inlining
      loop depth: 0 freq:0.05 size: 5 time: 14callee size:13 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_CalculateTM/178 function not considered for inlining
      loop depth: 0 freq:0.50 size: 3 time: 12callee size: 9 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_SendSignalGroupArray/206 inlinable
  global time:     44.000000
  self size:       18
  global size:     18
  min size:       30
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_CalculateSignalGroupTM/207 function not considered for inlining
      loop depth: 0 freq:1.00 size: 7 time: 16callee size:59 stack: 0
    Com_EB_WriteShadowBuffer.isra.0/368 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:40 stack: 1
    Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:15 stack: 0

IPA function summary for Com_EB_SendSignalGroupArray_DETCheck/205 inlinable
  global time:     21.265367
  self size:       22
  global size:     22
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.448950,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op2[ref offset: 128] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.448950,  executed if:(op0 != 0B),  nonconst if:(op2[ref offset: 128] changed) && (op0 != 0B)
    size:2.000000, time:1.795800,  executed if:(op0 != 0B),  nonconst if:(op2[ref offset: 128] changed || op1 changed) && (op0 != 0B)
  calls:
    Com_EB_SendSignalGroupArray/206 function not considered for inlining
      loop depth: 0 freq:0.44 size: 7 time: 16callee size: 9 stack: 0 predicate: (op0 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.46 size: 5 time: 14 predicate: (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_EB_SendSignalGroupArray_DETCheck.part.0/377 function not considered for inlining
      loop depth: 0 freq:0.10 size: 2 time: 11callee size: 4 stack: 0 predicate: (op0 == 0B)

IPA function summary for Com_EB_SendSignalGroup/204 inlinable
  global time:     32.438800
  self size:       22
  global size:     22
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:2.000000, time:1.565600,  executed if:(op2[ref offset: 144] != 65535)
  calls:
    Com_EB_CalculateSignalGroupTM/207 function not considered for inlining
      loop depth: 0 freq:0.78 size: 7 time: 16callee size:59 stack: 0 predicate: (op2[ref offset: 144] != 65535)
    Com_EB_WriteShadowBuffer.isra.0/368 function not considered for inlining
      loop depth: 0 freq:0.78 size: 5 time: 14callee size:40 stack: 1 predicate: (op2[ref offset: 144] != 65535)
    Com_EB_SendSignalGroup.part.0/378 function not considered for inlining
      loop depth: 0 freq:0.22 size: 2 time: 11callee size: 4 stack: 0 predicate: (op2[ref offset: 144] == 65535)

IPA function summary for Com_EB_WriteDynSignal_ExitArea_0/202 inlinable
  global time:     68.830000
  self size:       45
  global size:     45
  min size:       22
  self stack:      0
  global stack:    0
    size:17.000000, time:13.165000
    size:4.000000, time:2.665000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 160] changed || op2[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 128] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op1[ref offset: 128] changed)
    size:1.000000, time:0.750000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 176] changed) && (not inlined)
    size:3.000000, time:2.250000,  nonconst if:(op1[ref offset: 176] changed)
  calls:
    Com_EB_SendSignal_Transmit/201 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:16 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_SendSignal_Transmit/201 inlinable
  global time:     14.774195
  self size:       33
  global size:     33
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 24] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 24] changed)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op1[ref offset: 16] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:2.500000, time:1.000000,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op1[ref offset: 16] changed) && (op1[ref offset: 24] == 0)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op0[ref offset: 128] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:12.500000, time:4.260000,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op0[ref offset: 128] changed) && (op1[ref offset: 24] == 0)
    size:0.500000, time:0.126250,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op1[ref offset: 40] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:2.500000, time:0.464600,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op1[ref offset: 40] changed) && (op1[ref offset: 24] == 0)
    size:0.500000, time:0.098336,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op0[ref offset: 176] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:0.500000, time:0.098336,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op0[ref offset: 176] changed) && (op1[ref offset: 24] == 0)
    size:0.500000, time:0.098336,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:0.500000, time:0.098336,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 24] == 0)
  calls:
    Com_EB_SendUponSendApiCall/175 function not considered for inlining
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:38 stack: 0 predicate: (op1[ref offset: 24] == 0)
    Com_EB_SendSignal_Transmit.part.0/372 function not considered for inlining
      loop depth: 0 freq:0.06 size: 3 time: 12callee size: 9 stack: 0 predicate: (op1[ref offset: 40] == 0) && (op1[ref offset: 24] == 0)

IPA function summary for Com_EB_Write_SignalExt/200 inlinable
  global time:     65.997840
  self size:       100
  global size:     100
  min size:       58
  self stack:      0
  global stack:    0
    size:63.500000, time:25.473562
    size:7.500000, time:4.909464,  executed if:(not inlined)
  calls:
    Com_EB_SendSignal_Transmit/201 function not considered for inlining
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:16 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.14 size: 1 time: 10
    Com_EB_CalculateTM/178 function not considered for inlining
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 9 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.14 size: 1 time: 10
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.09 size: 3 time: 12
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.05 size: 3 time: 12
    Com_EB_CalculateGroupSignalTM.isra.0/364 function not considered for inlining
      loop depth: 0 freq:0.20 size: 4 time: 13callee size:25 stack: 0
    Com_EB_SendSignal_Filter/199 function not considered for inlining
      loop depth: 0 freq:0.41 size: 4 time: 13callee size:30 stack: 0
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_SendSignal_Filter/199 inlinable
  global time:     21.700000
  self size:       61
  global size:     61
  min size:       72
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:21.500000, time:7.500000,  nonconst if:(op0[ref offset: 128] changed)
  calls:
    Com_EB_FilterUint64/224 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:18 stack: 6
    Com_EB_FilterSint64/225 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:18 stack: 6
    Com_EB_FilterSint32/223 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0
    Com_EB_FilterSint16/221 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0
    Com_EB_FilterSint8/219 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:35 stack: 0
    Com_EB_FilterUint32/222 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0
    Com_EB_FilterUint16/220 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0
    Com_EB_FilterUint8/218 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:35 stack: 0
    Com_EB_FilterBoolean/217 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0

IPA function summary for Com_EB_ClearTxUpdateBits/197 inlinable
  global time:     455.278175
  self size:       67
  global size:     67
  min size:       12
  self stack:      0
  global stack:    0
    size:53.500000, time:366.846358
    size:6.500000, time:23.351818,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 240] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 240] changed)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:2.67 size: 3 time: 12
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:2.67 size: 3 time: 12

IPA function summary for Com_EB_TxConfirmations/196 inlinable
  global time:     234.545456
  self size:       20
  global size:     20
  min size:       6
  self stack:      0
  global stack:    0
    size:12.000000, time:101.090910
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 448] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 448] changed)
  calls:
    indirect call loop depth: 1 freq:8.09 size: 3 time: 15

IPA function summary for Com_EB_TxDM_TMNone/195 inlinable
  global time:     15.980000
  self size:       27
  global size:     27
  min size:       6
  self stack:      0
  global stack:    0
    size:12.000000, time:6.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 496] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op0[ref offset: 496] changed)
    size:1.000000, time:0.250000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 504] changed) && (not inlined)
    size:3.000000, time:0.750000,  nonconst if:(op0[ref offset: 504] changed)
  calls:
    Com_EB_TxDM_TMNone.part.0/344 function not considered for inlining
      loop depth: 0 freq:0.16 size: 3 time: 12callee size: 4 stack: 0

IPA function summary for Com_EB_TxDMQueue/194 inlinable
  global time:     38.000000
  self size:       21
  global size:     21
  min size:       4
  self stack:      0
  global stack:    0
    size:15.000000, time:15.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_InitStartTxIPdu/193 inlinable
  global time:     23.428800
  self size:       16
  global size:     16
  min size:       10
  self stack:      0
  global stack:    0
    size:7.000000, time:7.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_StartIPdu/190 function not considered for inlining
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:40 stack: 0
    Com_EB_InitTxIPdu/192 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 9 stack: 0

IPA function summary for Com_EB_InitTxIPdu/192 inlinable
  global time:     53.000000
  self size:       18
  global size:     18
  min size:       20
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_InitTxIPdu_Signals/189 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 8 stack: 0
    Com_EB_InitTxIPdu_HandleFlags/187 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:18 stack: 0
    Com_EB_InitTxIPdu_SignalGroups/186 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:15 stack: 0
    Com_EB_InitTxIPdu_PduBuffer/184 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:10 stack: 0

IPA function summary for Com_EB_HandleTxIPdu/191 inlinable
  global time:     16.340000
  self size:       12
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_HandleTxIPdu_Stop/183 function not considered for inlining
      loop depth: 0 freq:0.66 size: 3 time: 12callee size:37 stack: 0 predicate: (op0 != 1)
    Com_EB_HandleTxIPdu_Start/182 function not considered for inlining
      loop depth: 0 freq:0.34 size: 4 time: 13callee size: 9 stack: 0 predicate: (op0 == 1)

IPA function summary for Com_EB_StartIPdu/190 inlinable
  global time:     67.076817
  self size:       81
  global size:     81
  min size:       36
  self stack:      0
  global stack:    0
    size:56.000000, time:30.030160
    size:7.000000, time:3.257515,  executed if:(not inlined)
  calls:
    Com_EB_TxDM_TMNone/195 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:13 stack: 0
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op1 is compile time invariant
    Com_EB_PeriodicSendQueue/179 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 7 stack: 0
    Com_EB_TxDMQueue/194 function not considered for inlining
      loop depth: 0 freq:0.04 size: 4 time: 13callee size:10 stack: 0
    Com_EB_Send_Pdu/180 function not considered for inlining
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:19 stack: 8
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_InitTxIPdu_Signals/189 inlinable
  global time:     191.090910
  self size:       17
  global size:     17
  min size:       4
  self stack:      0
  global stack:    0
    size:11.000000, time:91.500000
    size:4.000000, time:10.590909,  executed if:(not inlined)
  calls:
    Com_EB_InitTx_Signal/188 function not considered for inlining
      loop depth: 1 freq:8.09 size: 2 time: 11callee size: 9 stack: 0

IPA function summary for Com_EB_InitTx_Signal/188 inlinable
  global time:     15.758811
  self size:       18
  global size:     18
  min size:       8
  self stack:      0
  global stack:    0
    size:10.000000, time:8.756634
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Com_ResetFilerOneEveryN/14 function not considered for inlining
      loop depth: 0 freq:0.16 size: 2 time: 11callee size: 7 stack: 0
    Com_EB_SetBuffer/13 function not considered for inlining
      loop depth: 0 freq:0.20 size: 2 time: 11callee size:77 stack:22

IPA function summary for Com_EB_InitTxIPdu_HandleFlags/187 inlinable
  global time:     28.540000
  self size:       37
  global size:     37
  min size:       14
  self stack:      0
  global stack:    0
    size:24.500000, time:16.795000
    size:5.500000, time:3.495000,  executed if:(not inlined)
  calls:
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.33 size: 4 time: 13
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Com_EB_InitTxIPdu_SignalGroups/186 inlinable
  global time:     311.004656
  self size:       31
  global size:     31
  min size:       12
  self stack:      0
  global stack:    0
    size:20.500000, time:158.023455
    size:4.500000, time:12.568327,  executed if:(not inlined)
  calls:
    Com_EB_ClearTxSGTMSState/185 function not considered for inlining
      loop depth: 1 freq:8.09 size: 2 time: 11callee size:29 stack: 0
    Com_EB_InitSGBuffer.isra.0/359 function not considered for inlining
      loop depth: 1 freq:3.95 size: 4 time: 13callee size: 6 stack: 0

IPA function summary for Com_EB_ClearTxSGTMSState/185 inlinable
  global time:     192.683274
  self size:       59
  global size:     59
  min size:       18
  self stack:      0
  global stack:    0
    size:46.000000, time:118.012086
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_InitTx_Signal/188 function not considered for inlining
      loop depth: 1 freq:4.33 size: 2 time: 11callee size: 9 stack: 0
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 1 freq:1.43 size: 3 time: 12
       op1 is compile time invariant
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.53 size: 4 time: 13

IPA function summary for Com_EB_InitTxIPdu_PduBuffer/184 inlinable
  global time:     29.000000
  self size:       21
  global size:     21
  min size:       8
  self stack:      0
  global stack:    0
    size:9.500000, time:9.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 96] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for Com_EB_HandleTxIPdu_Stop/183 inlinable
  global time:     145.940001
  self size:       75
  global size:     75
  min size:       36
  self stack:      0
  global stack:    0
    size:51.500000, time:64.345000
    size:5.500000, time:5.665000,  executed if:(not inlined)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant
    indirect call loop depth: 1 freq:2.67 size: 3 time: 15

IPA function summary for Com_EB_HandleTxIPdu_Start/182 inlinable
  global time:     19.113200
  self size:       19
  global size:     19
  min size:       6
  self stack:      0
  global stack:    0
    size:9.000000, time:9.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    Com_EB_StartIPdu/190 function not considered for inlining
      loop depth: 0 freq:0.50 size: 3 time: 12callee size:40 stack: 0
    Com_EB_InitTxIPdu/192 function not considered for inlining
      loop depth: 0 freq:0.10 size: 2 time: 11callee size: 9 stack: 0 predicate: (op1 == 1)

IPA function summary for Com_EB_HandleMDT/181 inlinable
  global time:     9.620000
  self size:       11
  global size:     11
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 288] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 288] changed)
    size:0.500000, time:0.165000,  executed if:(op1[ref offset: 288] != 0) && (not inlined)
    size:0.500000, time:0.165000,  executed if:(op1[ref offset: 288] != 0)
  calls:
    Com_EB_MdtQueue.isra.0/345 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:10 stack: 0 predicate: (op1[ref offset: 288] != 0)

IPA function summary for Com_EB_Send_Pdu/180 inlinable
  global time:     48.614664
  self size:       38
  global size:     38
  min size:       18
  self stack:      8
  global stack:    8
    size:11.500000, time:10.183960
    size:3.500000, time:2.236792,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 128] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 128] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 256] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 256] changed)
    size:3.000000, time:2.392800,  executed if:(op1[ref offset: 256] != 65535)
  array index:(op1[ref offset: 256] changed)
  calls:
    Com_EB_Send_Pdu.part.0/371 function not considered for inlining
      loop depth: 0 freq:0.24 size: 2 time: 11callee size: 5 stack: 8
    PduR_ComTransmit/311 function body not available
      loop depth: 0 freq:0.47 size: 4 time: 13
       op1 is compile time invariant
    Com_EB_HandleMDT/181 function not considered for inlining
      loop depth: 0 freq:0.47 size: 3 time: 12callee size: 5 stack: 0
    indirect call loop depth: 0 freq:0.80 size: 6 time: 18predicate: (op1[ref offset: 256] != 65535)

IPA function summary for Com_EB_PeriodicSendQueue/179 inlinable
  global time:     31.000000
  self size:       14
  global size:     14
  min size:       4
  self stack:      0
  global stack:    0
    size:8.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_CalculateTM/178 inlinable
  global time:     75.727273
  self size:       18
  global size:     18
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:67.727273
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 192] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 208] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 208] changed)
    size:3.000000, time:3.000000,  nonconst if:(op0[ref offset: 192] changed || op0[ref offset: 208] changed)
  loop iterations:(op0[ref offset: 192] changed || op0[ref offset: 208] changed)
  calls:

IPA function summary for Com_EB_NTimesSendQueue/177 inlinable
  global time:     38.000000
  self size:       21
  global size:     21
  min size:       4
  self stack:      0
  global stack:    0
    size:15.000000, time:15.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Request_Send_Pdu/176 inlinable
  global time:     29.290000
  self size:       26
  global size:     26
  min size:       14
  self stack:      0
  global stack:    0
    size:3.500000, time:3.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 496] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op1[ref offset: 496] changed)
    size:0.500000, time:0.165000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 416] changed) && (not inlined)
    size:0.500000, time:0.165000,  nonconst if:(op1[ref offset: 416] changed)
    size:0.500000, time:0.165000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 432] changed) && (not inlined)
    size:0.500000, time:0.165000,  nonconst if:(op1[ref offset: 432] changed)
    size:2.000000, time:1.340000,  nonconst if:(op3 changed)
  calls:
    Com_EB_Send_Pdu/180 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:19 stack: 8 predicate: (op3 != 1)
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.67 size: 3 time: 12
       op1 is compile time invariant
    Com_EB_TxDMQueue/194 function not considered for inlining
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:10 stack: 0

IPA function summary for Com_EB_SendUponSendApiCall/175 inlinable
  global time:     32.659296
  self size:       77
  global size:     77
  min size:       26
  self stack:      0
  global stack:    0
    size:60.000000, time:22.179648
    size:3.000000, time:1.999934,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_NTimesSendQueue/177 function not considered for inlining
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:10 stack: 0
    Com_EB_NTimesSendQueue/177 function not considered for inlining
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:10 stack: 0
    Com_EB_Request_Send_Pdu/176 function not considered for inlining
      loop depth: 0 freq:0.33 size: 5 time: 14callee size:13 stack: 0

IPA function summary for Com_EB_DisableSignalGroupBasedDMFlag/174 inlinable
  global time:     290.581800
  self size:       55
  global size:     55
  min size:       6
  self stack:      0
  global stack:    0
    size:34.000000, time:230.302730
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 112] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 112] changed)
    size:2.000000, time:5.340000,  nonconst if:(op1 changed)
    size:8.000000, time:4.323264,  executed if:(op1 == 1)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:0.54 size: 3 time: 12 predicate: (op1 == 1)
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:2.67 size: 3 time: 12

IPA function summary for Com_EB_DisableSignalBasedDMFlag/173 inlinable
  global time:     290.581800
  self size:       55
  global size:     55
  min size:       6
  self stack:      0
  global stack:    0
    size:34.000000, time:230.302730
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 192] changed)
    size:2.000000, time:5.340000,  nonconst if:(op1 changed)
    size:8.000000, time:4.323264,  executed if:(op1 == 1)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:0.54 size: 3 time: 12 predicate: (op1 == 1)
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:2.67 size: 3 time: 12

IPA function summary for Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 inlinable
  global time:     26.000000
  self size:       9
  global size:     9
  min size:       12
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_DisableSignalGroupBasedDMFlag/174 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:27 stack: 0
    Com_EB_DisableSignalBasedDMFlag/173 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:27 stack: 0

IPA function summary for Com_EB_EnableSignalGroupBasedDMFlag/171 inlinable
  global time:     282.938803
  self size:       56
  global size:     56
  min size:       10
  self stack:      0
  global stack:    0
    size:46.000000, time:238.861294
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 112] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 112] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:1.34 size: 1 time: 10
    Com_EB_RxDMSignalGroupQueue.isra.0/329 function not considered for inlining
      loop depth: 1 freq:0.44 size: 3 time: 12callee size: 8 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 1 freq:1.34 size: 1 time: 10

IPA function summary for Com_EB_EnableSignalBasedDMFlag/170 inlinable
  global time:     282.938803
  self size:       56
  global size:     56
  min size:       10
  self stack:      0
  global stack:    0
    size:46.000000, time:238.861294
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 192] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 1 freq:1.34 size: 1 time: 10
    Com_EB_RxDMSignalQueue.isra.0/330 function not considered for inlining
      loop depth: 1 freq:0.44 size: 3 time: 12callee size: 6 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 1 freq:1.34 size: 1 time: 10

IPA function summary for Com_GetRxIPduBuffer/165 inlinable
  global time:     22.552876
  self size:       41
  global size:     41
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op1 changed)
    size:15.000000, time:6.290100,  executed if:(op1 != 0B)
    size:2.000000, time:0.741313,  executed if:(op1 != 0B),  nonconst if:(op0 changed) && (op1 != 0B)
    size:1.000000, time:0.370657,  executed if:(op1 != 0B) && (not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.18 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_InitStartRxIPdu/164 inlinable
  global time:     26.869600
  self size:       24
  global size:     24
  min size:       16
  self stack:      0
  global stack:    0
    size:12.000000, time:8.012000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_HandleRxIPdu_EnableRxDM/152 function not considered for inlining
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:15 stack: 0
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.20 size: 3 time: 12
       op1 is compile time invariant
    Com_EB_InitRxIPdu/163 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:23 stack: 0

IPA function summary for Com_EB_InitRxIPdu/163 inlinable
  global time:     71.798400
  self size:       46
  global size:     46
  min size:       24
  self stack:      0
  global stack:    0
    size:29.000000, time:25.932800
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 4 stack: 0
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.49 size: 3 time: 12
    Com_EB_InitRxSignalsWithFilter/162 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack: 0
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for Com_EB_InitRxSignalsWithFilter/162 inlinable
  global time:     267.378474
  self size:       27
  global size:     27
  min size:       8
  self stack:      0
  global stack:    0
    size:19.000000, time:149.773964
    size:4.000000, time:10.590909,  executed if:(not inlined)
  calls:
    Com_ResetFilerOneEveryN/14 function not considered for inlining
      loop depth: 1 freq:1.64 size: 2 time: 11callee size: 7 stack: 0
    Com_EB_SetBuffer/13 function not considered for inlining
      loop depth: 1 freq:8.09 size: 2 time: 11callee size:77 stack:22

IPA function summary for Com_EB_HandleRxIPdu/157 inlinable
  global time:     19.349350
  self size:       45
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:9.000000
    size:3.000000, time:1.999950,  executed if:(not inlined)
    size:4.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:0.500000,  executed if:(op1 != 0),  nonconst if:(op0 changed) && (op1 != 0)
    size:6.000000, time:0.500000,  executed if:(op1 == 0),  nonconst if:(op0 changed) && (op1 == 0)
    size:2.000000, time:0.340000,  executed if:(op1 == 1),  nonconst if:(op0 changed) && (op1 == 1)
  calls:
    Com_EB_HandleRxIPdu_EnableRxDM/152 function not considered for inlining
      loop depth: 0 freq:0.05 size: 3 time: 12callee size:15 stack: 0 predicate: (op0 == 1) && (op1 != 0)
    Com_EB_HandleRxIPdu_DisableRxDM/153 function not considered for inlining
      loop depth: 0 freq:0.08 size: 3 time: 12callee size: 6 stack: 0 predicate: (op0 == 1) && (op1 == 0)
    Com_EB_HandleRxIPdu_DisableRxDM/153 function not considered for inlining
      loop depth: 0 freq:0.08 size: 3 time: 12callee size: 6 stack: 0 predicate: (op1 == 0) && (op0 == 0)
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.08 size: 3 time: 12 predicate: (op1 == 0) && (op0 == 0)
       op1 is compile time invariant
    Com_EB_HandleRxIPdu_EnableRxDM/152 function not considered for inlining
      loop depth: 0 freq:0.06 size: 3 time: 12callee size:15 stack: 0 predicate: (op0 == 0) && (op1 == 1)
    Com_EB_HandleRxIPdu_Start/151 function not considered for inlining
      loop depth: 0 freq:0.06 size: 4 time: 13callee size: 5 stack: 0 predicate: (op0 == 0) && (op1 == 1)

IPA function summary for Com_EB_HandleRxIPdu_DisableRxDM/153 inlinable
  global time:     38.000000
  self size:       12
  global size:     12
  min size:       18
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 4 stack: 0
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Com_EB_HandleRxIPdu_EnableRxDM/152 inlinable
  global time:     47.276750
  self size:       30
  global size:     30
  min size:       24
  self stack:      0
  global stack:    0
    size:12.500000, time:6.436400
    size:5.500000, time:2.886950,  executed if:(not inlined)
  calls:
    Com_EB_EnableSignalGroupBasedDMFlag/171 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:28 stack: 0
    Com_EB_EnableSignalBasedDMFlag/170 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:28 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.17 size: 1 time: 10
    Com_EB_RxDMQueue.isra.0/328 function not considered for inlining
      loop depth: 0 freq:0.05 size: 3 time: 12callee size: 6 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.17 size: 1 time: 10
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Com_EB_HandleRxIPdu_Start/151 inlinable
  global time:     18.226400
  self size:       10
  global size:     10
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
  calls:
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant
    Com_EB_InitRxIPdu/163 function not considered for inlining
      loop depth: 0 freq:0.20 size: 2 time: 11callee size:23 stack: 0 predicate: (op1 == 1)

IPA function summary for Com_EB_HandlePduRxDM/149 inlinable
  global time:     29.077934
  self size:       45
  global size:     45
  min size:       16
  self stack:      0
  global stack:    0
    size:27.000000, time:12.874646
    size:4.000000, time:2.090932,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 352] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op0[ref offset: 352] changed)
    size:0.500000, time:0.165000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 256] changed) && (not inlined)
    size:0.500000, time:0.165000,  nonconst if:(op0[ref offset: 256] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10
    Com_EB_RxDMQueue.isra.0/328 function not considered for inlining
      loop depth: 0 freq:0.07 size: 3 time: 12callee size: 6 stack: 0
    Com_EB_RxDMQueue.isra.0/328 function not considered for inlining
      loop depth: 0 freq:0.11 size: 3 time: 12callee size: 6 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.33 size: 1 time: 10

IPA function summary for Com_EB_HandlePduGroupTx/148 inlinable
  global time:     555.456737
  self size:       38
  global size:     38
  min size:       10
  self stack:      0
  global stack:    0
    size:30.000000, time:506.120062
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_HandleTxIPdu/191 function not considered for inlining
      loop depth: 1 freq:3.38 size: 5 time: 14callee size: 6 stack: 0
       op2 change 29.570000% of time

IPA function summary for Com_EB_HandlePduGroupRx/147 inlinable
  global time:     558.837927
  self size:       39
  global size:     39
  min size:       12
  self stack:      0
  global stack:    0
    size:30.000000, time:506.120062
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_HandleRxIPdu/157 function not considered for inlining
      loop depth: 1 freq:3.38 size: 6 time: 15callee size:22 stack: 0
       op0 change 29.570000% of time
       op3 change 29.570000% of time

IPA function summary for Com_EB_Write_DET/146 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_Write_A1_EL_DUB_DOC/145 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_A1_DL_DUB_DOC/143 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size: 3 stack: 0

IPA function summary for Com_EB_Write_BO_EL_DUB_DOC/144 inlinable
  global time:     21.000000
  self size:       17
  global size:     17
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op2[ref offset: 160] changed || op1 changed) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] == 0),  nonconst if:(op2[ref offset: 160] changed || op1 changed) && (op0[ref offset: 0] == 0)
  calls:
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.50 size: 3 time: 12 predicate: (op0[ref offset: 0] != 0)
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.50 size: 3 time: 12 predicate: (op0[ref offset: 0] == 0)

IPA function summary for Com_EB_Write_A1_DL_DUB_DOC/143 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_BO_DL_DUB_DOC/142 inlinable
  global time:     13.500000
  self size:       20
  global size:     20
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op2[ref offset: 160] changed || op1 changed) && (op0[ref offset: 0] != 0)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 0] != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op2[ref offset: 160] changed) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] == 0),  nonconst if:(op2[ref offset: 160] changed || op1 changed) && (op0[ref offset: 0] == 0)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 0] == 0)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 0] == 0),  nonconst if:(op2[ref offset: 160] changed) && (op0[ref offset: 0] == 0)
  calls:

IPA function summary for Com_EB_Write_AY_S0_EL_EUB_EOC_E2/141 inlinable
  global time:     178.454546
  self size:       32
  global size:     32
  min size:       4
  self stack:      0
  global stack:    0
    size:24.000000, time:141.318182
    size:6.000000, time:17.136364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_EOC_E2/140 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:31 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 inlinable
  global time:     147.809090
  self size:       62
  global size:     62
  min size:       4
  self stack:      0
  global stack:    0
    size:40.000000, time:108.809090
    size:5.000000, time:4.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_EUB_EOC_E2/138 inlinable
  global time:     157.181817
  self size:       46
  global size:     46
  min size:       4
  self stack:      0
  global stack:    0
    size:29.500000, time:123.681817
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_EUB_EOC_E2/137 inlinable
  global time:     58.500000
  self size:       47
  global size:     47
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:20.000000
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S1_EL_EUB_EOC_E3/136 inlinable
  global time:     134.090908
  self size:       29
  global size:     29
  min size:       4
  self stack:      0
  global stack:    0
    size:21.000000, time:105.045454
    size:5.000000, time:8.045454,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_EUB_EOC_E1/135 inlinable
  global time:     151.181819
  self size:       29
  global size:     29
  min size:       4
  self stack:      0
  global stack:    0
    size:21.500000, time:118.590910
    size:5.500000, time:12.590909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_EOC_E1/134 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:31 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 inlinable
  global time:     147.809090
  self size:       62
  global size:     62
  min size:       4
  self stack:      0
  global stack:    0
    size:40.000000, time:108.809090
    size:5.000000, time:4.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_EUB_EOC_E1/132 inlinable
  global time:     157.181817
  self size:       46
  global size:     46
  min size:       4
  self stack:      0
  global stack:    0
    size:29.500000, time:123.681817
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_EUB_EOC_E1/131 inlinable
  global time:     58.500000
  self size:       47
  global size:     47
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:20.000000
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_EUB_DOC_E2/130 inlinable
  global time:     148.181819
  self size:       26
  global size:     26
  min size:       4
  self stack:      0
  global stack:    0
    size:19.000000, time:112.045455
    size:5.000000, time:16.136364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_DOC_E2/129 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 inlinable
  global time:     117.356364
  self size:       52
  global size:     52
  min size:       4
  self stack:      0
  global stack:    0
    size:31.000000, time:79.356364
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_EUB_DOC_E2/127 inlinable
  global time:     136.000001
  self size:       39
  global size:     39
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:103.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_EUB_DOC_E2/126 inlinable
  global time:     52.500000
  self size:       40
  global size:     40
  min size:       4
  self stack:      0
  global stack:    0
    size:17.500000, time:15.000000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S1_EL_EUB_DOC_E3/125 inlinable
  global time:     106.818182
  self size:       23
  global size:     23
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:78.772728
    size:4.000000, time:7.045455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_EUB_DOC_E1/124 inlinable
  global time:     120.909092
  self size:       23
  global size:     23
  min size:       4
  self stack:      0
  global stack:    0
    size:16.500000, time:89.318182
    size:4.500000, time:11.590909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_DOC_E1/123 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 inlinable
  global time:     117.356364
  self size:       52
  global size:     52
  min size:       4
  self stack:      0
  global stack:    0
    size:31.000000, time:79.356364
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_EUB_DOC_E1/121 inlinable
  global time:     136.000001
  self size:       39
  global size:     39
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:103.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_EUB_DOC_E1/120 inlinable
  global time:     52.500000
  self size:       40
  global size:     40
  min size:       4
  self stack:      0
  global stack:    0
    size:17.500000, time:15.000000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_DUB_EOC_E2/119 inlinable
  global time:     170.454546
  self size:       24
  global size:     24
  min size:       4
  self stack:      0
  global stack:    0
    size:16.500000, time:133.818182
    size:5.500000, time:16.636364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_EOC_E2/118 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:27 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 inlinable
  global time:     139.809090
  self size:       54
  global size:     54
  min size:       4
  self stack:      0
  global stack:    0
    size:32.500000, time:101.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_DUB_EOC_E2/116 inlinable
  global time:     149.181817
  self size:       38
  global size:     38
  min size:       4
  self stack:      0
  global stack:    0
    size:22.000000, time:116.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_DUB_EOC_E2/115 inlinable
  global time:     50.500000
  self size:       39
  global size:     39
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:12.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S1_EL_DUB_EOC_E3/114 inlinable
  global time:     126.090908
  self size:       21
  global size:     21
  min size:       4
  self stack:      0
  global stack:    0
    size:13.500000, time:97.545454
    size:4.500000, time:7.545454,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_DUB_EOC_E1/113 inlinable
  global time:     143.181819
  self size:       21
  global size:     21
  min size:       4
  self stack:      0
  global stack:    0
    size:14.000000, time:111.090910
    size:5.000000, time:12.090909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_EOC_E1/112 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:27 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 inlinable
  global time:     139.809090
  self size:       54
  global size:     54
  min size:       4
  self stack:      0
  global stack:    0
    size:32.500000, time:101.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_DUB_EOC_E1/110 inlinable
  global time:     149.181817
  self size:       38
  global size:     38
  min size:       4
  self stack:      0
  global stack:    0
    size:22.000000, time:116.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_DUB_EOC_E1/109 inlinable
  global time:     50.500000
  self size:       39
  global size:     39
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:12.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_DUB_DOC_E2/108 inlinable
  global time:     140.181819
  self size:       18
  global size:     18
  min size:       4
  self stack:      0
  global stack:    0
    size:11.500000, time:104.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_DOC_E2/107 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:22 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 inlinable
  global time:     109.356364
  self size:       44
  global size:     44
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:71.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_DUB_DOC_E2/105 inlinable
  global time:     128.000001
  self size:       31
  global size:     31
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:96.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_DUB_DOC_E2/104 inlinable
  global time:     44.500000
  self size:       32
  global size:     32
  min size:       4
  self stack:      0
  global stack:    0
    size:10.000000, time:7.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S1_EL_DUB_DOC_E3/103 inlinable
  global time:     98.818182
  self size:       15
  global size:     15
  min size:       4
  self stack:      0
  global stack:    0
    size:8.500000, time:71.272728
    size:3.500000, time:6.545455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_DUB_DOC_E1/102 inlinable
  global time:     112.909092
  self size:       15
  global size:     15
  min size:       4
  self stack:      0
  global stack:    0
    size:9.000000, time:81.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_DOC_E1/101 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:22 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 inlinable
  global time:     109.356364
  self size:       44
  global size:     44
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:71.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_DUB_DOC_E1/99 inlinable
  global time:     128.000001
  self size:       31
  global size:     31
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:96.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_DUB_DOC_E1/98 inlinable
  global time:     44.500000
  self size:       32
  global size:     32
  min size:       4
  self stack:      0
  global stack:    0
    size:10.000000, time:7.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_DL_EUB_EOC_E2/97 inlinable
  global time:     158.454546
  self size:       30
  global size:     30
  min size:       0
  self stack:      0
  global stack:    0
    size:19.500000, time:136.818182
    size:5.500000, time:16.636364,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_EUB_EOC_E2/96 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 inlinable
  global time:     127.809090
  self size:       60
  global size:     60
  min size:       0
  self stack:      0
  global stack:    0
    size:35.500000, time:104.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_EUB_EOC_E2/94 inlinable
  global time:     137.181817
  self size:       44
  global size:     44
  min size:       0
  self stack:      0
  global stack:    0
    size:25.000000, time:119.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_EUB_EOC_E2/93 inlinable
  global time:     38.500000
  self size:       45
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:15.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S1_DL_EUB_EOC_E3/92 inlinable
  global time:     114.090908
  self size:       27
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
    size:16.500000, time:100.545454
    size:4.500000, time:7.545454,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_EUB_EOC_E1/91 inlinable
  global time:     131.181819
  self size:       27
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
    size:17.000000, time:114.090910
    size:5.000000, time:12.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_EUB_EOC_E1/90 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 inlinable
  global time:     127.809090
  self size:       60
  global size:     60
  min size:       0
  self stack:      0
  global stack:    0
    size:35.500000, time:104.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_EUB_EOC_E1/88 inlinable
  global time:     137.181817
  self size:       44
  global size:     44
  min size:       0
  self stack:      0
  global stack:    0
    size:25.000000, time:119.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_EUB_EOC_E1/87 inlinable
  global time:     38.500000
  self size:       45
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:15.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_EUB_DOC_E2/86 inlinable
  global time:     128.181819
  self size:       24
  global size:     24
  min size:       0
  self stack:      0
  global stack:    0
    size:14.500000, time:107.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_EUB_DOC_E2/85 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 inlinable
  global time:     97.356364
  self size:       50
  global size:     50
  min size:       0
  self stack:      0
  global stack:    0
    size:26.500000, time:74.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_EUB_DOC_E2/83 inlinable
  global time:     116.000000
  self size:       37
  global size:     37
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:99.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_EUB_DOC_E2/82 inlinable
  global time:     32.500000
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:10.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S1_DL_EUB_DOC_E3/81 inlinable
  global time:     86.818182
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:74.272728
    size:3.500000, time:6.545455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_EUB_DOC_E1/80 inlinable
  global time:     100.909091
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:12.000000, time:84.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_EUB_DOC_E1/79 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 inlinable
  global time:     97.356364
  self size:       50
  global size:     50
  min size:       0
  self stack:      0
  global stack:    0
    size:26.500000, time:74.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_EUB_DOC_E1/77 inlinable
  global time:     116.000000
  self size:       37
  global size:     37
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:99.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_EUB_DOC_E1/76 inlinable
  global time:     32.500000
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:10.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_DUB_EOC_E2/75 inlinable
  global time:     150.454546
  self size:       22
  global size:     22
  min size:       0
  self stack:      0
  global stack:    0
    size:16.500000, time:133.818182
    size:5.500000, time:16.636364,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_DUB_EOC_E2/74 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 inlinable
  global time:     119.809090
  self size:       52
  global size:     52
  min size:       0
  self stack:      0
  global stack:    0
    size:32.500000, time:101.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_DUB_EOC_E2/72 inlinable
  global time:     129.181817
  self size:       36
  global size:     36
  min size:       0
  self stack:      0
  global stack:    0
    size:22.000000, time:116.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_DUB_EOC_E2/71 inlinable
  global time:     30.500000
  self size:       37
  global size:     37
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:12.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S1_DL_DUB_EOC_E3/70 inlinable
  global time:     106.090908
  self size:       19
  global size:     19
  min size:       0
  self stack:      0
  global stack:    0
    size:13.500000, time:97.545454
    size:4.500000, time:7.545454,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_DUB_EOC_E1/69 inlinable
  global time:     123.181819
  self size:       19
  global size:     19
  min size:       0
  self stack:      0
  global stack:    0
    size:14.000000, time:111.090910
    size:5.000000, time:12.090909,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_DUB_EOC_E1/68 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 inlinable
  global time:     119.809090
  self size:       52
  global size:     52
  min size:       0
  self stack:      0
  global stack:    0
    size:32.500000, time:101.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_DUB_EOC_E1/66 inlinable
  global time:     129.181817
  self size:       36
  global size:     36
  min size:       0
  self stack:      0
  global stack:    0
    size:22.000000, time:116.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_DUB_EOC_E1/65 inlinable
  global time:     30.500000
  self size:       37
  global size:     37
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:12.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_DUB_DOC_E2/64 inlinable
  global time:     120.181819
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:104.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_DUB_DOC_E2/63 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 inlinable
  global time:     89.356364
  self size:       42
  global size:     42
  min size:       0
  self stack:      0
  global stack:    0
    size:23.500000, time:71.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_DUB_DOC_E2/61 inlinable
  global time:     108.000000
  self size:       29
  global size:     29
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:96.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_DUB_DOC_E2/60 inlinable
  global time:     24.500000
  self size:       30
  global size:     30
  min size:       0
  self stack:      0
  global stack:    0
    size:10.000000, time:7.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S1_DL_DUB_DOC_E3/59 inlinable
  global time:     78.818182
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:8.500000, time:71.272728
    size:3.500000, time:6.545455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_DUB_DOC_E1/58 inlinable
  global time:     92.909091
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:81.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_DUB_DOC_E1/57 inlinable
  global time:     19.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 inlinable
  global time:     89.356364
  self size:       42
  global size:     42
  min size:       0
  self stack:      0
  global stack:    0
    size:23.500000, time:71.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_DUB_DOC_E1/55 inlinable
  global time:     108.000000
  self size:       29
  global size:     29
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:96.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_DUB_DOC_E1/54 inlinable
  global time:     24.500000
  self size:       30
  global size:     30
  min size:       0
  self stack:      0
  global stack:    0
    size:10.000000, time:7.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Read_ZS/52 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_Read_DET/51 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_Read_A1_EL/50 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_Read_A1_DL/48 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size: 3 stack: 0

IPA function summary for Com_EB_Read_BO_EL/49 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_Read_BO_DL/47 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size: 6 stack: 0

IPA function summary for Com_EB_Read_A1_DL/48 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:1.500000, time:1.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Read_BO_DL/47 inlinable
  global time:     11.000000
  self size:       12
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:3.500000, time:3.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Read_32_EL_SignExt/46 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_32_DL_SignExt/45 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_16_EL_SignExt/44 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_16_DL_SignExt/43 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_08_EL_SignExt/42 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_08_DL_SignExt/41 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_AY_EL_E3/40 inlinable
  global time:     38.000000
  self size:       12
  global size:     12
  min size:       12
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_AY_DL_E3/39 inlinable
  global time:     18.000000
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for Com_EB_Read_AY_EL_E2/38 inlinable
  global time:     140.181819
  self size:       18
  global size:     18
  min size:       4
  self stack:      0
  global stack:    0
    size:11.500000, time:104.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_64_EL_E2/37 inlinable
  global time:     44.000000
  self size:       39
  global size:     39
  min size:       0
  self stack:      16
  global stack:    16
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32),  nonconst if:(op2[ref offset: 32] changed) && (op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32) && (not inlined)
  calls:
    Com_EB_Read_32_EL_E2/36 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:20 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
    Com_EB_Read_32_DL_E2/26 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    Com_EB_Read_32_DL_E2/26 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Read_32_EL_E2/36 inlinable
  global time:     107.327273
  self size:       40
  global size:     40
  min size:       4
  self stack:      0
  global stack:    0
    size:19.500000, time:73.877273
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:8.500000, time:6.810000,  nonconst if:(op2[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:4.000000, time:1.980000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_16_EL_E2/35 inlinable
  global time:     115.798182
  self size:       49
  global size:     49
  min size:       4
  self stack:      0
  global stack:    0
    size:31.000000, time:83.638182
    size:5.000000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:1.500000, time:0.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 32] changed || op2[ref offset: 16] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_08_EL_E2/34 inlinable
  global time:     26.745000
  self size:       38
  global size:     38
  min size:       4
  self stack:      0
  global stack:    0
    size:15.500000, time:8.963400
    size:4.500000, time:3.330000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:6.500000, time:5.717800,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.000000, time:0.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
    size:4.000000, time:1.217800,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.22 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.22 size: 1 time: 10

IPA function summary for Com_EB_Read_AY_EL_E1/33 inlinable
  global time:     112.909092
  self size:       15
  global size:     15
  min size:       4
  self stack:      0
  global stack:    0
    size:9.000000, time:81.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_64_EL_E1/32 inlinable
  global time:     44.000000
  self size:       39
  global size:     39
  min size:       0
  self stack:      16
  global stack:    16
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32),  nonconst if:(op2[ref offset: 32] changed) && (op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32) && (not inlined)
  calls:
    Com_EB_Read_32_EL_E1/31 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:20 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
    Com_EB_Read_32_DL_E1/21 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    Com_EB_Read_32_DL_E1/21 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Read_32_EL_E1/31 inlinable
  global time:     107.327273
  self size:       40
  global size:     40
  min size:       4
  self stack:      0
  global stack:    0
    size:19.500000, time:73.877273
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:8.500000, time:6.810000,  nonconst if:(op2[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:4.000000, time:1.980000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_16_EL_E1/30 inlinable
  global time:     115.798182
  self size:       49
  global size:     49
  min size:       4
  self stack:      0
  global stack:    0
    size:31.000000, time:83.638182
    size:5.000000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:1.500000, time:0.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 32] changed || op2[ref offset: 16] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_08_EL_E1/29 inlinable
  global time:     26.745000
  self size:       38
  global size:     38
  min size:       4
  self stack:      0
  global stack:    0
    size:15.500000, time:8.963400
    size:4.500000, time:3.330000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:6.500000, time:5.717800,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.000000, time:0.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
    size:4.000000, time:1.217800,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.22 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.22 size: 1 time: 10

IPA function summary for Com_EB_Read_AY_DL_E2/28 inlinable
  global time:     120.181819
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:104.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Read_64_DL_E2/27 inlinable
  global time:     34.000000
  self size:       37
  global size:     37
  min size:       0
  self stack:      16
  global stack:    16
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32),  nonconst if:(op2[ref offset: 32] changed) && (op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32) && (not inlined)
  calls:
    Com_EB_Read_32_DL_E2/26 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Read_32_DL_E2/26 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    Com_EB_Read_32_DL_E2/26 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant

IPA function summary for Com_EB_Read_32_DL_E2/26 inlinable
  global time:     87.327273
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:19.500000, time:73.877273
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:8.500000, time:6.810000,  nonconst if:(op2[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:4.000000, time:1.980000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:

IPA function summary for Com_EB_Read_16_DL_E2/25 inlinable
  global time:     93.798182
  self size:       44
  global size:     44
  min size:       0
  self stack:      0
  global stack:    0
    size:27.500000, time:80.638182
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:2.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 32] changed || op2[ref offset: 16] changed)
  calls:

IPA function summary for Com_EB_Read_08_DL_E2/24 inlinable
  global time:     22.290000
  self size:       33
  global size:     33
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:6.470000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:6.500000, time:5.830000,  nonconst if:(op2[ref offset: 16] changed)
    size:3.000000, time:1.330000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:1.500000, time:1.000000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:4.500000, time:3.340000,  nonconst if:(op2[ref offset: 32] changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:

IPA function summary for Com_EB_Read_AY_DL_E1/23 inlinable
  global time:     92.909091
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:81.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Read_64_DL_E1/22 inlinable
  global time:     34.000000
  self size:       37
  global size:     37
  min size:       0
  self stack:      16
  global stack:    16
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32),  nonconst if:(op2[ref offset: 32] changed) && (op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32) && (not inlined)
  calls:
    Com_EB_Read_32_DL_E1/21 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Read_32_DL_E1/21 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    Com_EB_Read_32_DL_E1/21 function not considered for inlining
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant

IPA function summary for Com_EB_Read_32_DL_E1/21 inlinable
  global time:     87.327273
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:19.500000, time:73.877273
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:8.500000, time:6.810000,  nonconst if:(op2[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:4.000000, time:1.980000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:

IPA function summary for Com_EB_Read_16_DL_E1/20 inlinable
  global time:     93.798182
  self size:       44
  global size:     44
  min size:       0
  self stack:      0
  global stack:    0
    size:27.500000, time:80.638182
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:2.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 32] changed || op2[ref offset: 16] changed)
  calls:

IPA function summary for Com_EB_Read_08_DL_E1/19 inlinable
  global time:     22.290000
  self size:       33
  global size:     33
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:6.470000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:6.500000, time:5.830000,  nonconst if:(op2[ref offset: 16] changed)
    size:3.000000, time:1.330000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:1.500000, time:1.000000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:4.500000, time:3.340000,  nonconst if:(op2[ref offset: 32] changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:

IPA function summary for Com_IsValidConfig/17 inlinable
  global time:     13.307630
  self size:       17
  global size:     17
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B)
    size:4.500000, time:1.523895,  executed if:(op0 != 0B)
    size:0.500000, time:0.090899,  executed if:(op0 != 0B) && (not inlined)
  calls:
    Com_IsValidConfig.part.0/379 function not considered for inlining
      loop depth: 0 freq:0.06 size: 3 time: 12callee size: 5 stack: 0 predicate: (op0 != 0B)
    TS_PlatformSigIsValid/301 function body not available
      loop depth: 0 freq:0.53 size: 3 time: 12 predicate: (op0 != 0B)

IPA function summary for Com_EB_CbkTxPrepDummyCbk/16 inlinable
  global time:     12.000000
  self size:       4
  global size:     4
  min size:       2
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_TxDMDummyCbk/15 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 1 stack: 0

IPA function summary for Com_EB_TxDMDummyCbk/15 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_ResetFilerOneEveryN/14 inlinable
  global time:     14.000000
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:11.000000, time:11.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Com_EB_SetBuffer/13 inlinable
  global time:     41.875000
  self size:       154
  global size:     154
  min size:       110
  self stack:      22
  global stack:    22
    size:60.000000, time:9.125000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:25.500000, time:9.375000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:8.500000, time:1.250000,  nonconst if:(op0[ref offset: 96] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.08 size: 3 time: 12
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.04 size: 3 time: 12
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19

IPA function summary for Com_EB_CalculateFilter/12 inlinable
  global time:     23.700000
  self size:       72
  global size:     72
  min size:       90
  self stack:      0
  global stack:    0
    size:0.500000, time:0.050000
    size:3.500000, time:2.050000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:22.500000, time:8.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Com_EB_CalculateFilter_Uint64/10 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 9
    Com_EB_CalculateFilter_Sint64/11 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 9
    Com_EB_CalculateFilter_Sint32/9 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 5
    Com_EB_CalculateFilter_Sint16/8 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 3
    Com_EB_CalculateFilter_Sint8/7 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 2
    Com_EB_CalculateFilter_Uint32/6 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 5
    Com_EB_CalculateFilter_Uint16/5 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 3
    Com_EB_CalculateFilter_Uint8/4 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 2
    Com_EB_CalculateFilter_Bool.isra.0/363 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 7 stack: 1

IPA function summary for Com_EB_CalculateFilter_Sint64/11 inlinable
  global time:     38.000000
  self size:       18
  global size:     18
  min size:       22
  self stack:      9
  global stack:    9
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_FilterSint64/225 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:18 stack: 6
       op1 is compile time invariant
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_CalculateFilter_Uint64/10 inlinable
  global time:     38.000000
  self size:       18
  global size:     18
  min size:       22
  self stack:      9
  global stack:    9
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_FilterUint64/224 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:18 stack: 6
       op1 is compile time invariant
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_CalculateFilter_Sint32/9 inlinable
  global time:     38.000000
  self size:       18
  global size:     18
  min size:       22
  self stack:      5
  global stack:    5
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_FilterSint32/223 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:37 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_CalculateFilter_Sint16/8 inlinable
  global time:     38.000000
  self size:       18
  global size:     18
  min size:       22
  self stack:      3
  global stack:    3
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_FilterSint16/221 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:37 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_CalculateFilter_Sint8/7 inlinable
  global time:     38.000000
  self size:       18
  global size:     18
  min size:       22
  self stack:      2
  global stack:    2
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_FilterSint8/219 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:35 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_CalculateFilter_Uint32/6 inlinable
  global time:     38.000000
  self size:       18
  global size:     18
  min size:       22
  self stack:      5
  global stack:    5
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_FilterUint32/222 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:37 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_CalculateFilter_Uint16/5 inlinable
  global time:     38.000000
  self size:       18
  global size:     18
  min size:       22
  self stack:      3
  global stack:    3
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_FilterUint16/220 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:37 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_CalculateFilter_Uint8/4 inlinable
  global time:     38.000000
  self size:       18
  global size:     18
  min size:       22
  self stack:      2
  global stack:    2
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_FilterUint8/218 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:35 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19


Flattening functions:
Overall time estimate: 24190.259033 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop/380.
Enqueueing calls in Com_IsValidConfig.part.0/379.
Enqueueing calls in Com_EB_SendSignalGroup.part.0/378.
Enqueueing calls in Com_EB_SendSignalGroupArray_DETCheck.part.0/377.
Enqueueing calls in Com_EB_RouteSignalGroup.isra.0/376.
Enqueueing calls in Com_EB_RouteSG_2_SG.isra.0/375.
Enqueueing calls in Com_EB_RouteSignal.isra.0/374.
Enqueueing calls in Com_EB_RouteSignalHelper_Write.part.0/373.
Enqueueing calls in Com_EB_SendSignal_Transmit.part.0/372.
Enqueueing calls in Com_EB_Send_Pdu.part.0/371.
Enqueueing calls in Com_EB_HandleTxConfirmations.part.0/370.
Enqueueing calls in Com_EB_HandleRxConfirm.isra.0/369.
Enqueueing calls in Com_EB_WriteShadowBuffer.isra.0/368.
Enqueueing calls in Com_EB_NotifyReceivers.isra.0/367.
Enqueueing calls in Com_EB_HandleRxSignalsWithBuffer.isra.0/366.
Enqueueing calls in Com_EB_CalculateGroupSignalTM.isra.0/364.
Enqueueing calls in Com_EB_CalculateFilter_Bool.isra.0/363.
Enqueueing calls in Com_CopyRxSignalGroupArray_Array.part.0/362.
Enqueueing calls in Com_CopyRxSignalGroupArray_Shadow.part.0/361.
Enqueueing calls in Com_CopyRxSignalGroupArray.part.0/360.
Enqueueing calls in Com_EB_InitSGBuffer.isra.0/359.
Enqueueing calls in Com_GetTxSignalGroupCfg.part.0/358.
Enqueueing calls in Com_GetTxSignalCfg.part.0/357.
Enqueueing calls in Com_GetRxSignalGroupCfg.part.0/356.
Enqueueing calls in Com_GetRxSignalCfg.part.0/355.
Enqueueing calls in Com_EB_CheckMdtforPdu.isra.0/354.
Enqueueing calls in Com_EB_HandleRxSignalGroups.isra.0/353.
Enqueueing calls in Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351.
Enqueueing calls in Com_EB_HandleRxSignalsDMUBOnly.isra.0/350.
Enqueueing calls in Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349.
Enqueueing calls in Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346.
Enqueueing calls in Com_EB_MdtQueue.isra.0/345.
Enqueueing calls in Com_EB_TxDM_TMNone.part.0/344.
Enqueueing calls in Com_EB_FilterUint64.part.0/343.
Enqueueing calls in Com_EB_FilterSint64.part.0/342.
Enqueueing calls in Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341.
Enqueueing calls in Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340.
Enqueueing calls in Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339.
Enqueueing calls in Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338.
Enqueueing calls in Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337.
Enqueueing calls in Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336.
Enqueueing calls in Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335.
Enqueueing calls in Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334.
Enqueueing calls in Com_ReceiveSignalGroup_Replace.isra.0/333.
Enqueueing calls in Com_EB_Read_SignalExt.part.0/332.
Enqueueing calls in Com_GetSendSignalRetVal.isra.0/331.
Enqueueing calls in Com_EB_RxDMSignalQueue.isra.0/330.
Enqueueing calls in Com_EB_RxDMSignalGroupQueue.isra.0/329.
Enqueueing calls in Com_EB_RxDMQueue.isra.0/328.
Enqueueing calls in Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327.
Enqueueing calls in Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326.
Enqueueing calls in Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325.
Enqueueing calls in Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324.
Enqueueing calls in Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323.
Enqueueing calls in Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322.
Enqueueing calls in Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321.
Enqueueing calls in Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320.
Enqueueing calls in Com_StartOfReception/300.
Enqueueing calls in Com_CopyRxData/299.
Enqueueing calls in Com_CopyTxData/298.
Enqueueing calls in Com_GetStatus/297.
Enqueueing calls in Com_DeInit/296.
Enqueueing calls in Com_GetVersionInfo/295.
Enqueueing calls in Com_UpdateShadowSignal/294.
Enqueueing calls in Com_TpTxConfirmation/293.
Enqueueing calls in Com_TxConfirmation/292.
Enqueueing calls in Com_EB_HlpTxConfirmation/291.
Enqueueing calls in Com_EB_HandleTxConfirmations/290.
Enqueueing calls in Com_TriggerTransmit/289.
Enqueueing calls in Com_TriggerIPDUSend/288.
Enqueueing calls in Com_SwitchIpduTxMode/287.
Enqueueing calls in Com_ComXf_TxPrepareBuffer/286.
Enqueueing calls in Com_SendSignalGroupArray/285.
Enqueueing calls in Com_SendSignalGroup/284.
Enqueueing calls in Com_SetupTxSignalGroup_DET/283.
Enqueueing calls in Com_GetTxSignalGroupCfg/282.
Enqueueing calls in Com_GetTxSignalCfg/281.
Enqueueing calls in Com_ComXf_GetTxSGId/280.
Enqueueing calls in Com_SendDynSignal/279.
Enqueueing calls in Com_SendSignal/278.
Enqueueing calls in Com_TpRxIndication/276.
Enqueueing calls in Com_RxIndication/275.
Enqueueing calls in Com_ComXf_Get_RxSignalGroupSize/274.
Enqueueing calls in Com_ReceiveSignalGroupArray/273.
Enqueueing calls in Com_ReceiveSignalGroup/272.
Enqueueing calls in Com_CopyRxSignalGroupArray/271.
Enqueueing calls in Com_CopyRxSignalGroupArray_Shadow/270.
Enqueueing calls in Com_CopyRxSignalGroupArray_Array/269.
Enqueueing calls in Com_SetupRxSignalGroup/268.
Enqueueing calls in Com_SetupRxSignalGroup_DET/267.
Enqueueing calls in Com_GetRxSignalGroupCfg/266.
Enqueueing calls in Com_ComXf_GetRxSGId/264.
Enqueueing calls in Com_ReceiveDynSignal/263.
Enqueueing calls in Com_ReceiveSignal/262.
Enqueueing calls in Com_GetRxSignalCfg/261.
Enqueueing calls in Com_EB_Read_SignalExt/260.
Enqueueing calls in Com_EB_Read_SignalReplace/259.
Enqueueing calls in Com_EB_Read_SignalExt_SigBuffer/258.
Enqueueing calls in Com_EB_CheckRxSignalDM/257.
Enqueueing calls in Com_EB_ReadValue_Uint8Dyn/256.
Enqueueing calls in Com_ReceiveShadowSignal/255.
Enqueueing calls in Com_MainFunctionTx/254.
Enqueueing calls in Com_EB_MainFunctionTx_hlp/253.
Enqueueing calls in Com_EB_Handle_Send_Pdu/252.
Enqueueing calls in Com_EB_HandleDeferredTxConfirm/251.
Enqueueing calls in Com_EB_CheckTxDMforPdu/250.
Enqueueing calls in Com_EB_CheckNTimesSendforPdu/248.
Enqueueing calls in Com_EB_CheckPeriodicSendforPdu/247.
Enqueueing calls in Com_EB_TMSwitch/246.
Enqueueing calls in Com_EB_CheckTMSforPdu/245.
Enqueueing calls in Com_MainFunctionRx/244.
Enqueueing calls in Com_EB_CheckRxSignalGroupDMTable/243.
Enqueueing calls in Com_EB_CheckRxSignalDMTable/242.
Enqueueing calls in Com_EB_CheckRxDMTable/241.
Enqueueing calls in Com_MainFunctionRouteSignals/240.
Enqueueing calls in Com_MainFunctionRouteSignals_Src_Generic_hlp/239.
Enqueueing calls in Com_EB_RouteGroupSignal/237.
Enqueueing calls in Com_EB_RouteReceiveSignalGroup/235.
Enqueueing calls in Com_EB_RouteSignalHelper_Write/233.
Enqueueing calls in Com_EB_RouteSignalHelper/232.
Enqueueing calls in Com_EB_CheckSendSignalGroup/231.
Enqueueing calls in Com_EB_SetSendSignalGroup/230.
Enqueueing calls in Com_SetIpduGroup/229.
Enqueueing calls in Com_ClearIpduGroupVector/228.
Enqueueing calls in Com_Init/227.
Enqueueing calls in Com_GetConfigurationId/226.
Enqueueing calls in Com_EB_FilterSint64/225.
Enqueueing calls in Com_EB_FilterUint64/224.
Enqueueing calls in Com_EB_FilterSint32/223.
Enqueueing calls in Com_EB_FilterUint32/222.
Enqueueing calls in Com_EB_FilterSint16/221.
Enqueueing calls in Com_EB_FilterUint16/220.
Enqueueing calls in Com_EB_FilterSint8/219.
Enqueueing calls in Com_EB_FilterUint8/218.
Enqueueing calls in Com_EB_FilterBoolean/217.
Enqueueing calls in Com_EB_FilterOneEveryN/216.
Enqueueing calls in Com_ReceptionDMControl/215.
Enqueueing calls in Com_IpduGroupControl/214.
Enqueueing calls in Com_SetupTxSignalGroup/213.
Enqueueing calls in Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212.
Enqueueing calls in Com_EB_WriteShadowBuffer_Fragment/208.
Enqueueing calls in Com_EB_CalculateSignalGroupTM/207.
Enqueueing calls in Com_EB_SendSignalGroupArray/206.
Enqueueing calls in Com_EB_SendSignalGroupArray_DETCheck/205.
Enqueueing calls in Com_EB_SendSignalGroup/204.
Enqueueing calls in Com_EB_WriteDynSignal_ExitArea_0/202.
Enqueueing calls in Com_EB_SendSignal_Transmit/201.
Enqueueing calls in Com_EB_Write_SignalExt/200.
Enqueueing calls in Com_EB_SendSignal_Filter/199.
Enqueueing calls in Com_EB_ClearTxUpdateBits/197.
Enqueueing calls in Com_EB_TxConfirmations/196.
Enqueueing calls in Com_EB_TxDM_TMNone/195.
Enqueueing calls in Com_EB_TxDMQueue/194.
Enqueueing calls in Com_EB_InitStartTxIPdu/193.
Enqueueing calls in Com_EB_InitTxIPdu/192.
Enqueueing calls in Com_EB_HandleTxIPdu/191.
Enqueueing calls in Com_EB_StartIPdu/190.
Enqueueing calls in Com_EB_InitTxIPdu_Signals/189.
Enqueueing calls in Com_EB_InitTx_Signal/188.
Enqueueing calls in Com_EB_InitTxIPdu_HandleFlags/187.
Enqueueing calls in Com_EB_InitTxIPdu_SignalGroups/186.
Enqueueing calls in Com_EB_ClearTxSGTMSState/185.
Enqueueing calls in Com_EB_InitTxIPdu_PduBuffer/184.
Enqueueing calls in Com_EB_HandleTxIPdu_Stop/183.
Enqueueing calls in Com_EB_HandleTxIPdu_Start/182.
Enqueueing calls in Com_EB_HandleMDT/181.
Enqueueing calls in Com_EB_Send_Pdu/180.
Enqueueing calls in Com_EB_PeriodicSendQueue/179.
Enqueueing calls in Com_EB_CalculateTM/178.
Enqueueing calls in Com_EB_NTimesSendQueue/177.
Enqueueing calls in Com_EB_Request_Send_Pdu/176.
Enqueueing calls in Com_EB_SendUponSendApiCall/175.
Enqueueing calls in Com_EB_DisableSignalGroupBasedDMFlag/174.
Enqueueing calls in Com_EB_DisableSignalBasedDMFlag/173.
Enqueueing calls in Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172.
Enqueueing calls in Com_EB_EnableSignalGroupBasedDMFlag/171.
Enqueueing calls in Com_EB_EnableSignalBasedDMFlag/170.
Enqueueing calls in Com_GetRxIPduBuffer/165.
Enqueueing calls in Com_EB_InitStartRxIPdu/164.
Enqueueing calls in Com_EB_InitRxIPdu/163.
Enqueueing calls in Com_EB_InitRxSignalsWithFilter/162.
Enqueueing calls in Com_EB_HandleRxIPdu/157.
Enqueueing calls in Com_EB_HandleRxIPdu_DisableRxDM/153.
Enqueueing calls in Com_EB_HandleRxIPdu_EnableRxDM/152.
Enqueueing calls in Com_EB_HandleRxIPdu_Start/151.
Enqueueing calls in Com_EB_HandlePduRxDM/149.
Enqueueing calls in Com_EB_HandlePduGroupTx/148.
Enqueueing calls in Com_EB_HandlePduGroupRx/147.
Enqueueing calls in Com_EB_Write_DET/146.
Enqueueing calls in Com_EB_Write_A1_EL_DUB_DOC/145.
Enqueueing calls in Com_EB_Write_BO_EL_DUB_DOC/144.
Enqueueing calls in Com_EB_Write_A1_DL_DUB_DOC/143.
Enqueueing calls in Com_EB_Write_BO_DL_DUB_DOC/142.
Enqueueing calls in Com_EB_Write_AY_S0_EL_EUB_EOC_E2/141.
Enqueueing calls in Com_EB_Write_64_SX_EL_EUB_EOC_E2/140.
Enqueueing calls in Com_EB_Write_32_SX_EL_EUB_EOC_E2/139.
Enqueueing calls in Com_EB_Write_16_SX_EL_EUB_EOC_E2/138.
Enqueueing calls in Com_EB_Write_08_SX_EL_EUB_EOC_E2/137.
Enqueueing calls in Com_EB_Write_AY_S1_EL_EUB_EOC_E3/136.
Enqueueing calls in Com_EB_Write_AY_S0_EL_EUB_EOC_E1/135.
Enqueueing calls in Com_EB_Write_64_SX_EL_EUB_EOC_E1/134.
Enqueueing calls in Com_EB_Write_32_SX_EL_EUB_EOC_E1/133.
Enqueueing calls in Com_EB_Write_16_SX_EL_EUB_EOC_E1/132.
Enqueueing calls in Com_EB_Write_08_SX_EL_EUB_EOC_E1/131.
Enqueueing calls in Com_EB_Write_AY_S0_EL_EUB_DOC_E2/130.
Enqueueing calls in Com_EB_Write_64_SX_EL_EUB_DOC_E2/129.
Enqueueing calls in Com_EB_Write_32_SX_EL_EUB_DOC_E2/128.
Enqueueing calls in Com_EB_Write_16_SX_EL_EUB_DOC_E2/127.
Enqueueing calls in Com_EB_Write_08_SX_EL_EUB_DOC_E2/126.
Enqueueing calls in Com_EB_Write_AY_S1_EL_EUB_DOC_E3/125.
Enqueueing calls in Com_EB_Write_AY_S0_EL_EUB_DOC_E1/124.
Enqueueing calls in Com_EB_Write_64_SX_EL_EUB_DOC_E1/123.
Enqueueing calls in Com_EB_Write_32_SX_EL_EUB_DOC_E1/122.
Enqueueing calls in Com_EB_Write_16_SX_EL_EUB_DOC_E1/121.
Enqueueing calls in Com_EB_Write_08_SX_EL_EUB_DOC_E1/120.
Enqueueing calls in Com_EB_Write_AY_S0_EL_DUB_EOC_E2/119.
Enqueueing calls in Com_EB_Write_64_SX_EL_DUB_EOC_E2/118.
Enqueueing calls in Com_EB_Write_32_SX_EL_DUB_EOC_E2/117.
Enqueueing calls in Com_EB_Write_16_SX_EL_DUB_EOC_E2/116.
Enqueueing calls in Com_EB_Write_08_SX_EL_DUB_EOC_E2/115.
Enqueueing calls in Com_EB_Write_AY_S1_EL_DUB_EOC_E3/114.
Enqueueing calls in Com_EB_Write_AY_S0_EL_DUB_EOC_E1/113.
Enqueueing calls in Com_EB_Write_64_SX_EL_DUB_EOC_E1/112.
Enqueueing calls in Com_EB_Write_32_SX_EL_DUB_EOC_E1/111.
Enqueueing calls in Com_EB_Write_16_SX_EL_DUB_EOC_E1/110.
Enqueueing calls in Com_EB_Write_08_SX_EL_DUB_EOC_E1/109.
Enqueueing calls in Com_EB_Write_AY_S0_EL_DUB_DOC_E2/108.
Enqueueing calls in Com_EB_Write_64_SX_EL_DUB_DOC_E2/107.
Enqueueing calls in Com_EB_Write_32_SX_EL_DUB_DOC_E2/106.
Enqueueing calls in Com_EB_Write_16_SX_EL_DUB_DOC_E2/105.
Enqueueing calls in Com_EB_Write_08_SX_EL_DUB_DOC_E2/104.
Enqueueing calls in Com_EB_Write_AY_S1_EL_DUB_DOC_E3/103.
Enqueueing calls in Com_EB_Write_AY_S0_EL_DUB_DOC_E1/102.
Enqueueing calls in Com_EB_Write_64_SX_EL_DUB_DOC_E1/101.
Enqueueing calls in Com_EB_Write_32_SX_EL_DUB_DOC_E1/100.
Enqueueing calls in Com_EB_Write_16_SX_EL_DUB_DOC_E1/99.
Enqueueing calls in Com_EB_Write_08_SX_EL_DUB_DOC_E1/98.
Enqueueing calls in Com_EB_Write_AY_S0_DL_EUB_EOC_E2/97.
Enqueueing calls in Com_EB_Write_64_SX_DL_EUB_EOC_E2/96.
Enqueueing calls in Com_EB_Write_32_SX_DL_EUB_EOC_E2/95.
Enqueueing calls in Com_EB_Write_16_SX_DL_EUB_EOC_E2/94.
Enqueueing calls in Com_EB_Write_08_SX_DL_EUB_EOC_E2/93.
Enqueueing calls in Com_EB_Write_AY_S1_DL_EUB_EOC_E3/92.
Enqueueing calls in Com_EB_Write_AY_S0_DL_EUB_EOC_E1/91.
Enqueueing calls in Com_EB_Write_64_SX_DL_EUB_EOC_E1/90.
Enqueueing calls in Com_EB_Write_32_SX_DL_EUB_EOC_E1/89.
Enqueueing calls in Com_EB_Write_16_SX_DL_EUB_EOC_E1/88.
Enqueueing calls in Com_EB_Write_08_SX_DL_EUB_EOC_E1/87.
Enqueueing calls in Com_EB_Write_AY_S0_DL_EUB_DOC_E2/86.
Enqueueing calls in Com_EB_Write_64_SX_DL_EUB_DOC_E2/85.
Enqueueing calls in Com_EB_Write_32_SX_DL_EUB_DOC_E2/84.
Enqueueing calls in Com_EB_Write_16_SX_DL_EUB_DOC_E2/83.
Enqueueing calls in Com_EB_Write_08_SX_DL_EUB_DOC_E2/82.
Enqueueing calls in Com_EB_Write_AY_S1_DL_EUB_DOC_E3/81.
Enqueueing calls in Com_EB_Write_AY_S0_DL_EUB_DOC_E1/80.
Enqueueing calls in Com_EB_Write_64_SX_DL_EUB_DOC_E1/79.
Enqueueing calls in Com_EB_Write_32_SX_DL_EUB_DOC_E1/78.
Enqueueing calls in Com_EB_Write_16_SX_DL_EUB_DOC_E1/77.
Enqueueing calls in Com_EB_Write_08_SX_DL_EUB_DOC_E1/76.
Enqueueing calls in Com_EB_Write_AY_S0_DL_DUB_EOC_E2/75.
Enqueueing calls in Com_EB_Write_64_SX_DL_DUB_EOC_E2/74.
Enqueueing calls in Com_EB_Write_32_SX_DL_DUB_EOC_E2/73.
Enqueueing calls in Com_EB_Write_16_SX_DL_DUB_EOC_E2/72.
Enqueueing calls in Com_EB_Write_08_SX_DL_DUB_EOC_E2/71.
Enqueueing calls in Com_EB_Write_AY_S1_DL_DUB_EOC_E3/70.
Enqueueing calls in Com_EB_Write_AY_S0_DL_DUB_EOC_E1/69.
Enqueueing calls in Com_EB_Write_64_SX_DL_DUB_EOC_E1/68.
Enqueueing calls in Com_EB_Write_32_SX_DL_DUB_EOC_E1/67.
Enqueueing calls in Com_EB_Write_16_SX_DL_DUB_EOC_E1/66.
Enqueueing calls in Com_EB_Write_08_SX_DL_DUB_EOC_E1/65.
Enqueueing calls in Com_EB_Write_AY_S0_DL_DUB_DOC_E2/64.
Enqueueing calls in Com_EB_Write_64_SX_DL_DUB_DOC_E2/63.
Enqueueing calls in Com_EB_Write_32_SX_DL_DUB_DOC_E2/62.
Enqueueing calls in Com_EB_Write_16_SX_DL_DUB_DOC_E2/61.
Enqueueing calls in Com_EB_Write_08_SX_DL_DUB_DOC_E2/60.
Enqueueing calls in Com_EB_Write_AY_S1_DL_DUB_DOC_E3/59.
Enqueueing calls in Com_EB_Write_AY_S0_DL_DUB_DOC_E1/58.
Enqueueing calls in Com_EB_Write_64_SX_DL_DUB_DOC_E1/57.
Enqueueing calls in Com_EB_Write_32_SX_DL_DUB_DOC_E1/56.
Enqueueing calls in Com_EB_Write_16_SX_DL_DUB_DOC_E1/55.
Enqueueing calls in Com_EB_Write_08_SX_DL_DUB_DOC_E1/54.
Enqueueing calls in Com_EB_Read_ZS/52.
Enqueueing calls in Com_EB_Read_DET/51.
Enqueueing calls in Com_EB_Read_A1_EL/50.
Enqueueing calls in Com_EB_Read_BO_EL/49.
Enqueueing calls in Com_EB_Read_A1_DL/48.
Enqueueing calls in Com_EB_Read_BO_DL/47.
Enqueueing calls in Com_EB_Read_32_EL_SignExt/46.
Enqueueing calls in Com_EB_Read_32_DL_SignExt/45.
Enqueueing calls in Com_EB_Read_16_EL_SignExt/44.
Enqueueing calls in Com_EB_Read_16_DL_SignExt/43.
Enqueueing calls in Com_EB_Read_08_EL_SignExt/42.
Enqueueing calls in Com_EB_Read_08_DL_SignExt/41.
Enqueueing calls in Com_EB_Read_AY_EL_E3/40.
Enqueueing calls in Com_EB_Read_AY_DL_E3/39.
Enqueueing calls in Com_EB_Read_AY_EL_E2/38.
Enqueueing calls in Com_EB_Read_64_EL_E2/37.
Enqueueing calls in Com_EB_Read_32_EL_E2/36.
Enqueueing calls in Com_EB_Read_16_EL_E2/35.
Enqueueing calls in Com_EB_Read_08_EL_E2/34.
Enqueueing calls in Com_EB_Read_AY_EL_E1/33.
Enqueueing calls in Com_EB_Read_64_EL_E1/32.
Enqueueing calls in Com_EB_Read_32_EL_E1/31.
Enqueueing calls in Com_EB_Read_16_EL_E1/30.
Enqueueing calls in Com_EB_Read_08_EL_E1/29.
Enqueueing calls in Com_EB_Read_AY_DL_E2/28.
Enqueueing calls in Com_EB_Read_64_DL_E2/27.
Enqueueing calls in Com_EB_Read_32_DL_E2/26.
Enqueueing calls in Com_EB_Read_16_DL_E2/25.
Enqueueing calls in Com_EB_Read_08_DL_E2/24.
Enqueueing calls in Com_EB_Read_AY_DL_E1/23.
Enqueueing calls in Com_EB_Read_64_DL_E1/22.
Enqueueing calls in Com_EB_Read_32_DL_E1/21.
Enqueueing calls in Com_EB_Read_16_DL_E1/20.
Enqueueing calls in Com_EB_Read_08_DL_E1/19.
Enqueueing calls in Com_IsValidConfig/17.
Enqueueing calls in Com_EB_CbkTxPrepDummyCbk/16.
Enqueueing calls in Com_EB_TxDMDummyCbk/15.
Enqueueing calls in Com_ResetFilerOneEveryN/14.
Enqueueing calls in Com_EB_SetBuffer/13.
Enqueueing calls in Com_EB_CalculateFilter/12.
Enqueueing calls in Com_EB_CalculateFilter_Sint64/11.
Enqueueing calls in Com_EB_CalculateFilter_Uint64/10.
Enqueueing calls in Com_EB_CalculateFilter_Sint32/9.
Enqueueing calls in Com_EB_CalculateFilter_Sint16/8.
Enqueueing calls in Com_EB_CalculateFilter_Sint8/7.
Enqueueing calls in Com_EB_CalculateFilter_Uint32/6.
Enqueueing calls in Com_EB_CalculateFilter_Uint16/5.
Enqueueing calls in Com_EB_CalculateFilter_Uint8/4.

Considering Com_TpRxIndication/276 with 3 size
 to be inlined into Com_TpTxConfirmation/293 in unknown:0
 Estimated badness is -inf, frequency 1.00.

Considering Com_EB_Read_A1_DL/48 with 7 size
 to be inlined into Com_EB_Read_A1_EL/50 in unknown:0
 Estimated badness is -inf, frequency 1.00.

Considering Com_EB_Write_A1_DL_DUB_DOC/143 with 7 size
 to be inlined into Com_EB_Write_A1_EL_DUB_DOC/145 in unknown:0
 Estimated badness is -inf, frequency 1.00.

Considering Com_EB_TxDMDummyCbk/15 with 3 size
 to be inlined into Com_EB_CbkTxPrepDummyCbk/16 in unknown:0
 Estimated badness is -inf, frequency 1.00.

Considering Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop/380 with 8 size
 to be inlined into Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:744
 Estimated badness is -17.979798, frequency 8.09.

Considering Com_EB_InitSGBuffer.isra.0/359 with 12 size
 to be inlined into Com_EB_InitTxIPdu_SignalGroups/186 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxIPdu.c:714
 Estimated badness is -1.807925, frequency 3.95.

Considering Com_EB_HandleTxIPdu/191 with 12 size
 to be inlined into Com_EB_HandlePduGroupTx/148 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_IPduGroup.c:176
 Estimated badness is -1.288073, frequency 3.38.

Considering Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 with 9 size
 to be inlined into Com_EB_HandleRxIPdu_DisableRxDM/153 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:576
 Estimated badness is -1.244444, frequency 1.00.

Considering Com_SetupTxSignalGroup/213 with 20 size
 to be inlined into Com_EB_CheckSendSignalGroup/231 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:510
 Estimated badness is -1.165855, frequency 4.08.
ipa-prop: Discovered an indirect call to a known target (Com_SetupTxSignalGroup/387 -> Com_EB_SendSignalGroup/204), for stmt _6 = Com_TxSignalGroupFPtr_11(D) (SGArrayPtr_12(D), SGArrayLength_13(D), SignalGPtr_8(D), PduId_9, IPduPtr_10, SendInMainFunctionTx_14(D));
ipa-prop: Removed a reference from Com_EB_CheckSendSignalGroup/231 to Com_EB_SendSignalGroup.

Considering Com_SetupRxSignalGroup_DET/267 with 16 size
 to be inlined into Com_ReceiveSignalGroup/272 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_ReceiveSignalGroup.c:546
 Estimated badness is -0.607143, frequency 1.00.

Considering Com_CopyRxSignalGroupArray_Array.part.0/362 with 12 size
 to be inlined into Com_CopyRxSignalGroupArray_Array/269 in unknown:0
 Estimated badness is -0.555556, frequency 0.50.

Considering Com_EB_FilterSint64.part.0/342 with 7 size
 to be inlined into Com_EB_FilterSint64/225 in unknown:0
 Estimated badness is -0.518947, frequency 0.34.

Considering Com_EB_FilterSint64.part.0/342 with 7 size
 to be inlined into Com_EB_FilterUint64/224 in unknown:0
 Estimated badness is -0.518947, frequency 0.34.

Considering Com_SetupTxSignalGroup_DET/283 with 18 size
 to be inlined into Com_SendSignalGroup/284 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_SendSignalGroup.c:251
 Estimated badness is -0.500000, frequency 1.00.

Considering Com_SetupTxSignalGroup_DET/283 with 18 size
 to be inlined into Com_SendSignalGroupArray/285 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_SendSignalGroup.c:284
 Estimated badness is -0.500000, frequency 1.00.

Considering Com_EB_InitStartTxIPdu/193 with 16 size
 to be inlined into Com_Init/227 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Init.c:171
 Estimated badness is -0.413324, frequency 5.42.

Considering Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 with 9 size
 to be inlined into Com_EB_InitRxIPdu/163 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:1449
 Estimated badness is -0.380952, frequency 1.00.

Considering Com_SetupTxSignalGroup/213 with 20 size
 to be inlined into Com_SetupTxSignalGroup_DET/390 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_SendSignalGroup.c:225
 Estimated badness is -0.341489, frequency 0.53.
ipa-prop: Discovered an indirect call to a known target (Com_SetupTxSignalGroup/391 -> Com_EB_SendSignalGroup/204), for stmt _6 = Com_TxSignalGroupFPtr_11(D) (SGArrayPtr_12(D), SGArrayLength_13(D), SignalGPtr_8(D), PduId_9, IPduPtr_10, SendInMainFunctionTx_14(D));
ipa-prop: Removed a reference from Com_SendSignalGroup/284 to Com_EB_SendSignalGroup.

Considering Com_SetupTxSignalGroup/213 with 20 size
 to be inlined into Com_SetupTxSignalGroup_DET/283 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_SendSignalGroup.c:225
 Estimated badness is -0.341489, frequency 0.53.
ipa-prop: Discovered an indirect call to a known target (Com_SetupTxSignalGroup/213 -> Com_EB_SendSignalGroupArray_DETCheck/205), for stmt _6 = Com_TxSignalGroupFPtr_11(D) (SGArrayPtr_12(D), SGArrayLength_13(D), SignalGPtr_8(D), PduId_9, IPduPtr_10, SendInMainFunctionTx_14(D));
ipa-prop: Removed a reference from Com_SendSignalGroupArray/285 to Com_EB_SendSignalGroupArray_DETCheck.

Considering Com_EB_SendSignalGroupArray/206 with 18 size
 to be inlined into Com_EB_RouteSG_2_SG.isra.0/375 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:869
 Estimated badness is -0.279835, frequency 1.00.

Considering Com_EB_RouteGroupSignal/237 with 15 size
 to be inlined into Com_MainFunctionRouteSignals_Src_Generic_hlp/239 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:1275
 Estimated badness is -0.275583, frequency 2.02.

Considering Com_EB_InitTxIPdu_Signals/189 with 17 size
 to be inlined into Com_EB_InitTxIPdu/192 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxIPdu.c:1139
 Estimated badness is -0.270732, frequency 1.00.

Considering Com_CopyRxSignalGroupArray_Shadow.part.0/361 with 9 size
 to be inlined into Com_CopyRxSignalGroupArray_Shadow/270 in unknown:0
 Estimated badness is -0.241579, frequency 0.34.

Considering Com_EB_InitStartRxIPdu/164 with 24 size
 to be inlined into Com_Init/227 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Init.c:153
 Estimated badness is -0.211945, frequency 5.42.

Considering Com_SetupRxSignalGroup_DET/267 with 16 size
 to be inlined into Com_ReceiveSignalGroupArray/273 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_ReceiveSignalGroup.c:599
 Estimated badness is -0.196861, frequency 0.73.

Considering Com_EB_HandleMDT/181 with 11 size
 to be inlined into Com_EB_Send_Pdu/180 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxIPdu.c:275
 Estimated badness is -0.165360, frequency 0.47.

Considering Com_EB_InitTxIPdu_PduBuffer/184 with 21 size
 to be inlined into Com_EB_InitTxIPdu/192 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxIPdu.c:1127
 Estimated badness is -0.158809, frequency 1.00.

Considering Com_EB_SendSignalGroup.part.0/378 with 8 size
 to be inlined into Com_EB_SendSignalGroup/204 in unknown:0
 Estimated badness is -0.150592, frequency 0.22.

Considering Com_EB_HandleTxConfirmations.part.0/370 with 14 size
 to be inlined into Com_EB_HandleTxConfirmations/290 in unknown:0
 Estimated badness is -0.150000, frequency 0.50.

Considering Com_EB_SendSignalGroupArray/206 with 18 size
 to be inlined into Com_EB_SendSignalGroupArray_DETCheck/205 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxSignalGroup.c:277
 Estimated badness is -0.131695, frequency 0.44.

Considering Com_EB_InitSGBuffer.isra.0/359 with 12 size
 to be inlined into Com_ComXf_TxPrepareBuffer/286 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_SendSignalGroup.c:342
 Estimated badness is -0.123516, frequency 0.14.

Considering Com_EB_HandleTxIPdu_Start/182 with 19 size
 to be inlined into Com_EB_HandleTxIPdu/191 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxIPdu.c:1100
 Estimated badness is -0.120358, frequency 1.15.

Considering Com_EB_Read_SignalExt.part.0/332 with 13 size
 to be inlined into Com_EB_Read_SignalExt/260 in unknown:0
 Estimated badness is -0.106037, frequency 0.34.

Considering Com_EB_ClearTxSGTMSState/185 with 59 size
 to be inlined into Com_EB_InitTxIPdu_SignalGroups/186 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxIPdu.c:722
 Estimated badness is -0.091662, frequency 8.09.

Considering Com_EB_HandleRxIPdu/157 with 45 size
 to be inlined into Com_EB_HandlePduGroupRx/147 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_IPduGroup.c:104
 Estimated badness is -0.089883, frequency 3.38.

Considering Com_EB_HandleRxIPdu_Start/151 with 10 size
 to be inlined into Com_EB_HandleRxIPdu/157 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:837
 Estimated badness is -0.098808, frequency 0.19.

Considering Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 with 73 size
 to be inlined into Com_EB_HandleRxSignalGroups.isra.0/353 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:1025
 Estimated badness is -0.078333, frequency 8.09.

Considering Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 with 27 size
 to be inlined into Com_EB_NotifyReceivers.isra.0/367 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:433
 Estimated badness is -0.076720, frequency 1.00.

Considering Com_EB_SendSignalGroupArray_DETCheck.part.0/377 with 8 size
 to be inlined into Com_EB_SendSignalGroupArray_DETCheck/205 in unknown:0
 Estimated badness is -0.070789, frequency 0.10.

Considering Com_EB_RouteSignal.isra.0/374 with 33 size
 to be inlined into Com_MainFunctionRouteSignals_Src_Generic_hlp/239 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:1250
 Estimated badness is -0.067892, frequency 2.02.

Considering Com_EB_CheckRxSignalDM/257 with 31 size
 to be inlined into Com_EB_Read_SignalReplace/259 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_ReceiveSignal.c:502
 Estimated badness is -0.064700, frequency 1.00.

Considering Com_EB_SetSendSignalGroup/230 with 21 size
 to be inlined into Com_EB_RouteSignalHelper/232 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:715
 Estimated badness is -0.063465, frequency 2.69.

Considering Com_EB_InitRxSignalsWithFilter/162 with 27 size
 to be inlined into Com_EB_InitRxIPdu/163 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:1420
 Estimated badness is -0.061381, frequency 1.00.

Considering Com_IsValidConfig.part.0/379 with 10 size
 to be inlined into Com_IsValidConfig/17 in unknown:0
 Estimated badness is -0.060451, frequency 0.06.

Considering Com_EB_Send_Pdu.part.0/371 with 10 size
 to be inlined into Com_EB_Send_Pdu/180 in unknown:0
 Estimated badness is -0.059473, frequency 0.24.

Considering Com_EB_RouteReceiveSignalGroup/235 with 9 size
 to be inlined into Com_EB_RouteSignalGroup.isra.0/376 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:1022
 Estimated badness is -0.056447, frequency 0.25.

Considering Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320 with 28 size
 to be inlined into Com_EB_Write_64_SX_DL_DUB_DOC_E1/57 in unknown:0
 Estimated badness is -0.051128, frequency 0.50.

Considering Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321 with 28 size
 to be inlined into Com_EB_Write_64_SX_DL_DUB_DOC_E2/63 in unknown:0
 Estimated badness is -0.051128, frequency 0.50.

Considering Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322 with 28 size
 to be inlined into Com_EB_Write_64_SX_DL_DUB_EOC_E1/68 in unknown:0
 Estimated badness is -0.051128, frequency 0.50.

Considering Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323 with 28 size
 to be inlined into Com_EB_Write_64_SX_DL_DUB_EOC_E2/74 in unknown:0
 Estimated badness is -0.051128, frequency 0.50.

Considering Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324 with 28 size
 to be inlined into Com_EB_Write_64_SX_DL_EUB_DOC_E1/79 in unknown:0
 Estimated badness is -0.051128, frequency 0.50.

Considering Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325 with 28 size
 to be inlined into Com_EB_Write_64_SX_DL_EUB_DOC_E2/85 in unknown:0
 Estimated badness is -0.051128, frequency 0.50.

Considering Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326 with 28 size
 to be inlined into Com_EB_Write_64_SX_DL_EUB_EOC_E1/90 in unknown:0
 Estimated badness is -0.051128, frequency 0.50.

Considering Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327 with 28 size
 to be inlined into Com_EB_Write_64_SX_DL_EUB_EOC_E2/96 in unknown:0
 Estimated badness is -0.051128, frequency 0.50.

Considering Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 with 39 size
 to be inlined into Com_EB_NotifyReceivers.isra.0/367 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:428
 Estimated badness is -0.045569, frequency 1.00.

Considering Com_EB_InitTxIPdu_HandleFlags/187 with 37 size
 to be inlined into Com_EB_InitTxIPdu/192 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxIPdu.c:1133
 Estimated badness is -0.045473, frequency 1.00.

Considering Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 with 30 size
 to be inlined into Com_EB_Write_64_SX_EL_DUB_DOC_E1/101 in unknown:0
 Estimated badness is -0.043758, frequency 0.50.

Considering Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 with 30 size
 to be inlined into Com_EB_Write_64_SX_EL_EUB_DOC_E1/123 in unknown:0
 Estimated badness is -0.043758, frequency 0.50.

Considering Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 with 30 size
 to be inlined into Com_EB_Write_64_SX_EL_EUB_DOC_E2/129 in unknown:0
 Estimated badness is -0.043758, frequency 0.50.

Considering Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 with 30 size
 to be inlined into Com_EB_Write_64_SX_EL_EUB_EOC_E1/134 in unknown:0
 Estimated badness is -0.043758, frequency 0.50.

Considering Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 with 30 size
 to be inlined into Com_EB_Write_64_SX_EL_EUB_EOC_E2/140 in unknown:0
 Estimated badness is -0.043758, frequency 0.50.

Considering Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 with 30 size
 to be inlined into Com_EB_Write_64_SX_EL_DUB_EOC_E1/112 in unknown:0
 Estimated badness is -0.043758, frequency 0.50.

Considering Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 with 30 size
 to be inlined into Com_EB_Write_64_SX_EL_DUB_EOC_E2/118 in unknown:0
 Estimated badness is -0.043758, frequency 0.50.

Considering Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 with 30 size
 to be inlined into Com_EB_Write_64_SX_EL_DUB_DOC_E2/107 in unknown:0
 Estimated badness is -0.043758, frequency 0.50.

Considering Com_ReceiveSignalGroup_Replace.isra.0/333 with 34 size
 to be inlined into Com_CopyRxSignalGroupArray/271 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_ReceiveSignalGroup.c:492
 Estimated badness is -0.041929, frequency 1.00.

Considering Com_CopyRxSignalGroupArray.part.0/360 with 13 size
 to be inlined into Com_CopyRxSignalGroupArray/271 in unknown:0
 Estimated badness is -0.144774, frequency 0.34.

Considering Com_EB_RouteSignalGroup.isra.0/376 with 57 size
 to be inlined into Com_MainFunctionRouteSignals_Src_Generic_hlp/239 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:1263
 Estimated badness is -0.041038, frequency 2.02.

Considering Com_EB_RouteSG_2_SG.isra.0/375 with 27 size
 to be inlined into Com_EB_RouteSignalGroup.isra.0/376 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:994
 Estimated badness is -0.076528, frequency 1.66.

Considering Com_EB_MainFunctionTx_hlp/253 with 66 size
 to be inlined into Com_MainFunctionTx/254 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionTx.c:1259
 Estimated badness is -0.031690, frequency 2.75.

Considering Com_EB_HandleDeferredTxConfirm/251 with 27 size
 to be inlined into Com_EB_MainFunctionTx_hlp/253 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionTx.c:1221
 Estimated badness is -0.211905, frequency 2.75.

Considering Com_EB_Handle_Send_Pdu/252 with 23 size
 to be inlined into Com_EB_MainFunctionTx_hlp/253 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionTx.c:1213
 Estimated badness is -0.142654, frequency 0.91.

Considering Com_EB_CheckTMSforPdu/245 with 22 size
 to be inlined into Com_EB_MainFunctionTx_hlp/253 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionTx.c:1150
 Estimated badness is -0.129686, frequency 0.91.

Considering Com_EB_CheckMdtforPdu.isra.0/354 with 21 size
 to be inlined into Com_EB_MainFunctionTx_hlp/253 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionTx.c:1130
 Estimated badness is -0.121040, frequency 0.91.

Considering Com_EB_HandlePduRxDM/149 with 45 size
 to be inlined into Com_EB_NotifyReceivers.isra.0/367 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:411
 Estimated badness is -0.030678, frequency 1.00.

Considering Com_EB_HandleRxSignalsWithBuffer.isra.0/366 with 63 size
 to be inlined into Com_EB_NotifyReceivers.isra.0/367 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:422
 Estimated badness is -0.022727, frequency 1.00.

Considering Com_EB_EnableSignalGroupBasedDMFlag/171 with 56 size
 to be inlined into Com_EB_HandleRxIPdu_EnableRxDM/152 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:542
 Estimated badness is -0.022591, frequency 1.00.

Considering Com_EB_EnableSignalBasedDMFlag/170 with 56 size
 to be inlined into Com_EB_HandleRxIPdu_EnableRxDM/152 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:540
 Estimated badness is -0.022591, frequency 1.00.

Considering Com_EB_HandleTxIPdu_Stop/183 with 75 size
 to be inlined into Com_EB_HandleTxIPdu/191 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxIPdu.c:1104
 Estimated badness is -0.022414, frequency 2.23.

Considering Com_EB_CheckSendSignalGroup/231 with 38 size
 to be inlined into Com_MainFunctionRouteSignals_Src_Generic_hlp/239 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:1300
 Estimated badness is -0.019884, frequency 1.00.

Considering Com_EB_CalculateFilter_Bool.isra.0/363 with 14 size
 to be inlined into Com_EB_CalculateFilter/12 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com.c:425
 Estimated badness is -0.013675, frequency 0.10.

Considering Com_EB_WriteShadowBuffer_Fragment/208 with 26 size
 to be inlined into Com_EB_WriteShadowBuffer.isra.0/368 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxSignalGroup.c:779
 Estimated badness is -0.013378, frequency 0.27.

Considering Com_EB_InitTxIPdu_SignalGroups/186 with 89 size
 to be inlined into Com_EB_InitTxIPdu/192 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxIPdu.c:1130
 Estimated badness is -0.011246, frequency 1.00.

Considering Com_EB_ReadValue_Uint8Dyn/256 with 45 size
 to be inlined into Com_ReceiveDynSignal/263 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_ReceiveSignal.c:815
 Estimated badness is -0.009034, frequency 0.32.

Considering Com_EB_HandleRxSignalGroups.isra.0/353 with 102 size
 to be inlined into Com_EB_NotifyReceivers.isra.0/367 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_RxIPdu.c:437
 Estimated badness is -0.008105, frequency 1.00.

Considering Com_EB_CalculateFilter_Sint8/7 with 18 size
 to be inlined into Com_EB_CalculateFilter/12 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com.c:449
 Estimated badness is -0.008049, frequency 0.10.

Considering Com_EB_CalculateFilter_Sint16/8 with 18 size
 to be inlined into Com_EB_CalculateFilter/12 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com.c:455
 Estimated badness is -0.008049, frequency 0.10.

Considering Com_EB_CalculateFilter_Sint32/9 with 18 size
 to be inlined into Com_EB_CalculateFilter/12 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com.c:461
 Estimated badness is -0.008049, frequency 0.10.

Considering Com_EB_CalculateFilter_Sint64/11 with 18 size
 to be inlined into Com_EB_CalculateFilter/12 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com.c:468
 Estimated badness is -0.008049, frequency 0.10.

Considering Com_EB_CalculateFilter_Uint8/4 with 18 size
 to be inlined into Com_EB_CalculateFilter/12 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com.c:431
 Estimated badness is -0.008049, frequency 0.10.

Considering Com_EB_CalculateFilter_Uint32/6 with 18 size
 to be inlined into Com_EB_CalculateFilter/12 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com.c:443
 Estimated badness is -0.008049, frequency 0.10.

Considering Com_EB_CalculateFilter_Uint16/5 with 18 size
 to be inlined into Com_EB_CalculateFilter/12 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com.c:437
 Estimated badness is -0.008049, frequency 0.10.

Considering Com_EB_CalculateFilter_Uint64/10 with 18 size
 to be inlined into Com_EB_CalculateFilter/12 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com.c:475
 Estimated badness is -0.008049, frequency 0.10.

Considering Com_EB_CheckTxDMforPdu/250 with 56 size
 to be inlined into Com_EB_MainFunctionTx_hlp/253 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionTx.c:1159
 Estimated badness is -0.007619, frequency 0.30.

Considering Com_EB_HandleRxConfirm.isra.0/369 with 12 size
 to be inlined into Com_RxIndication/275 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_RxIndication.c:297
 Estimated badness is -0.007148, frequency 0.07.

Considering Com_EB_SendSignal_Transmit.part.0/372 with 19 size
 to be inlined into Com_EB_SendSignal_Transmit/201 in unknown:0
 Estimated badness is -0.006203, frequency 0.06.

Considering Com_EB_CheckNTimesSendforPdu/248 with 60 size
 to be inlined into Com_EB_MainFunctionTx_hlp/253 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionTx.c:1178
 Estimated badness is -0.006088, frequency 0.30.

Considering Com_EB_CheckPeriodicSendforPdu/247 with 73 size
 to be inlined into Com_EB_MainFunctionTx_hlp/253 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionTx.c:1195
 Estimated badness is -0.004237, frequency 0.30.

Considering Com_EB_SendSignal_Filter/199 with 61 size
 to be inlined into Com_EB_Write_SignalExt/200 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_Core_TxSignal.c:283
 Estimated badness is -0.003093, frequency 0.41.

Considering Com_MainFunctionRouteSignals_Src_Generic_hlp/239 with 175 size
 to be inlined into Com_MainFunctionRouteSignals/240 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRouteSignals.c:1522
 Estimated badness is -0.002623, frequency 0.91.

Considering Com_GetRxSignalGroupCfg.part.0/356 with 8 size
 to be inlined into Com_GetRxSignalGroupCfg/266 in unknown:0
 Estimated badness is -0.002542, frequency 0.14.

Considering Com_GetTxSignalGroupCfg.part.0/358 with 8 size
 to be inlined into Com_GetTxSignalGroupCfg/282 in unknown:0
 Estimated badness is -0.002542, frequency 0.14.

Considering Com_EB_TMSwitch/246 with 85 size
 to be inlined into Com_EB_CheckTMSforPdu/245 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionTx.c:287
 Estimated badness is -0.002541, frequency 0.23.

Considering Com_EB_Read_SignalExt_SigBuffer/258 with 86 size
 to be inlined into Com_EB_Read_SignalExt/260 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_ReceiveSignal.c:570
 Estimated badness is -0.002471, frequency 0.32.

Considering Com_EB_HlpTxConfirmation/291 with 89 size
 to be inlined into Com_TxConfirmation/292 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_TxConfirmation.c:381
 Estimated badness is -0.002408, frequency 0.33.

Considering Com_EB_CheckRxDMTable/241 with 61 size
 to be inlined into Com_MainFunctionRx/244 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRx.c:508
 Estimated badness is -0.001813, frequency 0.20.

Considering Com_EB_CheckRxSignalDMTable/242 with 63 size
 to be inlined into Com_MainFunctionRx/244 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRx.c:514
 Estimated badness is -0.001715, frequency 0.20.

Considering Com_EB_CheckRxSignalGroupDMTable/243 with 63 size
 to be inlined into Com_MainFunctionRx/244 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_MainFunctionRx.c:517
 Estimated badness is -0.001715, frequency 0.20.

Considering Com_EB_HandlePduGroupTx/148 with 121 size
 to be inlined into Com_IpduGroupControl/214 in D:/eb2/plugins/Com_TS_TxDxM6I3R0/src/Com_IpduGroupControl.c:99
 Estimated badness is -0.001631, frequency 0.47.

Considering Com_EB_RouteSignalHelper_Write.part.0/373 with 21 size
 to be inlined into Com_EB_RouteSignalHelper_Write/233 in unknown:0
 Estimated badness is -0.000461, frequency 0.20.

Considering Com_GetRxSignalCfg.part.0/355 with 8 size
 to be inlined into Com_GetRxSignalCfg/261 in unknown:0
 Estimated badness is -0.000308, frequency 0.14.

Considering Com_GetTxSignalCfg.part.0/357 with 8 size
 to be inlined into Com_GetTxSignalCfg/281 in unknown:0
 Estimated badness is -0.000308, frequency 0.14.

Considering Com_EB_TxDM_TMNone.part.0/344 with 9 size
 to be inlined into Com_EB_TxDM_TMNone/195 in unknown:0
 Estimated badness is -0.000157, frequency 0.16.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags: Com_EB_SendSignalGroupArray_DETCheck (local) Com_EB_SendSignalGroup (local)

Deciding on functions to be inlined into all callers and removing useless speculations:

Inlining Com_EB_SendSignalGroupArray_DETCheck size 33.
 Called once from Com_SetupTxSignalGroup 20 insns.
 Inlined into Com_SetupTxSignalGroup which now has 20 size
Overall time estimate: 21937.756836 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :      310 calls, 208.507258 freq, 0 count
--param max-inline-insns-auto limit reached       :       95 calls, 80.650958 freq, 0 count
call is unlikely and code size would grow         :      122 calls, 124.896319 freq, 0 count
IPA function summary for Com_EB_WriteShadowBuffer.isra.0/368 inlinable
  global time:     127.068874
  self size:       81
  global size:     97
  min size:       14
  self stack:      1
  global stack:    1
  estimated growth:57
    size:13.500000, time:8.820000
    size:4.500000, time:2.830000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 64] != 0)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 32] != 0)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 240] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 240] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 112] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 112] changed)
    size:47.500000, time:72.069555,  executed if:(op0[ref offset: 128] != 0)
    size:3.000000, time:1.862157,  executed if:(op0[ref offset: 128] != 0),  nonconst if:(op1[ref offset: 0] changed || op0[ref offset: 112] changed) && (op0[ref offset: 128] != 0)
  loop iterations:(op0[ref offset: 128] changed) && (op0[ref offset: 128] != 0)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.04 size: 4 time: 13 predicate: (op0[ref offset: 128] != 0)
    Com_EB_WriteShadowBuffer_Fragment/208 inlined
      loop depth: 0 freq:0.27 size: 7 time: 16callee size:13 stack: 0
      Stack frame offset 1, callee self size 0, callee size 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_NotifyReceivers.isra.0/367 inlinable
  global time:     1266.589462
  self size:       15
  global size:     257
  min size:       209
  self stack:      0
  global stack:    1
  estimated growth:5
    size:201.500000, time:795.635431
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op0[ref offset: 352] changed)
    size:0.500000, time:0.165000,  nonconst if:(op0[ref offset: 256] changed)
  calls:
    Com_EB_HandleRxSignalGroups.isra.0/353 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:51 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 inlined
        loop depth: 1 freq:8.09 size: 4 time: 13callee size:36 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
          loop depth: 1 freq:0.67 size: 1 time: 10
        Com_EB_RxDMSignalGroupQueue.isra.0/329 call is unlikely and code size would grow
          loop depth: 1 freq:0.15 size: 3 time: 12callee size: 8 stack: 0
        Com_EB_RxDMSignalGroupQueue.isra.0/329 call is unlikely and code size would grow
          loop depth: 1 freq:0.22 size: 3 time: 12callee size: 8 stack: 0
        SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
          loop depth: 1 freq:0.67 size: 1 time: 10
      indirect call loop depth: 1 freq:1.82 size: 3 time: 15
    Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack: 1
      Stack frame offset 0, callee self size 1, callee size 1
      Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop/380 inlined
        loop depth: 1 freq:8.09 size: 4 time: 13callee size: 4 stack: 0
        Stack frame offset 1, callee self size 0, callee size 0
        Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 --param max-inline-insns-auto limit reached
          loop depth: 1 freq:8.09 size: 5 time: 14callee size:42 stack: 0
           op2 is compile time invariant
    Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:19 stack: 1
      Stack frame offset 0, callee self size 1, callee size 1
      Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:8.09 size: 5 time: 14callee size:42 stack: 0
         op2 is compile time invariant
      indirect call loop depth: 1 freq:2.75 size: 3 time: 15
    Com_EB_HandleRxSignalsWithBuffer.isra.0/366 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:31 stack: 1
      Stack frame offset 0, callee self size 1, callee size 1
      Com_EB_SetBuffer/13 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:0.06 size: 2 time: 11callee size:77 stack:22
      Com_EB_CalculateFilter/12 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:1.64 size: 5 time: 14callee size:77 stack: 9
      Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:8.09 size: 5 time: 14callee size:42 stack: 0
         op2 is compile time invariant
      indirect call loop depth: 1 freq:0.39 size: 3 time: 15
    Com_EB_HandlePduRxDM/149 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.33 size: 1 time: 10
      Com_EB_RxDMQueue.isra.0/328 call is unlikely and code size would grow
        loop depth: 0 freq:0.07 size: 3 time: 12callee size: 6 stack: 0
      Com_EB_RxDMQueue.isra.0/328 call is unlikely and code size would grow
        loop depth: 0 freq:0.11 size: 3 time: 12callee size: 6 stack: 0
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.33 size: 1 time: 10

IPA function summary for Com_EB_CalculateGroupSignalTM.isra.0/364 inlinable
  global time:     44.130000
  self size:       51
  global size:     51
  min size:       11
  self stack:      0
  global stack:    0
  estimated growth:33
    size:11.000000, time:11.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 192] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed || op0[ref offset: 192] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 48] changed)
    size:6.000000, time:6.000000,  nonconst if:(op2 changed)
    size:4.000000, time:1.500000,  executed if:(op2 == 0)
    size:6.000000, time:1.660000,  executed if:(op2 != 0)
    size:0.500000, time:0.330000,  executed if:(op2 != 1) && (not inlined)
    size:1.500000, time:0.990000,  executed if:(op2 != 1)
    size:0.500000, time:0.170000,  executed if:(op2 == 1) && (not inlined)
    size:1.500000, time:0.510000,  executed if:(op2 == 1)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.66 size: 3 time: 12 predicate: (op2 != 1)
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.34 size: 3 time: 12 predicate: (op2 == 1)
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.17 size: 3 time: 12 predicate: (op2 != 0)
       op1 is compile time invariant
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.08 size: 3 time: 12 predicate: (op2 == 0)
       op1 is compile time invariant

IPA function summary for Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 inlinable
  global time:     25.861016
  self size:       85
  global size:     85
  min size:       69
  self stack:      0
  global stack:    0
  estimated growth:140
    size:69.000000, time:19.015702
    size:5.000000, time:2.536964,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 128] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.05 size: 1 time: 10
    Com_EB_RxDMSignalQueue.isra.0/330 call is unlikely and code size would grow
      loop depth: 0 freq:0.03 size: 3 time: 12callee size: 6 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.03 size: 1 time: 10
    Com_EB_RxDMSignalQueue.isra.0/330 call is unlikely and code size would grow
      loop depth: 0 freq:0.03 size: 3 time: 12callee size: 6 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.08 size: 1 time: 10

IPA function summary for Com_EB_MdtQueue.isra.0/345 inlinable
  global time:     38.000000
  self size:       21
  global size:     21
  min size:       15
  self stack:      0
  global stack:    0
  estimated growth:7
    size:15.000000, time:15.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_GetSendSignalRetVal.isra.0/331 inlinable
  global time:     11.000000
  self size:       12
  global size:     12
  min size:       9
  self stack:      0
  global stack:    0
  estimated growth:6
    size:9.000000, time:9.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_RxDMSignalQueue.isra.0/330 inlinable
  global time:     11.000000
  self size:       12
  global size:     12
  min size:       8
  self stack:      0
  global stack:    0
  estimated growth:12
    size:8.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Com_EB_RxDMSignalGroupQueue.isra.0/329 inlinable
  global time:     16.000000
  self size:       17
  global size:     17
  min size:       13
  self stack:      0
  global stack:    0
  estimated growth:27
    size:13.000000, time:13.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Com_EB_RxDMQueue.isra.0/328 inlinable
  global time:     11.000000
  self size:       12
  global size:     12
  min size:       8
  self stack:      0
  global stack:    0
  estimated growth:12
    size:8.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Com_StartOfReception/300 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_CopyRxData/299 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_CopyTxData/298 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_GetStatus/297 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_DeInit/296 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_GetVersionInfo/295 inlinable
  global time:     10.568700
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.500000, time:2.064250,  executed if:(op0 != 0B) && (not inlined)
    size:2.500000, time:2.064250,  executed if:(op0 != 0B)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_UpdateShadowSignal/294 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SendSignal/278 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:27 stack: 6

IPA function summary for Com_TpTxConfirmation/293 inlinable
  global time:     2.000000
  self size:       6
  global size:     3
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_TpRxIndication/381 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 1 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for Com_TxConfirmation/292 inlinable
  global time:     37.316427
  self size:       27
  global size:     107
  min size:       82
  self stack:      0
  global stack:    0
    size:75.000000, time:17.813030
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.335000,  nonconst if:(op0 changed)
  calls:
    Com_EB_HlpTxConfirmation/291 inlined
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:44 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_HandleTxConfirmations/290 call is unlikely and code size would grow
        loop depth: 0 freq:0.07 size: 2 time: 11callee size:10 stack: 0
      Com_EB_TxDM_TMNone/195 call is unlikely and code size would grow
        loop depth: 0 freq:0.07 size: 3 time: 12callee size:14 stack: 0
      Com_EB_HandleTxConfirmations/290 call is unlikely and code size would grow
        loop depth: 0 freq:0.15 size: 2 time: 11callee size:10 stack: 0
      TS_AtomicClearBit_8/307 function body not available
        loop depth: 0 freq:0.15 size: 3 time: 12
         op1 is compile time invariant
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1/319 function body not available
        loop depth: 0 freq:0.03 size: 1 time: 10
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1/318 function body not available
        loop depth: 0 freq:0.03 size: 1 time: 10
      Com_EB_MdtQueue.isra.0/345 call is unlikely and code size would grow
        loop depth: 0 freq:0.11 size: 4 time: 13callee size:10 stack: 0
      Com_EB_ClearTxUpdateBits/197 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.07 size: 2 time: 11callee size:33 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_HandleTxConfirmations/290 inlinable
  global time:     21.250000
  self size:       11
  global size:     20
  min size:       5
  self stack:      0
  global stack:    0
  estimated growth:1
    size:5.000000, time:2.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 496] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 496] changed)
    size:2.500000, time:1.250000,  nonconst if:(op0[ref offset: 480] changed)
  calls:
    Com_EB_HandleTxConfirmations.part.0/370 inlined
      loop depth: 0 freq:0.50 size: 2 time: 11callee size: 7 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_AtomicSetBit_8/308 function body not available
        loop depth: 0 freq:0.50 size: 3 time: 12
    Com_EB_TxConfirmations/196 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 2 time: 11callee size:10 stack: 0

IPA function summary for Com_TriggerTransmit/289 inlinable
  global time:     36.258812
  self size:       84
  global size:     84
  min size:       0
  self stack:      8
  global stack:    8
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:0.500000, time:0.412850,  executed if:(op1 != 0B) && (not inlined)
    size:3.500000, time:2.889950,  executed if:(op1 != 0B)
    size:0.500000, time:0.276610,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:1.383048,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:36.000000, time:9.876320,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:2.000000, time:0.612103,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:1.000000, time:0.100997,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
  calls:
    Com_EB_ClearTxUpdateBits/197 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.02 size: 2 time: 11callee size:33 stack: 0 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.10 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.10 size: 4 time: 13 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.10 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.15 size: 5 time: 14 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14 predicate: (op1[ref offset: 0] == 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.27 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.20 size: 5 time: 17predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)

IPA function summary for Com_TriggerIPDUSend/288 inlinable
  global time:     26.169000
  self size:       38
  global size:     38
  min size:       32
  self stack:      0
  global stack:    0
    size:18.000000, time:10.617900
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.448900,  nonconst if:(op0 changed)
  calls:
    Com_EB_Send_Pdu/180 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.22 size: 3 time: 12callee size:23 stack:16
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.22 size: 3 time: 12
       op1 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_SwitchIpduTxMode/287 inlinable
  global time:     25.945897
  self size:       44
  global size:     44
  min size:       20
  self stack:      0
  global stack:    0
    size:7.000000, time:5.680000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:0.897800,  nonconst if:(op1 changed)
    size:11.000000, time:1.899386,  executed if:(op1 <= 1)
    size:2.000000, time:0.242945,  executed if:(op1 <= 1),  nonconst if:(op1 changed) && (op1 <= 1)
    size:1.000000, time:0.080172,  executed if:(op1 != 1) && (op1 <= 1)
    size:1.000000, time:0.041301,  executed if:(op1 == 1) && (op1 <= 1)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.18 size: 1 time: 10 predicate: (op1 <= 1)
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.18 size: 1 time: 10 predicate: (op1 <= 1)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.26 size: 5 time: 14 predicate: (op1 > 1)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.22 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ComXf_TxPrepareBuffer/286 inlinable
  global time:     21.800320
  self size:       23
  global size:     26
  min size:       16
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.400000,  nonconst if:(op2 changed)
    size:11.000000, time:1.558480,  executed if:(op2 == 1)
  calls:
    Com_EB_InitSGBuffer.isra.0/359 inlined
      loop depth: 0 freq:0.14 size: 5 time: 14callee size: 6 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemCpy32/306 function body not available
        loop depth: 0 freq:0.14 size: 4 time: 13 predicate: (op2 == 1)
    Com_GetTxSignalGroupCfg/282 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
       op1 is compile time invariant

IPA function summary for Com_SendSignalGroupArray/285 inlinable
  global time:     31.298100
  self size:       10
  global size:     47
  min size:       60
  self stack:      0
  global stack:    1
    size:10.000000, time:7.208200
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.069400,  nonconst if:(op1 changed)
    size:2.500000, time:1.200268,  executed if:(op1 != 0B)
  calls:
    Com_SetupTxSignalGroup_DET/283 inlined
      loop depth: 0 freq:1.00 size: 7 time: 16callee size: 9 stack: 1
      Stack frame offset 0, callee self size 1, callee size 1
      Com_SetupTxSignalGroup/213 inlined
        loop depth: 0 freq:0.53 size: 7 time: 16callee size:17 stack: 0
        Stack frame offset 1, callee self size 0, callee size 0
        Com_EB_SendSignalGroupArray_DETCheck/205 inlined
          loop depth: 0 freq:0.53 size: 8 time: 17callee size:16 stack: 0
          Stack frame offset 1, callee self size 0, callee size 0
          Com_EB_SendSignalGroupArray/206 inlined
            loop depth: 0 freq:0.23 size: 7 time: 16callee size: 9 stack: 0
            Stack frame offset 1, callee self size 0, callee size 0
            Com_EB_CalculateSignalGroupTM/207 --param max-inline-insns-auto limit reached
              loop depth: 0 freq:0.23 size: 7 time: 16callee size:59 stack: 0 predicate: (op1 != 0B)
               op4 is compile time invariant
            Com_EB_WriteShadowBuffer.isra.0/368 --param max-inline-insns-auto limit reached
              loop depth: 0 freq:0.23 size: 5 time: 14callee size:48 stack: 1 predicate: (op1 != 0B)
            Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 call is unlikely and code size would grow
              loop depth: 0 freq:0.23 size: 3 time: 12callee size:15 stack: 0 predicate: (op1 != 0B)
          Det_ASR40_ReportError/305 function body not available
            loop depth: 0 freq:0.25 size: 5 time: 14 predicate: (op1 != 0B)
             op0 is compile time invariant
             op1 is compile time invariant
             op2 is compile time invariant
             op3 is compile time invariant
          Com_EB_SendSignalGroupArray_DETCheck.part.0/377 inlined
            loop depth: 0 freq:0.05 size: 2 time: 11callee size: 4 stack: 0
            Stack frame offset 1, callee self size 0, callee size 0
            Det_ASR40_ReportError/305 function body not available
              loop depth: 0 freq:0.05 size: 5 time: 14 predicate: (op1 == 0B)
               op0 is compile time invariant
               op1 is compile time invariant
               op2 is compile time invariant
               op3 is compile time invariant
      Com_GetTxSignalGroupCfg/282 call is unlikely and code size would grow
        loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
         op1 is compile time invariant

IPA function summary for Com_SendSignalGroup/284 inlinable
  global time:     31.298100
  self size:       10
  global size:     25
  min size:       60
  self stack:      0
  global stack:    1
    size:10.000000, time:7.208200
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SetupTxSignalGroup_DET/390 inlined
      loop depth: 0 freq:1.00 size: 7 time: 16callee size: 9 stack: 1
      Stack frame offset 0, callee self size 1, callee size 1
      Com_GetTxSignalGroupCfg/282 call is unlikely and code size would grow
        loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
         op1 is compile time invariant
      Com_SetupTxSignalGroup/391 inlined
        loop depth: 0 freq:0.53 size: 7 time: 16callee size:10 stack: 0
        Stack frame offset 1, callee self size 0, callee size 0
        Com_EB_SendSignalGroup/204 call is unlikely and code size would grow
          loop depth: 0 freq:0.53 size: 8 time: 17callee size:12 stack: 0
           op0 is compile time invariant
           op1 is compile time invariant
           op5 is compile time invariant

IPA function summary for Com_GetTxSignalGroupCfg/282 inlinable
  global time:     15.399437
  self size:       22
  global size:     24
  min size:       10
  self stack:      0
  global stack:    0
  estimated growth:8
    size:10.000000, time:8.409169
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.693056,  nonconst if:(op0 changed)
  calls:
    Com_GetTxSignalGroupCfg.part.0/358 inlined
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Det_ASR40_ReportError/305 function body not available
        loop depth: 0 freq:0.14 size: 5 time: 14
         op0 is compile time invariant
         op1 is compile time invariant
         op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_GetTxSignalCfg/281 inlinable
  global time:     15.399437
  self size:       22
  global size:     24
  min size:       10
  self stack:      0
  global stack:    0
  estimated growth:23
    size:10.000000, time:8.409169
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.693056,  nonconst if:(op0 changed)
  calls:
    Com_GetTxSignalCfg.part.0/357 inlined
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Det_ASR40_ReportError/305 function body not available
        loop depth: 0 freq:0.14 size: 5 time: 14
         op0 is compile time invariant
         op1 is compile time invariant
         op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ComXf_GetTxSGId/280 inlinable
  global time:     17.812500
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:2.812500
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_GetTxSignalCfg/281 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
       op1 is compile time invariant

IPA function summary for Com_SendDynSignal/279 inlinable
  global time:     40.864110
  self size:       47
  global size:     47
  min size:       8
  self stack:      6
  global stack:    6
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.625000,  nonconst if:(op1 changed)
    size:13.000000, time:5.807606,  executed if:(op1 != 0B)
  calls:
    Com_EB_WriteDynSignal_ExitArea_0/202 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.24 size: 4 time: 13callee size:22 stack: 0 predicate: (op1 != 0B)
       op2 is compile time invariant
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.24 size: 1 time: 10 predicate: (op1 != 0B)
    Com_GetSendSignalRetVal.isra.0/331 call is unlikely and code size would grow
      loop depth: 0 freq:0.24 size: 3 time: 12callee size: 6 stack: 0 predicate: (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.24 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.25 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_GetTxSignalCfg/281 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
       op1 is compile time invariant

IPA function summary for Com_SendSignal/278 inlinable
  global time:     50.655386
  self size:       54
  global size:     54
  min size:       2
  self stack:      6
  global stack:    6
  estimated growth:48
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.625000,  nonconst if:(op1 changed)
    size:18.000000, time:11.055454,  executed if:(op1 != 0B)
  calls:
    Com_GetSendSignalRetVal.isra.0/331 call is unlikely and code size would grow
      loop depth: 0 freq:0.56 size: 3 time: 12callee size: 6 stack: 0 predicate: (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.09 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_GetTxSignalCfg/281 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:0.56 size: 7 time: 19predicate: (op1 != 0B)

IPA function summary for Com_TpRxIndication/276 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:-3
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_RxIndication/275 inlinable
  global time:     31.440187
  self size:       92
  global size:     98
  min size:       20
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op1 changed)
    size:0.500000, time:0.276610,  executed if:(op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B) && (not inlined)
    size:2.500000, time:1.383048,  executed if:(op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op1 != 0B)
    size:43.500000, time:7.427277,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:2.000000, time:0.378522,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op1[ref offset: 0] != 0B) && (op1 != 0B)
    size:1.000000, time:0.072470,  executed if:(op1[ref offset: 0] != 0B) && (op1 != 0B) && (not inlined)
  calls:
    Com_EB_HandleRxConfirm.isra.0/369 inlined
      loop depth: 0 freq:0.07 size: 3 time: 12callee size: 6 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_NotifyReceivers.isra.0/367 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 2 time: 11callee size:128 stack: 1 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
      TS_AtomicSetBit_8/308 function body not available
        loop depth: 0 freq:0.04 size: 3 time: 12 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
         op1 is compile time invariant
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.04 size: 3 time: 12 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1/319 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.07 size: 4 time: 13 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1/318 function body not available
      loop depth: 0 freq:0.07 size: 1 time: 10 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.15 size: 5 time: 14 predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14 predicate: (op1[ref offset: 0] == 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    indirect call loop depth: 0 freq:0.12 size: 6 time: 18predicate: (op1[ref offset: 0] != 0B) && (op1 != 0B)

IPA function summary for Com_ComXf_Get_RxSignalGroupSize/274 inlinable
  global time:     17.700000
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:2.700000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_GetRxSignalGroupCfg/266 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
       op1 is compile time invariant

IPA function summary for Com_ReceiveSignalGroupArray/273 inlinable
  global time:     31.261725
  self size:       29
  global size:     36
  min size:       0
  self stack:      12
  global stack:    13
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:2.000000, time:1.795800,  executed if:(op2 != 0B),  nonconst if:(op1 changed) && (op2 != 0B)
    size:7.500000, time:5.471578,  executed if:(op1 != 0B) && (op2 != 0B)
    size:0.500000, time:0.364772,  executed if:(op1 != 0B) && (op2 != 0B) && (not inlined),  nonconst if:(op2[ref offset: 0] changed) && (op1 != 0B) && (op2 != 0B) && (not inlined)
    size:0.500000, time:0.364772,  executed if:(op1 != 0B) && (op2 != 0B),  nonconst if:(op2[ref offset: 0] changed) && (op1 != 0B) && (op2 != 0B)
    size:0.500000, time:0.364772,  executed if:(op1 != 0B) && (op2 != 0B) && (not inlined)
    size:0.500000, time:0.084178,  executed if:(op1 == 0B) && (op2 != 0B) && (not inlined)
    size:0.500000, time:0.084178,  executed if:(op1 == 0B) && (op2 != 0B)
  calls:
    Com_SetupRxSignalGroup_DET/267 inlined
      loop depth: 0 freq:0.73 size: 6 time: 15callee size: 8 stack: 1
      Stack frame offset 12, callee self size 1, callee size 1
      Com_SetupRxSignalGroup/268 call is unlikely and code size would grow
        loop depth: 0 freq:0.39 size: 5 time: 14callee size:13 stack: 0 predicate: (op1 != 0B) && (op2 != 0B)
         op0 is compile time invariant
         op1 is compile time invariant
         op3 is compile time invariant
      Com_GetRxSignalGroupCfg/266 call is unlikely and code size would grow
        loop depth: 0 freq:0.73 size: 4 time: 13callee size:12 stack: 0 predicate: (op1 != 0B) && (op2 != 0B)
         op1 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14 predicate: (op1 == 0B) && (op2 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.10 size: 5 time: 14 predicate: (op2 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ReceiveSignalGroup/272 inlinable
  global time:     26.485800
  self size:       9
  global size:     16
  min size:       30
  self stack:      0
  global stack:    1
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_SetupRxSignalGroup_DET/388 inlined
      loop depth: 0 freq:1.00 size: 6 time: 15callee size: 8 stack: 1
      Stack frame offset 0, callee self size 1, callee size 1
      Com_GetRxSignalGroupCfg/266 call is unlikely and code size would grow
        loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
         op1 is compile time invariant
      Com_SetupRxSignalGroup/268 call is unlikely and code size would grow
        loop depth: 0 freq:0.53 size: 5 time: 14callee size:13 stack: 0
         op0 is compile time invariant
         op1 is compile time invariant
         op3 is compile time invariant

IPA function summary for Com_CopyRxSignalGroupArray/271 inlinable
  global time:     52.190000
  self size:       26
  global size:     58
  min size:       38
  self stack:      0
  global stack:    0
  estimated growth:6
    size:38.000000, time:20.330000
    size:4.000000, time:2.830000,  executed if:(not inlined)
    size:0.500000, time:0.330000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 80] changed) && (not inlined)
    size:0.500000, time:0.330000,  nonconst if:(op2[ref offset: 80] changed)
    size:0.500000, time:0.330000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:1.000000, time:0.500000,  nonconst if:(op1[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 80] changed || op1[ref offset: 32] changed)
    size:0.500000, time:0.170000,  nonconst if:(op2[ref offset: 0] changed)
    size:1.000000, time:0.340000,  nonconst if:(op1[ref offset: 32] changed || op2[ref offset: 0] changed)
    size:0.500000, time:0.170000,  nonconst if:(op1[ref offset: 48] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.66 size: 1 time: 10
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:0.66 size: 4 time: 13
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.66 size: 1 time: 10
    Com_CopyRxSignalGroupArray.part.0/360 inlined
      loop depth: 0 freq:0.34 size: 4 time: 13callee size: 6 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemCpy32/306 function body not available
        loop depth: 0 freq:0.34 size: 4 time: 13
    Com_ReceiveSignalGroup_Replace.isra.0/333 inlined
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:17 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for Com_CopyRxSignalGroupArray_Shadow/270 inlinable
  global time:     20.490000
  self size:       15
  global size:     19
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.320000,  executed if:(op2[ref offset: 16] != 65535)
    size:0.500000, time:0.170000,  executed if:(op2[ref offset: 16] == 65535)
  calls:
    Com_CopyRxSignalGroupArray/271 call is unlikely and code size would grow
      loop depth: 0 freq:0.66 size: 5 time: 14callee size:29 stack: 0 predicate: (op2[ref offset: 16] != 65535)
    Com_CopyRxSignalGroupArray_Shadow.part.0/361 inlined
      loop depth: 0 freq:0.34 size: 2 time: 11callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Det_ASR40_ReportError/305 function body not available
        loop depth: 0 freq:0.34 size: 5 time: 14 predicate: (op2[ref offset: 16] == 65535)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant

IPA function summary for Com_CopyRxSignalGroupArray_Array/269 inlinable
  global time:     21.750000
  self size:       18
  global size:     21
  min size:       40
  self stack:      0
  global stack:    0
    size:2.500000, time:1.250000
    size:3.500000, time:2.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 48] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1[ref offset: 64] changed || op2[ref offset: 48] changed)
    size:0.500000, time:0.250000,  nonconst if:(op1[ref offset: 0] changed)
  calls:
    Com_CopyRxSignalGroupArray_Array.part.0/362 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size: 6 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_CopyRxSignalGroupArray/271 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:29 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.50 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_SetupRxSignalGroup/268 inlinable
  global time:     36.500000
  self size:       26
  global size:     26
  min size:       13
  self stack:      0
  global stack:    0
  estimated growth:6
    size:12.500000, time:12.250000
    size:3.500000, time:2.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 8 time: 20

IPA function summary for Com_GetRxSignalGroupCfg/266 inlinable
  global time:     15.399437
  self size:       22
  global size:     24
  min size:       10
  self stack:      0
  global stack:    0
  estimated growth:8
    size:10.000000, time:8.409169
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.693056,  nonconst if:(op0 changed)
  calls:
    Com_GetRxSignalGroupCfg.part.0/356 inlined
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Det_ASR40_ReportError/305 function body not available
        loop depth: 0 freq:0.14 size: 5 time: 14
         op0 is compile time invariant
         op1 is compile time invariant
         op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ComXf_GetRxSGId/264 inlinable
  global time:     17.812500
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:3.000000, time:2.812500
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_GetRxSignalCfg/261 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
       op1 is compile time invariant

IPA function summary for Com_ReceiveDynSignal/263 inlinable
  global time:     46.676405
  self size:       57
  global size:     89
  min size:       16
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.625000,  nonconst if:(op1 changed)
    size:2.000000, time:1.459088,  executed if:(op1 != 0B),  nonconst if:(op2 changed) && (op1 != 0B)
    size:47.500000, time:11.353090,  executed if:(op2 != 0B) && (op1 != 0B)
  calls:
    Com_EB_ReadValue_Uint8Dyn/256 inlined
      loop depth: 0 freq:0.32 size: 7 time: 16callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.16 size: 1 time: 10 predicate: (op2 != 0B) && (op1 != 0B)
      TS_MemCpy32/306 function body not available
        loop depth: 0 freq:0.05 size: 4 time: 13 predicate: (op2 != 0B) && (op1 != 0B)
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.16 size: 1 time: 10 predicate: (op2 != 0B) && (op1 != 0B)
      TS_MemCpy32/306 function body not available
        loop depth: 0 freq:0.05 size: 4 time: 13 predicate: (op2 != 0B) && (op1 != 0B)
      Com_EB_Read_SignalReplace/259 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.32 size: 3 time: 12callee size:21 stack: 0 predicate: (op2 != 0B) && (op1 != 0B)
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14 predicate: (op2 != 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.07 size: 5 time: 14 predicate: (op2 == 0B) && (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.08 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_GetRxSignalCfg/261 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
       op1 is compile time invariant

IPA function summary for Com_ReceiveSignal/262 inlinable
  global time:     41.275367
  self size:       57
  global size:     57
  min size:       4
  self stack:      1
  global stack:    1
  estimated growth:51
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.400000,  nonconst if:(op1 changed)
    size:22.000000, time:9.236880,  executed if:(op1 != 0B)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.09 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_GetRxSignalCfg/261 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0
       op1 is compile time invariant
    indirect call loop depth: 0 freq:0.37 size: 7 time: 19predicate: (op1 != 0B)

IPA function summary for Com_GetRxSignalCfg/261 inlinable
  global time:     15.399437
  self size:       22
  global size:     24
  min size:       10
  self stack:      0
  global stack:    0
  estimated growth:23
    size:10.000000, time:8.409169
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:0.693056,  nonconst if:(op0 changed)
  calls:
    Com_GetRxSignalCfg.part.0/355 inlined
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Det_ASR40_ReportError/305 function body not available
        loop depth: 0 freq:0.14 size: 5 time: 14
         op0 is compile time invariant
         op1 is compile time invariant
         op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_Read_SignalExt/260 inlinable
  global time:     40.474678
  self size:       37
  global size:     114
  min size:       60
  self stack:      0
  global stack:    0
    size:9.000000, time:4.380000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.330000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 96] changed) && (not inlined)
    size:2.500000, time:1.650000,  nonconst if:(op2[ref offset: 96] changed)
    size:0.500000, time:0.170000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:1.500000, time:0.510000,  nonconst if:(op2[ref offset: 144] changed)
    size:0.500000, time:0.170000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.510000,  nonconst if:(op2[ref offset: 0] changed)
    size:1.000000, time:0.337392,  executed if:(op2[ref offset: 96] == 65535)
    size:1.500000, time:0.506088,  executed if:(op2[ref offset: 96] == 65535),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 96] == 65535)
    size:47.500000, time:1.915485,  executed if:(op2[ref offset: 96] != 65535)
    size:18.500000, time:2.742168,  executed if:(op2[ref offset: 96] != 65535),  nonconst if:(op2[ref offset: 0] changed) && (op2[ref offset: 96] != 65535)
    size:9.500000, time:0.383097,  executed if:(op2[ref offset: 96] != 65535),  nonconst if:(op2[ref offset: 96] changed) && (op2[ref offset: 96] != 65535)
  array index:(op2[ref offset: 0] changed)
  calls:
    Com_EB_Read_SignalExt.part.0/332 inlined
      loop depth: 0 freq:0.34 size: 5 time: 14callee size: 6 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      indirect call loop depth: 0 freq:0.34 size: 7 time: 19predicate: (op2[ref offset: 96] == 65535)
    Com_EB_Read_SignalExt_SigBuffer/258 inlined
      loop depth: 0 freq:0.32 size: 3 time: 12callee size:43 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    Com_EB_Read_SignalReplace/259 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:21 stack: 0
    indirect call loop depth: 0 freq:0.34 size: 7 time: 19

IPA function summary for Com_EB_Read_SignalReplace/259 inlinable
  global time:     23.375000
  self size:       19
  global size:     42
  min size:       31
  self stack:      0
  global stack:    0
  estimated growth:5
    size:31.000000, time:14.375000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 112] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 112] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 144] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 144] changed)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 112] != 0)
  calls:
    Com_EB_CheckRxSignalDM/257 inlined
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:15 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for Com_ReceiveShadowSignal/255 inlinable
  global time:     14.000000
  self size:       6
  global size:     6
  min size:       6
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_ReceiveSignal/262 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:28 stack: 1

IPA function summary for Com_MainFunctionTx/254 inlinable
  global time:     245.345446
  self size:       13
  global size:     370
  min size:       716
  self stack:      0
  global stack:    0
    size:299.000000, time:166.848683
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_MainFunctionTx_hlp/253 inlined
      loop depth: 1 freq:2.75 size: 2 time: 11callee size:33 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_HandleDeferredTxConfirm/251 inlined
        loop depth: 1 freq:2.75 size: 2 time: 11callee size:13 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_TxConfirmations/196 call is unlikely and code size would grow
          loop depth: 1 freq:0.45 size: 2 time: 11callee size:10 stack: 0
        TS_AtomicClearBit_8/307 function body not available
          loop depth: 1 freq:0.45 size: 3 time: 12
      Com_EB_Handle_Send_Pdu/252 inlined
        loop depth: 1 freq:0.91 size: 5 time: 14callee size:11 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_Send_Pdu/180 --param max-inline-insns-auto limit reached
          loop depth: 1 freq:0.25 size: 3 time: 12callee size:23 stack:16
        TS_AtomicClearBit_8/307 function body not available
          loop depth: 1 freq:0.25 size: 3 time: 12
           op1 is compile time invariant
        TS_AtomicSetBit_8/308 function body not available
          loop depth: 1 freq:0.09 size: 3 time: 12
           op1 is compile time invariant
      Com_EB_CheckPeriodicSendforPdu/247 inlined
        loop depth: 1 freq:0.30 size: 4 time: 13callee size:36 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_TxDMQueue/194 call is unlikely and code size would grow
          loop depth: 1 freq:0.10 size: 4 time: 13callee size:10 stack: 0
        Com_EB_PeriodicSendQueue/179 call is unlikely and code size would grow
          loop depth: 1 freq:0.06 size: 3 time: 12callee size: 7 stack: 0
        SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
          loop depth: 1 freq:0.30 size: 1 time: 10
        SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
          loop depth: 1 freq:0.30 size: 1 time: 10
      Com_EB_CheckNTimesSendforPdu/248 inlined
        loop depth: 1 freq:0.30 size: 4 time: 13callee size:30 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_NTimesSendQueue/177 call is unlikely and code size would grow
          loop depth: 1 freq:0.10 size: 4 time: 13callee size:10 stack: 0
        SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
          loop depth: 1 freq:0.30 size: 1 time: 10
        SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
          loop depth: 1 freq:0.30 size: 1 time: 10
      Com_EB_CheckTxDMforPdu/250 inlined
        loop depth: 1 freq:0.30 size: 3 time: 12callee size:28 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_TxDM_TMNone/195 call is unlikely and code size would grow
          loop depth: 1 freq:0.03 size: 3 time: 12callee size:14 stack: 0
        SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
          loop depth: 1 freq:0.10 size: 1 time: 10
        SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
          loop depth: 1 freq:0.20 size: 1 time: 10
        SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
          loop depth: 1 freq:0.30 size: 1 time: 10
        indirect call loop depth: 2 freq:0.82 size: 3 time: 15
      Com_EB_CheckTMSforPdu/245 inlined
        loop depth: 1 freq:0.91 size: 4 time: 13callee size:11 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_TMSwitch/246 inlined
          loop depth: 1 freq:0.23 size: 5 time: 14callee size:42 stack: 0
          Stack frame offset 0, callee self size 0, callee size 0
          Com_EB_TxDMQueue/194 call is unlikely and code size would grow
            loop depth: 1 freq:0.00 size: 4 time: 13callee size:10 stack: 0
          TS_AtomicSetBit_8/308 function body not available
            loop depth: 1 freq:0.03 size: 3 time: 12
             op1 is compile time invariant
          Com_EB_PeriodicSendQueue/179 call is unlikely and code size would grow
            loop depth: 1 freq:0.03 size: 3 time: 12callee size: 7 stack: 0
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:0.04 size: 3 time: 12
             op1 is compile time invariant
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:0.04 size: 3 time: 12
             op1 is compile time invariant
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:0.08 size: 3 time: 12
             op1 is compile time invariant
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:0.08 size: 3 time: 12
             op1 is compile time invariant
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:0.04 size: 3 time: 12
             op1 is compile time invariant
        TS_AtomicClearBit_8/307 function body not available
          loop depth: 1 freq:0.23 size: 3 time: 12
           op1 is compile time invariant
      Com_EB_CheckMdtforPdu.isra.0/354 inlined
        loop depth: 1 freq:0.91 size: 3 time: 12callee size:10 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
          loop depth: 1 freq:0.91 size: 1 time: 10
        SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
          loop depth: 1 freq:0.91 size: 1 time: 10

IPA function summary for Com_MainFunctionRx/244 inlinable
  global time:     393.927732
  self size:       37
  global size:     212
  min size:       206
  self stack:      0
  global stack:    0
    size:166.000000, time:228.489799
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_CheckRxSignalGroupDMTable/243 inlined
      loop depth: 0 freq:0.20 size: 1 time: 10callee size:31 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:0.72 size: 1 time: 10
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:0.37 size: 1 time: 10
      Com_EB_RxDMSignalGroupQueue.isra.0/329 call is unlikely and code size would grow
        loop depth: 1 freq:0.37 size: 3 time: 12callee size: 8 stack: 0
      TS_AtomicSetBit_8/308 function body not available
        loop depth: 1 freq:0.37 size: 3 time: 12
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:0.54 size: 1 time: 10
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 1 freq:1.64 size: 1 time: 10
      indirect call loop depth: 1 freq:0.25 size: 3 time: 15
    Com_EB_CheckRxSignalDMTable/242 inlined
      loop depth: 0 freq:0.20 size: 1 time: 10callee size:31 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:0.72 size: 1 time: 10
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:0.37 size: 1 time: 10
      Com_EB_RxDMSignalQueue.isra.0/330 call is unlikely and code size would grow
        loop depth: 1 freq:0.37 size: 3 time: 12callee size: 6 stack: 0
      TS_AtomicSetBit_8/308 function body not available
        loop depth: 1 freq:0.37 size: 3 time: 12
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:0.54 size: 1 time: 10
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 1 freq:1.64 size: 1 time: 10
      indirect call loop depth: 1 freq:0.25 size: 3 time: 15
    Com_EB_CheckRxDMTable/241 inlined
      loop depth: 0 freq:0.20 size: 1 time: 10callee size:30 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:0.92 size: 1 time: 10
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:0.18 size: 1 time: 10
      Com_EB_RxDMQueue.isra.0/328 call is unlikely and code size would grow
        loop depth: 1 freq:0.18 size: 3 time: 12callee size: 6 stack: 0
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:0.54 size: 1 time: 10
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 1 freq:1.64 size: 1 time: 10
      indirect call loop depth: 2 freq:1.42 size: 3 time: 15
    Com_EB_NotifyReceivers.isra.0/367 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:0.54 size: 2 time: 11callee size:128 stack: 1
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:0.54 size: 3 time: 12
       op1 is compile time invariant
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.20 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.20 size: 1 time: 10

IPA function summary for Com_MainFunctionRouteSignals/240 inlinable
  global time:     719.799954
  self size:       37
  global size:     204
  min size:       88
  self stack:      0
  global stack:    1
    size:162.000000, time:553.402482
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_MainFunctionRouteSignals_Src_Generic_hlp/239 inlined
      loop depth: 1 freq:0.91 size: 2 time: 11callee size:87 stack: 1
      Stack frame offset 0, callee self size 0, callee size 1
      Com_EB_CheckSendSignalGroup/231 inlined
        loop depth: 1 freq:0.91 size: 1 time: 10callee size:19 stack: 1
        Stack frame offset 0, callee self size 1, callee size 1
        Com_SetupTxSignalGroup/387 inlined
          loop depth: 2 freq:3.70 size: 7 time: 16callee size:10 stack: 0
          Stack frame offset 1, callee self size 0, callee size 0
          Com_EB_SendSignalGroup/204 call is unlikely and code size would grow
            loop depth: 2 freq:3.70 size: 8 time: 17callee size:12 stack: 0
             op0 is compile time invariant
             op1 is compile time invariant
             op5 is compile time invariant
      Com_EB_RouteGroupSignal/237 inlined
        loop depth: 2 freq:1.84 size: 3 time: 12callee size: 7 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_RouteSignalHelper/232 --param max-inline-insns-auto limit reached
          loop depth: 2 freq:0.37 size: 4 time: 13callee size:69 stack:23
      Com_EB_RouteSignalGroup.isra.0/376 inlined
        loop depth: 2 freq:1.84 size: 4 time: 13callee size:28 stack: 1
        Stack frame offset 0, callee self size 0, callee size 1
        Com_EB_RouteReceiveSignalGroup/235 inlined
          loop depth: 2 freq:0.45 size: 2 time: 11callee size: 4 stack: 1
          Stack frame offset 0, callee self size 1, callee size 1
          Com_SetupRxSignalGroup/268 call is unlikely and code size would grow
            loop depth: 2 freq:0.45 size: 5 time: 14callee size:13 stack: 0
             op0 is compile time invariant
             op1 is compile time invariant
             op3 is compile time invariant
        Com_EB_RouteSG_2_SG.isra.0/375 inlined
          loop depth: 3 freq:1.51 size: 3 time: 12callee size:13 stack: 0
          Stack frame offset 0, callee self size 0, callee size 0
          Com_EB_SendSignalGroupArray/392 inlined
            loop depth: 3 freq:1.51 size: 6 time: 15callee size: 9 stack: 0
            Stack frame offset 0, callee self size 0, callee size 0
            Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 call is unlikely and code size would grow
              loop depth: 3 freq:1.51 size: 3 time: 12callee size:15 stack: 0
            Com_EB_WriteShadowBuffer.isra.0/368 --param max-inline-insns-auto limit reached
              loop depth: 3 freq:1.51 size: 5 time: 14callee size:48 stack: 1
            Com_EB_CalculateSignalGroupTM/207 --param max-inline-insns-auto limit reached
              loop depth: 3 freq:1.51 size: 7 time: 16callee size:59 stack: 0
               op4 is compile time invariant
      Com_EB_RouteSignal.isra.0/374 inlined
        loop depth: 2 freq:1.84 size: 3 time: 12callee size:16 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_RouteSignalHelper/232 --param max-inline-insns-auto limit reached
          loop depth: 2 freq:1.22 size: 4 time: 13callee size:69 stack:23
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:0.91 size: 3 time: 12

IPA function summary for Com_EB_RouteSignalHelper_Write/233 inlinable
  global time:     35.416800
  self size:       28
  global size:     40
  min size:       13
  self stack:      0
  global stack:    0
  estimated growth:8
    size:13.000000, time:4.613200
    size:3.500000, time:2.398800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.398800,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.398800,  nonconst if:(op1[ref offset: 64] changed)
    size:0.500000, time:0.398800,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.398800,  nonconst if:(op1[ref offset: 32] changed)
    size:0.500000, time:0.398800,  executed if:(not inlined),  nonconst if:(op1[ref offset: 128] changed) && (not inlined)
    size:1.500000, time:1.196400,  nonconst if:(op1[ref offset: 128] changed)
    size:1.500000, time:0.303600,  nonconst if:(op0[ref offset: 144] changed)
    size:0.500000, time:0.101200,  nonconst if:(op0[ref offset: 16] changed)
  array index:(op1[ref offset: 128] changed)
  calls:
    Com_EB_RouteSignalHelper_Write.part.0/373 inlined
      loop depth: 0 freq:0.20 size: 5 time: 14callee size:10 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.20 size: 1 time: 10
      Com_EB_WriteDynSignal_ExitArea_0/202 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.20 size: 4 time: 13callee size:22 stack: 0
    indirect call loop depth: 0 freq:0.80 size: 7 time: 19

IPA function summary for Com_EB_RouteSignalHelper/232 inlinable
  global time:     732.867608
  self size:       122
  global size:     138
  min size:       52
  self stack:      23
  global stack:    23
  estimated growth:104
    size:51.500000, time:560.957434
    size:4.500000, time:11.583309,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:28.500000, time:9.531765,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.205000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.205000,  nonconst if:(op0[ref offset: 16] changed)
    size:1.000000, time:0.410000,  nonconst if:(op0[ref offset: 16] changed || op2 changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    Com_EB_SetSendSignalGroup/230 inlined
      loop depth: 1 freq:2.69 size: 2 time: 11callee size:10 stack: 0
      Stack frame offset 23, callee self size 0, callee size 0
    Com_EB_RouteSignalHelper_Write/233 call is unlikely and code size would grow
      loop depth: 1 freq:2.69 size: 5 time: 14callee size:20 stack: 0
       op0 change 37.100000% of time
       op2 change 37.100000% of time
       op3 is compile time invariant
    Com_EB_SendSignal_Transmit/201 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:2.69 size: 3 time: 12callee size:22 stack: 0
       op1 is compile time invariant
    Com_EB_RouteSignalHelper_Write/233 call is unlikely and code size would grow
      loop depth: 1 freq:2.69 size: 5 time: 14callee size:20 stack: 0
       op0 change 37.100000% of time
       op2 change 37.100000% of time
       op3 is compile time invariant
    Com_GetSendSignalRetVal.isra.0/331 call is unlikely and code size would grow
      loop depth: 1 freq:2.69 size: 3 time: 12callee size: 6 stack: 0
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19

IPA function summary for Com_SetIpduGroup/229 inlinable
  global time:     20.884921
  self size:       44
  global size:     44
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
    size:4.000000, time:2.212876,  executed if:(op0 != 0B)
    size:2.000000, time:0.741313,  executed if:(op0 != 0B),  nonconst if:(op2 changed) && (op0 != 0B)
    size:3.000000, time:0.555985,  executed if:(op2 != 0) && (op0 != 0B),  nonconst if:(op1 changed) && (op2 != 0) && (op0 != 0B)
    size:1.000000, time:0.185328,  executed if:(op2 != 0) && (op0 != 0B),  nonconst if:(op0 changed || op1 changed) && (op2 != 0) && (op0 != 0B)
    size:3.000000, time:0.555985,  executed if:(op2 != 0) && (op0 != 0B)
    size:4.000000, time:0.741313,  executed if:(op2 == 0) && (op0 != 0B),  nonconst if:(op1 changed) && (op2 == 0) && (op0 != 0B)
    size:1.000000, time:0.185328,  executed if:(op2 == 0) && (op0 != 0B),  nonconst if:(op0 changed || op1 changed) && (op2 == 0) && (op0 != 0B)
    size:3.000000, time:0.555985,  executed if:(op2 == 0) && (op0 != 0B)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.18 size: 5 time: 14 predicate: (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_ClearIpduGroupVector/228 inlinable
  global time:     24.765752
  self size:       23
  global size:     23
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
    size:5.000000, time:12.170818,  executed if:(op0 != 0B)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_Init/227 inlinable
  global time:     422.532148
  self size:       51
  global size:     81
  min size:       96
  self stack:      0
  global stack:    0
    size:56.000000, time:239.062326
    size:4.000000, time:8.090909,  executed if:(not inlined)
  calls:
    Com_EB_InitStartTxIPdu/193 inlined
      loop depth: 1 freq:5.42 size: 2 time: 11callee size: 8 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_StartIPdu/190 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:1.10 size: 3 time: 12callee size:40 stack: 0
      Com_EB_InitTxIPdu/192 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:5.42 size: 2 time: 11callee size:76 stack: 0
    Com_EB_InitStartRxIPdu/164 inlined
      loop depth: 1 freq:5.42 size: 2 time: 11callee size:12 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_HandleRxIPdu_EnableRxDM/152 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:1.10 size: 3 time: 12callee size:64 stack: 0
      TS_AtomicSetBit_8/308 function body not available
        loop depth: 1 freq:1.10 size: 3 time: 12
         op1 is compile time invariant
      Com_EB_InitRxIPdu/163 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:5.42 size: 2 time: 11callee size:35 stack: 0
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Com_IsValidConfig/17 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:10 stack: 0

IPA function summary for Com_GetConfigurationId/226 inlinable
  global time:     9.515200
  self size:       13
  global size:     13
  min size:       10
  self stack:      0
  global stack:    0
    size:5.000000, time:4.580800
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.21 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_FilterSint64/225 inlinable
  global time:     31.949252
  self size:       37
  global size:     38
  min size:       4
  self stack:      6
  global stack:    12
  estimated growth:21
    size:4.000000, time:4.000000
    size:3.000000, time:1.999868,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:11.500000, time:4.069956,  executed if:(op0[ref offset: 32] != 7)
    size:0.500000, time:0.330000,  executed if:(op0[ref offset: 32] != 7) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
  calls:
    Com_EB_FilterUint32/222 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.22 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
       op0 is compile time invariant
    Com_EB_FilterUint32/222 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.22 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
       op0 is compile time invariant
    Com_EB_FilterUint32/222 call is unlikely and code size would grow
      loop depth: 0 freq:0.66 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
    Com_EB_FilterSint64.part.0/389 inlined
      loop depth: 0 freq:0.34 size: 3 time: 12callee size: 3 stack: 6
      Stack frame offset 6, callee self size 6, callee size 6
      Com_EB_FilterOneEveryN/216 call is unlikely and code size would grow
        loop depth: 0 freq:0.34 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterUint64/224 inlinable
  global time:     31.949252
  self size:       37
  global size:     38
  min size:       4
  self stack:      6
  global stack:    12
  estimated growth:21
    size:4.000000, time:4.000000
    size:3.000000, time:1.999868,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:11.500000, time:4.069956,  executed if:(op0[ref offset: 32] != 7)
    size:0.500000, time:0.330000,  executed if:(op0[ref offset: 32] != 7) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
  calls:
    Com_EB_FilterUint32/222 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.22 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
       op0 is compile time invariant
    Com_EB_FilterUint32/222 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.22 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
       op0 is compile time invariant
    Com_EB_FilterUint32/222 call is unlikely and code size would grow
      loop depth: 0 freq:0.66 size: 4 time: 13callee size:37 stack: 0 predicate: (op0[ref offset: 32] != 7)
    Com_EB_FilterSint64.part.0/342 inlined
      loop depth: 0 freq:0.34 size: 3 time: 12callee size: 3 stack: 6
      Stack frame offset 6, callee self size 6, callee size 6
      Com_EB_FilterOneEveryN/216 call is unlikely and code size would grow
        loop depth: 0 freq:0.34 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterSint32/223 inlinable
  global time:     24.949318
  self size:       74
  global size:     74
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:54
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:11.500000, time:4.125667,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterUint32/222 inlinable
  global time:     24.949318
  self size:       74
  global size:     74
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:438
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:11.500000, time:4.125667,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterSint16/221 inlinable
  global time:     24.949318
  self size:       74
  global size:     74
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:54
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:11.500000, time:4.125667,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterUint16/220 inlinable
  global time:     24.949318
  self size:       74
  global size:     74
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:54
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:1.500000, time:0.499950,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:11.500000, time:4.125667,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterSint8/219 inlinable
  global time:     24.073299
  self size:       71
  global size:     71
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:51
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:10.500000, time:3.916248,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterUint8/218 inlinable
  global time:     24.073299
  self size:       71
  global size:     71
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:51
    size:6.000000, time:1.999800
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:16.500000, time:3.833200,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:13.000000, time:4.332900,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 6)
    size:4.000000, time:0.199980,  executed if:(op0[ref offset: 32] == 5)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.133320,  executed if:(op0[ref offset: 32] == 3)
    size:10.500000, time:3.916248,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6)
    size:0.500000, time:0.158651,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4 || op0[ref offset: 32] == 5 || op0[ref offset: 32] == 6) && (not inlined)
  calls:
    Com_EB_FilterOneEveryN/216 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterBoolean/217 inlinable
  global time:     27.315074
  self size:       75
  global size:     75
  min size:       6
  self stack:      0
  global stack:    0
  estimated growth:55
    size:6.000000, time:1.999800
    size:3.000000, time:1.999733,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:12.500000, time:3.166600,  nonconst if:(op0[ref offset: 32] changed)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 7),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 7)
    size:15.000000, time:4.999500,  executed if:(op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 0] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(op0[ref offset: 32] == 2) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2) && (not inlined)
    size:2.500000, time:0.833250,  executed if:(op0[ref offset: 32] == 2),  nonconst if:(op0[ref offset: 16] changed) && (op0[ref offset: 32] == 2)
    size:0.500000, time:0.166650,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:0.499950,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:0.222178,  executed if:(op0[ref offset: 32] == 4)
    size:2.000000, time:0.222178,  executed if:(op0[ref offset: 32] == 3)
    size:8.500000, time:3.330784,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    size:0.500000, time:0.151092,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4) && (not inlined)
    size:2.000000, time:0.398883,  executed if:(op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4),  nonconst if:(op1[ref offset: 0] changed) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    size:3.000000, time:0.394895,  executed if:(op1[ref offset: 0] != 1) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    size:3.000000, time:0.203431,  executed if:(op1[ref offset: 0] == 1) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.13 size: 3 time: 12 predicate: (op1[ref offset: 0] != 1) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.07 size: 3 time: 12 predicate: (op1[ref offset: 0] == 1) && (op0[ref offset: 32] == 2 || op0[ref offset: 32] == 7 || op0[ref offset: 32] == 3 || op0[ref offset: 32] == 4)
    Com_EB_FilterOneEveryN/216 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:11 stack: 0 predicate: (op0[ref offset: 32] == 7)

IPA function summary for Com_EB_FilterOneEveryN/216 inlinable
  global time:     49.000000
  self size:       23
  global size:     23
  min size:       17
  self stack:      0
  global stack:    0
  estimated growth:113
    size:17.000000, time:26.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_ReceptionDMControl/215 inlinable
  global time:     19.871000
  self size:       22
  global size:     22
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
  calls:
    Com_EB_HandlePduGroupRx/147 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.47 size: 4 time: 13callee size:39 stack: 0 predicate: (op0 != 0B)
       op0 is compile time invariant
       op2 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.20 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_IpduGroupControl/214 inlinable
  global time:     416.073726
  self size:       25
  global size:     140
  min size:       20
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op0 changed)
    size:92.500000, time:312.738718,  executed if:(op0 != 0B)
    size:2.000000, time:0.159431,  executed if:(op0 != 0B),  nonconst if:(op1 changed) && (op0 != 0B)
  calls:
    Com_EB_HandlePduGroupTx/148 inlined
      loop depth: 0 freq:0.47 size: 3 time: 12callee size:60 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_HandleTxIPdu/191 inlined
        loop depth: 1 freq:1.59 size: 5 time: 14callee size: 6 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_HandleTxIPdu_Stop/183 inlined
          loop depth: 1 freq:1.05 size: 3 time: 12callee size:37 stack: 0
          Stack frame offset 0, callee self size 0, callee size 0
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:0.35 size: 3 time: 12 predicate: (op0 != 0B)
             op1 is compile time invariant
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:0.35 size: 3 time: 12 predicate: (op0 != 0B)
             op1 is compile time invariant
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:0.35 size: 3 time: 12 predicate: (op0 != 0B)
             op1 is compile time invariant
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:1.05 size: 3 time: 12 predicate: (op0 != 0B)
             op1 is compile time invariant
          TS_AtomicClearBit_8/307 function body not available
            loop depth: 1 freq:1.05 size: 3 time: 12 predicate: (op0 != 0B)
             op1 is compile time invariant
          indirect call loop depth: 2 freq:2.79 size: 3 time: 15predicate: (op0 != 0B)
        Com_EB_HandleTxIPdu_Start/182 inlined
          loop depth: 1 freq:0.54 size: 4 time: 13callee size: 9 stack: 0
          Stack frame offset 0, callee self size 0, callee size 0
          Com_EB_StartIPdu/190 --param max-inline-insns-auto limit reached
            loop depth: 1 freq:0.27 size: 3 time: 12callee size:40 stack: 0 predicate: (op0 != 0B)
          Com_EB_InitTxIPdu/192 --param max-inline-insns-auto limit reached
            loop depth: 1 freq:0.05 size: 2 time: 11callee size:76 stack: 0 predicate: (op1 == 1) && (op0 != 0B)
    Com_EB_HandlePduGroupRx/147 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.47 size: 4 time: 13callee size:39 stack: 0 predicate: (op0 != 0B)
       op0 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.20 size: 5 time: 14 predicate: (op0 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 inlinable
  global time:     364.000002
  self size:       30
  global size:     30
  min size:       16
  self stack:      0
  global stack:    0
  estimated growth:-8
    size:15.500000, time:129.409092
    size:4.500000, time:15.136364,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 224] changed)
  calls:
    Com_EB_CalculateGroupSignalTM.isra.0/364 call is unlikely and code size would grow
      loop depth: 1 freq:8.09 size: 4 time: 13callee size:25 stack: 0
    Com_EB_CalculateFilter/12 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:8.09 size: 5 time: 14callee size:77 stack: 9
       op1 change 12.350000% of time

IPA function summary for Com_EB_CalculateSignalGroupTM/207 inlinable
  global time:     105.957904
  self size:       119
  global size:     119
  min size:       99
  self stack:      0
  global stack:    0
  estimated growth:91
    size:98.500000, time:74.102677
    size:7.500000, time:3.105500,  executed if:(not inlined)
  calls:
    Com_EB_SendUponSendApiCall/175 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.17 size: 3 time: 12callee size:38 stack: 0
    Com_EB_Request_Send_Pdu/176 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 5 time: 14callee size:13 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    Com_EB_CalculateTM/178 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 3 time: 12callee size: 9 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_SendSignalGroup/204 inlinable
  global time:     33.090400
  self size:       22
  global size:     25
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:2.000000, time:1.565600,  executed if:(op2[ref offset: 144] != 65535)
  calls:
    Com_EB_CalculateSignalGroupTM/207 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.78 size: 7 time: 16callee size:59 stack: 0 predicate: (op2[ref offset: 144] != 65535)
    Com_EB_WriteShadowBuffer.isra.0/368 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.78 size: 5 time: 14callee size:48 stack: 1 predicate: (op2[ref offset: 144] != 65535)
    Com_EB_SendSignalGroup.part.0/378 inlined
      loop depth: 0 freq:0.22 size: 2 time: 11callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Det_ASR40_ReportError/305 function body not available
        loop depth: 0 freq:0.22 size: 5 time: 14 predicate: (op2[ref offset: 144] == 65535)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant

IPA function summary for Com_EB_WriteDynSignal_ExitArea_0/202 inlinable
  global time:     68.830000
  self size:       45
  global size:     45
  min size:       17
  self stack:      0
  global stack:    0
  estimated growth:23
    size:17.000000, time:13.165000
    size:4.000000, time:2.665000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 160] changed || op2[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 128] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op1[ref offset: 128] changed)
    size:1.000000, time:0.750000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 176] changed) && (not inlined)
    size:3.000000, time:2.250000,  nonconst if:(op1[ref offset: 176] changed)
  calls:
    Com_EB_SendSignal_Transmit/201 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:22 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_SendSignal_Transmit/201 inlinable
  global time:     15.444128
  self size:       33
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:39
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 24] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 24] changed)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op1[ref offset: 16] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:2.500000, time:1.000000,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op1[ref offset: 16] changed) && (op1[ref offset: 24] == 0)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op0[ref offset: 128] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:12.500000, time:4.260000,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op0[ref offset: 128] changed) && (op1[ref offset: 24] == 0)
    size:0.500000, time:0.126250,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op1[ref offset: 40] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:2.500000, time:0.464600,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op1[ref offset: 40] changed) && (op1[ref offset: 24] == 0)
    size:0.500000, time:0.098336,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op0[ref offset: 176] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:0.500000, time:0.098336,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op0[ref offset: 176] changed) && (op1[ref offset: 24] == 0)
    size:0.500000, time:0.098336,  executed if:(op1[ref offset: 24] == 0) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 24] == 0) && (not inlined)
    size:0.500000, time:0.098336,  executed if:(op1[ref offset: 24] == 0),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 24] == 0)
    size:8.000000, time:0.446622,  executed if:(op1[ref offset: 40] == 0) && (op1[ref offset: 24] == 0)
    size:1.500000, time:0.083742,  executed if:(op1[ref offset: 40] == 0) && (op1[ref offset: 24] == 0),  nonconst if:(op0[ref offset: 176] changed) && (op1[ref offset: 40] == 0) && (op1[ref offset: 24] == 0)
    size:0.500000, time:0.027914,  executed if:(op1[ref offset: 40] == 0) && (op1[ref offset: 24] == 0),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 40] == 0) && (op1[ref offset: 24] == 0)
  calls:
    Com_EB_SendUponSendApiCall/175 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:38 stack: 0 predicate: (op1[ref offset: 24] == 0)
    Com_EB_SendSignal_Transmit.part.0/372 inlined
      loop depth: 0 freq:0.06 size: 3 time: 12callee size: 9 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_Request_Send_Pdu/176 call is unlikely and code size would grow
        loop depth: 0 freq:0.06 size: 5 time: 14callee size:13 stack: 0 predicate: (op1[ref offset: 40] == 0) && (op1[ref offset: 24] == 0)

IPA function summary for Com_EB_Write_SignalExt/200 inlinable
  global time:     68.569600
  self size:       100
  global size:     154
  min size:       180
  self stack:      0
  global stack:    0
    size:85.000000, time:28.584562
    size:7.500000, time:4.909464,  executed if:(not inlined)
  calls:
    Com_EB_SendSignal_Transmit/201 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.20 size: 3 time: 12callee size:22 stack: 0
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.14 size: 1 time: 10
    Com_EB_CalculateTM/178 call is unlikely and code size would grow
      loop depth: 0 freq:0.14 size: 3 time: 12callee size: 9 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.14 size: 1 time: 10
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.09 size: 3 time: 12
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.05 size: 3 time: 12
    Com_EB_CalculateGroupSignalTM.isra.0/364 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.20 size: 4 time: 13callee size:25 stack: 0
    Com_EB_SendSignal_Filter/199 inlined
      loop depth: 0 freq:0.41 size: 4 time: 13callee size:30 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_FilterUint64/224 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 4 time: 13callee size:19 stack:12
      Com_EB_FilterSint64/225 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 4 time: 13callee size:19 stack:12
      Com_EB_FilterSint32/223 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 4 time: 13callee size:37 stack: 0
      Com_EB_FilterSint16/221 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 4 time: 13callee size:37 stack: 0
      Com_EB_FilterSint8/219 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 4 time: 13callee size:35 stack: 0
      Com_EB_FilterUint32/222 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 4 time: 13callee size:37 stack: 0
      Com_EB_FilterUint16/220 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 4 time: 13callee size:37 stack: 0
      Com_EB_FilterUint8/218 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 4 time: 13callee size:35 stack: 0
      Com_EB_FilterBoolean/217 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.04 size: 4 time: 13callee size:37 stack: 0
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_ClearTxUpdateBits/197 inlinable
  global time:     455.278175
  self size:       67
  global size:     67
  min size:       54
  self stack:      0
  global stack:    0
  estimated growth:107
    size:53.500000, time:366.846358
    size:6.500000, time:23.351818,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 240] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 240] changed)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:2.67 size: 3 time: 12
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:2.67 size: 3 time: 12

IPA function summary for Com_EB_TxConfirmations/196 inlinable
  global time:     234.545456
  self size:       20
  global size:     20
  min size:       12
  self stack:      0
  global stack:    0
  estimated growth:8
    size:12.000000, time:101.090910
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 448] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 448] changed)
  calls:
    indirect call loop depth: 1 freq:8.09 size: 3 time: 15

IPA function summary for Com_EB_TxDM_TMNone/195 inlinable
  global time:     16.310000
  self size:       27
  global size:     29
  min size:       12
  self stack:      0
  global stack:    0
  estimated growth:33
    size:12.000000, time:6.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 496] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op0[ref offset: 496] changed)
    size:1.000000, time:0.250000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 504] changed) && (not inlined)
    size:3.000000, time:0.750000,  nonconst if:(op0[ref offset: 504] changed)
    size:0.500000, time:0.082500,  nonconst if:(op0[ref offset: 416] changed)
    size:0.500000, time:0.082500,  nonconst if:(op0[ref offset: 432] changed)
  calls:
    Com_EB_TxDM_TMNone.part.0/344 inlined
      loop depth: 0 freq:0.16 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_TxDMQueue/194 call is unlikely and code size would grow
        loop depth: 0 freq:0.16 size: 4 time: 13callee size:10 stack: 0

IPA function summary for Com_EB_TxDMQueue/194 inlinable
  global time:     38.000000
  self size:       21
  global size:     21
  min size:       15
  self stack:      0
  global stack:    0
  estimated growth:49
    size:15.000000, time:15.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_InitTxIPdu/192 inlinable
  global time:     2005.601717
  self size:       18
  global size:     153
  min size:       122
  self stack:      0
  global stack:    0
  estimated growth:8
    size:122.000000, time:1260.053780
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_InitTxIPdu_Signals/189 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 8 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_InitTx_Signal/188 call is unlikely and code size would grow
        loop depth: 1 freq:8.09 size: 2 time: 11callee size: 9 stack: 0
    Com_EB_InitTxIPdu_HandleFlags/187 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:18 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemCpy32/306 function body not available
        loop depth: 0 freq:0.33 size: 4 time: 13
      TS_AtomicSetBit_8/308 function body not available
        loop depth: 0 freq:0.33 size: 3 time: 12
         op1 is compile time invariant
    Com_EB_InitTxIPdu_SignalGroups/186 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:44 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_ClearTxSGTMSState/185 inlined
        loop depth: 1 freq:8.09 size: 2 time: 11callee size:29 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        Com_EB_InitTx_Signal/188 call is unlikely and code size would grow
          loop depth: 2 freq:35.00 size: 2 time: 11callee size: 9 stack: 0
        TS_AtomicSetBit_8/308 function body not available
          loop depth: 2 freq:11.55 size: 3 time: 12
           op1 is compile time invariant
        TS_MemCpy32/306 function body not available
          loop depth: 1 freq:4.33 size: 4 time: 13
      Com_EB_InitSGBuffer.isra.0/385 inlined
        loop depth: 1 freq:3.95 size: 4 time: 13callee size: 6 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        TS_MemCpy32/306 function body not available
          loop depth: 1 freq:3.95 size: 4 time: 13
    Com_EB_InitTxIPdu_PduBuffer/184 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size:10 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      TS_MemCpy32/306 function body not available
        loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for Com_EB_StartIPdu/190 inlinable
  global time:     67.076817
  self size:       81
  global size:     81
  min size:       56
  self stack:      0
  global stack:    0
  estimated growth:61
    size:56.000000, time:30.030160
    size:7.000000, time:3.257515,  executed if:(not inlined)
  calls:
    Com_EB_TxDM_TMNone/195 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:14 stack: 0
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op1 is compile time invariant
    Com_EB_PeriodicSendQueue/179 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 7 stack: 0
    Com_EB_TxDMQueue/194 call is unlikely and code size would grow
      loop depth: 0 freq:0.04 size: 4 time: 13callee size:10 stack: 0
    Com_EB_Send_Pdu/180 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:23 stack:16
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_InitTx_Signal/188 inlinable
  global time:     15.758811
  self size:       18
  global size:     18
  min size:       10
  self stack:      0
  global stack:    0
  estimated growth:8
    size:10.000000, time:8.756634
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Com_ResetFilerOneEveryN/14 call is unlikely and code size would grow
      loop depth: 0 freq:0.16 size: 2 time: 11callee size: 7 stack: 0
    Com_EB_SetBuffer/13 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.20 size: 2 time: 11callee size:77 stack:22

IPA function summary for Com_EB_Send_Pdu/180 inlinable
  global time:     45.545840
  self size:       38
  global size:     47
  min size:       19
  self stack:      8
  global stack:    16
  estimated growth:86
    size:19.000000, time:12.511625
    size:3.500000, time:2.236792,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 128] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 128] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 256] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 256] changed)
    size:3.000000, time:2.392800,  executed if:(op1[ref offset: 256] != 65535)
  array index:(op1[ref offset: 256] changed)
  calls:
    Com_EB_Send_Pdu.part.0/371 inlined
      loop depth: 0 freq:0.24 size: 2 time: 11callee size: 5 stack: 8
      Stack frame offset 8, callee self size 8, callee size 8
      Com_EB_ClearTxUpdateBits/197 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.08 size: 2 time: 11callee size:33 stack: 0
    PduR_ComTransmit/311 function body not available
      loop depth: 0 freq:0.47 size: 4 time: 13
       op1 is compile time invariant
    Com_EB_HandleMDT/181 inlined
      loop depth: 0 freq:0.47 size: 3 time: 12callee size: 5 stack: 0
      Stack frame offset 8, callee self size 0, callee size 0
      Com_EB_MdtQueue.isra.0/345 call is unlikely and code size would grow
        loop depth: 0 freq:0.16 size: 4 time: 13callee size:10 stack: 0
    indirect call loop depth: 0 freq:0.80 size: 6 time: 18predicate: (op1[ref offset: 256] != 65535)

IPA function summary for Com_EB_PeriodicSendQueue/179 inlinable
  global time:     31.000000
  self size:       14
  global size:     14
  min size:       8
  self stack:      0
  global stack:    0
  estimated growth:10
    size:8.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_CalculateTM/178 inlinable
  global time:     75.727273
  self size:       18
  global size:     18
  min size:       9
  self stack:      0
  global stack:    0
  estimated growth:4
    size:9.000000, time:67.727273
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 192] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 208] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 208] changed)
    size:3.000000, time:3.000000,  nonconst if:(op0[ref offset: 192] changed || op0[ref offset: 208] changed)
  loop iterations:(op0[ref offset: 192] changed || op0[ref offset: 208] changed)
  calls:

IPA function summary for Com_EB_NTimesSendQueue/177 inlinable
  global time:     38.000000
  self size:       21
  global size:     21
  min size:       15
  self stack:      0
  global stack:    0
  estimated growth:21
    size:15.000000, time:15.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Request_Send_Pdu/176 inlinable
  global time:     29.290000
  self size:       26
  global size:     26
  min size:       4
  self stack:      0
  global stack:    0
  estimated growth:22
    size:3.500000, time:3.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 496] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op1[ref offset: 496] changed)
    size:0.500000, time:0.165000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 416] changed) && (not inlined)
    size:0.500000, time:0.165000,  nonconst if:(op1[ref offset: 416] changed)
    size:0.500000, time:0.165000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 432] changed) && (not inlined)
    size:0.500000, time:0.165000,  nonconst if:(op1[ref offset: 432] changed)
    size:2.000000, time:1.340000,  nonconst if:(op3 changed)
  calls:
    Com_EB_Send_Pdu/180 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:23 stack:16 predicate: (op3 != 1)
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.67 size: 3 time: 12
       op1 is compile time invariant
    Com_EB_TxDMQueue/194 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 4 time: 13callee size:10 stack: 0

IPA function summary for Com_EB_SendUponSendApiCall/175 inlinable
  global time:     32.659296
  self size:       77
  global size:     77
  min size:       60
  self stack:      0
  global stack:    0
  estimated growth:65
    size:60.000000, time:22.179648
    size:3.000000, time:1.999934,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_NTimesSendQueue/177 call is unlikely and code size would grow
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:10 stack: 0
    Com_EB_NTimesSendQueue/177 call is unlikely and code size would grow
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:10 stack: 0
    Com_EB_Request_Send_Pdu/176 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 5 time: 14callee size:13 stack: 0

IPA function summary for Com_EB_DisableSignalGroupBasedDMFlag/174 inlinable
  global time:     290.581800
  self size:       55
  global size:     55
  min size:       34
  self stack:      0
  global stack:    0
  estimated growth:-7
    size:34.000000, time:230.302730
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 112] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 112] changed)
    size:2.000000, time:5.340000,  nonconst if:(op1 changed)
    size:8.000000, time:4.323264,  executed if:(op1 == 1)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:0.54 size: 3 time: 12 predicate: (op1 == 1)
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:2.67 size: 3 time: 12

IPA function summary for Com_EB_DisableSignalBasedDMFlag/173 inlinable
  global time:     290.581800
  self size:       55
  global size:     55
  min size:       34
  self stack:      0
  global stack:    0
  estimated growth:-7
    size:34.000000, time:230.302730
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 192] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 192] changed)
    size:2.000000, time:5.340000,  nonconst if:(op1 changed)
    size:8.000000, time:4.323264,  executed if:(op1 == 1)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:0.54 size: 3 time: 12 predicate: (op1 == 1)
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 1 freq:2.67 size: 3 time: 12

IPA function summary for Com_GetRxIPduBuffer/165 inlinable
  global time:     22.552876
  self size:       41
  global size:     41
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.340000,  nonconst if:(op1 changed)
    size:15.000000, time:6.290100,  executed if:(op1 != 0B)
    size:2.000000, time:0.741313,  executed if:(op1 != 0B),  nonconst if:(op0 changed) && (op1 != 0B)
    size:1.000000, time:0.370657,  executed if:(op1 != 0B) && (not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.18 size: 5 time: 14 predicate: (op1 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.12 size: 5 time: 14 predicate: (op1 == 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:0.33 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_InitRxIPdu/163 inlinable
  global time:     329.585965
  self size:       46
  global size:     70
  min size:       48
  self stack:      0
  global stack:    0
  estimated growth:36
    size:48.000000, time:175.706764
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_DisableSignalGroupBasedDMFlag/174 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:1.00 size: 3 time: 12callee size:27 stack: 0
         op1 is compile time invariant
      Com_EB_DisableSignalBasedDMFlag/173 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:1.00 size: 3 time: 12callee size:27 stack: 0
         op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.49 size: 3 time: 12
    Com_EB_InitRxSignalsWithFilter/162 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:13 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_ResetFilerOneEveryN/14 call is unlikely and code size would grow
        loop depth: 1 freq:1.64 size: 2 time: 11callee size: 7 stack: 0
      Com_EB_SetBuffer/13 call is unlikely and code size would grow
        loop depth: 1 freq:8.09 size: 2 time: 11callee size:77 stack:22
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for Com_EB_HandleRxIPdu_DisableRxDM/153 inlinable
  global time:     50.000000
  self size:       12
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_DisableSignalAndSignalGroupBasedDMFlag/386 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_DisableSignalBasedDMFlag/173 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:1.00 size: 3 time: 12callee size:27 stack: 0
         op1 is compile time invariant
      Com_EB_DisableSignalGroupBasedDMFlag/174 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:1.00 size: 3 time: 12callee size:27 stack: 0
         op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Com_EB_HandleRxIPdu_EnableRxDM/152 inlinable
  global time:     567.972538
  self size:       30
  global size:     129
  min size:       106
  self stack:      0
  global stack:    0
  estimated growth:36
    size:105.500000, time:485.158988
    size:5.500000, time:2.886950,  executed if:(not inlined)
  calls:
    Com_EB_EnableSignalGroupBasedDMFlag/171 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:28 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:1.34 size: 1 time: 10
      Com_EB_RxDMSignalGroupQueue.isra.0/329 call is unlikely and code size would grow
        loop depth: 1 freq:0.44 size: 3 time: 12callee size: 8 stack: 0
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 1 freq:1.34 size: 1 time: 10
    Com_EB_EnableSignalBasedDMFlag/170 inlined
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:28 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 1 freq:1.34 size: 1 time: 10
      Com_EB_RxDMSignalQueue.isra.0/330 call is unlikely and code size would grow
        loop depth: 1 freq:0.44 size: 3 time: 12callee size: 6 stack: 0
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 1 freq:1.34 size: 1 time: 10
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.17 size: 1 time: 10
    Com_EB_RxDMQueue.isra.0/328 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 3 time: 12callee size: 6 stack: 0
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.17 size: 1 time: 10
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op1 is compile time invariant

IPA function summary for Com_EB_HandlePduGroupRx/147 inlinable
  global time:     563.935466
  self size:       39
  global size:     78
  min size:       43
  self stack:      0
  global stack:    0
  estimated growth:25
    size:43.000000, time:543.313163
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:10.000000, time:1.339756,  nonconst if:(op0 changed)
    size:2.000000, time:0.112180,  executed if:(op0 == 0),  nonconst if:(op2 changed) && (op0 == 0)
  calls:
    Com_EB_HandleRxIPdu/157 inlined
      loop depth: 1 freq:3.38 size: 6 time: 15callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      Com_EB_HandleRxIPdu_EnableRxDM/152 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:0.17 size: 3 time: 12callee size:64 stack: 0 predicate: (op0 == 1)
      Com_EB_HandleRxIPdu_DisableRxDM/153 call is unlikely and code size would grow
        loop depth: 1 freq:0.28 size: 3 time: 12callee size: 7 stack: 0 predicate: (op0 == 1)
      Com_EB_HandleRxIPdu_DisableRxDM/153 call is unlikely and code size would grow
        loop depth: 1 freq:0.28 size: 3 time: 12callee size: 7 stack: 0 predicate: (op0 == 0)
      TS_AtomicClearBit_8/307 function body not available
        loop depth: 1 freq:0.28 size: 3 time: 12 predicate: (op0 == 0)
         op1 is compile time invariant
      Com_EB_HandleRxIPdu_EnableRxDM/152 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:0.19 size: 3 time: 12callee size:64 stack: 0 predicate: (op0 == 0)
      Com_EB_HandleRxIPdu_Start/151 inlined
        loop depth: 1 freq:0.19 size: 4 time: 13callee size: 5 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        TS_AtomicSetBit_8/308 function body not available
          loop depth: 1 freq:0.19 size: 3 time: 12 predicate: (op0 == 0)
           op1 is compile time invariant
        Com_EB_InitRxIPdu/163 --param max-inline-insns-auto limit reached
          loop depth: 1 freq:0.04 size: 2 time: 11callee size:35 stack: 0 predicate: (op2 == 1) && (op0 == 0)

IPA function summary for Com_EB_Write_DET/146 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_Write_A1_EL_DUB_DOC/145 inlinable
  global time:     5.000000
  self size:       8
  global size:     6
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_Write_A1_DL_DUB_DOC/383 inlined
      loop depth: 0 freq:1.00 size: 5 time: 14callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for Com_EB_Write_BO_EL_DUB_DOC/144 inlinable
  global time:     21.000000
  self size:       17
  global size:     17
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op2[ref offset: 160] changed || op1 changed) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] == 0),  nonconst if:(op2[ref offset: 160] changed || op1 changed) && (op0[ref offset: 0] == 0)
  calls:
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.50 size: 3 time: 12 predicate: (op0[ref offset: 0] != 0)
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.50 size: 3 time: 12 predicate: (op0[ref offset: 0] == 0)

IPA function summary for Com_EB_Write_A1_DL_DUB_DOC/143 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       1
  self stack:      0
  global stack:    0
  estimated growth:-2
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_BO_DL_DUB_DOC/142 inlinable
  global time:     13.500000
  self size:       20
  global size:     20
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op2[ref offset: 160] changed || op1 changed) && (op0[ref offset: 0] != 0)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 0] != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op2[ref offset: 160] changed) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.500000,  executed if:(op0[ref offset: 0] == 0),  nonconst if:(op2[ref offset: 160] changed || op1 changed) && (op0[ref offset: 0] == 0)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 0] == 0)
    size:2.000000, time:1.000000,  executed if:(op0[ref offset: 0] == 0),  nonconst if:(op2[ref offset: 160] changed) && (op0[ref offset: 0] == 0)
  calls:

IPA function summary for Com_EB_Write_AY_S0_EL_EUB_EOC_E2/141 inlinable
  global time:     178.454546
  self size:       32
  global size:     32
  min size:       4
  self stack:      0
  global stack:    0
    size:24.000000, time:141.318182
    size:6.000000, time:17.136364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_EOC_E2/140 inlinable
  global time:     43.000000
  self size:       16
  global size:     37
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:31 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
      Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 inlinable
  global time:     147.809090
  self size:       62
  global size:     62
  min size:       40
  self stack:      0
  global stack:    0
  estimated growth:51
    size:40.000000, time:108.809090
    size:5.000000, time:4.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_EUB_EOC_E2/138 inlinable
  global time:     157.181817
  self size:       46
  global size:     46
  min size:       4
  self stack:      0
  global stack:    0
    size:29.500000, time:123.681817
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_EUB_EOC_E2/137 inlinable
  global time:     58.500000
  self size:       47
  global size:     47
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:20.000000
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S1_EL_EUB_EOC_E3/136 inlinable
  global time:     134.090908
  self size:       29
  global size:     29
  min size:       4
  self stack:      0
  global stack:    0
    size:21.000000, time:105.045454
    size:5.000000, time:8.045454,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_EUB_EOC_E1/135 inlinable
  global time:     151.181819
  self size:       29
  global size:     29
  min size:       4
  self stack:      0
  global stack:    0
    size:21.500000, time:118.590910
    size:5.500000, time:12.590909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_EOC_E1/134 inlinable
  global time:     43.000000
  self size:       16
  global size:     37
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:31 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
      Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 inlinable
  global time:     147.809090
  self size:       62
  global size:     62
  min size:       40
  self stack:      0
  global stack:    0
  estimated growth:51
    size:40.000000, time:108.809090
    size:5.000000, time:4.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_EUB_EOC_E1/132 inlinable
  global time:     157.181817
  self size:       46
  global size:     46
  min size:       4
  self stack:      0
  global stack:    0
    size:29.500000, time:123.681817
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_EUB_EOC_E1/131 inlinable
  global time:     58.500000
  self size:       47
  global size:     47
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:20.000000
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_EUB_DOC_E2/130 inlinable
  global time:     148.181819
  self size:       26
  global size:     26
  min size:       4
  self stack:      0
  global stack:    0
    size:19.000000, time:112.045455
    size:5.000000, time:16.136364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_DOC_E2/129 inlinable
  global time:     43.000000
  self size:       16
  global size:     37
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
      Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 inlinable
  global time:     117.356364
  self size:       52
  global size:     52
  min size:       31
  self stack:      0
  global stack:    0
  estimated growth:42
    size:31.000000, time:79.356364
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_EUB_DOC_E2/127 inlinable
  global time:     136.000001
  self size:       39
  global size:     39
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:103.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_EUB_DOC_E2/126 inlinable
  global time:     52.500000
  self size:       40
  global size:     40
  min size:       4
  self stack:      0
  global stack:    0
    size:17.500000, time:15.000000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S1_EL_EUB_DOC_E3/125 inlinable
  global time:     106.818182
  self size:       23
  global size:     23
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:78.772728
    size:4.000000, time:7.045455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_EUB_DOC_E1/124 inlinable
  global time:     120.909092
  self size:       23
  global size:     23
  min size:       4
  self stack:      0
  global stack:    0
    size:16.500000, time:89.318182
    size:4.500000, time:11.590909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_EUB_DOC_E1/123 inlinable
  global time:     43.000000
  self size:       16
  global size:     37
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
      Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 inlinable
  global time:     117.356364
  self size:       52
  global size:     52
  min size:       31
  self stack:      0
  global stack:    0
  estimated growth:42
    size:31.000000, time:79.356364
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_EUB_DOC_E1/121 inlinable
  global time:     136.000001
  self size:       39
  global size:     39
  min size:       4
  self stack:      0
  global stack:    0
    size:23.500000, time:103.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_EUB_DOC_E1/120 inlinable
  global time:     52.500000
  self size:       40
  global size:     40
  min size:       4
  self stack:      0
  global stack:    0
    size:17.500000, time:15.000000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_DUB_EOC_E2/119 inlinable
  global time:     170.454546
  self size:       24
  global size:     24
  min size:       4
  self stack:      0
  global stack:    0
    size:16.500000, time:133.818182
    size:5.500000, time:16.636364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_EOC_E2/118 inlinable
  global time:     43.000000
  self size:       16
  global size:     37
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:27 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
      Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 inlinable
  global time:     139.809090
  self size:       54
  global size:     54
  min size:       33
  self stack:      0
  global stack:    0
  estimated growth:43
    size:32.500000, time:101.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_DUB_EOC_E2/116 inlinable
  global time:     149.181817
  self size:       38
  global size:     38
  min size:       4
  self stack:      0
  global stack:    0
    size:22.000000, time:116.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_DUB_EOC_E2/115 inlinable
  global time:     50.500000
  self size:       39
  global size:     39
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:12.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S1_EL_DUB_EOC_E3/114 inlinable
  global time:     126.090908
  self size:       21
  global size:     21
  min size:       4
  self stack:      0
  global stack:    0
    size:13.500000, time:97.545454
    size:4.500000, time:7.545454,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_DUB_EOC_E1/113 inlinable
  global time:     143.181819
  self size:       21
  global size:     21
  min size:       4
  self stack:      0
  global stack:    0
    size:14.000000, time:111.090910
    size:5.000000, time:12.090909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_EOC_E1/112 inlinable
  global time:     43.000000
  self size:       16
  global size:     37
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:27 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
      Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 inlinable
  global time:     139.809090
  self size:       54
  global size:     54
  min size:       33
  self stack:      0
  global stack:    0
  estimated growth:43
    size:32.500000, time:101.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_DUB_EOC_E1/110 inlinable
  global time:     149.181817
  self size:       38
  global size:     38
  min size:       4
  self stack:      0
  global stack:    0
    size:22.000000, time:116.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_DUB_EOC_E1/109 inlinable
  global time:     50.500000
  self size:       39
  global size:     39
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:12.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_DUB_DOC_E2/108 inlinable
  global time:     140.181819
  self size:       18
  global size:     18
  min size:       4
  self stack:      0
  global stack:    0
    size:11.500000, time:104.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_DOC_E2/107 inlinable
  global time:     43.000000
  self size:       16
  global size:     37
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:22 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
      Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 inlinable
  global time:     109.356364
  self size:       44
  global size:     44
  min size:       24
  self stack:      0
  global stack:    0
  estimated growth:34
    size:23.500000, time:71.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_DUB_DOC_E2/105 inlinable
  global time:     128.000001
  self size:       31
  global size:     31
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:96.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_DUB_DOC_E2/104 inlinable
  global time:     44.500000
  self size:       32
  global size:     32
  min size:       4
  self stack:      0
  global stack:    0
    size:10.000000, time:7.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S1_EL_DUB_DOC_E3/103 inlinable
  global time:     98.818182
  self size:       15
  global size:     15
  min size:       4
  self stack:      0
  global stack:    0
    size:8.500000, time:71.272728
    size:3.500000, time:6.545455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_EL_DUB_DOC_E1/102 inlinable
  global time:     112.909092
  self size:       15
  global size:     15
  min size:       4
  self stack:      0
  global stack:    0
    size:9.000000, time:81.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_64_SX_EL_DUB_DOC_E1/101 inlinable
  global time:     43.000000
  self size:       16
  global size:     37
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:22 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:15 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
      Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
        loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 inlinable
  global time:     109.356364
  self size:       44
  global size:     44
  min size:       24
  self stack:      0
  global stack:    0
  estimated growth:34
    size:23.500000, time:71.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_16_SX_EL_DUB_DOC_E1/99 inlinable
  global time:     128.000001
  self size:       31
  global size:     31
  min size:       4
  self stack:      0
  global stack:    0
    size:16.000000, time:96.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_08_SX_EL_DUB_DOC_E1/98 inlinable
  global time:     44.500000
  self size:       32
  global size:     32
  min size:       4
  self stack:      0
  global stack:    0
    size:10.000000, time:7.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Write_AY_S0_DL_EUB_EOC_E2/97 inlinable
  global time:     158.454546
  self size:       30
  global size:     30
  min size:       0
  self stack:      0
  global stack:    0
    size:19.500000, time:136.818182
    size:5.500000, time:16.636364,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_EUB_EOC_E2/96 inlinable
  global time:     33.000000
  self size:       16
  global size:     35
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant

IPA function summary for Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 inlinable
  global time:     127.809090
  self size:       60
  global size:     60
  min size:       36
  self stack:      0
  global stack:    0
  estimated growth:242
    size:35.500000, time:104.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_EUB_EOC_E2/94 inlinable
  global time:     137.181817
  self size:       44
  global size:     44
  min size:       0
  self stack:      0
  global stack:    0
    size:25.000000, time:119.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_EUB_EOC_E2/93 inlinable
  global time:     38.500000
  self size:       45
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:15.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S1_DL_EUB_EOC_E3/92 inlinable
  global time:     114.090908
  self size:       27
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
    size:16.500000, time:100.545454
    size:4.500000, time:7.545454,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_EUB_EOC_E1/91 inlinable
  global time:     131.181819
  self size:       27
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
    size:17.000000, time:114.090910
    size:5.000000, time:12.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_EUB_EOC_E1/90 inlinable
  global time:     33.000000
  self size:       16
  global size:     35
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:30 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant

IPA function summary for Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 inlinable
  global time:     127.809090
  self size:       60
  global size:     60
  min size:       36
  self stack:      0
  global stack:    0
  estimated growth:242
    size:35.500000, time:104.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_EUB_EOC_E1/88 inlinable
  global time:     137.181817
  self size:       44
  global size:     44
  min size:       0
  self stack:      0
  global stack:    0
    size:25.000000, time:119.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_EUB_EOC_E1/87 inlinable
  global time:     38.500000
  self size:       45
  global size:     45
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:15.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_EUB_DOC_E2/86 inlinable
  global time:     128.181819
  self size:       24
  global size:     24
  min size:       0
  self stack:      0
  global stack:    0
    size:14.500000, time:107.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_EUB_DOC_E2/85 inlinable
  global time:     33.000000
  self size:       16
  global size:     35
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant

IPA function summary for Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 inlinable
  global time:     97.356364
  self size:       50
  global size:     50
  min size:       27
  self stack:      0
  global stack:    0
  estimated growth:197
    size:26.500000, time:74.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_EUB_DOC_E2/83 inlinable
  global time:     116.000000
  self size:       37
  global size:     37
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:99.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_EUB_DOC_E2/82 inlinable
  global time:     32.500000
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:10.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S1_DL_EUB_DOC_E3/81 inlinable
  global time:     86.818182
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:74.272728
    size:3.500000, time:6.545455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_EUB_DOC_E1/80 inlinable
  global time:     100.909091
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:12.000000, time:84.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_EUB_DOC_E1/79 inlinable
  global time:     33.000000
  self size:       16
  global size:     35
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:25 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant

IPA function summary for Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 inlinable
  global time:     97.356364
  self size:       50
  global size:     50
  min size:       27
  self stack:      0
  global stack:    0
  estimated growth:197
    size:26.500000, time:74.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_EUB_DOC_E1/77 inlinable
  global time:     116.000000
  self size:       37
  global size:     37
  min size:       0
  self stack:      0
  global stack:    0
    size:19.000000, time:99.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_EUB_DOC_E1/76 inlinable
  global time:     32.500000
  self size:       38
  global size:     38
  min size:       0
  self stack:      0
  global stack:    0
    size:13.000000, time:10.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 144] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 144] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 144] changed || op1 changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_DUB_EOC_E2/75 inlinable
  global time:     150.454546
  self size:       22
  global size:     22
  min size:       0
  self stack:      0
  global stack:    0
    size:16.500000, time:133.818182
    size:5.500000, time:16.636364,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_DUB_EOC_E2/74 inlinable
  global time:     33.000000
  self size:       16
  global size:     35
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant

IPA function summary for Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 inlinable
  global time:     119.809090
  self size:       52
  global size:     52
  min size:       33
  self stack:      0
  global stack:    0
  estimated growth:203
    size:32.500000, time:101.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_DUB_EOC_E2/72 inlinable
  global time:     129.181817
  self size:       36
  global size:     36
  min size:       0
  self stack:      0
  global stack:    0
    size:22.000000, time:116.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_DUB_EOC_E2/71 inlinable
  global time:     30.500000
  self size:       37
  global size:     37
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:12.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S1_DL_DUB_EOC_E3/70 inlinable
  global time:     106.090908
  self size:       19
  global size:     19
  min size:       0
  self stack:      0
  global stack:    0
    size:13.500000, time:97.545454
    size:4.500000, time:7.545454,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_DUB_EOC_E1/69 inlinable
  global time:     123.181819
  self size:       19
  global size:     19
  min size:       0
  self stack:      0
  global stack:    0
    size:14.000000, time:111.090910
    size:5.000000, time:12.090909,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_DUB_EOC_E1/68 inlinable
  global time:     33.000000
  self size:       16
  global size:     35
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:26 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant

IPA function summary for Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 inlinable
  global time:     119.809090
  self size:       52
  global size:     52
  min size:       33
  self stack:      0
  global stack:    0
  estimated growth:203
    size:32.500000, time:101.309090
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_DUB_EOC_E1/66 inlinable
  global time:     129.181817
  self size:       36
  global size:     36
  min size:       0
  self stack:      0
  global stack:    0
    size:22.000000, time:116.181817
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_DUB_EOC_E1/65 inlinable
  global time:     30.500000
  self size:       37
  global size:     37
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:12.500000
    size:4.000000, time:3.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_DUB_DOC_E2/64 inlinable
  global time:     120.181819
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:104.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_DUB_DOC_E2/63 inlinable
  global time:     33.000000
  self size:       16
  global size:     35
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant

IPA function summary for Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 inlinable
  global time:     89.356364
  self size:       42
  global size:     42
  min size:       24
  self stack:      0
  global stack:    0
  estimated growth:158
    size:23.500000, time:71.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_DUB_DOC_E2/61 inlinable
  global time:     108.000000
  self size:       29
  global size:     29
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:96.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_DUB_DOC_E2/60 inlinable
  global time:     24.500000
  self size:       30
  global size:     30
  min size:       0
  self stack:      0
  global stack:    0
    size:10.000000, time:7.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_AY_S1_DL_DUB_DOC_E3/59 inlinable
  global time:     78.818182
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:8.500000, time:71.272728
    size:3.500000, time:6.545455,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 160] changed)
  calls:

IPA function summary for Com_EB_Write_AY_S0_DL_DUB_DOC_E1/58 inlinable
  global time:     92.909091
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:81.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Write_64_SX_DL_DUB_DOC_E1/57 inlinable
  global time:     33.000000
  self size:       16
  global size:     35
  min size:       0
  self stack:      0
  global stack:    26
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
  calls:
    Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320 inlined
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:14 stack:26
      Stack frame offset 0, callee self size 26, callee size 26
      Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant
      Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 5 time: 14callee size:21 stack: 0 predicate: (op2[ref offset: 32] > 32)
         op2 is compile time invariant

IPA function summary for Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 inlinable
  global time:     89.356364
  self size:       42
  global size:     42
  min size:       24
  self stack:      0
  global stack:    0
  estimated growth:158
    size:23.500000, time:71.856364
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:5.500000, time:5.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_16_SX_DL_DUB_DOC_E1/55 inlinable
  global time:     108.000000
  self size:       29
  global size:     29
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:96.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Write_08_SX_DL_DUB_DOC_E1/54 inlinable
  global time:     24.500000
  self size:       30
  global size:     30
  min size:       0
  self stack:      0
  global stack:    0
    size:10.000000, time:7.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 160] changed) && (not inlined)
    size:3.500000, time:3.000000,  nonconst if:(op2[ref offset: 160] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:4.000000, time:3.500000,  nonconst if:(op2[ref offset: 160] changed || op2[ref offset: 32] changed)
    size:2.000000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed || op2[ref offset: 160] changed)
    size:2.000000, time:1.500000,  nonconst if:(op2[ref offset: 160] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Read_ZS/52 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_Read_DET/51 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       10
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
  calls:
    Det_ASR40_ReportError/305 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant

IPA function summary for Com_EB_Read_A1_EL/50 inlinable
  global time:     5.000000
  self size:       8
  global size:     6
  min size:       10
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_Read_A1_DL/382 inlined
      loop depth: 0 freq:1.00 size: 5 time: 14callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for Com_EB_Read_BO_EL/49 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       10
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_Read_BO_DL/47 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 5 time: 14callee size: 6 stack: 0

IPA function summary for Com_EB_Read_A1_DL/48 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       2
  self stack:      0
  global stack:    0
  estimated growth:-2
    size:1.500000, time:1.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Read_BO_DL/47 inlinable
  global time:     11.000000
  self size:       12
  global size:     12
  min size:       4
  self stack:      0
  global stack:    0
  estimated growth:3
    size:3.500000, time:3.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:

IPA function summary for Com_EB_Read_32_EL_SignExt/46 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_32_DL_SignExt/45 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_16_EL_SignExt/44 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_16_DL_SignExt/43 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_08_EL_SignExt/42 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_08_DL_SignExt/41 inlinable
  global time:     31.500000
  self size:       22
  global size:     22
  min size:       14
  self stack:      0
  global stack:    0
    size:8.500000, time:7.250000
    size:4.500000, time:3.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op2[ref offset: 0] changed)
  array index:(op2[ref offset: 0] changed)
  calls:
    indirect call loop depth: 0 freq:1.00 size: 7 time: 19

IPA function summary for Com_EB_Read_AY_EL_E3/40 inlinable
  global time:     38.000000
  self size:       12
  global size:     12
  min size:       12
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_AY_DL_E3/39 inlinable
  global time:     18.000000
  self size:       10
  global size:     10
  min size:       8
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
  calls:
    TS_MemCpy32/306 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for Com_EB_Read_AY_EL_E2/38 inlinable
  global time:     140.181819
  self size:       18
  global size:     18
  min size:       4
  self stack:      0
  global stack:    0
    size:11.500000, time:104.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_64_EL_E2/37 inlinable
  global time:     44.000000
  self size:       39
  global size:     39
  min size:       0
  self stack:      16
  global stack:    16
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32),  nonconst if:(op2[ref offset: 32] changed) && (op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32) && (not inlined)
  calls:
    Com_EB_Read_32_EL_E2/36 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:20 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
    Com_EB_Read_32_DL_E2/26 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    Com_EB_Read_32_DL_E2/26 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Read_32_EL_E2/36 inlinable
  global time:     107.327273
  self size:       40
  global size:     40
  min size:       20
  self stack:      0
  global stack:    0
  estimated growth:31
    size:19.500000, time:73.877273
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:8.500000, time:6.810000,  nonconst if:(op2[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:4.000000, time:1.980000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_16_EL_E2/35 inlinable
  global time:     115.798182
  self size:       49
  global size:     49
  min size:       4
  self stack:      0
  global stack:    0
    size:31.000000, time:83.638182
    size:5.000000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:1.500000, time:0.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 32] changed || op2[ref offset: 16] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_08_EL_E2/34 inlinable
  global time:     26.745000
  self size:       38
  global size:     38
  min size:       4
  self stack:      0
  global stack:    0
    size:15.500000, time:8.963400
    size:4.500000, time:3.330000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:6.500000, time:5.717800,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.000000, time:0.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
    size:4.000000, time:1.217800,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.22 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.22 size: 1 time: 10

IPA function summary for Com_EB_Read_AY_EL_E1/33 inlinable
  global time:     112.909092
  self size:       15
  global size:     15
  min size:       4
  self stack:      0
  global stack:    0
    size:9.000000, time:81.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_64_EL_E1/32 inlinable
  global time:     44.000000
  self size:       39
  global size:     39
  min size:       0
  self stack:      16
  global stack:    16
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32),  nonconst if:(op2[ref offset: 32] changed) && (op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32) && (not inlined)
  calls:
    Com_EB_Read_32_EL_E1/31 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:20 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)
    Com_EB_Read_32_DL_E1/21 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    Com_EB_Read_32_DL_E1/21 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.50 size: 1 time: 10 predicate: (op2[ref offset: 32] > 32)

IPA function summary for Com_EB_Read_32_EL_E1/31 inlinable
  global time:     107.327273
  self size:       40
  global size:     40
  min size:       20
  self stack:      0
  global stack:    0
  estimated growth:31
    size:19.500000, time:73.877273
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:8.500000, time:6.810000,  nonconst if:(op2[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:4.000000, time:1.980000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_16_EL_E1/30 inlinable
  global time:     115.798182
  self size:       49
  global size:     49
  min size:       4
  self stack:      0
  global stack:    0
    size:31.000000, time:83.638182
    size:5.000000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:1.500000, time:0.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 32] changed || op2[ref offset: 16] changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10

IPA function summary for Com_EB_Read_08_EL_E1/29 inlinable
  global time:     26.745000
  self size:       38
  global size:     38
  min size:       4
  self stack:      0
  global stack:    0
    size:15.500000, time:8.963400
    size:4.500000, time:3.330000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:6.500000, time:5.717800,  nonconst if:(op2[ref offset: 16] changed)
    size:1.000000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.000000, time:0.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
    size:4.000000, time:1.217800,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
  calls:
    SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 function body not available
      loop depth: 0 freq:0.22 size: 1 time: 10
    SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 function body not available
      loop depth: 0 freq:0.22 size: 1 time: 10

IPA function summary for Com_EB_Read_AY_DL_E2/28 inlinable
  global time:     120.181819
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:104.545455
    size:4.500000, time:15.636364,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Read_64_DL_E2/27 inlinable
  global time:     34.000000
  self size:       37
  global size:     37
  min size:       0
  self stack:      16
  global stack:    16
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32),  nonconst if:(op2[ref offset: 32] changed) && (op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32) && (not inlined)
  calls:
    Com_EB_Read_32_DL_E2/26 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Read_32_DL_E2/26 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    Com_EB_Read_32_DL_E2/26 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant

IPA function summary for Com_EB_Read_32_DL_E2/26 inlinable
  global time:     87.327273
  self size:       38
  global size:     38
  min size:       20
  self stack:      0
  global stack:    0
  estimated growth:143
    size:19.500000, time:73.877273
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:8.500000, time:6.810000,  nonconst if:(op2[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:4.000000, time:1.980000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:

IPA function summary for Com_EB_Read_16_DL_E2/25 inlinable
  global time:     93.798182
  self size:       44
  global size:     44
  min size:       0
  self stack:      0
  global stack:    0
    size:27.500000, time:80.638182
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:2.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 32] changed || op2[ref offset: 16] changed)
  calls:

IPA function summary for Com_EB_Read_08_DL_E2/24 inlinable
  global time:     22.290000
  self size:       33
  global size:     33
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:6.470000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:6.500000, time:5.830000,  nonconst if:(op2[ref offset: 16] changed)
    size:3.000000, time:1.330000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:1.500000, time:1.000000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:4.500000, time:3.340000,  nonconst if:(op2[ref offset: 32] changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:

IPA function summary for Com_EB_Read_AY_DL_E1/23 inlinable
  global time:     92.909091
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:9.000000, time:81.818182
    size:4.000000, time:11.090909,  executed if:(not inlined)
  calls:

IPA function summary for Com_EB_Read_64_DL_E1/22 inlinable
  global time:     34.000000
  self size:       37
  global size:     37
  min size:       0
  self stack:      16
  global stack:    16
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:14.000000, time:7.000000,  executed if:(op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32),  nonconst if:(op2[ref offset: 32] changed) && (op2[ref offset: 32] > 32)
    size:1.000000, time:0.500000,  executed if:(op2[ref offset: 32] > 32) && (not inlined)
  calls:
    Com_EB_Read_32_DL_E1/21 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] <= 32)
    Com_EB_Read_32_DL_E1/21 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant
    Com_EB_Read_32_DL_E1/21 call is unlikely and code size would grow
      loop depth: 0 freq:0.50 size: 5 time: 14callee size:19 stack: 0 predicate: (op2[ref offset: 32] > 32)
       op2 is compile time invariant

IPA function summary for Com_EB_Read_32_DL_E1/21 inlinable
  global time:     87.327273
  self size:       38
  global size:     38
  min size:       20
  self stack:      0
  global stack:    0
  estimated growth:143
    size:19.500000, time:73.877273
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:8.500000, time:6.810000,  nonconst if:(op2[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 32] changed)
    size:1.000000, time:0.660000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:4.000000, time:1.980000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:

IPA function summary for Com_EB_Read_16_DL_E1/20 inlinable
  global time:     93.798182
  self size:       44
  global size:     44
  min size:       0
  self stack:      0
  global stack:    0
    size:27.500000, time:80.638182
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:2.840000,  nonconst if:(op2[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op2[ref offset: 16] changed)
    size:2.000000, time:1.000000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 32] changed || op2[ref offset: 16] changed)
  calls:

IPA function summary for Com_EB_Read_08_DL_E1/19 inlinable
  global time:     22.290000
  self size:       33
  global size:     33
  min size:       0
  self stack:      0
  global stack:    0
    size:11.500000, time:6.470000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 16] changed) && (not inlined)
    size:6.500000, time:5.830000,  nonconst if:(op2[ref offset: 16] changed)
    size:3.000000, time:1.330000,  nonconst if:(op2[ref offset: 16] changed || op1 changed)
    size:1.500000, time:1.000000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 32] changed) && (not inlined)
    size:4.500000, time:3.340000,  nonconst if:(op2[ref offset: 32] changed)
    size:2.000000, time:1.320000,  nonconst if:(op2[ref offset: 16] changed || op2[ref offset: 32] changed)
  calls:

IPA function summary for Com_IsValidConfig/17 inlinable
  global time:     12.834773
  self size:       17
  global size:     20
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:10
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:0.500000, time:0.267350,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B)
    size:10.500000, time:1.792774,  executed if:(op0 != 0B)
    size:0.500000, time:0.090899,  executed if:(op0 != 0B) && (not inlined)
  calls:
    Com_IsValidConfig.part.0/379 inlined
      loop depth: 0 freq:0.06 size: 3 time: 12callee size: 5 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    TS_PlatformSigIsValid/301 function body not available
      loop depth: 0 freq:0.53 size: 3 time: 12 predicate: (op0 != 0B)

IPA function summary for Com_EB_CbkTxPrepDummyCbk/16 inlinable
  global time:     2.000000
  self size:       4
  global size:     3
  min size:       2
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Com_EB_TxDMDummyCbk/384 inlined
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 1 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for Com_EB_TxDMDummyCbk/15 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:-1
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Com_ResetFilerOneEveryN/14 inlinable
  global time:     14.000000
  self size:       15
  global size:     15
  min size:       11
  self stack:      0
  global stack:    0
  estimated growth:5
    size:11.000000, time:11.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for Com_EB_SetBuffer/13 inlinable
  global time:     41.875000
  self size:       154
  global size:     154
  min size:       60
  self stack:      22
  global stack:    22
  estimated growth:290
    size:60.000000, time:9.125000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 64] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:25.500000, time:9.375000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:8.500000, time:1.250000,  nonconst if:(op0[ref offset: 96] changed)
  array index:(op0[ref offset: 0] changed)
  calls:
    TS_AtomicClearBit_8/307 function body not available
      loop depth: 0 freq:0.08 size: 3 time: 12
    TS_AtomicSetBit_8/308 function body not available
      loop depth: 0 freq:0.04 size: 3 time: 12
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19

IPA function summary for Com_EB_CalculateFilter/12 inlinable
  global time:     41.500000
  self size:       72
  global size:     154
  min size:       206
  self stack:      0
  global stack:    9
  estimated growth:54
    size:23.500000, time:2.350000
    size:3.500000, time:2.050000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:34.500000, time:9.700000,  nonconst if:(op0[ref offset: 0] changed)
  calls:
    Com_EB_CalculateFilter_Uint64/10 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 9
      Stack frame offset 0, callee self size 9, callee size 9
      Com_EB_FilterUint64/224 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.10 size: 4 time: 13callee size:19 stack:12
         op1 is compile time invariant
      indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    Com_EB_CalculateFilter_Sint64/11 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 9
      Stack frame offset 0, callee self size 9, callee size 9
      Com_EB_FilterSint64/225 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.10 size: 4 time: 13callee size:19 stack:12
         op1 is compile time invariant
      indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    Com_EB_CalculateFilter_Sint32/9 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 5
      Stack frame offset 0, callee self size 5, callee size 5
      Com_EB_FilterSint32/223 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0
         op1 is compile time invariant
      indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    Com_EB_CalculateFilter_Sint16/8 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 3
      Stack frame offset 0, callee self size 3, callee size 3
      Com_EB_FilterSint16/221 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0
         op1 is compile time invariant
      indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    Com_EB_CalculateFilter_Sint8/7 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 2
      Stack frame offset 0, callee self size 2, callee size 2
      Com_EB_FilterSint8/219 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.10 size: 4 time: 13callee size:35 stack: 0
         op1 is compile time invariant
      indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    Com_EB_CalculateFilter_Uint32/6 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 5
      Stack frame offset 0, callee self size 5, callee size 5
      Com_EB_FilterUint32/222 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0
         op1 is compile time invariant
      indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    Com_EB_CalculateFilter_Uint16/5 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 3
      Stack frame offset 0, callee self size 3, callee size 3
      Com_EB_FilterUint16/220 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0
         op1 is compile time invariant
      indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    Com_EB_CalculateFilter_Uint8/4 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 9 stack: 2
      Stack frame offset 0, callee self size 2, callee size 2
      Com_EB_FilterUint8/218 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.10 size: 4 time: 13callee size:35 stack: 0
         op1 is compile time invariant
      indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    Com_EB_CalculateFilter_Bool.isra.0/363 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size: 7 stack: 1
      Stack frame offset 0, callee self size 1, callee size 1
      Com_EB_FilterBoolean/217 --param max-inline-insns-auto limit reached
        loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 0
         op1 is compile time invariant


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Com_EB_SendSignalGroupArray/392 (Com_EB_SendSignalGroupArray) @06dcdee0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 206
  References: 
  Referring: 
  Function Com_EB_SendSignalGroupArray/392 is inline copy in Com_MainFunctionRouteSignals/240
  Clone of Com_EB_SendSignalGroupArray/206
  Availability: local
  Function flags: count:524910242 (estimated locally) body local optimize_size
  Called by: Com_EB_RouteSG_2_SG.isra.0/375 (inlined) (524910242 (estimated locally),1.51 per call) 
  Calls: Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 (524910242 (estimated locally),1.51 per call) Com_EB_WriteShadowBuffer.isra.0/368 (524910242 (estimated locally),1.51 per call) Com_EB_CalculateSignalGroupTM/207 (524910242 (estimated locally),1.51 per call) 
Com_SetupTxSignalGroup/391 (Com_SetupTxSignalGroup) @06dcdd20
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 387
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_SetupTxSignalGroup/391 is inline copy in Com_SendSignalGroup/284
  Clone of Com_SetupTxSignalGroup/213
  Availability: local
  Function flags: count:574129754 (estimated locally) body local optimize_size
  Called by: Com_SetupTxSignalGroup_DET/390 (inlined) (574129754 (estimated locally),0.53 per call) 
  Calls: Com_EB_SendSignalGroup/204 (indirect_inlining) (574129754 (estimated locally),0.53 per call) 
Com_SetupTxSignalGroup_DET/390 (Com_SetupTxSignalGroup_DET) @07bd4c40
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 283
  References: 
  Referring: 
  Function Com_SetupTxSignalGroup_DET/390 is inline copy in Com_SendSignalGroup/284
  Clone of Com_SetupTxSignalGroup_DET/283
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_SendSignalGroup/284 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_GetTxSignalGroupCfg/282 (1073741824 (estimated locally),1.00 per call) Com_SetupTxSignalGroup/391 (inlined) (574129754 (estimated locally),0.53 per call) 
Com_EB_FilterSint64.part.0/389 (Com_EB_FilterSint64.part.0) @06dcd7e0
  Type: function definition analyzed
  Visibility: artificial
  next sharing asm name: 342
  References: 
  Referring: 
  Function Com_EB_FilterSint64.part.0/389 is inline copy in Com_EB_FilterSint64/225
  Clone of Com_EB_FilterSint64.part.0/342
  Availability: local
  Function flags: count:365072224 (estimated locally) first_run:1 body local icf_merged split_part optimize_size
  Called by: Com_EB_FilterSint64/225 (inlined) (365072224 (estimated locally),0.34 per call) 
  Calls: Com_EB_FilterOneEveryN/216 (365072224 (estimated locally),0.34 per call) 
Com_SetupRxSignalGroup_DET/388 (Com_SetupRxSignalGroup_DET) @06dbc700
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 267
  References: 
  Referring: 
  Function Com_SetupRxSignalGroup_DET/388 is inline copy in Com_ReceiveSignalGroup/272
  Clone of Com_SetupRxSignalGroup_DET/267
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_ReceiveSignalGroup/272 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_GetRxSignalGroupCfg/266 (1073741824 (estimated locally),1.00 per call) Com_SetupRxSignalGroup/268 (574129754 (estimated locally),0.53 per call) 
Com_SetupTxSignalGroup/387 (Com_SetupTxSignalGroup) @06dbc380
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 213
  previous sharing asm name: 391
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_SetupTxSignalGroup/387 is inline copy in Com_MainFunctionRouteSignals/240
  Clone of Com_SetupTxSignalGroup/213
  Availability: local
  Function flags: count:1286815664 (estimated locally) body local optimize_size
  Called by: Com_EB_CheckSendSignalGroup/231 (inlined) (1286815664 (estimated locally),3.70 per call) 
  Calls: Com_EB_SendSignalGroup/204 (indirect_inlining) (1286815664 (estimated locally),3.70 per call) 
Com_EB_DisableSignalAndSignalGroupBasedDMFlag/386 (Com_EB_DisableSignalAndSignalGroupBasedDMFlag) @06dbc000
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 172
  References: 
  Referring: 
  Function Com_EB_DisableSignalAndSignalGroupBasedDMFlag/386 is inline copy in Com_EB_HandleRxIPdu_DisableRxDM/153
  Clone of Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleRxIPdu_DisableRxDM/153 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_EB_DisableSignalBasedDMFlag/173 (1073741824 (estimated locally),1.00 per call) Com_EB_DisableSignalGroupBasedDMFlag/174 (1073741824 (estimated locally),1.00 per call) 
Com_EB_InitSGBuffer.isra.0/385 (Com_EB_InitSGBuffer.isra.0) @06db0e00
  Type: function definition analyzed
  Visibility: artificial
  next sharing asm name: 359
  References: Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_InitSGBuffer.isra.0/385 is inline copy in Com_EB_InitTxIPdu/192
  Clone of Com_EB_InitSGBuffer.isra.0/359
  Availability: local
  Function flags: count:4246473223 (estimated locally) body local optimize_size
  Called by: Com_EB_InitTxIPdu_SignalGroups/186 (inlined) (4246473223 (estimated locally),3.95 per call) 
  Calls: TS_MemCpy32/306 (4246473223 (estimated locally),3.95 per call) 
Com_EB_TxDMDummyCbk/384 (Com_EB_TxDMDummyCbk) @06db09a0
  Type: function definition analyzed
  Visibility: public
  next sharing asm name: 15
  References: 
  Referring: 
  Function Com_EB_TxDMDummyCbk/384 is inline copy in Com_EB_CbkTxPrepDummyCbk/16
  Clone of Com_EB_TxDMDummyCbk/15
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local icf_merged optimize_size
  Called by: Com_EB_CbkTxPrepDummyCbk/16 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Com_EB_Write_A1_DL_DUB_DOC/383 (Com_EB_Write_A1_DL_DUB_DOC) @06db07e0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 143
  References: 
  Referring: 
  Function Com_EB_Write_A1_DL_DUB_DOC/383 is inline copy in Com_EB_Write_A1_EL_DUB_DOC/145
  Clone of Com_EB_Write_A1_DL_DUB_DOC/143
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local icf_merged optimize_size
  Called by: Com_EB_Write_A1_EL_DUB_DOC/145 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Com_EB_Read_A1_DL/382 (Com_EB_Read_A1_DL) @06db0540
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 48
  References: 
  Referring: 
  Function Com_EB_Read_A1_DL/382 is inline copy in Com_EB_Read_A1_EL/50
  Clone of Com_EB_Read_A1_DL/48
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local icf_merged optimize_size
  Called by: Com_EB_Read_A1_EL/50 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Com_TpRxIndication/381 (Com_TpRxIndication) @06f3ba80
  Type: function definition analyzed
  Visibility: public
  next sharing asm name: 276
  References: 
  Referring: 
  Function Com_TpRxIndication/381 is inline copy in Com_TpTxConfirmation/293
  Clone of Com_TpRxIndication/276
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local icf_merged optimize_size
  Called by: Com_TpTxConfirmation/293 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop.0/380 (Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop) @06c8b1c0
  Type: function definition analyzed
  Visibility: artificial
  References: 
  Referring: 
  Function Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop/380 is inline copy in Com_EB_NotifyReceivers.isra.0/367
  Clone of Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0/347
  Availability: local
  Function flags: count:8687547529 (estimated locally) local optimize_size
  Called by: Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 (inlined) (8687547529 (estimated locally),8.09 per call) 
  Calls: Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (8687547529 (estimated locally),8.09 per call) 
Com_IsValidConfig.part.0/379 (Com_IsValidConfig.part.0) @07d02380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_LcfgSignature/302 (read)
  Referring: 
  Function Com_IsValidConfig.part.0/379 is inline copy in Com_IsValidConfig/17
  Availability: local
  Function flags: count:66369400 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_IsValidConfig/17 (inlined) (66369400 (estimated locally),0.06 per call) 
  Calls: 
Com_EB_SendSignalGroup.part.0/378 (Com_EB_SendSignalGroup.part.0) @07ce32a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_SendSignalGroup.part.0/378 is inline copy in Com_EB_SendSignalGroup/204
  Availability: local
  Function flags: count:233216728 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_SendSignalGroup/204 (inlined) (233216728 (estimated locally),0.22 per call) 
  Calls: Det_ASR40_ReportError/305 (233216728 (estimated locally),0.22 per call) 
Com_EB_SendSignalGroupArray_DETCheck.part.0/377 (Com_EB_SendSignalGroupArray_DETCheck.part.0) @07ce31c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_SendSignalGroupArray_DETCheck.part.0/377 is inline copy in Com_SendSignalGroupArray/285
  Availability: local
  Function flags: count:58618648 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_SendSignalGroupArray_DETCheck/205 (inlined) (58618648 (estimated locally),0.05 per call) 
  Calls: Det_ASR40_ReportError/305 (58618648 (estimated locally),0.05 per call) 
Com_EB_RouteSignalGroup.isra.0/376 (Com_EB_RouteSignalGroup.isra.0) @073cc000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_RouteSignalGroup.isra.0/376 is inline copy in Com_MainFunctionRouteSignals/240
  Availability: local
  Function flags: count:637883179 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionRouteSignals_Src_Generic_hlp/239 (inlined) (637883179 (estimated locally),1.84 per call) 
  Calls: Com_EB_RouteReceiveSignalGroup/235 (inlined) (157876086 (estimated locally),0.45 per call) Com_EB_RouteSG_2_SG.isra.0/375 (inlined) (524910242 (estimated locally),1.51 per call) 
Com_EB_RouteSG_2_SG.isra.0/375 (Com_EB_RouteSG_2_SG.isra.0) @07ce3700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_RouteSG_2_SG.isra.0/375 is inline copy in Com_MainFunctionRouteSignals/240
  Availability: local
  Function flags: count:524910242 (estimated locally) body local optimize_size
  Called by: Com_EB_RouteSignalGroup.isra.0/376 (inlined) (524910242 (estimated locally),1.51 per call) 
  Calls: Com_EB_SendSignalGroupArray/392 (inlined) (524910242 (estimated locally),1.51 per call) 
Com_EB_RouteSignal.isra.0/374 (Com_EB_RouteSignal.isra.0) @07cc99a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_RouteSignal.isra.0/374 is inline copy in Com_MainFunctionRouteSignals/240
  Availability: local
  Function flags: count:637883179 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionRouteSignals_Src_Generic_hlp/239 (inlined) (637883179 (estimated locally),1.84 per call) 
  Calls: Com_EB_RouteSignalHelper/232 (424192314 (estimated locally),1.22 per call) 
Com_EB_RouteSignalHelper_Write.part.0/373 (Com_EB_RouteSignalHelper_Write.part.0) @073ace00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_RouteSignalHelper_Write.part.0/373 is inline copy in Com_EB_RouteSignalHelper_Write/233
  Availability: local
  Function flags: count:217325344 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_RouteSignalHelper_Write/233 (inlined) (217325344 (estimated locally),0.20 per call) 
  Calls: SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (217325344 (estimated locally),0.20 per call) Com_EB_WriteDynSignal_ExitArea_0/202 (217325344 (estimated locally),0.20 per call) 
Com_EB_SendSignal_Transmit.part.0/372 (Com_EB_SendSignal_Transmit.part.0) @07343000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_SendSignal_Transmit.part.0/372 is inline copy in Com_EB_SendSignal_Transmit/201
  Availability: local
  Function flags: count:59944590 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_SendSignal_Transmit/201 (inlined) (59944590 (estimated locally),0.06 per call) 
  Calls: Com_EB_Request_Send_Pdu/176 (59944590 (estimated locally),0.06 per call) 
Com_EB_Send_Pdu.part.0/371 (Com_EB_Send_Pdu.part.0) @07cc9000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Send_Pdu.part.0/371 is inline copy in Com_EB_Send_Pdu/180
  Availability: local
  Function flags: count:254253474 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Send_Pdu/180 (inlined) (254253474 (estimated locally),0.24 per call) 
  Calls: Com_EB_ClearTxUpdateBits/197 (83903646 (estimated locally),0.08 per call) 
Com_EB_HandleTxConfirmations.part.0/370 (Com_EB_HandleTxConfirmations.part.0) @07c9ba80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_HandleTxConfirmations.part.0/370 is inline copy in Com_EB_HandleTxConfirmations/290
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_HandleTxConfirmations/290 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: TS_AtomicSetBit_8/308 (536870912 (estimated locally),0.50 per call) 
Com_EB_HandleRxConfirm.isra.0/369 (Com_EB_HandleRxConfirm.isra.0) @07c9b380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_HandleRxConfirm.isra.0/369 is inline copy in Com_RxIndication/275
  Availability: local
  Function flags: count:77814597 (estimated locally) body local optimize_size
  Called by: Com_RxIndication/275 (inlined) (77814597 (estimated locally),0.07 per call) 
  Calls: Com_EB_NotifyReceivers.isra.0/367 (38907299 (estimated locally),0.04 per call) TS_AtomicSetBit_8/308 (38907299 (estimated locally),0.04 per call) 
Com_EB_WriteShadowBuffer.isra.0/368 (Com_EB_WriteShadowBuffer.isra.0) @07c9b2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gDataMemPtr/309 (read)Com_gDataMemPtr/309 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: local
  Function flags: count:614847218 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignalGroupArray/392 (524910242 (estimated locally),1.51 per call) Com_EB_SendSignalGroup/204 (840525101 (estimated locally),0.78 per call) Com_EB_SendSignalGroupArray/206 (252033380 (estimated locally),0.23 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (614847219 (estimated locally),1.00 per call) TS_AtomicSetBit_8/308 (202899582 (estimated locally),0.33 per call) TS_MemCpy32/306 (24932605 (estimated locally),0.04 per call) Com_EB_WriteShadowBuffer_Fragment/208 (inlined) (164379404 (estimated locally),0.27 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (614847218 (estimated locally),1.00 per call) 
Com_EB_NotifyReceivers.isra.0/367 (Com_EB_NotifyReceivers.isra.0) @07c77b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionRx/244 (315357974 (estimated locally),0.54 per call) Com_EB_HandleRxConfirm.isra.0/369 (38907299 (estimated locally),0.04 per call) 
  Calls: Com_EB_HandleRxSignalGroups.isra.0/353 (inlined) (1073741824 (estimated locally),1.00 per call) Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 (inlined) (1073741824 (estimated locally),1.00 per call) Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 (inlined) (1073741824 (estimated locally),1.00 per call) Com_EB_HandleRxSignalsWithBuffer.isra.0/366 (inlined) (1073741824 (estimated locally),1.00 per call) Com_EB_HandlePduRxDM/149 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_EB_HandleRxSignalsWithBuffer.isra.0/366 (Com_EB_HandleRxSignalsWithBuffer.isra.0) @07c77380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_CbkRxAck_Array/313 (read)
  Referring: 
  Function Com_EB_HandleRxSignalsWithBuffer.isra.0/366 is inline copy in Com_EB_NotifyReceivers.isra.0/367
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_NotifyReceivers.isra.0/367 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_EB_SetBuffer/13 (60501637 (estimated locally),0.06 per call) Com_EB_CalculateFilter/12 (1758359619 (estimated locally),1.64 per call) Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (8687547529 (estimated locally),8.09 per call) 
   Indirect call(420930411 (estimated locally),0.39 per call) 
Com_EB_CalculateGroupSignalTM.isra.0/364 (Com_EB_CalculateGroupSignalTM.isra.0) @07437380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741823 (estimated locally) body local optimize_size
  Called by: Com_EB_Write_SignalExt/200 (217705708 (estimated locally),0.20 per call) Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 (955630223 (estimated locally),8.09 per call) 
  Calls: TS_AtomicClearBit_8/307 (708669605 (estimated locally),0.66 per call) TS_AtomicSetBit_8/308 (365072221 (estimated locally),0.34 per call) TS_AtomicSetBit_8/308 (177167401 (estimated locally),0.17 per call) TS_AtomicSetBit_8/308 (88583700 (estimated locally),0.08 per call) 
Com_EB_CalculateFilter_Bool.isra.0/363 (Com_EB_CalculateFilter_Bool.isra.0) @07c60d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_CalculateFilter_Bool.isra.0/363 is inline copy in Com_EB_CalculateFilter/12
  Availability: local
  Function flags: count:107374182 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter/12 (inlined) (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterBoolean/217 (107374182 (estimated locally),0.10 per call) 
Com_CopyRxSignalGroupArray_Array.part.0/362 (Com_CopyRxSignalGroupArray_Array.part.0) @07c600e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_CopyRxSignalGroupArray_Array.part.0/362 is inline copy in Com_CopyRxSignalGroupArray_Array/269
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_CopyRxSignalGroupArray_Array/269 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: Com_CopyRxSignalGroupArray/271 (536870912 (estimated locally),0.50 per call) 
Com_CopyRxSignalGroupArray_Shadow.part.0/361 (Com_CopyRxSignalGroupArray_Shadow.part.0) @07c52d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_CopyRxSignalGroupArray_Shadow.part.0/361 is inline copy in Com_CopyRxSignalGroupArray_Shadow/270
  Availability: local
  Function flags: count:365072224 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_CopyRxSignalGroupArray_Shadow/270 (inlined) (365072224 (estimated locally),0.34 per call) 
  Calls: Det_ASR40_ReportError/305 (365072224 (estimated locally),0.34 per call) 
Com_CopyRxSignalGroupArray.part.0/360 (Com_CopyRxSignalGroupArray.part.0) @07c52e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_CopyRxSignalGroupArray.part.0/360 is inline copy in Com_CopyRxSignalGroupArray/271
  Availability: local
  Function flags: count:365072224 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_CopyRxSignalGroupArray/271 (inlined) (365072224 (estimated locally),0.34 per call) 
  Calls: TS_MemCpy32/306 (365072224 (estimated locally),0.34 per call) 
Com_EB_InitSGBuffer.isra.0/359 (Com_EB_InitSGBuffer.isra.0) @07c528c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  previous sharing asm name: 385
  References: Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_InitSGBuffer.isra.0/359 is inline copy in Com_ComXf_TxPrepareBuffer/286
  Availability: local
  Function flags: count:152127742 (estimated locally) body local optimize_size
  Called by: Com_ComXf_TxPrepareBuffer/286 (inlined) (152127742 (estimated locally),0.14 per call) 
  Calls: TS_MemCpy32/306 (152127742 (estimated locally),0.14 per call) 
Com_GetTxSignalGroupCfg.part.0/358 (Com_GetTxSignalGroupCfg.part.0) @07c3ed20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_GetTxSignalGroupCfg.part.0/358 is inline copy in Com_GetTxSignalGroupCfg/282
  Availability: local
  Function flags: count:149726584 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_GetTxSignalGroupCfg/282 (inlined) (149726584 (estimated locally),0.14 per call) 
  Calls: Det_ASR40_ReportError/305 (149726584 (estimated locally),0.14 per call) 
Com_GetTxSignalCfg.part.0/357 (Com_GetTxSignalCfg.part.0) @07c3e700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_GetTxSignalCfg.part.0/357 is inline copy in Com_GetTxSignalCfg/281
  Availability: local
  Function flags: count:149726584 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_GetTxSignalCfg/281 (inlined) (149726584 (estimated locally),0.14 per call) 
  Calls: Det_ASR40_ReportError/305 (149726584 (estimated locally),0.14 per call) 
Com_GetRxSignalGroupCfg.part.0/356 (Com_GetRxSignalGroupCfg.part.0) @07c3e620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_GetRxSignalGroupCfg.part.0/356 is inline copy in Com_GetRxSignalGroupCfg/266
  Availability: local
  Function flags: count:149726584 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_GetRxSignalGroupCfg/266 (inlined) (149726584 (estimated locally),0.14 per call) 
  Calls: Det_ASR40_ReportError/305 (149726584 (estimated locally),0.14 per call) 
Com_GetRxSignalCfg.part.0/355 (Com_GetRxSignalCfg.part.0) @07c3ec40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_GetRxSignalCfg.part.0/355 is inline copy in Com_GetRxSignalCfg/261
  Availability: local
  Function flags: count:149726584 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_GetRxSignalCfg/261 (inlined) (149726584 (estimated locally),0.14 per call) 
  Calls: Det_ASR40_ReportError/305 (149726584 (estimated locally),0.14 per call) 
Com_EB_CheckMdtforPdu.isra.0/354 (Com_EB_CheckMdtforPdu.isra.0) @07c3e0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)
  Referring: 
  Function Com_EB_CheckMdtforPdu.isra.0/354 is inline copy in Com_MainFunctionTx/254
  Availability: local
  Function flags: count:315357974 (estimated locally) body local optimize_size
  Called by: Com_EB_MainFunctionTx_hlp/253 (inlined) (315357974 (estimated locally),0.91 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (315357974 (estimated locally),0.91 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (315357974 (estimated locally),0.91 per call) 
Com_EB_HandleRxSignalGroups.isra.0/353 (Com_EB_HandleRxSignalGroups.isra.0) @07c13540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_CbkRxAck_Array/313 (read)
  Referring: 
  Function Com_EB_HandleRxSignalGroups.isra.0/353 is inline copy in Com_EB_NotifyReceivers.isra.0/367
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_NotifyReceivers.isra.0/367 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 (inlined) (8687547529 (estimated locally),8.09 per call) 
   Indirect call(1949485665 (estimated locally),1.82 per call) 
Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 (Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0) @07c13d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 is inline copy in Com_EB_NotifyReceivers.isra.0/367
  Availability: local
  Function flags: count:8687547529 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleRxSignalGroups.isra.0/353 (inlined) (8687547529 (estimated locally),8.09 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (716722677 (estimated locally),0.67 per call) Com_EB_RxDMSignalGroupQueue.isra.0/329 (158467383 (estimated locally),0.15 per call) Com_EB_RxDMSignalGroupQueue.isra.0/329 (236518483 (estimated locally),0.22 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (716722668 (estimated locally),0.67 per call) 
Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 (Com_EB_HandleRxSignalsDMUBOnly.isra.0) @074062a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 is inline copy in Com_EB_NotifyReceivers.isra.0/367
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_NotifyReceivers.isra.0/367 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop/380 (inlined) (8687547529 (estimated locally),8.09 per call) 
Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 (Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0) @074061c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_CbkRxAck_Array/313 (read)
  Referring: 
  Function Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 is inline copy in Com_EB_NotifyReceivers.isra.0/367
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_NotifyReceivers.isra.0/367 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (8687547529 (estimated locally),8.09 per call) 
   Indirect call(2953766161 (estimated locally),2.75 per call) 
Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0/347 (Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0) @07bf8460
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (Com_EB_CheckRxSignalUpdateBitAndDM.isra.0) @07361ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741823 (estimated locally) body local optimize_size
  Called by: Com_EB_CheckRxSignal_Receive_UpdateBitAndDM.isra.0.constprop/380 (8687547529 (estimated locally),8.09 per call) Com_EB_HandleRxSignalsWithBuffer.isra.0/366 (8687547529 (estimated locally),8.09 per call) Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 (8687547529 (estimated locally),8.09 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (58908161 (estimated locally),0.05 per call) Com_EB_RxDMSignalQueue.isra.0/330 (29675540 (estimated locally),0.03 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (29675540 (estimated locally),0.03 per call) Com_EB_RxDMSignalQueue.isra.0/330 (29232621 (estimated locally),0.03 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (88583700 (estimated locally),0.08 per call) 
Com_EB_MdtQueue.isra.0/345 (Com_EB_MdtQueue.isra.0) @07343700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HlpTxConfirmation/291 (118702159 (estimated locally),0.11 per call) Com_EB_HandleMDT/181 (167807293 (estimated locally),0.16 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_TxDM_TMNone.part.0/344 (Com_EB_TxDM_TMNone.part.0) @07bf8380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_TxDM_TMNone.part.0/344 is inline copy in Com_EB_TxDM_TMNone/195
  Availability: local
  Function flags: count:177167400 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_TxDM_TMNone/195 (inlined) (177167400 (estimated locally),0.16 per call) 
  Calls: Com_EB_TxDMQueue/194 (177167400 (estimated locally),0.16 per call) 
Com_EB_FilterSint64.part.0/342 (Com_EB_FilterSint64.part.0) @07bd40e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  previous sharing asm name: 389
  References: 
  Referring: 
  Function Com_EB_FilterSint64.part.0/342 is inline copy in Com_EB_FilterUint64/224
  Availability: local
  Function flags: count:365072224 (estimated locally) first_run:1 body local icf_merged split_part optimize_size
  Called by: Com_EB_FilterUint64/224 (inlined) (365072224 (estimated locally),0.34 per call) 
  Calls: Com_EB_FilterOneEveryN/216 (365072224 (estimated locally),0.34 per call) 
Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 (Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0) @07bd4380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 is inline copy in Com_EB_Write_64_SX_EL_DUB_DOC_E1/101
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_DOC_E1/101 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 (536870912 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 (Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0) @07bbc2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 is inline copy in Com_EB_Write_64_SX_EL_DUB_DOC_E2/107
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_DOC_E2/107 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 (536870912 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 (Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0) @07bbc1c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 is inline copy in Com_EB_Write_64_SX_EL_DUB_EOC_E1/112
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_EOC_E1/112 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 (536870912 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 (Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0) @07ba8c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 is inline copy in Com_EB_Write_64_SX_EL_DUB_EOC_E2/118
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_EOC_E2/118 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 (536870912 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 (Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0) @07b79c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 is inline copy in Com_EB_Write_64_SX_EL_EUB_DOC_E1/123
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_DOC_E1/123 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 (536870912 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 (Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0) @07b8ad20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 is inline copy in Com_EB_Write_64_SX_EL_EUB_DOC_E2/129
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_DOC_E2/129 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 (536870912 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 (Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0) @07b79a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 is inline copy in Com_EB_Write_64_SX_EL_EUB_EOC_E1/134
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_EOC_E1/134 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 (536870912 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 (Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0) @07b79540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 is inline copy in Com_EB_Write_64_SX_EL_EUB_EOC_E2/140
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_EOC_E2/140 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 (536870912 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870912 (estimated locally),0.50 per call) 
Com_ReceiveSignalGroup_Replace.isra.0/333 (Com_ReceiveSignalGroup_Replace.isra.0) @07b4dc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_ReceiveSignalGroup_Replace.isra.0/333 is inline copy in Com_CopyRxSignalGroupArray/271
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_CopyRxSignalGroupArray/271 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Com_EB_Read_SignalExt.part.0/332 (Com_EB_Read_SignalExt.part.0) @07b4d620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_ReadFuncs/18 (read)
  Referring: 
  Function Com_EB_Read_SignalExt.part.0/332 is inline copy in Com_EB_Read_SignalExt/260
  Availability: local
  Function flags: count:362271904 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Read_SignalExt/260 (inlined) (362271904 (estimated locally),0.34 per call) 
  Calls: 
   Indirect call(362271904 (estimated locally),0.34 per call) 
Com_GetSendSignalRetVal.isra.0/331 (Com_GetSendSignalRetVal.isra.0) @07b3fb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_SendDynSignal/279 (258541907 (estimated locally),0.24 per call) Com_SendSignal/278 (606344059 (estimated locally),0.56 per call) Com_EB_RouteSignalHelper/232 (318511554 (estimated locally),2.69 per call) 
  Calls: 
Com_EB_RxDMSignalQueue.isra.0/330 (Com_EB_RxDMSignalQueue.isra.0) @07b3f0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_CheckRxSignalDMTable/242 (217692563 (estimated locally),0.37 per call) Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (29675540 (estimated locally),0.03 per call) Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (29232621 (estimated locally),0.03 per call) Com_EB_EnableSignalBasedDMFlag/170 (473036966 (estimated locally),0.44 per call) 
  Calls: 
Com_EB_RxDMSignalGroupQueue.isra.0/329 (Com_EB_RxDMSignalGroupQueue.isra.0) @07b2b540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_CheckRxSignalGroupDMTable/243 (217692563 (estimated locally),0.37 per call) Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 (158467383 (estimated locally),0.15 per call) Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 (236518483 (estimated locally),0.22 per call) Com_EB_EnableSignalGroupBasedDMFlag/171 (473036966 (estimated locally),0.44 per call) 
  Calls: 
Com_EB_RxDMQueue.isra.0/328 (Com_EB_RxDMQueue.isra.0) @07b2bb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleRxIPdu_EnableRxDM/152 (58465242 (estimated locally),0.05 per call) Com_EB_CheckRxDMTable/241 (102443559 (estimated locally),0.18 per call) Com_EB_HandlePduRxDM/149 (78343425 (estimated locally),0.07 per call) Com_EB_HandlePduRxDM/149 (116930485 (estimated locally),0.11 per call) 
  Calls: 
Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327 (Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0) @07b18c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327 is inline copy in Com_EB_Write_64_SX_DL_EUB_EOC_E2/96
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_DL_EUB_EOC_E2/96 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326 (Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0) @07b18540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326 is inline copy in Com_EB_Write_64_SX_DL_EUB_EOC_E1/90
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_DL_EUB_EOC_E1/90 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325 (Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0) @07b01e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325 is inline copy in Com_EB_Write_64_SX_DL_EUB_DOC_E2/85
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_DL_EUB_DOC_E2/85 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324 (Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0) @07b01000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324 is inline copy in Com_EB_Write_64_SX_DL_EUB_DOC_E1/79
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_DL_EUB_DOC_E1/79 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323 (Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0) @076478c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323 is inline copy in Com_EB_Write_64_SX_DL_DUB_EOC_E2/74
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_DL_DUB_EOC_E2/74 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322 (Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0) @07301e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322 is inline copy in Com_EB_Write_64_SX_DL_DUB_EOC_E1/68
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_DL_DUB_EOC_E1/68 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321 (Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0) @07297a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321 is inline copy in Com_EB_Write_64_SX_DL_DUB_DOC_E2/63
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_DL_DUB_DOC_E2/63 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320 (Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0) @071ff460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320 is inline copy in Com_EB_Write_64_SX_DL_DUB_DOC_E1/57
  Availability: local
  Function flags: count:536870912 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Com_EB_Write_64_SX_DL_DUB_DOC_E1/57 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 (536870912 (estimated locally),0.50 per call) 
SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1/319 (SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1) @07495700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_RxIndication/275 (77814597 (estimated locally),0.07 per call) Com_EB_HlpTxConfirmation/291 (35610647 (estimated locally),0.03 per call) 
  Calls: 
SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1/318 (SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1) @07495620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_RxIndication/275 (77814597 (estimated locally),0.07 per call) Com_EB_HlpTxConfirmation/291 (35610647 (estimated locally),0.03 per call) 
  Calls: 
Com_RxCallouts/317 (Com_RxCallouts) @074a0048
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Com_RxIndication/275 (read)
  Availability: not_available
  Varpool flags: read-only
Com_CbkTxAck_Array/316 (Com_CbkTxAck_Array) @07472240
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Com_EB_TxConfirmations/196 (read)
  Availability: not_available
  Varpool flags: read-only
Com_CbkTxTOut_Array/315 (Com_CbkTxTOut_Array) @074319d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Com_EB_CheckTxDMforPdu/250 (read)
  Availability: not_available
  Varpool flags: read-only
Com_CbkRxTOut_Array/314 (Com_CbkRxTOut_Array) @07411dc8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Com_EB_CheckRxDMTable/241 (read)Com_EB_CheckRxSignalDMTable/242 (read)Com_EB_CheckRxSignalGroupDMTable/243 (read)
  Availability: not_available
  Varpool flags: read-only
Com_CbkRxAck_Array/313 (Com_CbkRxAck_Array) @07404000
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 (read)Com_EB_HandleRxSignalGroups.isra.0/353 (read)Com_EB_HandleRxSignalsWithBuffer.isra.0/366 (read)
  Availability: not_available
  Varpool flags: read-only
Com_CbkTxErr_Array/312 (Com_CbkTxErr_Array) @073a4048
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Com_EB_HandleTxIPdu_Stop/183 (read)
  Availability: not_available
  Varpool flags: read-only
PduR_ComTransmit/311 (PduR_ComTransmit) @07343460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_EB_Send_Pdu/180 (508506948 (estimated locally),0.47 per call) 
  Calls: 
Com_TxCallouts/310 (Com_TxCallouts) @073488b8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Com_EB_Send_Pdu/180 (read)Com_TriggerTransmit/289 (read)
  Availability: not_available
  Varpool flags: read-only
Com_gDataMemPtr/309 (Com_gDataMemPtr) @0730c288
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Com_EB_EnableSignalGroupBasedDMFlag/171 (read)Com_EB_MainFunctionTx_hlp/253 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_SendUponSendApiCall/175 (read)Com_SendSignal/278 (read)Com_EB_HandleTxIPdu_Stop/183 (read)Com_ReceiveSignalGroup_Replace.isra.0/333 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_SetupRxSignalGroup/268 (read)Com_ReceiveSignalGroup_Replace.isra.0/333 (read)Com_EB_FilterOneEveryN/216 (read)Com_EB_FilterUint8/218 (read)Com_EB_FilterUint8/218 (read)Com_EB_FilterUint16/220 (read)Com_EB_FilterUint16/220 (read)Com_EB_FilterUint32/222 (read)Com_EB_FilterUint32/222 (read)Com_EB_FilterSint8/219 (read)Com_EB_FilterSint8/219 (read)Com_EB_RouteSignalHelper_Write.part.0/373 (read)Com_ReceiveSignal/262 (read)Com_MainFunctionRx/244 (read)Com_EB_HandleDeferredTxConfirm/251 (read)Com_EB_RxDMSignalGroupQueue.isra.0/329 (read)Com_EB_Send_Pdu/180 (read)Com_EB_InitSGBuffer.isra.0/359 (read)Com_EB_FilterSint16/221 (read)Com_EB_FilterSint16/221 (read)Com_EB_WriteShadowBuffer.isra.0/368 (read)Com_EB_CheckTMSforPdu/245 (read)Com_TriggerTransmit/289 (read)Com_EB_FilterSint32/223 (read)Com_EB_TxDMQueue/194 (read)Com_EB_RouteSG_2_SG.isra.0/375 (read)Com_CopyRxSignalGroupArray_Shadow/270 (read)Com_GetSendSignalRetVal.isra.0/331 (read)Com_EB_RouteSignalHelper_Write/233 (read)Com_EB_HandleTxConfirmations.part.0/370 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_InitTxIPdu_PduBuffer/184 (read)Com_EB_TxDM_TMNone/195 (read)Com_EB_InitRxIPdu/163 (read)Com_EB_CheckRxSignalDM/257 (read)Com_EB_CheckSendSignalGroup/231 (read)Com_Init/227 (read)Com_EB_CalculateGroupSignalTM.isra.0/364 (read)Com_EB_WriteShadowBuffer.isra.0/368 (read)Com_CopyRxSignalGroupArray/271 (read)Com_EB_WriteShadowBuffer.isra.0/368 (read)Com_Init/227 (read)Com_EB_RouteSignal.isra.0/374 (read)Com_MainFunctionRouteSignals/240 (read)Com_EB_FilterBoolean/217 (read)Com_EB_FilterBoolean/217 (read)Com_EB_TMSwitch/246 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_ReadValue_Uint8Dyn/256 (read)Com_EB_ClearTxUpdateBits/197 (read)Com_EB_ClearTxUpdateBits/197 (read)Com_TriggerIPDUSend/288 (read)Com_EB_MdtQueue.isra.0/345 (read)Com_EB_RxDMQueue.isra.0/328 (read)Com_EB_NTimesSendQueue/177 (read)Com_ResetFilerOneEveryN/14 (read)Com_EB_SendSignalGroup/204 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_CheckNTimesSendforPdu/248 (read)Com_EB_HandleRxIPdu/157 (read)Com_EB_CheckPeriodicSendforPdu/247 (read)Com_EB_HandleTxIPdu_Start/182 (read)Com_EB_SetSendSignalGroup/230 (read)Com_EB_DisableSignalGroupBasedDMFlag/174 (read)Com_EB_HandleRxSignalsWithBuffer.isra.0/366 (read)Com_ReceiveDynSignal/263 (read)Com_EB_CheckRxDMTable/241 (read)Com_EB_ClearTxSGTMSState/185 (read)Com_EB_RouteSignalGroup.isra.0/376 (read)Com_EB_EnableSignalBasedDMFlag/170 (read)Com_EB_FilterSint32/223 (read)Com_EB_PeriodicSendQueue/179 (read)Com_EB_HandlePduRxDM/149 (read)Com_EB_StartIPdu/190 (read)Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 (read)Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (read)Com_RxIndication/275 (read)Com_EB_DisableSignalBasedDMFlag/173 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_HlpTxConfirmation/291 (read)Com_EB_InitTxIPdu_SignalGroups/186 (read)Com_EB_InitStartRxIPdu/164 (read)Com_GetRxIPduBuffer/165 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_WriteDynSignal_ExitArea_0/202 (read)Com_EB_RxDMSignalQueue.isra.0/330 (read)Com_EB_CheckRxSignalGroupDMTable/243 (read)Com_EB_Write_SignalExt/200 (read)Com_EB_CheckRxSignalDM/257 (read)Com_EB_CheckRxSignalDMTable/242 (read)Com_EB_SendSignal_Transmit.part.0/372 (read)Com_EB_CalculateTM/178 (read)Com_EB_CalculateSignalGroupTM/207 (read)Com_EB_RouteGroupSignal/237 (read)Com_EB_RouteSignal.isra.0/374 (read)Com_EB_CheckTxDMforPdu/250 (read)Com_EB_CheckMdtforPdu.isra.0/354 (read)Com_SwitchIpduTxMode/287 (read)Com_EB_InitTxIPdu_HandleFlags/187 (read)Com_EB_WriteShadowBuffer.isra.0/368 (read)Com_EB_SetBuffer/13 (read)Com_EB_InitSGBuffer.isra.0/385 (read)
  Availability: not_available
  Varpool flags: read-only
TS_AtomicSetBit_8/308 (TS_AtomicSetBit_8) @071e6540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_TriggerIPDUSend/288 (241001352 (estimated locally),0.22 per call) Com_RxIndication/275 (38035775 (estimated locally),0.04 per call) Com_EB_Handle_Send_Pdu/252 (31914227 (estimated locally),0.09 per call) Com_EB_StartIPdu/190 (357842363 (estimated locally),0.33 per call) Com_EB_Write_SignalExt/200 (51091931 (estimated locally),0.05 per call) Com_EB_Request_Send_Pdu/176 (722095673 (estimated locally),0.67 per call) Com_EB_HandleTxConfirmations.part.0/370 (536870912 (estimated locally),0.50 per call) Com_EB_HandleRxConfirm.isra.0/369 (38907299 (estimated locally),0.04 per call) Com_EB_TMSwitch/246 (8847560 (estimated locally),0.03 per call) Com_EB_CheckRxSignalGroupDMTable/243 (217692563 (estimated locally),0.37 per call) Com_EB_CheckRxSignalDMTable/242 (217692563 (estimated locally),0.37 per call) Com_EB_WriteShadowBuffer.isra.0/368 (202899582 (estimated locally),0.33 per call) Com_EB_InitStartRxIPdu/164 (193419554 (estimated locally),1.10 per call) Com_EB_InitTxIPdu_HandleFlags/187 (354334802 (estimated locally),0.33 per call) Com_EB_ClearTxSGTMSState/185 (12402768385 (estimated locally),11.55 per call) Com_EB_HandleRxIPdu_EnableRxDM/152 (1073741824 (estimated locally),1.00 per call) Com_EB_HandleRxIPdu_Start/151 (6626061 (estimated locally),0.19 per call) Com_EB_SetBuffer/13 (45634028 (estimated locally),0.04 per call) Com_EB_CalculateGroupSignalTM.isra.0/364 (365072221 (estimated locally),0.34 per call) Com_EB_CalculateGroupSignalTM.isra.0/364 (177167401 (estimated locally),0.17 per call) Com_EB_CalculateGroupSignalTM.isra.0/364 (88583700 (estimated locally),0.08 per call) Com_EB_FilterBoolean/217 (72810637 (estimated locally),0.07 per call) Com_EB_Write_BO_EL_DUB_DOC/144 (536870913 (estimated locally),0.50 per call) 
  Calls: 
TS_AtomicClearBit_8/307 (TS_AtomicClearBit_8) @071e6460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_MainFunctionRx/244 (315357974 (estimated locally),0.54 per call) Com_MainFunctionRouteSignals/240 (315357974 (estimated locally),0.91 per call) Com_EB_HlpTxConfirmation/291 (162046432 (estimated locally),0.15 per call) Com_EB_Handle_Send_Pdu/252 (87953339 (estimated locally),0.25 per call) Com_EB_Write_SignalExt/200 (99178454 (estimated locally),0.09 per call) Com_EB_CheckTMSforPdu/245 (80416283 (estimated locally),0.23 per call) Com_EB_TMSwitch/246 (13405394 (estimated locally),0.04 per call) Com_EB_TMSwitch/246 (13405394 (estimated locally),0.04 per call) Com_EB_TMSwitch/246 (26810789 (estimated locally),0.08 per call) Com_EB_TMSwitch/246 (26810789 (estimated locally),0.08 per call) Com_EB_TMSwitch/246 (13405394 (estimated locally),0.04 per call) Com_EB_HandleRxIPdu/157 (9841649 (estimated locally),0.28 per call) Com_EB_InitRxIPdu/163 (524845004 (estimated locally),0.49 per call) Com_EB_SetBuffer/13 (88583701 (estimated locally),0.08 per call) Com_EB_CalculateGroupSignalTM.isra.0/364 (708669605 (estimated locally),0.66 per call) Com_EB_FilterBoolean/217 (141338295 (estimated locally),0.13 per call) Com_EB_Write_BO_EL_DUB_DOC/144 (536870913 (estimated locally),0.50 per call) Com_EB_HandleDeferredTxConfirm/251 (157678987 (estimated locally),0.45 per call) Com_EB_HandleTxIPdu_Stop/183 (370851717 (estimated locally),0.35 per call) Com_EB_HandleTxIPdu_Stop/183 (370851717 (estimated locally),0.35 per call) Com_EB_HandleTxIPdu_Stop/183 (370851717 (estimated locally),0.35 per call) Com_EB_HandleTxIPdu_Stop/183 (1123793074 (estimated locally),1.05 per call) Com_EB_HandleTxIPdu_Stop/183 (1123793074 (estimated locally),1.05 per call) Com_EB_HandleRxIPdu_DisableRxDM/153 (1073741824 (estimated locally),1.00 per call) Com_EB_HandleRxIPdu_DisableRxDM/153 (1073741824 (estimated locally),1.00 per call) Com_EB_DisableSignalGroupBasedDMFlag/174 (63828454 (estimated locally),0.54 per call) Com_EB_DisableSignalGroupBasedDMFlag/174 (315357974 (estimated locally),2.67 per call) Com_EB_DisableSignalBasedDMFlag/173 (63828454 (estimated locally),0.54 per call) Com_EB_DisableSignalBasedDMFlag/173 (315357974 (estimated locally),2.67 per call) Com_EB_ClearTxUpdateBits/197 (315357971 (estimated locally),2.67 per call) Com_EB_ClearTxUpdateBits/197 (315357973 (estimated locally),2.67 per call) 
  Calls: 
TS_MemCpy32/306 (TS_MemCpy32) @071a3540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_EB_InitSGBuffer.isra.0/385 (4246473223 (estimated locally),3.95 per call) Com_TriggerTransmit/289 (108444613 (estimated locally),0.10 per call) Com_RxIndication/275 (77814597 (estimated locally),0.07 per call) Com_EB_WriteShadowBuffer.isra.0/368 (24932605 (estimated locally),0.04 per call) Com_EB_InitTxIPdu_HandleFlags/187 (354334802 (estimated locally),0.33 per call) Com_EB_ClearTxSGTMSState/185 (4645231680 (estimated locally),4.33 per call) Com_EB_InitRxIPdu/163 (1073741824 (estimated locally),1.00 per call) Com_EB_ReadValue_Uint8Dyn/256 (55468236 (estimated locally),0.05 per call) Com_EB_ReadValue_Uint8Dyn/256 (58010152 (estimated locally),0.05 per call) Com_CopyRxSignalGroupArray/271 (708669605 (estimated locally),0.66 per call) Com_CopyRxSignalGroupArray.part.0/360 (365072224 (estimated locally),0.34 per call) Com_EB_InitSGBuffer.isra.0/359 (152127742 (estimated locally),0.14 per call) Com_EB_InitTxIPdu_PduBuffer/184 (1073741824 (estimated locally),1.00 per call) Com_EB_Read_AY_DL_E3/39 (1073741824 (estimated locally),1.00 per call) Com_EB_Read_AY_EL_E3/40 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Det_ASR40_ReportError/305 (Det_ASR40_ReportError) @071a30e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_GetVersionInfo/295 (187153200 (estimated locally),0.17 per call) Com_TxConfirmation/292 (359703511 (estimated locally),0.33 per call) Com_TxConfirmation/292 (354334802 (estimated locally),0.33 per call) Com_TriggerTransmit/289 (161857632 (estimated locally),0.15 per call) Com_TriggerTransmit/289 (103536706 (estimated locally),0.10 per call) Com_TriggerTransmit/289 (292574246 (estimated locally),0.27 per call) Com_TriggerTransmit/289 (187153200 (estimated locally),0.17 per call) Com_TriggerIPDUSend/288 (237404317 (estimated locally),0.22 per call) Com_TriggerIPDUSend/288 (354334802 (estimated locally),0.33 per call) Com_SwitchIpduTxMode/287 (284381595 (estimated locally),0.26 per call) Com_SwitchIpduTxMode/287 (237404317 (estimated locally),0.22 per call) Com_SwitchIpduTxMode/287 (354334802 (estimated locally),0.33 per call) Com_SendDynSignal/279 (258541907 (estimated locally),0.24 per call) Com_SendDynSignal/279 (266257823 (estimated locally),0.25 per call) Com_SendDynSignal/279 (89073595 (estimated locally),0.08 per call) Com_SendSignal/278 (82839914 (estimated locally),0.08 per call) Com_SendSignal/278 (94157665 (estimated locally),0.09 per call) Com_SendSignal/278 (89073595 (estimated locally),0.08 per call) Com_RxIndication/275 (161857632 (estimated locally),0.15 per call) Com_RxIndication/275 (103536706 (estimated locally),0.10 per call) Com_RxIndication/275 (125392644 (estimated locally),0.12 per call) Com_RxIndication/275 (354334802 (estimated locally),0.33 per call) Com_ReceiveSignalGroupArray/273 (180771147 (estimated locally),0.17 per call) Com_ReceiveSignalGroupArray/273 (109629040 (estimated locally),0.10 per call) Com_ReceiveDynSignal/263 (359488551 (estimated locally),0.33 per call) Com_ReceiveDynSignal/263 (79979181 (estimated locally),0.07 per call) Com_ReceiveDynSignal/263 (89073595 (estimated locally),0.08 per call) Com_ReceiveSignal/262 (100188032 (estimated locally),0.09 per call) Com_ReceiveSignal/262 (125611876 (estimated locally),0.12 per call) Com_ReceiveSignal/262 (131007240 (estimated locally),0.12 per call) Com_SetIpduGroup/229 (196024745 (estimated locally),0.18 per call) Com_SetIpduGroup/229 (125392644 (estimated locally),0.12 per call) Com_SetIpduGroup/229 (354334802 (estimated locally),0.33 per call) Com_ClearIpduGroupVector/228 (45332009 (estimated locally),0.12 per call) Com_ClearIpduGroupVector/228 (128099288 (estimated locally),0.33 per call) Com_Init/227 (58174369 (estimated locally),0.33 per call) Com_GetConfigurationId/226 (225056286 (estimated locally),0.21 per call) Com_ReceptionDMControl/215 (215822106 (estimated locally),0.20 per call) Com_ReceptionDMControl/215 (354334802 (estimated locally),0.33 per call) Com_IpduGroupControl/214 (215822106 (estimated locally),0.20 per call) Com_IpduGroupControl/214 (354334802 (estimated locally),0.33 per call) Com_GetRxIPduBuffer/165 (196024745 (estimated locally),0.18 per call) Com_GetRxIPduBuffer/165 (125392644 (estimated locally),0.12 per call) Com_GetRxIPduBuffer/165 (354334802 (estimated locally),0.33 per call) Com_EB_SendSignalGroup.part.0/378 (233216728 (estimated locally),0.22 per call) Com_EB_SendSignalGroupArray_DETCheck/205 (263477726 (estimated locally),0.25 per call) Com_EB_SendSignalGroupArray_DETCheck.part.0/377 (58618648 (estimated locally),0.05 per call) Com_CopyRxSignalGroupArray_Array/269 (536870913 (estimated locally),0.50 per call) Com_CopyRxSignalGroupArray_Shadow.part.0/361 (365072224 (estimated locally),0.34 per call) Com_GetTxSignalGroupCfg/282 (179851756 (estimated locally),0.17 per call) Com_GetTxSignalGroupCfg.part.0/358 (149726584 (estimated locally),0.14 per call) Com_GetTxSignalCfg/281 (179851756 (estimated locally),0.17 per call) Com_GetTxSignalCfg.part.0/357 (149726584 (estimated locally),0.14 per call) Com_GetRxSignalGroupCfg/266 (179851756 (estimated locally),0.17 per call) Com_GetRxSignalGroupCfg.part.0/356 (149726584 (estimated locally),0.14 per call) Com_GetRxSignalCfg/261 (179851756 (estimated locally),0.17 per call) Com_GetRxSignalCfg.part.0/355 (149726584 (estimated locally),0.14 per call) Com_EB_Write_DET/146 (1073741824 (estimated locally),1.00 per call) Com_EB_Read_DET/51 (1073741824 (estimated locally),1.00 per call) Com_EB_Read_ZS/52 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0) @07187c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_TriggerTransmit/289 (108444613 (estimated locally),0.10 per call) Com_SwitchIpduTxMode/287 (197621109 (estimated locally),0.18 per call) Com_MainFunctionRx/244 (118111602 (estimated locally),0.20 per call) Com_EB_StartIPdu/190 (1073741824 (estimated locally),1.00 per call) Com_EB_CalculateSignalGroupTM/207 (236223201 (estimated locally),1.00 per call) Com_EB_WriteDynSignal_ExitArea_0/202 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_SignalExt/200 (150270385 (estimated locally),0.14 per call) Com_EB_CheckRxSignalGroupDMTable/243 (422579680 (estimated locally),0.72 per call) Com_EB_CheckRxSignalGroupDMTable/243 (217692563 (estimated locally),0.37 per call) Com_EB_CheckRxSignalGroupDMTable/243 (315357970 (estimated locally),0.54 per call) Com_EB_CheckRxSignalDMTable/242 (422579680 (estimated locally),0.72 per call) Com_EB_CheckRxSignalDMTable/242 (217692563 (estimated locally),0.37 per call) Com_EB_CheckRxSignalDMTable/242 (315357970 (estimated locally),0.54 per call) Com_EB_WriteShadowBuffer.isra.0/368 (614847219 (estimated locally),1.00 per call) Com_EB_HandleRxIPdu_EnableRxDM/152 (177167401 (estimated locally),0.17 per call) Com_EB_ReadValue_Uint8Dyn/256 (168085565 (estimated locally),0.16 per call) Com_CopyRxSignalGroupArray/271 (708669605 (estimated locally),0.66 per call) Com_EB_Read_AY_EL_E3/40 (1073741824 (estimated locally),1.00 per call) Com_EB_CheckPeriodicSendforPdu/247 (104064594 (estimated locally),0.30 per call) Com_EB_CheckNTimesSendforPdu/248 (104064594 (estimated locally),0.30 per call) Com_EB_CheckTxDMforPdu/250 (35383165 (estimated locally),0.10 per call) Com_EB_CheckTxDMforPdu/250 (68684967 (estimated locally),0.20 per call) Com_EB_CheckMdtforPdu.isra.0/354 (315357974 (estimated locally),0.91 per call) Com_EB_CheckRxDMTable/241 (537828684 (estimated locally),0.92 per call) Com_EB_CheckRxDMTable/241 (102443559 (estimated locally),0.18 per call) Com_EB_CheckRxDMTable/241 (315357970 (estimated locally),0.54 per call) Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 (716722677 (estimated locally),0.67 per call) Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (58908161 (estimated locally),0.05 per call) Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (29675540 (estimated locally),0.03 per call) Com_EB_HandlePduRxDM/149 (354334803 (estimated locally),0.33 per call) Com_EB_PeriodicSendQueue/179 (1073741824 (estimated locally),1.00 per call) Com_EB_EnableSignalGroupBasedDMFlag/171 (1433445344 (estimated locally),1.34 per call) Com_EB_EnableSignalBasedDMFlag/170 (1433445344 (estimated locally),1.34 per call) Com_EB_NTimesSendQueue/177 (1073741824 (estimated locally),1.00 per call) Com_EB_MdtQueue.isra.0/345 (1073741824 (estimated locally),1.00 per call) Com_EB_TxDMQueue/194 (1073741824 (estimated locally),1.00 per call) Com_EB_FilterOneEveryN/216 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_DUB_DOC_E1/98 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_DUB_DOC_E1/99 (118111601 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_DUB_DOC_E1/102 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S1_EL_DUB_DOC_E3/103 (118111601 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_DUB_DOC_E2/104 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_DUB_DOC_E2/105 (118111601 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_DUB_DOC_E2/108 (118111601 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_DUB_EOC_E1/109 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_DUB_EOC_E1/110 (118111601 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_DUB_EOC_E1/113 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S1_EL_DUB_EOC_E3/114 (118111601 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_DUB_EOC_E2/115 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_DUB_EOC_E2/116 (118111601 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_DUB_EOC_E2/119 (118111601 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_EUB_DOC_E1/120 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_EUB_DOC_E1/121 (118111601 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_EUB_DOC_E1/124 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S1_EL_EUB_DOC_E3/125 (118111601 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_EUB_DOC_E2/126 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_EUB_DOC_E2/127 (118111601 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_EUB_DOC_E2/130 (118111601 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_EUB_EOC_E1/131 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_EUB_EOC_E1/132 (118111601 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_EUB_EOC_E1/135 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S1_EL_EUB_EOC_E3/136 (118111601 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_EUB_EOC_E2/137 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_EUB_EOC_E2/138 (118111601 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 (118111601 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_EUB_EOC_E2/141 (118111601 (estimated locally),1.00 per call) Com_EB_Read_08_EL_E1/29 (233860969 (estimated locally),0.22 per call) Com_EB_Read_16_EL_E1/30 (178956971 (estimated locally),1.00 per call) Com_EB_Read_64_EL_E1/32 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_EL_E1/31 (118111601 (estimated locally),1.00 per call) Com_EB_Read_AY_EL_E1/33 (118111601 (estimated locally),1.00 per call) Com_EB_Read_08_EL_E2/34 (233860969 (estimated locally),0.22 per call) Com_EB_Read_16_EL_E2/35 (178956971 (estimated locally),1.00 per call) Com_EB_Read_64_EL_E2/37 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_EL_E2/36 (118111601 (estimated locally),1.00 per call) Com_EB_Read_AY_EL_E2/38 (118111601 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0) @07187b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_TriggerTransmit/289 (108444613 (estimated locally),0.10 per call) Com_SwitchIpduTxMode/287 (197621109 (estimated locally),0.18 per call) Com_SendDynSignal/279 (258541907 (estimated locally),0.24 per call) Com_MainFunctionRx/244 (118111602 (estimated locally),0.20 per call) Com_EB_StartIPdu/190 (1073741824 (estimated locally),1.00 per call) Com_EB_CalculateSignalGroupTM/207 (236223200 (estimated locally),1.00 per call) Com_EB_RouteSignalHelper_Write.part.0/373 (217325344 (estimated locally),0.20 per call) Com_EB_Write_SignalExt/200 (150270385 (estimated locally),0.14 per call) Com_EB_CheckRxSignalGroupDMTable/243 (955630215 (estimated locally),1.64 per call) Com_EB_CheckRxSignalDMTable/242 (955630215 (estimated locally),1.64 per call) Com_EB_WriteShadowBuffer.isra.0/368 (614847218 (estimated locally),1.00 per call) Com_EB_HandleRxIPdu_EnableRxDM/152 (177167401 (estimated locally),0.17 per call) Com_EB_ReadValue_Uint8Dyn/256 (168085565 (estimated locally),0.16 per call) Com_CopyRxSignalGroupArray/271 (708669605 (estimated locally),0.66 per call) Com_EB_Read_AY_EL_E3/40 (1073741824 (estimated locally),1.00 per call) Com_EB_CheckPeriodicSendforPdu/247 (104068132 (estimated locally),0.30 per call) Com_EB_CheckNTimesSendforPdu/248 (104068132 (estimated locally),0.30 per call) Com_EB_CheckTxDMforPdu/250 (104068132 (estimated locally),0.30 per call) Com_EB_CheckMdtforPdu.isra.0/354 (315357974 (estimated locally),0.91 per call) Com_EB_CheckRxDMTable/241 (955630215 (estimated locally),1.64 per call) Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 (716722668 (estimated locally),0.67 per call) Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (88583700 (estimated locally),0.08 per call) Com_EB_HandlePduRxDM/149 (354334802 (estimated locally),0.33 per call) Com_EB_PeriodicSendQueue/179 (1073741824 (estimated locally),1.00 per call) Com_EB_EnableSignalGroupBasedDMFlag/171 (1433445344 (estimated locally),1.34 per call) Com_EB_EnableSignalBasedDMFlag/170 (1433445344 (estimated locally),1.34 per call) Com_EB_NTimesSendQueue/177 (1073741824 (estimated locally),1.00 per call) Com_EB_MdtQueue.isra.0/345 (1073741824 (estimated locally),1.00 per call) Com_EB_TxDMQueue/194 (1073741824 (estimated locally),1.00 per call) Com_EB_FilterOneEveryN/216 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_DUB_DOC_E1/98 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_DUB_DOC_E1/99 (118111600 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 (118111600 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_DUB_DOC_E1/102 (118111600 (estimated locally),1.00 per call) Com_EB_Write_AY_S1_EL_DUB_DOC_E3/103 (118111600 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_DUB_DOC_E2/104 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_DUB_DOC_E2/105 (118111600 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 (118111600 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_DUB_DOC_E2/108 (118111600 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_DUB_EOC_E1/109 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_DUB_EOC_E1/110 (118111602 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 (118111602 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_DUB_EOC_E1/113 (118111600 (estimated locally),1.00 per call) Com_EB_Write_AY_S1_EL_DUB_EOC_E3/114 (118111602 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_DUB_EOC_E2/115 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_DUB_EOC_E2/116 (118111602 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 (118111602 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_DUB_EOC_E2/119 (118111600 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_EUB_DOC_E1/120 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_EUB_DOC_E1/121 (118111600 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 (118111600 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_EUB_DOC_E1/124 (118111600 (estimated locally),1.00 per call) Com_EB_Write_AY_S1_EL_EUB_DOC_E3/125 (118111600 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_EUB_DOC_E2/126 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_EUB_DOC_E2/127 (118111600 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 (118111600 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_EUB_DOC_E2/130 (118111600 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_EUB_EOC_E1/131 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_EUB_EOC_E1/132 (118111602 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 (118111602 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_EUB_EOC_E1/135 (118111600 (estimated locally),1.00 per call) Com_EB_Write_AY_S1_EL_EUB_EOC_E3/136 (118111602 (estimated locally),1.00 per call) Com_EB_Write_08_SX_EL_EUB_EOC_E2/137 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_16_SX_EL_EUB_EOC_E2/138 (118111602 (estimated locally),1.00 per call) Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 (536870912 (estimated locally),0.50 per call) Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 (118111602 (estimated locally),1.00 per call) Com_EB_Write_AY_S0_EL_EUB_EOC_E2/141 (118111600 (estimated locally),1.00 per call) Com_EB_Read_08_EL_E1/29 (233860969 (estimated locally),0.22 per call) Com_EB_Read_16_EL_E1/30 (178956970 (estimated locally),1.00 per call) Com_EB_Read_64_EL_E1/32 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_EL_E1/31 (118111600 (estimated locally),1.00 per call) Com_EB_Read_AY_EL_E1/33 (118111600 (estimated locally),1.00 per call) Com_EB_Read_08_EL_E2/34 (233860969 (estimated locally),0.22 per call) Com_EB_Read_16_EL_E2/35 (178956970 (estimated locally),1.00 per call) Com_EB_Read_64_EL_E2/37 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_EL_E2/36 (118111600 (estimated locally),1.00 per call) Com_EB_Read_AY_EL_E2/38 (118111600 (estimated locally),1.00 per call) 
  Calls: 
Com_LcfgSignature/302 (Com_LcfgSignature) @0719c240
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Com_IsValidConfig.part.0/379 (read)
  Availability: not_available
  Varpool flags: read-only
TS_PlatformSigIsValid/301 (TS_PlatformSigIsValid) @071878c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Com_IsValidConfig/17 (574129754 (estimated locally),0.53 per call) 
  Calls: 
Com_StartOfReception/300 (Com_StartOfReception) @07187540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_CopyRxData/299 (Com_CopyRxData) @07187380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_CopyTxData/298 (Com_CopyTxData) @071871c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_GetStatus/297 (Com_GetStatus) @07187000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_DeInit/296 (Com_DeInit) @0717de00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_GetVersionInfo/295 (Com_GetVersionInfo) @0717dc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/305 (187153200 (estimated locally),0.17 per call) 
Com_UpdateShadowSignal/294 (Com_UpdateShadowSignal) @0717da80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_SendSignal/278 (1073741824 (estimated locally),1.00 per call) 
Com_TpTxConfirmation/293 (Com_TpTxConfirmation) @0717d8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: Com_TpRxIndication/381 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_TxConfirmation/292 (Com_TxConfirmation) @0717d700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_HlpTxConfirmation/291 (inlined) (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/305 (359703511 (estimated locally),0.33 per call) Det_ASR40_ReportError/305 (354334802 (estimated locally),0.33 per call) 
Com_EB_HlpTxConfirmation/291 (Com_EB_HlpTxConfirmation) @0717d540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_HlpTxConfirmation/291 is inline copy in Com_TxConfirmation/292
  Availability: local
  Function flags: count:359703511 (estimated locally) body local optimize_size
  Called by: Com_TxConfirmation/292 (inlined) (359703511 (estimated locally),0.33 per call) 
  Calls: Com_EB_HandleTxConfirmations/290 (71940702 (estimated locally),0.07 per call) Com_EB_TxDM_TMNone/195 (71940702 (estimated locally),0.07 per call) Com_EB_HandleTxConfirmations/290 (162046432 (estimated locally),0.15 per call) TS_AtomicClearBit_8/307 (162046432 (estimated locally),0.15 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1/319 (35610647 (estimated locally),0.03 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1/318 (35610647 (estimated locally),0.03 per call) Com_EB_MdtQueue.isra.0/345 (118702159 (estimated locally),0.11 per call) Com_EB_ClearTxUpdateBits/197 (72803991 (estimated locally),0.07 per call) 
Com_EB_HandleTxConfirmations/290 (Com_EB_HandleTxConfirmations) @07170ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HlpTxConfirmation/291 (71940702 (estimated locally),0.07 per call) Com_EB_HlpTxConfirmation/291 (162046432 (estimated locally),0.15 per call) 
  Calls: Com_EB_HandleTxConfirmations.part.0/370 (inlined) (536870912 (estimated locally),0.50 per call) Com_EB_TxConfirmations/196 (536870913 (estimated locally),0.50 per call) 
Com_TriggerTransmit/289 (Com_TriggerTransmit) @07170c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_TxCallouts/310 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_ClearTxUpdateBits/197 (21949190 (estimated locally),0.02 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (108444613 (estimated locally),0.10 per call) TS_MemCpy32/306 (108444613 (estimated locally),0.10 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (108444613 (estimated locally),0.10 per call) Det_ASR40_ReportError/305 (161857632 (estimated locally),0.15 per call) Det_ASR40_ReportError/305 (103536706 (estimated locally),0.10 per call) Det_ASR40_ReportError/305 (292574246 (estimated locally),0.27 per call) Det_ASR40_ReportError/305 (187153200 (estimated locally),0.17 per call) 
   Indirect call(216889226 (estimated locally),0.20 per call) 
Com_TriggerIPDUSend/288 (Com_TriggerIPDUSend) @07170700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Send_Pdu/180 (241001352 (estimated locally),0.22 per call) TS_AtomicSetBit_8/308 (241001352 (estimated locally),0.22 per call) Det_ASR40_ReportError/305 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/305 (354334802 (estimated locally),0.33 per call) 
Com_SwitchIpduTxMode/287 (Com_SwitchIpduTxMode) @07170460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (197621109 (estimated locally),0.18 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (197621109 (estimated locally),0.18 per call) Det_ASR40_ReportError/305 (284381595 (estimated locally),0.26 per call) Det_ASR40_ReportError/305 (237404317 (estimated locally),0.22 per call) Det_ASR40_ReportError/305 (354334802 (estimated locally),0.33 per call) 
Com_ComXf_TxPrepareBuffer/286 (Com_ComXf_TxPrepareBuffer) @071702a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_InitSGBuffer.isra.0/359 (inlined) (152127742 (estimated locally),0.14 per call) Com_GetTxSignalGroupCfg/282 (1073741823 (estimated locally),1.00 per call) 
Com_SendSignalGroupArray/285 (Com_SendSignalGroupArray) @071700e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_SetupTxSignalGroup_DET/283 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_SendSignalGroup/284 (Com_SendSignalGroup) @07161ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_SetupTxSignalGroup_DET/390 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_SetupTxSignalGroup_DET/283 (Com_SetupTxSignalGroup_DET) @07161d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 390
  References: 
  Referring: 
  Function Com_SetupTxSignalGroup_DET/283 is inline copy in Com_SendSignalGroupArray/285
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_SendSignalGroupArray/285 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_SetupTxSignalGroup/213 (inlined) (574129754 (estimated locally),0.53 per call) Com_GetTxSignalGroupCfg/282 (1073741824 (estimated locally),1.00 per call) 
Com_GetTxSignalGroupCfg/282 (Com_GetTxSignalGroupCfg) @07161b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_SetupTxSignalGroup_DET/390 (1073741824 (estimated locally),1.00 per call) Com_ComXf_TxPrepareBuffer/286 (1073741823 (estimated locally),1.00 per call) Com_SetupTxSignalGroup_DET/283 (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_GetTxSignalGroupCfg.part.0/358 (inlined) (149726584 (estimated locally),0.14 per call) Det_ASR40_ReportError/305 (179851756 (estimated locally),0.17 per call) 
Com_GetTxSignalCfg/281 (Com_GetTxSignalCfg) @071619a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_ComXf_GetTxSGId/280 (1073741824 (estimated locally),1.00 per call) Com_SendDynSignal/279 (1073741824 (estimated locally),1.00 per call) Com_SendSignal/278 (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_GetTxSignalCfg.part.0/357 (inlined) (149726584 (estimated locally),0.14 per call) Det_ASR40_ReportError/305 (179851756 (estimated locally),0.17 per call) 
Com_ComXf_GetTxSGId/280 (Com_ComXf_GetTxSGId) @071617e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_GetTxSignalCfg/281 (1073741824 (estimated locally),1.00 per call) 
Com_SendDynSignal/279 (Com_SendDynSignal) @07161620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_WriteDynSignal_ExitArea_0/202 (258541907 (estimated locally),0.24 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (258541907 (estimated locally),0.24 per call) Com_GetSendSignalRetVal.isra.0/331 (258541907 (estimated locally),0.24 per call) Det_ASR40_ReportError/305 (258541907 (estimated locally),0.24 per call) Det_ASR40_ReportError/305 (266257823 (estimated locally),0.25 per call) Det_ASR40_ReportError/305 (89073595 (estimated locally),0.08 per call) Com_GetTxSignalCfg/281 (1073741824 (estimated locally),1.00 per call) 
Com_SendSignal/278 (Com_SendSignal) @07161460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_gDataMemPtr/309 (read)Com_WriteFuncs/53 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Com_UpdateShadowSignal/294 (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_GetSendSignalRetVal.isra.0/331 (606344059 (estimated locally),0.56 per call) Det_ASR40_ReportError/305 (82839914 (estimated locally),0.08 per call) Det_ASR40_ReportError/305 (94157665 (estimated locally),0.09 per call) Det_ASR40_ReportError/305 (89073595 (estimated locally),0.08 per call) Com_GetTxSignalCfg/281 (1073741824 (estimated locally),1.00 per call) 
   Indirect call(606344059 (estimated locally),0.56 per call) 
Com_TpRxIndication/276 (Com_TpRxIndication) @07161000
  Type: function definition analyzed
  Visibility: externally_visible public
  previous sharing asm name: 381
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: 
Com_RxIndication/275 (Com_RxIndication) @07155e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_RxCallouts/317 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_HandleRxConfirm.isra.0/369 (inlined) (77814597 (estimated locally),0.07 per call) TS_AtomicSetBit_8/308 (38035775 (estimated locally),0.04 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1/319 (77814597 (estimated locally),0.07 per call) TS_MemCpy32/306 (77814597 (estimated locally),0.07 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1/318 (77814597 (estimated locally),0.07 per call) Det_ASR40_ReportError/305 (161857632 (estimated locally),0.15 per call) Det_ASR40_ReportError/305 (103536706 (estimated locally),0.10 per call) Det_ASR40_ReportError/305 (125392644 (estimated locally),0.12 per call) Det_ASR40_ReportError/305 (354334802 (estimated locally),0.33 per call) 
   Indirect call(131053672 (estimated locally),0.12 per call) 
Com_ComXf_Get_RxSignalGroupSize/274 (Com_ComXf_Get_RxSignalGroupSize) @071557e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_GetRxSignalGroupCfg/266 (1073741824 (estimated locally),1.00 per call) 
Com_ReceiveSignalGroupArray/273 (Com_ReceiveSignalGroupArray) @07155620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_CopyRxSignalGroupArray_Array/269 (addr)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_SetupRxSignalGroup_DET/267 (inlined) (783341637 (estimated locally),0.73 per call) Det_ASR40_ReportError/305 (180771147 (estimated locally),0.17 per call) Det_ASR40_ReportError/305 (109629040 (estimated locally),0.10 per call) 
Com_ReceiveSignalGroup/272 (Com_ReceiveSignalGroup) @07155460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_CopyRxSignalGroupArray_Shadow/270 (addr)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_SetupRxSignalGroup_DET/388 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_CopyRxSignalGroupArray/271 (Com_CopyRxSignalGroupArray) @071552a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_CopyRxSignalGroupArray_Array.part.0/362 (536870912 (estimated locally),0.50 per call) Com_CopyRxSignalGroupArray_Shadow/270 (708669605 (estimated locally),0.66 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (708669605 (estimated locally),0.66 per call) TS_MemCpy32/306 (708669605 (estimated locally),0.66 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (708669605 (estimated locally),0.66 per call) Com_CopyRxSignalGroupArray.part.0/360 (inlined) (365072224 (estimated locally),0.34 per call) Com_ReceiveSignalGroup_Replace.isra.0/333 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_CopyRxSignalGroupArray_Shadow/270 (Com_CopyRxSignalGroupArray_Shadow) @0714aee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Com_gDataMemPtr/309 (read)
  Referring: Com_EB_RouteReceiveSignalGroup/235 (addr)Com_ReceiveSignalGroup/272 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_CopyRxSignalGroupArray/271 (708669605 (estimated locally),0.66 per call) Com_CopyRxSignalGroupArray_Shadow.part.0/361 (inlined) (365072224 (estimated locally),0.34 per call) 
Com_CopyRxSignalGroupArray_Array/269 (Com_CopyRxSignalGroupArray_Array) @0714ad20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReceiveSignalGroupArray/273 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_CopyRxSignalGroupArray_Array.part.0/362 (inlined) (536870912 (estimated locally),0.50 per call) Det_ASR40_ReportError/305 (536870913 (estimated locally),0.50 per call) 
Com_SetupRxSignalGroup/268 (Com_SetupRxSignalGroup) @0714ab60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_SetupRxSignalGroup_DET/388 (574129754 (estimated locally),0.53 per call) Com_SetupRxSignalGroup_DET/267 (418852774 (estimated locally),0.39 per call) Com_EB_RouteReceiveSignalGroup/235 (157876086 (estimated locally),0.45 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call)  of param:3 (vptr maybe changed)
Com_SetupRxSignalGroup_DET/267 (Com_SetupRxSignalGroup_DET) @0714a8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 388
  References: 
  Referring: 
  Function Com_SetupRxSignalGroup_DET/267 is inline copy in Com_ReceiveSignalGroupArray/273
  Availability: local
  Function flags: count:783341637 (estimated locally) body local optimize_size
  Called by: Com_ReceiveSignalGroupArray/273 (inlined) (783341637 (estimated locally),0.73 per call) 
  Calls: Com_SetupRxSignalGroup/268 (418852774 (estimated locally),0.39 per call) Com_GetRxSignalGroupCfg/266 (783341637 (estimated locally),0.73 per call) 
Com_GetRxSignalGroupCfg/266 (Com_GetRxSignalGroupCfg) @0714a700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_SetupRxSignalGroup_DET/388 (1073741824 (estimated locally),1.00 per call) Com_ComXf_Get_RxSignalGroupSize/274 (1073741824 (estimated locally),1.00 per call) Com_SetupRxSignalGroup_DET/267 (783341637 (estimated locally),0.73 per call) 
  Calls: Com_GetRxSignalGroupCfg.part.0/356 (inlined) (149726584 (estimated locally),0.14 per call) Det_ASR40_ReportError/305 (179851756 (estimated locally),0.17 per call) 
Com_ComXf_GetRxSGId/264 (Com_ComXf_GetRxSGId) @0714a1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_GetRxSignalCfg/261 (1073741824 (estimated locally),1.00 per call) 
Com_ReceiveDynSignal/263 (Com_ReceiveDynSignal) @0714a000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_ReadValue_Uint8Dyn/256 (inlined) (343873905 (estimated locally),0.32 per call) Det_ASR40_ReportError/305 (359488551 (estimated locally),0.33 per call) Det_ASR40_ReportError/305 (79979181 (estimated locally),0.07 per call) Det_ASR40_ReportError/305 (89073595 (estimated locally),0.08 per call) Com_GetRxSignalCfg/261 (1073741824 (estimated locally),1.00 per call) 
Com_ReceiveSignal/262 (Com_ReceiveSignal) @0713cd20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_ReadFuncs/18 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: Com_ReceiveShadowSignal/255 (1073741824 (estimated locally),1.00 per call) 
  Calls: Det_ASR40_ReportError/305 (100188032 (estimated locally),0.09 per call) Det_ASR40_ReportError/305 (125611876 (estimated locally),0.12 per call) Det_ASR40_ReportError/305 (131007240 (estimated locally),0.12 per call) Com_GetRxSignalCfg/261 (1073741823 (estimated locally),1.00 per call) 
   Indirect call(394812128 (estimated locally),0.37 per call) 
Com_GetRxSignalCfg/261 (Com_GetRxSignalCfg) @0713ca80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_ComXf_GetRxSGId/264 (1073741824 (estimated locally),1.00 per call) Com_ReceiveDynSignal/263 (1073741824 (estimated locally),1.00 per call) Com_ReceiveSignal/262 (1073741823 (estimated locally),1.00 per call) 
  Calls: Com_GetRxSignalCfg.part.0/355 (inlined) (149726584 (estimated locally),0.14 per call) Det_ASR40_ReportError/305 (179851756 (estimated locally),0.17 per call) 
Com_EB_Read_SignalExt/260 (Com_EB_Read_SignalExt) @0713c8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: Com_gConfigPtr/2 (read)Com_ReadFuncs/18 (read)
  Referring: Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Read_SignalExt.part.0/332 (inlined) (362271904 (estimated locally),0.34 per call) Com_EB_Read_SignalExt_SigBuffer/258 (inlined) (346397702 (estimated locally),0.32 per call) Com_EB_Read_SignalReplace/259 (1073741823 (estimated locally),1.00 per call) 
   Indirect call(365072220 (estimated locally),0.34 per call) 
Com_EB_Read_SignalReplace/259 (Com_EB_Read_SignalReplace) @0713c540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_ReadValue_Uint8Dyn/256 (343873905 (estimated locally),0.32 per call) Com_EB_Read_SignalExt/260 (1073741823 (estimated locally),1.00 per call) 
  Calls: Com_EB_CheckRxSignalDM/257 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_SignalExt_SigBuffer/258 (Com_EB_Read_SignalExt_SigBuffer) @0713c380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_Read_SignalExt_SigBuffer/258 is inline copy in Com_EB_Read_SignalExt/260
  Availability: local
  Function flags: count:346397702 (estimated locally) body local optimize_size
  Called by: Com_EB_Read_SignalExt/260 (inlined) (346397702 (estimated locally),0.32 per call) 
  Calls: 
Com_EB_CheckRxSignalDM/257 (Com_EB_CheckRxSignalDM) @0712bc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_CheckRxSignalDM/257 is inline copy in Com_EB_Read_SignalReplace/259
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_Read_SignalReplace/259 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Com_EB_ReadValue_Uint8Dyn/256 (Com_EB_ReadValue_Uint8Dyn) @0712b8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_ReadValue_Uint8Dyn/256 is inline copy in Com_ReceiveDynSignal/263
  Availability: local
  Function flags: count:343873905 (estimated locally) body local optimize_size
  Called by: Com_ReceiveDynSignal/263 (inlined) (343873905 (estimated locally),0.32 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (168085565 (estimated locally),0.16 per call) TS_MemCpy32/306 (55468236 (estimated locally),0.05 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (168085565 (estimated locally),0.16 per call) TS_MemCpy32/306 (58010152 (estimated locally),0.05 per call) Com_EB_Read_SignalReplace/259 (343873905 (estimated locally),0.32 per call) 
Com_ReceiveShadowSignal/255 (Com_ReceiveShadowSignal) @0712b460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_ReceiveSignal/262 (1073741824 (estimated locally),1.00 per call) 
Com_MainFunctionTx/254 (Com_MainFunctionTx) @0712b2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: available
  Function flags: count:347387059 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_MainFunctionTx_hlp/253 (inlined) (955630223 (estimated locally),2.75 per call) 
Com_EB_MainFunctionTx_hlp/253 (Com_EB_MainFunctionTx_hlp) @0712b0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_MainFunctionTx_hlp/253 is inline copy in Com_MainFunctionTx/254
  Availability: local
  Function flags: count:955630223 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionTx/254 (inlined) (955630223 (estimated locally),2.75 per call) 
  Calls: Com_EB_HandleDeferredTxConfirm/251 (inlined) (955630223 (estimated locally),2.75 per call) Com_EB_Handle_Send_Pdu/252 (inlined) (315357974 (estimated locally),0.91 per call) Com_EB_CheckPeriodicSendforPdu/247 (inlined) (104068132 (estimated locally),0.30 per call) Com_EB_CheckNTimesSendforPdu/248 (inlined) (104068132 (estimated locally),0.30 per call) Com_EB_CheckTxDMforPdu/250 (inlined) (104068132 (estimated locally),0.30 per call) Com_EB_CheckTMSforPdu/245 (inlined) (315357974 (estimated locally),0.91 per call) Com_EB_CheckMdtforPdu.isra.0/354 (inlined) (315357974 (estimated locally),0.91 per call) 
Com_EB_Handle_Send_Pdu/252 (Com_EB_Handle_Send_Pdu) @07121a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Com_EB_Handle_Send_Pdu/252 is inline copy in Com_MainFunctionTx/254
  Availability: local
  Function flags: count:315357974 (estimated locally) body local optimize_size
  Called by: Com_EB_MainFunctionTx_hlp/253 (inlined) (315357974 (estimated locally),0.91 per call) 
  Calls: Com_EB_Send_Pdu/180 (87953339 (estimated locally),0.25 per call) TS_AtomicClearBit_8/307 (87953339 (estimated locally),0.25 per call) TS_AtomicSetBit_8/308 (31914227 (estimated locally),0.09 per call) 
Com_EB_HandleDeferredTxConfirm/251 (Com_EB_HandleDeferredTxConfirm) @07121700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_HandleDeferredTxConfirm/251 is inline copy in Com_MainFunctionTx/254
  Availability: local
  Function flags: count:955630223 (estimated locally) body local optimize_size
  Called by: Com_EB_MainFunctionTx_hlp/253 (inlined) (955630223 (estimated locally),2.75 per call) 
  Calls: Com_EB_TxConfirmations/196 (157678987 (estimated locally),0.45 per call) TS_AtomicClearBit_8/307 (157678987 (estimated locally),0.45 per call) 
Com_EB_CheckTxDMforPdu/250 (Com_EB_CheckTxDMforPdu) @07121460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)Com_gConfigPtr/2 (read)Com_CbkTxTOut_Array/315 (read)
  Referring: 
  Function Com_EB_CheckTxDMforPdu/250 is inline copy in Com_MainFunctionTx/254
  Availability: local
  Function flags: count:104068132 (estimated locally) body local optimize_size
  Called by: Com_EB_MainFunctionTx_hlp/253 (inlined) (104068132 (estimated locally),0.30 per call) 
  Calls: Com_EB_TxDM_TMNone/195 (11676444 (estimated locally),0.03 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (35383165 (estimated locally),0.10 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (68684967 (estimated locally),0.20 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (104068132 (estimated locally),0.30 per call) 
   Indirect call(286281972 (estimated locally),0.82 per call) 
Com_EB_CheckNTimesSendforPdu/248 (Com_EB_CheckNTimesSendforPdu) @0710ee00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_CheckNTimesSendforPdu/248 is inline copy in Com_MainFunctionTx/254
  Availability: local
  Function flags: count:104068132 (estimated locally) body local optimize_size
  Called by: Com_EB_MainFunctionTx_hlp/253 (inlined) (104068132 (estimated locally),0.30 per call) 
  Calls: Com_EB_NTimesSendQueue/177 (34341316 (estimated locally),0.10 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (104064594 (estimated locally),0.30 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (104068132 (estimated locally),0.30 per call) 
Com_EB_CheckPeriodicSendforPdu/247 (Com_EB_CheckPeriodicSendforPdu) @0710ea80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_CheckPeriodicSendforPdu/247 is inline copy in Com_MainFunctionTx/254
  Availability: local
  Function flags: count:104068132 (estimated locally) body local optimize_size
  Called by: Com_EB_MainFunctionTx_hlp/253 (inlined) (104068132 (estimated locally),0.30 per call) 
  Calls: Com_EB_TxDMQueue/194 (34341316 (estimated locally),0.10 per call) Com_EB_PeriodicSendQueue/179 (21062674 (estimated locally),0.06 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (104064594 (estimated locally),0.30 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (104068132 (estimated locally),0.30 per call) 
Com_EB_TMSwitch/246 (Com_EB_TMSwitch) @0710e620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_TMSwitch/246 is inline copy in Com_MainFunctionTx/254
  Availability: local
  Function flags: count:80416283 (estimated locally) body local optimize_size
  Called by: Com_EB_CheckTMSforPdu/245 (inlined) (80416283 (estimated locally),0.23 per call) 
  Calls: Com_EB_TxDMQueue/194 (1459847 (estimated locally),0.00 per call) TS_AtomicSetBit_8/308 (8847560 (estimated locally),0.03 per call) Com_EB_PeriodicSendQueue/179 (8847560 (estimated locally),0.03 per call) TS_AtomicClearBit_8/307 (13405394 (estimated locally),0.04 per call) TS_AtomicClearBit_8/307 (13405394 (estimated locally),0.04 per call) TS_AtomicClearBit_8/307 (26810789 (estimated locally),0.08 per call) TS_AtomicClearBit_8/307 (26810789 (estimated locally),0.08 per call) TS_AtomicClearBit_8/307 (13405394 (estimated locally),0.04 per call) 
Com_EB_CheckTMSforPdu/245 (Com_EB_CheckTMSforPdu) @0710e0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_CheckTMSforPdu/245 is inline copy in Com_MainFunctionTx/254
  Availability: local
  Function flags: count:315357974 (estimated locally) body local optimize_size
  Called by: Com_EB_MainFunctionTx_hlp/253 (inlined) (315357974 (estimated locally),0.91 per call) 
  Calls: Com_EB_TMSwitch/246 (inlined) (80416283 (estimated locally),0.23 per call) TS_AtomicClearBit_8/307 (80416283 (estimated locally),0.23 per call) 
Com_MainFunctionRx/244 (Com_MainFunctionRx) @07100e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_GlobalTime/1 (read)Com_GlobalTime/1 (write)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: available
  Function flags: count:583555347 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_CheckRxSignalGroupDMTable/243 (inlined) (118111601 (estimated locally),0.20 per call) Com_EB_CheckRxSignalDMTable/242 (inlined) (118111601 (estimated locally),0.20 per call) Com_EB_CheckRxDMTable/241 (inlined) (118111601 (estimated locally),0.20 per call) Com_EB_NotifyReceivers.isra.0/367 (315357974 (estimated locally),0.54 per call) TS_AtomicClearBit_8/307 (315357974 (estimated locally),0.54 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111602 (estimated locally),0.20 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),0.20 per call) 
Com_EB_CheckRxSignalGroupDMTable/243 (Com_EB_CheckRxSignalGroupDMTable) @07100b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_GlobalTime/1 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_CbkRxTOut_Array/314 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_CheckRxSignalGroupDMTable/243 is inline copy in Com_MainFunctionRx/244
  Availability: local
  Function flags: count:118111601 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionRx/244 (inlined) (118111601 (estimated locally),0.20 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (422579680 (estimated locally),0.72 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (217692563 (estimated locally),0.37 per call) Com_EB_RxDMSignalGroupQueue.isra.0/329 (217692563 (estimated locally),0.37 per call) TS_AtomicSetBit_8/308 (217692563 (estimated locally),0.37 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (315357970 (estimated locally),0.54 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (955630215 (estimated locally),1.64 per call) 
   Indirect call(143677092 (estimated locally),0.25 per call) 
Com_EB_CheckRxSignalDMTable/242 (Com_EB_CheckRxSignalDMTable) @07100540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_GlobalTime/1 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_CbkRxTOut_Array/314 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_CheckRxSignalDMTable/242 is inline copy in Com_MainFunctionRx/244
  Availability: local
  Function flags: count:118111601 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionRx/244 (inlined) (118111601 (estimated locally),0.20 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (422579680 (estimated locally),0.72 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (217692563 (estimated locally),0.37 per call) Com_EB_RxDMSignalQueue.isra.0/330 (217692563 (estimated locally),0.37 per call) TS_AtomicSetBit_8/308 (217692563 (estimated locally),0.37 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (315357970 (estimated locally),0.54 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (955630215 (estimated locally),1.64 per call) 
   Indirect call(143677092 (estimated locally),0.25 per call) 
Com_EB_CheckRxDMTable/241 (Com_EB_CheckRxDMTable) @070f1ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_GlobalTime/1 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_CbkRxTOut_Array/314 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_CheckRxDMTable/241 is inline copy in Com_MainFunctionRx/244
  Availability: local
  Function flags: count:118111601 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionRx/244 (inlined) (118111601 (estimated locally),0.20 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (537828684 (estimated locally),0.92 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (102443559 (estimated locally),0.18 per call) Com_EB_RxDMQueue.isra.0/328 (102443559 (estimated locally),0.18 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (315357970 (estimated locally),0.54 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (955630215 (estimated locally),1.64 per call) 
   Indirect call(828861526 (estimated locally),1.42 per call) 
Com_MainFunctionRouteSignals/240 (Com_MainFunctionRouteSignals) @070f1a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: available
  Function flags: count:347387065 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_MainFunctionRouteSignals_Src_Generic_hlp/239 (inlined) (315357974 (estimated locally),0.91 per call) TS_AtomicClearBit_8/307 (315357974 (estimated locally),0.91 per call) 
Com_MainFunctionRouteSignals_Src_Generic_hlp/239 (Com_MainFunctionRouteSignals_Src_Generic_hlp) @070f1540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_MainFunctionRouteSignals_Src_Generic_hlp/239 is inline copy in Com_MainFunctionRouteSignals/240
  Availability: local
  Function flags: count:315357974 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionRouteSignals/240 (inlined) (315357974 (estimated locally),0.91 per call) 
  Calls: Com_EB_CheckSendSignalGroup/231 (inlined) (315357977 (estimated locally),0.91 per call) Com_EB_RouteGroupSignal/237 (inlined) (637883179 (estimated locally),1.84 per call) Com_EB_RouteSignalGroup.isra.0/376 (inlined) (637883179 (estimated locally),1.84 per call) Com_EB_RouteSignal.isra.0/374 (inlined) (637883179 (estimated locally),1.84 per call) 
Com_EB_RouteGroupSignal/237 (Com_EB_RouteGroupSignal) @070f10e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_RouteGroupSignal/237 is inline copy in Com_MainFunctionRouteSignals/240
  Availability: local
  Function flags: count:637883179 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionRouteSignals_Src_Generic_hlp/239 (inlined) (637883179 (estimated locally),1.84 per call) 
  Calls: Com_EB_RouteSignalHelper/232 (129107554 (estimated locally),0.37 per call) 
Com_EB_RouteReceiveSignalGroup/235 (Com_EB_RouteReceiveSignalGroup) @070dec40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_CopyRxSignalGroupArray_Shadow/270 (addr)
  Referring: 
  Function Com_EB_RouteReceiveSignalGroup/235 is inline copy in Com_MainFunctionRouteSignals/240
  Availability: local
  Function flags: count:157876086 (estimated locally) body local optimize_size
  Called by: Com_EB_RouteSignalGroup.isra.0/376 (inlined) (157876086 (estimated locally),0.45 per call) 
  Calls: Com_SetupRxSignalGroup/268 (157876086 (estimated locally),0.45 per call) 
Com_EB_RouteSignalHelper_Write/233 (Com_EB_RouteSignalHelper_Write) @070de8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_WriteFuncs/53 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_RouteSignalHelper/232 (318511554 (estimated locally),2.69 per call) Com_EB_RouteSignalHelper/232 (318511554 (estimated locally),2.69 per call) 
  Calls: Com_EB_RouteSignalHelper_Write.part.0/373 (inlined) (217325344 (estimated locally),0.20 per call) 
   Indirect call(856416480 (estimated locally),0.80 per call) 
Com_EB_RouteSignalHelper/232 (Com_EB_RouteSignalHelper) @070de460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_ReadFuncs/18 (read)Com_ReadFuncs/18 (read)Com_ReadFuncs/18 (read)Com_ReadFuncs/18 (read)Com_ReadFuncs/18 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:118193217 (estimated locally) body local optimize_size
  Called by: Com_EB_RouteGroupSignal/237 (129107554 (estimated locally),0.37 per call) Com_EB_RouteSignal.isra.0/374 (424192314 (estimated locally),1.22 per call) 
  Calls: Com_EB_SetSendSignalGroup/230 (inlined) (318511554 (estimated locally),2.69 per call) Com_EB_RouteSignalHelper_Write/233 (318511554 (estimated locally),2.69 per call) Com_EB_SendSignal_Transmit/201 (318511554 (estimated locally),2.69 per call) Com_EB_RouteSignalHelper_Write/233 (318511554 (estimated locally),2.69 per call) Com_GetSendSignalRetVal.isra.0/331 (318511554 (estimated locally),2.69 per call) 
   Indirect call(11624657 (estimated locally),0.10 per call) 
   Indirect call(11624657 (estimated locally),0.10 per call) 
   Indirect call(11624657 (estimated locally),0.10 per call) 
   Indirect call(11624657 (estimated locally),0.10 per call) 
   Indirect call(11624657 (estimated locally),0.10 per call) 
Com_EB_CheckSendSignalGroup/231 (Com_EB_CheckSendSignalGroup) @070bbd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_CheckSendSignalGroup/231 is inline copy in Com_MainFunctionRouteSignals/240
  Availability: local
  Function flags: count:315357977 (estimated locally) body local optimize_size
  Called by: Com_MainFunctionRouteSignals_Src_Generic_hlp/239 (inlined) (315357977 (estimated locally),0.91 per call) 
  Calls: Com_SetupTxSignalGroup/387 (inlined) (1286815664 (estimated locally),3.70 per call) 
Com_EB_SetSendSignalGroup/230 (Com_EB_SetSendSignalGroup) @070bbb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_SetSendSignalGroup/230 is inline copy in Com_EB_RouteSignalHelper/232
  Availability: local
  Function flags: count:318511554 (estimated locally) body local optimize_size
  Called by: Com_EB_RouteSignalHelper/232 (inlined) (318511554 (estimated locally),2.69 per call) 
  Calls: 
Com_SetIpduGroup/229 (Com_SetIpduGroup) @070bb8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/305 (196024745 (estimated locally),0.18 per call) Det_ASR40_ReportError/305 (125392644 (estimated locally),0.12 per call) Det_ASR40_ReportError/305 (354334802 (estimated locally),0.33 per call) 
Com_ClearIpduGroupVector/228 (Com_ClearIpduGroupVector) @070bb700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)
  Referring: 
  Availability: available
  Function flags: count:388179662 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/305 (45332009 (estimated locally),0.12 per call) Det_ASR40_ReportError/305 (128099288 (estimated locally),0.33 per call) 
Com_Init/227 (Com_Init) @070bb540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_gConfigPtr/2 (write)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_InitStatus/0 (write)
  Referring: 
  Availability: available
  Function flags: count:176285968 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_InitStartTxIPdu/193 (inlined) (955630215 (estimated locally),5.42 per call) Com_EB_InitStartRxIPdu/164 (inlined) (955630209 (estimated locally),5.42 per call) Det_ASR40_ReportError/305 (58174369 (estimated locally),0.33 per call) Com_IsValidConfig/17 (176285968 (estimated locally),1.00 per call) 
Com_GetConfigurationId/226 (Com_GetConfigurationId) @070bb380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/305 (225056286 (estimated locally),0.21 per call) 
Com_EB_FilterSint64/225 (Com_EB_FilterSint64) @070bb1c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignal_Filter/199 (44538811 (estimated locally),0.04 per call) Com_EB_CalculateFilter_Sint64/11 (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterUint32/222 (236199579 (estimated locally),0.22 per call) Com_EB_FilterUint32/222 (236199579 (estimated locally),0.22 per call) Com_EB_FilterUint32/222 (708669605 (estimated locally),0.66 per call) Com_EB_FilterSint64.part.0/389 (inlined) (365072224 (estimated locally),0.34 per call) 
Com_EB_FilterUint64/224 (Com_EB_FilterUint64) @070bb000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignal_Filter/199 (44538811 (estimated locally),0.04 per call) Com_EB_CalculateFilter_Uint64/10 (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterUint32/222 (236199579 (estimated locally),0.22 per call) Com_EB_FilterUint32/222 (236199579 (estimated locally),0.22 per call) Com_EB_FilterUint32/222 (708669605 (estimated locally),0.66 per call) Com_EB_FilterSint64.part.0/342 (inlined) (365072224 (estimated locally),0.34 per call) 
Com_EB_FilterSint32/223 (Com_EB_FilterSint32) @070a4e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignal_Filter/199 (44538811 (estimated locally),0.04 per call) Com_EB_CalculateFilter_Sint32/9 (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterOneEveryN/216 (357878150 (estimated locally),0.33 per call) 
Com_EB_FilterUint32/222 (Com_EB_FilterUint32) @070a4a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignal_Filter/199 (44538811 (estimated locally),0.04 per call) Com_EB_FilterUint64/224 (236199579 (estimated locally),0.22 per call) Com_EB_FilterUint64/224 (236199579 (estimated locally),0.22 per call) Com_EB_FilterUint64/224 (708669605 (estimated locally),0.66 per call) Com_EB_FilterSint64/225 (236199579 (estimated locally),0.22 per call) Com_EB_FilterSint64/225 (236199579 (estimated locally),0.22 per call) Com_EB_FilterSint64/225 (708669605 (estimated locally),0.66 per call) Com_EB_CalculateFilter_Uint32/6 (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterOneEveryN/216 (357878150 (estimated locally),0.33 per call) 
Com_EB_FilterSint16/221 (Com_EB_FilterSint16) @070a4700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignal_Filter/199 (44538811 (estimated locally),0.04 per call) Com_EB_CalculateFilter_Sint16/8 (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterOneEveryN/216 (357878150 (estimated locally),0.33 per call) 
Com_EB_FilterUint16/220 (Com_EB_FilterUint16) @070a4380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignal_Filter/199 (44538811 (estimated locally),0.04 per call) Com_EB_CalculateFilter_Uint16/5 (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterOneEveryN/216 (357878150 (estimated locally),0.33 per call) 
Com_EB_FilterSint8/219 (Com_EB_FilterSint8) @070a4000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignal_Filter/199 (44538811 (estimated locally),0.04 per call) Com_EB_CalculateFilter_Sint8/7 (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterOneEveryN/216 (357878150 (estimated locally),0.33 per call) 
Com_EB_FilterUint8/218 (Com_EB_FilterUint8) @07091c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignal_Filter/199 (44538811 (estimated locally),0.04 per call) Com_EB_CalculateFilter_Uint8/4 (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterOneEveryN/216 (357878150 (estimated locally),0.33 per call) 
Com_EB_FilterBoolean/217 (Com_EB_FilterBoolean) @070918c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter_Bool.isra.0/363 (107374182 (estimated locally),0.10 per call) Com_EB_SendSignal_Filter/199 (44538811 (estimated locally),0.04 per call) 
  Calls: TS_AtomicClearBit_8/307 (141338295 (estimated locally),0.13 per call) TS_AtomicSetBit_8/308 (72810637 (estimated locally),0.07 per call) Com_EB_FilterOneEveryN/216 (357878150 (estimated locally),0.33 per call) 
Com_EB_FilterOneEveryN/216 (Com_EB_FilterOneEveryN) @07091700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_FilterSint64.part.0/389 (365072224 (estimated locally),0.34 per call) Com_EB_FilterBoolean/217 (357878150 (estimated locally),0.33 per call) Com_EB_FilterSint64.part.0/342 (365072224 (estimated locally),0.34 per call) Com_EB_FilterSint32/223 (357878150 (estimated locally),0.33 per call) Com_EB_FilterSint16/221 (357878150 (estimated locally),0.33 per call) Com_EB_FilterSint8/219 (357878150 (estimated locally),0.33 per call) Com_EB_FilterUint32/222 (357878150 (estimated locally),0.33 per call) Com_EB_FilterUint16/220 (357878150 (estimated locally),0.33 per call) Com_EB_FilterUint8/218 (357878150 (estimated locally),0.33 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_ReceptionDMControl/215 (Com_ReceptionDMControl) @07091540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_HandlePduGroupRx/147 (503584915 (estimated locally),0.47 per call) Det_ASR40_ReportError/305 (215822106 (estimated locally),0.20 per call) Det_ASR40_ReportError/305 (354334802 (estimated locally),0.33 per call) 
Com_IpduGroupControl/214 (Com_IpduGroupControl) @07091380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_HandlePduGroupTx/148 (inlined) (503584915 (estimated locally),0.47 per call) Com_EB_HandlePduGroupRx/147 (503584915 (estimated locally),0.47 per call) Det_ASR40_ReportError/305 (215822106 (estimated locally),0.20 per call) Det_ASR40_ReportError/305 (354334802 (estimated locally),0.33 per call) 
Com_SetupTxSignalGroup/213 (Com_SetupTxSignalGroup) @070911c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 387
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_SetupTxSignalGroup/213 is inline copy in Com_SendSignalGroupArray/285
  Availability: local
  Function flags: count:574129754 (estimated locally) body local optimize_size
  Called by: Com_SetupTxSignalGroup_DET/283 (inlined) (574129754 (estimated locally),0.53 per call) 
  Calls: Com_EB_SendSignalGroupArray_DETCheck/205 (inlined) (indirect_inlining) (574129754 (estimated locally),0.53 per call) 
Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 (Com_EB_SetGroupSignalTMSFlagOfSignalGroup) @07091000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignalGroupArray/392 (524910242 (estimated locally),1.51 per call) Com_EB_SendSignalGroupArray/206 (252033380 (estimated locally),0.23 per call) 
  Calls: Com_EB_CalculateGroupSignalTM.isra.0/364 (955630223 (estimated locally),8.09 per call) Com_EB_CalculateFilter/12 (955630223 (estimated locally),8.09 per call) 
Com_EB_WriteShadowBuffer_Fragment/208 (Com_EB_WriteShadowBuffer_Fragment) @07081460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Com_EB_WriteShadowBuffer_Fragment/208 is inline copy in Com_EB_WriteShadowBuffer.isra.0/368
  Availability: local
  Function flags: count:164379404 (estimated locally) body local optimize_size
  Called by: Com_EB_WriteShadowBuffer.isra.0/368 (inlined) (164379404 (estimated locally),0.27 per call) 
  Calls: 
Com_EB_CalculateSignalGroupTM/207 (Com_EB_CalculateSignalGroupTM) @070812a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:236223200 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignalGroupArray/392 (524910242 (estimated locally),1.51 per call) Com_EB_SendSignalGroup/204 (840525101 (estimated locally),0.78 per call) Com_EB_SendSignalGroupArray/206 (252033380 (estimated locally),0.23 per call) 
  Calls: Com_EB_SendUponSendApiCall/175 (40662730 (estimated locally),0.17 per call) Com_EB_Request_Send_Pdu/176 (11542598 (estimated locally),0.05 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (236223201 (estimated locally),1.00 per call) Com_EB_CalculateTM/178 (118111601 (estimated locally),0.50 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (236223200 (estimated locally),1.00 per call) 
Com_EB_SendSignalGroupArray/206 (Com_EB_SendSignalGroupArray) @0705ec40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 392
  References: 
  Referring: 
  Function Com_EB_SendSignalGroupArray/206 is inline copy in Com_SendSignalGroupArray/285
  Availability: local
  Function flags: count:252033380 (estimated locally) body local optimize_size
  Called by: Com_EB_SendSignalGroupArray_DETCheck/205 (inlined) (252033380 (estimated locally),0.23 per call) 
  Calls: Com_EB_CalculateSignalGroupTM/207 (252033380 (estimated locally),0.23 per call) Com_EB_WriteShadowBuffer.isra.0/368 (252033380 (estimated locally),0.23 per call) Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 (252033380 (estimated locally),0.23 per call) 
Com_EB_SendSignalGroupArray_DETCheck/205 (Com_EB_SendSignalGroupArray_DETCheck) @0705ea80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Com_EB_SendSignalGroupArray_DETCheck/205 is inline copy in Com_SendSignalGroupArray/285
  Availability: local
  Function flags: count:574129754 (estimated locally) body local optimize_size
  Called by: Com_SetupTxSignalGroup/213 (inlined) (indirect_inlining) (574129754 (estimated locally),0.53 per call) 
  Calls: Com_EB_SendSignalGroupArray/206 (inlined) (252033380 (estimated locally),0.23 per call) Det_ASR40_ReportError/305 (263477726 (estimated locally),0.25 per call) Com_EB_SendSignalGroupArray_DETCheck.part.0/377 (inlined) (58618648 (estimated locally),0.05 per call) 
Com_EB_SendSignalGroup/204 (Com_EB_SendSignalGroup) @0705e8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_SetupTxSignalGroup/391 (indirect_inlining) (574129754 (estimated locally),0.53 per call) Com_SetupTxSignalGroup/387 (indirect_inlining) (1286815664 (estimated locally),3.70 per call) 
  Calls: Com_EB_CalculateSignalGroupTM/207 (840525101 (estimated locally),0.78 per call) Com_EB_WriteShadowBuffer.isra.0/368 (840525101 (estimated locally),0.78 per call) Com_EB_SendSignalGroup.part.0/378 (inlined) (233216728 (estimated locally),0.22 per call) 
Com_EB_WriteDynSignal_ExitArea_0/202 (Com_EB_WriteDynSignal_ExitArea_0) @0705e460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_WriteFuncs/53 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_SendDynSignal/279 (258541907 (estimated locally),0.24 per call) Com_EB_RouteSignalHelper_Write.part.0/373 (217325344 (estimated locally),0.20 per call) 
  Calls: Com_EB_SendSignal_Transmit/201 (1073741824 (estimated locally),1.00 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Com_EB_SendSignal_Transmit/201 (Com_EB_SendSignal_Transmit) @0705e0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_RouteSignalHelper/232 (318511554 (estimated locally),2.69 per call) Com_EB_WriteDynSignal_ExitArea_0/202 (1073741824 (estimated locally),1.00 per call) Com_EB_Write_SignalExt/200 (217325345 (estimated locally),0.20 per call) 
  Calls: Com_EB_SendUponSendApiCall/175 (211175221 (estimated locally),0.20 per call) Com_EB_SendSignal_Transmit.part.0/372 (inlined) (59944590 (estimated locally),0.06 per call) 
Com_EB_Write_SignalExt/200 (Com_EB_Write_SignalExt) @07001ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  Address is taken.
  References: Com_gConfigPtr/2 (read)Com_WriteFuncs/53 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_SendSignal_Transmit/201 (217325345 (estimated locally),0.20 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (150270385 (estimated locally),0.14 per call) Com_EB_CalculateTM/178 (150270385 (estimated locally),0.14 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (150270385 (estimated locally),0.14 per call) TS_AtomicClearBit_8/307 (99178454 (estimated locally),0.09 per call) TS_AtomicSetBit_8/308 (51091931 (estimated locally),0.05 per call) Com_EB_CalculateGroupSignalTM.isra.0/364 (217705708 (estimated locally),0.20 per call) Com_EB_SendSignal_Filter/199 (inlined) (445388109 (estimated locally),0.41 per call) 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Com_EB_SendSignal_Filter/199 (Com_EB_SendSignal_Filter) @070019a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Com_EB_SendSignal_Filter/199 is inline copy in Com_EB_Write_SignalExt/200
  Availability: local
  Function flags: count:445388109 (estimated locally) body local optimize_size
  Called by: Com_EB_Write_SignalExt/200 (inlined) (445388109 (estimated locally),0.41 per call) 
  Calls: Com_EB_FilterUint64/224 (44538811 (estimated locally),0.04 per call) Com_EB_FilterSint64/225 (44538811 (estimated locally),0.04 per call) Com_EB_FilterSint32/223 (44538811 (estimated locally),0.04 per call) Com_EB_FilterSint16/221 (44538811 (estimated locally),0.04 per call) Com_EB_FilterSint8/219 (44538811 (estimated locally),0.04 per call) Com_EB_FilterUint32/222 (44538811 (estimated locally),0.04 per call) Com_EB_FilterUint16/220 (44538811 (estimated locally),0.04 per call) Com_EB_FilterUint8/218 (44538811 (estimated locally),0.04 per call) Com_EB_FilterBoolean/217 (44538811 (estimated locally),0.04 per call) 
Com_EB_ClearTxUpdateBits/197 (Com_EB_ClearTxUpdateBits) @07001620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: local
  Function flags: count:118111602 (estimated locally) body local optimize_size
  Called by: Com_TriggerTransmit/289 (21949190 (estimated locally),0.02 per call) Com_EB_HlpTxConfirmation/291 (72803991 (estimated locally),0.07 per call) Com_EB_Send_Pdu.part.0/371 (83903646 (estimated locally),0.08 per call) 
  Calls: TS_AtomicClearBit_8/307 (315357971 (estimated locally),2.67 per call) TS_AtomicClearBit_8/307 (315357973 (estimated locally),2.67 per call) 
Com_EB_TxConfirmations/196 (Com_EB_TxConfirmations) @07001380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_CbkTxAck_Array/316 (read)
  Referring: 
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleTxConfirmations/290 (536870913 (estimated locally),0.50 per call) Com_EB_HandleDeferredTxConfirm/251 (157678987 (estimated locally),0.45 per call) 
  Calls: 
   Indirect call(955630223 (estimated locally),8.09 per call) 
Com_EB_TxDM_TMNone/195 (Com_EB_TxDM_TMNone) @07001000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HlpTxConfirmation/291 (71940702 (estimated locally),0.07 per call) Com_EB_StartIPdu/190 (357842363 (estimated locally),0.33 per call) Com_EB_CheckTxDMforPdu/250 (11676444 (estimated locally),0.03 per call) 
  Calls: Com_EB_TxDM_TMNone.part.0/344 (inlined) (177167400 (estimated locally),0.16 per call) 
Com_EB_TxDMQueue/194 (Com_EB_TxDMQueue) @06ff6b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_StartIPdu/190 (38969033 (estimated locally),0.04 per call) Com_EB_Request_Send_Pdu/176 (354334802 (estimated locally),0.33 per call) Com_EB_TMSwitch/246 (1459847 (estimated locally),0.00 per call) Com_EB_CheckPeriodicSendforPdu/247 (34341316 (estimated locally),0.10 per call) Com_EB_TxDM_TMNone.part.0/344 (177167400 (estimated locally),0.16 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_InitStartTxIPdu/193 (Com_EB_InitStartTxIPdu) @06ff69a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_InitStartTxIPdu/193 is inline copy in Com_Init/227
  Availability: local
  Function flags: count:955630215 (estimated locally) body local optimize_size
  Called by: Com_Init/227 (inlined) (955630215 (estimated locally),5.42 per call) 
  Calls: Com_EB_StartIPdu/190 (193419555 (estimated locally),1.10 per call) Com_EB_InitTxIPdu/192 (955630215 (estimated locally),5.42 per call) 
Com_EB_InitTxIPdu/192 (Com_EB_InitTxIPdu) @06ff67e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitStartTxIPdu/193 (955630215 (estimated locally),5.42 per call) Com_EB_HandleTxIPdu_Start/182 (58587079 (estimated locally),0.05 per call) 
  Calls: Com_EB_InitTxIPdu_Signals/189 (inlined) (1073741824 (estimated locally),1.00 per call) Com_EB_InitTxIPdu_HandleFlags/187 (inlined) (1073741824 (estimated locally),1.00 per call) Com_EB_InitTxIPdu_SignalGroups/186 (inlined) (1073741824 (estimated locally),1.00 per call) Com_EB_InitTxIPdu_PduBuffer/184 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_EB_HandleTxIPdu/191 (Com_EB_HandleTxIPdu) @06ff6620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Com_EB_HandleTxIPdu/191 is inline copy in Com_IpduGroupControl/214
  Availability: local
  Function flags: count:1702716772 (estimated locally) body local optimize_size
  Called by: Com_EB_HandlePduGroupTx/148 (inlined) (1702716772 (estimated locally),1.59 per call) 
  Calls: Com_EB_HandleTxIPdu_Stop/183 (inlined) (1123793074 (estimated locally),1.05 per call) Com_EB_HandleTxIPdu_Start/182 (inlined) (578923698 (estimated locally),0.54 per call) 
Com_EB_StartIPdu/190 (Com_EB_StartIPdu) @06ff6460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitStartTxIPdu/193 (193419555 (estimated locally),1.10 per call) Com_EB_HandleTxIPdu_Start/182 (289461849 (estimated locally),0.27 per call) 
  Calls: Com_EB_TxDM_TMNone/195 (357842363 (estimated locally),0.33 per call) TS_AtomicSetBit_8/308 (357842363 (estimated locally),0.33 per call) Com_EB_PeriodicSendQueue/179 (357842363 (estimated locally),0.33 per call) Com_EB_TxDMQueue/194 (38969033 (estimated locally),0.04 per call) Com_EB_Send_Pdu/180 (118087980 (estimated locally),0.11 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_InitTxIPdu_Signals/189 (Com_EB_InitTxIPdu_Signals) @06ff6000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_InitTxIPdu_Signals/189 is inline copy in Com_EB_InitTxIPdu/192
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitTxIPdu/192 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_EB_InitTx_Signal/188 (8687547529 (estimated locally),8.09 per call) 
Com_EB_InitTx_Signal/188 (Com_EB_InitTx_Signal) @06fe8d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_ClearTxSGTMSState/185 (37584146804 (estimated locally),35.00 per call) Com_EB_InitTxIPdu_Signals/189 (8687547529 (estimated locally),8.09 per call) 
  Calls: Com_ResetFilerOneEveryN/14 (173338695 (estimated locally),0.16 per call) Com_EB_SetBuffer/13 (217325345 (estimated locally),0.20 per call) 
Com_EB_InitTxIPdu_HandleFlags/187 (Com_EB_InitTxIPdu_HandleFlags) @06fe8b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_InitTxIPdu_HandleFlags/187 is inline copy in Com_EB_InitTxIPdu/192
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitTxIPdu/192 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: TS_MemCpy32/306 (354334802 (estimated locally),0.33 per call) TS_AtomicSetBit_8/308 (354334802 (estimated locally),0.33 per call) 
Com_EB_InitTxIPdu_SignalGroups/186 (Com_EB_InitTxIPdu_SignalGroups) @06fe87e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_InitTxIPdu_SignalGroups/186 is inline copy in Com_EB_InitTxIPdu/192
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitTxIPdu/192 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_EB_ClearTxSGTMSState/185 (inlined) (8687547529 (estimated locally),8.09 per call) Com_EB_InitSGBuffer.isra.0/385 (inlined) (4246473223 (estimated locally),3.95 per call) 
Com_EB_ClearTxSGTMSState/185 (Com_EB_ClearTxSGTMSState) @06fe8540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_ClearTxSGTMSState/185 is inline copy in Com_EB_InitTxIPdu/192
  Availability: local
  Function flags: count:8687547529 (estimated locally) body local optimize_size
  Called by: Com_EB_InitTxIPdu_SignalGroups/186 (inlined) (8687547529 (estimated locally),8.09 per call) 
  Calls: Com_EB_InitTx_Signal/188 (37584146804 (estimated locally),35.00 per call) TS_AtomicSetBit_8/308 (12402768385 (estimated locally),11.55 per call) TS_MemCpy32/306 (4645231680 (estimated locally),4.33 per call) 
Com_EB_InitTxIPdu_PduBuffer/184 (Com_EB_InitTxIPdu_PduBuffer) @06fe82a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_InitTxIPdu_PduBuffer/184 is inline copy in Com_EB_InitTxIPdu/192
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitTxIPdu/192 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: TS_MemCpy32/306 (1073741824 (estimated locally),1.00 per call) 
Com_EB_HandleTxIPdu_Stop/183 (Com_EB_HandleTxIPdu_Stop) @06fe8000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_CbkTxErr_Array/312 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_HandleTxIPdu_Stop/183 is inline copy in Com_IpduGroupControl/214
  Availability: local
  Function flags: count:1123793074 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleTxIPdu/191 (inlined) (1123793074 (estimated locally),1.05 per call) 
  Calls: TS_AtomicClearBit_8/307 (370851717 (estimated locally),0.35 per call) TS_AtomicClearBit_8/307 (370851717 (estimated locally),0.35 per call) TS_AtomicClearBit_8/307 (370851717 (estimated locally),0.35 per call) TS_AtomicClearBit_8/307 (1123793074 (estimated locally),1.05 per call) TS_AtomicClearBit_8/307 (1123793074 (estimated locally),1.05 per call) 
   Indirect call(3000527520 (estimated locally),2.79 per call) 
Com_EB_HandleTxIPdu_Start/182 (Com_EB_HandleTxIPdu_Start) @06fdba80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_HandleTxIPdu_Start/182 is inline copy in Com_IpduGroupControl/214
  Availability: local
  Function flags: count:578923698 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleTxIPdu/191 (inlined) (578923698 (estimated locally),0.54 per call) 
  Calls: Com_EB_StartIPdu/190 (289461849 (estimated locally),0.27 per call) Com_EB_InitTxIPdu/192 (58587079 (estimated locally),0.05 per call) 
Com_EB_HandleMDT/181 (Com_EB_HandleMDT) @06fdb7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Com_EB_HandleMDT/181 is inline copy in Com_EB_Send_Pdu/180
  Availability: local
  Function flags: count:508506948 (estimated locally) body local optimize_size
  Called by: Com_EB_Send_Pdu/180 (inlined) (508506948 (estimated locally),0.47 per call) 
  Calls: Com_EB_MdtQueue.isra.0/345 (167807293 (estimated locally),0.16 per call) 
Com_EB_Send_Pdu/180 (Com_EB_Send_Pdu) @06fdb620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_TxCallouts/310 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_TriggerIPDUSend/288 (241001352 (estimated locally),0.22 per call) Com_EB_Handle_Send_Pdu/252 (87953339 (estimated locally),0.25 per call) Com_EB_StartIPdu/190 (118087980 (estimated locally),0.11 per call) Com_EB_Request_Send_Pdu/176 (351646152 (estimated locally),0.33 per call) 
  Calls: Com_EB_Send_Pdu.part.0/371 (inlined) (254253474 (estimated locally),0.24 per call) PduR_ComTransmit/311 (508506948 (estimated locally),0.47 per call) Com_EB_HandleMDT/181 (inlined) (508506948 (estimated locally),0.47 per call) 
   Indirect call(856416480 (estimated locally),0.80 per call) 
Com_EB_PeriodicSendQueue/179 (Com_EB_PeriodicSendQueue) @06fdb2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_StartIPdu/190 (357842363 (estimated locally),0.33 per call) Com_EB_TMSwitch/246 (8847560 (estimated locally),0.03 per call) Com_EB_CheckPeriodicSendforPdu/247 (21062674 (estimated locally),0.06 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_CalculateTM/178 (Com_EB_CalculateTM) @06fdb0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateSignalGroupTM/207 (118111601 (estimated locally),0.50 per call) Com_EB_Write_SignalExt/200 (150270385 (estimated locally),0.14 per call) 
  Calls: 
Com_EB_NTimesSendQueue/177 (Com_EB_NTimesSendQueue) @06fcdee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_GlobalTime/1 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_SendUponSendApiCall/175 (118099789 (estimated locally),0.11 per call) Com_EB_SendUponSendApiCall/175 (118099789 (estimated locally),0.11 per call) Com_EB_CheckNTimesSendforPdu/248 (34341316 (estimated locally),0.10 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Request_Send_Pdu/176 (Com_EB_Request_Send_Pdu) @06fcdd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateSignalGroupTM/207 (11542598 (estimated locally),0.05 per call) Com_EB_SendSignal_Transmit.part.0/372 (59944590 (estimated locally),0.06 per call) Com_EB_SendUponSendApiCall/175 (354334802 (estimated locally),0.33 per call) 
  Calls: Com_EB_Send_Pdu/180 (351646152 (estimated locally),0.33 per call) TS_AtomicSetBit_8/308 (722095673 (estimated locally),0.67 per call) Com_EB_TxDMQueue/194 (354334802 (estimated locally),0.33 per call) 
Com_EB_SendUponSendApiCall/175 (Com_EB_SendUponSendApiCall) @06fcd9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateSignalGroupTM/207 (40662730 (estimated locally),0.17 per call) Com_EB_SendSignal_Transmit/201 (211175221 (estimated locally),0.20 per call) 
  Calls: Com_EB_NTimesSendQueue/177 (118099789 (estimated locally),0.11 per call) Com_EB_NTimesSendQueue/177 (118099789 (estimated locally),0.11 per call) Com_EB_Request_Send_Pdu/176 (354334802 (estimated locally),0.33 per call) 
Com_EB_DisableSignalGroupBasedDMFlag/174 (Com_EB_DisableSignalGroupBasedDMFlag) @06fcd460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Com_EB_DisableSignalAndSignalGroupBasedDMFlag/386 (1073741824 (estimated locally),1.00 per call) Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 (1073741824 (estimated locally),1.00 per call) 
  Calls: TS_AtomicClearBit_8/307 (63828454 (estimated locally),0.54 per call) TS_AtomicClearBit_8/307 (315357974 (estimated locally),2.67 per call) 
Com_EB_DisableSignalBasedDMFlag/173 (Com_EB_DisableSignalBasedDMFlag) @06f7aee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:118111600 (estimated locally) body local optimize_size
  Called by: Com_EB_DisableSignalAndSignalGroupBasedDMFlag/386 (1073741824 (estimated locally),1.00 per call) Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 (1073741824 (estimated locally),1.00 per call) 
  Calls: TS_AtomicClearBit_8/307 (63828454 (estimated locally),0.54 per call) TS_AtomicClearBit_8/307 (315357974 (estimated locally),2.67 per call) 
Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 (Com_EB_DisableSignalAndSignalGroupBasedDMFlag) @06f7a9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 386
  References: 
  Referring: 
  Function Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 is inline copy in Com_EB_InitRxIPdu/163
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitRxIPdu/163 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_EB_DisableSignalGroupBasedDMFlag/174 (1073741824 (estimated locally),1.00 per call) Com_EB_DisableSignalBasedDMFlag/173 (1073741824 (estimated locally),1.00 per call) 
Com_EB_EnableSignalGroupBasedDMFlag/171 (Com_EB_EnableSignalGroupBasedDMFlag) @06f7a7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_EnableSignalGroupBasedDMFlag/171 is inline copy in Com_EB_HandleRxIPdu_EnableRxDM/152
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleRxIPdu_EnableRxDM/152 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1433445344 (estimated locally),1.34 per call) Com_EB_RxDMSignalGroupQueue.isra.0/329 (473036966 (estimated locally),0.44 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1433445344 (estimated locally),1.34 per call) 
Com_EB_EnableSignalBasedDMFlag/170 (Com_EB_EnableSignalBasedDMFlag) @06f7a460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_EnableSignalBasedDMFlag/170 is inline copy in Com_EB_HandleRxIPdu_EnableRxDM/152
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleRxIPdu_EnableRxDM/152 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1433445344 (estimated locally),1.34 per call) Com_EB_RxDMSignalQueue.isra.0/330 (473036966 (estimated locally),0.44 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1433445344 (estimated locally),1.34 per call) 
Com_GetRxIPduBuffer/165 (Com_GetRxIPduBuffer) @06dcd2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Com_InitStatus/0 (read)Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/305 (196024745 (estimated locally),0.18 per call) Det_ASR40_ReportError/305 (125392644 (estimated locally),0.12 per call) Det_ASR40_ReportError/305 (354334802 (estimated locally),0.33 per call) 
Com_EB_InitStartRxIPdu/164 (Com_EB_InitStartRxIPdu) @06dcd000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_InitStartRxIPdu/164 is inline copy in Com_Init/227
  Availability: local
  Function flags: count:955630209 (estimated locally) body local optimize_size
  Called by: Com_Init/227 (inlined) (955630209 (estimated locally),5.42 per call) 
  Calls: Com_EB_HandleRxIPdu_EnableRxDM/152 (193419554 (estimated locally),1.10 per call) TS_AtomicSetBit_8/308 (193419554 (estimated locally),1.10 per call) Com_EB_InitRxIPdu/163 (955630209 (estimated locally),5.42 per call) 
Com_EB_InitRxIPdu/163 (Com_EB_InitRxIPdu) @06dbce00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitStartRxIPdu/164 (955630209 (estimated locally),5.42 per call) Com_EB_HandleRxIPdu_Start/151 (1341115 (estimated locally),0.04 per call) 
  Calls: Com_EB_DisableSignalAndSignalGroupBasedDMFlag/172 (inlined) (1073741824 (estimated locally),1.00 per call) TS_AtomicClearBit_8/307 (524845004 (estimated locally),0.49 per call) Com_EB_InitRxSignalsWithFilter/162 (inlined) (1073741824 (estimated locally),1.00 per call) TS_MemCpy32/306 (1073741824 (estimated locally),1.00 per call) 
Com_EB_InitRxSignalsWithFilter/162 (Com_EB_InitRxSignalsWithFilter) @06dbc9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_InitRxSignalsWithFilter/162 is inline copy in Com_EB_InitRxIPdu/163
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitRxIPdu/163 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Com_ResetFilerOneEveryN/14 (1758359619 (estimated locally),1.64 per call) Com_EB_SetBuffer/13 (8687547529 (estimated locally),8.09 per call) 
Com_EB_HandleRxIPdu/157 (Com_EB_HandleRxIPdu) @06db0c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_HandleRxIPdu/157 is inline copy in Com_EB_HandlePduGroupRx/147
  Availability: local
  Function flags: count:118111601 (estimated locally) body local optimize_size
  Called by: Com_EB_HandlePduGroupRx/147 (inlined) (118111601 (estimated locally),3.38 per call) 
  Calls: Com_EB_HandleRxIPdu_EnableRxDM/152 (5976447 (estimated locally),0.17 per call) Com_EB_HandleRxIPdu_DisableRxDM/153 (9841649 (estimated locally),0.28 per call) Com_EB_HandleRxIPdu_DisableRxDM/153 (9841649 (estimated locally),0.28 per call) TS_AtomicClearBit_8/307 (9841649 (estimated locally),0.28 per call) Com_EB_HandleRxIPdu_EnableRxDM/152 (6626061 (estimated locally),0.19 per call) Com_EB_HandleRxIPdu_Start/151 (inlined) (6626061 (estimated locally),0.19 per call) 
Com_EB_HandleRxIPdu_DisableRxDM/153 (Com_EB_HandleRxIPdu_DisableRxDM) @06db01c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleRxIPdu/157 (9841649 (estimated locally),0.28 per call) Com_EB_HandleRxIPdu/157 (9841649 (estimated locally),0.28 per call) 
  Calls: Com_EB_DisableSignalAndSignalGroupBasedDMFlag/386 (inlined) (1073741824 (estimated locally),1.00 per call) TS_AtomicClearBit_8/307 (1073741824 (estimated locally),1.00 per call) TS_AtomicClearBit_8/307 (1073741824 (estimated locally),1.00 per call) 
Com_EB_HandleRxIPdu_EnableRxDM/152 (Com_EB_HandleRxIPdu_EnableRxDM) @06db0000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitStartRxIPdu/164 (193419554 (estimated locally),1.10 per call) Com_EB_HandleRxIPdu/157 (5976447 (estimated locally),0.17 per call) Com_EB_HandleRxIPdu/157 (6626061 (estimated locally),0.19 per call) 
  Calls: Com_EB_EnableSignalGroupBasedDMFlag/171 (inlined) (1073741824 (estimated locally),1.00 per call) Com_EB_EnableSignalBasedDMFlag/170 (inlined) (1073741824 (estimated locally),1.00 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (177167401 (estimated locally),0.17 per call) Com_EB_RxDMQueue.isra.0/328 (58465242 (estimated locally),0.05 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (177167401 (estimated locally),0.17 per call) TS_AtomicSetBit_8/308 (1073741824 (estimated locally),1.00 per call) 
Com_EB_HandleRxIPdu_Start/151 (Com_EB_HandleRxIPdu_Start) @06f3bc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Com_EB_HandleRxIPdu_Start/151 is inline copy in Com_EB_HandlePduGroupRx/147
  Availability: local
  Function flags: count:6626061 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleRxIPdu/157 (inlined) (6626061 (estimated locally),0.19 per call) 
  Calls: TS_AtomicSetBit_8/308 (6626061 (estimated locally),0.19 per call) Com_EB_InitRxIPdu/163 (1341115 (estimated locally),0.04 per call) 
Com_EB_HandlePduRxDM/149 (Com_EB_HandlePduRxDM) @06f3b8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Function Com_EB_HandlePduRxDM/149 is inline copy in Com_EB_NotifyReceivers.isra.0/367
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_NotifyReceivers.isra.0/367 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (354334803 (estimated locally),0.33 per call) Com_EB_RxDMQueue.isra.0/328 (78343425 (estimated locally),0.07 per call) Com_EB_RxDMQueue.isra.0/328 (116930485 (estimated locally),0.11 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (354334802 (estimated locally),0.33 per call) 
Com_EB_HandlePduGroupTx/148 (Com_EB_HandlePduGroupTx) @06f3b460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Function Com_EB_HandlePduGroupTx/148 is inline copy in Com_IpduGroupControl/214
  Availability: local
  Function flags: count:503584915 (estimated locally) body local optimize_size
  Called by: Com_IpduGroupControl/214 (inlined) (503584915 (estimated locally),0.47 per call) 
  Calls: Com_EB_HandleTxIPdu/191 (inlined) (1702716772 (estimated locally),1.59 per call) 
Com_EB_HandlePduGroupRx/147 (Com_EB_HandlePduGroupRx) @06f3b2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gConfigPtr/2 (read)
  Referring: 
  Availability: local
  Function flags: count:34931952 (estimated locally) body local optimize_size
  Called by: Com_ReceptionDMControl/215 (503584915 (estimated locally),0.47 per call) Com_IpduGroupControl/214 (503584915 (estimated locally),0.47 per call) 
  Calls: Com_EB_HandleRxIPdu/157 (inlined) (118111601 (estimated locally),3.38 per call) 
Com_EB_Write_DET/146 (Com_EB_Write_DET) @06f3b0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/305 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_A1_EL_DUB_DOC/145 (Com_EB_Write_A1_EL_DUB_DOC) @06f24ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: Com_EB_Write_A1_DL_DUB_DOC/383 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_BO_EL_DUB_DOC/144 (Com_EB_Write_BO_EL_DUB_DOC) @06f24d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: TS_AtomicSetBit_8/308 (536870913 (estimated locally),0.50 per call) TS_AtomicClearBit_8/307 (536870913 (estimated locally),0.50 per call) 
Com_EB_Write_A1_DL_DUB_DOC/143 (Com_EB_Write_A1_DL_DUB_DOC) @06f24b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 383
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: 
Com_EB_Write_BO_DL_DUB_DOC/142 (Com_EB_Write_BO_DL_DUB_DOC) @06f249a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S0_EL_EUB_EOC_E2/141 (Com_EB_Write_AY_S0_EL_EUB_EOC_E2) @06f247e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_64_SX_EL_EUB_EOC_E2/140 (Com_EB_Write_64_SX_EL_EUB_EOC_E2) @06f24620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 (Com_EB_Write_32_SX_EL_EUB_EOC_E2) @06f24460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_EOC_E2/140 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_16_SX_EL_EUB_EOC_E2/138 (Com_EB_Write_16_SX_EL_EUB_EOC_E2) @06f242a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_08_SX_EL_EUB_EOC_E2/137 (Com_EB_Write_08_SX_EL_EUB_EOC_E2) @06f240e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S1_EL_EUB_EOC_E3/136 (Com_EB_Write_AY_S1_EL_EUB_EOC_E3) @06f08ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S0_EL_EUB_EOC_E1/135 (Com_EB_Write_AY_S0_EL_EUB_EOC_E1) @06f08d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_64_SX_EL_EUB_EOC_E1/134 (Com_EB_Write_64_SX_EL_EUB_EOC_E1) @06f08b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 (Com_EB_Write_32_SX_EL_EUB_EOC_E1) @06f089a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_EOC_E1/134 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_16_SX_EL_EUB_EOC_E1/132 (Com_EB_Write_16_SX_EL_EUB_EOC_E1) @06f087e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_08_SX_EL_EUB_EOC_E1/131 (Com_EB_Write_08_SX_EL_EUB_EOC_E1) @06f08620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S0_EL_EUB_DOC_E2/130 (Com_EB_Write_AY_S0_EL_EUB_DOC_E2) @06f08460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_64_SX_EL_EUB_DOC_E2/129 (Com_EB_Write_64_SX_EL_EUB_DOC_E2) @06f082a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 (Com_EB_Write_32_SX_EL_EUB_DOC_E2) @06f080e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_DOC_E2/129 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_16_SX_EL_EUB_DOC_E2/127 (Com_EB_Write_16_SX_EL_EUB_DOC_E2) @06ef6ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_08_SX_EL_EUB_DOC_E2/126 (Com_EB_Write_08_SX_EL_EUB_DOC_E2) @06ef6d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S1_EL_EUB_DOC_E3/125 (Com_EB_Write_AY_S1_EL_EUB_DOC_E3) @06ef6b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S0_EL_EUB_DOC_E1/124 (Com_EB_Write_AY_S0_EL_EUB_DOC_E1) @06ef69a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_64_SX_EL_EUB_DOC_E1/123 (Com_EB_Write_64_SX_EL_EUB_DOC_E1) @06ef67e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 (Com_EB_Write_32_SX_EL_EUB_DOC_E1) @06ef6620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_DOC_E1/123 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_16_SX_EL_EUB_DOC_E1/121 (Com_EB_Write_16_SX_EL_EUB_DOC_E1) @06ef6460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_08_SX_EL_EUB_DOC_E1/120 (Com_EB_Write_08_SX_EL_EUB_DOC_E1) @06ef62a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S0_EL_DUB_EOC_E2/119 (Com_EB_Write_AY_S0_EL_DUB_EOC_E2) @06ef60e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_64_SX_EL_DUB_EOC_E2/118 (Com_EB_Write_64_SX_EL_DUB_EOC_E2) @06edbee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 (Com_EB_Write_32_SX_EL_DUB_EOC_E2) @06edbd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_EOC_E2/118 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_16_SX_EL_DUB_EOC_E2/116 (Com_EB_Write_16_SX_EL_DUB_EOC_E2) @06edbb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_08_SX_EL_DUB_EOC_E2/115 (Com_EB_Write_08_SX_EL_DUB_EOC_E2) @06edb9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S1_EL_DUB_EOC_E3/114 (Com_EB_Write_AY_S1_EL_DUB_EOC_E3) @06edb7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S0_EL_DUB_EOC_E1/113 (Com_EB_Write_AY_S0_EL_DUB_EOC_E1) @06edb620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_64_SX_EL_DUB_EOC_E1/112 (Com_EB_Write_64_SX_EL_DUB_EOC_E1) @06edb460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 (Com_EB_Write_32_SX_EL_DUB_EOC_E1) @06edb2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_EOC_E1/112 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_16_SX_EL_DUB_EOC_E1/110 (Com_EB_Write_16_SX_EL_DUB_EOC_E1) @06edb0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111602 (estimated locally),1.00 per call) 
Com_EB_Write_08_SX_EL_DUB_EOC_E1/109 (Com_EB_Write_08_SX_EL_DUB_EOC_E1) @06ecbee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S0_EL_DUB_DOC_E2/108 (Com_EB_Write_AY_S0_EL_DUB_DOC_E2) @06ecbd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_64_SX_EL_DUB_DOC_E2/107 (Com_EB_Write_64_SX_EL_DUB_DOC_E2) @06ecbb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 (Com_EB_Write_32_SX_EL_DUB_DOC_E2) @06ecb9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_DOC_E2/107 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_16_SX_EL_DUB_DOC_E2/105 (Com_EB_Write_16_SX_EL_DUB_DOC_E2) @06ecb7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_08_SX_EL_DUB_DOC_E2/104 (Com_EB_Write_08_SX_EL_DUB_DOC_E2) @06ecb620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S1_EL_DUB_DOC_E3/103 (Com_EB_Write_AY_S1_EL_DUB_DOC_E3) @06ecb460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S0_EL_DUB_DOC_E1/102 (Com_EB_Write_AY_S0_EL_DUB_DOC_E1) @06ecb2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_64_SX_EL_DUB_DOC_E1/101 (Com_EB_Write_64_SX_EL_DUB_DOC_E1) @06ecb0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 (Com_EB_Write_32_SX_EL_DUB_DOC_E1) @06e71ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_DOC_E1/101 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_16_SX_EL_DUB_DOC_E1/99 (Com_EB_Write_16_SX_EL_DUB_DOC_E1) @06e71d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Write_08_SX_EL_DUB_DOC_E1/98 (Com_EB_Write_08_SX_EL_DUB_DOC_E1) @06e71b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Write_AY_S0_DL_EUB_EOC_E2/97 (Com_EB_Write_AY_S0_DL_EUB_EOC_E2) @06e719a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_64_SX_DL_EUB_EOC_E2/96 (Com_EB_Write_64_SX_DL_EUB_EOC_E2) @06e717e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 (Com_EB_Write_32_SX_DL_EUB_EOC_E2) @06e71620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_EUB_EOC_E2.part.0/334 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_EOC_E2/96 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_EOC_E2.part.0/327 (536870912 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Write_16_SX_DL_EUB_EOC_E2/94 (Com_EB_Write_16_SX_DL_EUB_EOC_E2) @06e71460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_08_SX_DL_EUB_EOC_E2/93 (Com_EB_Write_08_SX_DL_EUB_EOC_E2) @06e712a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S1_DL_EUB_EOC_E3/92 (Com_EB_Write_AY_S1_DL_EUB_EOC_E3) @06e710e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S0_DL_EUB_EOC_E1/91 (Com_EB_Write_AY_S0_DL_EUB_EOC_E1) @06e54ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_64_SX_DL_EUB_EOC_E1/90 (Com_EB_Write_64_SX_DL_EUB_EOC_E1) @06e54d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 (Com_EB_Write_32_SX_DL_EUB_EOC_E1) @06e54b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_EUB_EOC_E1.part.0/335 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_EOC_E1/90 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_EOC_E1.part.0/326 (536870912 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Write_16_SX_DL_EUB_EOC_E1/88 (Com_EB_Write_16_SX_DL_EUB_EOC_E1) @06e549a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_08_SX_DL_EUB_EOC_E1/87 (Com_EB_Write_08_SX_DL_EUB_EOC_E1) @06e547e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S0_DL_EUB_DOC_E2/86 (Com_EB_Write_AY_S0_DL_EUB_DOC_E2) @06e54620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_64_SX_DL_EUB_DOC_E2/85 (Com_EB_Write_64_SX_DL_EUB_DOC_E2) @06e54460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 (Com_EB_Write_32_SX_DL_EUB_DOC_E2) @06e542a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_EUB_DOC_E2.part.0/336 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_DOC_E2/85 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_DOC_E2.part.0/325 (536870912 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Write_16_SX_DL_EUB_DOC_E2/83 (Com_EB_Write_16_SX_DL_EUB_DOC_E2) @06e540e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_08_SX_DL_EUB_DOC_E2/82 (Com_EB_Write_08_SX_DL_EUB_DOC_E2) @06e44ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S1_DL_EUB_DOC_E3/81 (Com_EB_Write_AY_S1_DL_EUB_DOC_E3) @06e44d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S0_DL_EUB_DOC_E1/80 (Com_EB_Write_AY_S0_DL_EUB_DOC_E1) @06e44b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_64_SX_DL_EUB_DOC_E1/79 (Com_EB_Write_64_SX_DL_EUB_DOC_E1) @06e449a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 (Com_EB_Write_32_SX_DL_EUB_DOC_E1) @06e447e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_EUB_DOC_E1.part.0/337 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_DOC_E1/79 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_EUB_DOC_E1.part.0/324 (536870912 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Write_16_SX_DL_EUB_DOC_E1/77 (Com_EB_Write_16_SX_DL_EUB_DOC_E1) @06e44620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_08_SX_DL_EUB_DOC_E1/76 (Com_EB_Write_08_SX_DL_EUB_DOC_E1) @06e44460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S0_DL_DUB_EOC_E2/75 (Com_EB_Write_AY_S0_DL_DUB_EOC_E2) @06e442a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_64_SX_DL_DUB_EOC_E2/74 (Com_EB_Write_64_SX_DL_DUB_EOC_E2) @06e440e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 (Com_EB_Write_32_SX_DL_DUB_EOC_E2) @06e18ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_DUB_EOC_E2.part.0/338 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_EOC_E2/74 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_EOC_E2.part.0/323 (536870912 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Write_16_SX_DL_DUB_EOC_E2/72 (Com_EB_Write_16_SX_DL_DUB_EOC_E2) @06e18d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_08_SX_DL_DUB_EOC_E2/71 (Com_EB_Write_08_SX_DL_DUB_EOC_E2) @06e18b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S1_DL_DUB_EOC_E3/70 (Com_EB_Write_AY_S1_DL_DUB_EOC_E3) @06e189a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S0_DL_DUB_EOC_E1/69 (Com_EB_Write_AY_S0_DL_DUB_EOC_E1) @06e187e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_64_SX_DL_DUB_EOC_E1/68 (Com_EB_Write_64_SX_DL_DUB_EOC_E1) @06e18620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 (Com_EB_Write_32_SX_DL_DUB_EOC_E1) @06e18460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_DUB_EOC_E1.part.0/339 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_EOC_E1/68 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_EOC_E1.part.0/322 (536870912 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Write_16_SX_DL_DUB_EOC_E1/66 (Com_EB_Write_16_SX_DL_DUB_EOC_E1) @06e182a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111602 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_08_SX_DL_DUB_EOC_E1/65 (Com_EB_Write_08_SX_DL_DUB_EOC_E1) @06e180e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S0_DL_DUB_DOC_E2/64 (Com_EB_Write_AY_S0_DL_DUB_DOC_E2) @06e07ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_64_SX_DL_DUB_DOC_E2/63 (Com_EB_Write_64_SX_DL_DUB_DOC_E2) @06e07d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 (Com_EB_Write_32_SX_DL_DUB_DOC_E2) @06e07b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_DUB_DOC_E2.part.0/340 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_DOC_E2/63 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_DOC_E2.part.0/321 (536870912 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Write_16_SX_DL_DUB_DOC_E2/61 (Com_EB_Write_16_SX_DL_DUB_DOC_E2) @06e079a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_08_SX_DL_DUB_DOC_E2/60 (Com_EB_Write_08_SX_DL_DUB_DOC_E2) @06e077e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S1_DL_DUB_DOC_E3/59 (Com_EB_Write_AY_S1_DL_DUB_DOC_E3) @06e07620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_AY_S0_DL_DUB_DOC_E1/58 (Com_EB_Write_AY_S0_DL_DUB_DOC_E1) @06e07460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_64_SX_DL_DUB_DOC_E1/57 (Com_EB_Write_64_SX_DL_DUB_DOC_E1) @06e072a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320 (inlined) (536870912 (estimated locally),0.50 per call) 
Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 (Com_EB_Write_32_SX_DL_DUB_DOC_E1) @06e070e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_EL_DUB_DOC_E1.part.0/341 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_DOC_E1/57 (536870913 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320 (536870912 (estimated locally),0.50 per call) Com_EB_Write_64_SX_DL_DUB_DOC_E1.part.0/320 (536870912 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Write_16_SX_DL_DUB_DOC_E1/55 (Com_EB_Write_16_SX_DL_DUB_DOC_E1) @06d79b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Write_08_SX_DL_DUB_DOC_E1/54 (Com_EB_Write_08_SX_DL_DUB_DOC_E1) @06d79e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_WriteFuncs/53 (addr)Com_WriteFuncs/53 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_WriteFuncs/53 (Com_WriteFuncs) @06d655a0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: Com_EB_Write_08_SX_DL_DUB_DOC_E1/54 (addr)Com_EB_Write_16_SX_DL_DUB_DOC_E1/55 (addr)Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 (addr)Com_EB_Write_AY_S0_DL_DUB_DOC_E1/58 (addr)Com_EB_Write_08_SX_DL_DUB_DOC_E1/54 (addr)Com_EB_Write_16_SX_DL_DUB_DOC_E1/55 (addr)Com_EB_Write_32_SX_DL_DUB_DOC_E1/56 (addr)Com_EB_Write_AY_S1_DL_DUB_DOC_E3/59 (addr)Com_EB_Write_08_SX_DL_DUB_DOC_E2/60 (addr)Com_EB_Write_16_SX_DL_DUB_DOC_E2/61 (addr)Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 (addr)Com_EB_Write_AY_S0_DL_DUB_DOC_E2/64 (addr)Com_EB_Write_08_SX_DL_DUB_DOC_E2/60 (addr)Com_EB_Write_16_SX_DL_DUB_DOC_E2/61 (addr)Com_EB_Write_32_SX_DL_DUB_DOC_E2/62 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_08_SX_DL_DUB_EOC_E1/65 (addr)Com_EB_Write_16_SX_DL_DUB_EOC_E1/66 (addr)Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 (addr)Com_EB_Write_AY_S0_DL_DUB_EOC_E1/69 (addr)Com_EB_Write_08_SX_DL_DUB_EOC_E1/65 (addr)Com_EB_Write_16_SX_DL_DUB_EOC_E1/66 (addr)Com_EB_Write_32_SX_DL_DUB_EOC_E1/67 (addr)Com_EB_Write_AY_S1_DL_DUB_EOC_E3/70 (addr)Com_EB_Write_08_SX_DL_DUB_EOC_E2/71 (addr)Com_EB_Write_16_SX_DL_DUB_EOC_E2/72 (addr)Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 (addr)Com_EB_Write_AY_S0_DL_DUB_EOC_E2/75 (addr)Com_EB_Write_08_SX_DL_DUB_EOC_E2/71 (addr)Com_EB_Write_16_SX_DL_DUB_EOC_E2/72 (addr)Com_EB_Write_32_SX_DL_DUB_EOC_E2/73 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_08_SX_DL_EUB_DOC_E1/76 (addr)Com_EB_Write_16_SX_DL_EUB_DOC_E1/77 (addr)Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 (addr)Com_EB_Write_AY_S0_DL_EUB_DOC_E1/80 (addr)Com_EB_Write_08_SX_DL_EUB_DOC_E1/76 (addr)Com_EB_Write_16_SX_DL_EUB_DOC_E1/77 (addr)Com_EB_Write_32_SX_DL_EUB_DOC_E1/78 (addr)Com_EB_Write_AY_S1_DL_EUB_DOC_E3/81 (addr)Com_EB_Write_08_SX_DL_EUB_DOC_E2/82 (addr)Com_EB_Write_16_SX_DL_EUB_DOC_E2/83 (addr)Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 (addr)Com_EB_Write_AY_S0_DL_EUB_DOC_E2/86 (addr)Com_EB_Write_08_SX_DL_EUB_DOC_E2/82 (addr)Com_EB_Write_16_SX_DL_EUB_DOC_E2/83 (addr)Com_EB_Write_32_SX_DL_EUB_DOC_E2/84 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_08_SX_DL_EUB_EOC_E1/87 (addr)Com_EB_Write_16_SX_DL_EUB_EOC_E1/88 (addr)Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 (addr)Com_EB_Write_AY_S0_DL_EUB_EOC_E1/91 (addr)Com_EB_Write_08_SX_DL_EUB_EOC_E1/87 (addr)Com_EB_Write_16_SX_DL_EUB_EOC_E1/88 (addr)Com_EB_Write_32_SX_DL_EUB_EOC_E1/89 (addr)Com_EB_Write_AY_S1_DL_EUB_EOC_E3/92 (addr)Com_EB_Write_08_SX_DL_EUB_EOC_E2/93 (addr)Com_EB_Write_16_SX_DL_EUB_EOC_E2/94 (addr)Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 (addr)Com_EB_Write_AY_S0_DL_EUB_EOC_E2/97 (addr)Com_EB_Write_08_SX_DL_EUB_EOC_E2/93 (addr)Com_EB_Write_16_SX_DL_EUB_EOC_E2/94 (addr)Com_EB_Write_32_SX_DL_EUB_EOC_E2/95 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_08_SX_EL_DUB_DOC_E1/98 (addr)Com_EB_Write_16_SX_EL_DUB_DOC_E1/99 (addr)Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 (addr)Com_EB_Write_AY_S0_EL_DUB_DOC_E1/102 (addr)Com_EB_Write_08_SX_EL_DUB_DOC_E1/98 (addr)Com_EB_Write_16_SX_EL_DUB_DOC_E1/99 (addr)Com_EB_Write_32_SX_EL_DUB_DOC_E1/100 (addr)Com_EB_Write_AY_S1_EL_DUB_DOC_E3/103 (addr)Com_EB_Write_08_SX_EL_DUB_DOC_E2/104 (addr)Com_EB_Write_16_SX_EL_DUB_DOC_E2/105 (addr)Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 (addr)Com_EB_Write_AY_S0_EL_DUB_DOC_E2/108 (addr)Com_EB_Write_08_SX_EL_DUB_DOC_E2/104 (addr)Com_EB_Write_16_SX_EL_DUB_DOC_E2/105 (addr)Com_EB_Write_32_SX_EL_DUB_DOC_E2/106 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_08_SX_EL_DUB_EOC_E1/109 (addr)Com_EB_Write_16_SX_EL_DUB_EOC_E1/110 (addr)Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 (addr)Com_EB_Write_AY_S0_EL_DUB_EOC_E1/113 (addr)Com_EB_Write_08_SX_EL_DUB_EOC_E1/109 (addr)Com_EB_Write_16_SX_EL_DUB_EOC_E1/110 (addr)Com_EB_Write_32_SX_EL_DUB_EOC_E1/111 (addr)Com_EB_Write_AY_S1_EL_DUB_EOC_E3/114 (addr)Com_EB_Write_08_SX_EL_DUB_EOC_E2/115 (addr)Com_EB_Write_16_SX_EL_DUB_EOC_E2/116 (addr)Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 (addr)Com_EB_Write_AY_S0_EL_DUB_EOC_E2/119 (addr)Com_EB_Write_08_SX_EL_DUB_EOC_E2/115 (addr)Com_EB_Write_16_SX_EL_DUB_EOC_E2/116 (addr)Com_EB_Write_32_SX_EL_DUB_EOC_E2/117 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_08_SX_EL_EUB_DOC_E1/120 (addr)Com_EB_Write_16_SX_EL_EUB_DOC_E1/121 (addr)Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 (addr)Com_EB_Write_AY_S0_EL_EUB_DOC_E1/124 (addr)Com_EB_Write_08_SX_EL_EUB_DOC_E1/120 (addr)Com_EB_Write_16_SX_EL_EUB_DOC_E1/121 (addr)Com_EB_Write_32_SX_EL_EUB_DOC_E1/122 (addr)Com_EB_Write_AY_S1_EL_EUB_DOC_E3/125 (addr)Com_EB_Write_08_SX_EL_EUB_DOC_E2/126 (addr)Com_EB_Write_16_SX_EL_EUB_DOC_E2/127 (addr)Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 (addr)Com_EB_Write_AY_S0_EL_EUB_DOC_E2/130 (addr)Com_EB_Write_08_SX_EL_EUB_DOC_E2/126 (addr)Com_EB_Write_16_SX_EL_EUB_DOC_E2/127 (addr)Com_EB_Write_32_SX_EL_EUB_DOC_E2/128 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_08_SX_EL_EUB_EOC_E1/131 (addr)Com_EB_Write_16_SX_EL_EUB_EOC_E1/132 (addr)Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 (addr)Com_EB_Write_AY_S0_EL_EUB_EOC_E1/135 (addr)Com_EB_Write_08_SX_EL_EUB_EOC_E1/131 (addr)Com_EB_Write_16_SX_EL_EUB_EOC_E1/132 (addr)Com_EB_Write_32_SX_EL_EUB_EOC_E1/133 (addr)Com_EB_Write_AY_S1_EL_EUB_EOC_E3/136 (addr)Com_EB_Write_08_SX_EL_EUB_EOC_E2/137 (addr)Com_EB_Write_16_SX_EL_EUB_EOC_E2/138 (addr)Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 (addr)Com_EB_Write_AY_S0_EL_EUB_EOC_E2/141 (addr)Com_EB_Write_08_SX_EL_EUB_EOC_E2/137 (addr)Com_EB_Write_16_SX_EL_EUB_EOC_E2/138 (addr)Com_EB_Write_32_SX_EL_EUB_EOC_E2/139 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_BO_DL_DUB_DOC/142 (addr)Com_EB_Write_A1_DL_DUB_DOC/143 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_DUB_DOC_E1/57 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_DUB_DOC_E1/57 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_DUB_DOC_E2/63 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_DUB_DOC_E2/63 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_DUB_EOC_E1/68 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_DUB_EOC_E1/68 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_DUB_EOC_E2/74 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_DUB_EOC_E2/74 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_EUB_DOC_E1/79 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_EUB_DOC_E1/79 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_EUB_DOC_E2/85 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_EUB_DOC_E2/85 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_EUB_EOC_E1/90 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_EUB_EOC_E1/90 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_EUB_EOC_E2/96 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_DL_EUB_EOC_E2/96 (addr)Com_EB_Write_BO_EL_DUB_DOC/144 (addr)Com_EB_Write_A1_EL_DUB_DOC/145 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_DUB_DOC_E1/101 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_DUB_DOC_E1/101 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_DUB_DOC_E2/107 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_DUB_DOC_E2/107 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_DUB_EOC_E1/112 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_DUB_EOC_E1/112 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_DUB_EOC_E2/118 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_DUB_EOC_E2/118 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_EUB_DOC_E1/123 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_EUB_DOC_E1/123 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_EUB_DOC_E2/129 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_EUB_DOC_E2/129 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_EUB_EOC_E1/134 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_EUB_EOC_E1/134 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_EUB_EOC_E2/140 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_64_SX_EL_EUB_EOC_E2/140 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_DET/146 (addr)Com_EB_Write_SignalExt/200 (addr)
  Referring: Com_EB_WriteDynSignal_ExitArea_0/202 (read)Com_EB_Write_SignalExt/200 (read)Com_EB_RouteSignalHelper_Write/233 (read)Com_SendSignal/278 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Com_EB_Read_ZS/52 (Com_EB_Read_ZS) @06d798c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/305 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_DET/51 (Com_EB_Read_DET) @06d79700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/305 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_A1_EL/50 (Com_EB_Read_A1_EL) @06d79540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: Com_EB_Read_A1_DL/382 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_BO_EL/49 (Com_EB_Read_BO_EL) @06d792a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: Com_EB_Read_BO_DL/47 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_A1_DL/48 (Com_EB_Read_A1_DL) @06d79000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 382
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: 
Com_EB_Read_BO_DL/47 (Com_EB_Read_BO_DL) @06d6de00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: Com_EB_Read_BO_EL/49 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Com_EB_Read_32_EL_SignExt/46 (Com_EB_Read_32_EL_SignExt) @06d6db60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Com_ReadFuncs/18 (read)
  Referring: Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_32_DL_SignExt/45 (Com_EB_Read_32_DL_SignExt) @06d6d8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Com_ReadFuncs/18 (read)
  Referring: Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_16_EL_SignExt/44 (Com_EB_Read_16_EL_SignExt) @06d6d620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Com_ReadFuncs/18 (read)
  Referring: Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_16_DL_SignExt/43 (Com_EB_Read_16_DL_SignExt) @06d6d380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Com_ReadFuncs/18 (read)
  Referring: Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_08_EL_SignExt/42 (Com_EB_Read_08_EL_SignExt) @06d6d0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Com_ReadFuncs/18 (read)
  Referring: Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_08_DL_SignExt/41 (Com_EB_Read_08_DL_SignExt) @06d60e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Com_ReadFuncs/18 (read)
  Referring: Com_ReadFuncs/18 (addr)Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_AY_EL_E3/40 (Com_EB_Read_AY_EL_E3) @06d60b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (1073741824 (estimated locally),1.00 per call) TS_MemCpy32/306 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_AY_DL_E3/39 (Com_EB_Read_AY_DL_E3) @06d608c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: TS_MemCpy32/306 (1073741824 (estimated locally),1.00 per call) 
Com_EB_Read_AY_EL_E2/38 (Com_EB_Read_AY_EL_E2) @06d60620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Read_64_EL_E2/37 (Com_EB_Read_64_EL_E2) @06d60460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Read_32_EL_E2/36 (536870913 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_DL_E2/26 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_DL_E2/26 (536870913 (estimated locally),0.50 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870913 (estimated locally),0.50 per call) 
Com_EB_Read_32_EL_E2/36 (Com_EB_Read_32_EL_E2) @06d602a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Read_64_EL_E2/37 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Read_16_EL_E2/35 (Com_EB_Read_16_EL_E2) @06d600e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:178956970 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (178956971 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (178956970 (estimated locally),1.00 per call) 
Com_EB_Read_08_EL_E2/34 (Com_EB_Read_08_EL_E2) @06d46ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (233860969 (estimated locally),0.22 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (233860969 (estimated locally),0.22 per call) 
Com_EB_Read_AY_EL_E1/33 (Com_EB_Read_AY_EL_E1) @06d46d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Read_64_EL_E1/32 (Com_EB_Read_64_EL_E1) @06d46b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Read_32_EL_E1/31 (536870913 (estimated locally),0.50 per call) SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_DL_E1/21 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_DL_E1/21 (536870913 (estimated locally),0.50 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (536870913 (estimated locally),0.50 per call) 
Com_EB_Read_32_EL_E1/31 (Com_EB_Read_32_EL_E1) @06d469a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Read_64_EL_E1/32 (536870913 (estimated locally),0.50 per call) 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (118111601 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (118111600 (estimated locally),1.00 per call) 
Com_EB_Read_16_EL_E1/30 (Com_EB_Read_16_EL_E1) @06d467e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:178956970 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (178956971 (estimated locally),1.00 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (178956970 (estimated locally),1.00 per call) 
Com_EB_Read_08_EL_E1/29 (Com_EB_Read_08_EL_E1) @06d46620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0/304 (233860969 (estimated locally),0.22 per call) SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0/303 (233860969 (estimated locally),0.22 per call) 
Com_EB_Read_AY_DL_E2/28 (Com_EB_Read_AY_DL_E2) @06d46460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Read_64_DL_E2/27 (Com_EB_Read_64_DL_E2) @06d462a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Read_32_DL_E2/26 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_DL_E2/26 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_DL_E2/26 (536870913 (estimated locally),0.50 per call) 
Com_EB_Read_32_DL_E2/26 (Com_EB_Read_32_DL_E2) @06d460e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Read_64_EL_E2/37 (536870913 (estimated locally),0.50 per call) Com_EB_Read_64_EL_E2/37 (536870913 (estimated locally),0.50 per call) Com_EB_Read_64_DL_E2/27 (536870913 (estimated locally),0.50 per call) Com_EB_Read_64_DL_E2/27 (536870913 (estimated locally),0.50 per call) Com_EB_Read_64_DL_E2/27 (536870913 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Read_16_DL_E2/25 (Com_EB_Read_16_DL_E2) @06cf12a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:178956970 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Read_08_DL_E2/24 (Com_EB_Read_08_DL_E2) @06cf1e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Read_AY_DL_E1/23 (Com_EB_Read_AY_DL_E1) @06cf1c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Read_64_DL_E1/22 (Com_EB_Read_64_DL_E1) @06cf1a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Com_EB_Read_32_DL_E1/21 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_DL_E1/21 (536870913 (estimated locally),0.50 per call) Com_EB_Read_32_DL_E1/21 (536870913 (estimated locally),0.50 per call) 
Com_EB_Read_32_DL_E1/21 (Com_EB_Read_32_DL_E1) @06cf18c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:118111600 (estimated locally) body optimize_size
  Called by: Com_EB_Read_64_EL_E1/32 (536870913 (estimated locally),0.50 per call) Com_EB_Read_64_EL_E1/32 (536870913 (estimated locally),0.50 per call) Com_EB_Read_64_DL_E1/22 (536870913 (estimated locally),0.50 per call) Com_EB_Read_64_DL_E1/22 (536870913 (estimated locally),0.50 per call) Com_EB_Read_64_DL_E1/22 (536870913 (estimated locally),0.50 per call) 
  Calls: 
Com_EB_Read_16_DL_E1/20 (Com_EB_Read_16_DL_E1) @06cf1700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:178956970 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_EB_Read_08_DL_E1/19 (Com_EB_Read_08_DL_E1) @06cf1540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Com_ReadFuncs/18 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Com_ReadFuncs/18 (Com_ReadFuncs) @06c0cb40
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: Com_EB_Read_08_DL_E1/19 (addr)Com_EB_Read_16_DL_E1/20 (addr)Com_EB_Read_32_DL_E1/21 (addr)Com_EB_Read_AY_DL_E1/23 (addr)Com_EB_Read_08_DL_E2/24 (addr)Com_EB_Read_16_DL_E2/25 (addr)Com_EB_Read_32_DL_E2/26 (addr)Com_EB_Read_AY_DL_E2/28 (addr)Com_EB_Read_08_EL_E1/29 (addr)Com_EB_Read_16_EL_E1/30 (addr)Com_EB_Read_32_EL_E1/31 (addr)Com_EB_Read_AY_EL_E1/33 (addr)Com_EB_Read_08_EL_E2/34 (addr)Com_EB_Read_16_EL_E2/35 (addr)Com_EB_Read_32_EL_E2/36 (addr)Com_EB_Read_AY_EL_E2/38 (addr)Com_EB_Read_08_DL_SignExt/41 (addr)Com_EB_Read_16_DL_SignExt/43 (addr)Com_EB_Read_32_DL_SignExt/45 (addr)Com_EB_Read_AY_DL_E3/39 (addr)Com_EB_Read_08_DL_SignExt/41 (addr)Com_EB_Read_16_DL_SignExt/43 (addr)Com_EB_Read_32_DL_SignExt/45 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_08_EL_SignExt/42 (addr)Com_EB_Read_16_EL_SignExt/44 (addr)Com_EB_Read_32_EL_SignExt/46 (addr)Com_EB_Read_AY_EL_E3/40 (addr)Com_EB_Read_08_EL_SignExt/42 (addr)Com_EB_Read_16_EL_SignExt/44 (addr)Com_EB_Read_32_EL_SignExt/46 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_BO_DL/47 (addr)Com_EB_Read_A1_DL/48 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_64_DL_E1/22 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_ZS/52 (addr)Com_EB_Read_64_DL_E2/27 (addr)Com_EB_Read_BO_EL/49 (addr)Com_EB_Read_A1_EL/50 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_64_EL_E1/32 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_64_EL_E2/37 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_SignalExt/260 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)Com_EB_Read_DET/51 (addr)
  Referring: Com_EB_Read_16_EL_SignExt/44 (read)Com_EB_Read_08_EL_SignExt/42 (read)Com_EB_RouteSignalHelper/232 (read)Com_EB_Read_16_DL_SignExt/43 (read)Com_EB_Read_08_DL_SignExt/41 (read)Com_EB_SetBuffer/13 (read)Com_EB_CalculateFilter_Uint32/6 (read)Com_EB_CalculateFilter_Sint8/7 (read)Com_EB_CalculateFilter_Sint16/8 (read)Com_EB_CalculateFilter_Sint32/9 (read)Com_EB_Read_32_DL_SignExt/45 (read)Com_EB_SetBuffer/13 (read)Com_EB_CalculateFilter_Sint64/11 (read)Com_EB_SetBuffer/13 (read)Com_EB_SetBuffer/13 (read)Com_EB_SetBuffer/13 (read)Com_EB_Read_SignalExt.part.0/332 (read)Com_EB_CalculateFilter_Uint64/10 (read)Com_EB_Read_32_EL_SignExt/46 (read)Com_EB_Read_SignalExt/260 (read)Com_EB_CalculateFilter_Uint8/4 (read)Com_EB_CalculateFilter_Uint16/5 (read)Com_EB_SetBuffer/13 (read)Com_EB_SetBuffer/13 (read)Com_EB_RouteSignalHelper/232 (read)Com_EB_RouteSignalHelper/232 (read)Com_EB_RouteSignalHelper/232 (read)Com_EB_RouteSignalHelper/232 (read)Com_ReceiveSignal/262 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Com_IsValidConfig/17 (Com_IsValidConfig) @06cb0b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Com_Init/227 (176285968 (estimated locally),1.00 per call) 
  Calls: Com_IsValidConfig.part.0/379 (inlined) (66369400 (estimated locally),0.06 per call) TS_PlatformSigIsValid/301 (574129754 (estimated locally),0.53 per call) 
Com_EB_CbkTxPrepDummyCbk/16 (Com_EB_CbkTxPrepDummyCbk) @06cb09a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: Com_EB_TxDMDummyCbk/384 (inlined) (1073741824 (estimated locally),1.00 per call) 
Com_EB_TxDMDummyCbk/15 (Com_EB_TxDMDummyCbk) @06cb07e0
  Type: function definition analyzed
  Visibility: externally_visible public
  previous sharing asm name: 384
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: 
Com_ResetFilerOneEveryN/14 (Com_ResetFilerOneEveryN) @06cb0620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gConfigPtr/2 (read)Com_gDataMemPtr/309 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_InitTx_Signal/188 (173338695 (estimated locally),0.16 per call) Com_EB_InitRxSignalsWithFilter/162 (1758359619 (estimated locally),1.64 per call) 
  Calls: 
Com_EB_SetBuffer/13 (Com_EB_SetBuffer) @06cb0380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_gDataMemPtr/309 (read)Com_gConfigPtr/2 (read)Com_ReadFuncs/18 (read)Com_gConfigPtr/2 (read)Com_ReadFuncs/18 (read)Com_gConfigPtr/2 (read)Com_ReadFuncs/18 (read)Com_gConfigPtr/2 (read)Com_ReadFuncs/18 (read)Com_gConfigPtr/2 (read)Com_ReadFuncs/18 (read)Com_gConfigPtr/2 (read)Com_ReadFuncs/18 (read)Com_gConfigPtr/2 (read)Com_ReadFuncs/18 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleRxSignalsWithBuffer.isra.0/366 (60501637 (estimated locally),0.06 per call) Com_EB_InitTx_Signal/188 (217325345 (estimated locally),0.20 per call) Com_EB_InitRxSignalsWithFilter/162 (8687547529 (estimated locally),8.09 per call) 
  Calls: TS_AtomicClearBit_8/307 (88583701 (estimated locally),0.08 per call) TS_AtomicSetBit_8/308 (45634028 (estimated locally),0.04 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
   Indirect call(134217728 (estimated locally),0.12 per call) 
Com_EB_CalculateFilter/12 (Com_EB_CalculateFilter) @06cb01c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Com_EB_HandleRxSignalsWithBuffer.isra.0/366 (1758359619 (estimated locally),1.64 per call) Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 (955630223 (estimated locally),8.09 per call) 
  Calls: Com_EB_CalculateFilter_Uint64/10 (inlined) (107374182 (estimated locally),0.10 per call) Com_EB_CalculateFilter_Sint64/11 (inlined) (107374182 (estimated locally),0.10 per call) Com_EB_CalculateFilter_Sint32/9 (inlined) (107374182 (estimated locally),0.10 per call) Com_EB_CalculateFilter_Sint16/8 (inlined) (107374182 (estimated locally),0.10 per call) Com_EB_CalculateFilter_Sint8/7 (inlined) (107374182 (estimated locally),0.10 per call) Com_EB_CalculateFilter_Uint32/6 (inlined) (107374182 (estimated locally),0.10 per call) Com_EB_CalculateFilter_Uint16/5 (inlined) (107374182 (estimated locally),0.10 per call) Com_EB_CalculateFilter_Uint8/4 (inlined) (107374182 (estimated locally),0.10 per call) Com_EB_CalculateFilter_Bool.isra.0/363 (inlined) (107374182 (estimated locally),0.10 per call) 
Com_EB_CalculateFilter_Sint64/11 (Com_EB_CalculateFilter_Sint64) @06cb0000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_ReadFuncs/18 (read)
  Referring: 
  Function Com_EB_CalculateFilter_Sint64/11 is inline copy in Com_EB_CalculateFilter/12
  Availability: local
  Function flags: count:107374182 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter/12 (inlined) (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterSint64/225 (107374182 (estimated locally),0.10 per call) 
   Indirect call(107374182 (estimated locally),0.10 per call) 
Com_EB_CalculateFilter_Uint64/10 (Com_EB_CalculateFilter_Uint64) @06c8be00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_ReadFuncs/18 (read)
  Referring: 
  Function Com_EB_CalculateFilter_Uint64/10 is inline copy in Com_EB_CalculateFilter/12
  Availability: local
  Function flags: count:107374182 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter/12 (inlined) (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterUint64/224 (107374182 (estimated locally),0.10 per call) 
   Indirect call(107374182 (estimated locally),0.10 per call) 
Com_EB_CalculateFilter_Sint32/9 (Com_EB_CalculateFilter_Sint32) @06c8bc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_ReadFuncs/18 (read)
  Referring: 
  Function Com_EB_CalculateFilter_Sint32/9 is inline copy in Com_EB_CalculateFilter/12
  Availability: local
  Function flags: count:107374182 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter/12 (inlined) (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterSint32/223 (107374182 (estimated locally),0.10 per call) 
   Indirect call(107374182 (estimated locally),0.10 per call) 
Com_EB_CalculateFilter_Sint16/8 (Com_EB_CalculateFilter_Sint16) @06c8ba80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_ReadFuncs/18 (read)
  Referring: 
  Function Com_EB_CalculateFilter_Sint16/8 is inline copy in Com_EB_CalculateFilter/12
  Availability: local
  Function flags: count:107374182 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter/12 (inlined) (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterSint16/221 (107374182 (estimated locally),0.10 per call) 
   Indirect call(107374182 (estimated locally),0.10 per call) 
Com_EB_CalculateFilter_Sint8/7 (Com_EB_CalculateFilter_Sint8) @06c8b8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_ReadFuncs/18 (read)
  Referring: 
  Function Com_EB_CalculateFilter_Sint8/7 is inline copy in Com_EB_CalculateFilter/12
  Availability: local
  Function flags: count:107374182 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter/12 (inlined) (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterSint8/219 (107374182 (estimated locally),0.10 per call) 
   Indirect call(107374182 (estimated locally),0.10 per call) 
Com_EB_CalculateFilter_Uint32/6 (Com_EB_CalculateFilter_Uint32) @06c8b700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_ReadFuncs/18 (read)
  Referring: 
  Function Com_EB_CalculateFilter_Uint32/6 is inline copy in Com_EB_CalculateFilter/12
  Availability: local
  Function flags: count:107374182 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter/12 (inlined) (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterUint32/222 (107374182 (estimated locally),0.10 per call) 
   Indirect call(107374182 (estimated locally),0.10 per call) 
Com_EB_CalculateFilter_Uint16/5 (Com_EB_CalculateFilter_Uint16) @06c8b540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_ReadFuncs/18 (read)
  Referring: 
  Function Com_EB_CalculateFilter_Uint16/5 is inline copy in Com_EB_CalculateFilter/12
  Availability: local
  Function flags: count:107374182 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter/12 (inlined) (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterUint16/220 (107374182 (estimated locally),0.10 per call) 
   Indirect call(107374182 (estimated locally),0.10 per call) 
Com_EB_CalculateFilter_Uint8/4 (Com_EB_CalculateFilter_Uint8) @06c8b380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Com_ReadFuncs/18 (read)
  Referring: 
  Function Com_EB_CalculateFilter_Uint8/4 is inline copy in Com_EB_CalculateFilter/12
  Availability: local
  Function flags: count:107374182 (estimated locally) body local optimize_size
  Called by: Com_EB_CalculateFilter/12 (inlined) (107374182 (estimated locally),0.10 per call) 
  Calls: Com_EB_FilterUint8/218 (107374182 (estimated locally),0.10 per call) 
   Indirect call(107374182 (estimated locally),0.10 per call) 
Com_gConfigPtr/2 (Com_gConfigPtr) @06c0c558
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Com_Init/227 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_MainFunctionTx_hlp/253 (read)Com_MainFunctionTx/254 (read)Com_EB_CheckTxDMforPdu/250 (read)Com_EB_SendUponSendApiCall/175 (read)Com_EB_SendUponSendApiCall/175 (read)Com_EB_SendUponSendApiCall/175 (read)Com_EB_HandleRxSignalsDMUBOnly.isra.0/350 (read)Com_EB_CheckRxDMTable/241 (read)Com_EB_Read_SignalExt/260 (read)Com_EB_RouteSignalHelper/232 (read)Com_EB_HandleTxIPdu_Stop/183 (read)Com_EB_HandleTxIPdu_Stop/183 (read)Com_EB_InitStartRxIPdu/164 (read)Com_TxConfirmation/292 (read)Com_ReceiveSignalGroup_Replace.isra.0/333 (read)Com_EB_WriteDynSignal_ExitArea_0/202 (read)Com_EB_HlpTxConfirmation/291 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_Write_SignalExt/200 (read)Com_EB_Write_SignalExt/200 (read)Com_SetupRxSignalGroup/268 (read)Com_GetSendSignalRetVal.isra.0/331 (read)Com_EB_EnableSignalGroupBasedDMFlag/171 (read)Com_RxIndication/275 (read)Com_ComXf_TxPrepareBuffer/286 (read)Com_EB_RxDMSignalGroupQueue.isra.0/329 (read)Com_EB_FilterOneEveryN/216 (read)Com_RxIndication/275 (read)Com_RxIndication/275 (read)Com_EB_FilterBoolean/217 (read)Com_EB_FilterUint8/218 (read)Com_EB_FilterUint8/218 (read)Com_EB_FilterUint8/218 (read)Com_GetRxSignalGroupCfg/266 (read)Com_ReceiveDynSignal/263 (read)Com_ReceiveDynSignal/263 (read)Com_EB_FilterUint16/220 (read)Com_EB_FilterUint16/220 (read)Com_EB_FilterUint16/220 (read)Com_GetRxSignalCfg/261 (read)Com_EB_CheckRxSignalDM/257 (read)Com_EB_CheckRxSignalDM/257 (read)Com_EB_FilterUint32/222 (read)Com_EB_FilterUint32/222 (read)Com_EB_FilterUint32/222 (read)Com_ReceiveSignal/262 (read)Com_EB_DisableSignalGroupBasedDMFlag/174 (read)Com_EB_CheckRxDMTable/241 (read)Com_EB_FilterSint8/219 (read)Com_EB_FilterSint8/219 (read)Com_EB_FilterSint8/219 (read)Com_EB_HandleTxIPdu_Stop/183 (read)Com_EB_HandleTxIPdu_Stop/183 (read)Com_EB_HandleDeferredTxConfirm/251 (read)Com_EB_CheckNTimesSendforPdu/248 (read)Com_EB_PeriodicSendQueue/179 (read)Com_EB_Send_Pdu/180 (read)Com_EB_FilterSint16/221 (read)Com_EB_FilterSint16/221 (read)Com_EB_FilterSint16/221 (read)Com_EB_CheckTMSforPdu/245 (read)Com_EB_FilterSint32/223 (read)Com_EB_FilterSint32/223 (read)Com_EB_TxDMQueue/194 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_CheckTxDMforPdu/250 (read)Com_EB_InitTxIPdu_PduBuffer/184 (read)Com_EB_CheckMdtforPdu.isra.0/354 (read)Com_EB_DisableSignalGroupBasedDMFlag/174 (read)Com_EB_CheckRxDMTable/241 (read)Com_EB_InitTxIPdu_PduBuffer/184 (read)Com_CopyRxSignalGroupArray.part.0/360 (read)Com_EB_CheckSendSignalGroup/231 (read)Com_MainFunctionRx/244 (read)Com_EB_HandlePduRxDM/149 (read)Com_EB_InitTxIPdu_HandleFlags/187 (read)Com_EB_CheckNTimesSendforPdu/248 (read)Com_EB_CalculateSignalGroupTM/207 (read)Com_Init/227 (write)Com_EB_CheckRxSignalGroupDMTable/243 (read)Com_EB_HandleTxConfirmations.part.0/370 (read)Com_EB_TxConfirmations/196 (read)Com_EB_TxDMQueue/194 (read)Com_EB_TxDM_TMNone/195 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_HlpTxConfirmation/291 (read)Com_GetRxIPduBuffer/165 (read)Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 (read)Com_EB_CheckRxSignalGoupUpdateBitAndDM.isra.0/351 (read)Com_EB_HandleRxSignalsWithBuffer.isra.0/366 (read)Com_EB_InitTxIPdu_Signals/189 (read)Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 (read)Com_EB_HandleRxSig_W_F_A_A_Noti.isra.0/349 (read)Com_EB_SetBuffer/13 (read)Com_EB_SetBuffer/13 (read)Com_EB_SetBuffer/13 (read)Com_EB_SetBuffer/13 (read)Com_EB_RxDMSignalQueue.isra.0/330 (read)Com_EB_DisableSignalBasedDMFlag/173 (read)Com_EB_DisableSignalBasedDMFlag/173 (read)Com_EB_SetGroupSignalTMSFlagOfSignalGroup/212 (read)Com_EB_SendSignal_Transmit.part.0/372 (read)Com_EB_InitStartRxIPdu/164 (read)Com_EB_HandleTxIPdu_Stop/183 (read)Com_EB_InitTxIPdu/192 (read)Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (read)Com_EB_CalculateGroupSignalTM.isra.0/364 (read)Com_EB_CalculateGroupSignalTM.isra.0/364 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_EB_InitStartTxIPdu/193 (read)Com_EB_TMSwitch/246 (read)Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (read)Com_EB_CheckRxSignalUpdateBitAndDM.isra.0/346 (read)Com_EB_CheckRxSignalDMTable/242 (read)Com_EB_CheckRxSignalDMTable/242 (read)Com_EB_HlpTxConfirmation/291 (read)Com_EB_HlpTxConfirmation/291 (read)Com_EB_ReadValue_Uint8Dyn/256 (read)Com_EB_ReadValue_Uint8Dyn/256 (read)Com_EB_HandlePduGroupTx/148 (read)Com_EB_HandlePduGroupTx/148 (read)Com_EB_HandleRxSignalGroups.isra.0/353 (read)Com_EB_HandleRxSignalGroups.isra.0/353 (read)Com_EB_CheckRxSignalGroupDMTable/243 (read)Com_EB_InitTxIPdu_HandleFlags/187 (read)Com_EB_ClearTxUpdateBits/197 (read)Com_EB_ClearTxUpdateBits/197 (read)Com_TriggerTransmit/289 (read)Com_SwitchIpduTxMode/287 (read)Com_EB_HandleTxIPdu_Stop/183 (read)Com_EB_FilterBoolean/217 (read)Com_MainFunctionRx/244 (read)Com_SetIpduGroup/229 (read)Com_EB_MdtQueue.isra.0/345 (read)Com_EB_MdtQueue.isra.0/345 (read)Com_EB_RxDMQueue.isra.0/328 (read)Com_EB_CheckPeriodicSendforPdu/247 (read)Com_EB_CheckPeriodicSendforPdu/247 (read)Com_EB_CheckPeriodicSendforPdu/247 (read)Com_EB_RouteGroupSignal/237 (read)Com_GetConfigurationId/226 (read)Com_EB_NTimesSendQueue/177 (read)Com_EB_NTimesSendQueue/177 (read)Com_EB_RouteSignalHelper_Write.part.0/373 (read)Com_TriggerTransmit/289 (read)Com_ResetFilerOneEveryN/14 (read)Com_EB_InitTx_Signal/188 (read)Com_EB_Read_SignalReplace/259 (read)Com_EB_WriteDynSignal_ExitArea_0/202 (read)Com_Init/227 (read)Com_EB_RouteSG_2_SG.isra.0/375 (read)Com_EB_StartIPdu/190 (read)Com_MainFunctionRouteSignals_Src_Generic_hlp/239 (read)Com_EB_StartIPdu/190 (read)Com_EB_InitTxIPdu_SignalGroups/186 (read)Com_EB_Read_SignalExt_SigBuffer/258 (read)Com_GetTxSignalCfg/281 (read)Com_TriggerIPDUSend/288 (read)Com_EB_SetBuffer/13 (read)Com_EB_HandlePduGroupRx/147 (read)Com_EB_HandlePduGroupRx/147 (read)Com_EB_SetSendSignalGroup/230 (read)Com_EB_InitRxIPdu/163 (read)Com_EB_Write_SignalExt/200 (read)Com_EB_RouteSignal.isra.0/374 (read)Com_GetTxSignalGroupCfg/282 (read)Com_EB_HandleRxSignalsWithBuffer.isra.0/366 (read)Com_EB_HandleRxIPdu/157 (read)Com_EB_SetBuffer/13 (read)Com_EB_InitRxSignalsWithFilter/162 (read)Com_EB_ClearTxSGTMSState/185 (read)Com_EB_ClearTxSGTMSState/185 (read)Com_EB_ClearTxSGTMSState/185 (read)Com_EB_InitRxIPdu/163 (read)Com_EB_InitRxIPdu/163 (read)Com_EB_StartIPdu/190 (read)Com_SetupTxSignalGroup/213 (read)Com_EB_HandleTxIPdu_Start/182 (read)Com_EB_RouteSignalGroup.isra.0/376 (read)Com_EB_RouteSignalGroup.isra.0/376 (read)Com_EB_EnableSignalBasedDMFlag/170 (read)Com_EB_FilterSint32/223 (read)Com_EB_SetBuffer/13 (read)Com_EB_FilterBoolean/217 (read)Com_EB_InitTxIPdu_HandleFlags/187 (read)Com_EB_WriteShadowBuffer.isra.0/368 (read)Com_EB_WriteShadowBuffer.isra.0/368 (read)Com_MainFunctionRouteSignals/240 (read)Com_SetupTxSignalGroup/387 (read)Com_SetupTxSignalGroup/391 (read)
  Availability: available
  Varpool flags:
Com_GlobalTime/1 (Com_GlobalTime) @06c0c510
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Com_EB_RxDMSignalGroupQueue.isra.0/329 (read)Com_EB_RxDMSignalQueue.isra.0/330 (read)Com_EB_TxDMQueue/194 (read)Com_EB_CheckTxDMforPdu/250 (read)Com_EB_RxDMQueue.isra.0/328 (read)Com_EB_CheckRxSignalGroupDMTable/243 (read)Com_EB_MdtQueue.isra.0/345 (read)Com_EB_CheckMdtforPdu.isra.0/354 (read)Com_EB_CheckRxSignalDMTable/242 (read)Com_EB_NTimesSendQueue/177 (read)Com_EB_CheckNTimesSendforPdu/248 (read)Com_EB_CheckPeriodicSendforPdu/247 (read)Com_EB_PeriodicSendQueue/179 (read)Com_EB_CheckRxDMTable/241 (read)Com_MainFunctionRx/244 (write)Com_MainFunctionRx/244 (read)
  Availability: available
  Varpool flags:
Com_InitStatus/0 (Com_InitStatus) @06c0c4c8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Com_GetTxSignalCfg/281 (read)Com_GetTxSignalGroupCfg/282 (read)Com_GetRxIPduBuffer/165 (read)Com_IpduGroupControl/214 (read)Com_ReceptionDMControl/215 (read)Com_GetConfigurationId/226 (read)Com_Init/227 (write)Com_ClearIpduGroupVector/228 (read)Com_SetIpduGroup/229 (read)Com_MainFunctionRouteSignals/240 (read)Com_TxConfirmation/292 (read)Com_DeInit/296 (write)Com_MainFunctionRx/244 (read)Com_GetRxSignalCfg/261 (read)Com_GetRxSignalGroupCfg/266 (read)Com_MainFunctionTx/254 (read)Com_RxIndication/275 (read)Com_SwitchIpduTxMode/287 (read)Com_TriggerIPDUSend/288 (read)Com_TriggerTransmit/289 (read)Com_GetStatus/297 (read)
  Availability: available
  Varpool flags: initialized

;; Function Com_ResetFilerOneEveryN (Com_ResetFilerOneEveryN, funcdef_no=11, decl_uid=6157, cgraph_uid=12, symbol_order=14)

Com_ResetFilerOneEveryN (ComFilterRefType ComFilterRef)
{
  const struct ComFilterOneEveryNType * ComFilterOneEveryNPtr;
  const struct Com_ConfigType * Com_gConfigPtr.365_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  uint8 * Com_gDataMemPtr.367_6;
  short unsigned int _7;
  sizetype _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  ComFilterOneEveryNSizeType * _12;
  sizetype _17;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.365_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.365_1->ComFilterOneEveryNRef;
  _3 = (unsigned int) ComFilterRef_14(D);
  _4 = _3 * 6;
  _5 = _2 + _4;
  ComFilterOneEveryNPtr_15 = Com_gConfigPtr.365_1 + _5;
  # DEBUG ComFilterOneEveryNPtr => ComFilterOneEveryNPtr_15
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.367_6 = Com_gDataMemPtr;
  _7 = Com_gConfigPtr.365_1->ComFilterOneEveryNBase;
  _8 = (sizetype) _7;
  # DEBUG occurrencebase => Com_gDataMemPtr.367_6 + _8
  # DEBUG BEGIN_STMT
  _9 = ComFilterOneEveryNPtr_15->ComFilterOccurrence;
  _10 = (unsigned int) _9;
  _11 = _10 * 2;
  _17 = _8 + _11;
  _12 = Com_gDataMemPtr.367_6 + _17;
  *_12 = 0;
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_08_DL_E1 (Com_EB_Read_08_DL_E1, funcdef_no=15, decl_uid=6648, cgraph_uid=16, symbol_order=19)

Com_EB_Read_08_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 mask;
  uint8 bitsread;
  const uint8 space;
  uint16 tmpval;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint8 value;
  short unsigned int _1;
  unsigned char _2;
  sizetype _3;
  const uint8 * _4;
  unsigned char _5;
  int _6;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  sizetype _11;
  const uint8 * _12;
  unsigned char _13;
  short unsigned int _14;
  short unsigned int _15;
  unsigned short _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  short unsigned int _20;
  int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  unsigned int _33;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_37(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _1 >> 3;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _2 = (unsigned char) _1;
  col_41 = _2 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_42 = col_41 + 1;
  # DEBUG space => space_42
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 0
  # DEBUG BEGIN_STMT
  if (col_41 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _3 = (sizetype) row_40;
  _4 = dataPtr_43(D) + _3;
  _5 = *_4;
  # DEBUG tmpval => (uint16) _5
  # DEBUG BEGIN_STMT
  _6 = (int) _5;
  _7 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  _8 = (unsigned int) _7;
  _9 = 8 - _8;
  _10 = _6 >> _9;
  value_49 = (uint8) _10;
  # DEBUG value => value_49
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_40;
  _12 = dataPtr_43(D) + _11;
  _13 = *_12;
  tmpval_44 = (uint16) _13;
  # DEBUG tmpval => tmpval_44
  # DEBUG BEGIN_STMT
  _14 = (short unsigned int) space_42;
  _15 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  if (_14 < _15)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 8
  # DEBUG BEGIN_STMT
  tmpval_45 = tmpval_44 << 8;
  # DEBUG tmpval => tmpval_45
  # DEBUG BEGIN_STMT
  _16 = row_40 + 65535;
  pos_46 = (sint16) _16;
  # DEBUG pos => pos_46
  # DEBUG BEGIN_STMT
  _17 = (sizetype) pos_46;
  _18 = dataPtr_43(D) + _17;
  _19 = *_18;
  _20 = (short unsigned int) _19;
  tmpval_47 = _20 | tmpval_45;
  # DEBUG tmpval => tmpval_47

  <bb 6> [local count: 708669605]:
  # tmpval_35 = PHI <tmpval_44(4), tmpval_47(5)>
  # bitsread_36 = PHI <0(4), 8(5)>
  # DEBUG bitsread => bitsread_36
  # DEBUG tmpval => tmpval_35
  # DEBUG BEGIN_STMT
  _21 = (int) tmpval_35;
  _22 = (unsigned int) col_41;
  _23 = (unsigned int) bitsread_36;
  _24 = _22 + _23;
  _25 = (unsigned char) _15;
  _26 = (unsigned int) _25;
  _27 = _24 - _26;
  _28 = _27 + 1;
  _29 = _21 >> _28;
  value_48 = (uint8) _29;
  # DEBUG value => value_48

  <bb 7> [local count: 1073741824]:
  # value_34 = PHI <value_49(3), value_48(6)>
  # DEBUG value => value_34
  # DEBUG BEGIN_STMT
  _30 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  _31 = (unsigned int) _30;
  _32 = 8 - _31;
  _33 = 255 >> _32;
  mask_50 = (const uint8) _33;
  # DEBUG mask => mask_50
  # DEBUG BEGIN_STMT
  value_51 = value_34 & mask_50;
  # DEBUG value => value_51
  # DEBUG BEGIN_STMT
  MEM[(uint8 *)SignalDataPtr_37(D)] = value_51;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_16_DL_E1 (Com_EB_Read_16_DL_E1, funcdef_no=16, decl_uid=6653, cgraph_uid=17, symbol_order=20)

Com_EB_Read_16_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 mask;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 tmpval;
  sint8 ssize;
  uint8 bitsread;
  uint16 value;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  unsigned char ssize.34_8;
  unsigned char _9;
  unsigned char ssize.35_10;
  unsigned char _11;
  unsigned short pos.36_12;
  unsigned short _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  long unsigned int _17;
  int _18;
  int _20;
  int _21;
  long unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  unsigned char ssize.37_26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.38_29;
  unsigned char _30;
  unsigned short pos.39_31;
  unsigned short _32;
  sizetype _33;
  const uint8 * _34;
  unsigned char _35;
  long unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  long unsigned int _45;
  unsigned int _46;
  unsigned int _47;
  unsigned int _48;

  <bb 2> [local count: 178956970]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_58(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 0
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_60(D)->ComBitSize;
  # DEBUG ssize => (sint8) _1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_60(D)->ComSignalPositionInBit;
  row_61 = _2 >> 3;
  # DEBUG row => row_61
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_62 = _4 & 7;
  # DEBUG col => col_62
  # DEBUG BEGIN_STMT
  pos_63 = (sint16) row_61;
  # DEBUG pos => pos_63
  # DEBUG BEGIN_STMT
  if (col_62 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 3> [local count: 60845370]:
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 8
  # DEBUG BEGIN_STMT
  _5 = (sizetype) row_61;
  _6 = dataPtr_64(D) + _5;
  _7 = *_6;
  tmpval_73 = (uint32) _7;
  # DEBUG tmpval => tmpval_73
  # DEBUG BEGIN_STMT
  ssize.34_8 = (unsigned char) _1;
  _9 = ssize.34_8 + 248;
  ssize_74 = (sint8) _9;
  # DEBUG ssize => ssize_74
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 492294356]:
  # DEBUG BEGIN_STMT
  bitsread_76 = bitsread_50 + 8;
  # DEBUG bitsread => bitsread_76
  # DEBUG BEGIN_STMT
  ssize.35_10 = (unsigned char) ssize_52;
  _11 = ssize.35_10 + 248;
  ssize_77 = (sint8) _11;
  # DEBUG ssize => ssize_77
  # DEBUG BEGIN_STMT
  tmpval_78 = tmpval_54 << 8;
  # DEBUG tmpval => tmpval_78
  # DEBUG BEGIN_STMT
  pos.36_12 = (unsigned short) pos_56;
  _13 = pos.36_12 + 65535;
  pos_79 = (sint16) _13;
  # DEBUG pos => pos_79
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_79;
  _15 = dataPtr_64(D) + _14;
  _16 = *_15;
  _17 = (long unsigned int) _16;
  tmpval_80 = _17 | tmpval_78;
  # DEBUG tmpval => tmpval_80

  <bb 5> [local count: 553139727]:
  # bitsread_50 = PHI <8(3), bitsread_76(4)>
  # ssize_52 = PHI <ssize_74(3), ssize_77(4)>
  # tmpval_54 = PHI <tmpval_73(3), tmpval_80(4)>
  # pos_56 = PHI <pos_63(3), pos_79(4)>
  # DEBUG pos => pos_56
  # DEBUG tmpval => tmpval_54
  # DEBUG ssize => ssize_52
  # DEBUG bitsread => bitsread_50
  # DEBUG BEGIN_STMT
  if (ssize_52 > 0)
    goto <bb 4>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 60845370]:
  # bitsread_3 = PHI <bitsread_50(5)>
  # tmpval_41 = PHI <tmpval_54(5)>
  # DEBUG BEGIN_STMT
  _18 = (int) bitsread_3;
  _20 = (int) _1;
  _21 = _18 - _20;
  _22 = tmpval_41 >> _21;
  value_75 = (uint16) _22;
  # DEBUG value => value_75
  goto <bb 11>; [100.00%]

  <bb 7> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _23 = (sizetype) row_61;
  _24 = dataPtr_64(D) + _23;
  _25 = *_24;
  tmpval_65 = (uint32) _25;
  # DEBUG tmpval => tmpval_65
  # DEBUG BEGIN_STMT
  ssize.37_26 = (unsigned char) _1;
  _27 = ssize.37_26 - col_62;
  _28 = _27 + 255;
  ssize_66 = (sint8) _28;
  # DEBUG ssize => ssize_66
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  bitsread_68 = bitsread_51 + 8;
  # DEBUG bitsread => bitsread_68
  # DEBUG BEGIN_STMT
  ssize.38_29 = (unsigned char) ssize_53;
  _30 = ssize.38_29 + 248;
  ssize_69 = (sint8) _30;
  # DEBUG ssize => ssize_69
  # DEBUG BEGIN_STMT
  tmpval_70 = tmpval_55 << 8;
  # DEBUG tmpval => tmpval_70
  # DEBUG BEGIN_STMT
  pos.39_31 = (unsigned short) pos_57;
  _32 = pos.39_31 + 65535;
  pos_71 = (sint16) _32;
  # DEBUG pos => pos_71
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_71;
  _34 = dataPtr_64(D) + _33;
  _35 = *_34;
  _36 = (long unsigned int) _35;
  tmpval_72 = _36 | tmpval_70;
  # DEBUG tmpval => tmpval_72

  <bb 9> [local count: 1073741824]:
  # bitsread_51 = PHI <0(7), bitsread_68(8)>
  # ssize_53 = PHI <ssize_66(7), ssize_69(8)>
  # tmpval_55 = PHI <tmpval_65(7), tmpval_72(8)>
  # pos_57 = PHI <pos_63(7), pos_71(8)>
  # DEBUG pos => pos_57
  # DEBUG tmpval => tmpval_55
  # DEBUG ssize => ssize_53
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  if (ssize_53 > 0)
    goto <bb 8>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # bitsread_40 = PHI <bitsread_51(9)>
  # tmpval_19 = PHI <tmpval_55(9)>
  # DEBUG BEGIN_STMT
  _37 = (unsigned int) col_62;
  _38 = (unsigned int) bitsread_40;
  _39 = _37 + _38;
  _42 = (unsigned int) ssize.37_26;
  _43 = _39 - _42;
  _44 = _43 + 1;
  _45 = tmpval_19 >> _44;
  value_67 = (uint16) _45;
  # DEBUG value => value_67

  <bb 11> [local count: 178956971]:
  # value_49 = PHI <value_75(6), value_67(10)>
  # DEBUG value => value_49
  # DEBUG BEGIN_STMT
  _46 = (unsigned int) _1;
  _47 = 16 - _46;
  _48 = 65535 >> _47;
  mask_81 = (const uint16) _48;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  value_82 = value_49 & mask_81;
  # DEBUG value => value_82
  # DEBUG BEGIN_STMT
  MEM[(uint16 *)SignalDataPtr_58(D)] = value_82;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_32_DL_E1 (Com_EB_Read_32_DL_E1, funcdef_no=17, decl_uid=6658, cgraph_uid=18, symbol_order=21)

Com_EB_Read_32_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 tmp_val;
  const uint8 mask;
  const uint8 space;
  ComSignalBitSizeType size;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 value;
  short unsigned int _1;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  int _6;
  sizetype _7;
  const uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  unsigned short _14;
  sizetype _16;
  const uint8 * _17;
  unsigned char _18;
  long unsigned int _19;
  unsigned short pos.33_20;
  unsigned short _21;
  int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  long unsigned int _29;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_34(D)
  # DEBUG BEGIN_STMT
  # DEBUG value => 0
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_37(D)->ComSignalPositionInBit;
  row_38 = _1 >> 3;
  # DEBUG row => row_38
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_39 = _3 & 7;
  # DEBUG col => col_39
  # DEBUG BEGIN_STMT
  pos_40 = (sint16) row_38;
  # DEBUG pos => pos_40
  # DEBUG BEGIN_STMT
  size_41 = Com_EB_ReadPropPtr_37(D)->ComBitSize;
  # DEBUG size => size_41
  # DEBUG BEGIN_STMT
  if (col_39 != 7)
    goto <bb 3>; [66.00%]
  else
    goto <bb 8>; [34.00%]

  <bb 3> [local count: 77953656]:
  # DEBUG BEGIN_STMT
  space_42 = col_39 + 1;
  # DEBUG space => space_42
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) col_39;
  _5 = 7 - _4;
  _6 = 255 >> _5;
  mask_43 = (const uint8) _6;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _7 = (sizetype) row_38;
  _8 = dataPtr_44(D) + _7;
  _9 = *_8;
  tmp_val_45 = _9 & mask_43;
  # DEBUG tmp_val => tmp_val_45
  # DEBUG BEGIN_STMT
  value_46 = (uint32) tmp_val_45;
  # DEBUG value => value_46
  # DEBUG BEGIN_STMT
  _10 = (short unsigned int) space_42;
  if (_10 >= size_41)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  _11 = (int) space_42;
  _12 = (int) size_41;
  _13 = _11 - _12;
  value_49 = value_46 >> _13;
  # DEBUG value => value_49
  # DEBUG BEGIN_STMT
  # DEBUG size => 0

  <bb 8> [local count: 118111600]:
  # value_59 = PHI <value_46(5), 0(2), value_49(4)>
  # pos_58 = PHI <pos_47(5), pos_40(2), pos_40(4)>
  # size_57 = PHI <size_48(5), size_41(2), 0(4)>
  goto <bb 12>; [100.00%]

  <bb 5> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  _14 = row_38 + 65535;
  pos_47 = (sint16) _14;
  # DEBUG pos => pos_47
  # DEBUG BEGIN_STMT
  size_48 = size_41 - _10;
  # DEBUG size => size_48
  goto <bb 8>; [100.00%]

  <bb 6> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  value_53 = value_30 << 8;
  # DEBUG value => value_53
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_32;
  _17 = dataPtr_44(D) + _16;
  _18 = *_17;
  _19 = (long unsigned int) _18;
  value_54 = _19 + value_53;
  # DEBUG value => value_54
  # DEBUG BEGIN_STMT
  size_55 = size_33 + 65528;
  # DEBUG size => size_55
  # DEBUG BEGIN_STMT
  pos.33_20 = (unsigned short) pos_32;
  _21 = pos.33_20 + 65535;
  pos_56 = (sint16) _21;
  # DEBUG pos => pos_56

  <bb 12> [local count: 1073741824]:
  # value_30 = PHI <value_59(8), value_54(6)>
  # pos_32 = PHI <pos_58(8), pos_56(6)>
  # size_33 = PHI <size_57(8), size_55(6)>
  # DEBUG size => size_33
  # DEBUG pos => pos_32
  # DEBUG value => value_30
  # DEBUG BEGIN_STMT
  if (size_33 > 7)
    goto <bb 6>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # value_2 = PHI <value_30(12)>
  # pos_15 = PHI <pos_32(12)>
  # size_35 = PHI <size_33(12)>
  # DEBUG BEGIN_STMT
  if (size_35 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _22 = (int) size_35;
  value_50 = value_2 << _22;
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_15;
  _24 = dataPtr_44(D) + _23;
  _25 = *_24;
  _26 = (long unsigned int) _25;
  _27 = (unsigned int) size_35;
  _28 = 8 - _27;
  _29 = _26 >> _28;
  value_51 = _29 + value_50;
  # DEBUG value => value_51

  <bb 11> [local count: 118111601]:
  # value_31 = PHI <value_2(9), value_51(10)>
  # DEBUG value => value_31
  # DEBUG BEGIN_STMT
  MEM[(uint32 *)SignalDataPtr_34(D)] = value_31;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_64_DL_E1 (Com_EB_Read_64_DL_E1, funcdef_no=18, decl_uid=6663, cgraph_uid=19, symbol_order=22)

Com_EB_Read_64_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  struct ComSignalBaseType Com_EB_ReadProp_loc;
  short unsigned int _1;
  short unsigned int _2;
  uint32 * _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  uint32 * _8;
  uint32 * _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_11(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_13(D)->ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc = *Com_EB_ReadPropPtr_13(D);
  # DEBUG BEGIN_STMT
  _2 = _1 + 65504;
  Com_EB_ReadProp_loc.ComBitSize = _2;
  # DEBUG BEGIN_STMT
  _3 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].HiWord;
  Com_EB_Read_32_DL_E1 (_3, dataPtr_14(D), &Com_EB_ReadProp_loc, retvalPtr_15(D));
  # DEBUG BEGIN_STMT
  _4 = Com_EB_ReadPropPtr_13(D)->ComSignalPositionInBit;
  _5 = Com_EB_ReadPropPtr_13(D)->ComBitSize;
  _6 = _4 - _5;
  _7 = _6 + 32;
  Com_EB_ReadProp_loc.ComSignalPositionInBit = _7;
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _8 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].LoWord;
  Com_EB_Read_32_DL_E1 (_8, dataPtr_14(D), &Com_EB_ReadProp_loc, retvalPtr_15(D));
  Com_EB_ReadProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _9 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].LoWord;
  Com_EB_Read_32_DL_E1 (_9, dataPtr_14(D), Com_EB_ReadPropPtr_13(D), retvalPtr_15(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_AY_DL_E1 (Com_EB_Read_AY_DL_E1, funcdef_no=19, decl_uid=6668, cgraph_uid=20, symbol_order=23)

Com_EB_Read_AY_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  sizetype _4;
  uint8 * _5;
  unsigned char _6;
  short unsigned int _7;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_10(D)

  <bb 3> [local count: 1073741824]:
  # ii_8 = PHI <0(2), ii_16(5)>
  # DEBUG ii => ii_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_12(D)->ComSignalPositionInBit;
  pos_13 = _1 + ii_8;
  # DEBUG pos => pos_13
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_13;
  _3 = dataPtr_14(D) + _2;
  _4 = (sizetype) ii_8;
  _5 = SignalDataPtr_10(D) + _4;
  _6 = *_3;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  ii_16 = ii_8 + 1;
  # DEBUG ii => ii_16
  # DEBUG BEGIN_STMT
  _7 = Com_EB_ReadPropPtr_12(D)->ComBitSize;
  if (_7 > ii_16)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_08_DL_E2 (Com_EB_Read_08_DL_E2, funcdef_no=20, decl_uid=6673, cgraph_uid=21, symbol_order=24)

Com_EB_Read_08_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 mask;
  uint8 bitsread;
  const uint8 space;
  uint16 tmpval;
  uint8 col;
  ComSignalDescBitType row;
  uint8 value;
  short unsigned int _1;
  unsigned char _2;
  sizetype _3;
  const uint8 * _4;
  unsigned char _5;
  int _6;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  sizetype _11;
  const uint8 * _12;
  unsigned char _13;
  short unsigned int _14;
  short unsigned int _15;
  unsigned short _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  short unsigned int _20;
  int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  unsigned int _33;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_37(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _1 >> 3;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _2 = (unsigned char) _1;
  col_41 = _2 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_42 = col_41 + 1;
  # DEBUG space => space_42
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 0
  # DEBUG BEGIN_STMT
  if (col_41 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _3 = (sizetype) row_40;
  _4 = dataPtr_43(D) + _3;
  _5 = *_4;
  # DEBUG tmpval => (uint16) _5
  # DEBUG BEGIN_STMT
  _6 = (int) _5;
  _7 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  _8 = (unsigned int) _7;
  _9 = 8 - _8;
  _10 = _6 >> _9;
  value_48 = (uint8) _10;
  # DEBUG value => value_48
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_40;
  _12 = dataPtr_43(D) + _11;
  _13 = *_12;
  tmpval_44 = (uint16) _13;
  # DEBUG tmpval => tmpval_44
  # DEBUG BEGIN_STMT
  _14 = (short unsigned int) space_42;
  _15 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  if (_14 < _15)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 8
  # DEBUG BEGIN_STMT
  tmpval_45 = tmpval_44 << 8;
  # DEBUG tmpval => tmpval_45
  # DEBUG BEGIN_STMT
  _16 = row_40 + 1;
  # DEBUG pos => (sint16) _16
  # DEBUG BEGIN_STMT
  _17 = (sizetype) _16;
  _18 = dataPtr_43(D) + _17;
  _19 = *_18;
  _20 = (short unsigned int) _19;
  tmpval_46 = _20 | tmpval_45;
  # DEBUG tmpval => tmpval_46

  <bb 6> [local count: 708669605]:
  # tmpval_35 = PHI <tmpval_44(4), tmpval_46(5)>
  # bitsread_36 = PHI <0(4), 8(5)>
  # DEBUG bitsread => bitsread_36
  # DEBUG tmpval => tmpval_35
  # DEBUG BEGIN_STMT
  _21 = (int) tmpval_35;
  _22 = (unsigned int) col_41;
  _23 = (unsigned int) bitsread_36;
  _24 = _22 + _23;
  _25 = (unsigned char) _15;
  _26 = (unsigned int) _25;
  _27 = _24 - _26;
  _28 = _27 + 1;
  _29 = _21 >> _28;
  value_47 = (uint8) _29;
  # DEBUG value => value_47

  <bb 7> [local count: 1073741824]:
  # value_34 = PHI <value_48(3), value_47(6)>
  # DEBUG value => value_34
  # DEBUG BEGIN_STMT
  _30 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  _31 = (unsigned int) _30;
  _32 = 8 - _31;
  _33 = 255 >> _32;
  mask_49 = (const uint8) _33;
  # DEBUG mask => mask_49
  # DEBUG BEGIN_STMT
  value_50 = value_34 & mask_49;
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  MEM[(uint8 *)SignalDataPtr_37(D)] = value_50;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_16_DL_E2 (Com_EB_Read_16_DL_E2, funcdef_no=21, decl_uid=6678, cgraph_uid=22, symbol_order=25)

Com_EB_Read_16_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 mask;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 tmpval;
  sint8 ssize;
  uint8 bitsread;
  uint16 value;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  unsigned char ssize.24_8;
  unsigned char _9;
  unsigned char ssize.25_10;
  unsigned char _11;
  unsigned short pos.26_12;
  unsigned short _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  long unsigned int _17;
  int _18;
  int _20;
  int _21;
  long unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  unsigned char ssize.27_26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.28_29;
  unsigned char _30;
  unsigned short pos.29_31;
  unsigned short _32;
  sizetype _33;
  const uint8 * _34;
  unsigned char _35;
  long unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  long unsigned int _45;
  unsigned int _46;
  unsigned int _47;
  unsigned int _48;

  <bb 2> [local count: 178956970]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_58(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 0
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_60(D)->ComBitSize;
  # DEBUG ssize => (sint8) _1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_60(D)->ComSignalPositionInBit;
  row_61 = _2 >> 3;
  # DEBUG row => row_61
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_62 = _4 & 7;
  # DEBUG col => col_62
  # DEBUG BEGIN_STMT
  pos_63 = (sint16) row_61;
  # DEBUG pos => pos_63
  # DEBUG BEGIN_STMT
  if (col_62 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 3> [local count: 60845370]:
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 8
  # DEBUG BEGIN_STMT
  _5 = (sizetype) row_61;
  _6 = dataPtr_64(D) + _5;
  _7 = *_6;
  tmpval_73 = (uint32) _7;
  # DEBUG tmpval => tmpval_73
  # DEBUG BEGIN_STMT
  ssize.24_8 = (unsigned char) _1;
  _9 = ssize.24_8 + 248;
  ssize_74 = (sint8) _9;
  # DEBUG ssize => ssize_74
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 492294356]:
  # DEBUG BEGIN_STMT
  bitsread_76 = bitsread_50 + 8;
  # DEBUG bitsread => bitsread_76
  # DEBUG BEGIN_STMT
  ssize.25_10 = (unsigned char) ssize_52;
  _11 = ssize.25_10 + 248;
  ssize_77 = (sint8) _11;
  # DEBUG ssize => ssize_77
  # DEBUG BEGIN_STMT
  tmpval_78 = tmpval_54 << 8;
  # DEBUG tmpval => tmpval_78
  # DEBUG BEGIN_STMT
  pos.26_12 = (unsigned short) pos_56;
  _13 = pos.26_12 + 1;
  pos_79 = (sint16) _13;
  # DEBUG pos => pos_79
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_79;
  _15 = dataPtr_64(D) + _14;
  _16 = *_15;
  _17 = (long unsigned int) _16;
  tmpval_80 = _17 | tmpval_78;
  # DEBUG tmpval => tmpval_80

  <bb 5> [local count: 553139727]:
  # bitsread_50 = PHI <8(3), bitsread_76(4)>
  # ssize_52 = PHI <ssize_74(3), ssize_77(4)>
  # tmpval_54 = PHI <tmpval_73(3), tmpval_80(4)>
  # pos_56 = PHI <pos_63(3), pos_79(4)>
  # DEBUG pos => pos_56
  # DEBUG tmpval => tmpval_54
  # DEBUG ssize => ssize_52
  # DEBUG bitsread => bitsread_50
  # DEBUG BEGIN_STMT
  if (ssize_52 > 0)
    goto <bb 4>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 60845370]:
  # bitsread_3 = PHI <bitsread_50(5)>
  # tmpval_41 = PHI <tmpval_54(5)>
  # DEBUG BEGIN_STMT
  _18 = (int) bitsread_3;
  _20 = (int) _1;
  _21 = _18 - _20;
  _22 = tmpval_41 >> _21;
  value_75 = (uint16) _22;
  # DEBUG value => value_75
  goto <bb 11>; [100.00%]

  <bb 7> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _23 = (sizetype) row_61;
  _24 = dataPtr_64(D) + _23;
  _25 = *_24;
  tmpval_65 = (uint32) _25;
  # DEBUG tmpval => tmpval_65
  # DEBUG BEGIN_STMT
  ssize.27_26 = (unsigned char) _1;
  _27 = ssize.27_26 - col_62;
  _28 = _27 + 255;
  ssize_66 = (sint8) _28;
  # DEBUG ssize => ssize_66
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  bitsread_68 = bitsread_51 + 8;
  # DEBUG bitsread => bitsread_68
  # DEBUG BEGIN_STMT
  ssize.28_29 = (unsigned char) ssize_53;
  _30 = ssize.28_29 + 248;
  ssize_69 = (sint8) _30;
  # DEBUG ssize => ssize_69
  # DEBUG BEGIN_STMT
  tmpval_70 = tmpval_55 << 8;
  # DEBUG tmpval => tmpval_70
  # DEBUG BEGIN_STMT
  pos.29_31 = (unsigned short) pos_57;
  _32 = pos.29_31 + 1;
  pos_71 = (sint16) _32;
  # DEBUG pos => pos_71
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_71;
  _34 = dataPtr_64(D) + _33;
  _35 = *_34;
  _36 = (long unsigned int) _35;
  tmpval_72 = _36 | tmpval_70;
  # DEBUG tmpval => tmpval_72

  <bb 9> [local count: 1073741824]:
  # bitsread_51 = PHI <0(7), bitsread_68(8)>
  # ssize_53 = PHI <ssize_66(7), ssize_69(8)>
  # tmpval_55 = PHI <tmpval_65(7), tmpval_72(8)>
  # pos_57 = PHI <pos_63(7), pos_71(8)>
  # DEBUG pos => pos_57
  # DEBUG tmpval => tmpval_55
  # DEBUG ssize => ssize_53
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  if (ssize_53 > 0)
    goto <bb 8>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # bitsread_40 = PHI <bitsread_51(9)>
  # tmpval_19 = PHI <tmpval_55(9)>
  # DEBUG BEGIN_STMT
  _37 = (unsigned int) col_62;
  _38 = (unsigned int) bitsread_40;
  _39 = _37 + _38;
  _42 = (unsigned int) ssize.27_26;
  _43 = _39 - _42;
  _44 = _43 + 1;
  _45 = tmpval_19 >> _44;
  value_67 = (uint16) _45;
  # DEBUG value => value_67

  <bb 11> [local count: 178956971]:
  # value_49 = PHI <value_75(6), value_67(10)>
  # DEBUG value => value_49
  # DEBUG BEGIN_STMT
  _46 = (unsigned int) _1;
  _47 = 16 - _46;
  _48 = 65535 >> _47;
  mask_81 = (const uint16) _48;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  value_82 = value_49 & mask_81;
  # DEBUG value => value_82
  # DEBUG BEGIN_STMT
  MEM[(uint16 *)SignalDataPtr_58(D)] = value_82;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_32_DL_E2 (Com_EB_Read_32_DL_E2, funcdef_no=22, decl_uid=6683, cgraph_uid=23, symbol_order=26)

Com_EB_Read_32_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 tmp_val;
  const uint8 mask;
  const uint8 space;
  ComSignalBitSizeType size;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 value;
  short unsigned int _1;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  int _6;
  sizetype _7;
  const uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  unsigned short _14;
  sizetype _16;
  const uint8 * _17;
  unsigned char _18;
  long unsigned int _19;
  unsigned short pos.23_20;
  unsigned short _21;
  int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  long unsigned int _29;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_34(D)
  # DEBUG BEGIN_STMT
  # DEBUG value => 0
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_37(D)->ComSignalPositionInBit;
  row_38 = _1 >> 3;
  # DEBUG row => row_38
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_39 = _3 & 7;
  # DEBUG col => col_39
  # DEBUG BEGIN_STMT
  pos_40 = (sint16) row_38;
  # DEBUG pos => pos_40
  # DEBUG BEGIN_STMT
  size_41 = Com_EB_ReadPropPtr_37(D)->ComBitSize;
  # DEBUG size => size_41
  # DEBUG BEGIN_STMT
  if (col_39 != 7)
    goto <bb 3>; [66.00%]
  else
    goto <bb 8>; [34.00%]

  <bb 3> [local count: 77953656]:
  # DEBUG BEGIN_STMT
  space_42 = col_39 + 1;
  # DEBUG space => space_42
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) col_39;
  _5 = 7 - _4;
  _6 = 255 >> _5;
  mask_43 = (const uint8) _6;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _7 = (sizetype) row_38;
  _8 = dataPtr_44(D) + _7;
  _9 = *_8;
  tmp_val_45 = _9 & mask_43;
  # DEBUG tmp_val => tmp_val_45
  # DEBUG BEGIN_STMT
  value_46 = (uint32) tmp_val_45;
  # DEBUG value => value_46
  # DEBUG BEGIN_STMT
  _10 = (short unsigned int) space_42;
  if (_10 >= size_41)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  _11 = (int) space_42;
  _12 = (int) size_41;
  _13 = _11 - _12;
  value_49 = value_46 >> _13;
  # DEBUG value => value_49
  # DEBUG BEGIN_STMT
  # DEBUG size => 0

  <bb 8> [local count: 118111600]:
  # value_59 = PHI <value_46(5), 0(2), value_49(4)>
  # pos_58 = PHI <pos_47(5), pos_40(2), pos_40(4)>
  # size_57 = PHI <size_48(5), size_41(2), 0(4)>
  goto <bb 12>; [100.00%]

  <bb 5> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  _14 = row_38 + 1;
  pos_47 = (sint16) _14;
  # DEBUG pos => pos_47
  # DEBUG BEGIN_STMT
  size_48 = size_41 - _10;
  # DEBUG size => size_48
  goto <bb 8>; [100.00%]

  <bb 6> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  value_53 = value_30 << 8;
  # DEBUG value => value_53
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_32;
  _17 = dataPtr_44(D) + _16;
  _18 = *_17;
  _19 = (long unsigned int) _18;
  value_54 = _19 + value_53;
  # DEBUG value => value_54
  # DEBUG BEGIN_STMT
  size_55 = size_33 + 65528;
  # DEBUG size => size_55
  # DEBUG BEGIN_STMT
  pos.23_20 = (unsigned short) pos_32;
  _21 = pos.23_20 + 1;
  pos_56 = (sint16) _21;
  # DEBUG pos => pos_56

  <bb 12> [local count: 1073741824]:
  # value_30 = PHI <value_59(8), value_54(6)>
  # pos_32 = PHI <pos_58(8), pos_56(6)>
  # size_33 = PHI <size_57(8), size_55(6)>
  # DEBUG size => size_33
  # DEBUG pos => pos_32
  # DEBUG value => value_30
  # DEBUG BEGIN_STMT
  if (size_33 > 7)
    goto <bb 6>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # value_2 = PHI <value_30(12)>
  # pos_15 = PHI <pos_32(12)>
  # size_35 = PHI <size_33(12)>
  # DEBUG BEGIN_STMT
  if (size_35 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _22 = (int) size_35;
  value_50 = value_2 << _22;
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_15;
  _24 = dataPtr_44(D) + _23;
  _25 = *_24;
  _26 = (long unsigned int) _25;
  _27 = (unsigned int) size_35;
  _28 = 8 - _27;
  _29 = _26 >> _28;
  value_51 = _29 + value_50;
  # DEBUG value => value_51

  <bb 11> [local count: 118111601]:
  # value_31 = PHI <value_2(9), value_51(10)>
  # DEBUG value => value_31
  # DEBUG BEGIN_STMT
  MEM[(uint32 *)SignalDataPtr_34(D)] = value_31;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_64_DL_E2 (Com_EB_Read_64_DL_E2, funcdef_no=23, decl_uid=6688, cgraph_uid=24, symbol_order=27)

Com_EB_Read_64_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  struct ComSignalBaseType Com_EB_ReadProp_loc;
  short unsigned int _1;
  short unsigned int _2;
  uint32 * _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  uint32 * _8;
  uint32 * _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_11(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_13(D)->ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc = *Com_EB_ReadPropPtr_13(D);
  # DEBUG BEGIN_STMT
  _2 = _1 + 65504;
  Com_EB_ReadProp_loc.ComBitSize = _2;
  # DEBUG BEGIN_STMT
  _3 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].HiWord;
  Com_EB_Read_32_DL_E2 (_3, dataPtr_14(D), &Com_EB_ReadProp_loc, retvalPtr_15(D));
  # DEBUG BEGIN_STMT
  _4 = Com_EB_ReadPropPtr_13(D)->ComSignalPositionInBit;
  _5 = Com_EB_ReadPropPtr_13(D)->ComBitSize;
  _6 = _4 + _5;
  _7 = _6 + 65504;
  Com_EB_ReadProp_loc.ComSignalPositionInBit = _7;
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _8 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].LoWord;
  Com_EB_Read_32_DL_E2 (_8, dataPtr_14(D), &Com_EB_ReadProp_loc, retvalPtr_15(D));
  Com_EB_ReadProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _9 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].LoWord;
  Com_EB_Read_32_DL_E2 (_9, dataPtr_14(D), Com_EB_ReadPropPtr_13(D), retvalPtr_15(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_AY_DL_E2 (Com_EB_Read_AY_DL_E2, funcdef_no=24, decl_uid=6693, cgraph_uid=25, symbol_order=28)

Com_EB_Read_AY_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  const uint8 * _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int _10;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_13(D)

  <bb 3> [local count: 1073741824]:
  # ii_11 = PHI <0(2), ii_19(5)>
  # DEBUG ii => ii_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_15(D)->ComSignalPositionInBit;
  _2 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_11;
  pos_16 = _4 + 65535;
  # DEBUG pos => pos_16
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_16;
  _6 = dataPtr_17(D) + _5;
  _7 = (sizetype) ii_11;
  _8 = SignalDataPtr_13(D) + _7;
  _9 = *_6;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  ii_19 = ii_11 + 1;
  # DEBUG ii => ii_19
  # DEBUG BEGIN_STMT
  _10 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  if (_10 > ii_19)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_08_DL_SignExt (Com_EB_Read_08_DL_SignExt, funcdef_no=37, decl_uid=6758, cgraph_uid=38, symbol_order=41)

Com_EB_Read_08_DL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  short unsigned int _1;
  int _2;
  unsigned char _3;
  int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned int _9;
  unsigned char _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtrU8 => SignalDataPtr_12(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_14(D)->ComRxSignalFlags;
  index_15 = _1 & 39;
  # DEBUG index => index_15
  # DEBUG BEGIN_STMT
  _2 = (int) index_15;
  fptr_16 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_16 (SignalDataPtr_12(D), dataPtr_17(D), Com_EB_ReadPropPtr_14(D), retvalPtr_18(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = MEM[(uint8 *)SignalDataPtr_12(D)];
  _4 = (int) _3;
  _5 = Com_EB_ReadPropPtr_14(D)->ComBitSize;
  _6 = (unsigned int) _5;
  _7 = _6 + 4294967295;
  _8 = _4 >> _7;
  MSB_20 = (const boolean) _8;
  # DEBUG MSB => MSB_20
  # DEBUG BEGIN_STMT
  if (MSB_20 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _9 = 255 << _7;
  sigExtMask_21 = (const uint8) _9;
  # DEBUG sigExtMask => sigExtMask_21
  # DEBUG BEGIN_STMT
  _10 = _3 | sigExtMask_21;
  MEM[(uint8 *)SignalDataPtr_12(D)] = _10;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_08_EL_SignExt (Com_EB_Read_08_EL_SignExt, funcdef_no=38, decl_uid=6763, cgraph_uid=39, symbol_order=42)

Com_EB_Read_08_EL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  short unsigned int _1;
  int _2;
  unsigned char _3;
  int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned int _9;
  unsigned char _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtrU8 => SignalDataPtr_12(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_14(D)->ComRxSignalFlags;
  index_15 = _1 & 47;
  # DEBUG index => index_15
  # DEBUG BEGIN_STMT
  _2 = (int) index_15;
  fptr_16 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_16 (SignalDataPtr_12(D), dataPtr_17(D), Com_EB_ReadPropPtr_14(D), retvalPtr_18(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = MEM[(uint8 *)SignalDataPtr_12(D)];
  _4 = (int) _3;
  _5 = Com_EB_ReadPropPtr_14(D)->ComBitSize;
  _6 = (unsigned int) _5;
  _7 = _6 + 4294967295;
  _8 = _4 >> _7;
  MSB_20 = (const boolean) _8;
  # DEBUG MSB => MSB_20
  # DEBUG BEGIN_STMT
  if (MSB_20 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _9 = 255 << _7;
  sigExtMask_21 = (const uint8) _9;
  # DEBUG sigExtMask => sigExtMask_21
  # DEBUG BEGIN_STMT
  _10 = _3 | sigExtMask_21;
  MEM[(uint8 *)SignalDataPtr_12(D)] = _10;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_16_DL_SignExt (Com_EB_Read_16_DL_SignExt, funcdef_no=39, decl_uid=6768, cgraph_uid=40, symbol_order=43)

Com_EB_Read_16_DL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  short unsigned int _1;
  int _2;
  short unsigned int _3;
  int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned int _9;
  short unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtrU16 => SignalDataPtr_12(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_14(D)->ComRxSignalFlags;
  index_15 = _1 & 39;
  # DEBUG index => index_15
  # DEBUG BEGIN_STMT
  _2 = (int) index_15;
  fptr_16 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_16 (SignalDataPtr_12(D), dataPtr_17(D), Com_EB_ReadPropPtr_14(D), retvalPtr_18(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = MEM[(uint16 *)SignalDataPtr_12(D)];
  _4 = (int) _3;
  _5 = Com_EB_ReadPropPtr_14(D)->ComBitSize;
  _6 = (unsigned int) _5;
  _7 = _6 + 4294967295;
  _8 = _4 >> _7;
  MSB_20 = (const boolean) _8;
  # DEBUG MSB => MSB_20
  # DEBUG BEGIN_STMT
  if (MSB_20 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _9 = 65535 << _7;
  sigExtMask_21 = (const uint16) _9;
  # DEBUG sigExtMask => sigExtMask_21
  # DEBUG BEGIN_STMT
  _10 = _3 | sigExtMask_21;
  MEM[(uint16 *)SignalDataPtr_12(D)] = _10;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_16_EL_SignExt (Com_EB_Read_16_EL_SignExt, funcdef_no=40, decl_uid=6773, cgraph_uid=41, symbol_order=44)

Com_EB_Read_16_EL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  short unsigned int _1;
  int _2;
  short unsigned int _3;
  int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned int _9;
  short unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtrU16 => SignalDataPtr_12(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_14(D)->ComRxSignalFlags;
  index_15 = _1 & 47;
  # DEBUG index => index_15
  # DEBUG BEGIN_STMT
  _2 = (int) index_15;
  fptr_16 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_16 (SignalDataPtr_12(D), dataPtr_17(D), Com_EB_ReadPropPtr_14(D), retvalPtr_18(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = MEM[(uint16 *)SignalDataPtr_12(D)];
  _4 = (int) _3;
  _5 = Com_EB_ReadPropPtr_14(D)->ComBitSize;
  _6 = (unsigned int) _5;
  _7 = _6 + 4294967295;
  _8 = _4 >> _7;
  MSB_20 = (const boolean) _8;
  # DEBUG MSB => MSB_20
  # DEBUG BEGIN_STMT
  if (MSB_20 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _9 = 65535 << _7;
  sigExtMask_21 = (const uint16) _9;
  # DEBUG sigExtMask => sigExtMask_21
  # DEBUG BEGIN_STMT
  _10 = _3 | sigExtMask_21;
  MEM[(uint16 *)SignalDataPtr_12(D)] = _10;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_32_DL_SignExt (Com_EB_Read_32_DL_SignExt, funcdef_no=41, decl_uid=6778, cgraph_uid=42, symbol_order=45)

Com_EB_Read_32_DL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint32 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  short unsigned int _1;
  int _2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtrU32 => SignalDataPtr_10(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_12(D)->ComRxSignalFlags;
  index_13 = _1 & 39;
  # DEBUG index => index_13
  # DEBUG BEGIN_STMT
  _2 = (int) index_13;
  fptr_14 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_14 (SignalDataPtr_10(D), dataPtr_15(D), Com_EB_ReadPropPtr_12(D), retvalPtr_16(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = MEM[(uint32 *)SignalDataPtr_10(D)];
  _4 = Com_EB_ReadPropPtr_12(D)->ComBitSize;
  _5 = (unsigned int) _4;
  _6 = _5 + 4294967295;
  _7 = _3 >> _6;
  MSB_18 = (const boolean) _7;
  # DEBUG MSB => MSB_18
  # DEBUG BEGIN_STMT
  if (MSB_18 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  sigExtMask_19 = 4294967295 << _6;
  # DEBUG sigExtMask => sigExtMask_19
  # DEBUG BEGIN_STMT
  _8 = _3 | sigExtMask_19;
  MEM[(uint32 *)SignalDataPtr_10(D)] = _8;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_32_EL_SignExt (Com_EB_Read_32_EL_SignExt, funcdef_no=42, decl_uid=6783, cgraph_uid=43, symbol_order=46)

Com_EB_Read_32_EL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint32 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  short unsigned int _1;
  int _2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtrU32 => SignalDataPtr_10(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_12(D)->ComRxSignalFlags;
  index_13 = _1 & 47;
  # DEBUG index => index_13
  # DEBUG BEGIN_STMT
  _2 = (int) index_13;
  fptr_14 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_14 (SignalDataPtr_10(D), dataPtr_15(D), Com_EB_ReadPropPtr_12(D), retvalPtr_16(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = MEM[(uint32 *)SignalDataPtr_10(D)];
  _4 = Com_EB_ReadPropPtr_12(D)->ComBitSize;
  _5 = (unsigned int) _4;
  _6 = _5 + 4294967295;
  _7 = _3 >> _6;
  MSB_18 = (const boolean) _7;
  # DEBUG MSB => MSB_18
  # DEBUG BEGIN_STMT
  if (MSB_18 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  sigExtMask_19 = 4294967295 << _6;
  # DEBUG sigExtMask => sigExtMask_19
  # DEBUG BEGIN_STMT
  _8 = _3 | sigExtMask_19;
  MEM[(uint32 *)SignalDataPtr_10(D)] = _8;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_BO_DL (Com_EB_Read_BO_DL, funcdef_no=43, decl_uid=6788, cgraph_uid=44, symbol_order=47)

Com_EB_Read_BO_DL (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 bit;
  const uint16 pos;
  short unsigned int _1;
  unsigned char _2;
  sizetype _3;
  const uint8 * _4;
  unsigned char _5;
  int _6;
  int _7;
  unsigned char _8;
  unsigned char _9;
  _Bool _10;
  unsigned char _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtrBool => SignalDataPtr_12(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_14(D)->ComSignalPositionInBit;
  pos_15 = _1 >> 3;
  # DEBUG pos => pos_15
  # DEBUG BEGIN_STMT
  _2 = (unsigned char) _1;
  bit_16 = _2 & 7;
  # DEBUG bit => bit_16
  # DEBUG BEGIN_STMT
  _3 = (sizetype) pos_15;
  _4 = dataPtr_17(D) + _3;
  _5 = *_4;
  _6 = (int) bit_16;
  _7 = 1 << _6;
  _8 = (unsigned char) _7;
  _9 = _5 & _8;
  _10 = _9 != 0;
  _11 = (unsigned char) _10;
  MEM[(boolean *)SignalDataPtr_12(D)] = _11;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_A1_DL (Com_EB_Read_A1_DL, funcdef_no=44, decl_uid=6793, cgraph_uid=45, symbol_order=48)


Saving body of Com_EB_Read_A1_DL for later reuse
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1

Symbols to be put in SSA form
{ D.13641 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 4
Number of blocks to update: 3 ( 75%)


Com_EB_Read_A1_DL (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 pos;
  sizetype _1;
  const uint8 * _2;
  unsigned char _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtrU8 => SignalDataPtr_4(D)
  # DEBUG BEGIN_STMT
  pos_7 = Com_EB_ReadPropPtr_6(D)->ComSignalPositionInBit;
  # DEBUG pos => pos_7
  # DEBUG BEGIN_STMT
  _1 = (sizetype) pos_7;
  _2 = dataPtr_8(D) + _1;
  _3 = *_2;
  MEM[(uint8 *)SignalDataPtr_4(D)] = _3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_BO_EL (Com_EB_Read_BO_EL, funcdef_no=359, decl_uid=6798, cgraph_uid=46, symbol_order=49)

Com_EB_Read_BO_EL (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  <bb 2> [local count: 1073741824]:
  Com_EB_Read_BO_DL (SignalDataPtr_2(D), dataPtr_3(D), Com_EB_ReadPropPtr_4(D), retvalPtr_5(D)); [tail call]
  return;

}



;; Function Com_EB_Write_08_SX_DL_DUB_DOC_E1 (Com_EB_Write_08_SX_DL_DUB_DOC_E1, funcdef_no=49, decl_uid=7239, cgraph_uid=50, symbol_order=54)

Com_EB_Write_08_SX_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned short _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  int _32;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_31(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  row_34 = _2 >> 3;
  # DEBUG row => row_34
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_35 = _4 & 7;
  # DEBUG col => col_35
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _32 = _8 & 65535;
  _10 = (int) col_35;
  _11 = _32 << _10;
  mask_36 = (uint16) _11;
  # DEBUG mask => mask_36
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_37 = (uint16) _14;
  # DEBUG Val => Val_37
  # DEBUG BEGIN_STMT
  _15 = (sizetype) row_34;
  _16 = dataPtr_38(D) + _15;
  _17 = *_16;
  _18 = (unsigned char) _11;
  _19 = (unsigned char) _14;
  _3 = _17 ^ _19;
  _9 = _3 & _18;
  _21 = _9 ^ _17;
  *_16 = _21;
  # DEBUG BEGIN_STMT
  if (mask_36 > 255)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_40 = Val_37 >> 8;
  # DEBUG Val => Val_40
  # DEBUG BEGIN_STMT
  mask_41 = mask_36 >> 8;
  # DEBUG mask => mask_41
  # DEBUG BEGIN_STMT
  _22 = row_34 + 1;
  # DEBUG pos => (sint16) _22
  # DEBUG BEGIN_STMT
  _23 = (sizetype) _22;
  _24 = dataPtr_38(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_41;
  _27 = (unsigned char) Val_40;
  _13 = _25 ^ _27;
  _20 = _13 & _26;
  _28 = _20 ^ _25;
  *_24 = _28;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_16_SX_DL_DUB_DOC_E1 (Com_EB_Write_16_SX_DL_DUB_DOC_E1, funcdef_no=50, decl_uid=7244, cgraph_uid=51, symbol_order=55)

Com_EB_Write_16_SX_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned short pos.135_18;
  unsigned short _19;
  sizetype _20;
  uint8 * _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_31(D)];
  Val_32 = (uint32) _1;
  # DEBUG Val => Val_32
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  row_34 = _2 >> 3;
  # DEBUG row => row_34
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_35 = _4 & 7;
  # DEBUG col => col_35
  # DEBUG BEGIN_STMT
  pos_36 = (sint16) row_34;
  # DEBUG pos => pos_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_37 = 65535 >> _7;
  # DEBUG mask => mask_37
  # DEBUG BEGIN_STMT
  _8 = (int) col_35;
  mask_38 = mask_37 << _8;
  # DEBUG mask => mask_38
  # DEBUG BEGIN_STMT
  Val_39 = Val_32 << _8;
  # DEBUG Val => Val_39
  # DEBUG BEGIN_STMT
  _10 = (sizetype) row_34;
  _11 = dataPtr_40(D) + _10;
  _12 = *_11;
  _13 = (unsigned char) mask_38;
  _14 = (unsigned char) Val_39;
  _3 = _12 ^ _14;
  _9 = _3 & _13;
  _17 = _9 ^ _12;
  *_11 = _17;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_42 = Val_26 >> 8;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  mask_43 = mask_27 >> 8;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  pos.135_18 = (unsigned short) pos_28;
  _19 = pos.135_18 + 1;
  pos_44 = (sint16) _19;
  # DEBUG pos => pos_44
  # DEBUG BEGIN_STMT
  _20 = (sizetype) pos_44;
  _21 = dataPtr_40(D) + _20;
  _22 = *_21;
  _23 = (unsigned char) mask_43;
  _24 = (unsigned char) Val_42;
  _15 = _22 ^ _24;
  _16 = _15 & _23;
  _25 = _16 ^ _22;
  *_21 = _25;

  <bb 4> [local count: 1073741824]:
  # Val_26 = PHI <Val_39(2), Val_42(3)>
  # mask_27 = PHI <mask_38(2), mask_43(3)>
  # pos_28 = PHI <pos_36(2), pos_44(3)>
  # DEBUG pos => pos_28
  # DEBUG mask => mask_27
  # DEBUG Val => Val_26
  # DEBUG BEGIN_STMT
  if (mask_27 > 255)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_32_SX_DL_DUB_DOC_E1 (Com_EB_Write_32_SX_DL_DUB_DOC_E1, funcdef_no=51, decl_uid=7249, cgraph_uid=52, symbol_order=56)

Com_EB_Write_32_SX_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  short unsigned int _19;
  unsigned char _20;
  unsigned short _21;
  int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char ssize.133_26;
  unsigned char _27;
  unsigned short pos.134_28;
  unsigned short _29;
  unsigned char _30;
  int _31;
  unsigned int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  long unsigned int _48;
  unsigned char _49;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Val_47 = MEM[(const uint32 *)SignalDataPtr_46(D)];
  # DEBUG Val => Val_47
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_47
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_50(D)->ComSignalPositionInBit;
  row_51 = _1 >> 3;
  # DEBUG row => row_51
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_52 = _3 & 7;
  # DEBUG col => col_52
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_51
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_53 = 8 - col_52;
  # DEBUG space => space_53
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_50(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_54 = 4294967295 >> _6;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  _7 = (int) col_52;
  mask_55 = mask_54 << _7;
  # DEBUG mask => mask_55
  # DEBUG BEGIN_STMT
  _48 = Val_47 & 255;
  _8 = (int) _48;
  _10 = _8 << _7;
  putvalue_56 = (uint8) _10;
  # DEBUG putvalue => putvalue_56
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_51;
  _12 = dataPtr_57(D) + _11;
  _13 = *_12;
  _14 = (unsigned char) mask_55;
  _16 = _13 ^ putvalue_56;
  _17 = _14 & _16;
  _18 = _13 ^ _17;
  *_12 = _18;
  # DEBUG BEGIN_STMT
  _19 = Com_EB_WritePropPtr_50(D)->ComSignalBase.ComBitSize;
  _20 = (unsigned char) _19;
  _49 = col_52 + 248;
  tmp_val_59 = _20 + _49;
  # DEBUG tmp_val => tmp_val_59
  # DEBUG BEGIN_STMT
  ssize_60 = (sint8) tmp_val_59;
  # DEBUG ssize => ssize_60
  # DEBUG BEGIN_STMT
  _21 = row_51 + 1;
  pos_61 = (sint16) _21;
  # DEBUG pos => pos_61
  # DEBUG BEGIN_STMT
  _22 = (int) space_53;
  Val_62 = Val_47 >> _22;
  # DEBUG Val => Val_62
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_42;
  _24 = dataPtr_57(D) + _23;
  _25 = (unsigned char) Val_40;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  Val_67 = Val_40 >> 8;
  # DEBUG Val => Val_67
  # DEBUG BEGIN_STMT
  ssize.133_26 = (unsigned char) ssize_41;
  _27 = ssize.133_26 + 248;
  ssize_68 = (sint8) _27;
  # DEBUG ssize => ssize_68
  # DEBUG BEGIN_STMT
  pos.134_28 = (unsigned short) pos_42;
  _29 = pos.134_28 + 1;
  pos_69 = (sint16) _29;
  # DEBUG pos => pos_69

  <bb 4> [local count: 1073741824]:
  # Val_40 = PHI <Val_62(2), Val_67(3)>
  # ssize_41 = PHI <ssize_60(2), ssize_68(3)>
  # pos_42 = PHI <pos_61(2), pos_69(3)>
  # DEBUG pos => pos_42
  # DEBUG ssize => ssize_41
  # DEBUG Val => Val_40
  # DEBUG BEGIN_STMT
  if (ssize_41 > 7)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Val_2 = PHI <Val_40(4)>
  # ssize_9 = PHI <ssize_41(4)>
  # pos_15 = PHI <pos_42(4)>
  # DEBUG BEGIN_STMT
  if (ssize_9 > 0)
    goto <bb 6>; [59.00%]
  else
    goto <bb 7>; [41.00%]

  <bb 6> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_63 = (uint8) ssize_9;
  # DEBUG ssize_hlp => ssize_hlp_63
  # DEBUG BEGIN_STMT
  _30 = 8 - ssize_hlp_63;
  _31 = (int) _30;
  _32 = 255 >> _31;
  mask_u8_64 = (uint8) _32;
  # DEBUG mask_u8 => mask_u8_64
  # DEBUG BEGIN_STMT
  # DEBUG mask => _32
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_15;
  _34 = dataPtr_57(D) + _33;
  _35 = *_34;
  _37 = (unsigned char) Val_2;
  _36 = _35 ^ _37;
  _38 = _36 & mask_u8_64;
  _39 = _35 ^ _38;
  *_34 = _39;

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S0_DL_DUB_DOC_E1 (Com_EB_Write_AY_S0_DL_DUB_DOC_E1, funcdef_no=53, decl_uid=7259, cgraph_uid=54, symbol_order=58)

Com_EB_Write_AY_S0_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  sizetype _4;
  uint8 * _5;
  unsigned char _6;
  short unsigned int _7;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_10(D)

  <bb 3> [local count: 1073741824]:
  # ii_8 = PHI <0(2), ii_16(5)>
  # DEBUG ii => ii_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_12(D)->ComSignalPositionInBit;
  pos_13 = _1 + ii_8;
  # DEBUG pos => pos_13
  # DEBUG BEGIN_STMT
  _2 = (sizetype) ii_8;
  _3 = SignalDataPtr_10(D) + _2;
  _4 = (sizetype) pos_13;
  _5 = dataPtr_14(D) + _4;
  _6 = *_3;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  ii_16 = ii_8 + 1;
  # DEBUG ii => ii_16
  # DEBUG BEGIN_STMT
  _7 = Com_EB_WritePropPtr_12(D)->ComSignalBase.ComBitSize;
  if (_7 > ii_16)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S1_DL_DUB_DOC_E3 (Com_EB_Write_AY_S1_DL_DUB_DOC_E3, funcdef_no=54, decl_uid=7264, cgraph_uid=55, symbol_order=59)

Com_EB_Write_AY_S1_DL_DUB_DOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint32 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  long unsigned int _7;
  sizetype _10;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_11(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  # DEBUG DataPtr_Start => dataPtr_14(D) + _2
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _3 = SignalDataPtr_11(D) + ii_8;
  _10 = _2 + ii_8;
  _4 = dataPtr_14(D) + _10;
  _5 = *_3;
  *_4 = _5;
  # DEBUG BEGIN_STMT
  ii_17 = ii_8 + 1;
  # DEBUG ii => ii_17

  <bb 4> [local count: 1073741824]:
  # ii_8 = PHI <0(2), ii_17(3)>
  # DEBUG ii => ii_8
  # DEBUG BEGIN_STMT
  _6 = IntDataPtr_15(D)->arraySize;
  _7 = (long unsigned int) _6;
  if (_7 > ii_8)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  return;

}



;; Function Com_EB_Write_08_SX_DL_DUB_DOC_E2 (Com_EB_Write_08_SX_DL_DUB_DOC_E2, funcdef_no=55, decl_uid=7269, cgraph_uid=56, symbol_order=60)

Com_EB_Write_08_SX_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned short _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  int _32;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_31(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  row_34 = _2 >> 3;
  # DEBUG row => row_34
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_35 = _4 & 7;
  # DEBUG col => col_35
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _32 = _8 & 65535;
  _10 = (int) col_35;
  _11 = _32 << _10;
  mask_36 = (uint16) _11;
  # DEBUG mask => mask_36
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_37 = (uint16) _14;
  # DEBUG Val => Val_37
  # DEBUG BEGIN_STMT
  _15 = (sizetype) row_34;
  _16 = dataPtr_38(D) + _15;
  _17 = *_16;
  _18 = (unsigned char) _11;
  _19 = (unsigned char) _14;
  _3 = _17 ^ _19;
  _9 = _3 & _18;
  _21 = _9 ^ _17;
  *_16 = _21;
  # DEBUG BEGIN_STMT
  if (mask_36 > 255)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_40 = Val_37 >> 8;
  # DEBUG Val => Val_40
  # DEBUG BEGIN_STMT
  mask_41 = mask_36 >> 8;
  # DEBUG mask => mask_41
  # DEBUG BEGIN_STMT
  _22 = row_34 + 65535;
  pos_42 = (sint16) _22;
  # DEBUG pos => pos_42
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_42;
  _24 = dataPtr_38(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_41;
  _27 = (unsigned char) Val_40;
  _13 = _25 ^ _27;
  _20 = _13 & _26;
  _28 = _20 ^ _25;
  *_24 = _28;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_16_SX_DL_DUB_DOC_E2 (Com_EB_Write_16_SX_DL_DUB_DOC_E2, funcdef_no=56, decl_uid=7274, cgraph_uid=57, symbol_order=61)

Com_EB_Write_16_SX_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned short pos.129_18;
  unsigned short _19;
  sizetype _20;
  uint8 * _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_31(D)];
  Val_32 = (uint32) _1;
  # DEBUG Val => Val_32
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  row_34 = _2 >> 3;
  # DEBUG row => row_34
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_35 = _4 & 7;
  # DEBUG col => col_35
  # DEBUG BEGIN_STMT
  pos_36 = (sint16) row_34;
  # DEBUG pos => pos_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_37 = 65535 >> _7;
  # DEBUG mask => mask_37
  # DEBUG BEGIN_STMT
  _8 = (int) col_35;
  mask_38 = mask_37 << _8;
  # DEBUG mask => mask_38
  # DEBUG BEGIN_STMT
  Val_39 = Val_32 << _8;
  # DEBUG Val => Val_39
  # DEBUG BEGIN_STMT
  _10 = (sizetype) row_34;
  _11 = dataPtr_40(D) + _10;
  _12 = *_11;
  _13 = (unsigned char) mask_38;
  _14 = (unsigned char) Val_39;
  _3 = _12 ^ _14;
  _9 = _3 & _13;
  _17 = _9 ^ _12;
  *_11 = _17;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_42 = Val_26 >> 8;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  mask_43 = mask_27 >> 8;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  pos.129_18 = (unsigned short) pos_28;
  _19 = pos.129_18 + 65535;
  pos_44 = (sint16) _19;
  # DEBUG pos => pos_44
  # DEBUG BEGIN_STMT
  _20 = (sizetype) pos_44;
  _21 = dataPtr_40(D) + _20;
  _22 = *_21;
  _23 = (unsigned char) mask_43;
  _24 = (unsigned char) Val_42;
  _15 = _22 ^ _24;
  _16 = _15 & _23;
  _25 = _16 ^ _22;
  *_21 = _25;

  <bb 4> [local count: 1073741824]:
  # Val_26 = PHI <Val_39(2), Val_42(3)>
  # mask_27 = PHI <mask_38(2), mask_43(3)>
  # pos_28 = PHI <pos_36(2), pos_44(3)>
  # DEBUG pos => pos_28
  # DEBUG mask => mask_27
  # DEBUG Val => Val_26
  # DEBUG BEGIN_STMT
  if (mask_27 > 255)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_32_SX_DL_DUB_DOC_E2 (Com_EB_Write_32_SX_DL_DUB_DOC_E2, funcdef_no=57, decl_uid=7279, cgraph_uid=58, symbol_order=62)

Com_EB_Write_32_SX_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  short unsigned int _19;
  unsigned char _20;
  unsigned short _21;
  int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char ssize.127_26;
  unsigned char _27;
  unsigned short pos.128_28;
  unsigned short _29;
  unsigned char _30;
  int _31;
  unsigned int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  long unsigned int _48;
  unsigned char _49;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Val_47 = MEM[(const uint32 *)SignalDataPtr_46(D)];
  # DEBUG Val => Val_47
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_47
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_50(D)->ComSignalPositionInBit;
  row_51 = _1 >> 3;
  # DEBUG row => row_51
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_52 = _3 & 7;
  # DEBUG col => col_52
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_51
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_53 = 8 - col_52;
  # DEBUG space => space_53
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_50(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_54 = 4294967295 >> _6;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  _7 = (int) col_52;
  mask_55 = mask_54 << _7;
  # DEBUG mask => mask_55
  # DEBUG BEGIN_STMT
  _48 = Val_47 & 255;
  _8 = (int) _48;
  _10 = _8 << _7;
  putvalue_56 = (uint8) _10;
  # DEBUG putvalue => putvalue_56
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_51;
  _12 = dataPtr_57(D) + _11;
  _13 = *_12;
  _14 = (unsigned char) mask_55;
  _16 = _13 ^ putvalue_56;
  _17 = _14 & _16;
  _18 = _13 ^ _17;
  *_12 = _18;
  # DEBUG BEGIN_STMT
  _19 = Com_EB_WritePropPtr_50(D)->ComSignalBase.ComBitSize;
  _20 = (unsigned char) _19;
  _49 = col_52 + 248;
  tmp_val_59 = _20 + _49;
  # DEBUG tmp_val => tmp_val_59
  # DEBUG BEGIN_STMT
  ssize_60 = (sint8) tmp_val_59;
  # DEBUG ssize => ssize_60
  # DEBUG BEGIN_STMT
  _21 = row_51 + 65535;
  pos_61 = (sint16) _21;
  # DEBUG pos => pos_61
  # DEBUG BEGIN_STMT
  _22 = (int) space_53;
  Val_62 = Val_47 >> _22;
  # DEBUG Val => Val_62
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_42;
  _24 = dataPtr_57(D) + _23;
  _25 = (unsigned char) Val_40;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  Val_67 = Val_40 >> 8;
  # DEBUG Val => Val_67
  # DEBUG BEGIN_STMT
  ssize.127_26 = (unsigned char) ssize_41;
  _27 = ssize.127_26 + 248;
  ssize_68 = (sint8) _27;
  # DEBUG ssize => ssize_68
  # DEBUG BEGIN_STMT
  pos.128_28 = (unsigned short) pos_42;
  _29 = pos.128_28 + 65535;
  pos_69 = (sint16) _29;
  # DEBUG pos => pos_69

  <bb 4> [local count: 1073741824]:
  # Val_40 = PHI <Val_62(2), Val_67(3)>
  # ssize_41 = PHI <ssize_60(2), ssize_68(3)>
  # pos_42 = PHI <pos_61(2), pos_69(3)>
  # DEBUG pos => pos_42
  # DEBUG ssize => ssize_41
  # DEBUG Val => Val_40
  # DEBUG BEGIN_STMT
  if (ssize_41 > 7)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Val_2 = PHI <Val_40(4)>
  # ssize_9 = PHI <ssize_41(4)>
  # pos_15 = PHI <pos_42(4)>
  # DEBUG BEGIN_STMT
  if (ssize_9 > 0)
    goto <bb 6>; [59.00%]
  else
    goto <bb 7>; [41.00%]

  <bb 6> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_63 = (uint8) ssize_9;
  # DEBUG ssize_hlp => ssize_hlp_63
  # DEBUG BEGIN_STMT
  _30 = 8 - ssize_hlp_63;
  _31 = (int) _30;
  _32 = 255 >> _31;
  mask_u8_64 = (uint8) _32;
  # DEBUG mask_u8 => mask_u8_64
  # DEBUG BEGIN_STMT
  # DEBUG mask => _32
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_15;
  _34 = dataPtr_57(D) + _33;
  _35 = *_34;
  _37 = (unsigned char) Val_2;
  _36 = _35 ^ _37;
  _38 = _36 & mask_u8_64;
  _39 = _35 ^ _38;
  *_34 = _39;

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S0_DL_DUB_DOC_E2 (Com_EB_Write_AY_S0_DL_DUB_DOC_E2, funcdef_no=59, decl_uid=7289, cgraph_uid=60, symbol_order=64)

Com_EB_Write_AY_S0_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  const uint8 * _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int _10;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_13(D)

  <bb 3> [local count: 1073741824]:
  # ii_11 = PHI <0(2), ii_19(5)>
  # DEBUG ii => ii_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_15(D)->ComSignalPositionInBit;
  _2 = Com_EB_WritePropPtr_15(D)->ComSignalBase.ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_11;
  pos_16 = _4 + 65535;
  # DEBUG pos => pos_16
  # DEBUG BEGIN_STMT
  _5 = (sizetype) ii_11;
  _6 = SignalDataPtr_13(D) + _5;
  _7 = (sizetype) pos_16;
  _8 = dataPtr_17(D) + _7;
  _9 = *_6;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  ii_19 = ii_11 + 1;
  # DEBUG ii => ii_19
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_15(D)->ComSignalBase.ComBitSize;
  if (_10 > ii_19)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_08_SX_DL_DUB_EOC_E1 (Com_EB_Write_08_SX_DL_DUB_EOC_E1, funcdef_no=60, decl_uid=7294, cgraph_uid=61, symbol_order=65)

Com_EB_Write_08_SX_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned short _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  int _35;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_37(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_38(D)->ComSignalPositionInBit;
  row_39 = _2 >> 3;
  # DEBUG row => row_39
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_40 = _4 & 7;
  # DEBUG col => col_40
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_38(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _35 = _8 & 65535;
  _10 = (int) col_40;
  _11 = _35 << _10;
  mask_41 = (uint16) _11;
  # DEBUG mask => mask_41
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_42 = (uint16) _14;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = (sizetype) row_39;
  _16 = dataPtr_43(D) + _15;
  _17 = *_16;
  _19 = (unsigned char) _11;
  _20 = (unsigned char) _14;
  _3 = _17 ^ _20;
  _9 = _3 & _19;
  _21 = _9 ^ _17;
  if (_17 != _21)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 1073741824]:
  # valueChanged_31 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_16 = _21;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_41 > 255)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_45 = Val_42 >> 8;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  mask_46 = mask_41 >> 8;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _22 = row_39 + 1;
  # DEBUG pos => (sint16) _22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) _22;
  _24 = dataPtr_43(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_46;
  _27 = (unsigned char) Val_45;
  _13 = _25 ^ _27;
  _18 = _13 & _26;
  _28 = _18 ^ _25;
  if (_25 != _28)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 536870913]:
  # valueChanged_32 = PHI <valueChanged_31(5), 1(6)>
  # DEBUG valueChanged => valueChanged_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_24 = _28;

  <bb 8> [local count: 1073741824]:
  # valueChanged_33 = PHI <valueChanged_31(4), valueChanged_32(7)>
  # DEBUG valueChanged => valueChanged_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = IntDataPtr_48(D)->trigger;
  _30 = _29 | valueChanged_33;
  IntDataPtr_48(D)->trigger = _30;
  return;

}



;; Function Com_EB_Write_16_SX_DL_DUB_EOC_E1 (Com_EB_Write_16_SX_DL_DUB_EOC_E1, funcdef_no=61, decl_uid=7299, cgraph_uid=62, symbol_order=66)

Com_EB_Write_16_SX_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned short pos.123_19;
  unsigned short _20;
  sizetype _21;
  uint8 * _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_37(D)];
  Val_38 = (uint32) _1;
  # DEBUG Val => Val_38
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _2 >> 3;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_41 = _4 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  pos_42 = (sint16) row_40;
  # DEBUG pos => pos_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_39(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_43 = 65535 >> _7;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _8 = (int) col_41;
  mask_44 = mask_43 << _8;
  # DEBUG mask => mask_44
  # DEBUG BEGIN_STMT
  Val_45 = Val_38 << _8;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (sizetype) row_40;
  _11 = dataPtr_46(D) + _10;
  _12 = *_11;
  _16 = (unsigned char) mask_44;
  _17 = (unsigned char) Val_45;
  _9 = _12 ^ _17;
  _13 = _9 & _16;
  _18 = _12 ^ _13;
  if (_12 != _18)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_29 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_11 = _18;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_50 = Val_32 >> 8;
  # DEBUG Val => Val_50
  # DEBUG BEGIN_STMT
  mask_51 = mask_33 >> 8;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  pos.123_19 = (unsigned short) pos_34;
  _20 = pos.123_19 + 1;
  pos_52 = (sint16) _20;
  # DEBUG pos => pos_52
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _21 = (sizetype) pos_52;
  _22 = dataPtr_46(D) + _21;
  _23 = *_22;
  _24 = (unsigned char) mask_51;
  _25 = (unsigned char) Val_50;
  _14 = _23 ^ _25;
  _15 = _14 & _24;
  _26 = _15 ^ _23;
  if (_23 != _26)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_30 = PHI <valueChanged_31(5), 1(6)>
  # DEBUG valueChanged => valueChanged_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_22 = _26;

  <bb 8> [local count: 1073741824]:
  # valueChanged_31 = PHI <valueChanged_29(4), valueChanged_30(7)>
  # Val_32 = PHI <Val_45(4), Val_50(7)>
  # mask_33 = PHI <mask_44(4), mask_51(7)>
  # pos_34 = PHI <pos_42(4), pos_52(7)>
  # DEBUG pos => pos_34
  # DEBUG mask => mask_33
  # DEBUG Val => Val_32
  # DEBUG valueChanged => valueChanged_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_33 > 255)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_3 = PHI <valueChanged_31(8)>
  # DEBUG BEGIN_STMT
  _27 = IntDataPtr_48(D)->trigger;
  _28 = valueChanged_3 | _27;
  IntDataPtr_48(D)->trigger = _28;
  return;

}



;; Function Com_EB_Write_32_SX_DL_DUB_EOC_E1 (Com_EB_Write_32_SX_DL_DUB_EOC_E1, funcdef_no=62, decl_uid=7304, cgraph_uid=63, symbol_order=67)

Com_EB_Write_32_SX_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  short unsigned int _20;
  unsigned char _21;
  unsigned char _22;
  unsigned short _23;
  int _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.121_29;
  unsigned char _30;
  unsigned short pos.122_31;
  unsigned short _32;
  unsigned char _33;
  int _34;
  unsigned int _35;
  sizetype _36;
  uint8 * _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  long unsigned int _53;
  unsigned char _57;
  unsigned char _66;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_56
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_58(D)->ComSignalPositionInBit;
  row_59 = _1 >> 3;
  # DEBUG row => row_59
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_60 = _3 & 7;
  # DEBUG col => col_60
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_61 = 8 - col_60;
  # DEBUG space => space_61
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_58(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_62 = 4294967295 >> _6;
  # DEBUG mask => mask_62
  # DEBUG BEGIN_STMT
  _7 = (int) col_60;
  mask_63 = mask_62 << _7;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _53 = Val_56 & 255;
  _8 = (int) _53;
  _10 = _8 << _7;
  putvalue_64 = (uint8) _10;
  # DEBUG putvalue => putvalue_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_59;
  _12 = dataPtr_65(D) + _11;
  _13 = *_12;
  _17 = (unsigned char) mask_63;
  _16 = _13 ^ putvalue_64;
  _18 = _16 & _17;
  _19 = _13 ^ _18;
  if (_13 != _19)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_43 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_43
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_12 = _19;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = Com_EB_WritePropPtr_58(D)->ComSignalBase.ComBitSize;
  _21 = (unsigned char) _20;
  _57 = col_60 + 248;
  tmp_val_68 = _21 + _57;
  # DEBUG tmp_val => tmp_val_68
  # DEBUG BEGIN_STMT
  ssize_69 = (sint8) tmp_val_68;
  # DEBUG ssize => ssize_69
  # DEBUG BEGIN_STMT
  _23 = row_59 + 1;
  pos_70 = (sint16) _23;
  # DEBUG pos => pos_70
  # DEBUG BEGIN_STMT
  _24 = (int) space_61;
  Val_71 = Val_56 >> _24;
  # DEBUG Val => Val_71
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_50;
  _26 = dataPtr_65(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) Val_48;
  if (_27 != _28)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_44 = PHI <valueChanged_45(5), 1(6)>
  # DEBUG valueChanged => valueChanged_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_26 = _28;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_78 = Val_48 >> 8;
  # DEBUG Val => Val_78
  # DEBUG BEGIN_STMT
  ssize.121_29 = (unsigned char) ssize_49;
  _30 = ssize.121_29 + 248;
  ssize_79 = (sint8) _30;
  # DEBUG ssize => ssize_79
  # DEBUG BEGIN_STMT
  pos.122_31 = (unsigned short) pos_50;
  _32 = pos.122_31 + 1;
  pos_80 = (sint16) _32;
  # DEBUG pos => pos_80

  <bb 8> [local count: 1073741824]:
  # valueChanged_45 = PHI <valueChanged_43(4), valueChanged_44(7)>
  # Val_48 = PHI <Val_71(4), Val_78(7)>
  # ssize_49 = PHI <ssize_69(4), ssize_79(7)>
  # pos_50 = PHI <pos_70(4), pos_80(7)>
  # DEBUG pos => pos_50
  # DEBUG ssize => ssize_49
  # DEBUG Val => Val_48
  # DEBUG valueChanged => valueChanged_45
  # DEBUG BEGIN_STMT
  if (ssize_49 > 7)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_2 = PHI <valueChanged_45(8)>
  # Val_9 = PHI <Val_48(8)>
  # ssize_14 = PHI <ssize_49(8)>
  # pos_15 = PHI <pos_50(8)>
  # DEBUG BEGIN_STMT
  if (ssize_14 > 0)
    goto <bb 10>; [59.00%]
  else
    goto <bb 13>; [41.00%]

  <bb 10> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_72 = (uint8) ssize_14;
  # DEBUG ssize_hlp => ssize_hlp_72
  # DEBUG BEGIN_STMT
  _33 = 8 - ssize_hlp_72;
  _34 = (int) _33;
  _35 = 255 >> _34;
  mask_u8_73 = (uint8) _35;
  # DEBUG mask_u8 => mask_u8_73
  # DEBUG BEGIN_STMT
  # DEBUG mask => _35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = (sizetype) pos_15;
  _37 = dataPtr_65(D) + _36;
  _38 = *_37;
  _39 = (unsigned char) Val_9;
  _66 = _38 ^ _39;
  _22 = _66 & mask_u8_73;
  _40 = _22 ^ _38;
  if (_38 != _40)
    goto <bb 11>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 11> [local count: 45992657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 12> [local count: 69685844]:
  # valueChanged_46 = PHI <valueChanged_2(10), 1(11)>
  # DEBUG valueChanged => valueChanged_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_37 = _40;

  <bb 13> [local count: 118111601]:
  # valueChanged_47 = PHI <valueChanged_2(9), valueChanged_46(12)>
  # DEBUG valueChanged => valueChanged_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _41 = IntDataPtr_75(D)->trigger;
  _42 = _41 | valueChanged_47;
  IntDataPtr_75(D)->trigger = _42;
  return;

}



;; Function Com_EB_Write_AY_S0_DL_DUB_EOC_E1 (Com_EB_Write_AY_S0_DL_DUB_EOC_E1, funcdef_no=64, decl_uid=7314, cgraph_uid=65, symbol_order=69)

Com_EB_Write_AY_S0_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  short unsigned int _9;
  unsigned char _10;
  unsigned char _11;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_16(D)

  <bb 3> [local count: 1073741824]:
  # valueChanged_12 = PHI <0(2), valueChanged_13(7)>
  # ii_14 = PHI <0(2), ii_22(7)>
  # DEBUG ii => ii_14
  # DEBUG valueChanged => valueChanged_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_18(D)->ComSignalPositionInBit;
  pos_19 = _1 + ii_14;
  # DEBUG pos => pos_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_19;
  _3 = dataPtr_20(D) + _2;
  _4 = *_3;
  _5 = (sizetype) ii_14;
  _6 = SignalDataPtr_16(D) + _5;
  _7 = *_6;
  if (_4 != _7)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 1073741824]:
  # valueChanged_13 = PHI <valueChanged_12(3), 1(4)>
  # DEBUG valueChanged => valueChanged_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_3 = _7;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_22 = ii_14 + 1;
  # DEBUG ii => ii_22
  # DEBUG BEGIN_STMT
  _9 = Com_EB_WritePropPtr_18(D)->ComSignalBase.ComBitSize;
  if (_9 > ii_22)
    goto <bb 7>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 7> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 118111601]:
  # valueChanged_8 = PHI <valueChanged_13(5)>
  # DEBUG BEGIN_STMT
  _10 = IntDataPtr_23(D)->trigger;
  _11 = valueChanged_8 | _10;
  IntDataPtr_23(D)->trigger = _11;
  return;

}



;; Function Com_EB_Write_AY_S1_DL_DUB_EOC_E3 (Com_EB_Write_AY_S1_DL_DUB_EOC_E3, funcdef_no=65, decl_uid=7319, cgraph_uid=66, symbol_order=70)

Com_EB_Write_AY_S1_DL_DUB_EOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint32 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  unsigned char _4;
  const uint8 * _5;
  unsigned char _6;
  sizetype _8;
  short unsigned int _9;
  long unsigned int _10;
  unsigned char _11;
  unsigned char _12;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_17(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_19(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  # DEBUG DataPtr_Start => dataPtr_20(D) + _2
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = _2 + ii_15;
  _3 = dataPtr_20(D) + _8;
  _4 = *_3;
  _5 = SignalDataPtr_17(D) + ii_15;
  _6 = *_5;
  if (_4 != _6)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 955630223]:
  # valueChanged_13 = PHI <valueChanged_14(3), 1(4)>
  # DEBUG valueChanged => valueChanged_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_3 = _6;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_24 = ii_15 + 1;
  # DEBUG ii => ii_24

  <bb 6> [local count: 1073741824]:
  # valueChanged_14 = PHI <0(2), valueChanged_13(5)>
  # ii_15 = PHI <0(2), ii_24(5)>
  # DEBUG ii => ii_15
  # DEBUG valueChanged => valueChanged_14
  # DEBUG BEGIN_STMT
  _9 = IntDataPtr_21(D)->arraySize;
  _10 = (long unsigned int) _9;
  if (_10 > ii_15)
    goto <bb 3>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # valueChanged_7 = PHI <valueChanged_14(6)>
  # DEBUG BEGIN_STMT
  _11 = IntDataPtr_21(D)->trigger;
  _12 = valueChanged_7 | _11;
  IntDataPtr_21(D)->trigger = _12;
  return;

}



;; Function Com_EB_Write_08_SX_DL_DUB_EOC_E2 (Com_EB_Write_08_SX_DL_DUB_EOC_E2, funcdef_no=66, decl_uid=7324, cgraph_uid=67, symbol_order=71)

Com_EB_Write_08_SX_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned short _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  int _35;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_37(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_38(D)->ComSignalPositionInBit;
  row_39 = _2 >> 3;
  # DEBUG row => row_39
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_40 = _4 & 7;
  # DEBUG col => col_40
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_38(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _35 = _8 & 65535;
  _10 = (int) col_40;
  _11 = _35 << _10;
  mask_41 = (uint16) _11;
  # DEBUG mask => mask_41
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_42 = (uint16) _14;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = (sizetype) row_39;
  _16 = dataPtr_43(D) + _15;
  _17 = *_16;
  _19 = (unsigned char) _11;
  _20 = (unsigned char) _14;
  _3 = _17 ^ _20;
  _9 = _3 & _19;
  _21 = _9 ^ _17;
  if (_17 != _21)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 1073741824]:
  # valueChanged_31 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_16 = _21;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_41 > 255)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_45 = Val_42 >> 8;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  mask_46 = mask_41 >> 8;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _22 = row_39 + 65535;
  pos_47 = (sint16) _22;
  # DEBUG pos => pos_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_47;
  _24 = dataPtr_43(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_46;
  _27 = (unsigned char) Val_45;
  _13 = _25 ^ _27;
  _18 = _13 & _26;
  _28 = _18 ^ _25;
  if (_25 != _28)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 536870913]:
  # valueChanged_32 = PHI <valueChanged_31(5), 1(6)>
  # DEBUG valueChanged => valueChanged_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_24 = _28;

  <bb 8> [local count: 1073741824]:
  # valueChanged_33 = PHI <valueChanged_31(4), valueChanged_32(7)>
  # DEBUG valueChanged => valueChanged_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = IntDataPtr_49(D)->trigger;
  _30 = _29 | valueChanged_33;
  IntDataPtr_49(D)->trigger = _30;
  return;

}



;; Function Com_EB_Write_16_SX_DL_DUB_EOC_E2 (Com_EB_Write_16_SX_DL_DUB_EOC_E2, funcdef_no=67, decl_uid=7329, cgraph_uid=68, symbol_order=72)

Com_EB_Write_16_SX_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned short pos.117_19;
  unsigned short _20;
  sizetype _21;
  uint8 * _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_37(D)];
  Val_38 = (uint32) _1;
  # DEBUG Val => Val_38
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _2 >> 3;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_41 = _4 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  pos_42 = (sint16) row_40;
  # DEBUG pos => pos_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_39(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_43 = 65535 >> _7;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _8 = (int) col_41;
  mask_44 = mask_43 << _8;
  # DEBUG mask => mask_44
  # DEBUG BEGIN_STMT
  Val_45 = Val_38 << _8;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (sizetype) row_40;
  _11 = dataPtr_46(D) + _10;
  _12 = *_11;
  _16 = (unsigned char) mask_44;
  _17 = (unsigned char) Val_45;
  _9 = _12 ^ _17;
  _13 = _9 & _16;
  _18 = _12 ^ _13;
  if (_12 != _18)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_29 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_11 = _18;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_50 = Val_32 >> 8;
  # DEBUG Val => Val_50
  # DEBUG BEGIN_STMT
  mask_51 = mask_33 >> 8;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  pos.117_19 = (unsigned short) pos_34;
  _20 = pos.117_19 + 65535;
  pos_52 = (sint16) _20;
  # DEBUG pos => pos_52
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _21 = (sizetype) pos_52;
  _22 = dataPtr_46(D) + _21;
  _23 = *_22;
  _24 = (unsigned char) mask_51;
  _25 = (unsigned char) Val_50;
  _14 = _23 ^ _25;
  _15 = _14 & _24;
  _26 = _15 ^ _23;
  if (_23 != _26)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_30 = PHI <valueChanged_31(5), 1(6)>
  # DEBUG valueChanged => valueChanged_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_22 = _26;

  <bb 8> [local count: 1073741824]:
  # valueChanged_31 = PHI <valueChanged_29(4), valueChanged_30(7)>
  # Val_32 = PHI <Val_45(4), Val_50(7)>
  # mask_33 = PHI <mask_44(4), mask_51(7)>
  # pos_34 = PHI <pos_42(4), pos_52(7)>
  # DEBUG pos => pos_34
  # DEBUG mask => mask_33
  # DEBUG Val => Val_32
  # DEBUG valueChanged => valueChanged_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_33 > 255)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_3 = PHI <valueChanged_31(8)>
  # DEBUG BEGIN_STMT
  _27 = IntDataPtr_48(D)->trigger;
  _28 = valueChanged_3 | _27;
  IntDataPtr_48(D)->trigger = _28;
  return;

}



;; Function Com_EB_Write_32_SX_DL_DUB_EOC_E2 (Com_EB_Write_32_SX_DL_DUB_EOC_E2, funcdef_no=68, decl_uid=7334, cgraph_uid=69, symbol_order=73)

Com_EB_Write_32_SX_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  short unsigned int _20;
  unsigned char _21;
  unsigned char _22;
  unsigned short _23;
  int _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.115_29;
  unsigned char _30;
  unsigned short pos.116_31;
  unsigned short _32;
  unsigned char _33;
  int _34;
  unsigned int _35;
  sizetype _36;
  uint8 * _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  long unsigned int _53;
  unsigned char _57;
  unsigned char _66;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_56
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_58(D)->ComSignalPositionInBit;
  row_59 = _1 >> 3;
  # DEBUG row => row_59
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_60 = _3 & 7;
  # DEBUG col => col_60
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_61 = 8 - col_60;
  # DEBUG space => space_61
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_58(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_62 = 4294967295 >> _6;
  # DEBUG mask => mask_62
  # DEBUG BEGIN_STMT
  _7 = (int) col_60;
  mask_63 = mask_62 << _7;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _53 = Val_56 & 255;
  _8 = (int) _53;
  _10 = _8 << _7;
  putvalue_64 = (uint8) _10;
  # DEBUG putvalue => putvalue_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_59;
  _12 = dataPtr_65(D) + _11;
  _13 = *_12;
  _17 = (unsigned char) mask_63;
  _16 = _13 ^ putvalue_64;
  _18 = _16 & _17;
  _19 = _13 ^ _18;
  if (_13 != _19)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_43 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_43
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_12 = _19;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = Com_EB_WritePropPtr_58(D)->ComSignalBase.ComBitSize;
  _21 = (unsigned char) _20;
  _57 = col_60 + 248;
  tmp_val_68 = _21 + _57;
  # DEBUG tmp_val => tmp_val_68
  # DEBUG BEGIN_STMT
  ssize_69 = (sint8) tmp_val_68;
  # DEBUG ssize => ssize_69
  # DEBUG BEGIN_STMT
  _23 = row_59 + 65535;
  pos_70 = (sint16) _23;
  # DEBUG pos => pos_70
  # DEBUG BEGIN_STMT
  _24 = (int) space_61;
  Val_71 = Val_56 >> _24;
  # DEBUG Val => Val_71
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_50;
  _26 = dataPtr_65(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) Val_48;
  if (_27 != _28)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_44 = PHI <valueChanged_45(5), 1(6)>
  # DEBUG valueChanged => valueChanged_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_26 = _28;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_78 = Val_48 >> 8;
  # DEBUG Val => Val_78
  # DEBUG BEGIN_STMT
  ssize.115_29 = (unsigned char) ssize_49;
  _30 = ssize.115_29 + 248;
  ssize_79 = (sint8) _30;
  # DEBUG ssize => ssize_79
  # DEBUG BEGIN_STMT
  pos.116_31 = (unsigned short) pos_50;
  _32 = pos.116_31 + 65535;
  pos_80 = (sint16) _32;
  # DEBUG pos => pos_80

  <bb 8> [local count: 1073741824]:
  # valueChanged_45 = PHI <valueChanged_43(4), valueChanged_44(7)>
  # Val_48 = PHI <Val_71(4), Val_78(7)>
  # ssize_49 = PHI <ssize_69(4), ssize_79(7)>
  # pos_50 = PHI <pos_70(4), pos_80(7)>
  # DEBUG pos => pos_50
  # DEBUG ssize => ssize_49
  # DEBUG Val => Val_48
  # DEBUG valueChanged => valueChanged_45
  # DEBUG BEGIN_STMT
  if (ssize_49 > 7)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_2 = PHI <valueChanged_45(8)>
  # Val_9 = PHI <Val_48(8)>
  # ssize_14 = PHI <ssize_49(8)>
  # pos_15 = PHI <pos_50(8)>
  # DEBUG BEGIN_STMT
  if (ssize_14 > 0)
    goto <bb 10>; [59.00%]
  else
    goto <bb 13>; [41.00%]

  <bb 10> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_72 = (uint8) ssize_14;
  # DEBUG ssize_hlp => ssize_hlp_72
  # DEBUG BEGIN_STMT
  _33 = 8 - ssize_hlp_72;
  _34 = (int) _33;
  _35 = 255 >> _34;
  mask_u8_73 = (uint8) _35;
  # DEBUG mask_u8 => mask_u8_73
  # DEBUG BEGIN_STMT
  # DEBUG mask => _35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = (sizetype) pos_15;
  _37 = dataPtr_65(D) + _36;
  _38 = *_37;
  _39 = (unsigned char) Val_9;
  _66 = _38 ^ _39;
  _22 = _66 & mask_u8_73;
  _40 = _22 ^ _38;
  if (_38 != _40)
    goto <bb 11>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 11> [local count: 45992657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 12> [local count: 69685844]:
  # valueChanged_46 = PHI <valueChanged_2(10), 1(11)>
  # DEBUG valueChanged => valueChanged_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_37 = _40;

  <bb 13> [local count: 118111601]:
  # valueChanged_47 = PHI <valueChanged_2(9), valueChanged_46(12)>
  # DEBUG valueChanged => valueChanged_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _41 = IntDataPtr_75(D)->trigger;
  _42 = _41 | valueChanged_47;
  IntDataPtr_75(D)->trigger = _42;
  return;

}



;; Function Com_EB_Write_AY_S0_DL_DUB_EOC_E2 (Com_EB_Write_AY_S0_DL_DUB_EOC_E2, funcdef_no=70, decl_uid=7344, cgraph_uid=71, symbol_order=75)

Com_EB_Write_AY_S0_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  sizetype _8;
  const uint8 * _9;
  unsigned char _10;
  short unsigned int _12;
  unsigned char _13;
  unsigned char _14;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_19(D)

  <bb 3> [local count: 1073741824]:
  # valueChanged_15 = PHI <0(2), valueChanged_16(7)>
  # ii_17 = PHI <0(2), ii_25(7)>
  # DEBUG ii => ii_17
  # DEBUG valueChanged => valueChanged_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_21(D)->ComSignalPositionInBit;
  _2 = Com_EB_WritePropPtr_21(D)->ComSignalBase.ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_17;
  pos_22 = _4 + 65535;
  # DEBUG pos => pos_22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_22;
  _6 = dataPtr_23(D) + _5;
  _7 = *_6;
  _8 = (sizetype) ii_17;
  _9 = SignalDataPtr_19(D) + _8;
  _10 = *_9;
  if (_7 != _10)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 1073741824]:
  # valueChanged_16 = PHI <valueChanged_15(3), 1(4)>
  # DEBUG valueChanged => valueChanged_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_6 = _10;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_25 = ii_17 + 1;
  # DEBUG ii => ii_25
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_21(D)->ComSignalBase.ComBitSize;
  if (_12 > ii_25)
    goto <bb 7>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 7> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 118111601]:
  # valueChanged_11 = PHI <valueChanged_16(5)>
  # DEBUG BEGIN_STMT
  _13 = IntDataPtr_26(D)->trigger;
  _14 = valueChanged_11 | _13;
  IntDataPtr_26(D)->trigger = _14;
  return;

}



;; Function Com_EB_Write_08_SX_DL_EUB_DOC_E1 (Com_EB_Write_08_SX_DL_EUB_DOC_E1, funcdef_no=71, decl_uid=7349, cgraph_uid=72, symbol_order=76)

Com_EB_Write_08_SX_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  unsigned char _10;
  int _11;
  int _12;
  int _13;
  unsigned char _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  unsigned char _21;
  unsigned int _22;
  unsigned int _23;
  unsigned char _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned short _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  int _42;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_41(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _2 >> 3;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_45 = _4 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = Com_EB_WritePropPtr_43(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = 255 >> _8;
  # DEBUG mask => (uint16) _9
  # DEBUG BEGIN_STMT
  _42 = _9 & 65535;
  _11 = (int) col_45;
  _12 = _42 << _11;
  mask_46 = (uint16) _12;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _13 = (int) _1;
  _15 = _13 << _11;
  Val_47 = (uint16) _15;
  # DEBUG Val => Val_47
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_43(D)->ComUpdateBitPositionInBit;
  _17 = _16 >> 3;
  _18 = (sizetype) _17;
  _19 = dataPtr_48(D) + _18;
  _20 = *_19;
  _5 = _16 & 7;
  _22 = (unsigned int) _5;
  _23 = 1 << _22;
  _24 = (unsigned char) _23;
  _25 = _20 | _24;
  *_19 = _25;
  # DEBUG BEGIN_STMT
  _26 = (sizetype) row_44;
  _27 = dataPtr_48(D) + _26;
  _28 = *_27;
  _29 = (unsigned char) _12;
  _30 = (unsigned char) _15;
  _3 = _28 ^ _30;
  _10 = _3 & _29;
  _31 = _10 ^ _28;
  *_27 = _31;
  # DEBUG BEGIN_STMT
  if (mask_46 > 255)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_51 = Val_47 >> 8;
  # DEBUG Val => Val_51
  # DEBUG BEGIN_STMT
  mask_52 = mask_46 >> 8;
  # DEBUG mask => mask_52
  # DEBUG BEGIN_STMT
  _32 = row_44 + 1;
  # DEBUG pos => (sint16) _32
  # DEBUG BEGIN_STMT
  _33 = (sizetype) _32;
  _34 = dataPtr_48(D) + _33;
  _35 = *_34;
  _36 = (unsigned char) mask_52;
  _37 = (unsigned char) Val_51;
  _14 = _35 ^ _37;
  _21 = _14 & _36;
  _38 = _21 ^ _35;
  *_34 = _38;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_16_SX_DL_EUB_DOC_E1 (Com_EB_Write_16_SX_DL_EUB_DOC_E1, funcdef_no=72, decl_uid=7354, cgraph_uid=73, symbol_order=77)

Com_EB_Write_16_SX_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  sizetype _21;
  uint8 * _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned short pos.111_27;
  unsigned short _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  short unsigned int _42;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_40(D)];
  Val_41 = (uint32) _1;
  # DEBUG Val => Val_41
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _2 >> 3;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_45 = _4 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  pos_46 = (sint16) row_44;
  # DEBUG pos => pos_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_43(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_47 = 65535 >> _7;
  # DEBUG mask => mask_47
  # DEBUG BEGIN_STMT
  _8 = (int) col_45;
  mask_48 = mask_47 << _8;
  # DEBUG mask => mask_48
  # DEBUG BEGIN_STMT
  Val_49 = Val_41 << _8;
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_43(D)->ComUpdateBitPositionInBit;
  _11 = _10 >> 3;
  _12 = (sizetype) _11;
  _13 = dataPtr_50(D) + _12;
  _14 = *_13;
  _42 = _10 & 7;
  _16 = (unsigned int) _42;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _20 = _14 | _18;
  *_13 = _20;
  # DEBUG BEGIN_STMT
  _21 = (sizetype) row_44;
  _22 = dataPtr_50(D) + _21;
  _23 = *_22;
  _24 = (unsigned char) mask_48;
  _25 = (unsigned char) Val_49;
  _3 = _23 ^ _25;
  _9 = _3 & _24;
  _26 = _9 ^ _23;
  *_22 = _26;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_53 = Val_35 >> 8;
  # DEBUG Val => Val_53
  # DEBUG BEGIN_STMT
  mask_54 = mask_36 >> 8;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  pos.111_27 = (unsigned short) pos_37;
  _28 = pos.111_27 + 1;
  pos_55 = (sint16) _28;
  # DEBUG pos => pos_55
  # DEBUG BEGIN_STMT
  _29 = (sizetype) pos_55;
  _30 = dataPtr_50(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_54;
  _33 = (unsigned char) Val_53;
  _15 = _31 ^ _33;
  _19 = _15 & _32;
  _34 = _19 ^ _31;
  *_30 = _34;

  <bb 4> [local count: 1073741824]:
  # Val_35 = PHI <Val_49(2), Val_53(3)>
  # mask_36 = PHI <mask_48(2), mask_54(3)>
  # pos_37 = PHI <pos_46(2), pos_55(3)>
  # DEBUG pos => pos_37
  # DEBUG mask => mask_36
  # DEBUG Val => Val_35
  # DEBUG BEGIN_STMT
  if (mask_36 > 255)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_32_SX_DL_EUB_DOC_E1 (Com_EB_Write_32_SX_DL_EUB_DOC_E1, funcdef_no=73, decl_uid=7359, cgraph_uid=74, symbol_order=78)

Com_EB_Write_32_SX_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  short unsigned int _28;
  unsigned char _29;
  unsigned char _30;
  unsigned short _31;
  int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char ssize.109_36;
  unsigned char _37;
  unsigned short pos.110_38;
  unsigned short _39;
  unsigned char _40;
  int _41;
  unsigned int _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  long unsigned int _57;
  short unsigned int _58;
  unsigned char _80;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_56
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  row_60 = _1 >> 3;
  # DEBUG row => row_60
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_61 = _3 & 7;
  # DEBUG col => col_61
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_62 = 8 - col_61;
  # DEBUG space => space_62
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_63 = 4294967295 >> _6;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _7 = (int) col_61;
  mask_64 = mask_63 << _7;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  _57 = Val_56 & 255;
  _8 = (int) _57;
  _10 = _8 << _7;
  putvalue_65 = (uint8) _10;
  # DEBUG putvalue => putvalue_65
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _12 = _11 >> 3;
  _13 = (sizetype) _12;
  _14 = dataPtr_66(D) + _13;
  _15 = *_14;
  _58 = _11 & 7;
  _17 = (unsigned int) _58;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _22 = _15 | _19;
  *_14 = _22;
  # DEBUG BEGIN_STMT
  _23 = (sizetype) row_60;
  _24 = dataPtr_66(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_64;
  _20 = _25 ^ putvalue_65;
  _21 = _20 & _26;
  _27 = _21 ^ _25;
  *_24 = _27;
  # DEBUG BEGIN_STMT
  _28 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _29 = (unsigned char) _28;
  _30 = col_61 + 248;
  tmp_val_69 = _29 + _30;
  # DEBUG tmp_val => tmp_val_69
  # DEBUG BEGIN_STMT
  ssize_70 = (sint8) tmp_val_69;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  _31 = row_60 + 1;
  pos_71 = (sint16) _31;
  # DEBUG pos => pos_71
  # DEBUG BEGIN_STMT
  _32 = (int) space_62;
  Val_72 = Val_56 >> _32;
  # DEBUG Val => Val_72
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_51;
  _34 = dataPtr_66(D) + _33;
  _35 = (unsigned char) Val_49;
  *_34 = _35;
  # DEBUG BEGIN_STMT
  Val_77 = Val_49 >> 8;
  # DEBUG Val => Val_77
  # DEBUG BEGIN_STMT
  ssize.109_36 = (unsigned char) ssize_50;
  _37 = ssize.109_36 + 248;
  ssize_78 = (sint8) _37;
  # DEBUG ssize => ssize_78
  # DEBUG BEGIN_STMT
  pos.110_38 = (unsigned short) pos_51;
  _39 = pos.110_38 + 1;
  pos_79 = (sint16) _39;
  # DEBUG pos => pos_79

  <bb 4> [local count: 1073741824]:
  # Val_49 = PHI <Val_72(2), Val_77(3)>
  # ssize_50 = PHI <ssize_70(2), ssize_78(3)>
  # pos_51 = PHI <pos_71(2), pos_79(3)>
  # DEBUG pos => pos_51
  # DEBUG ssize => ssize_50
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  if (ssize_50 > 7)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Val_2 = PHI <Val_49(4)>
  # ssize_9 = PHI <ssize_50(4)>
  # pos_16 = PHI <pos_51(4)>
  # DEBUG BEGIN_STMT
  if (ssize_9 > 0)
    goto <bb 6>; [59.00%]
  else
    goto <bb 7>; [41.00%]

  <bb 6> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_73 = (uint8) ssize_9;
  # DEBUG ssize_hlp => ssize_hlp_73
  # DEBUG BEGIN_STMT
  _40 = 8 - ssize_hlp_73;
  _41 = (int) _40;
  _42 = 255 >> _41;
  mask_u8_74 = (uint8) _42;
  # DEBUG mask_u8 => mask_u8_74
  # DEBUG BEGIN_STMT
  # DEBUG mask => _42
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_16;
  _44 = dataPtr_66(D) + _43;
  _45 = *_44;
  _46 = (unsigned char) Val_2;
  _47 = _45 ^ _46;
  _80 = _47 & mask_u8_74;
  _48 = _45 ^ _80;
  *_44 = _48;

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S0_DL_EUB_DOC_E1 (Com_EB_Write_AY_S0_DL_EUB_DOC_E1, funcdef_no=75, decl_uid=7369, cgraph_uid=76, symbol_order=80)

Com_EB_Write_AY_S0_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  unsigned int _6;
  unsigned int _7;
  unsigned char _8;
  unsigned char _9;
  short unsigned int _10;
  sizetype _11;
  const uint8 * _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  short unsigned int _19;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_20(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_22(D)->ComUpdateBitPositionInBit;
  _2 = _1 >> 3;
  _3 = (sizetype) _2;
  _4 = dataPtr_23(D) + _3;
  _5 = *_4;
  _19 = _1 & 7;
  _6 = (unsigned int) _19;
  _7 = 1 << _6;
  _8 = (unsigned char) _7;
  _9 = _5 | _8;
  *_4 = _9;

  <bb 3> [local count: 1073741824]:
  # ii_17 = PHI <0(2), ii_27(5)>
  # DEBUG ii => ii_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_22(D)->ComSignalPositionInBit;
  pos_25 = _10 + ii_17;
  # DEBUG pos => pos_25
  # DEBUG BEGIN_STMT
  _11 = (sizetype) ii_17;
  _12 = SignalDataPtr_20(D) + _11;
  _13 = (sizetype) pos_25;
  _14 = dataPtr_23(D) + _13;
  _15 = *_12;
  *_14 = _15;
  # DEBUG BEGIN_STMT
  ii_27 = ii_17 + 1;
  # DEBUG ii => ii_27
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_22(D)->ComSignalBase.ComBitSize;
  if (_16 > ii_27)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S1_DL_EUB_DOC_E3 (Com_EB_Write_AY_S1_DL_EUB_DOC_E3, funcdef_no=76, decl_uid=7374, cgraph_uid=77, symbol_order=81)

Com_EB_Write_AY_S1_DL_EUB_DOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint32 ii;
  short unsigned int _1;
  sizetype _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  unsigned char _11;
  const uint8 * _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  long unsigned int _16;
  short unsigned int _19;
  sizetype _21;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_20(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_23(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  # DEBUG DataPtr_Start => dataPtr_24(D) + _2
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_23(D)->ComUpdateBitPositionInBit;
  _4 = _3 >> 3;
  _5 = (sizetype) _4;
  _6 = dataPtr_24(D) + _5;
  _7 = *_6;
  _19 = _3 & 7;
  _8 = (unsigned int) _19;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = _7 | _10;
  *_6 = _11;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _12 = SignalDataPtr_20(D) + ii_17;
  _21 = _2 + ii_17;
  _13 = dataPtr_24(D) + _21;
  _14 = *_12;
  *_13 = _14;
  # DEBUG BEGIN_STMT
  ii_28 = ii_17 + 1;
  # DEBUG ii => ii_28

  <bb 4> [local count: 1073741824]:
  # ii_17 = PHI <0(2), ii_28(3)>
  # DEBUG ii => ii_17
  # DEBUG BEGIN_STMT
  _15 = IntDataPtr_26(D)->arraySize;
  _16 = (long unsigned int) _15;
  if (_16 > ii_17)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  return;

}



;; Function Com_EB_Write_08_SX_DL_EUB_DOC_E2 (Com_EB_Write_08_SX_DL_EUB_DOC_E2, funcdef_no=77, decl_uid=7379, cgraph_uid=78, symbol_order=82)

Com_EB_Write_08_SX_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  unsigned char _10;
  int _11;
  int _12;
  int _13;
  unsigned char _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  unsigned char _21;
  unsigned int _22;
  unsigned int _23;
  unsigned char _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned short _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  int _42;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_41(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _2 >> 3;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_45 = _4 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = Com_EB_WritePropPtr_43(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = 255 >> _8;
  # DEBUG mask => (uint16) _9
  # DEBUG BEGIN_STMT
  _42 = _9 & 65535;
  _11 = (int) col_45;
  _12 = _42 << _11;
  mask_46 = (uint16) _12;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _13 = (int) _1;
  _15 = _13 << _11;
  Val_47 = (uint16) _15;
  # DEBUG Val => Val_47
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_43(D)->ComUpdateBitPositionInBit;
  _17 = _16 >> 3;
  _18 = (sizetype) _17;
  _19 = dataPtr_48(D) + _18;
  _20 = *_19;
  _5 = _16 & 7;
  _22 = (unsigned int) _5;
  _23 = 1 << _22;
  _24 = (unsigned char) _23;
  _25 = _20 | _24;
  *_19 = _25;
  # DEBUG BEGIN_STMT
  _26 = (sizetype) row_44;
  _27 = dataPtr_48(D) + _26;
  _28 = *_27;
  _29 = (unsigned char) _12;
  _30 = (unsigned char) _15;
  _3 = _28 ^ _30;
  _10 = _3 & _29;
  _31 = _10 ^ _28;
  *_27 = _31;
  # DEBUG BEGIN_STMT
  if (mask_46 > 255)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_51 = Val_47 >> 8;
  # DEBUG Val => Val_51
  # DEBUG BEGIN_STMT
  mask_52 = mask_46 >> 8;
  # DEBUG mask => mask_52
  # DEBUG BEGIN_STMT
  _32 = row_44 + 65535;
  pos_53 = (sint16) _32;
  # DEBUG pos => pos_53
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_53;
  _34 = dataPtr_48(D) + _33;
  _35 = *_34;
  _36 = (unsigned char) mask_52;
  _37 = (unsigned char) Val_51;
  _14 = _35 ^ _37;
  _21 = _14 & _36;
  _38 = _21 ^ _35;
  *_34 = _38;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_16_SX_DL_EUB_DOC_E2 (Com_EB_Write_16_SX_DL_EUB_DOC_E2, funcdef_no=78, decl_uid=7384, cgraph_uid=79, symbol_order=83)

Com_EB_Write_16_SX_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  sizetype _21;
  uint8 * _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned short pos.105_27;
  unsigned short _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  short unsigned int _42;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_40(D)];
  Val_41 = (uint32) _1;
  # DEBUG Val => Val_41
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _2 >> 3;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_45 = _4 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  pos_46 = (sint16) row_44;
  # DEBUG pos => pos_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_43(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_47 = 65535 >> _7;
  # DEBUG mask => mask_47
  # DEBUG BEGIN_STMT
  _8 = (int) col_45;
  mask_48 = mask_47 << _8;
  # DEBUG mask => mask_48
  # DEBUG BEGIN_STMT
  Val_49 = Val_41 << _8;
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_43(D)->ComUpdateBitPositionInBit;
  _11 = _10 >> 3;
  _12 = (sizetype) _11;
  _13 = dataPtr_50(D) + _12;
  _14 = *_13;
  _42 = _10 & 7;
  _16 = (unsigned int) _42;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _20 = _14 | _18;
  *_13 = _20;
  # DEBUG BEGIN_STMT
  _21 = (sizetype) row_44;
  _22 = dataPtr_50(D) + _21;
  _23 = *_22;
  _24 = (unsigned char) mask_48;
  _25 = (unsigned char) Val_49;
  _3 = _23 ^ _25;
  _9 = _3 & _24;
  _26 = _9 ^ _23;
  *_22 = _26;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_53 = Val_35 >> 8;
  # DEBUG Val => Val_53
  # DEBUG BEGIN_STMT
  mask_54 = mask_36 >> 8;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  pos.105_27 = (unsigned short) pos_37;
  _28 = pos.105_27 + 65535;
  pos_55 = (sint16) _28;
  # DEBUG pos => pos_55
  # DEBUG BEGIN_STMT
  _29 = (sizetype) pos_55;
  _30 = dataPtr_50(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_54;
  _33 = (unsigned char) Val_53;
  _15 = _31 ^ _33;
  _19 = _15 & _32;
  _34 = _19 ^ _31;
  *_30 = _34;

  <bb 4> [local count: 1073741824]:
  # Val_35 = PHI <Val_49(2), Val_53(3)>
  # mask_36 = PHI <mask_48(2), mask_54(3)>
  # pos_37 = PHI <pos_46(2), pos_55(3)>
  # DEBUG pos => pos_37
  # DEBUG mask => mask_36
  # DEBUG Val => Val_35
  # DEBUG BEGIN_STMT
  if (mask_36 > 255)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_32_SX_DL_EUB_DOC_E2 (Com_EB_Write_32_SX_DL_EUB_DOC_E2, funcdef_no=79, decl_uid=7389, cgraph_uid=80, symbol_order=84)

Com_EB_Write_32_SX_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  short unsigned int _28;
  unsigned char _29;
  unsigned char _30;
  unsigned short _31;
  int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char ssize.103_36;
  unsigned char _37;
  unsigned short pos.104_38;
  unsigned short _39;
  unsigned char _40;
  int _41;
  unsigned int _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  long unsigned int _57;
  short unsigned int _58;
  unsigned char _80;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_56
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  row_60 = _1 >> 3;
  # DEBUG row => row_60
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_61 = _3 & 7;
  # DEBUG col => col_61
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_62 = 8 - col_61;
  # DEBUG space => space_62
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_63 = 4294967295 >> _6;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _7 = (int) col_61;
  mask_64 = mask_63 << _7;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  _57 = Val_56 & 255;
  _8 = (int) _57;
  _10 = _8 << _7;
  putvalue_65 = (uint8) _10;
  # DEBUG putvalue => putvalue_65
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _12 = _11 >> 3;
  _13 = (sizetype) _12;
  _14 = dataPtr_66(D) + _13;
  _15 = *_14;
  _58 = _11 & 7;
  _17 = (unsigned int) _58;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _22 = _15 | _19;
  *_14 = _22;
  # DEBUG BEGIN_STMT
  _23 = (sizetype) row_60;
  _24 = dataPtr_66(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_64;
  _20 = _25 ^ putvalue_65;
  _21 = _20 & _26;
  _27 = _21 ^ _25;
  *_24 = _27;
  # DEBUG BEGIN_STMT
  _28 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _29 = (unsigned char) _28;
  _30 = col_61 + 248;
  tmp_val_69 = _29 + _30;
  # DEBUG tmp_val => tmp_val_69
  # DEBUG BEGIN_STMT
  ssize_70 = (sint8) tmp_val_69;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  _31 = row_60 + 65535;
  pos_71 = (sint16) _31;
  # DEBUG pos => pos_71
  # DEBUG BEGIN_STMT
  _32 = (int) space_62;
  Val_72 = Val_56 >> _32;
  # DEBUG Val => Val_72
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_51;
  _34 = dataPtr_66(D) + _33;
  _35 = (unsigned char) Val_49;
  *_34 = _35;
  # DEBUG BEGIN_STMT
  Val_77 = Val_49 >> 8;
  # DEBUG Val => Val_77
  # DEBUG BEGIN_STMT
  ssize.103_36 = (unsigned char) ssize_50;
  _37 = ssize.103_36 + 248;
  ssize_78 = (sint8) _37;
  # DEBUG ssize => ssize_78
  # DEBUG BEGIN_STMT
  pos.104_38 = (unsigned short) pos_51;
  _39 = pos.104_38 + 65535;
  pos_79 = (sint16) _39;
  # DEBUG pos => pos_79

  <bb 4> [local count: 1073741824]:
  # Val_49 = PHI <Val_72(2), Val_77(3)>
  # ssize_50 = PHI <ssize_70(2), ssize_78(3)>
  # pos_51 = PHI <pos_71(2), pos_79(3)>
  # DEBUG pos => pos_51
  # DEBUG ssize => ssize_50
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  if (ssize_50 > 7)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Val_2 = PHI <Val_49(4)>
  # ssize_9 = PHI <ssize_50(4)>
  # pos_16 = PHI <pos_51(4)>
  # DEBUG BEGIN_STMT
  if (ssize_9 > 0)
    goto <bb 6>; [59.00%]
  else
    goto <bb 7>; [41.00%]

  <bb 6> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_73 = (uint8) ssize_9;
  # DEBUG ssize_hlp => ssize_hlp_73
  # DEBUG BEGIN_STMT
  _40 = 8 - ssize_hlp_73;
  _41 = (int) _40;
  _42 = 255 >> _41;
  mask_u8_74 = (uint8) _42;
  # DEBUG mask_u8 => mask_u8_74
  # DEBUG BEGIN_STMT
  # DEBUG mask => _42
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_16;
  _44 = dataPtr_66(D) + _43;
  _45 = *_44;
  _46 = (unsigned char) Val_2;
  _47 = _45 ^ _46;
  _80 = _47 & mask_u8_74;
  _48 = _45 ^ _80;
  *_44 = _48;

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S0_DL_EUB_DOC_E2 (Com_EB_Write_AY_S0_DL_EUB_DOC_E2, funcdef_no=81, decl_uid=7399, cgraph_uid=82, symbol_order=86)

Com_EB_Write_AY_S0_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  unsigned int _6;
  unsigned int _7;
  unsigned char _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  sizetype _14;
  const uint8 * _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  short unsigned int _19;
  short unsigned int _22;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_23(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_25(D)->ComUpdateBitPositionInBit;
  _2 = _1 >> 3;
  _3 = (sizetype) _2;
  _4 = dataPtr_26(D) + _3;
  _5 = *_4;
  _22 = _1 & 7;
  _6 = (unsigned int) _22;
  _7 = 1 << _6;
  _8 = (unsigned char) _7;
  _9 = _5 | _8;
  *_4 = _9;

  <bb 3> [local count: 1073741824]:
  # ii_20 = PHI <0(2), ii_30(5)>
  # DEBUG ii => ii_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_25(D)->ComSignalPositionInBit;
  _11 = Com_EB_WritePropPtr_25(D)->ComSignalBase.ComBitSize;
  _12 = _10 + _11;
  _13 = _12 - ii_20;
  pos_28 = _13 + 65535;
  # DEBUG pos => pos_28
  # DEBUG BEGIN_STMT
  _14 = (sizetype) ii_20;
  _15 = SignalDataPtr_23(D) + _14;
  _16 = (sizetype) pos_28;
  _17 = dataPtr_26(D) + _16;
  _18 = *_15;
  *_17 = _18;
  # DEBUG BEGIN_STMT
  ii_30 = ii_20 + 1;
  # DEBUG ii => ii_30
  # DEBUG BEGIN_STMT
  _19 = Com_EB_WritePropPtr_25(D)->ComSignalBase.ComBitSize;
  if (_19 > ii_30)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_08_SX_DL_EUB_EOC_E1 (Com_EB_Write_08_SX_DL_EUB_EOC_E1, funcdef_no=82, decl_uid=7404, cgraph_uid=83, symbol_order=87)

Com_EB_Write_08_SX_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  short unsigned int _15;
  short unsigned int _16;
  sizetype _17;
  uint8 * _18;
  unsigned char _19;
  unsigned char _20;
  unsigned int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned short _31;
  sizetype _32;
  uint8 * _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  int _44;
  short unsigned int _47;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_46(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_48(D)->ComSignalPositionInBit;
  row_49 = _2 >> 3;
  # DEBUG row => row_49
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_50 = _4 & 7;
  # DEBUG col => col_50
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_49
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_48(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _44 = _8 & 65535;
  _10 = (int) col_50;
  _11 = _44 << _10;
  mask_51 = (uint16) _11;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_52 = (uint16) _14;
  # DEBUG Val => Val_52
  # DEBUG BEGIN_STMT
  _15 = Com_EB_WritePropPtr_48(D)->ComUpdateBitPositionInBit;
  _16 = _15 >> 3;
  _17 = (sizetype) _16;
  _18 = dataPtr_53(D) + _17;
  _19 = *_18;
  _47 = _15 & 7;
  _21 = (unsigned int) _47;
  _22 = 1 << _21;
  _23 = (unsigned char) _22;
  _24 = _19 | _23;
  *_18 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) row_49;
  _26 = dataPtr_53(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) _11;
  _29 = (unsigned char) _14;
  _3 = _27 ^ _29;
  _9 = _3 & _28;
  _30 = _9 ^ _27;
  if (_27 != _30)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 1073741824]:
  # valueChanged_40 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_26 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_51 > 255)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_56 = Val_52 >> 8;
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  mask_57 = mask_51 >> 8;
  # DEBUG mask => mask_57
  # DEBUG BEGIN_STMT
  _31 = row_49 + 1;
  # DEBUG pos => (sint16) _31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _32 = (sizetype) _31;
  _33 = dataPtr_53(D) + _32;
  _34 = *_33;
  _35 = (unsigned char) mask_57;
  _36 = (unsigned char) Val_56;
  _13 = _34 ^ _36;
  _20 = _13 & _35;
  _37 = _20 ^ _34;
  if (_34 != _37)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 536870913]:
  # valueChanged_41 = PHI <valueChanged_40(5), 1(6)>
  # DEBUG valueChanged => valueChanged_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_33 = _37;

  <bb 8> [local count: 1073741824]:
  # valueChanged_42 = PHI <valueChanged_40(4), valueChanged_41(7)>
  # DEBUG valueChanged => valueChanged_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = IntDataPtr_59(D)->trigger;
  _39 = _38 | valueChanged_42;
  IntDataPtr_59(D)->trigger = _39;
  return;

}



;; Function Com_EB_Write_16_SX_DL_EUB_EOC_E1 (Com_EB_Write_16_SX_DL_EUB_EOC_E1, funcdef_no=83, decl_uid=7409, cgraph_uid=84, symbol_order=88)

Com_EB_Write_16_SX_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned short pos.99_28;
  unsigned short _29;
  sizetype _30;
  uint8 * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  short unsigned int _45;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_47(D)];
  Val_48 = (uint32) _1;
  # DEBUG Val => Val_48
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_49(D)->ComSignalPositionInBit;
  row_50 = _2 >> 3;
  # DEBUG row => row_50
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_51 = _4 & 7;
  # DEBUG col => col_51
  # DEBUG BEGIN_STMT
  pos_52 = (sint16) row_50;
  # DEBUG pos => pos_52
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_49(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_53 = 65535 >> _7;
  # DEBUG mask => mask_53
  # DEBUG BEGIN_STMT
  _8 = (int) col_51;
  mask_54 = mask_53 << _8;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  Val_55 = Val_48 << _8;
  # DEBUG Val => Val_55
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_49(D)->ComUpdateBitPositionInBit;
  _11 = _10 >> 3;
  _12 = (sizetype) _11;
  _13 = dataPtr_56(D) + _12;
  _14 = *_13;
  _45 = _10 & 7;
  _16 = (unsigned int) _45;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _21 = _14 | _18;
  *_13 = _21;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = (sizetype) row_50;
  _23 = dataPtr_56(D) + _22;
  _24 = *_23;
  _25 = (unsigned char) mask_54;
  _26 = (unsigned char) Val_55;
  _9 = _24 ^ _26;
  _15 = _9 & _25;
  _27 = _15 ^ _24;
  if (_24 != _27)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_38 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_23 = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_61 = Val_41 >> 8;
  # DEBUG Val => Val_61
  # DEBUG BEGIN_STMT
  mask_62 = mask_42 >> 8;
  # DEBUG mask => mask_62
  # DEBUG BEGIN_STMT
  pos.99_28 = (unsigned short) pos_43;
  _29 = pos.99_28 + 1;
  pos_63 = (sint16) _29;
  # DEBUG pos => pos_63
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _30 = (sizetype) pos_63;
  _31 = dataPtr_56(D) + _30;
  _32 = *_31;
  _33 = (unsigned char) mask_62;
  _34 = (unsigned char) Val_61;
  _19 = _32 ^ _34;
  _20 = _19 & _33;
  _35 = _20 ^ _32;
  if (_32 != _35)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_39 = PHI <valueChanged_40(5), 1(6)>
  # DEBUG valueChanged => valueChanged_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_31 = _35;

  <bb 8> [local count: 1073741824]:
  # valueChanged_40 = PHI <valueChanged_38(4), valueChanged_39(7)>
  # Val_41 = PHI <Val_55(4), Val_61(7)>
  # mask_42 = PHI <mask_54(4), mask_62(7)>
  # pos_43 = PHI <pos_52(4), pos_63(7)>
  # DEBUG pos => pos_43
  # DEBUG mask => mask_42
  # DEBUG Val => Val_41
  # DEBUG valueChanged => valueChanged_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_42 > 255)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_3 = PHI <valueChanged_40(8)>
  # DEBUG BEGIN_STMT
  _36 = IntDataPtr_59(D)->trigger;
  _37 = valueChanged_3 | _36;
  IntDataPtr_59(D)->trigger = _37;
  return;

}



;; Function Com_EB_Write_32_SX_DL_EUB_EOC_E1 (Com_EB_Write_32_SX_DL_EUB_EOC_E1, funcdef_no=84, decl_uid=7414, cgraph_uid=85, symbol_order=89)

Com_EB_Write_32_SX_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  short unsigned int _29;
  unsigned char _30;
  unsigned char _31;
  unsigned short _32;
  int _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char ssize.97_38;
  unsigned char _39;
  unsigned short pos.98_40;
  unsigned short _41;
  unsigned char _42;
  int _43;
  unsigned int _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  long unsigned int _63;
  short unsigned int _67;
  unsigned char _68;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  Val_66 = MEM[(const uint32 *)SignalDataPtr_65(D)];
  # DEBUG Val => Val_66
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_66
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_69(D)->ComSignalPositionInBit;
  row_70 = _1 >> 3;
  # DEBUG row => row_70
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_71 = _3 & 7;
  # DEBUG col => col_71
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_72 = 8 - col_71;
  # DEBUG space => space_72
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_69(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_73 = 4294967295 >> _6;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  _7 = (int) col_71;
  mask_74 = mask_73 << _7;
  # DEBUG mask => mask_74
  # DEBUG BEGIN_STMT
  _63 = Val_66 & 255;
  _8 = (int) _63;
  _10 = _8 << _7;
  putvalue_75 = (uint8) _10;
  # DEBUG putvalue => putvalue_75
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_69(D)->ComUpdateBitPositionInBit;
  _12 = _11 >> 3;
  _13 = (sizetype) _12;
  _14 = dataPtr_76(D) + _13;
  _15 = *_14;
  _67 = _11 & 7;
  _17 = (unsigned int) _67;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _23 = _15 | _19;
  *_14 = _23;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _24 = (sizetype) row_70;
  _25 = dataPtr_76(D) + _24;
  _26 = *_25;
  _27 = (unsigned char) mask_74;
  _21 = _26 ^ putvalue_75;
  _22 = _21 & _27;
  _28 = _22 ^ _26;
  if (_26 != _28)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_53 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_53
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_25 = _28;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = Com_EB_WritePropPtr_69(D)->ComSignalBase.ComBitSize;
  _30 = (unsigned char) _29;
  _68 = col_71 + 248;
  tmp_val_79 = _30 + _68;
  # DEBUG tmp_val => tmp_val_79
  # DEBUG BEGIN_STMT
  ssize_80 = (sint8) tmp_val_79;
  # DEBUG ssize => ssize_80
  # DEBUG BEGIN_STMT
  _32 = row_70 + 1;
  pos_81 = (sint16) _32;
  # DEBUG pos => pos_81
  # DEBUG BEGIN_STMT
  _33 = (int) space_72;
  Val_82 = Val_66 >> _33;
  # DEBUG Val => Val_82
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = (sizetype) pos_60;
  _35 = dataPtr_76(D) + _34;
  _36 = *_35;
  _37 = (unsigned char) Val_58;
  if (_36 != _37)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_54 = PHI <valueChanged_55(5), 1(6)>
  # DEBUG valueChanged => valueChanged_54
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_35 = _37;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_89 = Val_58 >> 8;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  ssize.97_38 = (unsigned char) ssize_59;
  _39 = ssize.97_38 + 248;
  ssize_90 = (sint8) _39;
  # DEBUG ssize => ssize_90
  # DEBUG BEGIN_STMT
  pos.98_40 = (unsigned short) pos_60;
  _41 = pos.98_40 + 1;
  pos_91 = (sint16) _41;
  # DEBUG pos => pos_91

  <bb 8> [local count: 1073741824]:
  # valueChanged_55 = PHI <valueChanged_53(4), valueChanged_54(7)>
  # Val_58 = PHI <Val_82(4), Val_89(7)>
  # ssize_59 = PHI <ssize_80(4), ssize_90(7)>
  # pos_60 = PHI <pos_81(4), pos_91(7)>
  # DEBUG pos => pos_60
  # DEBUG ssize => ssize_59
  # DEBUG Val => Val_58
  # DEBUG valueChanged => valueChanged_55
  # DEBUG BEGIN_STMT
  if (ssize_59 > 7)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_2 = PHI <valueChanged_55(8)>
  # Val_9 = PHI <Val_58(8)>
  # ssize_16 = PHI <ssize_59(8)>
  # pos_20 = PHI <pos_60(8)>
  # DEBUG BEGIN_STMT
  if (ssize_16 > 0)
    goto <bb 10>; [59.00%]
  else
    goto <bb 13>; [41.00%]

  <bb 10> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_83 = (uint8) ssize_16;
  # DEBUG ssize_hlp => ssize_hlp_83
  # DEBUG BEGIN_STMT
  _42 = 8 - ssize_hlp_83;
  _43 = (int) _42;
  _44 = 255 >> _43;
  mask_u8_84 = (uint8) _44;
  # DEBUG mask_u8 => mask_u8_84
  # DEBUG BEGIN_STMT
  # DEBUG mask => _44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _45 = (sizetype) pos_20;
  _46 = dataPtr_76(D) + _45;
  _47 = *_46;
  _49 = (unsigned char) Val_9;
  _31 = _47 ^ _49;
  _48 = _31 & mask_u8_84;
  _50 = _47 ^ _48;
  if (_47 != _50)
    goto <bb 11>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 11> [local count: 45992657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 12> [local count: 69685844]:
  # valueChanged_56 = PHI <valueChanged_2(10), 1(11)>
  # DEBUG valueChanged => valueChanged_56
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_46 = _50;

  <bb 13> [local count: 118111601]:
  # valueChanged_57 = PHI <valueChanged_2(9), valueChanged_56(12)>
  # DEBUG valueChanged => valueChanged_57
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _51 = IntDataPtr_86(D)->trigger;
  _52 = _51 | valueChanged_57;
  IntDataPtr_86(D)->trigger = _52;
  return;

}



;; Function Com_EB_Write_AY_S0_DL_EUB_EOC_E1 (Com_EB_Write_AY_S0_DL_EUB_EOC_E1, funcdef_no=86, decl_uid=7424, cgraph_uid=87, symbol_order=91)

Com_EB_Write_AY_S0_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  unsigned int _7;
  unsigned int _8;
  unsigned char _9;
  unsigned char _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  sizetype _15;
  const uint8 * _16;
  unsigned char _17;
  short unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  short unsigned int _25;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_26(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_28(D)->ComUpdateBitPositionInBit;
  _2 = _1 >> 3;
  _3 = (sizetype) _2;
  _4 = dataPtr_29(D) + _3;
  _5 = *_4;
  _25 = _1 & 7;
  _7 = (unsigned int) _25;
  _8 = 1 << _7;
  _9 = (unsigned char) _8;
  _10 = _5 | _9;
  *_4 = _10;

  <bb 3> [local count: 1073741824]:
  # valueChanged_21 = PHI <0(2), valueChanged_22(7)>
  # ii_23 = PHI <0(2), ii_33(7)>
  # DEBUG ii => ii_23
  # DEBUG valueChanged => valueChanged_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_28(D)->ComSignalPositionInBit;
  pos_31 = _11 + ii_23;
  # DEBUG pos => pos_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = (sizetype) pos_31;
  _13 = dataPtr_29(D) + _12;
  _14 = *_13;
  _15 = (sizetype) ii_23;
  _16 = SignalDataPtr_26(D) + _15;
  _17 = *_16;
  if (_14 != _17)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 1073741824]:
  # valueChanged_22 = PHI <valueChanged_21(3), 1(4)>
  # DEBUG valueChanged => valueChanged_22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_13 = _17;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_33 = ii_23 + 1;
  # DEBUG ii => ii_33
  # DEBUG BEGIN_STMT
  _18 = Com_EB_WritePropPtr_28(D)->ComSignalBase.ComBitSize;
  if (_18 > ii_33)
    goto <bb 7>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 7> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 118111601]:
  # valueChanged_6 = PHI <valueChanged_22(5)>
  # DEBUG BEGIN_STMT
  _19 = IntDataPtr_34(D)->trigger;
  _20 = valueChanged_6 | _19;
  IntDataPtr_34(D)->trigger = _20;
  return;

}



;; Function Com_EB_Write_AY_S1_DL_EUB_EOC_E3 (Com_EB_Write_AY_S1_DL_EUB_EOC_E3, funcdef_no=87, decl_uid=7429, cgraph_uid=88, symbol_order=92)

Com_EB_Write_AY_S1_DL_EUB_EOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint32 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  unsigned int _9;
  unsigned int _10;
  unsigned char _11;
  sizetype _12;
  unsigned char _13;
  uint8 * _14;
  unsigned char _15;
  const uint8 * _16;
  unsigned char _17;
  short unsigned int _18;
  long unsigned int _19;
  unsigned char _20;
  unsigned char _21;
  short unsigned int _26;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_27(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_29(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  # DEBUG DataPtr_Start => dataPtr_30(D) + _2
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_29(D)->ComUpdateBitPositionInBit;
  _4 = _3 >> 3;
  _5 = (sizetype) _4;
  _6 = dataPtr_30(D) + _5;
  _7 = *_6;
  _26 = _3 & 7;
  _9 = (unsigned int) _26;
  _10 = 1 << _9;
  _11 = (unsigned char) _10;
  _13 = _7 | _11;
  *_6 = _13;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = _2 + ii_24;
  _14 = dataPtr_30(D) + _12;
  _15 = *_14;
  _16 = SignalDataPtr_27(D) + ii_24;
  _17 = *_16;
  if (_15 != _17)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 955630223]:
  # valueChanged_22 = PHI <valueChanged_23(3), 1(4)>
  # DEBUG valueChanged => valueChanged_22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_14 = _17;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_35 = ii_24 + 1;
  # DEBUG ii => ii_35

  <bb 6> [local count: 1073741824]:
  # valueChanged_23 = PHI <0(2), valueChanged_22(5)>
  # ii_24 = PHI <0(2), ii_35(5)>
  # DEBUG ii => ii_24
  # DEBUG valueChanged => valueChanged_23
  # DEBUG BEGIN_STMT
  _18 = IntDataPtr_32(D)->arraySize;
  _19 = (long unsigned int) _18;
  if (_19 > ii_24)
    goto <bb 3>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # valueChanged_8 = PHI <valueChanged_23(6)>
  # DEBUG BEGIN_STMT
  _20 = IntDataPtr_32(D)->trigger;
  _21 = valueChanged_8 | _20;
  IntDataPtr_32(D)->trigger = _21;
  return;

}



;; Function Com_EB_Write_08_SX_DL_EUB_EOC_E2 (Com_EB_Write_08_SX_DL_EUB_EOC_E2, funcdef_no=88, decl_uid=7434, cgraph_uid=89, symbol_order=93)

Com_EB_Write_08_SX_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  short unsigned int _15;
  short unsigned int _16;
  sizetype _17;
  uint8 * _18;
  unsigned char _19;
  unsigned char _20;
  unsigned int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned short _31;
  sizetype _32;
  uint8 * _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  int _44;
  short unsigned int _47;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_46(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_48(D)->ComSignalPositionInBit;
  row_49 = _2 >> 3;
  # DEBUG row => row_49
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_50 = _4 & 7;
  # DEBUG col => col_50
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_49
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_48(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _44 = _8 & 65535;
  _10 = (int) col_50;
  _11 = _44 << _10;
  mask_51 = (uint16) _11;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_52 = (uint16) _14;
  # DEBUG Val => Val_52
  # DEBUG BEGIN_STMT
  _15 = Com_EB_WritePropPtr_48(D)->ComUpdateBitPositionInBit;
  _16 = _15 >> 3;
  _17 = (sizetype) _16;
  _18 = dataPtr_53(D) + _17;
  _19 = *_18;
  _47 = _15 & 7;
  _21 = (unsigned int) _47;
  _22 = 1 << _21;
  _23 = (unsigned char) _22;
  _24 = _19 | _23;
  *_18 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) row_49;
  _26 = dataPtr_53(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) _11;
  _29 = (unsigned char) _14;
  _3 = _27 ^ _29;
  _9 = _3 & _28;
  _30 = _9 ^ _27;
  if (_27 != _30)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 1073741824]:
  # valueChanged_40 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_26 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_51 > 255)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_56 = Val_52 >> 8;
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  mask_57 = mask_51 >> 8;
  # DEBUG mask => mask_57
  # DEBUG BEGIN_STMT
  _31 = row_49 + 65535;
  pos_58 = (sint16) _31;
  # DEBUG pos => pos_58
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _32 = (sizetype) pos_58;
  _33 = dataPtr_53(D) + _32;
  _34 = *_33;
  _35 = (unsigned char) mask_57;
  _36 = (unsigned char) Val_56;
  _13 = _34 ^ _36;
  _20 = _13 & _35;
  _37 = _20 ^ _34;
  if (_34 != _37)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 536870913]:
  # valueChanged_41 = PHI <valueChanged_40(5), 1(6)>
  # DEBUG valueChanged => valueChanged_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_33 = _37;

  <bb 8> [local count: 1073741824]:
  # valueChanged_42 = PHI <valueChanged_40(4), valueChanged_41(7)>
  # DEBUG valueChanged => valueChanged_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = IntDataPtr_60(D)->trigger;
  _39 = _38 | valueChanged_42;
  IntDataPtr_60(D)->trigger = _39;
  return;

}



;; Function Com_EB_Write_16_SX_DL_EUB_EOC_E2 (Com_EB_Write_16_SX_DL_EUB_EOC_E2, funcdef_no=89, decl_uid=7439, cgraph_uid=90, symbol_order=94)

Com_EB_Write_16_SX_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned short pos.93_28;
  unsigned short _29;
  sizetype _30;
  uint8 * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  short unsigned int _45;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_47(D)];
  Val_48 = (uint32) _1;
  # DEBUG Val => Val_48
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_49(D)->ComSignalPositionInBit;
  row_50 = _2 >> 3;
  # DEBUG row => row_50
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_51 = _4 & 7;
  # DEBUG col => col_51
  # DEBUG BEGIN_STMT
  pos_52 = (sint16) row_50;
  # DEBUG pos => pos_52
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_49(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_53 = 65535 >> _7;
  # DEBUG mask => mask_53
  # DEBUG BEGIN_STMT
  _8 = (int) col_51;
  mask_54 = mask_53 << _8;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  Val_55 = Val_48 << _8;
  # DEBUG Val => Val_55
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_49(D)->ComUpdateBitPositionInBit;
  _11 = _10 >> 3;
  _12 = (sizetype) _11;
  _13 = dataPtr_56(D) + _12;
  _14 = *_13;
  _45 = _10 & 7;
  _16 = (unsigned int) _45;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _21 = _14 | _18;
  *_13 = _21;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = (sizetype) row_50;
  _23 = dataPtr_56(D) + _22;
  _24 = *_23;
  _25 = (unsigned char) mask_54;
  _26 = (unsigned char) Val_55;
  _9 = _24 ^ _26;
  _15 = _9 & _25;
  _27 = _15 ^ _24;
  if (_24 != _27)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_38 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_23 = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_61 = Val_41 >> 8;
  # DEBUG Val => Val_61
  # DEBUG BEGIN_STMT
  mask_62 = mask_42 >> 8;
  # DEBUG mask => mask_62
  # DEBUG BEGIN_STMT
  pos.93_28 = (unsigned short) pos_43;
  _29 = pos.93_28 + 65535;
  pos_63 = (sint16) _29;
  # DEBUG pos => pos_63
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _30 = (sizetype) pos_63;
  _31 = dataPtr_56(D) + _30;
  _32 = *_31;
  _33 = (unsigned char) mask_62;
  _34 = (unsigned char) Val_61;
  _19 = _32 ^ _34;
  _20 = _19 & _33;
  _35 = _20 ^ _32;
  if (_32 != _35)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_39 = PHI <valueChanged_40(5), 1(6)>
  # DEBUG valueChanged => valueChanged_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_31 = _35;

  <bb 8> [local count: 1073741824]:
  # valueChanged_40 = PHI <valueChanged_38(4), valueChanged_39(7)>
  # Val_41 = PHI <Val_55(4), Val_61(7)>
  # mask_42 = PHI <mask_54(4), mask_62(7)>
  # pos_43 = PHI <pos_52(4), pos_63(7)>
  # DEBUG pos => pos_43
  # DEBUG mask => mask_42
  # DEBUG Val => Val_41
  # DEBUG valueChanged => valueChanged_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_42 > 255)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_3 = PHI <valueChanged_40(8)>
  # DEBUG BEGIN_STMT
  _36 = IntDataPtr_59(D)->trigger;
  _37 = valueChanged_3 | _36;
  IntDataPtr_59(D)->trigger = _37;
  return;

}



;; Function Com_EB_Write_32_SX_DL_EUB_EOC_E2 (Com_EB_Write_32_SX_DL_EUB_EOC_E2, funcdef_no=90, decl_uid=7444, cgraph_uid=91, symbol_order=95)

Com_EB_Write_32_SX_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  short unsigned int _29;
  unsigned char _30;
  unsigned char _31;
  unsigned short _32;
  int _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char ssize.91_38;
  unsigned char _39;
  unsigned short pos.92_40;
  unsigned short _41;
  unsigned char _42;
  int _43;
  unsigned int _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  long unsigned int _63;
  short unsigned int _67;
  unsigned char _68;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  Val_66 = MEM[(const uint32 *)SignalDataPtr_65(D)];
  # DEBUG Val => Val_66
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_66
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_69(D)->ComSignalPositionInBit;
  row_70 = _1 >> 3;
  # DEBUG row => row_70
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_71 = _3 & 7;
  # DEBUG col => col_71
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_72 = 8 - col_71;
  # DEBUG space => space_72
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_69(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_73 = 4294967295 >> _6;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  _7 = (int) col_71;
  mask_74 = mask_73 << _7;
  # DEBUG mask => mask_74
  # DEBUG BEGIN_STMT
  _63 = Val_66 & 255;
  _8 = (int) _63;
  _10 = _8 << _7;
  putvalue_75 = (uint8) _10;
  # DEBUG putvalue => putvalue_75
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_69(D)->ComUpdateBitPositionInBit;
  _12 = _11 >> 3;
  _13 = (sizetype) _12;
  _14 = dataPtr_76(D) + _13;
  _15 = *_14;
  _67 = _11 & 7;
  _17 = (unsigned int) _67;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _23 = _15 | _19;
  *_14 = _23;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _24 = (sizetype) row_70;
  _25 = dataPtr_76(D) + _24;
  _26 = *_25;
  _27 = (unsigned char) mask_74;
  _21 = _26 ^ putvalue_75;
  _22 = _21 & _27;
  _28 = _22 ^ _26;
  if (_26 != _28)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_53 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_53
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_25 = _28;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = Com_EB_WritePropPtr_69(D)->ComSignalBase.ComBitSize;
  _30 = (unsigned char) _29;
  _68 = col_71 + 248;
  tmp_val_79 = _30 + _68;
  # DEBUG tmp_val => tmp_val_79
  # DEBUG BEGIN_STMT
  ssize_80 = (sint8) tmp_val_79;
  # DEBUG ssize => ssize_80
  # DEBUG BEGIN_STMT
  _32 = row_70 + 65535;
  pos_81 = (sint16) _32;
  # DEBUG pos => pos_81
  # DEBUG BEGIN_STMT
  _33 = (int) space_72;
  Val_82 = Val_66 >> _33;
  # DEBUG Val => Val_82
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = (sizetype) pos_60;
  _35 = dataPtr_76(D) + _34;
  _36 = *_35;
  _37 = (unsigned char) Val_58;
  if (_36 != _37)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_54 = PHI <valueChanged_55(5), 1(6)>
  # DEBUG valueChanged => valueChanged_54
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_35 = _37;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_89 = Val_58 >> 8;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  ssize.91_38 = (unsigned char) ssize_59;
  _39 = ssize.91_38 + 248;
  ssize_90 = (sint8) _39;
  # DEBUG ssize => ssize_90
  # DEBUG BEGIN_STMT
  pos.92_40 = (unsigned short) pos_60;
  _41 = pos.92_40 + 65535;
  pos_91 = (sint16) _41;
  # DEBUG pos => pos_91

  <bb 8> [local count: 1073741824]:
  # valueChanged_55 = PHI <valueChanged_53(4), valueChanged_54(7)>
  # Val_58 = PHI <Val_82(4), Val_89(7)>
  # ssize_59 = PHI <ssize_80(4), ssize_90(7)>
  # pos_60 = PHI <pos_81(4), pos_91(7)>
  # DEBUG pos => pos_60
  # DEBUG ssize => ssize_59
  # DEBUG Val => Val_58
  # DEBUG valueChanged => valueChanged_55
  # DEBUG BEGIN_STMT
  if (ssize_59 > 7)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_2 = PHI <valueChanged_55(8)>
  # Val_9 = PHI <Val_58(8)>
  # ssize_16 = PHI <ssize_59(8)>
  # pos_20 = PHI <pos_60(8)>
  # DEBUG BEGIN_STMT
  if (ssize_16 > 0)
    goto <bb 10>; [59.00%]
  else
    goto <bb 13>; [41.00%]

  <bb 10> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_83 = (uint8) ssize_16;
  # DEBUG ssize_hlp => ssize_hlp_83
  # DEBUG BEGIN_STMT
  _42 = 8 - ssize_hlp_83;
  _43 = (int) _42;
  _44 = 255 >> _43;
  mask_u8_84 = (uint8) _44;
  # DEBUG mask_u8 => mask_u8_84
  # DEBUG BEGIN_STMT
  # DEBUG mask => _44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _45 = (sizetype) pos_20;
  _46 = dataPtr_76(D) + _45;
  _47 = *_46;
  _49 = (unsigned char) Val_9;
  _31 = _47 ^ _49;
  _48 = _31 & mask_u8_84;
  _50 = _47 ^ _48;
  if (_47 != _50)
    goto <bb 11>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 11> [local count: 45992657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 12> [local count: 69685844]:
  # valueChanged_56 = PHI <valueChanged_2(10), 1(11)>
  # DEBUG valueChanged => valueChanged_56
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_46 = _50;

  <bb 13> [local count: 118111601]:
  # valueChanged_57 = PHI <valueChanged_2(9), valueChanged_56(12)>
  # DEBUG valueChanged => valueChanged_57
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _51 = IntDataPtr_86(D)->trigger;
  _52 = _51 | valueChanged_57;
  IntDataPtr_86(D)->trigger = _52;
  return;

}



;; Function Com_EB_Write_AY_S0_DL_EUB_EOC_E2 (Com_EB_Write_AY_S0_DL_EUB_EOC_E2, funcdef_no=92, decl_uid=7454, cgraph_uid=93, symbol_order=97)

Com_EB_Write_AY_S0_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  unsigned int _7;
  unsigned int _8;
  unsigned char _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  sizetype _18;
  const uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned char _22;
  unsigned char _23;
  short unsigned int _28;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_29(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_31(D)->ComUpdateBitPositionInBit;
  _2 = _1 >> 3;
  _3 = (sizetype) _2;
  _4 = dataPtr_32(D) + _3;
  _5 = *_4;
  _28 = _1 & 7;
  _7 = (unsigned int) _28;
  _8 = 1 << _7;
  _9 = (unsigned char) _8;
  _10 = _5 | _9;
  *_4 = _10;

  <bb 3> [local count: 1073741824]:
  # valueChanged_24 = PHI <0(2), valueChanged_25(7)>
  # ii_26 = PHI <0(2), ii_36(7)>
  # DEBUG ii => ii_26
  # DEBUG valueChanged => valueChanged_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_31(D)->ComSignalPositionInBit;
  _12 = Com_EB_WritePropPtr_31(D)->ComSignalBase.ComBitSize;
  _13 = _11 + _12;
  _14 = _13 - ii_26;
  pos_34 = _14 + 65535;
  # DEBUG pos => pos_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = (sizetype) pos_34;
  _16 = dataPtr_32(D) + _15;
  _17 = *_16;
  _18 = (sizetype) ii_26;
  _19 = SignalDataPtr_29(D) + _18;
  _20 = *_19;
  if (_17 != _20)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 1073741824]:
  # valueChanged_25 = PHI <valueChanged_24(3), 1(4)>
  # DEBUG valueChanged => valueChanged_25
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_16 = _20;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_36 = ii_26 + 1;
  # DEBUG ii => ii_36
  # DEBUG BEGIN_STMT
  _21 = Com_EB_WritePropPtr_31(D)->ComSignalBase.ComBitSize;
  if (_21 > ii_36)
    goto <bb 7>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 7> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 118111601]:
  # valueChanged_6 = PHI <valueChanged_25(5)>
  # DEBUG BEGIN_STMT
  _22 = IntDataPtr_37(D)->trigger;
  _23 = valueChanged_6 | _22;
  IntDataPtr_37(D)->trigger = _23;
  return;

}



;; Function Com_EB_Write_BO_DL_DUB_DOC (Com_EB_Write_BO_DL_DUB_DOC, funcdef_no=137, decl_uid=7679, cgraph_uid=138, symbol_order=142)

Com_EB_Write_BO_DL_DUB_DOC (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 bit;
  const uint16 pos;
  const uint8 Val;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  unsigned char _4;
  int _5;
  int _6;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  int _13;
  int _14;
  unsigned char _15;
  unsigned char _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Val_20 = MEM[(const uint8 *)SignalDataPtr_19(D)];
  # DEBUG Val => Val_20
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_21(D)->ComSignalPositionInBit;
  pos_22 = _1 >> 3;
  # DEBUG pos => pos_22
  # DEBUG BEGIN_STMT
  bit_23 = _1 & 7;
  # DEBUG bit => bit_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Val_20 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_22;
  _3 = dataPtr_24(D) + _2;
  _4 = *_3;
  _5 = (int) bit_23;
  _6 = 1 << _5;
  _7 = (unsigned char) _6;
  _8 = ~_7;
  _9 = _4 & _8;
  *_3 = _9;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _10 = (sizetype) pos_22;
  _11 = dataPtr_24(D) + _10;
  _12 = *_11;
  _13 = (int) bit_23;
  _14 = 1 << _13;
  _15 = (unsigned char) _14;
  _16 = _12 | _15;
  *_11 = _16;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_A1_DL_DUB_DOC (Com_EB_Write_A1_DL_DUB_DOC, funcdef_no=138, decl_uid=7684, cgraph_uid=139, symbol_order=143)


Saving body of Com_EB_Write_A1_DL_DUB_DOC for later reuse
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1

Symbols to be put in SSA form
{ D.13936 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 4
Number of blocks to update: 3 ( 75%)


Com_EB_Write_A1_DL_DUB_DOC (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 pos;
  const uint8 Val;
  sizetype _1;
  uint8 * _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Val_5 = MEM[(const uint8 *)SignalDataPtr_4(D)];
  # DEBUG Val => Val_5
  # DEBUG BEGIN_STMT
  pos_7 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  # DEBUG pos => pos_7
  # DEBUG BEGIN_STMT
  _1 = (sizetype) pos_7;
  _2 = dataPtr_8(D) + _1;
  *_2 = Val_5;
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_CalculateTM (Com_EB_CalculateTM, funcdef_no=173, decl_uid=6235, cgraph_uid=174, symbol_order=178)

Com_EB_CalculateTM (const struct ComTxIPduType * IPduPtr)
{
  uint16 NumberOfFlags;
  uint16 numberOfFlagBytes;
  boolean newTM;
  uint16 j;
  uint8 * Com_gDataMemPtr.261_1;
  short unsigned int _2;
  sizetype _3;
  short unsigned int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  uint8 * _10;
  unsigned char _11;
  sizetype _17;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.261_1 = Com_gDataMemPtr;
  _2 = IPduPtr_16(D)->ComIPduTMSFlagsRef;
  _3 = (sizetype) _2;
  # DEBUG IpduTMFlagsBase => Com_gDataMemPtr.261_1 + _3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG newTM => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = IPduPtr_16(D)->ComIPduSignalWithFilterRefNum;
  _5 = IPduPtr_16(D)->ComIPduSignalGroupWithFilterRefNum;
  NumberOfFlags_18 = _4 + _5;
  # DEBUG NumberOfFlags => NumberOfFlags_18
  # DEBUG BEGIN_STMT
  _6 = (unsigned int) NumberOfFlags_18;
  _7 = _6 + 7;
  _8 = _7 >> 3;
  numberOfFlagBytes_19 = (uint16) _8;
  # DEBUG numberOfFlagBytes => numberOfFlagBytes_19
  # DEBUG BEGIN_STMT
  # DEBUG j => 0
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _9 = (sizetype) j_12;
  _17 = _3 + _9;
  _10 = Com_gDataMemPtr.261_1 + _17;
  _11 = *_10;
  if (_11 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  # DEBUG newTM => 1

  <bb 5> [local count: 955630223]:
  # newTM_13 = PHI <newTM_14(3), 1(4)>
  # DEBUG newTM => newTM_13
  # DEBUG BEGIN_STMT
  j_21 = j_12 + 1;
  # DEBUG j => j_21

  <bb 6> [local count: 1073741824]:
  # j_12 = PHI <0(2), j_21(5)>
  # newTM_14 = PHI <0(2), newTM_13(5)>
  # DEBUG newTM => newTM_14
  # DEBUG j => j_12
  # DEBUG BEGIN_STMT
  if (j_12 < numberOfFlagBytes_19)
    goto <bb 3>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # newTM_20 = PHI <newTM_14(6)>
  # DEBUG BEGIN_STMT
  return newTM_20;

}



;; Function Com_EB_TxConfirmations (Com_EB_TxConfirmations, funcdef_no=191, decl_uid=6259, cgraph_uid=192, symbol_order=196)

Com_EB_TxConfirmations (const struct ComTxIPduType * IPduPtr)
{
  void (*<T5f8>) (void) fptr;
  Com_CbkTxAckIdxType i;
  const struct Com_ConfigType * Com_gConfigPtr.794_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  const Com_CbkTxAckIdxType * _6;
  short unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  int _11;
  short unsigned int _12;
  int _13;
  int _14;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_19 = IPduPtr_18(D)->ComNotificationFirst;
  # DEBUG i => i_19
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.794_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.794_1->ComTxNotificationRef;
  _3 = (unsigned int) i_15;
  _4 = _3 * 2;
  _5 = _2 + _4;
  _6 = Com_gConfigPtr.794_1 + _5;
  _7 = *_6;
  _8 = (int) _7;
  fptr_20 = Com_CbkTxAck_Array[_8];
  # DEBUG fptr => fptr_20
  # DEBUG BEGIN_STMT
  fptr_20 ();
  # DEBUG BEGIN_STMT
  i_22 = i_15 + 1;
  # DEBUG i => i_22

  <bb 4> [local count: 1073741824]:
  # i_15 = PHI <i_19(2), i_22(3)>
  # DEBUG i => i_15
  # DEBUG BEGIN_STMT
  _9 = (int) i_15;
  _10 = IPduPtr_18(D)->ComNotificationFirst;
  _11 = (int) _10;
  _12 = IPduPtr_18(D)->ComNotificationNum;
  _13 = (int) _12;
  _14 = _11 + _13;
  if (_9 < _14)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  return;

}



;; Function Com_EB_Read_SignalReplace (Com_EB_Read_SignalReplace, funcdef_no=254, decl_uid=10353, cgraph_uid=255, symbol_order=259)


Symbols to be put in SSA form
{ D.12308 D.13968 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


Merging blocks 2 and 7
Merging blocks 12 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 10 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Com_EB_Read_SignalReplace (const struct ComRxSignalType * SignalPtr)
{
  boolean RxDMReplace;
  uint8 RxDMTout;
  boolean D.13968;
  boolean rxDMReplace;
  uint8 filterType;
  const struct ComRxSignalExtType * const SignalExtPtr;
  boolean takeInitVal;
  const struct Com_ConfigType * Com_gConfigPtr.800_1;
  long unsigned int _2;
  short unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  short unsigned int _7;
  int iftmp.802_8;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  uint8 * Com_gDataMemPtr.803_19;
  const struct Com_ConfigType * Com_gConfigPtr.804_20;
  short unsigned int _21;
  unsigned int _22;
  short unsigned int _23;
  short unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  uint8 * _27;
  unsigned char _28;
  int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  int _33;
  unsigned char _34;
  uint8 * Com_gDataMemPtr.805_36;
  const struct Com_ConfigType * Com_gConfigPtr.806_37;
  short unsigned int _38;
  int _39;
  int _40;
  int _41;
  sizetype _42;
  uint8 * _43;
  unsigned char _44;
  unsigned char _45;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG takeInitVal => 0
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.800_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.800_1->ComRxSignalExtRef;
  _3 = SignalPtr_10(D)->ComSignalExtRef;
  _4 = (unsigned int) _3;
  _5 = _4 * 14;
  _6 = _2 + _5;
  SignalExtPtr_11 = Com_gConfigPtr.800_1 + _6;
  # DEBUG SignalExtPtr => SignalExtPtr_11
  # DEBUG BEGIN_STMT
  filterType_12 = SignalPtr_10(D)->ComSignalBase.ComFilterConf.ComFilterType;
  # DEBUG filterType => filterType_12
  # DEBUG BEGIN_STMT
  # DEBUG D#6 => filterType_12 == 0
  # DEBUG takeInitVal => (boolean) D#6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = SignalPtr_10(D)->ComIPduRef;
  # DEBUG SignalExtPtr => SignalExtPtr_11
  # DEBUG PduId => _7
  # DEBUG INLINE_ENTRY Com_EB_CheckRxSignalDM
  # DEBUG BEGIN_STMT
  # DEBUG RxDMReplace => 0
  # DEBUG BEGIN_STMT
  _15 = SignalExtPtr_11->ComRxSignalExtFlags;
  _16 = _15 & 1;
  if (_16 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = _15 >> 2;
  _18 = _17 & 1;
  if (_18 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.803_19 = Com_gDataMemPtr;
  Com_gConfigPtr.804_20 = Com_gConfigPtr;
  _21 = Com_gConfigPtr.804_20->ComRxTimeoutSignalStatusQueueBase;
  _22 = (unsigned int) _21;
  _23 = SignalExtPtr_11->RxSigDMQueueRef;
  _24 = _23 >> 2;
  _25 = (unsigned int) _24;
  _26 = _22 + _25;
  _27 = Com_gDataMemPtr.803_19 + _26;
  _28 = *_27;
  _29 = (int) _28;
  _30 = _23 & 3;
  _31 = (unsigned int) _30;
  _32 = _31 * 2;
  _33 = _29 >> _32;
  _34 = (unsigned char) _33;
  RxDMTout_35 = _34 & 1;
  # DEBUG RxDMTout => RxDMTout_35
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.805_36 = Com_gDataMemPtr;
  Com_gConfigPtr.806_37 = Com_gConfigPtr;
  _38 = Com_gConfigPtr.806_37->ComRxIPduStatusBase;
  _39 = (int) _38;
  _40 = (int) _7;
  _41 = _39 + _40;
  _42 = (sizetype) _41;
  _43 = Com_gDataMemPtr.805_36 + _42;
  _44 = *_43;
  _45 = _44 >> 2;
  RxDMTout_46 = _45 & 1;
  # DEBUG RxDMTout => RxDMTout_46

  <bb 6> [local count: 536870913]:
  # RxDMTout_48 = PHI <RxDMTout_35(4), RxDMTout_46(5)>
  # DEBUG RxDMTout => RxDMTout_48
  # DEBUG BEGIN_STMT

  <bb 7> [local count: 1073741824]:
  # RxDMReplace_47 = PHI <0(2), RxDMTout_48(6)>
  # DEBUG RxDMReplace => RxDMReplace_47
  # DEBUG BEGIN_STMT
  _49 = RxDMReplace_47;
  # DEBUG SignalExtPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG RxDMTout => NULL
  # DEBUG RxDMReplace => NULL
  rxDMReplace_13 = _49;
  # DEBUG rxDMReplace => rxDMReplace_13
  # DEBUG BEGIN_STMT
  if (filterType_12 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 536870913]:
  if (rxDMReplace_13 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 268435456]:

  <bb 10> [local count: 1073741824]:
  # iftmp.802_8 = PHI <1(8), 0(9), 1(7)>
  takeInitVal_14 = (boolean) iftmp.802_8;
  # DEBUG takeInitVal => takeInitVal_14
  # DEBUG BEGIN_STMT
  return takeInitVal_14;

}



;; Function Com_SetupRxSignalGroup (Com_SetupRxSignalGroup, funcdef_no=263, decl_uid=6172, cgraph_uid=264, symbol_order=268)

Com_SetupRxSignalGroup (uint8 * retvalPtr, struct Com_RxSGArrayInfoType * RxSGArrayInfoPtr, const struct ComRxSignalGroupType * SignalGPtr, void (*<T63e>) (uint8 *, struct Com_RxSGArrayInfoType *, const struct ComRxSignalGroupType *, const struct ComRxIPduType *, ComIPduRefType) Com_RxSignalGroupFPtr)
{
  const struct ComRxIPduType * IPduPtr;
  const ComIPduRefType PduId;
  const struct Com_ConfigType * Com_gConfigPtr.612_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  uint8 * Com_gDataMemPtr.614_6;
  short unsigned int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _24;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  PduId_17 = SignalGPtr_16(D)->ComIPduRef;
  # DEBUG PduId => PduId_17
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.612_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.612_1->ComRxIPduRef;
  _3 = (unsigned int) PduId_17;
  _4 = _3 * 48;
  _5 = _2 + _4;
  IPduPtr_18 = Com_gConfigPtr.612_1 + _5;
  # DEBUG IPduPtr => IPduPtr_18
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.614_6 = Com_gDataMemPtr;
  _7 = Com_gConfigPtr.612_1->ComRxIPduStatusBase;
  _8 = (int) _7;
  _9 = (int) PduId_17;
  _10 = _8 + _9;
  _11 = (sizetype) _10;
  _12 = Com_gDataMemPtr.614_6 + _11;
  _13 = *_12;
  _24 = _13 & 1;
  if (_24 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  *retvalPtr_19(D) = 0;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Com_RxSignalGroupFPtr_21(D) (retvalPtr_19(D), RxSGArrayInfoPtr_22(D), SignalGPtr_16(D), IPduPtr_18, PduId_17);
  return;

}



;; Function Com_EB_Read_AY_EL_E2 (Com_EB_Read_AY_EL_E2, funcdef_no=34, decl_uid=6743, cgraph_uid=35, symbol_order=38)

Com_EB_Read_AY_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  const uint8 * _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int _10;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_13(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> [local count: 1073741824]:
  # ii_11 = PHI <0(2), ii_20(5)>
  # DEBUG ii => ii_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_16(D)->ComSignalPositionInBit;
  _2 = Com_EB_ReadPropPtr_16(D)->ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_11;
  pos_17 = _4 + 65535;
  # DEBUG pos => pos_17
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_17;
  _6 = dataPtr_18(D) + _5;
  _7 = (sizetype) ii_11;
  _8 = SignalDataPtr_13(D) + _7;
  _9 = *_6;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  ii_20 = ii_11 + 1;
  # DEBUG ii => ii_20
  # DEBUG BEGIN_STMT
  _10 = Com_EB_ReadPropPtr_16(D)->ComBitSize;
  if (_10 > ii_20)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_32_EL_E2 (Com_EB_Read_32_EL_E2, funcdef_no=32, decl_uid=6733, cgraph_uid=33, symbol_order=36)

Com_EB_Read_32_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 tmp_val;
  const uint8 mask;
  const uint8 space;
  ComSignalBitSizeType size;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 value;
  short unsigned int _1;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  int _6;
  sizetype _7;
  const uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  unsigned short _14;
  sizetype _16;
  const uint8 * _17;
  unsigned char _18;
  long unsigned int _19;
  unsigned short pos.3_20;
  unsigned short _21;
  int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  long unsigned int _29;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_34(D)
  # DEBUG BEGIN_STMT
  # DEBUG value => 0
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_37(D)->ComSignalPositionInBit;
  row_38 = _1 >> 3;
  # DEBUG row => row_38
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_39 = _3 & 7;
  # DEBUG col => col_39
  # DEBUG BEGIN_STMT
  pos_40 = (sint16) row_38;
  # DEBUG pos => pos_40
  # DEBUG BEGIN_STMT
  size_41 = Com_EB_ReadPropPtr_37(D)->ComBitSize;
  # DEBUG size => size_41
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (col_39 != 7)
    goto <bb 3>; [66.00%]
  else
    goto <bb 8>; [34.00%]

  <bb 3> [local count: 77953656]:
  # DEBUG BEGIN_STMT
  space_43 = col_39 + 1;
  # DEBUG space => space_43
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) col_39;
  _5 = 7 - _4;
  _6 = 255 >> _5;
  mask_44 = (const uint8) _6;
  # DEBUG mask => mask_44
  # DEBUG BEGIN_STMT
  _7 = (sizetype) row_38;
  _8 = dataPtr_45(D) + _7;
  _9 = *_8;
  tmp_val_46 = _9 & mask_44;
  # DEBUG tmp_val => tmp_val_46
  # DEBUG BEGIN_STMT
  value_47 = (uint32) tmp_val_46;
  # DEBUG value => value_47
  # DEBUG BEGIN_STMT
  _10 = (short unsigned int) space_43;
  if (_10 >= size_41)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  _11 = (int) space_43;
  _12 = (int) size_41;
  _13 = _11 - _12;
  value_50 = value_47 >> _13;
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  # DEBUG size => 0

  <bb 8> [local count: 118111600]:
  # value_61 = PHI <value_47(5), 0(2), value_50(4)>
  # pos_60 = PHI <pos_48(5), pos_40(2), pos_40(4)>
  # size_59 = PHI <size_49(5), size_41(2), 0(4)>
  goto <bb 12>; [100.00%]

  <bb 5> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  _14 = row_38 + 1;
  pos_48 = (sint16) _14;
  # DEBUG pos => pos_48
  # DEBUG BEGIN_STMT
  size_49 = size_41 - _10;
  # DEBUG size => size_49
  goto <bb 8>; [100.00%]

  <bb 6> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  value_55 = value_30 << 8;
  # DEBUG value => value_55
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_32;
  _17 = dataPtr_45(D) + _16;
  _18 = *_17;
  _19 = (long unsigned int) _18;
  value_56 = _19 + value_55;
  # DEBUG value => value_56
  # DEBUG BEGIN_STMT
  size_57 = size_33 + 65528;
  # DEBUG size => size_57
  # DEBUG BEGIN_STMT
  pos.3_20 = (unsigned short) pos_32;
  _21 = pos.3_20 + 1;
  pos_58 = (sint16) _21;
  # DEBUG pos => pos_58

  <bb 12> [local count: 1073741824]:
  # value_30 = PHI <value_61(8), value_56(6)>
  # pos_32 = PHI <pos_60(8), pos_58(6)>
  # size_33 = PHI <size_59(8), size_57(6)>
  # DEBUG size => size_33
  # DEBUG pos => pos_32
  # DEBUG value => value_30
  # DEBUG BEGIN_STMT
  if (size_33 > 7)
    goto <bb 6>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # value_2 = PHI <value_30(12)>
  # pos_15 = PHI <pos_32(12)>
  # size_35 = PHI <size_33(12)>
  # DEBUG BEGIN_STMT
  if (size_35 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _22 = (int) size_35;
  value_51 = value_2 << _22;
  # DEBUG value => value_51
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_15;
  _24 = dataPtr_45(D) + _23;
  _25 = *_24;
  _26 = (long unsigned int) _25;
  _27 = (unsigned int) size_35;
  _28 = 8 - _27;
  _29 = _26 >> _28;
  value_52 = _29 + value_51;
  # DEBUG value => value_52

  <bb 11> [local count: 118111601]:
  # value_31 = PHI <value_2(9), value_52(10)>
  # DEBUG value => value_31
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  MEM[(uint32 *)SignalDataPtr_34(D)] = value_31;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_64_EL_E2 (Com_EB_Read_64_EL_E2, funcdef_no=33, decl_uid=6738, cgraph_uid=34, symbol_order=37)

Com_EB_Read_64_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  struct ComSignalBaseType Com_EB_ReadProp_loc;
  short unsigned int _1;
  short unsigned int _2;
  uint32 * _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  uint32 * _8;
  uint32 * _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_11(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_13(D)->ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc = *Com_EB_ReadPropPtr_13(D);
  # DEBUG BEGIN_STMT
  _2 = _1 + 65504;
  Com_EB_ReadProp_loc.ComBitSize = _2;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].HiWord;
  Com_EB_Read_32_DL_E2 (_3, dataPtr_14(D), &Com_EB_ReadProp_loc, retvalPtr_15(D));
  # DEBUG BEGIN_STMT
  _4 = Com_EB_ReadPropPtr_13(D)->ComSignalPositionInBit;
  _5 = Com_EB_ReadPropPtr_13(D)->ComBitSize;
  _6 = _4 + _5;
  _7 = _6 + 65504;
  Com_EB_ReadProp_loc.ComSignalPositionInBit = _7;
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _8 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].LoWord;
  Com_EB_Read_32_DL_E2 (_8, dataPtr_14(D), &Com_EB_ReadProp_loc, retvalPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_ReadProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _9 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].LoWord;
  Com_EB_Read_32_EL_E2 (_9, dataPtr_14(D), Com_EB_ReadPropPtr_13(D), retvalPtr_15(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_16_EL_E2 (Com_EB_Read_16_EL_E2, funcdef_no=31, decl_uid=6728, cgraph_uid=32, symbol_order=35)

Com_EB_Read_16_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 mask;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 tmpval;
  sint8 ssize;
  uint8 bitsread;
  uint16 value;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  unsigned char ssize.4_8;
  unsigned char _9;
  unsigned char ssize.5_10;
  unsigned char _11;
  unsigned short pos.6_12;
  unsigned short _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  long unsigned int _17;
  int _18;
  short unsigned int _19;
  int _20;
  int _21;
  long unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  unsigned char ssize.7_26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.8_29;
  unsigned char _30;
  unsigned short pos.9_31;
  unsigned short _32;
  sizetype _33;
  const uint8 * _34;
  unsigned char _35;
  long unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  short unsigned int _40;
  unsigned char _41;
  unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  long unsigned int _45;
  short unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  unsigned int _49;

  <bb 2> [local count: 178956970]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_59(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 0
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  # DEBUG ssize => (sint8) _1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  row_64 = _2 >> 3;
  # DEBUG row => row_64
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_65 = _4 & 7;
  # DEBUG col => col_65
  # DEBUG BEGIN_STMT
  pos_66 = (sint16) row_64;
  # DEBUG pos => pos_66
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (col_65 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 3> [local count: 60845370]:
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 8
  # DEBUG BEGIN_STMT
  _5 = (sizetype) row_64;
  _6 = dataPtr_68(D) + _5;
  _7 = *_6;
  tmpval_78 = (uint32) _7;
  # DEBUG tmpval => tmpval_78
  # DEBUG BEGIN_STMT
  ssize.4_8 = (unsigned char) _1;
  _9 = ssize.4_8 + 248;
  ssize_79 = (sint8) _9;
  # DEBUG ssize => ssize_79
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 492294356]:
  # DEBUG BEGIN_STMT
  bitsread_81 = bitsread_51 + 8;
  # DEBUG bitsread => bitsread_81
  # DEBUG BEGIN_STMT
  ssize.5_10 = (unsigned char) ssize_53;
  _11 = ssize.5_10 + 248;
  ssize_82 = (sint8) _11;
  # DEBUG ssize => ssize_82
  # DEBUG BEGIN_STMT
  tmpval_83 = tmpval_55 << 8;
  # DEBUG tmpval => tmpval_83
  # DEBUG BEGIN_STMT
  pos.6_12 = (unsigned short) pos_57;
  _13 = pos.6_12 + 1;
  pos_84 = (sint16) _13;
  # DEBUG pos => pos_84
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_84;
  _15 = dataPtr_68(D) + _14;
  _16 = *_15;
  _17 = (long unsigned int) _16;
  tmpval_85 = _17 | tmpval_83;
  # DEBUG tmpval => tmpval_85

  <bb 5> [local count: 553139727]:
  # bitsread_51 = PHI <8(3), bitsread_81(4)>
  # ssize_53 = PHI <ssize_79(3), ssize_82(4)>
  # tmpval_55 = PHI <tmpval_78(3), tmpval_85(4)>
  # pos_57 = PHI <pos_66(3), pos_84(4)>
  # DEBUG pos => pos_57
  # DEBUG tmpval => tmpval_55
  # DEBUG ssize => ssize_53
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  if (ssize_53 > 0)
    goto <bb 4>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 60845370]:
  # bitsread_3 = PHI <bitsread_51(5)>
  # tmpval_61 = PHI <tmpval_55(5)>
  # DEBUG BEGIN_STMT
  _18 = (int) bitsread_3;
  _19 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _20 = (int) _19;
  _21 = _18 - _20;
  _22 = tmpval_61 >> _21;
  value_80 = (uint16) _22;
  # DEBUG value => value_80
  goto <bb 11>; [100.00%]

  <bb 7> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _23 = (sizetype) row_64;
  _24 = dataPtr_68(D) + _23;
  _25 = *_24;
  tmpval_69 = (uint32) _25;
  # DEBUG tmpval => tmpval_69
  # DEBUG BEGIN_STMT
  ssize.7_26 = (unsigned char) _1;
  _27 = ssize.7_26 - col_65;
  _28 = _27 + 255;
  ssize_70 = (sint8) _28;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  bitsread_72 = bitsread_52 + 8;
  # DEBUG bitsread => bitsread_72
  # DEBUG BEGIN_STMT
  ssize.8_29 = (unsigned char) ssize_54;
  _30 = ssize.8_29 + 248;
  ssize_73 = (sint8) _30;
  # DEBUG ssize => ssize_73
  # DEBUG BEGIN_STMT
  tmpval_74 = tmpval_56 << 8;
  # DEBUG tmpval => tmpval_74
  # DEBUG BEGIN_STMT
  pos.9_31 = (unsigned short) pos_58;
  _32 = pos.9_31 + 1;
  pos_75 = (sint16) _32;
  # DEBUG pos => pos_75
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_75;
  _34 = dataPtr_68(D) + _33;
  _35 = *_34;
  _36 = (long unsigned int) _35;
  tmpval_76 = _36 | tmpval_74;
  # DEBUG tmpval => tmpval_76

  <bb 9> [local count: 1073741824]:
  # bitsread_52 = PHI <0(7), bitsread_72(8)>
  # ssize_54 = PHI <ssize_70(7), ssize_73(8)>
  # tmpval_56 = PHI <tmpval_69(7), tmpval_76(8)>
  # pos_58 = PHI <pos_66(7), pos_75(8)>
  # DEBUG pos => pos_58
  # DEBUG tmpval => tmpval_56
  # DEBUG ssize => ssize_54
  # DEBUG bitsread => bitsread_52
  # DEBUG BEGIN_STMT
  if (ssize_54 > 0)
    goto <bb 8>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # bitsread_60 = PHI <bitsread_52(9)>
  # tmpval_77 = PHI <tmpval_56(9)>
  # DEBUG BEGIN_STMT
  _37 = (unsigned int) col_65;
  _38 = (unsigned int) bitsread_60;
  _39 = _37 + _38;
  _40 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _41 = (unsigned char) _40;
  _42 = (unsigned int) _41;
  _43 = _39 - _42;
  _44 = _43 + 1;
  _45 = tmpval_77 >> _44;
  value_71 = (uint16) _45;
  # DEBUG value => value_71

  <bb 11> [local count: 178956971]:
  # value_50 = PHI <value_80(6), value_71(10)>
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _46 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _47 = (unsigned int) _46;
  _48 = 16 - _47;
  _49 = 65535 >> _48;
  mask_87 = (const uint16) _49;
  # DEBUG mask => mask_87
  # DEBUG BEGIN_STMT
  value_88 = value_50 & mask_87;
  # DEBUG value => value_88
  # DEBUG BEGIN_STMT
  MEM[(uint16 *)SignalDataPtr_59(D)] = value_88;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_08_EL_E2 (Com_EB_Read_08_EL_E2, funcdef_no=30, decl_uid=6723, cgraph_uid=31, symbol_order=34)

Com_EB_Read_08_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 mask;
  uint8 bitsread;
  const uint8 space;
  uint16 tmpval;
  uint8 col;
  ComSignalDescBitType row;
  uint8 value;
  short unsigned int _1;
  unsigned char _2;
  sizetype _3;
  const uint8 * _4;
  unsigned char _5;
  int _6;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  const uint8 * _14;
  unsigned char _15;
  unsigned short _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  short unsigned int _20;
  sizetype _21;
  const uint8 * _22;
  unsigned char _23;
  int _24;
  unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  short unsigned int _28;
  unsigned char _29;
  unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  int _33;
  short unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  unsigned int _37;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_43(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_45(D)->ComSignalPositionInBit;
  row_46 = _1 >> 3;
  # DEBUG row => row_46
  # DEBUG BEGIN_STMT
  _2 = (unsigned char) _1;
  col_47 = _2 & 7;
  # DEBUG col => col_47
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_48 = col_47 + 1;
  # DEBUG space => space_48
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 0
  # DEBUG BEGIN_STMT
  if (col_47 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _3 = (sizetype) row_46;
  _4 = dataPtr_49(D) + _3;
  _5 = *_4;
  # DEBUG tmpval => (uint16) _5
  # DEBUG BEGIN_STMT
  _6 = (int) _5;
  _7 = Com_EB_ReadPropPtr_45(D)->ComBitSize;
  _8 = (unsigned int) _7;
  _9 = 8 - _8;
  _10 = _6 >> _9;
  value_57 = (uint8) _10;
  # DEBUG value => value_57
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  _11 = (short unsigned int) space_48;
  _12 = Com_EB_ReadPropPtr_45(D)->ComBitSize;
  if (_11 < _12)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 233860969]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _13 = (sizetype) row_46;
  _14 = dataPtr_49(D) + _13;
  _15 = *_14;
  tmpval_52 = (uint16) _15;
  # DEBUG tmpval => tmpval_52
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 8
  # DEBUG BEGIN_STMT
  tmpval_53 = tmpval_52 << 8;
  # DEBUG tmpval => tmpval_53
  # DEBUG BEGIN_STMT
  _16 = row_46 + 1;
  # DEBUG pos => (sint16) _16
  # DEBUG BEGIN_STMT
  _17 = (sizetype) _16;
  _18 = dataPtr_49(D) + _17;
  _19 = *_18;
  _20 = (short unsigned int) _19;
  tmpval_54 = _20 | tmpval_53;
  # DEBUG tmpval => tmpval_54
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 474808635]:
  # DEBUG BEGIN_STMT
  _21 = (sizetype) row_46;
  _22 = dataPtr_49(D) + _21;
  _23 = *_22;
  tmpval_50 = (uint16) _23;
  # DEBUG tmpval => tmpval_50

  <bb 7> [local count: 708669605]:
  # tmpval_39 = PHI <tmpval_54(5), tmpval_50(6)>
  # bitsread_40 = PHI <8(5), 0(6)>
  # DEBUG bitsread => bitsread_40
  # DEBUG tmpval => tmpval_39
  # DEBUG BEGIN_STMT
  _24 = (int) tmpval_39;
  _25 = (unsigned int) col_47;
  _26 = (unsigned int) bitsread_40;
  _27 = _25 + _26;
  _28 = Com_EB_ReadPropPtr_45(D)->ComBitSize;
  _29 = (unsigned char) _28;
  _30 = (unsigned int) _29;
  _31 = _27 - _30;
  _32 = _31 + 1;
  _33 = _24 >> _32;
  value_56 = (uint8) _33;
  # DEBUG value => value_56

  <bb 8> [local count: 1073741824]:
  # value_38 = PHI <value_57(3), value_56(7)>
  # DEBUG value => value_38
  # DEBUG BEGIN_STMT
  _34 = Com_EB_ReadPropPtr_45(D)->ComBitSize;
  _35 = (unsigned int) _34;
  _36 = 8 - _35;
  _37 = 255 >> _36;
  mask_58 = (const uint8) _37;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  value_59 = value_38 & mask_58;
  # DEBUG value => value_59
  # DEBUG BEGIN_STMT
  MEM[(uint8 *)SignalDataPtr_43(D)] = value_59;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_AY_EL_E1 (Com_EB_Read_AY_EL_E1, funcdef_no=29, decl_uid=6718, cgraph_uid=30, symbol_order=33)

Com_EB_Read_AY_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  sizetype _4;
  uint8 * _5;
  unsigned char _6;
  short unsigned int _7;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_10(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> [local count: 1073741824]:
  # ii_8 = PHI <0(2), ii_17(5)>
  # DEBUG ii => ii_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_13(D)->ComSignalPositionInBit;
  pos_14 = _1 + ii_8;
  # DEBUG pos => pos_14
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_14;
  _3 = dataPtr_15(D) + _2;
  _4 = (sizetype) ii_8;
  _5 = SignalDataPtr_10(D) + _4;
  _6 = *_3;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  ii_17 = ii_8 + 1;
  # DEBUG ii => ii_17
  # DEBUG BEGIN_STMT
  _7 = Com_EB_ReadPropPtr_13(D)->ComBitSize;
  if (_7 > ii_17)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_32_EL_E1 (Com_EB_Read_32_EL_E1, funcdef_no=27, decl_uid=6708, cgraph_uid=28, symbol_order=31)

Com_EB_Read_32_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 tmp_val;
  const uint8 mask;
  const uint8 space;
  ComSignalBitSizeType size;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 value;
  short unsigned int _1;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  int _6;
  sizetype _7;
  const uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  unsigned short _14;
  sizetype _16;
  const uint8 * _17;
  unsigned char _18;
  long unsigned int _19;
  unsigned short pos.13_20;
  unsigned short _21;
  int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  long unsigned int _29;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_34(D)
  # DEBUG BEGIN_STMT
  # DEBUG value => 0
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_37(D)->ComSignalPositionInBit;
  row_38 = _1 >> 3;
  # DEBUG row => row_38
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_39 = _3 & 7;
  # DEBUG col => col_39
  # DEBUG BEGIN_STMT
  pos_40 = (sint16) row_38;
  # DEBUG pos => pos_40
  # DEBUG BEGIN_STMT
  size_41 = Com_EB_ReadPropPtr_37(D)->ComBitSize;
  # DEBUG size => size_41
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (col_39 != 7)
    goto <bb 3>; [66.00%]
  else
    goto <bb 8>; [34.00%]

  <bb 3> [local count: 77953656]:
  # DEBUG BEGIN_STMT
  space_43 = col_39 + 1;
  # DEBUG space => space_43
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) col_39;
  _5 = 7 - _4;
  _6 = 255 >> _5;
  mask_44 = (const uint8) _6;
  # DEBUG mask => mask_44
  # DEBUG BEGIN_STMT
  _7 = (sizetype) row_38;
  _8 = dataPtr_45(D) + _7;
  _9 = *_8;
  tmp_val_46 = _9 & mask_44;
  # DEBUG tmp_val => tmp_val_46
  # DEBUG BEGIN_STMT
  value_47 = (uint32) tmp_val_46;
  # DEBUG value => value_47
  # DEBUG BEGIN_STMT
  _10 = (short unsigned int) space_43;
  if (_10 >= size_41)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  _11 = (int) space_43;
  _12 = (int) size_41;
  _13 = _11 - _12;
  value_50 = value_47 >> _13;
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  # DEBUG size => 0

  <bb 8> [local count: 118111600]:
  # value_61 = PHI <value_47(5), 0(2), value_50(4)>
  # pos_60 = PHI <pos_48(5), pos_40(2), pos_40(4)>
  # size_59 = PHI <size_49(5), size_41(2), 0(4)>
  goto <bb 12>; [100.00%]

  <bb 5> [local count: 38976828]:
  # DEBUG BEGIN_STMT
  _14 = row_38 + 65535;
  pos_48 = (sint16) _14;
  # DEBUG pos => pos_48
  # DEBUG BEGIN_STMT
  size_49 = size_41 - _10;
  # DEBUG size => size_49
  goto <bb 8>; [100.00%]

  <bb 6> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  value_55 = value_30 << 8;
  # DEBUG value => value_55
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_32;
  _17 = dataPtr_45(D) + _16;
  _18 = *_17;
  _19 = (long unsigned int) _18;
  value_56 = _19 + value_55;
  # DEBUG value => value_56
  # DEBUG BEGIN_STMT
  size_57 = size_33 + 65528;
  # DEBUG size => size_57
  # DEBUG BEGIN_STMT
  pos.13_20 = (unsigned short) pos_32;
  _21 = pos.13_20 + 65535;
  pos_58 = (sint16) _21;
  # DEBUG pos => pos_58

  <bb 12> [local count: 1073741824]:
  # value_30 = PHI <value_61(8), value_56(6)>
  # pos_32 = PHI <pos_60(8), pos_58(6)>
  # size_33 = PHI <size_59(8), size_57(6)>
  # DEBUG size => size_33
  # DEBUG pos => pos_32
  # DEBUG value => value_30
  # DEBUG BEGIN_STMT
  if (size_33 > 7)
    goto <bb 6>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # value_2 = PHI <value_30(12)>
  # pos_15 = PHI <pos_32(12)>
  # size_35 = PHI <size_33(12)>
  # DEBUG BEGIN_STMT
  if (size_35 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  _22 = (int) size_35;
  value_51 = value_2 << _22;
  # DEBUG value => value_51
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_15;
  _24 = dataPtr_45(D) + _23;
  _25 = *_24;
  _26 = (long unsigned int) _25;
  _27 = (unsigned int) size_35;
  _28 = 8 - _27;
  _29 = _26 >> _28;
  value_52 = _29 + value_51;
  # DEBUG value => value_52

  <bb 11> [local count: 118111601]:
  # value_31 = PHI <value_2(9), value_52(10)>
  # DEBUG value => value_31
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  MEM[(uint32 *)SignalDataPtr_34(D)] = value_31;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_64_EL_E1 (Com_EB_Read_64_EL_E1, funcdef_no=28, decl_uid=6713, cgraph_uid=29, symbol_order=32)

Com_EB_Read_64_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  struct ComSignalBaseType Com_EB_ReadProp_loc;
  short unsigned int _1;
  short unsigned int _2;
  uint32 * _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  uint32 * _8;
  uint32 * _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_11(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_13(D)->ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc = *Com_EB_ReadPropPtr_13(D);
  # DEBUG BEGIN_STMT
  _2 = _1 + 65504;
  Com_EB_ReadProp_loc.ComBitSize = _2;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].HiWord;
  Com_EB_Read_32_DL_E1 (_3, dataPtr_14(D), &Com_EB_ReadProp_loc, retvalPtr_15(D));
  # DEBUG BEGIN_STMT
  _4 = Com_EB_ReadPropPtr_13(D)->ComSignalPositionInBit;
  _5 = Com_EB_ReadPropPtr_13(D)->ComBitSize;
  _6 = _4 - _5;
  _7 = _6 + 32;
  Com_EB_ReadProp_loc.ComSignalPositionInBit = _7;
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _8 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].LoWord;
  Com_EB_Read_32_DL_E1 (_8, dataPtr_14(D), &Com_EB_ReadProp_loc, retvalPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_ReadProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _9 = &MEM[(struct ComEmu64Type *)SignalDataPtr_11(D)].LoWord;
  Com_EB_Read_32_EL_E1 (_9, dataPtr_14(D), Com_EB_ReadPropPtr_13(D), retvalPtr_15(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_16_EL_E1 (Com_EB_Read_16_EL_E1, funcdef_no=26, decl_uid=6703, cgraph_uid=27, symbol_order=30)

Com_EB_Read_16_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 mask;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 tmpval;
  sint8 ssize;
  uint8 bitsread;
  uint16 value;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  unsigned char ssize.14_8;
  unsigned char _9;
  unsigned char ssize.15_10;
  unsigned char _11;
  unsigned short pos.16_12;
  unsigned short _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  long unsigned int _17;
  int _18;
  short unsigned int _19;
  int _20;
  int _21;
  long unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  unsigned char ssize.17_26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.18_29;
  unsigned char _30;
  unsigned short pos.19_31;
  unsigned short _32;
  sizetype _33;
  const uint8 * _34;
  unsigned char _35;
  long unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  short unsigned int _40;
  unsigned char _41;
  unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  long unsigned int _45;
  short unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  unsigned int _49;

  <bb 2> [local count: 178956970]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_59(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 0
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  # DEBUG ssize => (sint8) _1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  row_64 = _2 >> 3;
  # DEBUG row => row_64
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_65 = _4 & 7;
  # DEBUG col => col_65
  # DEBUG BEGIN_STMT
  pos_66 = (sint16) row_64;
  # DEBUG pos => pos_66
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (col_65 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 3> [local count: 60845370]:
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 8
  # DEBUG BEGIN_STMT
  _5 = (sizetype) row_64;
  _6 = dataPtr_68(D) + _5;
  _7 = *_6;
  tmpval_78 = (uint32) _7;
  # DEBUG tmpval => tmpval_78
  # DEBUG BEGIN_STMT
  ssize.14_8 = (unsigned char) _1;
  _9 = ssize.14_8 + 248;
  ssize_79 = (sint8) _9;
  # DEBUG ssize => ssize_79
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 492294356]:
  # DEBUG BEGIN_STMT
  bitsread_81 = bitsread_51 + 8;
  # DEBUG bitsread => bitsread_81
  # DEBUG BEGIN_STMT
  ssize.15_10 = (unsigned char) ssize_53;
  _11 = ssize.15_10 + 248;
  ssize_82 = (sint8) _11;
  # DEBUG ssize => ssize_82
  # DEBUG BEGIN_STMT
  tmpval_83 = tmpval_55 << 8;
  # DEBUG tmpval => tmpval_83
  # DEBUG BEGIN_STMT
  pos.16_12 = (unsigned short) pos_57;
  _13 = pos.16_12 + 65535;
  pos_84 = (sint16) _13;
  # DEBUG pos => pos_84
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_84;
  _15 = dataPtr_68(D) + _14;
  _16 = *_15;
  _17 = (long unsigned int) _16;
  tmpval_85 = _17 | tmpval_83;
  # DEBUG tmpval => tmpval_85

  <bb 5> [local count: 553139727]:
  # bitsread_51 = PHI <8(3), bitsread_81(4)>
  # ssize_53 = PHI <ssize_79(3), ssize_82(4)>
  # tmpval_55 = PHI <tmpval_78(3), tmpval_85(4)>
  # pos_57 = PHI <pos_66(3), pos_84(4)>
  # DEBUG pos => pos_57
  # DEBUG tmpval => tmpval_55
  # DEBUG ssize => ssize_53
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  if (ssize_53 > 0)
    goto <bb 4>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 60845370]:
  # bitsread_3 = PHI <bitsread_51(5)>
  # tmpval_61 = PHI <tmpval_55(5)>
  # DEBUG BEGIN_STMT
  _18 = (int) bitsread_3;
  _19 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _20 = (int) _19;
  _21 = _18 - _20;
  _22 = tmpval_61 >> _21;
  value_80 = (uint16) _22;
  # DEBUG value => value_80
  goto <bb 11>; [100.00%]

  <bb 7> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _23 = (sizetype) row_64;
  _24 = dataPtr_68(D) + _23;
  _25 = *_24;
  tmpval_69 = (uint32) _25;
  # DEBUG tmpval => tmpval_69
  # DEBUG BEGIN_STMT
  ssize.17_26 = (unsigned char) _1;
  _27 = ssize.17_26 - col_65;
  _28 = _27 + 255;
  ssize_70 = (sint8) _28;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  bitsread_72 = bitsread_52 + 8;
  # DEBUG bitsread => bitsread_72
  # DEBUG BEGIN_STMT
  ssize.18_29 = (unsigned char) ssize_54;
  _30 = ssize.18_29 + 248;
  ssize_73 = (sint8) _30;
  # DEBUG ssize => ssize_73
  # DEBUG BEGIN_STMT
  tmpval_74 = tmpval_56 << 8;
  # DEBUG tmpval => tmpval_74
  # DEBUG BEGIN_STMT
  pos.19_31 = (unsigned short) pos_58;
  _32 = pos.19_31 + 65535;
  pos_75 = (sint16) _32;
  # DEBUG pos => pos_75
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_75;
  _34 = dataPtr_68(D) + _33;
  _35 = *_34;
  _36 = (long unsigned int) _35;
  tmpval_76 = _36 | tmpval_74;
  # DEBUG tmpval => tmpval_76

  <bb 9> [local count: 1073741824]:
  # bitsread_52 = PHI <0(7), bitsread_72(8)>
  # ssize_54 = PHI <ssize_70(7), ssize_73(8)>
  # tmpval_56 = PHI <tmpval_69(7), tmpval_76(8)>
  # pos_58 = PHI <pos_66(7), pos_75(8)>
  # DEBUG pos => pos_58
  # DEBUG tmpval => tmpval_56
  # DEBUG ssize => ssize_54
  # DEBUG bitsread => bitsread_52
  # DEBUG BEGIN_STMT
  if (ssize_54 > 0)
    goto <bb 8>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # bitsread_60 = PHI <bitsread_52(9)>
  # tmpval_77 = PHI <tmpval_56(9)>
  # DEBUG BEGIN_STMT
  _37 = (unsigned int) col_65;
  _38 = (unsigned int) bitsread_60;
  _39 = _37 + _38;
  _40 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _41 = (unsigned char) _40;
  _42 = (unsigned int) _41;
  _43 = _39 - _42;
  _44 = _43 + 1;
  _45 = tmpval_77 >> _44;
  value_71 = (uint16) _45;
  # DEBUG value => value_71

  <bb 11> [local count: 178956971]:
  # value_50 = PHI <value_80(6), value_71(10)>
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _46 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _47 = (unsigned int) _46;
  _48 = 16 - _47;
  _49 = 65535 >> _48;
  mask_87 = (const uint16) _49;
  # DEBUG mask => mask_87
  # DEBUG BEGIN_STMT
  value_88 = value_50 & mask_87;
  # DEBUG value => value_88
  # DEBUG BEGIN_STMT
  MEM[(uint16 *)SignalDataPtr_59(D)] = value_88;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_08_EL_E1 (Com_EB_Read_08_EL_E1, funcdef_no=25, decl_uid=6698, cgraph_uid=26, symbol_order=29)

Com_EB_Read_08_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 mask;
  uint8 bitsread;
  const uint8 space;
  uint16 tmpval;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint8 value;
  short unsigned int _1;
  unsigned char _2;
  sizetype _3;
  const uint8 * _4;
  unsigned char _5;
  int _6;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  const uint8 * _14;
  unsigned char _15;
  unsigned short _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  short unsigned int _20;
  sizetype _21;
  const uint8 * _22;
  unsigned char _23;
  int _24;
  unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  short unsigned int _28;
  unsigned char _29;
  unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  int _33;
  short unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  unsigned int _37;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retPtr => SignalDataPtr_43(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_45(D)->ComSignalPositionInBit;
  row_46 = _1 >> 3;
  # DEBUG row => row_46
  # DEBUG BEGIN_STMT
  _2 = (unsigned char) _1;
  col_47 = _2 & 7;
  # DEBUG col => col_47
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_48 = col_47 + 1;
  # DEBUG space => space_48
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 0
  # DEBUG BEGIN_STMT
  if (col_47 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _3 = (sizetype) row_46;
  _4 = dataPtr_49(D) + _3;
  _5 = *_4;
  # DEBUG tmpval => (uint16) _5
  # DEBUG BEGIN_STMT
  _6 = (int) _5;
  _7 = Com_EB_ReadPropPtr_45(D)->ComBitSize;
  _8 = (unsigned int) _7;
  _9 = 8 - _8;
  _10 = _6 >> _9;
  value_58 = (uint8) _10;
  # DEBUG value => value_58
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  _11 = (short unsigned int) space_48;
  _12 = Com_EB_ReadPropPtr_45(D)->ComBitSize;
  if (_11 < _12)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 233860969]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _13 = (sizetype) row_46;
  _14 = dataPtr_49(D) + _13;
  _15 = *_14;
  tmpval_52 = (uint16) _15;
  # DEBUG tmpval => tmpval_52
  # DEBUG BEGIN_STMT
  # DEBUG bitsread => 8
  # DEBUG BEGIN_STMT
  tmpval_53 = tmpval_52 << 8;
  # DEBUG tmpval => tmpval_53
  # DEBUG BEGIN_STMT
  _16 = row_46 + 65535;
  pos_54 = (sint16) _16;
  # DEBUG pos => pos_54
  # DEBUG BEGIN_STMT
  _17 = (sizetype) pos_54;
  _18 = dataPtr_49(D) + _17;
  _19 = *_18;
  _20 = (short unsigned int) _19;
  tmpval_55 = _20 | tmpval_53;
  # DEBUG tmpval => tmpval_55
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 474808635]:
  # DEBUG BEGIN_STMT
  _21 = (sizetype) row_46;
  _22 = dataPtr_49(D) + _21;
  _23 = *_22;
  tmpval_50 = (uint16) _23;
  # DEBUG tmpval => tmpval_50

  <bb 7> [local count: 708669605]:
  # tmpval_39 = PHI <tmpval_55(5), tmpval_50(6)>
  # bitsread_40 = PHI <8(5), 0(6)>
  # DEBUG bitsread => bitsread_40
  # DEBUG tmpval => tmpval_39
  # DEBUG BEGIN_STMT
  _24 = (int) tmpval_39;
  _25 = (unsigned int) col_47;
  _26 = (unsigned int) bitsread_40;
  _27 = _25 + _26;
  _28 = Com_EB_ReadPropPtr_45(D)->ComBitSize;
  _29 = (unsigned char) _28;
  _30 = (unsigned int) _29;
  _31 = _27 - _30;
  _32 = _31 + 1;
  _33 = _24 >> _32;
  value_57 = (uint8) _33;
  # DEBUG value => value_57

  <bb 8> [local count: 1073741824]:
  # value_38 = PHI <value_58(3), value_57(7)>
  # DEBUG value => value_38
  # DEBUG BEGIN_STMT
  _34 = Com_EB_ReadPropPtr_45(D)->ComBitSize;
  _35 = (unsigned int) _34;
  _36 = 8 - _35;
  _37 = 255 >> _36;
  mask_59 = (const uint8) _37;
  # DEBUG mask => mask_59
  # DEBUG BEGIN_STMT
  value_60 = value_38 & mask_59;
  # DEBUG value => value_60
  # DEBUG BEGIN_STMT
  MEM[(uint8 *)SignalDataPtr_43(D)] = value_60;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S0_EL_EUB_EOC_E2 (Com_EB_Write_AY_S0_EL_EUB_EOC_E2, funcdef_no=136, decl_uid=7674, cgraph_uid=137, symbol_order=141)

Com_EB_Write_AY_S0_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  unsigned int _7;
  unsigned int _8;
  unsigned char _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  sizetype _18;
  const uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned char _22;
  unsigned char _23;
  short unsigned int _28;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_29(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_32(D)->ComUpdateBitPositionInBit;
  _2 = _1 >> 3;
  _3 = (sizetype) _2;
  _4 = dataPtr_33(D) + _3;
  _5 = *_4;
  _28 = _1 & 7;
  _7 = (unsigned int) _28;
  _8 = 1 << _7;
  _9 = (unsigned char) _8;
  _10 = _5 | _9;
  *_4 = _10;

  <bb 3> [local count: 1073741824]:
  # valueChanged_24 = PHI <0(2), valueChanged_25(7)>
  # ii_26 = PHI <0(2), ii_37(7)>
  # DEBUG ii => ii_26
  # DEBUG valueChanged => valueChanged_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_32(D)->ComSignalPositionInBit;
  _12 = Com_EB_WritePropPtr_32(D)->ComSignalBase.ComBitSize;
  _13 = _11 + _12;
  _14 = _13 - ii_26;
  pos_35 = _14 + 65535;
  # DEBUG pos => pos_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = (sizetype) pos_35;
  _16 = dataPtr_33(D) + _15;
  _17 = *_16;
  _18 = (sizetype) ii_26;
  _19 = SignalDataPtr_29(D) + _18;
  _20 = *_19;
  if (_17 != _20)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 1073741824]:
  # valueChanged_25 = PHI <valueChanged_24(3), 1(4)>
  # DEBUG valueChanged => valueChanged_25
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_16 = _20;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_37 = ii_26 + 1;
  # DEBUG ii => ii_37
  # DEBUG BEGIN_STMT
  _21 = Com_EB_WritePropPtr_32(D)->ComSignalBase.ComBitSize;
  if (_21 > ii_37)
    goto <bb 7>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 7> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 118111601]:
  # valueChanged_6 = PHI <valueChanged_25(5)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _22 = IntDataPtr_39(D)->trigger;
  _23 = valueChanged_6 | _22;
  IntDataPtr_39(D)->trigger = _23;
  return;

}



;; Function Com_EB_Write_32_SX_EL_EUB_EOC_E2 (Com_EB_Write_32_SX_EL_EUB_EOC_E2, funcdef_no=134, decl_uid=7664, cgraph_uid=135, symbol_order=139)

Com_EB_Write_32_SX_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  short unsigned int _29;
  unsigned char _30;
  unsigned char _31;
  unsigned short _32;
  int _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char ssize.43_38;
  unsigned char _39;
  unsigned short pos.44_40;
  unsigned short _41;
  unsigned char _42;
  int _43;
  unsigned int _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  long unsigned int _63;
  short unsigned int _67;
  unsigned char _68;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  Val_66 = MEM[(const uint32 *)SignalDataPtr_65(D)];
  # DEBUG Val => Val_66
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_66
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_69(D)->ComSignalPositionInBit;
  row_70 = _1 >> 3;
  # DEBUG row => row_70
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_71 = _3 & 7;
  # DEBUG col => col_71
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_72 = 8 - col_71;
  # DEBUG space => space_72
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_69(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_73 = 4294967295 >> _6;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  _7 = (int) col_71;
  mask_74 = mask_73 << _7;
  # DEBUG mask => mask_74
  # DEBUG BEGIN_STMT
  _63 = Val_66 & 255;
  _8 = (int) _63;
  _10 = _8 << _7;
  putvalue_75 = (uint8) _10;
  # DEBUG putvalue => putvalue_75
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_69(D)->ComUpdateBitPositionInBit;
  _12 = _11 >> 3;
  _13 = (sizetype) _12;
  _14 = dataPtr_77(D) + _13;
  _15 = *_14;
  _67 = _11 & 7;
  _17 = (unsigned int) _67;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _23 = _15 | _19;
  *_14 = _23;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _24 = (sizetype) row_70;
  _25 = dataPtr_77(D) + _24;
  _26 = *_25;
  _27 = (unsigned char) mask_74;
  _21 = _26 ^ putvalue_75;
  _22 = _21 & _27;
  _28 = _22 ^ _26;
  if (_26 != _28)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_53 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_53
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_25 = _28;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = Com_EB_WritePropPtr_69(D)->ComSignalBase.ComBitSize;
  _30 = (unsigned char) _29;
  _68 = col_71 + 248;
  tmp_val_80 = _30 + _68;
  # DEBUG tmp_val => tmp_val_80
  # DEBUG BEGIN_STMT
  ssize_81 = (sint8) tmp_val_80;
  # DEBUG ssize => ssize_81
  # DEBUG BEGIN_STMT
  _32 = row_70 + 65535;
  pos_82 = (sint16) _32;
  # DEBUG pos => pos_82
  # DEBUG BEGIN_STMT
  _33 = (int) space_72;
  Val_83 = Val_66 >> _33;
  # DEBUG Val => Val_83
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = (sizetype) pos_60;
  _35 = dataPtr_77(D) + _34;
  _36 = *_35;
  _37 = (unsigned char) Val_58;
  if (_36 != _37)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_54 = PHI <valueChanged_55(5), 1(6)>
  # DEBUG valueChanged => valueChanged_54
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_35 = _37;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_91 = Val_58 >> 8;
  # DEBUG Val => Val_91
  # DEBUG BEGIN_STMT
  ssize.43_38 = (unsigned char) ssize_59;
  _39 = ssize.43_38 + 248;
  ssize_92 = (sint8) _39;
  # DEBUG ssize => ssize_92
  # DEBUG BEGIN_STMT
  pos.44_40 = (unsigned short) pos_60;
  _41 = pos.44_40 + 65535;
  pos_93 = (sint16) _41;
  # DEBUG pos => pos_93

  <bb 8> [local count: 1073741824]:
  # valueChanged_55 = PHI <valueChanged_53(4), valueChanged_54(7)>
  # Val_58 = PHI <Val_83(4), Val_91(7)>
  # ssize_59 = PHI <ssize_81(4), ssize_92(7)>
  # pos_60 = PHI <pos_82(4), pos_93(7)>
  # DEBUG pos => pos_60
  # DEBUG ssize => ssize_59
  # DEBUG Val => Val_58
  # DEBUG valueChanged => valueChanged_55
  # DEBUG BEGIN_STMT
  if (ssize_59 > 7)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_2 = PHI <valueChanged_55(8)>
  # Val_9 = PHI <Val_58(8)>
  # ssize_16 = PHI <ssize_59(8)>
  # pos_20 = PHI <pos_60(8)>
  # DEBUG BEGIN_STMT
  if (ssize_16 > 0)
    goto <bb 10>; [59.00%]
  else
    goto <bb 13>; [41.00%]

  <bb 10> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_84 = (uint8) ssize_16;
  # DEBUG ssize_hlp => ssize_hlp_84
  # DEBUG BEGIN_STMT
  _42 = 8 - ssize_hlp_84;
  _43 = (int) _42;
  _44 = 255 >> _43;
  mask_u8_85 = (uint8) _44;
  # DEBUG mask_u8 => mask_u8_85
  # DEBUG BEGIN_STMT
  # DEBUG mask => _44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _45 = (sizetype) pos_20;
  _46 = dataPtr_77(D) + _45;
  _47 = *_46;
  _49 = (unsigned char) Val_9;
  _31 = _47 ^ _49;
  _48 = _31 & mask_u8_85;
  _50 = _47 ^ _48;
  if (_47 != _50)
    goto <bb 11>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 11> [local count: 45992657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 12> [local count: 69685844]:
  # valueChanged_56 = PHI <valueChanged_2(10), 1(11)>
  # DEBUG valueChanged => valueChanged_56
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_46 = _50;

  <bb 13> [local count: 118111601]:
  # valueChanged_57 = PHI <valueChanged_2(9), valueChanged_56(12)>
  # DEBUG valueChanged => valueChanged_57
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _51 = IntDataPtr_88(D)->trigger;
  _52 = _51 | valueChanged_57;
  IntDataPtr_88(D)->trigger = _52;
  return;

}



;; Function Com_EB_Write_16_SX_EL_EUB_EOC_E2 (Com_EB_Write_16_SX_EL_EUB_EOC_E2, funcdef_no=133, decl_uid=7659, cgraph_uid=134, symbol_order=138)

Com_EB_Write_16_SX_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned short pos.45_28;
  unsigned short _29;
  sizetype _30;
  uint8 * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  short unsigned int _45;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_47(D)];
  Val_48 = (uint32) _1;
  # DEBUG Val => Val_48
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_49(D)->ComSignalPositionInBit;
  row_50 = _2 >> 3;
  # DEBUG row => row_50
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_51 = _4 & 7;
  # DEBUG col => col_51
  # DEBUG BEGIN_STMT
  pos_52 = (sint16) row_50;
  # DEBUG pos => pos_52
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_49(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_53 = 65535 >> _7;
  # DEBUG mask => mask_53
  # DEBUG BEGIN_STMT
  _8 = (int) col_51;
  mask_54 = mask_53 << _8;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  Val_55 = Val_48 << _8;
  # DEBUG Val => Val_55
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_49(D)->ComUpdateBitPositionInBit;
  _11 = _10 >> 3;
  _12 = (sizetype) _11;
  _13 = dataPtr_57(D) + _12;
  _14 = *_13;
  _45 = _10 & 7;
  _16 = (unsigned int) _45;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _21 = _14 | _18;
  *_13 = _21;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = (sizetype) row_50;
  _23 = dataPtr_57(D) + _22;
  _24 = *_23;
  _25 = (unsigned char) mask_54;
  _26 = (unsigned char) Val_55;
  _9 = _24 ^ _26;
  _15 = _9 & _25;
  _27 = _15 ^ _24;
  if (_24 != _27)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_38 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_23 = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_63 = Val_41 >> 8;
  # DEBUG Val => Val_63
  # DEBUG BEGIN_STMT
  mask_64 = mask_42 >> 8;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  pos.45_28 = (unsigned short) pos_43;
  _29 = pos.45_28 + 65535;
  pos_65 = (sint16) _29;
  # DEBUG pos => pos_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _30 = (sizetype) pos_65;
  _31 = dataPtr_57(D) + _30;
  _32 = *_31;
  _33 = (unsigned char) mask_64;
  _34 = (unsigned char) Val_63;
  _19 = _32 ^ _34;
  _20 = _19 & _33;
  _35 = _20 ^ _32;
  if (_32 != _35)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_39 = PHI <valueChanged_40(5), 1(6)>
  # DEBUG valueChanged => valueChanged_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_31 = _35;

  <bb 8> [local count: 1073741824]:
  # valueChanged_40 = PHI <valueChanged_38(4), valueChanged_39(7)>
  # Val_41 = PHI <Val_55(4), Val_63(7)>
  # mask_42 = PHI <mask_54(4), mask_64(7)>
  # pos_43 = PHI <pos_52(4), pos_65(7)>
  # DEBUG pos => pos_43
  # DEBUG mask => mask_42
  # DEBUG Val => Val_41
  # DEBUG valueChanged => valueChanged_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_42 > 255)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_3 = PHI <valueChanged_40(8)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _36 = IntDataPtr_61(D)->trigger;
  _37 = valueChanged_3 | _36;
  IntDataPtr_61(D)->trigger = _37;
  return;

}



;; Function Com_EB_Write_08_SX_EL_EUB_EOC_E2 (Com_EB_Write_08_SX_EL_EUB_EOC_E2, funcdef_no=132, decl_uid=7654, cgraph_uid=133, symbol_order=137)

Com_EB_Write_08_SX_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  short unsigned int _15;
  short unsigned int _16;
  sizetype _17;
  uint8 * _18;
  unsigned char _19;
  unsigned char _20;
  unsigned int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned short _31;
  sizetype _32;
  uint8 * _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  int _44;
  short unsigned int _47;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_46(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_48(D)->ComSignalPositionInBit;
  row_49 = _2 >> 3;
  # DEBUG row => row_49
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_50 = _4 & 7;
  # DEBUG col => col_50
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_49
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_48(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _44 = _8 & 65535;
  _10 = (int) col_50;
  _11 = _44 << _10;
  mask_51 = (uint16) _11;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_52 = (uint16) _14;
  # DEBUG Val => Val_52
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _15 = Com_EB_WritePropPtr_48(D)->ComUpdateBitPositionInBit;
  _16 = _15 >> 3;
  _17 = (sizetype) _16;
  _18 = dataPtr_54(D) + _17;
  _19 = *_18;
  _47 = _15 & 7;
  _21 = (unsigned int) _47;
  _22 = 1 << _21;
  _23 = (unsigned char) _22;
  _24 = _19 | _23;
  *_18 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) row_49;
  _26 = dataPtr_54(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) _11;
  _29 = (unsigned char) _14;
  _3 = _27 ^ _29;
  _9 = _3 & _28;
  _30 = _9 ^ _27;
  if (_27 != _30)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 1073741824]:
  # valueChanged_40 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_26 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_51 > 255)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_57 = Val_52 >> 8;
  # DEBUG Val => Val_57
  # DEBUG BEGIN_STMT
  mask_58 = mask_51 >> 8;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  _31 = row_49 + 65535;
  pos_59 = (sint16) _31;
  # DEBUG pos => pos_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _32 = (sizetype) pos_59;
  _33 = dataPtr_54(D) + _32;
  _34 = *_33;
  _35 = (unsigned char) mask_58;
  _36 = (unsigned char) Val_57;
  _13 = _34 ^ _36;
  _20 = _13 & _35;
  _37 = _20 ^ _34;
  if (_34 != _37)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 536870913]:
  # valueChanged_41 = PHI <valueChanged_40(5), 1(6)>
  # DEBUG valueChanged => valueChanged_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_33 = _37;

  <bb 8> [local count: 1073741824]:
  # valueChanged_42 = PHI <valueChanged_40(4), valueChanged_41(7)>
  # DEBUG valueChanged => valueChanged_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _38 = IntDataPtr_62(D)->trigger;
  _39 = _38 | valueChanged_42;
  IntDataPtr_62(D)->trigger = _39;
  return;

}



;; Function Com_EB_Write_AY_S1_EL_EUB_EOC_E3 (Com_EB_Write_AY_S1_EL_EUB_EOC_E3, funcdef_no=131, decl_uid=7649, cgraph_uid=132, symbol_order=136)

Com_EB_Write_AY_S1_EL_EUB_EOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint32 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  unsigned int _9;
  unsigned int _10;
  unsigned char _11;
  sizetype _12;
  unsigned char _13;
  uint8 * _14;
  unsigned char _15;
  const uint8 * _16;
  unsigned char _17;
  short unsigned int _18;
  long unsigned int _19;
  unsigned char _20;
  unsigned char _21;
  short unsigned int _26;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_27(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_29(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  # DEBUG DataPtr_Start => dataPtr_30(D) + _2
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_29(D)->ComUpdateBitPositionInBit;
  _4 = _3 >> 3;
  _5 = (sizetype) _4;
  _6 = dataPtr_30(D) + _5;
  _7 = *_6;
  _26 = _3 & 7;
  _9 = (unsigned int) _26;
  _10 = 1 << _9;
  _11 = (unsigned char) _10;
  _13 = _7 | _11;
  *_6 = _13;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = _2 + ii_24;
  _14 = dataPtr_30(D) + _12;
  _15 = *_14;
  _16 = SignalDataPtr_27(D) + ii_24;
  _17 = *_16;
  if (_15 != _17)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 955630223]:
  # valueChanged_22 = PHI <valueChanged_23(3), 1(4)>
  # DEBUG valueChanged => valueChanged_22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_14 = _17;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_37 = ii_24 + 1;
  # DEBUG ii => ii_37

  <bb 6> [local count: 1073741824]:
  # valueChanged_23 = PHI <0(2), valueChanged_22(5)>
  # ii_24 = PHI <0(2), ii_37(5)>
  # DEBUG ii => ii_24
  # DEBUG valueChanged => valueChanged_23
  # DEBUG BEGIN_STMT
  _18 = IntDataPtr_33(D)->arraySize;
  _19 = (long unsigned int) _18;
  if (_19 > ii_24)
    goto <bb 3>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # valueChanged_8 = PHI <valueChanged_23(6)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _20 = IntDataPtr_33(D)->trigger;
  _21 = valueChanged_8 | _20;
  IntDataPtr_33(D)->trigger = _21;
  return;

}



;; Function Com_EB_Write_AY_S0_EL_EUB_EOC_E1 (Com_EB_Write_AY_S0_EL_EUB_EOC_E1, funcdef_no=130, decl_uid=7644, cgraph_uid=131, symbol_order=135)

Com_EB_Write_AY_S0_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  unsigned int _7;
  unsigned int _8;
  unsigned char _9;
  unsigned char _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  sizetype _15;
  const uint8 * _16;
  unsigned char _17;
  short unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  short unsigned int _25;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_26(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_29(D)->ComUpdateBitPositionInBit;
  _2 = _1 >> 3;
  _3 = (sizetype) _2;
  _4 = dataPtr_30(D) + _3;
  _5 = *_4;
  _25 = _1 & 7;
  _7 = (unsigned int) _25;
  _8 = 1 << _7;
  _9 = (unsigned char) _8;
  _10 = _5 | _9;
  *_4 = _10;

  <bb 3> [local count: 1073741824]:
  # valueChanged_21 = PHI <0(2), valueChanged_22(7)>
  # ii_23 = PHI <0(2), ii_34(7)>
  # DEBUG ii => ii_23
  # DEBUG valueChanged => valueChanged_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_29(D)->ComSignalPositionInBit;
  pos_32 = _11 + ii_23;
  # DEBUG pos => pos_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = (sizetype) pos_32;
  _13 = dataPtr_30(D) + _12;
  _14 = *_13;
  _15 = (sizetype) ii_23;
  _16 = SignalDataPtr_26(D) + _15;
  _17 = *_16;
  if (_14 != _17)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 1073741824]:
  # valueChanged_22 = PHI <valueChanged_21(3), 1(4)>
  # DEBUG valueChanged => valueChanged_22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_13 = _17;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_34 = ii_23 + 1;
  # DEBUG ii => ii_34
  # DEBUG BEGIN_STMT
  _18 = Com_EB_WritePropPtr_29(D)->ComSignalBase.ComBitSize;
  if (_18 > ii_34)
    goto <bb 7>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 7> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 118111601]:
  # valueChanged_6 = PHI <valueChanged_22(5)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _19 = IntDataPtr_36(D)->trigger;
  _20 = valueChanged_6 | _19;
  IntDataPtr_36(D)->trigger = _20;
  return;

}



;; Function Com_EB_Write_32_SX_EL_EUB_EOC_E1 (Com_EB_Write_32_SX_EL_EUB_EOC_E1, funcdef_no=128, decl_uid=7634, cgraph_uid=129, symbol_order=133)

Com_EB_Write_32_SX_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  short unsigned int _29;
  unsigned char _30;
  unsigned char _31;
  unsigned short _32;
  int _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char ssize.49_38;
  unsigned char _39;
  unsigned short pos.50_40;
  unsigned short _41;
  unsigned char _42;
  int _43;
  unsigned int _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  long unsigned int _63;
  short unsigned int _67;
  unsigned char _68;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  Val_66 = MEM[(const uint32 *)SignalDataPtr_65(D)];
  # DEBUG Val => Val_66
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_66
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_69(D)->ComSignalPositionInBit;
  row_70 = _1 >> 3;
  # DEBUG row => row_70
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_71 = _3 & 7;
  # DEBUG col => col_71
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_72 = 8 - col_71;
  # DEBUG space => space_72
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_69(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_73 = 4294967295 >> _6;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  _7 = (int) col_71;
  mask_74 = mask_73 << _7;
  # DEBUG mask => mask_74
  # DEBUG BEGIN_STMT
  _63 = Val_66 & 255;
  _8 = (int) _63;
  _10 = _8 << _7;
  putvalue_75 = (uint8) _10;
  # DEBUG putvalue => putvalue_75
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_69(D)->ComUpdateBitPositionInBit;
  _12 = _11 >> 3;
  _13 = (sizetype) _12;
  _14 = dataPtr_77(D) + _13;
  _15 = *_14;
  _67 = _11 & 7;
  _17 = (unsigned int) _67;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _23 = _15 | _19;
  *_14 = _23;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _24 = (sizetype) row_70;
  _25 = dataPtr_77(D) + _24;
  _26 = *_25;
  _27 = (unsigned char) mask_74;
  _21 = _26 ^ putvalue_75;
  _22 = _21 & _27;
  _28 = _22 ^ _26;
  if (_26 != _28)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_53 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_53
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_25 = _28;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = Com_EB_WritePropPtr_69(D)->ComSignalBase.ComBitSize;
  _30 = (unsigned char) _29;
  _68 = col_71 + 248;
  tmp_val_80 = _30 + _68;
  # DEBUG tmp_val => tmp_val_80
  # DEBUG BEGIN_STMT
  ssize_81 = (sint8) tmp_val_80;
  # DEBUG ssize => ssize_81
  # DEBUG BEGIN_STMT
  _32 = row_70 + 1;
  pos_82 = (sint16) _32;
  # DEBUG pos => pos_82
  # DEBUG BEGIN_STMT
  _33 = (int) space_72;
  Val_83 = Val_66 >> _33;
  # DEBUG Val => Val_83
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = (sizetype) pos_60;
  _35 = dataPtr_77(D) + _34;
  _36 = *_35;
  _37 = (unsigned char) Val_58;
  if (_36 != _37)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_54 = PHI <valueChanged_55(5), 1(6)>
  # DEBUG valueChanged => valueChanged_54
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_35 = _37;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_91 = Val_58 >> 8;
  # DEBUG Val => Val_91
  # DEBUG BEGIN_STMT
  ssize.49_38 = (unsigned char) ssize_59;
  _39 = ssize.49_38 + 248;
  ssize_92 = (sint8) _39;
  # DEBUG ssize => ssize_92
  # DEBUG BEGIN_STMT
  pos.50_40 = (unsigned short) pos_60;
  _41 = pos.50_40 + 1;
  pos_93 = (sint16) _41;
  # DEBUG pos => pos_93

  <bb 8> [local count: 1073741824]:
  # valueChanged_55 = PHI <valueChanged_53(4), valueChanged_54(7)>
  # Val_58 = PHI <Val_83(4), Val_91(7)>
  # ssize_59 = PHI <ssize_81(4), ssize_92(7)>
  # pos_60 = PHI <pos_82(4), pos_93(7)>
  # DEBUG pos => pos_60
  # DEBUG ssize => ssize_59
  # DEBUG Val => Val_58
  # DEBUG valueChanged => valueChanged_55
  # DEBUG BEGIN_STMT
  if (ssize_59 > 7)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_2 = PHI <valueChanged_55(8)>
  # Val_9 = PHI <Val_58(8)>
  # ssize_16 = PHI <ssize_59(8)>
  # pos_20 = PHI <pos_60(8)>
  # DEBUG BEGIN_STMT
  if (ssize_16 > 0)
    goto <bb 10>; [59.00%]
  else
    goto <bb 13>; [41.00%]

  <bb 10> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_84 = (uint8) ssize_16;
  # DEBUG ssize_hlp => ssize_hlp_84
  # DEBUG BEGIN_STMT
  _42 = 8 - ssize_hlp_84;
  _43 = (int) _42;
  _44 = 255 >> _43;
  mask_u8_85 = (uint8) _44;
  # DEBUG mask_u8 => mask_u8_85
  # DEBUG BEGIN_STMT
  # DEBUG mask => _44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _45 = (sizetype) pos_20;
  _46 = dataPtr_77(D) + _45;
  _47 = *_46;
  _49 = (unsigned char) Val_9;
  _31 = _47 ^ _49;
  _48 = _31 & mask_u8_85;
  _50 = _47 ^ _48;
  if (_47 != _50)
    goto <bb 11>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 11> [local count: 45992657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 12> [local count: 69685844]:
  # valueChanged_56 = PHI <valueChanged_2(10), 1(11)>
  # DEBUG valueChanged => valueChanged_56
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_46 = _50;

  <bb 13> [local count: 118111601]:
  # valueChanged_57 = PHI <valueChanged_2(9), valueChanged_56(12)>
  # DEBUG valueChanged => valueChanged_57
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _51 = IntDataPtr_88(D)->trigger;
  _52 = _51 | valueChanged_57;
  IntDataPtr_88(D)->trigger = _52;
  return;

}



;; Function Com_EB_Write_16_SX_EL_EUB_EOC_E1 (Com_EB_Write_16_SX_EL_EUB_EOC_E1, funcdef_no=127, decl_uid=7629, cgraph_uid=128, symbol_order=132)

Com_EB_Write_16_SX_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned short pos.51_28;
  unsigned short _29;
  sizetype _30;
  uint8 * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  short unsigned int _45;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_47(D)];
  Val_48 = (uint32) _1;
  # DEBUG Val => Val_48
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_49(D)->ComSignalPositionInBit;
  row_50 = _2 >> 3;
  # DEBUG row => row_50
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_51 = _4 & 7;
  # DEBUG col => col_51
  # DEBUG BEGIN_STMT
  pos_52 = (sint16) row_50;
  # DEBUG pos => pos_52
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_49(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_53 = 65535 >> _7;
  # DEBUG mask => mask_53
  # DEBUG BEGIN_STMT
  _8 = (int) col_51;
  mask_54 = mask_53 << _8;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  Val_55 = Val_48 << _8;
  # DEBUG Val => Val_55
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_49(D)->ComUpdateBitPositionInBit;
  _11 = _10 >> 3;
  _12 = (sizetype) _11;
  _13 = dataPtr_57(D) + _12;
  _14 = *_13;
  _45 = _10 & 7;
  _16 = (unsigned int) _45;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _21 = _14 | _18;
  *_13 = _21;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = (sizetype) row_50;
  _23 = dataPtr_57(D) + _22;
  _24 = *_23;
  _25 = (unsigned char) mask_54;
  _26 = (unsigned char) Val_55;
  _9 = _24 ^ _26;
  _15 = _9 & _25;
  _27 = _15 ^ _24;
  if (_24 != _27)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_38 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_23 = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_63 = Val_41 >> 8;
  # DEBUG Val => Val_63
  # DEBUG BEGIN_STMT
  mask_64 = mask_42 >> 8;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  pos.51_28 = (unsigned short) pos_43;
  _29 = pos.51_28 + 1;
  pos_65 = (sint16) _29;
  # DEBUG pos => pos_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _30 = (sizetype) pos_65;
  _31 = dataPtr_57(D) + _30;
  _32 = *_31;
  _33 = (unsigned char) mask_64;
  _34 = (unsigned char) Val_63;
  _19 = _32 ^ _34;
  _20 = _19 & _33;
  _35 = _20 ^ _32;
  if (_32 != _35)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_39 = PHI <valueChanged_40(5), 1(6)>
  # DEBUG valueChanged => valueChanged_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_31 = _35;

  <bb 8> [local count: 1073741824]:
  # valueChanged_40 = PHI <valueChanged_38(4), valueChanged_39(7)>
  # Val_41 = PHI <Val_55(4), Val_63(7)>
  # mask_42 = PHI <mask_54(4), mask_64(7)>
  # pos_43 = PHI <pos_52(4), pos_65(7)>
  # DEBUG pos => pos_43
  # DEBUG mask => mask_42
  # DEBUG Val => Val_41
  # DEBUG valueChanged => valueChanged_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_42 > 255)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_3 = PHI <valueChanged_40(8)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _36 = IntDataPtr_61(D)->trigger;
  _37 = valueChanged_3 | _36;
  IntDataPtr_61(D)->trigger = _37;
  return;

}



;; Function Com_EB_Write_08_SX_EL_EUB_EOC_E1 (Com_EB_Write_08_SX_EL_EUB_EOC_E1, funcdef_no=126, decl_uid=7624, cgraph_uid=127, symbol_order=131)

Com_EB_Write_08_SX_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  short unsigned int _15;
  short unsigned int _16;
  sizetype _17;
  uint8 * _18;
  unsigned char _19;
  unsigned char _20;
  unsigned int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned short _31;
  sizetype _32;
  uint8 * _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  int _44;
  short unsigned int _47;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_46(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_48(D)->ComSignalPositionInBit;
  row_49 = _2 >> 3;
  # DEBUG row => row_49
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_50 = _4 & 7;
  # DEBUG col => col_50
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_49
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_48(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _44 = _8 & 65535;
  _10 = (int) col_50;
  _11 = _44 << _10;
  mask_51 = (uint16) _11;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_52 = (uint16) _14;
  # DEBUG Val => Val_52
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _15 = Com_EB_WritePropPtr_48(D)->ComUpdateBitPositionInBit;
  _16 = _15 >> 3;
  _17 = (sizetype) _16;
  _18 = dataPtr_54(D) + _17;
  _19 = *_18;
  _47 = _15 & 7;
  _21 = (unsigned int) _47;
  _22 = 1 << _21;
  _23 = (unsigned char) _22;
  _24 = _19 | _23;
  *_18 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) row_49;
  _26 = dataPtr_54(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) _11;
  _29 = (unsigned char) _14;
  _3 = _27 ^ _29;
  _9 = _3 & _28;
  _30 = _9 ^ _27;
  if (_27 != _30)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 1073741824]:
  # valueChanged_40 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_40
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_26 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_51 > 255)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_57 = Val_52 >> 8;
  # DEBUG Val => Val_57
  # DEBUG BEGIN_STMT
  mask_58 = mask_51 >> 8;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  _31 = row_49 + 1;
  # DEBUG pos => (sint16) _31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _32 = (sizetype) _31;
  _33 = dataPtr_54(D) + _32;
  _34 = *_33;
  _35 = (unsigned char) mask_58;
  _36 = (unsigned char) Val_57;
  _13 = _34 ^ _36;
  _20 = _13 & _35;
  _37 = _20 ^ _34;
  if (_34 != _37)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 536870913]:
  # valueChanged_41 = PHI <valueChanged_40(5), 1(6)>
  # DEBUG valueChanged => valueChanged_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_33 = _37;

  <bb 8> [local count: 1073741824]:
  # valueChanged_42 = PHI <valueChanged_40(4), valueChanged_41(7)>
  # DEBUG valueChanged => valueChanged_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _38 = IntDataPtr_61(D)->trigger;
  _39 = _38 | valueChanged_42;
  IntDataPtr_61(D)->trigger = _39;
  return;

}



;; Function Com_EB_Write_AY_S0_EL_EUB_DOC_E2 (Com_EB_Write_AY_S0_EL_EUB_DOC_E2, funcdef_no=125, decl_uid=7619, cgraph_uid=126, symbol_order=130)

Com_EB_Write_AY_S0_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  unsigned int _6;
  unsigned int _7;
  unsigned char _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  sizetype _14;
  const uint8 * _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  short unsigned int _19;
  short unsigned int _22;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_23(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_26(D)->ComUpdateBitPositionInBit;
  _2 = _1 >> 3;
  _3 = (sizetype) _2;
  _4 = dataPtr_27(D) + _3;
  _5 = *_4;
  _22 = _1 & 7;
  _6 = (unsigned int) _22;
  _7 = 1 << _6;
  _8 = (unsigned char) _7;
  _9 = _5 | _8;
  *_4 = _9;

  <bb 3> [local count: 1073741824]:
  # ii_20 = PHI <0(2), ii_31(5)>
  # DEBUG ii => ii_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_26(D)->ComSignalPositionInBit;
  _11 = Com_EB_WritePropPtr_26(D)->ComSignalBase.ComBitSize;
  _12 = _10 + _11;
  _13 = _12 - ii_20;
  pos_29 = _13 + 65535;
  # DEBUG pos => pos_29
  # DEBUG BEGIN_STMT
  _14 = (sizetype) ii_20;
  _15 = SignalDataPtr_23(D) + _14;
  _16 = (sizetype) pos_29;
  _17 = dataPtr_27(D) + _16;
  _18 = *_15;
  *_17 = _18;
  # DEBUG BEGIN_STMT
  ii_31 = ii_20 + 1;
  # DEBUG ii => ii_31
  # DEBUG BEGIN_STMT
  _19 = Com_EB_WritePropPtr_26(D)->ComSignalBase.ComBitSize;
  if (_19 > ii_31)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_32_SX_EL_EUB_DOC_E2 (Com_EB_Write_32_SX_EL_EUB_DOC_E2, funcdef_no=123, decl_uid=7609, cgraph_uid=124, symbol_order=128)

Com_EB_Write_32_SX_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  short unsigned int _28;
  unsigned char _29;
  unsigned char _30;
  unsigned short _31;
  int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char ssize.55_36;
  unsigned char _37;
  unsigned short pos.56_38;
  unsigned short _39;
  unsigned char _40;
  int _41;
  unsigned int _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  long unsigned int _57;
  short unsigned int _58;
  unsigned char _82;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_56
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  row_60 = _1 >> 3;
  # DEBUG row => row_60
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_61 = _3 & 7;
  # DEBUG col => col_61
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_62 = 8 - col_61;
  # DEBUG space => space_62
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_63 = 4294967295 >> _6;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _7 = (int) col_61;
  mask_64 = mask_63 << _7;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  _57 = Val_56 & 255;
  _8 = (int) _57;
  _10 = _8 << _7;
  putvalue_65 = (uint8) _10;
  # DEBUG putvalue => putvalue_65
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _12 = _11 >> 3;
  _13 = (sizetype) _12;
  _14 = dataPtr_67(D) + _13;
  _15 = *_14;
  _58 = _11 & 7;
  _17 = (unsigned int) _58;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _22 = _15 | _19;
  *_14 = _22;
  # DEBUG BEGIN_STMT
  _23 = (sizetype) row_60;
  _24 = dataPtr_67(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_64;
  _20 = _25 ^ putvalue_65;
  _21 = _20 & _26;
  _27 = _21 ^ _25;
  *_24 = _27;
  # DEBUG BEGIN_STMT
  _28 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _29 = (unsigned char) _28;
  _30 = col_61 + 248;
  tmp_val_70 = _29 + _30;
  # DEBUG tmp_val => tmp_val_70
  # DEBUG BEGIN_STMT
  ssize_71 = (sint8) tmp_val_70;
  # DEBUG ssize => ssize_71
  # DEBUG BEGIN_STMT
  _31 = row_60 + 65535;
  pos_72 = (sint16) _31;
  # DEBUG pos => pos_72
  # DEBUG BEGIN_STMT
  _32 = (int) space_62;
  Val_73 = Val_56 >> _32;
  # DEBUG Val => Val_73
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_51;
  _34 = dataPtr_67(D) + _33;
  _35 = (unsigned char) Val_49;
  *_34 = _35;
  # DEBUG BEGIN_STMT
  Val_79 = Val_49 >> 8;
  # DEBUG Val => Val_79
  # DEBUG BEGIN_STMT
  ssize.55_36 = (unsigned char) ssize_50;
  _37 = ssize.55_36 + 248;
  ssize_80 = (sint8) _37;
  # DEBUG ssize => ssize_80
  # DEBUG BEGIN_STMT
  pos.56_38 = (unsigned short) pos_51;
  _39 = pos.56_38 + 65535;
  pos_81 = (sint16) _39;
  # DEBUG pos => pos_81

  <bb 4> [local count: 1073741824]:
  # Val_49 = PHI <Val_73(2), Val_79(3)>
  # ssize_50 = PHI <ssize_71(2), ssize_80(3)>
  # pos_51 = PHI <pos_72(2), pos_81(3)>
  # DEBUG pos => pos_51
  # DEBUG ssize => ssize_50
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  if (ssize_50 > 7)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Val_2 = PHI <Val_49(4)>
  # ssize_9 = PHI <ssize_50(4)>
  # pos_16 = PHI <pos_51(4)>
  # DEBUG BEGIN_STMT
  if (ssize_9 > 0)
    goto <bb 6>; [59.00%]
  else
    goto <bb 7>; [41.00%]

  <bb 6> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_74 = (uint8) ssize_9;
  # DEBUG ssize_hlp => ssize_hlp_74
  # DEBUG BEGIN_STMT
  _40 = 8 - ssize_hlp_74;
  _41 = (int) _40;
  _42 = 255 >> _41;
  mask_u8_75 = (uint8) _42;
  # DEBUG mask_u8 => mask_u8_75
  # DEBUG BEGIN_STMT
  # DEBUG mask => _42
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_16;
  _44 = dataPtr_67(D) + _43;
  _45 = *_44;
  _46 = (unsigned char) Val_2;
  _47 = _45 ^ _46;
  _82 = _47 & mask_u8_75;
  _48 = _45 ^ _82;
  *_44 = _48;

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_16_SX_EL_EUB_DOC_E2 (Com_EB_Write_16_SX_EL_EUB_DOC_E2, funcdef_no=122, decl_uid=7604, cgraph_uid=123, symbol_order=127)

Com_EB_Write_16_SX_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  sizetype _21;
  uint8 * _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned short pos.57_27;
  unsigned short _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  short unsigned int _42;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_40(D)];
  Val_41 = (uint32) _1;
  # DEBUG Val => Val_41
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _2 >> 3;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_45 = _4 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  pos_46 = (sint16) row_44;
  # DEBUG pos => pos_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_43(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_47 = 65535 >> _7;
  # DEBUG mask => mask_47
  # DEBUG BEGIN_STMT
  _8 = (int) col_45;
  mask_48 = mask_47 << _8;
  # DEBUG mask => mask_48
  # DEBUG BEGIN_STMT
  Val_49 = Val_41 << _8;
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_43(D)->ComUpdateBitPositionInBit;
  _11 = _10 >> 3;
  _12 = (sizetype) _11;
  _13 = dataPtr_51(D) + _12;
  _14 = *_13;
  _42 = _10 & 7;
  _16 = (unsigned int) _42;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _20 = _14 | _18;
  *_13 = _20;
  # DEBUG BEGIN_STMT
  _21 = (sizetype) row_44;
  _22 = dataPtr_51(D) + _21;
  _23 = *_22;
  _24 = (unsigned char) mask_48;
  _25 = (unsigned char) Val_49;
  _3 = _23 ^ _25;
  _9 = _3 & _24;
  _26 = _9 ^ _23;
  *_22 = _26;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_55 = Val_35 >> 8;
  # DEBUG Val => Val_55
  # DEBUG BEGIN_STMT
  mask_56 = mask_36 >> 8;
  # DEBUG mask => mask_56
  # DEBUG BEGIN_STMT
  pos.57_27 = (unsigned short) pos_37;
  _28 = pos.57_27 + 65535;
  pos_57 = (sint16) _28;
  # DEBUG pos => pos_57
  # DEBUG BEGIN_STMT
  _29 = (sizetype) pos_57;
  _30 = dataPtr_51(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_56;
  _33 = (unsigned char) Val_55;
  _15 = _31 ^ _33;
  _19 = _15 & _32;
  _34 = _19 ^ _31;
  *_30 = _34;

  <bb 4> [local count: 1073741824]:
  # Val_35 = PHI <Val_49(2), Val_55(3)>
  # mask_36 = PHI <mask_48(2), mask_56(3)>
  # pos_37 = PHI <pos_46(2), pos_57(3)>
  # DEBUG pos => pos_37
  # DEBUG mask => mask_36
  # DEBUG Val => Val_35
  # DEBUG BEGIN_STMT
  if (mask_36 > 255)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_08_SX_EL_EUB_DOC_E2 (Com_EB_Write_08_SX_EL_EUB_DOC_E2, funcdef_no=121, decl_uid=7599, cgraph_uid=122, symbol_order=126)

Com_EB_Write_08_SX_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  unsigned char _10;
  int _11;
  int _12;
  int _13;
  unsigned char _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  unsigned char _21;
  unsigned int _22;
  unsigned int _23;
  unsigned char _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned short _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  int _42;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_41(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _2 >> 3;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_45 = _4 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = Com_EB_WritePropPtr_43(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = 255 >> _8;
  # DEBUG mask => (uint16) _9
  # DEBUG BEGIN_STMT
  _42 = _9 & 65535;
  _11 = (int) col_45;
  _12 = _42 << _11;
  mask_46 = (uint16) _12;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _13 = (int) _1;
  _15 = _13 << _11;
  Val_47 = (uint16) _15;
  # DEBUG Val => Val_47
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_43(D)->ComUpdateBitPositionInBit;
  _17 = _16 >> 3;
  _18 = (sizetype) _17;
  _19 = dataPtr_49(D) + _18;
  _20 = *_19;
  _5 = _16 & 7;
  _22 = (unsigned int) _5;
  _23 = 1 << _22;
  _24 = (unsigned char) _23;
  _25 = _20 | _24;
  *_19 = _25;
  # DEBUG BEGIN_STMT
  _26 = (sizetype) row_44;
  _27 = dataPtr_49(D) + _26;
  _28 = *_27;
  _29 = (unsigned char) _12;
  _30 = (unsigned char) _15;
  _3 = _28 ^ _30;
  _10 = _3 & _29;
  _31 = _10 ^ _28;
  *_27 = _31;
  # DEBUG BEGIN_STMT
  if (mask_46 > 255)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_52 = Val_47 >> 8;
  # DEBUG Val => Val_52
  # DEBUG BEGIN_STMT
  mask_53 = mask_46 >> 8;
  # DEBUG mask => mask_53
  # DEBUG BEGIN_STMT
  _32 = row_44 + 65535;
  pos_54 = (sint16) _32;
  # DEBUG pos => pos_54
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_54;
  _34 = dataPtr_49(D) + _33;
  _35 = *_34;
  _36 = (unsigned char) mask_53;
  _37 = (unsigned char) Val_52;
  _14 = _35 ^ _37;
  _21 = _14 & _36;
  _38 = _21 ^ _35;
  *_34 = _38;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S1_EL_EUB_DOC_E3 (Com_EB_Write_AY_S1_EL_EUB_DOC_E3, funcdef_no=120, decl_uid=7594, cgraph_uid=121, symbol_order=125)

Com_EB_Write_AY_S1_EL_EUB_DOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint32 ii;
  short unsigned int _1;
  sizetype _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  unsigned char _11;
  const uint8 * _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  long unsigned int _16;
  short unsigned int _19;
  sizetype _21;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_20(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_23(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  # DEBUG DataPtr_Start => dataPtr_24(D) + _2
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_23(D)->ComUpdateBitPositionInBit;
  _4 = _3 >> 3;
  _5 = (sizetype) _4;
  _6 = dataPtr_24(D) + _5;
  _7 = *_6;
  _19 = _3 & 7;
  _8 = (unsigned int) _19;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = _7 | _10;
  *_6 = _11;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _12 = SignalDataPtr_20(D) + ii_17;
  _21 = _2 + ii_17;
  _13 = dataPtr_24(D) + _21;
  _14 = *_12;
  *_13 = _14;
  # DEBUG BEGIN_STMT
  ii_30 = ii_17 + 1;
  # DEBUG ii => ii_30

  <bb 4> [local count: 1073741824]:
  # ii_17 = PHI <0(2), ii_30(3)>
  # DEBUG ii => ii_17
  # DEBUG BEGIN_STMT
  _15 = IntDataPtr_27(D)->arraySize;
  _16 = (long unsigned int) _15;
  if (_16 > ii_17)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S0_EL_EUB_DOC_E1 (Com_EB_Write_AY_S0_EL_EUB_DOC_E1, funcdef_no=119, decl_uid=7589, cgraph_uid=120, symbol_order=124)

Com_EB_Write_AY_S0_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  unsigned int _6;
  unsigned int _7;
  unsigned char _8;
  unsigned char _9;
  short unsigned int _10;
  sizetype _11;
  const uint8 * _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  short unsigned int _19;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_20(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_23(D)->ComUpdateBitPositionInBit;
  _2 = _1 >> 3;
  _3 = (sizetype) _2;
  _4 = dataPtr_24(D) + _3;
  _5 = *_4;
  _19 = _1 & 7;
  _6 = (unsigned int) _19;
  _7 = 1 << _6;
  _8 = (unsigned char) _7;
  _9 = _5 | _8;
  *_4 = _9;

  <bb 3> [local count: 1073741824]:
  # ii_17 = PHI <0(2), ii_28(5)>
  # DEBUG ii => ii_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_23(D)->ComSignalPositionInBit;
  pos_26 = _10 + ii_17;
  # DEBUG pos => pos_26
  # DEBUG BEGIN_STMT
  _11 = (sizetype) ii_17;
  _12 = SignalDataPtr_20(D) + _11;
  _13 = (sizetype) pos_26;
  _14 = dataPtr_24(D) + _13;
  _15 = *_12;
  *_14 = _15;
  # DEBUG BEGIN_STMT
  ii_28 = ii_17 + 1;
  # DEBUG ii => ii_28
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_23(D)->ComSignalBase.ComBitSize;
  if (_16 > ii_28)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_32_SX_EL_EUB_DOC_E1 (Com_EB_Write_32_SX_EL_EUB_DOC_E1, funcdef_no=117, decl_uid=7579, cgraph_uid=118, symbol_order=122)

Com_EB_Write_32_SX_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  short unsigned int _28;
  unsigned char _29;
  unsigned char _30;
  unsigned short _31;
  int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char ssize.61_36;
  unsigned char _37;
  unsigned short pos.62_38;
  unsigned short _39;
  unsigned char _40;
  int _41;
  unsigned int _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  long unsigned int _57;
  short unsigned int _58;
  unsigned char _82;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_56
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  row_60 = _1 >> 3;
  # DEBUG row => row_60
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_61 = _3 & 7;
  # DEBUG col => col_61
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_62 = 8 - col_61;
  # DEBUG space => space_62
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_63 = 4294967295 >> _6;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _7 = (int) col_61;
  mask_64 = mask_63 << _7;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  _57 = Val_56 & 255;
  _8 = (int) _57;
  _10 = _8 << _7;
  putvalue_65 = (uint8) _10;
  # DEBUG putvalue => putvalue_65
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _12 = _11 >> 3;
  _13 = (sizetype) _12;
  _14 = dataPtr_67(D) + _13;
  _15 = *_14;
  _58 = _11 & 7;
  _17 = (unsigned int) _58;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _22 = _15 | _19;
  *_14 = _22;
  # DEBUG BEGIN_STMT
  _23 = (sizetype) row_60;
  _24 = dataPtr_67(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_64;
  _20 = _25 ^ putvalue_65;
  _21 = _20 & _26;
  _27 = _21 ^ _25;
  *_24 = _27;
  # DEBUG BEGIN_STMT
  _28 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _29 = (unsigned char) _28;
  _30 = col_61 + 248;
  tmp_val_70 = _29 + _30;
  # DEBUG tmp_val => tmp_val_70
  # DEBUG BEGIN_STMT
  ssize_71 = (sint8) tmp_val_70;
  # DEBUG ssize => ssize_71
  # DEBUG BEGIN_STMT
  _31 = row_60 + 1;
  pos_72 = (sint16) _31;
  # DEBUG pos => pos_72
  # DEBUG BEGIN_STMT
  _32 = (int) space_62;
  Val_73 = Val_56 >> _32;
  # DEBUG Val => Val_73
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_51;
  _34 = dataPtr_67(D) + _33;
  _35 = (unsigned char) Val_49;
  *_34 = _35;
  # DEBUG BEGIN_STMT
  Val_79 = Val_49 >> 8;
  # DEBUG Val => Val_79
  # DEBUG BEGIN_STMT
  ssize.61_36 = (unsigned char) ssize_50;
  _37 = ssize.61_36 + 248;
  ssize_80 = (sint8) _37;
  # DEBUG ssize => ssize_80
  # DEBUG BEGIN_STMT
  pos.62_38 = (unsigned short) pos_51;
  _39 = pos.62_38 + 1;
  pos_81 = (sint16) _39;
  # DEBUG pos => pos_81

  <bb 4> [local count: 1073741824]:
  # Val_49 = PHI <Val_73(2), Val_79(3)>
  # ssize_50 = PHI <ssize_71(2), ssize_80(3)>
  # pos_51 = PHI <pos_72(2), pos_81(3)>
  # DEBUG pos => pos_51
  # DEBUG ssize => ssize_50
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  if (ssize_50 > 7)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Val_2 = PHI <Val_49(4)>
  # ssize_9 = PHI <ssize_50(4)>
  # pos_16 = PHI <pos_51(4)>
  # DEBUG BEGIN_STMT
  if (ssize_9 > 0)
    goto <bb 6>; [59.00%]
  else
    goto <bb 7>; [41.00%]

  <bb 6> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_74 = (uint8) ssize_9;
  # DEBUG ssize_hlp => ssize_hlp_74
  # DEBUG BEGIN_STMT
  _40 = 8 - ssize_hlp_74;
  _41 = (int) _40;
  _42 = 255 >> _41;
  mask_u8_75 = (uint8) _42;
  # DEBUG mask_u8 => mask_u8_75
  # DEBUG BEGIN_STMT
  # DEBUG mask => _42
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_16;
  _44 = dataPtr_67(D) + _43;
  _45 = *_44;
  _46 = (unsigned char) Val_2;
  _47 = _45 ^ _46;
  _82 = _47 & mask_u8_75;
  _48 = _45 ^ _82;
  *_44 = _48;

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_16_SX_EL_EUB_DOC_E1 (Com_EB_Write_16_SX_EL_EUB_DOC_E1, funcdef_no=116, decl_uid=7574, cgraph_uid=117, symbol_order=121)

Com_EB_Write_16_SX_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  sizetype _21;
  uint8 * _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned short pos.63_27;
  unsigned short _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  short unsigned int _42;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_40(D)];
  Val_41 = (uint32) _1;
  # DEBUG Val => Val_41
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _2 >> 3;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_45 = _4 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  pos_46 = (sint16) row_44;
  # DEBUG pos => pos_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_43(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_47 = 65535 >> _7;
  # DEBUG mask => mask_47
  # DEBUG BEGIN_STMT
  _8 = (int) col_45;
  mask_48 = mask_47 << _8;
  # DEBUG mask => mask_48
  # DEBUG BEGIN_STMT
  Val_49 = Val_41 << _8;
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_43(D)->ComUpdateBitPositionInBit;
  _11 = _10 >> 3;
  _12 = (sizetype) _11;
  _13 = dataPtr_51(D) + _12;
  _14 = *_13;
  _42 = _10 & 7;
  _16 = (unsigned int) _42;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _20 = _14 | _18;
  *_13 = _20;
  # DEBUG BEGIN_STMT
  _21 = (sizetype) row_44;
  _22 = dataPtr_51(D) + _21;
  _23 = *_22;
  _24 = (unsigned char) mask_48;
  _25 = (unsigned char) Val_49;
  _3 = _23 ^ _25;
  _9 = _3 & _24;
  _26 = _9 ^ _23;
  *_22 = _26;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_55 = Val_35 >> 8;
  # DEBUG Val => Val_55
  # DEBUG BEGIN_STMT
  mask_56 = mask_36 >> 8;
  # DEBUG mask => mask_56
  # DEBUG BEGIN_STMT
  pos.63_27 = (unsigned short) pos_37;
  _28 = pos.63_27 + 1;
  pos_57 = (sint16) _28;
  # DEBUG pos => pos_57
  # DEBUG BEGIN_STMT
  _29 = (sizetype) pos_57;
  _30 = dataPtr_51(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_56;
  _33 = (unsigned char) Val_55;
  _15 = _31 ^ _33;
  _19 = _15 & _32;
  _34 = _19 ^ _31;
  *_30 = _34;

  <bb 4> [local count: 1073741824]:
  # Val_35 = PHI <Val_49(2), Val_55(3)>
  # mask_36 = PHI <mask_48(2), mask_56(3)>
  # pos_37 = PHI <pos_46(2), pos_57(3)>
  # DEBUG pos => pos_37
  # DEBUG mask => mask_36
  # DEBUG Val => Val_35
  # DEBUG BEGIN_STMT
  if (mask_36 > 255)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_08_SX_EL_EUB_DOC_E1 (Com_EB_Write_08_SX_EL_EUB_DOC_E1, funcdef_no=115, decl_uid=7569, cgraph_uid=116, symbol_order=120)

Com_EB_Write_08_SX_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  unsigned char _10;
  int _11;
  int _12;
  int _13;
  unsigned char _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  unsigned char _21;
  unsigned int _22;
  unsigned int _23;
  unsigned char _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned short _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  int _42;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_41(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _2 >> 3;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_45 = _4 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = Com_EB_WritePropPtr_43(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = 255 >> _8;
  # DEBUG mask => (uint16) _9
  # DEBUG BEGIN_STMT
  _42 = _9 & 65535;
  _11 = (int) col_45;
  _12 = _42 << _11;
  mask_46 = (uint16) _12;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _13 = (int) _1;
  _15 = _13 << _11;
  Val_47 = (uint16) _15;
  # DEBUG Val => Val_47
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_43(D)->ComUpdateBitPositionInBit;
  _17 = _16 >> 3;
  _18 = (sizetype) _17;
  _19 = dataPtr_49(D) + _18;
  _20 = *_19;
  _5 = _16 & 7;
  _22 = (unsigned int) _5;
  _23 = 1 << _22;
  _24 = (unsigned char) _23;
  _25 = _20 | _24;
  *_19 = _25;
  # DEBUG BEGIN_STMT
  _26 = (sizetype) row_44;
  _27 = dataPtr_49(D) + _26;
  _28 = *_27;
  _29 = (unsigned char) _12;
  _30 = (unsigned char) _15;
  _3 = _28 ^ _30;
  _10 = _3 & _29;
  _31 = _10 ^ _28;
  *_27 = _31;
  # DEBUG BEGIN_STMT
  if (mask_46 > 255)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_52 = Val_47 >> 8;
  # DEBUG Val => Val_52
  # DEBUG BEGIN_STMT
  mask_53 = mask_46 >> 8;
  # DEBUG mask => mask_53
  # DEBUG BEGIN_STMT
  _32 = row_44 + 1;
  # DEBUG pos => (sint16) _32
  # DEBUG BEGIN_STMT
  _33 = (sizetype) _32;
  _34 = dataPtr_49(D) + _33;
  _35 = *_34;
  _36 = (unsigned char) mask_53;
  _37 = (unsigned char) Val_52;
  _14 = _35 ^ _37;
  _21 = _14 & _36;
  _38 = _21 ^ _35;
  *_34 = _38;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S0_EL_DUB_EOC_E2 (Com_EB_Write_AY_S0_EL_DUB_EOC_E2, funcdef_no=114, decl_uid=7564, cgraph_uid=115, symbol_order=119)

Com_EB_Write_AY_S0_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  sizetype _8;
  const uint8 * _9;
  unsigned char _10;
  short unsigned int _12;
  unsigned char _13;
  unsigned char _14;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_19(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> [local count: 1073741824]:
  # valueChanged_15 = PHI <0(2), valueChanged_16(7)>
  # ii_17 = PHI <0(2), ii_26(7)>
  # DEBUG ii => ii_17
  # DEBUG valueChanged => valueChanged_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_22(D)->ComSignalPositionInBit;
  _2 = Com_EB_WritePropPtr_22(D)->ComSignalBase.ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_17;
  pos_23 = _4 + 65535;
  # DEBUG pos => pos_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_23;
  _6 = dataPtr_24(D) + _5;
  _7 = *_6;
  _8 = (sizetype) ii_17;
  _9 = SignalDataPtr_19(D) + _8;
  _10 = *_9;
  if (_7 != _10)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 1073741824]:
  # valueChanged_16 = PHI <valueChanged_15(3), 1(4)>
  # DEBUG valueChanged => valueChanged_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_6 = _10;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_26 = ii_17 + 1;
  # DEBUG ii => ii_26
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_22(D)->ComSignalBase.ComBitSize;
  if (_12 > ii_26)
    goto <bb 7>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 7> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 118111601]:
  # valueChanged_11 = PHI <valueChanged_16(5)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _13 = IntDataPtr_28(D)->trigger;
  _14 = valueChanged_11 | _13;
  IntDataPtr_28(D)->trigger = _14;
  return;

}



;; Function Com_EB_Write_32_SX_EL_DUB_EOC_E2 (Com_EB_Write_32_SX_EL_DUB_EOC_E2, funcdef_no=112, decl_uid=7554, cgraph_uid=113, symbol_order=117)

Com_EB_Write_32_SX_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  short unsigned int _20;
  unsigned char _21;
  unsigned char _22;
  unsigned short _23;
  int _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.67_29;
  unsigned char _30;
  unsigned short pos.68_31;
  unsigned short _32;
  unsigned char _33;
  int _34;
  unsigned int _35;
  sizetype _36;
  uint8 * _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  long unsigned int _53;
  unsigned char _57;
  unsigned char _67;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_56
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_58(D)->ComSignalPositionInBit;
  row_59 = _1 >> 3;
  # DEBUG row => row_59
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_60 = _3 & 7;
  # DEBUG col => col_60
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_61 = 8 - col_60;
  # DEBUG space => space_61
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_58(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_62 = 4294967295 >> _6;
  # DEBUG mask => mask_62
  # DEBUG BEGIN_STMT
  _7 = (int) col_60;
  mask_63 = mask_62 << _7;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _53 = Val_56 & 255;
  _8 = (int) _53;
  _10 = _8 << _7;
  putvalue_64 = (uint8) _10;
  # DEBUG putvalue => putvalue_64
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_59;
  _12 = dataPtr_66(D) + _11;
  _13 = *_12;
  _17 = (unsigned char) mask_63;
  _16 = _13 ^ putvalue_64;
  _18 = _16 & _17;
  _19 = _13 ^ _18;
  if (_13 != _19)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_43 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_43
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_12 = _19;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = Com_EB_WritePropPtr_58(D)->ComSignalBase.ComBitSize;
  _21 = (unsigned char) _20;
  _57 = col_60 + 248;
  tmp_val_69 = _21 + _57;
  # DEBUG tmp_val => tmp_val_69
  # DEBUG BEGIN_STMT
  ssize_70 = (sint8) tmp_val_69;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  _23 = row_59 + 65535;
  pos_71 = (sint16) _23;
  # DEBUG pos => pos_71
  # DEBUG BEGIN_STMT
  _24 = (int) space_61;
  Val_72 = Val_56 >> _24;
  # DEBUG Val => Val_72
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_50;
  _26 = dataPtr_66(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) Val_48;
  if (_27 != _28)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_44 = PHI <valueChanged_45(5), 1(6)>
  # DEBUG valueChanged => valueChanged_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_26 = _28;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_80 = Val_48 >> 8;
  # DEBUG Val => Val_80
  # DEBUG BEGIN_STMT
  ssize.67_29 = (unsigned char) ssize_49;
  _30 = ssize.67_29 + 248;
  ssize_81 = (sint8) _30;
  # DEBUG ssize => ssize_81
  # DEBUG BEGIN_STMT
  pos.68_31 = (unsigned short) pos_50;
  _32 = pos.68_31 + 65535;
  pos_82 = (sint16) _32;
  # DEBUG pos => pos_82

  <bb 8> [local count: 1073741824]:
  # valueChanged_45 = PHI <valueChanged_43(4), valueChanged_44(7)>
  # Val_48 = PHI <Val_72(4), Val_80(7)>
  # ssize_49 = PHI <ssize_70(4), ssize_81(7)>
  # pos_50 = PHI <pos_71(4), pos_82(7)>
  # DEBUG pos => pos_50
  # DEBUG ssize => ssize_49
  # DEBUG Val => Val_48
  # DEBUG valueChanged => valueChanged_45
  # DEBUG BEGIN_STMT
  if (ssize_49 > 7)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_2 = PHI <valueChanged_45(8)>
  # Val_9 = PHI <Val_48(8)>
  # ssize_14 = PHI <ssize_49(8)>
  # pos_15 = PHI <pos_50(8)>
  # DEBUG BEGIN_STMT
  if (ssize_14 > 0)
    goto <bb 10>; [59.00%]
  else
    goto <bb 13>; [41.00%]

  <bb 10> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_73 = (uint8) ssize_14;
  # DEBUG ssize_hlp => ssize_hlp_73
  # DEBUG BEGIN_STMT
  _33 = 8 - ssize_hlp_73;
  _34 = (int) _33;
  _35 = 255 >> _34;
  mask_u8_74 = (uint8) _35;
  # DEBUG mask_u8 => mask_u8_74
  # DEBUG BEGIN_STMT
  # DEBUG mask => _35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = (sizetype) pos_15;
  _37 = dataPtr_66(D) + _36;
  _38 = *_37;
  _39 = (unsigned char) Val_9;
  _67 = _38 ^ _39;
  _22 = _67 & mask_u8_74;
  _40 = _22 ^ _38;
  if (_38 != _40)
    goto <bb 11>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 11> [local count: 45992657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 12> [local count: 69685844]:
  # valueChanged_46 = PHI <valueChanged_2(10), 1(11)>
  # DEBUG valueChanged => valueChanged_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_37 = _40;

  <bb 13> [local count: 118111601]:
  # valueChanged_47 = PHI <valueChanged_2(9), valueChanged_46(12)>
  # DEBUG valueChanged => valueChanged_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _41 = IntDataPtr_77(D)->trigger;
  _42 = _41 | valueChanged_47;
  IntDataPtr_77(D)->trigger = _42;
  return;

}



;; Function Com_EB_Write_16_SX_EL_DUB_EOC_E2 (Com_EB_Write_16_SX_EL_DUB_EOC_E2, funcdef_no=111, decl_uid=7549, cgraph_uid=112, symbol_order=116)

Com_EB_Write_16_SX_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned short pos.69_19;
  unsigned short _20;
  sizetype _21;
  uint8 * _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_37(D)];
  Val_38 = (uint32) _1;
  # DEBUG Val => Val_38
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _2 >> 3;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_41 = _4 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  pos_42 = (sint16) row_40;
  # DEBUG pos => pos_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_39(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_43 = 65535 >> _7;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _8 = (int) col_41;
  mask_44 = mask_43 << _8;
  # DEBUG mask => mask_44
  # DEBUG BEGIN_STMT
  Val_45 = Val_38 << _8;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (sizetype) row_40;
  _11 = dataPtr_47(D) + _10;
  _12 = *_11;
  _16 = (unsigned char) mask_44;
  _17 = (unsigned char) Val_45;
  _9 = _12 ^ _17;
  _13 = _9 & _16;
  _18 = _12 ^ _13;
  if (_12 != _18)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_29 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_11 = _18;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_52 = Val_32 >> 8;
  # DEBUG Val => Val_52
  # DEBUG BEGIN_STMT
  mask_53 = mask_33 >> 8;
  # DEBUG mask => mask_53
  # DEBUG BEGIN_STMT
  pos.69_19 = (unsigned short) pos_34;
  _20 = pos.69_19 + 65535;
  pos_54 = (sint16) _20;
  # DEBUG pos => pos_54
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _21 = (sizetype) pos_54;
  _22 = dataPtr_47(D) + _21;
  _23 = *_22;
  _24 = (unsigned char) mask_53;
  _25 = (unsigned char) Val_52;
  _14 = _23 ^ _25;
  _15 = _14 & _24;
  _26 = _15 ^ _23;
  if (_23 != _26)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_30 = PHI <valueChanged_31(5), 1(6)>
  # DEBUG valueChanged => valueChanged_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_22 = _26;

  <bb 8> [local count: 1073741824]:
  # valueChanged_31 = PHI <valueChanged_29(4), valueChanged_30(7)>
  # Val_32 = PHI <Val_45(4), Val_52(7)>
  # mask_33 = PHI <mask_44(4), mask_53(7)>
  # pos_34 = PHI <pos_42(4), pos_54(7)>
  # DEBUG pos => pos_34
  # DEBUG mask => mask_33
  # DEBUG Val => Val_32
  # DEBUG valueChanged => valueChanged_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_33 > 255)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_3 = PHI <valueChanged_31(8)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _27 = IntDataPtr_50(D)->trigger;
  _28 = valueChanged_3 | _27;
  IntDataPtr_50(D)->trigger = _28;
  return;

}



;; Function Com_EB_Write_08_SX_EL_DUB_EOC_E2 (Com_EB_Write_08_SX_EL_DUB_EOC_E2, funcdef_no=110, decl_uid=7544, cgraph_uid=111, symbol_order=115)

Com_EB_Write_08_SX_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned short _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  int _35;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_37(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_38(D)->ComSignalPositionInBit;
  row_39 = _2 >> 3;
  # DEBUG row => row_39
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_40 = _4 & 7;
  # DEBUG col => col_40
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_38(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _35 = _8 & 65535;
  _10 = (int) col_40;
  _11 = _35 << _10;
  mask_41 = (uint16) _11;
  # DEBUG mask => mask_41
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_42 = (uint16) _14;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = (sizetype) row_39;
  _16 = dataPtr_44(D) + _15;
  _17 = *_16;
  _19 = (unsigned char) _11;
  _20 = (unsigned char) _14;
  _3 = _17 ^ _20;
  _9 = _3 & _19;
  _21 = _9 ^ _17;
  if (_17 != _21)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 1073741824]:
  # valueChanged_31 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_16 = _21;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_41 > 255)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_46 = Val_42 >> 8;
  # DEBUG Val => Val_46
  # DEBUG BEGIN_STMT
  mask_47 = mask_41 >> 8;
  # DEBUG mask => mask_47
  # DEBUG BEGIN_STMT
  _22 = row_39 + 65535;
  pos_48 = (sint16) _22;
  # DEBUG pos => pos_48
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_48;
  _24 = dataPtr_44(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_47;
  _27 = (unsigned char) Val_46;
  _13 = _25 ^ _27;
  _18 = _13 & _26;
  _28 = _18 ^ _25;
  if (_25 != _28)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 536870913]:
  # valueChanged_32 = PHI <valueChanged_31(5), 1(6)>
  # DEBUG valueChanged => valueChanged_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_24 = _28;

  <bb 8> [local count: 1073741824]:
  # valueChanged_33 = PHI <valueChanged_31(4), valueChanged_32(7)>
  # DEBUG valueChanged => valueChanged_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _29 = IntDataPtr_51(D)->trigger;
  _30 = _29 | valueChanged_33;
  IntDataPtr_51(D)->trigger = _30;
  return;

}



;; Function Com_EB_Write_AY_S1_EL_DUB_EOC_E3 (Com_EB_Write_AY_S1_EL_DUB_EOC_E3, funcdef_no=109, decl_uid=7539, cgraph_uid=110, symbol_order=114)

Com_EB_Write_AY_S1_EL_DUB_EOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint32 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  unsigned char _4;
  const uint8 * _5;
  unsigned char _6;
  sizetype _8;
  short unsigned int _9;
  long unsigned int _10;
  unsigned char _11;
  unsigned char _12;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_17(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_19(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  # DEBUG DataPtr_Start => dataPtr_20(D) + _2
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = _2 + ii_15;
  _3 = dataPtr_20(D) + _8;
  _4 = *_3;
  _5 = SignalDataPtr_17(D) + ii_15;
  _6 = *_5;
  if (_4 != _6)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 955630223]:
  # valueChanged_13 = PHI <valueChanged_14(3), 1(4)>
  # DEBUG valueChanged => valueChanged_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_3 = _6;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_26 = ii_15 + 1;
  # DEBUG ii => ii_26

  <bb 6> [local count: 1073741824]:
  # valueChanged_14 = PHI <0(2), valueChanged_13(5)>
  # ii_15 = PHI <0(2), ii_26(5)>
  # DEBUG ii => ii_15
  # DEBUG valueChanged => valueChanged_14
  # DEBUG BEGIN_STMT
  _9 = IntDataPtr_22(D)->arraySize;
  _10 = (long unsigned int) _9;
  if (_10 > ii_15)
    goto <bb 3>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # valueChanged_7 = PHI <valueChanged_14(6)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = IntDataPtr_22(D)->trigger;
  _12 = valueChanged_7 | _11;
  IntDataPtr_22(D)->trigger = _12;
  return;

}



;; Function Com_EB_Write_AY_S0_EL_DUB_EOC_E1 (Com_EB_Write_AY_S0_EL_DUB_EOC_E1, funcdef_no=108, decl_uid=7534, cgraph_uid=109, symbol_order=113)

Com_EB_Write_AY_S0_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  short unsigned int _9;
  unsigned char _10;
  unsigned char _11;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_16(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> [local count: 1073741824]:
  # valueChanged_12 = PHI <0(2), valueChanged_13(7)>
  # ii_14 = PHI <0(2), ii_23(7)>
  # DEBUG ii => ii_14
  # DEBUG valueChanged => valueChanged_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_19(D)->ComSignalPositionInBit;
  pos_20 = _1 + ii_14;
  # DEBUG pos => pos_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_20;
  _3 = dataPtr_21(D) + _2;
  _4 = *_3;
  _5 = (sizetype) ii_14;
  _6 = SignalDataPtr_16(D) + _5;
  _7 = *_6;
  if (_4 != _7)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 5> [local count: 1073741824]:
  # valueChanged_13 = PHI <valueChanged_12(3), 1(4)>
  # DEBUG valueChanged => valueChanged_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_3 = _7;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_23 = ii_14 + 1;
  # DEBUG ii => ii_23
  # DEBUG BEGIN_STMT
  _9 = Com_EB_WritePropPtr_19(D)->ComSignalBase.ComBitSize;
  if (_9 > ii_23)
    goto <bb 7>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 7> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 118111601]:
  # valueChanged_8 = PHI <valueChanged_13(5)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = IntDataPtr_25(D)->trigger;
  _11 = valueChanged_8 | _10;
  IntDataPtr_25(D)->trigger = _11;
  return;

}



;; Function Com_EB_Write_32_SX_EL_DUB_EOC_E1 (Com_EB_Write_32_SX_EL_DUB_EOC_E1, funcdef_no=106, decl_uid=7524, cgraph_uid=107, symbol_order=111)

Com_EB_Write_32_SX_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  short unsigned int _20;
  unsigned char _21;
  unsigned char _22;
  unsigned short _23;
  int _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.73_29;
  unsigned char _30;
  unsigned short pos.74_31;
  unsigned short _32;
  unsigned char _33;
  int _34;
  unsigned int _35;
  sizetype _36;
  uint8 * _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  long unsigned int _53;
  unsigned char _57;
  unsigned char _67;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_56
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_58(D)->ComSignalPositionInBit;
  row_59 = _1 >> 3;
  # DEBUG row => row_59
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_60 = _3 & 7;
  # DEBUG col => col_60
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_61 = 8 - col_60;
  # DEBUG space => space_61
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_58(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_62 = 4294967295 >> _6;
  # DEBUG mask => mask_62
  # DEBUG BEGIN_STMT
  _7 = (int) col_60;
  mask_63 = mask_62 << _7;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _53 = Val_56 & 255;
  _8 = (int) _53;
  _10 = _8 << _7;
  putvalue_64 = (uint8) _10;
  # DEBUG putvalue => putvalue_64
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_59;
  _12 = dataPtr_66(D) + _11;
  _13 = *_12;
  _17 = (unsigned char) mask_63;
  _16 = _13 ^ putvalue_64;
  _18 = _16 & _17;
  _19 = _13 ^ _18;
  if (_13 != _19)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_43 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_43
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_12 = _19;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = Com_EB_WritePropPtr_58(D)->ComSignalBase.ComBitSize;
  _21 = (unsigned char) _20;
  _57 = col_60 + 248;
  tmp_val_69 = _21 + _57;
  # DEBUG tmp_val => tmp_val_69
  # DEBUG BEGIN_STMT
  ssize_70 = (sint8) tmp_val_69;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  _23 = row_59 + 1;
  pos_71 = (sint16) _23;
  # DEBUG pos => pos_71
  # DEBUG BEGIN_STMT
  _24 = (int) space_61;
  Val_72 = Val_56 >> _24;
  # DEBUG Val => Val_72
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_50;
  _26 = dataPtr_66(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) Val_48;
  if (_27 != _28)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_44 = PHI <valueChanged_45(5), 1(6)>
  # DEBUG valueChanged => valueChanged_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_26 = _28;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_80 = Val_48 >> 8;
  # DEBUG Val => Val_80
  # DEBUG BEGIN_STMT
  ssize.73_29 = (unsigned char) ssize_49;
  _30 = ssize.73_29 + 248;
  ssize_81 = (sint8) _30;
  # DEBUG ssize => ssize_81
  # DEBUG BEGIN_STMT
  pos.74_31 = (unsigned short) pos_50;
  _32 = pos.74_31 + 1;
  pos_82 = (sint16) _32;
  # DEBUG pos => pos_82

  <bb 8> [local count: 1073741824]:
  # valueChanged_45 = PHI <valueChanged_43(4), valueChanged_44(7)>
  # Val_48 = PHI <Val_72(4), Val_80(7)>
  # ssize_49 = PHI <ssize_70(4), ssize_81(7)>
  # pos_50 = PHI <pos_71(4), pos_82(7)>
  # DEBUG pos => pos_50
  # DEBUG ssize => ssize_49
  # DEBUG Val => Val_48
  # DEBUG valueChanged => valueChanged_45
  # DEBUG BEGIN_STMT
  if (ssize_49 > 7)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_2 = PHI <valueChanged_45(8)>
  # Val_9 = PHI <Val_48(8)>
  # ssize_14 = PHI <ssize_49(8)>
  # pos_15 = PHI <pos_50(8)>
  # DEBUG BEGIN_STMT
  if (ssize_14 > 0)
    goto <bb 10>; [59.00%]
  else
    goto <bb 13>; [41.00%]

  <bb 10> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_73 = (uint8) ssize_14;
  # DEBUG ssize_hlp => ssize_hlp_73
  # DEBUG BEGIN_STMT
  _33 = 8 - ssize_hlp_73;
  _34 = (int) _33;
  _35 = 255 >> _34;
  mask_u8_74 = (uint8) _35;
  # DEBUG mask_u8 => mask_u8_74
  # DEBUG BEGIN_STMT
  # DEBUG mask => _35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = (sizetype) pos_15;
  _37 = dataPtr_66(D) + _36;
  _38 = *_37;
  _39 = (unsigned char) Val_9;
  _67 = _38 ^ _39;
  _22 = _67 & mask_u8_74;
  _40 = _22 ^ _38;
  if (_38 != _40)
    goto <bb 11>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 11> [local count: 45992657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 12> [local count: 69685844]:
  # valueChanged_46 = PHI <valueChanged_2(10), 1(11)>
  # DEBUG valueChanged => valueChanged_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_37 = _40;

  <bb 13> [local count: 118111601]:
  # valueChanged_47 = PHI <valueChanged_2(9), valueChanged_46(12)>
  # DEBUG valueChanged => valueChanged_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _41 = IntDataPtr_77(D)->trigger;
  _42 = _41 | valueChanged_47;
  IntDataPtr_77(D)->trigger = _42;
  return;

}



;; Function Com_EB_Write_16_SX_EL_DUB_EOC_E1 (Com_EB_Write_16_SX_EL_DUB_EOC_E1, funcdef_no=105, decl_uid=7519, cgraph_uid=106, symbol_order=110)

Com_EB_Write_16_SX_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned short pos.75_19;
  unsigned short _20;
  sizetype _21;
  uint8 * _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_37(D)];
  Val_38 = (uint32) _1;
  # DEBUG Val => Val_38
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _2 >> 3;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_41 = _4 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  pos_42 = (sint16) row_40;
  # DEBUG pos => pos_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_39(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_43 = 65535 >> _7;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _8 = (int) col_41;
  mask_44 = mask_43 << _8;
  # DEBUG mask => mask_44
  # DEBUG BEGIN_STMT
  Val_45 = Val_38 << _8;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (sizetype) row_40;
  _11 = dataPtr_47(D) + _10;
  _12 = *_11;
  _16 = (unsigned char) mask_44;
  _17 = (unsigned char) Val_45;
  _9 = _12 ^ _17;
  _13 = _9 & _16;
  _18 = _12 ^ _13;
  if (_12 != _18)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 118111602]:
  # valueChanged_29 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_11 = _18;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_52 = Val_32 >> 8;
  # DEBUG Val => Val_52
  # DEBUG BEGIN_STMT
  mask_53 = mask_33 >> 8;
  # DEBUG mask => mask_53
  # DEBUG BEGIN_STMT
  pos.75_19 = (unsigned short) pos_34;
  _20 = pos.75_19 + 1;
  pos_54 = (sint16) _20;
  # DEBUG pos => pos_54
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _21 = (sizetype) pos_54;
  _22 = dataPtr_47(D) + _21;
  _23 = *_22;
  _24 = (unsigned char) mask_53;
  _25 = (unsigned char) Val_52;
  _14 = _23 ^ _25;
  _15 = _14 & _24;
  _26 = _15 ^ _23;
  if (_23 != _26)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 630715947]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 955630223]:
  # valueChanged_30 = PHI <valueChanged_31(5), 1(6)>
  # DEBUG valueChanged => valueChanged_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_22 = _26;

  <bb 8> [local count: 1073741824]:
  # valueChanged_31 = PHI <valueChanged_29(4), valueChanged_30(7)>
  # Val_32 = PHI <Val_45(4), Val_52(7)>
  # mask_33 = PHI <mask_44(4), mask_53(7)>
  # pos_34 = PHI <pos_42(4), pos_54(7)>
  # DEBUG pos => pos_34
  # DEBUG mask => mask_33
  # DEBUG Val => Val_32
  # DEBUG valueChanged => valueChanged_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_33 > 255)
    goto <bb 5>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 118111601]:
  # valueChanged_3 = PHI <valueChanged_31(8)>
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _27 = IntDataPtr_50(D)->trigger;
  _28 = valueChanged_3 | _27;
  IntDataPtr_50(D)->trigger = _28;
  return;

}



;; Function Com_EB_Write_08_SX_EL_DUB_EOC_E1 (Com_EB_Write_08_SX_EL_DUB_EOC_E1, funcdef_no=104, decl_uid=7514, cgraph_uid=105, symbol_order=109)

Com_EB_Write_08_SX_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned short _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  int _35;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 0
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_37(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_38(D)->ComSignalPositionInBit;
  row_39 = _2 >> 3;
  # DEBUG row => row_39
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_40 = _4 & 7;
  # DEBUG col => col_40
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_38(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _35 = _8 & 65535;
  _10 = (int) col_40;
  _11 = _35 << _10;
  mask_41 = (uint16) _11;
  # DEBUG mask => mask_41
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_42 = (uint16) _14;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = (sizetype) row_39;
  _16 = dataPtr_44(D) + _15;
  _17 = *_16;
  _19 = (unsigned char) _11;
  _20 = (unsigned char) _14;
  _3 = _17 ^ _20;
  _9 = _3 & _19;
  _21 = _9 ^ _17;
  if (_17 != _21)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 4> [local count: 1073741824]:
  # valueChanged_31 = PHI <0(2), 1(3)>
  # DEBUG valueChanged => valueChanged_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_16 = _21;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_41 > 255)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_46 = Val_42 >> 8;
  # DEBUG Val => Val_46
  # DEBUG BEGIN_STMT
  mask_47 = mask_41 >> 8;
  # DEBUG mask => mask_47
  # DEBUG BEGIN_STMT
  _22 = row_39 + 1;
  # DEBUG pos => (sint16) _22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) _22;
  _24 = dataPtr_44(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_47;
  _27 = (unsigned char) Val_46;
  _13 = _25 ^ _27;
  _18 = _13 & _26;
  _28 = _18 ^ _25;
  if (_25 != _28)
    goto <bb 6>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 6> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG valueChanged => 1

  <bb 7> [local count: 536870913]:
  # valueChanged_32 = PHI <valueChanged_31(5), 1(6)>
  # DEBUG valueChanged => valueChanged_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_24 = _28;

  <bb 8> [local count: 1073741824]:
  # valueChanged_33 = PHI <valueChanged_31(4), valueChanged_32(7)>
  # DEBUG valueChanged => valueChanged_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _29 = IntDataPtr_50(D)->trigger;
  _30 = _29 | valueChanged_33;
  IntDataPtr_50(D)->trigger = _30;
  return;

}



;; Function Com_EB_Write_AY_S0_EL_DUB_DOC_E2 (Com_EB_Write_AY_S0_EL_DUB_DOC_E2, funcdef_no=103, decl_uid=7509, cgraph_uid=104, symbol_order=108)

Com_EB_Write_AY_S0_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  const uint8 * _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int _10;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_13(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> [local count: 1073741824]:
  # ii_11 = PHI <0(2), ii_20(5)>
  # DEBUG ii => ii_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_16(D)->ComSignalPositionInBit;
  _2 = Com_EB_WritePropPtr_16(D)->ComSignalBase.ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_11;
  pos_17 = _4 + 65535;
  # DEBUG pos => pos_17
  # DEBUG BEGIN_STMT
  _5 = (sizetype) ii_11;
  _6 = SignalDataPtr_13(D) + _5;
  _7 = (sizetype) pos_17;
  _8 = dataPtr_18(D) + _7;
  _9 = *_6;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  ii_20 = ii_11 + 1;
  # DEBUG ii => ii_20
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_16(D)->ComSignalBase.ComBitSize;
  if (_10 > ii_20)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_32_SX_EL_DUB_DOC_E2 (Com_EB_Write_32_SX_EL_DUB_DOC_E2, funcdef_no=101, decl_uid=7499, cgraph_uid=102, symbol_order=106)

Com_EB_Write_32_SX_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  short unsigned int _19;
  unsigned char _20;
  unsigned short _21;
  int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char ssize.79_26;
  unsigned char _27;
  unsigned short pos.80_28;
  unsigned short _29;
  unsigned char _30;
  int _31;
  unsigned int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  long unsigned int _48;
  unsigned char _49;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Val_47 = MEM[(const uint32 *)SignalDataPtr_46(D)];
  # DEBUG Val => Val_47
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_47
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_50(D)->ComSignalPositionInBit;
  row_51 = _1 >> 3;
  # DEBUG row => row_51
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_52 = _3 & 7;
  # DEBUG col => col_52
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_51
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_53 = 8 - col_52;
  # DEBUG space => space_53
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_50(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_54 = 4294967295 >> _6;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  _7 = (int) col_52;
  mask_55 = mask_54 << _7;
  # DEBUG mask => mask_55
  # DEBUG BEGIN_STMT
  _48 = Val_47 & 255;
  _8 = (int) _48;
  _10 = _8 << _7;
  putvalue_56 = (uint8) _10;
  # DEBUG putvalue => putvalue_56
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_51;
  _12 = dataPtr_58(D) + _11;
  _13 = *_12;
  _14 = (unsigned char) mask_55;
  _16 = _13 ^ putvalue_56;
  _17 = _14 & _16;
  _18 = _13 ^ _17;
  *_12 = _18;
  # DEBUG BEGIN_STMT
  _19 = Com_EB_WritePropPtr_50(D)->ComSignalBase.ComBitSize;
  _20 = (unsigned char) _19;
  _49 = col_52 + 248;
  tmp_val_60 = _20 + _49;
  # DEBUG tmp_val => tmp_val_60
  # DEBUG BEGIN_STMT
  ssize_61 = (sint8) tmp_val_60;
  # DEBUG ssize => ssize_61
  # DEBUG BEGIN_STMT
  _21 = row_51 + 65535;
  pos_62 = (sint16) _21;
  # DEBUG pos => pos_62
  # DEBUG BEGIN_STMT
  _22 = (int) space_53;
  Val_63 = Val_47 >> _22;
  # DEBUG Val => Val_63
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_42;
  _24 = dataPtr_58(D) + _23;
  _25 = (unsigned char) Val_40;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  Val_69 = Val_40 >> 8;
  # DEBUG Val => Val_69
  # DEBUG BEGIN_STMT
  ssize.79_26 = (unsigned char) ssize_41;
  _27 = ssize.79_26 + 248;
  ssize_70 = (sint8) _27;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  pos.80_28 = (unsigned short) pos_42;
  _29 = pos.80_28 + 65535;
  pos_71 = (sint16) _29;
  # DEBUG pos => pos_71

  <bb 4> [local count: 1073741824]:
  # Val_40 = PHI <Val_63(2), Val_69(3)>
  # ssize_41 = PHI <ssize_61(2), ssize_70(3)>
  # pos_42 = PHI <pos_62(2), pos_71(3)>
  # DEBUG pos => pos_42
  # DEBUG ssize => ssize_41
  # DEBUG Val => Val_40
  # DEBUG BEGIN_STMT
  if (ssize_41 > 7)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Val_2 = PHI <Val_40(4)>
  # ssize_9 = PHI <ssize_41(4)>
  # pos_15 = PHI <pos_42(4)>
  # DEBUG BEGIN_STMT
  if (ssize_9 > 0)
    goto <bb 6>; [59.00%]
  else
    goto <bb 7>; [41.00%]

  <bb 6> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_64 = (uint8) ssize_9;
  # DEBUG ssize_hlp => ssize_hlp_64
  # DEBUG BEGIN_STMT
  _30 = 8 - ssize_hlp_64;
  _31 = (int) _30;
  _32 = 255 >> _31;
  mask_u8_65 = (uint8) _32;
  # DEBUG mask_u8 => mask_u8_65
  # DEBUG BEGIN_STMT
  # DEBUG mask => _32
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_15;
  _34 = dataPtr_58(D) + _33;
  _35 = *_34;
  _37 = (unsigned char) Val_2;
  _36 = _35 ^ _37;
  _38 = _36 & mask_u8_65;
  _39 = _35 ^ _38;
  *_34 = _39;

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_16_SX_EL_DUB_DOC_E2 (Com_EB_Write_16_SX_EL_DUB_DOC_E2, funcdef_no=100, decl_uid=7494, cgraph_uid=101, symbol_order=105)

Com_EB_Write_16_SX_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned short pos.81_18;
  unsigned short _19;
  sizetype _20;
  uint8 * _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_31(D)];
  Val_32 = (uint32) _1;
  # DEBUG Val => Val_32
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  row_34 = _2 >> 3;
  # DEBUG row => row_34
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_35 = _4 & 7;
  # DEBUG col => col_35
  # DEBUG BEGIN_STMT
  pos_36 = (sint16) row_34;
  # DEBUG pos => pos_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_37 = 65535 >> _7;
  # DEBUG mask => mask_37
  # DEBUG BEGIN_STMT
  _8 = (int) col_35;
  mask_38 = mask_37 << _8;
  # DEBUG mask => mask_38
  # DEBUG BEGIN_STMT
  Val_39 = Val_32 << _8;
  # DEBUG Val => Val_39
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = (sizetype) row_34;
  _11 = dataPtr_41(D) + _10;
  _12 = *_11;
  _13 = (unsigned char) mask_38;
  _14 = (unsigned char) Val_39;
  _3 = _12 ^ _14;
  _9 = _3 & _13;
  _17 = _9 ^ _12;
  *_11 = _17;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_44 = Val_26 >> 8;
  # DEBUG Val => Val_44
  # DEBUG BEGIN_STMT
  mask_45 = mask_27 >> 8;
  # DEBUG mask => mask_45
  # DEBUG BEGIN_STMT
  pos.81_18 = (unsigned short) pos_28;
  _19 = pos.81_18 + 65535;
  pos_46 = (sint16) _19;
  # DEBUG pos => pos_46
  # DEBUG BEGIN_STMT
  _20 = (sizetype) pos_46;
  _21 = dataPtr_41(D) + _20;
  _22 = *_21;
  _23 = (unsigned char) mask_45;
  _24 = (unsigned char) Val_44;
  _15 = _22 ^ _24;
  _16 = _15 & _23;
  _25 = _16 ^ _22;
  *_21 = _25;

  <bb 4> [local count: 1073741824]:
  # Val_26 = PHI <Val_39(2), Val_44(3)>
  # mask_27 = PHI <mask_38(2), mask_45(3)>
  # pos_28 = PHI <pos_36(2), pos_46(3)>
  # DEBUG pos => pos_28
  # DEBUG mask => mask_27
  # DEBUG Val => Val_26
  # DEBUG BEGIN_STMT
  if (mask_27 > 255)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_08_SX_EL_DUB_DOC_E2 (Com_EB_Write_08_SX_EL_DUB_DOC_E2, funcdef_no=99, decl_uid=7489, cgraph_uid=100, symbol_order=104)

Com_EB_Write_08_SX_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned short _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  int _32;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_31(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  row_34 = _2 >> 3;
  # DEBUG row => row_34
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_35 = _4 & 7;
  # DEBUG col => col_35
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _32 = _8 & 65535;
  _10 = (int) col_35;
  _11 = _32 << _10;
  mask_36 = (uint16) _11;
  # DEBUG mask => mask_36
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_37 = (uint16) _14;
  # DEBUG Val => Val_37
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _15 = (sizetype) row_34;
  _16 = dataPtr_39(D) + _15;
  _17 = *_16;
  _18 = (unsigned char) _11;
  _19 = (unsigned char) _14;
  _3 = _17 ^ _19;
  _9 = _3 & _18;
  _21 = _9 ^ _17;
  *_16 = _21;
  # DEBUG BEGIN_STMT
  if (mask_36 > 255)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_41 = Val_37 >> 8;
  # DEBUG Val => Val_41
  # DEBUG BEGIN_STMT
  mask_42 = mask_36 >> 8;
  # DEBUG mask => mask_42
  # DEBUG BEGIN_STMT
  _22 = row_34 + 65535;
  pos_43 = (sint16) _22;
  # DEBUG pos => pos_43
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_43;
  _24 = dataPtr_39(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_42;
  _27 = (unsigned char) Val_41;
  _13 = _25 ^ _27;
  _20 = _13 & _26;
  _28 = _20 ^ _25;
  *_24 = _28;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S1_EL_DUB_DOC_E3 (Com_EB_Write_AY_S1_EL_DUB_DOC_E3, funcdef_no=98, decl_uid=7484, cgraph_uid=99, symbol_order=103)

Com_EB_Write_AY_S1_EL_DUB_DOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint32 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  long unsigned int _7;
  sizetype _10;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_11(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  # DEBUG DataPtr_Start => dataPtr_14(D) + _2
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _3 = SignalDataPtr_11(D) + ii_8;
  _10 = _2 + ii_8;
  _4 = dataPtr_14(D) + _10;
  _5 = *_3;
  *_4 = _5;
  # DEBUG BEGIN_STMT
  ii_19 = ii_8 + 1;
  # DEBUG ii => ii_19

  <bb 4> [local count: 1073741824]:
  # ii_8 = PHI <0(2), ii_19(3)>
  # DEBUG ii => ii_8
  # DEBUG BEGIN_STMT
  _6 = IntDataPtr_16(D)->arraySize;
  _7 = (long unsigned int) _6;
  if (_7 > ii_8)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_AY_S0_EL_DUB_DOC_E1 (Com_EB_Write_AY_S0_EL_DUB_DOC_E1, funcdef_no=97, decl_uid=7479, cgraph_uid=98, symbol_order=102)

Com_EB_Write_AY_S0_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  uint16 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  sizetype _4;
  uint8 * _5;
  unsigned char _6;
  short unsigned int _7;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  # DEBUG BEGIN_STMT
  # DEBUG U8Ptr => SignalDataPtr_10(D)
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> [local count: 1073741824]:
  # ii_8 = PHI <0(2), ii_17(5)>
  # DEBUG ii => ii_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  pos_14 = _1 + ii_8;
  # DEBUG pos => pos_14
  # DEBUG BEGIN_STMT
  _2 = (sizetype) ii_8;
  _3 = SignalDataPtr_10(D) + _2;
  _4 = (sizetype) pos_14;
  _5 = dataPtr_15(D) + _4;
  _6 = *_3;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  ii_17 = ii_8 + 1;
  # DEBUG ii => ii_17
  # DEBUG BEGIN_STMT
  _7 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_7 > ii_17)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 955630223]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_32_SX_EL_DUB_DOC_E1 (Com_EB_Write_32_SX_EL_DUB_DOC_E1, funcdef_no=95, decl_uid=7469, cgraph_uid=96, symbol_order=100)

Com_EB_Write_32_SX_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  short unsigned int _19;
  unsigned char _20;
  unsigned short _21;
  int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char ssize.85_26;
  unsigned char _27;
  unsigned short pos.86_28;
  unsigned short _29;
  unsigned char _30;
  int _31;
  unsigned int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  long unsigned int _48;
  unsigned char _49;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Val_47 = MEM[(const uint32 *)SignalDataPtr_46(D)];
  # DEBUG Val => Val_47
  # DEBUG BEGIN_STMT
  # DEBUG putvalue => (uint8) Val_47
  # DEBUG BEGIN_STMT
  # DEBUG mask => 4294967295
  # DEBUG BEGIN_STMT
  # DEBUG space => 8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_50(D)->ComSignalPositionInBit;
  row_51 = _1 >> 3;
  # DEBUG row => row_51
  # DEBUG BEGIN_STMT
  _3 = (unsigned char) _1;
  col_52 = _3 & 7;
  # DEBUG col => col_52
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_51
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_53 = 8 - col_52;
  # DEBUG space => space_53
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_50(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_54 = 4294967295 >> _6;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  _7 = (int) col_52;
  mask_55 = mask_54 << _7;
  # DEBUG mask => mask_55
  # DEBUG BEGIN_STMT
  _48 = Val_47 & 255;
  _8 = (int) _48;
  _10 = _8 << _7;
  putvalue_56 = (uint8) _10;
  # DEBUG putvalue => putvalue_56
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = (sizetype) row_51;
  _12 = dataPtr_58(D) + _11;
  _13 = *_12;
  _14 = (unsigned char) mask_55;
  _16 = _13 ^ putvalue_56;
  _17 = _14 & _16;
  _18 = _13 ^ _17;
  *_12 = _18;
  # DEBUG BEGIN_STMT
  _19 = Com_EB_WritePropPtr_50(D)->ComSignalBase.ComBitSize;
  _20 = (unsigned char) _19;
  _49 = col_52 + 248;
  tmp_val_60 = _20 + _49;
  # DEBUG tmp_val => tmp_val_60
  # DEBUG BEGIN_STMT
  ssize_61 = (sint8) tmp_val_60;
  # DEBUG ssize => ssize_61
  # DEBUG BEGIN_STMT
  _21 = row_51 + 1;
  pos_62 = (sint16) _21;
  # DEBUG pos => pos_62
  # DEBUG BEGIN_STMT
  _22 = (int) space_53;
  Val_63 = Val_47 >> _22;
  # DEBUG Val => Val_63
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_42;
  _24 = dataPtr_58(D) + _23;
  _25 = (unsigned char) Val_40;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  Val_69 = Val_40 >> 8;
  # DEBUG Val => Val_69
  # DEBUG BEGIN_STMT
  ssize.85_26 = (unsigned char) ssize_41;
  _27 = ssize.85_26 + 248;
  ssize_70 = (sint8) _27;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  pos.86_28 = (unsigned short) pos_42;
  _29 = pos.86_28 + 1;
  pos_71 = (sint16) _29;
  # DEBUG pos => pos_71

  <bb 4> [local count: 1073741824]:
  # Val_40 = PHI <Val_63(2), Val_69(3)>
  # ssize_41 = PHI <ssize_61(2), ssize_70(3)>
  # pos_42 = PHI <pos_62(2), pos_71(3)>
  # DEBUG pos => pos_42
  # DEBUG ssize => ssize_41
  # DEBUG Val => Val_40
  # DEBUG BEGIN_STMT
  if (ssize_41 > 7)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # Val_2 = PHI <Val_40(4)>
  # ssize_9 = PHI <ssize_41(4)>
  # pos_15 = PHI <pos_42(4)>
  # DEBUG BEGIN_STMT
  if (ssize_9 > 0)
    goto <bb 6>; [59.00%]
  else
    goto <bb 7>; [41.00%]

  <bb 6> [local count: 69685844]:
  # DEBUG BEGIN_STMT
  ssize_hlp_64 = (uint8) ssize_9;
  # DEBUG ssize_hlp => ssize_hlp_64
  # DEBUG BEGIN_STMT
  _30 = 8 - ssize_hlp_64;
  _31 = (int) _30;
  _32 = 255 >> _31;
  mask_u8_65 = (uint8) _32;
  # DEBUG mask_u8 => mask_u8_65
  # DEBUG BEGIN_STMT
  # DEBUG mask => _32
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_15;
  _34 = dataPtr_58(D) + _33;
  _35 = *_34;
  _37 = (unsigned char) Val_2;
  _36 = _35 ^ _37;
  _38 = _36 & mask_u8_65;
  _39 = _35 ^ _38;
  *_34 = _39;

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_16_SX_EL_DUB_DOC_E1 (Com_EB_Write_16_SX_EL_DUB_DOC_E1, funcdef_no=94, decl_uid=7464, cgraph_uid=95, symbol_order=99)

Com_EB_Write_16_SX_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned short pos.87_18;
  unsigned short _19;
  sizetype _20;
  uint8 * _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_31(D)];
  Val_32 = (uint32) _1;
  # DEBUG Val => Val_32
  # DEBUG BEGIN_STMT
  # DEBUG mask => 65535
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  row_34 = _2 >> 3;
  # DEBUG row => row_34
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_35 = _4 & 7;
  # DEBUG col => col_35
  # DEBUG BEGIN_STMT
  pos_36 = (sint16) row_34;
  # DEBUG pos => pos_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_37 = 65535 >> _7;
  # DEBUG mask => mask_37
  # DEBUG BEGIN_STMT
  _8 = (int) col_35;
  mask_38 = mask_37 << _8;
  # DEBUG mask => mask_38
  # DEBUG BEGIN_STMT
  Val_39 = Val_32 << _8;
  # DEBUG Val => Val_39
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = (sizetype) row_34;
  _11 = dataPtr_41(D) + _10;
  _12 = *_11;
  _13 = (unsigned char) mask_38;
  _14 = (unsigned char) Val_39;
  _3 = _12 ^ _14;
  _9 = _3 & _13;
  _17 = _9 ^ _12;
  *_11 = _17;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Val_44 = Val_26 >> 8;
  # DEBUG Val => Val_44
  # DEBUG BEGIN_STMT
  mask_45 = mask_27 >> 8;
  # DEBUG mask => mask_45
  # DEBUG BEGIN_STMT
  pos.87_18 = (unsigned short) pos_28;
  _19 = pos.87_18 + 1;
  pos_46 = (sint16) _19;
  # DEBUG pos => pos_46
  # DEBUG BEGIN_STMT
  _20 = (sizetype) pos_46;
  _21 = dataPtr_41(D) + _20;
  _22 = *_21;
  _23 = (unsigned char) mask_45;
  _24 = (unsigned char) Val_44;
  _15 = _22 ^ _24;
  _16 = _15 & _23;
  _25 = _16 ^ _22;
  *_21 = _25;

  <bb 4> [local count: 1073741824]:
  # Val_26 = PHI <Val_39(2), Val_44(3)>
  # mask_27 = PHI <mask_38(2), mask_45(3)>
  # pos_28 = PHI <pos_36(2), pos_46(3)>
  # DEBUG pos => pos_28
  # DEBUG mask => mask_27
  # DEBUG Val => Val_26
  # DEBUG BEGIN_STMT
  if (mask_27 > 255)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_08_SX_EL_DUB_DOC_E1 (Com_EB_Write_08_SX_EL_DUB_DOC_E1, funcdef_no=93, decl_uid=7459, cgraph_uid=94, symbol_order=98)

Com_EB_Write_08_SX_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned short _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  int _32;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_31(D)];
  # DEBUG Val => (uint16) _1
  # DEBUG BEGIN_STMT
  # DEBUG mask => 255
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  row_34 = _2 >> 3;
  # DEBUG row => row_34
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) _2;
  col_35 = _4 & 7;
  # DEBUG col => col_35
  # DEBUG BEGIN_STMT
  # DEBUG pos => (sint16) row_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 8 - _6;
  _8 = 255 >> _7;
  # DEBUG mask => (uint16) _8
  # DEBUG BEGIN_STMT
  _32 = _8 & 65535;
  _10 = (int) col_35;
  _11 = _32 << _10;
  mask_36 = (uint16) _11;
  # DEBUG mask => mask_36
  # DEBUG BEGIN_STMT
  _12 = (int) _1;
  _14 = _12 << _10;
  Val_37 = (uint16) _14;
  # DEBUG Val => Val_37
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _15 = (sizetype) row_34;
  _16 = dataPtr_39(D) + _15;
  _17 = *_16;
  _18 = (unsigned char) _11;
  _19 = (unsigned char) _14;
  _3 = _17 ^ _19;
  _9 = _3 & _18;
  _21 = _9 ^ _17;
  *_16 = _21;
  # DEBUG BEGIN_STMT
  if (mask_36 > 255)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Val_41 = Val_37 >> 8;
  # DEBUG Val => Val_41
  # DEBUG BEGIN_STMT
  mask_42 = mask_36 >> 8;
  # DEBUG mask => mask_42
  # DEBUG BEGIN_STMT
  _22 = row_34 + 1;
  # DEBUG pos => (sint16) _22
  # DEBUG BEGIN_STMT
  _23 = (sizetype) _22;
  _24 = dataPtr_39(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_42;
  _27 = (unsigned char) Val_41;
  _13 = _25 ^ _27;
  _20 = _13 & _26;
  _28 = _20 ^ _25;
  *_24 = _28;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_FilterOneEveryN (Com_EB_FilterOneEveryN, funcdef_no=211, decl_uid=9718, cgraph_uid=212, symbol_order=216)

Com_EB_FilterOneEveryN (ComFilterRefType ComFilterRef)
{
  ComFilterOneEveryNSizeType occurrence;
  ComFilterOneEveryNSizeType offset;
  ComFilterOneEveryNSizeType period;
  const struct ComFilterOneEveryNType * const ComFilterOneEveryNPtr;
  boolean FilterResult;
  const struct Com_ConfigType * Com_gConfigPtr.165_1;
  sizetype _2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  uint8 * Com_gDataMemPtr.167_7;
  short unsigned int _8;
  sizetype _9;
  short unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  ComFilterOneEveryNSizeType * _13;
  _Bool _14;
  short unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.165_1 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.165_1->ComFilterOneEveryNRef;
  _4 = (unsigned int) ComFilterRef_17(D);
  _5 = _4 * 6;
  _6 = _3 + _5;
  ComFilterOneEveryNPtr_18 = Com_gConfigPtr.165_1 + _6;
  # DEBUG ComFilterOneEveryNPtr => ComFilterOneEveryNPtr_18
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  offset_19 = ComFilterOneEveryNPtr_18->ComFilterOffset;
  # DEBUG offset => offset_19
  # DEBUG BEGIN_STMT
  period_20 = ComFilterOneEveryNPtr_18->ComFilterPeriodFactor;
  # DEBUG period => period_20
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.167_7 = Com_gDataMemPtr;
  _8 = Com_gConfigPtr.165_1->ComFilterOneEveryNBase;
  _9 = (sizetype) _8;
  # DEBUG occurrencebase => Com_gDataMemPtr.167_7 + _9
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = ComFilterOneEveryNPtr_18->ComFilterOccurrence;
  _11 = (unsigned int) _10;
  _12 = _11 * 2;
  _2 = _9 + _12;
  _13 = Com_gDataMemPtr.167_7 + _2;
  occurrence_22 = *_13;
  # DEBUG occurrence => occurrence_22
  # DEBUG BEGIN_STMT
  _14 = offset_19 == occurrence_22;
  FilterResult_23 = (boolean) _14;
  # DEBUG FilterResult => FilterResult_23
  # DEBUG BEGIN_STMT
  occurrence_24 = occurrence_22 + 1;
  # DEBUG occurrence => occurrence_24
  # DEBUG BEGIN_STMT
  _15 = occurrence_24 % period_20;
  *_13 = _15;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return FilterResult_23;

}



;; Function Com_EB_FilterUint8 (Com_EB_FilterUint8, funcdef_no=213, decl_uid=6322, cgraph_uid=214, symbol_order=218)

Com_EB_FilterUint8 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint8 XOrMax;
  uint8 maskOrMin;
  const struct ComFilter8BitMaskXMinMaxType * const FilterPtr;
  uint8 oldVal;
  uint8 mask;
  const ComFilter8BitMaskType * const maskPtr;
  uint8 NewVal;
  boolean FilterResult;
  unsigned char _1;
  const struct Com_ConfigType * Com_gConfigPtr.170_2;
  long unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  sizetype _6;
  uint8 * Com_gDataMemPtr.172_7;
  short unsigned int _8;
  sizetype _9;
  short unsigned int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _14;
  _Bool _15;
  short unsigned int _16;
  const struct Com_ConfigType * Com_gConfigPtr.174_17;
  long unsigned int _18;
  short unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  unsigned char _23;
  _Bool _24;
  unsigned char _25;
  _Bool _26;
  short unsigned int _27;
  uint8 * Com_gDataMemPtr.178_28;
  const struct Com_ConfigType * Com_gConfigPtr.179_29;
  short unsigned int _30;
  sizetype _31;
  sizetype _32;
  uint8 * _33;
  int iftmp.176_35;
  int iftmp.177_36;
  sizetype _39;
  sizetype _53;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  NewVal_42 = MEM[(const uint8 *)SignalDataPtr_41(D)];
  # DEBUG NewVal => NewVal_42
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_43(D)->ComFilterType;
  switch (_1) <default: <L2> [33.33%], case 2: <L0> [33.33%], case 7: <L1> [33.33%]>

  <bb 3> [local count: 357878150]:
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.170_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.170_2->ComFilter8BitMaskRef;
  _4 = ComFilterPropPtr_43(D)->ComFilterRef;
  _5 = (sizetype) _4;
  _6 = _3 + _5;
  maskPtr_46 = Com_gConfigPtr.170_2 + _6;
  # DEBUG maskPtr => maskPtr_46
  # DEBUG BEGIN_STMT
  mask_47 = *maskPtr_46;
  # DEBUG mask => mask_47
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.172_7 = Com_gDataMemPtr;
  _8 = Com_gConfigPtr.170_2->ComBufferBaseUInt8;
  _9 = (sizetype) _8;
  # DEBUG bufferBaseUint8 => Com_gDataMemPtr.172_7 + _9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = ComFilterPropPtr_43(D)->ComFilterSignalValueRef;
  _11 = (sizetype) _10;
  _39 = _9 + _11;
  _12 = Com_gDataMemPtr.172_7 + _39;
  oldVal_48 = *_12;
  # DEBUG oldVal => oldVal_48
  # DEBUG BEGIN_STMT
  _13 = NewVal_42 ^ oldVal_48;
  _14 = _13 & mask_47;
  _15 = _14 != 0;
  FilterResult_49 = (boolean) _15;
  # DEBUG FilterResult => FilterResult_49
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  _16 = ComFilterPropPtr_43(D)->ComFilterRef;
  FilterResult_45 = Com_EB_FilterOneEveryN (_16);
  # DEBUG FilterResult => FilterResult_45
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 5> [local count: 357878150]:
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.174_17 = Com_gConfigPtr;
  _18 = Com_gConfigPtr.174_17->ComFilter8BitMaskXMinMaxRef;
  _19 = ComFilterPropPtr_43(D)->ComFilterRef;
  _20 = (unsigned int) _19;
  _21 = _20 * 2;
  _22 = _18 + _21;
  FilterPtr_50 = Com_gConfigPtr.174_17 + _22;
  # DEBUG FilterPtr => FilterPtr_50
  # DEBUG BEGIN_STMT
  maskOrMin_51 = FilterPtr_50->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_51
  # DEBUG BEGIN_STMT
  XOrMax_52 = FilterPtr_50->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_52
  # DEBUG BEGIN_STMT
  switch (_1) <default: <L26> [20.00%], case 3: <L4> [20.00%], case 4: <L3> [20.00%], case 5: <L10> [20.00%], case 6: <L5> [20.00%]>

  <bb 6> [local count: 71575630]:
<L3>:
  # DEBUG BEGIN_STMT
  _23 = NewVal_42 & maskOrMin_51;
  _24 = _23 == XOrMax_52;
  FilterResult_57 = (boolean) _24;
  # DEBUG FilterResult => FilterResult_57
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 7> [local count: 71575630]:
<L4>:
  # DEBUG BEGIN_STMT
  _25 = NewVal_42 & maskOrMin_51;
  _26 = _25 != XOrMax_52;
  FilterResult_58 = (boolean) _26;
  # DEBUG FilterResult => FilterResult_58
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 8> [local count: 71575630]:
<L5>:
  # DEBUG BEGIN_STMT
  if (NewVal_42 >= maskOrMin_51)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 35787815]:
  if (NewVal_42 <= XOrMax_52)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 53681723]:

  <bb 11> [local count: 71575630]:
  # iftmp.176_35 = PHI <1(9), 0(10)>
  FilterResult_54 = (boolean) iftmp.176_35;
  # DEBUG FilterResult => FilterResult_54
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 12> [local count: 71575630]:
<L10>:
  # DEBUG BEGIN_STMT
  if (NewVal_42 < maskOrMin_51)
    goto <bb 15>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 35787815]:
  if (NewVal_42 > XOrMax_52)
    goto <bb 15>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 17893908]:

  <bb 15> [local count: 71575630]:
  # iftmp.177_36 = PHI <1(13), 0(14), 1(12)>
  FilterResult_56 = (boolean) iftmp.177_36;
  # DEBUG FilterResult => FilterResult_56
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 1002058821]:
  # FilterResult_34 = PHI <FilterResult_49(3), FilterResult_45(4), FilterResult_58(7), FilterResult_57(6), FilterResult_54(11), FilterResult_56(15)>
<L24>:
  # DEBUG FilterResult => FilterResult_34
  # DEBUG BEGIN_STMT
  if (FilterResult_34 == 1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 17> [local count: 340699999]:
  _27 = ComFilterPropPtr_43(D)->ComFilterSignalValueRef;
  if (_27 != 65535)
    goto <bb 18>; [66.00%]
  else
    goto <bb 19>; [34.00%]

  <bb 18> [local count: 224861999]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.178_28 = Com_gDataMemPtr;
  Com_gConfigPtr.179_29 = Com_gConfigPtr;
  _30 = Com_gConfigPtr.179_29->ComBufferBaseUInt8;
  _31 = (sizetype) _30;
  # DEBUG bufferBaseUint8 => Com_gDataMemPtr.178_28 + _31
  # DEBUG BEGIN_STMT
  _32 = (sizetype) _27;
  _53 = _31 + _32;
  _33 = Com_gDataMemPtr.178_28 + _53;
  *_33 = NewVal_42;

  <bb 19> [local count: 1073634451]:
  # FilterResult_55 = PHI <FilterResult_34(16), 1(17), 1(18), 0(5)>
<L26>:
  # DEBUG FilterResult => NULL
  # DEBUG BEGIN_STMT
  return FilterResult_55;

}



;; Function Com_EB_FilterUint16 (Com_EB_FilterUint16, funcdef_no=215, decl_uid=6328, cgraph_uid=216, symbol_order=220)

Com_EB_FilterUint16 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint16 XOrMax;
  uint16 maskOrMin;
  const struct ComFilter16BitMaskXMinMaxType * const FilterPtr;
  uint16 oldVal;
  uint16 mask;
  const ComFilter16BitMaskType * const maskPtr;
  uint16 NewVal;
  boolean FilterResult;
  unsigned char _1;
  const struct Com_ConfigType * Com_gConfigPtr.180_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  uint8 * Com_gDataMemPtr.182_8;
  short unsigned int _9;
  sizetype _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  uint16 * _14;
  short unsigned int _15;
  short unsigned int _16;
  _Bool _17;
  short unsigned int _18;
  const struct Com_ConfigType * Com_gConfigPtr.184_19;
  long unsigned int _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  sizetype _24;
  short unsigned int _25;
  _Bool _26;
  short unsigned int _27;
  _Bool _28;
  short unsigned int _29;
  uint8 * Com_gDataMemPtr.188_30;
  const struct Com_ConfigType * Com_gConfigPtr.189_31;
  short unsigned int _32;
  sizetype _33;
  unsigned int _34;
  unsigned int _35;
  uint16 * _36;
  int iftmp.186_38;
  int iftmp.187_39;
  sizetype _42;
  sizetype _56;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  NewVal_45 = MEM[(const uint16 *)SignalDataPtr_44(D)];
  # DEBUG NewVal => NewVal_45
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_46(D)->ComFilterType;
  switch (_1) <default: <L2> [33.33%], case 2: <L0> [33.33%], case 7: <L1> [33.33%]>

  <bb 3> [local count: 357878150]:
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.180_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.180_2->ComFilter16BitMaskRef;
  _4 = ComFilterPropPtr_46(D)->ComFilterRef;
  _5 = (unsigned int) _4;
  _6 = _5 * 2;
  _7 = _3 + _6;
  maskPtr_49 = Com_gConfigPtr.180_2 + _7;
  # DEBUG maskPtr => maskPtr_49
  # DEBUG BEGIN_STMT
  mask_50 = *maskPtr_49;
  # DEBUG mask => mask_50
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.182_8 = Com_gDataMemPtr;
  _9 = Com_gConfigPtr.180_2->ComBufferBaseUInt16;
  _10 = (sizetype) _9;
  # DEBUG bufferBaseUint16 => Com_gDataMemPtr.182_8 + _10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = ComFilterPropPtr_46(D)->ComFilterSignalValueRef;
  _12 = (unsigned int) _11;
  _13 = _12 * 2;
  _42 = _10 + _13;
  _14 = Com_gDataMemPtr.182_8 + _42;
  oldVal_51 = *_14;
  # DEBUG oldVal => oldVal_51
  # DEBUG BEGIN_STMT
  _15 = NewVal_45 ^ oldVal_51;
  _16 = _15 & mask_50;
  _17 = _16 != 0;
  FilterResult_52 = (boolean) _17;
  # DEBUG FilterResult => FilterResult_52
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  _18 = ComFilterPropPtr_46(D)->ComFilterRef;
  FilterResult_48 = Com_EB_FilterOneEveryN (_18);
  # DEBUG FilterResult => FilterResult_48
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 5> [local count: 357878150]:
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.184_19 = Com_gConfigPtr;
  _20 = Com_gConfigPtr.184_19->ComFilter16BitMaskXMinMaxRef;
  _21 = ComFilterPropPtr_46(D)->ComFilterRef;
  _22 = (unsigned int) _21;
  _23 = _22 * 4;
  _24 = _20 + _23;
  FilterPtr_53 = Com_gConfigPtr.184_19 + _24;
  # DEBUG FilterPtr => FilterPtr_53
  # DEBUG BEGIN_STMT
  maskOrMin_54 = FilterPtr_53->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_54
  # DEBUG BEGIN_STMT
  XOrMax_55 = FilterPtr_53->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_55
  # DEBUG BEGIN_STMT
  switch (_1) <default: <L26> [20.00%], case 3: <L4> [20.00%], case 4: <L3> [20.00%], case 5: <L10> [20.00%], case 6: <L5> [20.00%]>

  <bb 6> [local count: 71575630]:
<L3>:
  # DEBUG BEGIN_STMT
  _25 = NewVal_45 & maskOrMin_54;
  _26 = _25 == XOrMax_55;
  FilterResult_60 = (boolean) _26;
  # DEBUG FilterResult => FilterResult_60
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 7> [local count: 71575630]:
<L4>:
  # DEBUG BEGIN_STMT
  _27 = NewVal_45 & maskOrMin_54;
  _28 = _27 != XOrMax_55;
  FilterResult_61 = (boolean) _28;
  # DEBUG FilterResult => FilterResult_61
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 8> [local count: 71575630]:
<L5>:
  # DEBUG BEGIN_STMT
  if (NewVal_45 >= maskOrMin_54)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 35787815]:
  if (NewVal_45 <= XOrMax_55)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 53681723]:

  <bb 11> [local count: 71575630]:
  # iftmp.186_38 = PHI <1(9), 0(10)>
  FilterResult_57 = (boolean) iftmp.186_38;
  # DEBUG FilterResult => FilterResult_57
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 12> [local count: 71575630]:
<L10>:
  # DEBUG BEGIN_STMT
  if (NewVal_45 < maskOrMin_54)
    goto <bb 15>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 35787815]:
  if (NewVal_45 > XOrMax_55)
    goto <bb 15>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 17893908]:

  <bb 15> [local count: 71575630]:
  # iftmp.187_39 = PHI <1(13), 0(14), 1(12)>
  FilterResult_59 = (boolean) iftmp.187_39;
  # DEBUG FilterResult => FilterResult_59
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 1002058821]:
  # FilterResult_37 = PHI <FilterResult_52(3), FilterResult_48(4), FilterResult_61(7), FilterResult_60(6), FilterResult_57(11), FilterResult_59(15)>
<L24>:
  # DEBUG FilterResult => FilterResult_37
  # DEBUG BEGIN_STMT
  if (FilterResult_37 == 1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 17> [local count: 340699999]:
  _29 = ComFilterPropPtr_46(D)->ComFilterSignalValueRef;
  if (_29 != 65535)
    goto <bb 18>; [66.00%]
  else
    goto <bb 19>; [34.00%]

  <bb 18> [local count: 224861999]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.188_30 = Com_gDataMemPtr;
  Com_gConfigPtr.189_31 = Com_gConfigPtr;
  _32 = Com_gConfigPtr.189_31->ComBufferBaseUInt16;
  _33 = (sizetype) _32;
  # DEBUG bufferBaseUint16 => Com_gDataMemPtr.188_30 + _33
  # DEBUG BEGIN_STMT
  _34 = (unsigned int) _29;
  _35 = _34 * 2;
  _56 = _33 + _35;
  _36 = Com_gDataMemPtr.188_30 + _56;
  *_36 = NewVal_45;

  <bb 19> [local count: 1073634451]:
  # FilterResult_58 = PHI <FilterResult_37(16), 1(17), 1(18), 0(5)>
<L26>:
  # DEBUG FilterResult => NULL
  # DEBUG BEGIN_STMT
  return FilterResult_58;

}



;; Function Com_EB_FilterUint32 (Com_EB_FilterUint32, funcdef_no=217, decl_uid=6334, cgraph_uid=218, symbol_order=222)

Com_EB_FilterUint32 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint32 XOrMax;
  uint32 maskOrMin;
  const struct ComFilter32BitMaskXMinMaxType * const FilterPtr;
  uint32 oldVal;
  uint32 mask;
  const ComFilter32BitMaskType * const maskPtr;
  uint32 NewVal;
  boolean FilterResult;
  unsigned char _1;
  const struct Com_ConfigType * Com_gConfigPtr.190_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  uint8 * Com_gDataMemPtr.192_8;
  short unsigned int _9;
  sizetype _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  uint32 * _14;
  long unsigned int _15;
  long unsigned int _16;
  _Bool _17;
  short unsigned int _18;
  const struct Com_ConfigType * Com_gConfigPtr.194_19;
  long unsigned int _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  sizetype _24;
  long unsigned int _25;
  _Bool _26;
  long unsigned int _27;
  _Bool _28;
  short unsigned int _29;
  uint8 * Com_gDataMemPtr.198_30;
  const struct Com_ConfigType * Com_gConfigPtr.199_31;
  short unsigned int _32;
  sizetype _33;
  unsigned int _34;
  unsigned int _35;
  uint32 * _36;
  int iftmp.196_38;
  int iftmp.197_39;
  sizetype _42;
  sizetype _56;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  NewVal_45 = MEM[(const uint32 *)SignalDataPtr_44(D)];
  # DEBUG NewVal => NewVal_45
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_46(D)->ComFilterType;
  switch (_1) <default: <L2> [33.33%], case 2: <L0> [33.33%], case 7: <L1> [33.33%]>

  <bb 3> [local count: 357878150]:
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.190_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.190_2->ComFilter32BitMaskRef;
  _4 = ComFilterPropPtr_46(D)->ComFilterRef;
  _5 = (unsigned int) _4;
  _6 = _5 * 4;
  _7 = _3 + _6;
  maskPtr_49 = Com_gConfigPtr.190_2 + _7;
  # DEBUG maskPtr => maskPtr_49
  # DEBUG BEGIN_STMT
  mask_50 = *maskPtr_49;
  # DEBUG mask => mask_50
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.192_8 = Com_gDataMemPtr;
  _9 = Com_gConfigPtr.190_2->ComBufferBaseUInt32;
  _10 = (sizetype) _9;
  # DEBUG bufferBaseUint32 => Com_gDataMemPtr.192_8 + _10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = ComFilterPropPtr_46(D)->ComFilterSignalValueRef;
  _12 = (unsigned int) _11;
  _13 = _12 * 4;
  _42 = _10 + _13;
  _14 = Com_gDataMemPtr.192_8 + _42;
  oldVal_51 = *_14;
  # DEBUG oldVal => oldVal_51
  # DEBUG BEGIN_STMT
  _15 = NewVal_45 ^ oldVal_51;
  _16 = _15 & mask_50;
  _17 = _16 != 0;
  FilterResult_52 = (boolean) _17;
  # DEBUG FilterResult => FilterResult_52
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  _18 = ComFilterPropPtr_46(D)->ComFilterRef;
  FilterResult_48 = Com_EB_FilterOneEveryN (_18);
  # DEBUG FilterResult => FilterResult_48
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 5> [local count: 357878150]:
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.194_19 = Com_gConfigPtr;
  _20 = Com_gConfigPtr.194_19->ComFilter32BitMaskXMinMaxRef;
  _21 = ComFilterPropPtr_46(D)->ComFilterRef;
  _22 = (unsigned int) _21;
  _23 = _22 * 8;
  _24 = _20 + _23;
  FilterPtr_53 = Com_gConfigPtr.194_19 + _24;
  # DEBUG FilterPtr => FilterPtr_53
  # DEBUG BEGIN_STMT
  maskOrMin_54 = FilterPtr_53->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_54
  # DEBUG BEGIN_STMT
  XOrMax_55 = FilterPtr_53->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_55
  # DEBUG BEGIN_STMT
  switch (_1) <default: <L26> [20.00%], case 3: <L4> [20.00%], case 4: <L3> [20.00%], case 5: <L10> [20.00%], case 6: <L5> [20.00%]>

  <bb 6> [local count: 71575630]:
<L3>:
  # DEBUG BEGIN_STMT
  _25 = NewVal_45 & maskOrMin_54;
  _26 = _25 == XOrMax_55;
  FilterResult_60 = (boolean) _26;
  # DEBUG FilterResult => FilterResult_60
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 7> [local count: 71575630]:
<L4>:
  # DEBUG BEGIN_STMT
  _27 = NewVal_45 & maskOrMin_54;
  _28 = _27 != XOrMax_55;
  FilterResult_61 = (boolean) _28;
  # DEBUG FilterResult => FilterResult_61
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 8> [local count: 71575630]:
<L5>:
  # DEBUG BEGIN_STMT
  if (NewVal_45 >= maskOrMin_54)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 35787815]:
  if (NewVal_45 <= XOrMax_55)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 53681723]:

  <bb 11> [local count: 71575630]:
  # iftmp.196_38 = PHI <1(9), 0(10)>
  FilterResult_57 = (boolean) iftmp.196_38;
  # DEBUG FilterResult => FilterResult_57
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 12> [local count: 71575630]:
<L10>:
  # DEBUG BEGIN_STMT
  if (NewVal_45 < maskOrMin_54)
    goto <bb 15>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 35787815]:
  if (NewVal_45 > XOrMax_55)
    goto <bb 15>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 17893908]:

  <bb 15> [local count: 71575630]:
  # iftmp.197_39 = PHI <1(13), 0(14), 1(12)>
  FilterResult_59 = (boolean) iftmp.197_39;
  # DEBUG FilterResult => FilterResult_59
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 1002058821]:
  # FilterResult_37 = PHI <FilterResult_52(3), FilterResult_48(4), FilterResult_61(7), FilterResult_60(6), FilterResult_57(11), FilterResult_59(15)>
<L24>:
  # DEBUG FilterResult => FilterResult_37
  # DEBUG BEGIN_STMT
  if (FilterResult_37 == 1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 17> [local count: 340699999]:
  _29 = ComFilterPropPtr_46(D)->ComFilterSignalValueRef;
  if (_29 != 65535)
    goto <bb 18>; [66.00%]
  else
    goto <bb 19>; [34.00%]

  <bb 18> [local count: 224861999]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.198_30 = Com_gDataMemPtr;
  Com_gConfigPtr.199_31 = Com_gConfigPtr;
  _32 = Com_gConfigPtr.199_31->ComBufferBaseUInt32;
  _33 = (sizetype) _32;
  # DEBUG bufferBaseUint32 => Com_gDataMemPtr.198_30 + _33
  # DEBUG BEGIN_STMT
  _34 = (unsigned int) _29;
  _35 = _34 * 4;
  _56 = _33 + _35;
  _36 = Com_gDataMemPtr.198_30 + _56;
  *_36 = NewVal_45;

  <bb 19> [local count: 1073634451]:
  # FilterResult_58 = PHI <FilterResult_37(16), 1(17), 1(18), 0(5)>
<L26>:
  # DEBUG FilterResult => NULL
  # DEBUG BEGIN_STMT
  return FilterResult_58;

}



;; Function Com_EB_FilterSint8 (Com_EB_FilterSint8, funcdef_no=214, decl_uid=6325, cgraph_uid=215, symbol_order=219)

Com_EB_FilterSint8 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint8 XOrMax;
  uint8 maskOrMin;
  const struct ComFilter8BitMaskXMinMaxType * const FilterPtr;
  uint8 mask;
  const ComFilter8BitMaskType * const maskPtr;
  sint8 NewVal;
  boolean FilterResult;
  unsigned char _1;
  const struct Com_ConfigType * Com_gConfigPtr.200_2;
  long unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  sizetype _6;
  uint8 * Com_gDataMemPtr.202_7;
  short unsigned int _8;
  sizetype _9;
  short unsigned int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char NewVal.204_14;
  sizetype _15;
  unsigned char _16;
  unsigned char _17;
  _Bool _18;
  short unsigned int _19;
  const struct Com_ConfigType * Com_gConfigPtr.206_20;
  long unsigned int _21;
  short unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  sizetype _25;
  unsigned char NewVal.208_26;
  unsigned char _27;
  _Bool _28;
  unsigned char NewVal.209_29;
  unsigned char _30;
  _Bool _31;
  signed char maskOrMin.211_32;
  signed char XOrMax.212_33;
  signed char maskOrMin.214_34;
  signed char XOrMax.215_35;
  short unsigned int _36;
  uint8 * Com_gDataMemPtr.216_37;
  const struct Com_ConfigType * Com_gConfigPtr.217_38;
  short unsigned int _39;
  sizetype _40;
  sizetype _41;
  sint8 * _42;
  int iftmp.210_44;
  int iftmp.213_45;
  sizetype _48;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  NewVal_51 = MEM[(const sint8 *)SignalDataPtr_50(D)];
  # DEBUG NewVal => NewVal_51
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_52(D)->ComFilterType;
  switch (_1) <default: <L2> [33.33%], case 2: <L0> [33.33%], case 7: <L1> [33.33%]>

  <bb 3> [local count: 357878150]:
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.200_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.200_2->ComFilter8BitMaskRef;
  _4 = ComFilterPropPtr_52(D)->ComFilterRef;
  _5 = (sizetype) _4;
  _6 = _3 + _5;
  maskPtr_55 = Com_gConfigPtr.200_2 + _6;
  # DEBUG maskPtr => maskPtr_55
  # DEBUG BEGIN_STMT
  mask_56 = *maskPtr_55;
  # DEBUG mask => mask_56
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.202_7 = Com_gDataMemPtr;
  _8 = Com_gConfigPtr.200_2->ComBufferBaseSInt8;
  _9 = (sizetype) _8;
  # DEBUG bufferBaseSint8 => Com_gDataMemPtr.202_7 + _9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = ComFilterPropPtr_52(D)->ComFilterSignalValueRef;
  _11 = (sizetype) _10;
  _48 = _9 + _11;
  _12 = Com_gDataMemPtr.202_7 + _48;
  _13 = *_12;
  # DEBUG oldVal => (sint8) _13
  # DEBUG BEGIN_STMT
  NewVal.204_14 = (unsigned char) NewVal_51;
  _16 = _13 ^ NewVal.204_14;
  _17 = _16 & mask_56;
  _18 = _17 != 0;
  FilterResult_57 = (boolean) _18;
  # DEBUG FilterResult => FilterResult_57
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  _19 = ComFilterPropPtr_52(D)->ComFilterRef;
  FilterResult_54 = Com_EB_FilterOneEveryN (_19);
  # DEBUG FilterResult => FilterResult_54
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 5> [local count: 357878150]:
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.206_20 = Com_gConfigPtr;
  _21 = Com_gConfigPtr.206_20->ComFilter8BitMaskXMinMaxRef;
  _22 = ComFilterPropPtr_52(D)->ComFilterRef;
  _23 = (unsigned int) _22;
  _24 = _23 * 2;
  _25 = _21 + _24;
  FilterPtr_58 = Com_gConfigPtr.206_20 + _25;
  # DEBUG FilterPtr => FilterPtr_58
  # DEBUG BEGIN_STMT
  maskOrMin_59 = FilterPtr_58->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_59
  # DEBUG BEGIN_STMT
  XOrMax_60 = FilterPtr_58->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_60
  # DEBUG BEGIN_STMT
  switch (_1) <default: <L26> [20.00%], case 3: <L4> [20.00%], case 4: <L3> [20.00%], case 5: <L10> [20.00%], case 6: <L5> [20.00%]>

  <bb 6> [local count: 71575630]:
<L3>:
  # DEBUG BEGIN_STMT
  NewVal.208_26 = (unsigned char) NewVal_51;
  _27 = NewVal.208_26 & maskOrMin_59;
  _28 = _27 == XOrMax_60;
  FilterResult_64 = (boolean) _28;
  # DEBUG FilterResult => FilterResult_64
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 7> [local count: 71575630]:
<L4>:
  # DEBUG BEGIN_STMT
  NewVal.209_29 = (unsigned char) NewVal_51;
  _30 = NewVal.209_29 & maskOrMin_59;
  _31 = _30 != XOrMax_60;
  FilterResult_65 = (boolean) _31;
  # DEBUG FilterResult => FilterResult_65
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 8> [local count: 71575630]:
<L5>:
  # DEBUG BEGIN_STMT
  maskOrMin.211_32 = (signed char) maskOrMin_59;
  if (maskOrMin.211_32 <= NewVal_51)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 35787815]:
  XOrMax.212_33 = (signed char) XOrMax_60;
  if (XOrMax.212_33 >= NewVal_51)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 53681723]:

  <bb 11> [local count: 71575630]:
  # iftmp.210_44 = PHI <1(9), 0(10)>
  FilterResult_61 = (boolean) iftmp.210_44;
  # DEBUG FilterResult => FilterResult_61
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 12> [local count: 71575630]:
<L10>:
  # DEBUG BEGIN_STMT
  maskOrMin.214_34 = (signed char) maskOrMin_59;
  if (maskOrMin.214_34 > NewVal_51)
    goto <bb 15>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 35787815]:
  XOrMax.215_35 = (signed char) XOrMax_60;
  if (XOrMax.215_35 < NewVal_51)
    goto <bb 15>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 17893908]:

  <bb 15> [local count: 71575630]:
  # iftmp.213_45 = PHI <1(13), 0(14), 1(12)>
  FilterResult_63 = (boolean) iftmp.213_45;
  # DEBUG FilterResult => FilterResult_63
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 1002058821]:
  # FilterResult_43 = PHI <FilterResult_57(3), FilterResult_54(4), FilterResult_65(7), FilterResult_64(6), FilterResult_61(11), FilterResult_63(15)>
<L24>:
  # DEBUG FilterResult => FilterResult_43
  # DEBUG BEGIN_STMT
  if (FilterResult_43 == 1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 17> [local count: 340699999]:
  _36 = ComFilterPropPtr_52(D)->ComFilterSignalValueRef;
  if (_36 != 65535)
    goto <bb 18>; [66.00%]
  else
    goto <bb 19>; [34.00%]

  <bb 18> [local count: 224861999]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.216_37 = Com_gDataMemPtr;
  Com_gConfigPtr.217_38 = Com_gConfigPtr;
  _39 = Com_gConfigPtr.217_38->ComBufferBaseSInt8;
  _40 = (sizetype) _39;
  # DEBUG bufferBaseSint8 => Com_gDataMemPtr.216_37 + _40
  # DEBUG BEGIN_STMT
  _41 = (sizetype) _36;
  _15 = _40 + _41;
  _42 = Com_gDataMemPtr.216_37 + _15;
  *_42 = NewVal_51;

  <bb 19> [local count: 1073634451]:
  # FilterResult_62 = PHI <FilterResult_43(16), 1(17), 1(18), 0(5)>
<L26>:
  # DEBUG FilterResult => NULL
  # DEBUG BEGIN_STMT
  return FilterResult_62;

}



;; Function Com_EB_FilterSint16 (Com_EB_FilterSint16, funcdef_no=216, decl_uid=6331, cgraph_uid=217, symbol_order=221)

Com_EB_FilterSint16 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint16 XOrMax;
  uint16 maskOrMin;
  const struct ComFilter16BitMaskXMinMaxType * const FilterPtr;
  uint16 mask;
  const ComFilter16BitMaskType * const maskPtr;
  sint16 NewVal;
  boolean FilterResult;
  unsigned char _1;
  const struct Com_ConfigType * Com_gConfigPtr.218_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  uint8 * Com_gDataMemPtr.220_8;
  short unsigned int _9;
  sizetype _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  uint16 * _14;
  short unsigned int _15;
  short unsigned int NewVal.222_16;
  sizetype _17;
  short unsigned int _18;
  short unsigned int _19;
  _Bool _20;
  short unsigned int _21;
  const struct Com_ConfigType * Com_gConfigPtr.224_22;
  long unsigned int _23;
  short unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  sizetype _27;
  short unsigned int NewVal.226_28;
  short unsigned int _29;
  _Bool _30;
  short unsigned int NewVal.227_31;
  short unsigned int _32;
  _Bool _33;
  short int maskOrMin.229_34;
  short int XOrMax.230_35;
  short int maskOrMin.232_36;
  short int XOrMax.233_37;
  short unsigned int _38;
  uint8 * Com_gDataMemPtr.234_39;
  const struct Com_ConfigType * Com_gConfigPtr.235_40;
  short unsigned int _41;
  sizetype _42;
  unsigned int _43;
  unsigned int _44;
  sint16 * _45;
  int iftmp.228_47;
  int iftmp.231_48;
  sizetype _51;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  NewVal_54 = MEM[(const sint16 *)SignalDataPtr_53(D)];
  # DEBUG NewVal => NewVal_54
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_55(D)->ComFilterType;
  switch (_1) <default: <L2> [33.33%], case 2: <L0> [33.33%], case 7: <L1> [33.33%]>

  <bb 3> [local count: 357878150]:
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.218_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.218_2->ComFilter16BitMaskRef;
  _4 = ComFilterPropPtr_55(D)->ComFilterRef;
  _5 = (unsigned int) _4;
  _6 = _5 * 2;
  _7 = _3 + _6;
  maskPtr_58 = Com_gConfigPtr.218_2 + _7;
  # DEBUG maskPtr => maskPtr_58
  # DEBUG BEGIN_STMT
  mask_59 = *maskPtr_58;
  # DEBUG mask => mask_59
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.220_8 = Com_gDataMemPtr;
  _9 = Com_gConfigPtr.218_2->ComBufferBaseSInt16;
  _10 = (sizetype) _9;
  # DEBUG bufferBaseSint16 => Com_gDataMemPtr.220_8 + _10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = ComFilterPropPtr_55(D)->ComFilterSignalValueRef;
  _12 = (unsigned int) _11;
  _13 = _12 * 2;
  _51 = _10 + _13;
  _14 = Com_gDataMemPtr.220_8 + _51;
  _15 = *_14;
  # DEBUG oldVal => (sint16) _15
  # DEBUG BEGIN_STMT
  NewVal.222_16 = (short unsigned int) NewVal_54;
  _18 = _15 ^ NewVal.222_16;
  _19 = _18 & mask_59;
  _20 = _19 != 0;
  FilterResult_60 = (boolean) _20;
  # DEBUG FilterResult => FilterResult_60
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  _21 = ComFilterPropPtr_55(D)->ComFilterRef;
  FilterResult_57 = Com_EB_FilterOneEveryN (_21);
  # DEBUG FilterResult => FilterResult_57
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 5> [local count: 357878150]:
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.224_22 = Com_gConfigPtr;
  _23 = Com_gConfigPtr.224_22->ComFilter16BitMaskXMinMaxRef;
  _24 = ComFilterPropPtr_55(D)->ComFilterRef;
  _25 = (unsigned int) _24;
  _26 = _25 * 4;
  _27 = _23 + _26;
  FilterPtr_61 = Com_gConfigPtr.224_22 + _27;
  # DEBUG FilterPtr => FilterPtr_61
  # DEBUG BEGIN_STMT
  maskOrMin_62 = FilterPtr_61->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_62
  # DEBUG BEGIN_STMT
  XOrMax_63 = FilterPtr_61->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_63
  # DEBUG BEGIN_STMT
  switch (_1) <default: <L26> [20.00%], case 3: <L4> [20.00%], case 4: <L3> [20.00%], case 5: <L10> [20.00%], case 6: <L5> [20.00%]>

  <bb 6> [local count: 71575630]:
<L3>:
  # DEBUG BEGIN_STMT
  NewVal.226_28 = (short unsigned int) NewVal_54;
  _29 = NewVal.226_28 & maskOrMin_62;
  _30 = _29 == XOrMax_63;
  FilterResult_67 = (boolean) _30;
  # DEBUG FilterResult => FilterResult_67
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 7> [local count: 71575630]:
<L4>:
  # DEBUG BEGIN_STMT
  NewVal.227_31 = (short unsigned int) NewVal_54;
  _32 = NewVal.227_31 & maskOrMin_62;
  _33 = _32 != XOrMax_63;
  FilterResult_68 = (boolean) _33;
  # DEBUG FilterResult => FilterResult_68
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 8> [local count: 71575630]:
<L5>:
  # DEBUG BEGIN_STMT
  maskOrMin.229_34 = (short int) maskOrMin_62;
  if (maskOrMin.229_34 <= NewVal_54)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 35787815]:
  XOrMax.230_35 = (short int) XOrMax_63;
  if (XOrMax.230_35 >= NewVal_54)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 53681723]:

  <bb 11> [local count: 71575630]:
  # iftmp.228_47 = PHI <1(9), 0(10)>
  FilterResult_64 = (boolean) iftmp.228_47;
  # DEBUG FilterResult => FilterResult_64
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 12> [local count: 71575630]:
<L10>:
  # DEBUG BEGIN_STMT
  maskOrMin.232_36 = (short int) maskOrMin_62;
  if (maskOrMin.232_36 > NewVal_54)
    goto <bb 15>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 35787815]:
  XOrMax.233_37 = (short int) XOrMax_63;
  if (XOrMax.233_37 < NewVal_54)
    goto <bb 15>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 17893908]:

  <bb 15> [local count: 71575630]:
  # iftmp.231_48 = PHI <1(13), 0(14), 1(12)>
  FilterResult_66 = (boolean) iftmp.231_48;
  # DEBUG FilterResult => FilterResult_66
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 1002058821]:
  # FilterResult_46 = PHI <FilterResult_60(3), FilterResult_57(4), FilterResult_68(7), FilterResult_67(6), FilterResult_64(11), FilterResult_66(15)>
<L24>:
  # DEBUG FilterResult => FilterResult_46
  # DEBUG BEGIN_STMT
  if (FilterResult_46 == 1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 17> [local count: 340699999]:
  _38 = ComFilterPropPtr_55(D)->ComFilterSignalValueRef;
  if (_38 != 65535)
    goto <bb 18>; [66.00%]
  else
    goto <bb 19>; [34.00%]

  <bb 18> [local count: 224861999]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.234_39 = Com_gDataMemPtr;
  Com_gConfigPtr.235_40 = Com_gConfigPtr;
  _41 = Com_gConfigPtr.235_40->ComBufferBaseSInt16;
  _42 = (sizetype) _41;
  # DEBUG bufferBaseSint16 => Com_gDataMemPtr.234_39 + _42
  # DEBUG BEGIN_STMT
  _43 = (unsigned int) _38;
  _44 = _43 * 2;
  _17 = _42 + _44;
  _45 = Com_gDataMemPtr.234_39 + _17;
  *_45 = NewVal_54;

  <bb 19> [local count: 1073634451]:
  # FilterResult_65 = PHI <FilterResult_46(16), 1(17), 1(18), 0(5)>
<L26>:
  # DEBUG FilterResult => NULL
  # DEBUG BEGIN_STMT
  return FilterResult_65;

}



;; Function Com_EB_FilterSint32 (Com_EB_FilterSint32, funcdef_no=218, decl_uid=6337, cgraph_uid=219, symbol_order=223)

Com_EB_FilterSint32 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint32 XOrMax;
  uint32 maskOrMin;
  const struct ComFilter32BitMaskXMinMaxType * const FilterPtr;
  uint32 mask;
  const ComFilter32BitMaskType * const maskPtr;
  sint32 NewVal;
  boolean FilterResult;
  unsigned char _1;
  const struct Com_ConfigType * Com_gConfigPtr.236_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  uint8 * Com_gDataMemPtr.238_8;
  short unsigned int _9;
  sizetype _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  uint32 * _14;
  long unsigned int _15;
  long unsigned int NewVal.240_16;
  sizetype _17;
  long unsigned int _18;
  long unsigned int _19;
  _Bool _20;
  short unsigned int _21;
  const struct Com_ConfigType * Com_gConfigPtr.242_22;
  long unsigned int _23;
  short unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  sizetype _27;
  long unsigned int NewVal.244_28;
  long unsigned int _29;
  _Bool _30;
  long unsigned int NewVal.245_31;
  long unsigned int _32;
  _Bool _33;
  long int maskOrMin.247_34;
  long int XOrMax.248_35;
  long int maskOrMin.250_36;
  long int XOrMax.251_37;
  short unsigned int _38;
  uint8 * Com_gDataMemPtr.252_39;
  const struct Com_ConfigType * Com_gConfigPtr.253_40;
  short unsigned int _41;
  sizetype _42;
  unsigned int _43;
  unsigned int _44;
  sint32 * _45;
  int iftmp.246_47;
  int iftmp.249_48;
  sizetype _51;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  NewVal_54 = MEM[(const sint32 *)SignalDataPtr_53(D)];
  # DEBUG NewVal => NewVal_54
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_55(D)->ComFilterType;
  switch (_1) <default: <L2> [33.33%], case 2: <L0> [33.33%], case 7: <L1> [33.33%]>

  <bb 3> [local count: 357878150]:
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.236_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.236_2->ComFilter32BitMaskRef;
  _4 = ComFilterPropPtr_55(D)->ComFilterRef;
  _5 = (unsigned int) _4;
  _6 = _5 * 4;
  _7 = _3 + _6;
  maskPtr_58 = Com_gConfigPtr.236_2 + _7;
  # DEBUG maskPtr => maskPtr_58
  # DEBUG BEGIN_STMT
  mask_59 = *maskPtr_58;
  # DEBUG mask => mask_59
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.238_8 = Com_gDataMemPtr;
  _9 = Com_gConfigPtr.236_2->ComBufferBaseSInt32;
  _10 = (sizetype) _9;
  # DEBUG bufferBaseSint32 => Com_gDataMemPtr.238_8 + _10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = ComFilterPropPtr_55(D)->ComFilterSignalValueRef;
  _12 = (unsigned int) _11;
  _13 = _12 * 4;
  _51 = _10 + _13;
  _14 = Com_gDataMemPtr.238_8 + _51;
  _15 = *_14;
  # DEBUG oldVal => (sint32) _15
  # DEBUG BEGIN_STMT
  NewVal.240_16 = (long unsigned int) NewVal_54;
  _18 = _15 ^ NewVal.240_16;
  _19 = _18 & mask_59;
  _20 = _19 != 0;
  FilterResult_60 = (boolean) _20;
  # DEBUG FilterResult => FilterResult_60
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  _21 = ComFilterPropPtr_55(D)->ComFilterRef;
  FilterResult_57 = Com_EB_FilterOneEveryN (_21);
  # DEBUG FilterResult => FilterResult_57
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 5> [local count: 357878150]:
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.242_22 = Com_gConfigPtr;
  _23 = Com_gConfigPtr.242_22->ComFilter32BitMaskXMinMaxRef;
  _24 = ComFilterPropPtr_55(D)->ComFilterRef;
  _25 = (unsigned int) _24;
  _26 = _25 * 8;
  _27 = _23 + _26;
  FilterPtr_61 = Com_gConfigPtr.242_22 + _27;
  # DEBUG FilterPtr => FilterPtr_61
  # DEBUG BEGIN_STMT
  maskOrMin_62 = FilterPtr_61->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_62
  # DEBUG BEGIN_STMT
  XOrMax_63 = FilterPtr_61->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_63
  # DEBUG BEGIN_STMT
  switch (_1) <default: <L26> [20.00%], case 3: <L4> [20.00%], case 4: <L3> [20.00%], case 5: <L10> [20.00%], case 6: <L5> [20.00%]>

  <bb 6> [local count: 71575630]:
<L3>:
  # DEBUG BEGIN_STMT
  NewVal.244_28 = (long unsigned int) NewVal_54;
  _29 = NewVal.244_28 & maskOrMin_62;
  _30 = _29 == XOrMax_63;
  FilterResult_67 = (boolean) _30;
  # DEBUG FilterResult => FilterResult_67
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 7> [local count: 71575630]:
<L4>:
  # DEBUG BEGIN_STMT
  NewVal.245_31 = (long unsigned int) NewVal_54;
  _32 = NewVal.245_31 & maskOrMin_62;
  _33 = _32 != XOrMax_63;
  FilterResult_68 = (boolean) _33;
  # DEBUG FilterResult => FilterResult_68
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 8> [local count: 71575630]:
<L5>:
  # DEBUG BEGIN_STMT
  maskOrMin.247_34 = (long int) maskOrMin_62;
  if (maskOrMin.247_34 <= NewVal_54)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 35787815]:
  XOrMax.248_35 = (long int) XOrMax_63;
  if (XOrMax.248_35 >= NewVal_54)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 53681723]:

  <bb 11> [local count: 71575630]:
  # iftmp.246_47 = PHI <1(9), 0(10)>
  FilterResult_64 = (boolean) iftmp.246_47;
  # DEBUG FilterResult => FilterResult_64
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 12> [local count: 71575630]:
<L10>:
  # DEBUG BEGIN_STMT
  maskOrMin.250_36 = (long int) maskOrMin_62;
  if (maskOrMin.250_36 > NewVal_54)
    goto <bb 15>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 35787815]:
  XOrMax.251_37 = (long int) XOrMax_63;
  if (XOrMax.251_37 < NewVal_54)
    goto <bb 15>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 17893908]:

  <bb 15> [local count: 71575630]:
  # iftmp.249_48 = PHI <1(13), 0(14), 1(12)>
  FilterResult_66 = (boolean) iftmp.249_48;
  # DEBUG FilterResult => FilterResult_66
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 1002058821]:
  # FilterResult_46 = PHI <FilterResult_60(3), FilterResult_57(4), FilterResult_68(7), FilterResult_67(6), FilterResult_64(11), FilterResult_66(15)>
<L24>:
  # DEBUG FilterResult => FilterResult_46
  # DEBUG BEGIN_STMT
  if (FilterResult_46 == 1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 17> [local count: 340699999]:
  _38 = ComFilterPropPtr_55(D)->ComFilterSignalValueRef;
  if (_38 != 65535)
    goto <bb 18>; [66.00%]
  else
    goto <bb 19>; [34.00%]

  <bb 18> [local count: 224861999]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.252_39 = Com_gDataMemPtr;
  Com_gConfigPtr.253_40 = Com_gConfigPtr;
  _41 = Com_gConfigPtr.253_40->ComBufferBaseSInt32;
  _42 = (sizetype) _41;
  # DEBUG bufferBaseSint32 => Com_gDataMemPtr.252_39 + _42
  # DEBUG BEGIN_STMT
  _43 = (unsigned int) _38;
  _44 = _43 * 4;
  _17 = _42 + _44;
  _45 = Com_gDataMemPtr.252_39 + _17;
  *_45 = NewVal_54;

  <bb 19> [local count: 1073634451]:
  # FilterResult_65 = PHI <FilterResult_46(16), 1(17), 1(18), 0(5)>
<L26>:
  # DEBUG FilterResult => NULL
  # DEBUG BEGIN_STMT
  return FilterResult_65;

}



;; Function Com_EB_TxDMQueue (Com_EB_TxDMQueue, funcdef_no=189, decl_uid=6254, cgraph_uid=190, symbol_order=194)

Com_EB_TxDMQueue (ComIPduRefType PduId, ComTxTimeoutFactorType Offset, ComIPduRefType EntryInTxDMcQueue)
{
  ComTxTimeoutFactorType * const TxTimeoutQueueValPtr;
  ComTxTimeoutFactorType globalTime;
  ComTxTimeoutFactorType TimeOut;
  uint8 * Com_gDataMemPtr.267_1;
  const struct Com_ConfigType * Com_gConfigPtr.268_2;
  short unsigned int _3;
  sizetype _4;
  unsigned int _5;
  unsigned int _6;
  const struct Com_ConfigType * Com_gConfigPtr.270_7;
  short unsigned int _8;
  int _9;
  int _10;
  int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  sizetype _27;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.267_1 = Com_gDataMemPtr;
  Com_gConfigPtr.268_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.268_2->ComTxTimeoutQueueBase;
  _4 = (sizetype) _3;
  # DEBUG TxTimeoutQueueBase => Com_gDataMemPtr.267_1 + _4
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) EntryInTxDMcQueue_17(D);
  _6 = _5 * 2;
  _27 = _4 + _6;
  TxTimeoutQueueValPtr_18 = Com_gDataMemPtr.267_1 + _27;
  # DEBUG TxTimeoutQueueValPtr => TxTimeoutQueueValPtr_18
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_20 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_20
  # DEBUG BEGIN_STMT
  TimeOut_22 = globalTime_20 + Offset_21(D);
  # DEBUG TimeOut => TimeOut_22
  # DEBUG BEGIN_STMT
  *TxTimeoutQueueValPtr_18 = TimeOut_22;
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.270_7 = Com_gConfigPtr;
  _8 = Com_gConfigPtr.270_7->ComTxIPduStatusBase;
  _9 = (int) _8;
  _10 = (int) PduId_24(D);
  _11 = _9 + _10;
  _12 = (sizetype) _11;
  _13 = Com_gDataMemPtr.267_1 + _12;
  _14 = *_13;
  _15 = _14 | 32;
  *_13 = _15;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  return;

}



;; Function Com_EB_NTimesSendQueue (Com_EB_NTimesSendQueue, funcdef_no=172, decl_uid=6233, cgraph_uid=173, symbol_order=177)

Com_EB_NTimesSendQueue (ComIPduRefType PduId, ComTxModeRepetitionPeriodFactorType Offset, ComIPduRefType EntryInNTimesQueue)
{
  ComTxModeRepetitionPeriodFactorType * const NTimesQueueValNextTimePtr;
  ComGlobalTimeType globalTime;
  ComTxModeRepetitionPeriodFactorType TimeOut;
  uint8 * Com_gDataMemPtr.309_1;
  const struct Com_ConfigType * Com_gConfigPtr.310_2;
  short unsigned int _3;
  sizetype _4;
  unsigned int _5;
  unsigned int _6;
  const struct Com_ConfigType * Com_gConfigPtr.312_7;
  short unsigned int _8;
  int _9;
  int _10;
  int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned char _15;
  sizetype _27;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.309_1 = Com_gDataMemPtr;
  Com_gConfigPtr.310_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.310_2->ComNTimesQueueBaseNextTime;
  _4 = (sizetype) _3;
  # DEBUG NTimesQueueBaseNextTimeBase => Com_gDataMemPtr.309_1 + _4
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) EntryInNTimesQueue_17(D);
  _6 = _5 * 2;
  _27 = _4 + _6;
  NTimesQueueValNextTimePtr_18 = Com_gDataMemPtr.309_1 + _27;
  # DEBUG NTimesQueueValNextTimePtr => NTimesQueueValNextTimePtr_18
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_20 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_20
  # DEBUG BEGIN_STMT
  TimeOut_22 = globalTime_20 + Offset_21(D);
  # DEBUG TimeOut => TimeOut_22
  # DEBUG BEGIN_STMT
  *NTimesQueueValNextTimePtr_18 = TimeOut_22;
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.312_7 = Com_gConfigPtr;
  _8 = Com_gConfigPtr.312_7->ComTxIPduStatusBase;
  _9 = (int) _8;
  _10 = (int) PduId_24(D);
  _11 = _9 + _10;
  _12 = (sizetype) _11;
  _13 = Com_gDataMemPtr.309_1 + _12;
  _14 = *_13;
  _15 = _14 | 8;
  *_13 = _15;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_PeriodicSendQueue (Com_EB_PeriodicSendQueue, funcdef_no=174, decl_uid=6238, cgraph_uid=175, symbol_order=179)

Com_EB_PeriodicSendQueue (Com_PeriodicSendNextDueTimeType Offset, ComIPduRefType EntryInPeriodicQueue)
{
  Com_PeriodicSendNextDueTimeType * const PeriodicQueueValPtr;
  Com_PeriodicSendNextDueTimeType globalTime;
  Com_PeriodicSendNextDueTimeType TimeOut;
  uint8 * Com_gDataMemPtr.476_1;
  const struct Com_ConfigType * Com_gConfigPtr.477_2;
  short unsigned int _3;
  sizetype _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.476_1 = Com_gDataMemPtr;
  Com_gConfigPtr.477_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.477_2->ComPeriodicQueueBase;
  _4 = (sizetype) _3;
  # DEBUG PeriodicQueueBase => Com_gDataMemPtr.476_1 + _4
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) EntryInPeriodicQueue_8(D);
  _6 = _5 * 2;
  _16 = _4 + _6;
  PeriodicQueueValPtr_9 = Com_gDataMemPtr.476_1 + _16;
  # DEBUG PeriodicQueueValPtr => PeriodicQueueValPtr_9
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_11 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_11
  # DEBUG BEGIN_STMT
  TimeOut_13 = globalTime_11 + Offset_12(D);
  # DEBUG TimeOut => TimeOut_13
  # DEBUG BEGIN_STMT
  *PeriodicQueueValPtr_9 = TimeOut_13;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_ZS (Com_EB_Read_ZS, funcdef_no=48, decl_uid=6813, cgraph_uid=49, symbol_order=52)

Com_EB_Read_ZS (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 11, 1);
  # DEBUG BEGIN_STMT
  *retvalPtr_3(D) = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_DET (Com_EB_Read_DET, funcdef_no=47, decl_uid=6808, cgraph_uid=48, symbol_order=51)

Com_EB_Read_DET (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 255, 3);
  # DEBUG BEGIN_STMT
  *retvalPtr_3(D) = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_DET (Com_EB_Write_DET, funcdef_no=141, decl_uid=7699, cgraph_uid=142, symbol_order=146)

Com_EB_Write_DET (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 255, 3);
  # DEBUG BEGIN_STMT
  IntDataPtr_3(D)->SendSigRetval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_AY_EL_E3 (Com_EB_Read_AY_EL_E3, funcdef_no=36, decl_uid=6753, cgraph_uid=37, symbol_order=40)

Com_EB_Read_AY_EL_E3 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 * const valPtr;
  ComSignalDescBitType startbyte;
  sizetype _1;
  short unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  startbyte_6 = Com_EB_ReadPropPtr_5(D)->ComSignalPositionInBit;
  # DEBUG startbyte => startbyte_6
  # DEBUG BEGIN_STMT
  _1 = (sizetype) startbyte_6;
  valPtr_8 = dataPtr_7(D) + _1;
  # DEBUG valPtr => valPtr_8
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_5(D)->ComBitSize;
  _3 = (long unsigned int) _2;
  TS_MemCpy32 (SignalDataPtr_10(D), valPtr_8, _3);
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Read_AY_DL_E3 (Com_EB_Read_AY_DL_E3, funcdef_no=35, decl_uid=6748, cgraph_uid=36, symbol_order=39)

Com_EB_Read_AY_DL_E3 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 * const valPtr;
  ComSignalDescBitType startbyte;
  sizetype _1;
  short unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  startbyte_6 = Com_EB_ReadPropPtr_5(D)->ComSignalPositionInBit;
  # DEBUG startbyte => startbyte_6
  # DEBUG BEGIN_STMT
  _1 = (sizetype) startbyte_6;
  valPtr_8 = dataPtr_7(D) + _1;
  # DEBUG valPtr => valPtr_8
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_5(D)->ComBitSize;
  _3 = (long unsigned int) _2;
  TS_MemCpy32 (SignalDataPtr_9(D), valPtr_8, _3);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_ClearTxUpdateBits (Com_EB_ClearTxUpdateBits, funcdef_no=192, decl_uid=6261, cgraph_uid=193, symbol_order=197)

Com_EB_ClearTxUpdateBits (const struct ComTxIPduType * IPduPtr)
{
  const struct ComTxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType signalGId;
  const struct ComTxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  ComSignalGroupRefType j;
  ComSignalRefType i;
  const struct Com_ConfigType * Com_gConfigPtr.282_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  const ComSignalRefType * _6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  short unsigned int _11;
  short unsigned int _12;
  unsigned char _13;
  uint8 * Com_gDataMemPtr.286_14;
  short unsigned int _15;
  unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  uint8 * _21;
  long unsigned int _22;
  int _23;
  short unsigned int _24;
  int _25;
  short unsigned int _26;
  int _27;
  int _28;
  const struct Com_ConfigType * Com_gConfigPtr.288_29;
  long unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  sizetype _33;
  const ComSignalGroupRefType * _34;
  long unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  sizetype _38;
  unsigned char _39;
  unsigned char _40;
  uint8 * Com_gDataMemPtr.292_41;
  short unsigned int _42;
  unsigned int _43;
  short unsigned int _44;
  short unsigned int _45;
  unsigned int _46;
  unsigned int _47;
  uint8 * _48;
  long unsigned int _49;
  int _50;
  short unsigned int _51;
  int _52;
  short unsigned int _53;
  int _54;
  int _55;
  unsigned char _74;
  short unsigned int _75;
  unsigned char _76;
  short unsigned int _77;

  <bb 2> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_64 = IPduPtr_63(D)->ComIPduSignalRefFirst;
  # DEBUG i => i_64
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.282_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.282_1->ComTxIPduSignalListRef;
  _3 = (unsigned int) i_56;
  _4 = _3 * 2;
  _5 = _2 + _4;
  _6 = Com_gConfigPtr.282_1 + _5;
  signalId_70 = *_6;
  # DEBUG signalId => signalId_70
  # DEBUG BEGIN_STMT
  _7 = Com_gConfigPtr.282_1->ComTxSignalRef;
  _8 = (unsigned int) signalId_70;
  _9 = _8 * 26;
  _10 = _7 + _9;
  SignalPtr_71 = Com_gConfigPtr.282_1 + _10;
  # DEBUG SignalPtr => SignalPtr_71
  # DEBUG BEGIN_STMT
  _11 = SignalPtr_71->ComTxSignalFlags;
  _12 = _11 >> 5;
  _13 = (unsigned char) _12;
  _76 = _13 & 1;
  if (_76 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 315357973]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.286_14 = Com_gDataMemPtr;
  _15 = IPduPtr_63(D)->ComIPduValueRef;
  _16 = (unsigned int) _15;
  _17 = SignalPtr_71->ComUpdateBitPositionInBit;
  _18 = _17 >> 3;
  _19 = (unsigned int) _18;
  _20 = _16 + _19;
  _21 = Com_gDataMemPtr.286_14 + _20;
  _77 = _17 & 7;
  _22 = (long unsigned int) _77;
  TS_AtomicClearBit_8 (_21, _22);

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  i_73 = i_56 + 1;
  # DEBUG i => i_73

  <bb 6> [local count: 1073741824]:
  # i_56 = PHI <i_64(2), i_73(5)>
  # DEBUG i => i_56
  # DEBUG BEGIN_STMT
  _23 = (int) i_56;
  _24 = IPduPtr_63(D)->ComIPduSignalRefNum;
  _25 = (int) _24;
  _26 = IPduPtr_63(D)->ComIPduSignalRefFirst;
  _27 = (int) _26;
  _28 = _25 + _27;
  if (_23 < _28)
    goto <bb 3>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  j_65 = IPduPtr_63(D)->ComIPduSignalGroupRefFirst;
  # DEBUG j => j_65
  goto <bb 11>; [100.00%]

  <bb 8> [local count: 955630215]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.288_29 = Com_gConfigPtr;
  _30 = Com_gConfigPtr.288_29->ComTxIPduSignalGroupListRef;
  _31 = (unsigned int) j_57;
  _32 = _31 * 2;
  _33 = _30 + _32;
  _34 = Com_gConfigPtr.288_29 + _33;
  signalGId_66 = *_34;
  # DEBUG signalGId => signalGId_66
  # DEBUG BEGIN_STMT
  _35 = Com_gConfigPtr.288_29->ComTxSignalGroupRef;
  _36 = (unsigned int) signalGId_66;
  _37 = _36 * 32;
  _38 = _35 + _37;
  SignalGPtr_67 = Com_gConfigPtr.288_29 + _38;
  # DEBUG SignalGPtr => SignalGPtr_67
  # DEBUG BEGIN_STMT
  _39 = SignalGPtr_67->ComTxSignalGroupFlags;
  _40 = _39 >> 3;
  _74 = _40 & 1;
  if (_74 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 315357971]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.292_41 = Com_gDataMemPtr;
  _42 = IPduPtr_63(D)->ComIPduValueRef;
  _43 = (unsigned int) _42;
  _44 = SignalGPtr_67->ComUpdateBitPositionInBit;
  _45 = _44 >> 3;
  _46 = (unsigned int) _45;
  _47 = _43 + _46;
  _48 = Com_gDataMemPtr.292_41 + _47;
  _75 = _44 & 7;
  _49 = (long unsigned int) _75;
  TS_AtomicClearBit_8 (_48, _49);

  <bb 10> [local count: 955630215]:
  # DEBUG BEGIN_STMT
  j_69 = j_57 + 1;
  # DEBUG j => j_69

  <bb 11> [local count: 1073741813]:
  # j_57 = PHI <j_65(7), j_69(10)>
  # DEBUG j => j_57
  # DEBUG BEGIN_STMT
  _50 = (int) j_57;
  _51 = IPduPtr_63(D)->ComIPduSignalGroupRefNum;
  _52 = (int) _51;
  _53 = IPduPtr_63(D)->ComIPduSignalGroupRefFirst;
  _54 = (int) _53;
  _55 = _52 + _54;
  if (_50 < _55)
    goto <bb 8>; [89.00%]
  else
    goto <bb 12>; [11.00%]

  <bb 12> [local count: 118111599]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_DisableSignalBasedDMFlag (Com_EB_DisableSignalBasedDMFlag, funcdef_no=168, decl_uid=9132, cgraph_uid=169, symbol_order=173)

Com_EB_DisableSignalBasedDMFlag (const struct ComRxIPduType * IPduPtr, boolean Initialize)
{
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  ComSignalRefType i;
  const struct Com_ConfigType * Com_gConfigPtr.369_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  const ComSignalRefType * _6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  long unsigned int _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  sizetype _15;
  unsigned char _16;
  unsigned char _17;
  uint8 * Com_gDataMemPtr.375_18;
  short unsigned int _19;
  unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  uint8 * _25;
  short unsigned int _26;
  short unsigned int _27;
  short unsigned int _28;
  long unsigned int _29;
  const struct Com_ConfigType * Com_gConfigPtr.378_30;
  short unsigned int _31;
  unsigned int _32;
  short unsigned int _33;
  short unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  uint8 * _37;
  short unsigned int _38;
  short unsigned int _39;
  long unsigned int _40;
  int _41;
  short unsigned int _42;
  int _43;
  short unsigned int _44;
  int _45;
  int _46;
  unsigned char _60;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_52 = IPduPtr_51(D)->ComIPduSignalRefFirst;
  # DEBUG i => i_52
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.369_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.369_1->ComRxIPduSignalListRef;
  _3 = (unsigned int) i_47;
  _4 = _3 * 2;
  _5 = _2 + _4;
  _6 = Com_gConfigPtr.369_1 + _5;
  signalId_53 = *_6;
  # DEBUG signalId => signalId_53
  # DEBUG BEGIN_STMT
  _7 = Com_gConfigPtr.369_1->ComRxSignalRef;
  _8 = (unsigned int) signalId_53;
  _9 = _8 * 20;
  _10 = _7 + _9;
  SignalPtr_54 = Com_gConfigPtr.369_1 + _10;
  # DEBUG SignalPtr => SignalPtr_54
  # DEBUG BEGIN_STMT
  _11 = Com_gConfigPtr.369_1->ComRxSignalExtRef;
  _12 = SignalPtr_54->ComSignalExtRef;
  _13 = (unsigned int) _12;
  _14 = _13 * 14;
  _15 = _11 + _14;
  SignalExtPtr_55 = Com_gConfigPtr.369_1 + _15;
  # DEBUG SignalExtPtr => SignalExtPtr_55
  # DEBUG BEGIN_STMT
  _16 = SignalExtPtr_55->ComRxSignalExtFlags;
  _17 = _16 >> 2;
  _60 = _17 & 1;
  if (_60 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 4> [local count: 315357974]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.375_18 = Com_gDataMemPtr;
  _19 = Com_gConfigPtr.369_1->ComRxTimeoutSignalStatusQueueBase;
  _20 = (unsigned int) _19;
  _21 = SignalExtPtr_55->RxSigDMQueueRef;
  _22 = _21 >> 2;
  _23 = (unsigned int) _22;
  _24 = _20 + _23;
  _25 = Com_gDataMemPtr.375_18 + _24;
  _26 = _21 & 3;
  _27 = _26 * 2;
  _28 = _27 + 1;
  _29 = (long unsigned int) _28;
  TS_AtomicClearBit_8 (_25, _29);
  # DEBUG BEGIN_STMT
  if (Initialize_57(D) == 1)
    goto <bb 5>; [20.24%]
  else
    goto <bb 6>; [79.76%]

  <bb 5> [local count: 63828454]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.378_30 = Com_gConfigPtr;
  _31 = Com_gConfigPtr.378_30->ComRxTimeoutSignalStatusQueueBase;
  _32 = (unsigned int) _31;
  _33 = SignalExtPtr_55->RxSigDMQueueRef;
  _34 = _33 >> 2;
  _35 = (unsigned int) _34;
  _36 = _32 + _35;
  _37 = Com_gDataMemPtr.375_18 + _36;
  _38 = _33 & 3;
  _39 = _38 * 2;
  _40 = (long unsigned int) _39;
  TS_AtomicClearBit_8 (_37, _40);

  <bb 6> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  i_59 = i_47 + 1;
  # DEBUG i => i_59

  <bb 7> [local count: 1073741824]:
  # i_47 = PHI <i_52(2), i_59(6)>
  # DEBUG i => i_47
  # DEBUG BEGIN_STMT
  _41 = (int) i_47;
  _42 = IPduPtr_51(D)->ComIPduSignalWithDMOnly;
  _43 = (int) _42;
  _44 = IPduPtr_51(D)->ComIPduSignalRefFirst;
  _45 = (int) _44;
  _46 = _43 + _45;
  if (_41 < _46)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111601]:
  return;

}



;; Function Com_EB_DisableSignalGroupBasedDMFlag (Com_EB_DisableSignalGroupBasedDMFlag, funcdef_no=169, decl_uid=9135, cgraph_uid=170, symbol_order=174)

Com_EB_DisableSignalGroupBasedDMFlag (const struct ComRxIPduType * IPduPtr, boolean Initialize)
{
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType signalGId;
  ComSignalGroupRefType i;
  const struct Com_ConfigType * Com_gConfigPtr.380_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  const ComSignalGroupRefType * _6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  long unsigned int _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  sizetype _15;
  unsigned char _16;
  unsigned char _17;
  uint8 * Com_gDataMemPtr.386_18;
  short unsigned int _19;
  unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  uint8 * _25;
  short unsigned int _26;
  short unsigned int _27;
  short unsigned int _28;
  long unsigned int _29;
  const struct Com_ConfigType * Com_gConfigPtr.389_30;
  short unsigned int _31;
  unsigned int _32;
  short unsigned int _33;
  short unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  uint8 * _37;
  short unsigned int _38;
  short unsigned int _39;
  long unsigned int _40;
  int _41;
  short unsigned int _42;
  int _43;
  short unsigned int _44;
  int _45;
  int _46;
  unsigned char _60;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_52 = IPduPtr_51(D)->ComIPduSignalGroupRefFirst;
  # DEBUG i => i_52
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.380_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.380_1->ComRxIPduSignalGroupListRef;
  _3 = (unsigned int) i_47;
  _4 = _3 * 2;
  _5 = _2 + _4;
  _6 = Com_gConfigPtr.380_1 + _5;
  signalGId_53 = *_6;
  # DEBUG signalGId => signalGId_53
  # DEBUG BEGIN_STMT
  _7 = Com_gConfigPtr.380_1->ComRxSignalGroupRef;
  _8 = (unsigned int) signalGId_53;
  _9 = _8 * 10;
  _10 = _7 + _9;
  SignalGPtr_54 = Com_gConfigPtr.380_1 + _10;
  # DEBUG SignalGPtr => SignalGPtr_54
  # DEBUG BEGIN_STMT
  _11 = Com_gConfigPtr.380_1->ComRxSignalExtRef;
  _12 = SignalGPtr_54->ComSignalExtRef;
  _13 = (unsigned int) _12;
  _14 = _13 * 14;
  _15 = _11 + _14;
  SignalExtPtr_55 = Com_gConfigPtr.380_1 + _15;
  # DEBUG SignalExtPtr => SignalExtPtr_55
  # DEBUG BEGIN_STMT
  _16 = SignalExtPtr_55->ComRxSignalExtFlags;
  _17 = _16 >> 2;
  _60 = _17 & 1;
  if (_60 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 4> [local count: 315357974]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.386_18 = Com_gDataMemPtr;
  _19 = Com_gConfigPtr.380_1->ComRxDMInvSignalGroupStatusQueueBase;
  _20 = (unsigned int) _19;
  _21 = SignalExtPtr_55->RxSigDMQueueRef;
  _22 = _21 >> 2;
  _23 = (unsigned int) _22;
  _24 = _20 + _23;
  _25 = Com_gDataMemPtr.386_18 + _24;
  _26 = _21 & 3;
  _27 = _26 * 2;
  _28 = _27 + 1;
  _29 = (long unsigned int) _28;
  TS_AtomicClearBit_8 (_25, _29);
  # DEBUG BEGIN_STMT
  if (Initialize_57(D) == 1)
    goto <bb 5>; [20.24%]
  else
    goto <bb 6>; [79.76%]

  <bb 5> [local count: 63828454]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.389_30 = Com_gConfigPtr;
  _31 = Com_gConfigPtr.389_30->ComRxDMInvSignalGroupStatusQueueBase;
  _32 = (unsigned int) _31;
  _33 = SignalExtPtr_55->RxSigDMQueueRef;
  _34 = _33 >> 2;
  _35 = (unsigned int) _34;
  _36 = _32 + _35;
  _37 = Com_gDataMemPtr.386_18 + _36;
  _38 = _33 & 3;
  _39 = _38 * 2;
  _40 = (long unsigned int) _39;
  TS_AtomicClearBit_8 (_37, _40);

  <bb 6> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  i_59 = i_47 + 1;
  # DEBUG i => i_59

  <bb 7> [local count: 1073741824]:
  # i_47 = PHI <i_52(2), i_59(6)>
  # DEBUG i => i_47
  # DEBUG BEGIN_STMT
  _41 = (int) i_47;
  _42 = IPduPtr_51(D)->ComIPduSignalGroupRefNum;
  _43 = (int) _42;
  _44 = IPduPtr_51(D)->ComIPduSignalGroupRefFirst;
  _45 = (int) _44;
  _46 = _43 + _45;
  if (_41 < _46)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111601]:
  return;

}



;; Function Com_EB_Write_BO_EL_DUB_DOC (Com_EB_Write_BO_EL_DUB_DOC, funcdef_no=139, decl_uid=7689, cgraph_uid=140, symbol_order=144)

Com_EB_Write_BO_EL_DUB_DOC (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 bit;
  const uint16 pos;
  const uint8 Val;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  long unsigned int _4;
  sizetype _5;
  uint8 * _6;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Val_11 = MEM[(const uint8 *)SignalDataPtr_10(D)];
  # DEBUG Val => Val_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_12(D)->ComSignalPositionInBit;
  pos_13 = _1 >> 3;
  # DEBUG pos => pos_13
  # DEBUG BEGIN_STMT
  bit_14 = _1 & 7;
  # DEBUG bit => bit_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Val_11 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_13;
  _3 = dataPtr_15(D) + _2;
  _4 = (long unsigned int) bit_14;
  TS_AtomicClearBit_8 (_3, _4);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_13;
  _6 = dataPtr_15(D) + _5;
  _7 = (long unsigned int) bit_14;
  TS_AtomicSetBit_8 (_6, _7);

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_FilterBoolean (Com_EB_FilterBoolean, funcdef_no=212, decl_uid=6319, cgraph_uid=213, symbol_order=217)

Com_EB_FilterBoolean (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint8 * const bufferBaseBool;
  uint8 XOrMax;
  uint8 maskOrMin;
  const struct ComFilter8BitMaskXMinMaxType * const FilterPtr;
  uint8 oldVal;
  uint8 mask;
  const ComFilter8BitMaskType * const maskPtr;
  uint8 NewVal;
  boolean FilterResult;
  unsigned char _1;
  const struct Com_ConfigType * Com_gConfigPtr.157_2;
  long unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  sizetype _6;
  uint8 * Com_gDataMemPtr.159_7;
  short unsigned int _8;
  sizetype _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  int _15;
  unsigned int _16;
  int _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  _Bool _21;
  short unsigned int _22;
  const struct Com_ConfigType * Com_gConfigPtr.161_23;
  long unsigned int _24;
  short unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  sizetype _28;
  unsigned char _29;
  _Bool _30;
  unsigned char _31;
  _Bool _32;
  short unsigned int _33;
  uint8 * Com_gDataMemPtr.163_34;
  const struct Com_ConfigType * Com_gConfigPtr.164_35;
  short unsigned int _36;
  sizetype _37;
  short unsigned int _38;
  sizetype _39;
  uint8 * _40;
  long unsigned int _41;
  short unsigned int _42;
  sizetype _43;
  uint8 * _44;
  long unsigned int _45;
  sizetype _49;
  short unsigned int _68;
  short unsigned int _69;
  short unsigned int _70;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  NewVal_52 = MEM[(const boolean *)SignalDataPtr_51(D)];
  # DEBUG NewVal => NewVal_52
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_53(D)->ComFilterType;
  switch (_1) <default: <L2> [33.33%], case 2: <L0> [33.33%], case 7: <L1> [33.33%]>

  <bb 3> [local count: 357878150]:
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.157_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.157_2->ComFilter8BitMaskRef;
  _4 = ComFilterPropPtr_53(D)->ComFilterRef;
  _5 = (sizetype) _4;
  _6 = _3 + _5;
  maskPtr_56 = Com_gConfigPtr.157_2 + _6;
  # DEBUG maskPtr => maskPtr_56
  # DEBUG BEGIN_STMT
  mask_57 = *maskPtr_56;
  # DEBUG mask => mask_57
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.159_7 = Com_gDataMemPtr;
  _8 = Com_gConfigPtr.157_2->ComBufferBaseBool;
  _9 = (sizetype) _8;
  # DEBUG bufferBaseBool => Com_gDataMemPtr.159_7 + _9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = ComFilterPropPtr_53(D)->ComFilterSignalValueRef;
  _11 = _10 >> 3;
  _12 = (sizetype) _11;
  _49 = _9 + _12;
  _13 = Com_gDataMemPtr.159_7 + _49;
  _14 = *_13;
  _15 = (int) _14;
  _68 = _10 & 7;
  _16 = (unsigned int) _68;
  _17 = _15 >> _16;
  _18 = (unsigned char) _17;
  oldVal_58 = _18 & 1;
  # DEBUG oldVal => oldVal_58
  # DEBUG BEGIN_STMT
  _19 = NewVal_52 ^ oldVal_58;
  _20 = _19 & mask_57;
  _21 = _20 != 0;
  FilterResult_59 = (boolean) _21;
  # DEBUG FilterResult => FilterResult_59
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  _22 = ComFilterPropPtr_53(D)->ComFilterRef;
  FilterResult_55 = Com_EB_FilterOneEveryN (_22);
  # DEBUG FilterResult => FilterResult_55
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 357878150]:
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.161_23 = Com_gConfigPtr;
  _24 = Com_gConfigPtr.161_23->ComFilter8BitMaskXMinMaxRef;
  _25 = ComFilterPropPtr_53(D)->ComFilterRef;
  _26 = (unsigned int) _25;
  _27 = _26 * 2;
  _28 = _24 + _27;
  FilterPtr_60 = Com_gConfigPtr.161_23 + _28;
  # DEBUG FilterPtr => FilterPtr_60
  # DEBUG BEGIN_STMT
  maskOrMin_61 = FilterPtr_60->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_61
  # DEBUG BEGIN_STMT
  XOrMax_62 = FilterPtr_60->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_62
  # DEBUG BEGIN_STMT
  switch (_1) <default: <L19> [33.33%], case 3: <L4> [33.33%], case 4: <L3> [33.33%]>

  <bb 6> [local count: 119280787]:
<L3>:
  # DEBUG BEGIN_STMT
  _29 = NewVal_52 & maskOrMin_61;
  _30 = _29 == XOrMax_62;
  FilterResult_63 = (boolean) _30;
  # DEBUG FilterResult => FilterResult_63
  # DEBUG BEGIN_STMT
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 119280787]:
<L4>:
  # DEBUG BEGIN_STMT
  _31 = NewVal_52 & maskOrMin_61;
  _32 = _31 != XOrMax_62;
  FilterResult_64 = (boolean) _32;
  # DEBUG FilterResult => FilterResult_64
  # DEBUG BEGIN_STMT

  <bb 8> [local count: 954317875]:
  # FilterResult_46 = PHI <FilterResult_59(3), FilterResult_55(4), FilterResult_64(7), FilterResult_63(6)>
<L17>:
  # DEBUG FilterResult => FilterResult_46
  # DEBUG BEGIN_STMT
  if (FilterResult_46 == 1)
    goto <bb 9>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 9> [local count: 324468078]:
  _33 = ComFilterPropPtr_53(D)->ComFilterSignalValueRef;
  if (_33 != 65535)
    goto <bb 10>; [66.00%]
  else
    goto <bb 13>; [34.00%]

  <bb 10> [local count: 214148931]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.163_34 = Com_gDataMemPtr;
  Com_gConfigPtr.164_35 = Com_gConfigPtr;
  _36 = Com_gConfigPtr.164_35->ComBufferBaseBool;
  _37 = (sizetype) _36;
  bufferBaseBool_65 = Com_gDataMemPtr.163_34 + _37;
  # DEBUG bufferBaseBool => bufferBaseBool_65
  # DEBUG BEGIN_STMT
  if (NewVal_52 == 1)
    goto <bb 11>; [34.00%]
  else
    goto <bb 12>; [66.00%]

  <bb 11> [local count: 72810637]:
  # DEBUG BEGIN_STMT
  _38 = _33 >> 3;
  _39 = (sizetype) _38;
  _40 = bufferBaseBool_65 + _39;
  _70 = _33 & 7;
  _41 = (long unsigned int) _70;
  TS_AtomicSetBit_8 (_40, _41);
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 141338295]:
  # DEBUG BEGIN_STMT
  _42 = _33 >> 3;
  _43 = (sizetype) _42;
  _44 = bufferBaseBool_65 + _43;
  _69 = _33 & 7;
  _45 = (long unsigned int) _69;
  TS_AtomicClearBit_8 (_44, _45);

  <bb 13> [local count: 1073598662]:
  # FilterResult_71 = PHI <FilterResult_46(8), 1(9), 1(11), 1(12), 0(5)>
<L19>:
  # DEBUG FilterResult => NULL
  # DEBUG BEGIN_STMT
  return FilterResult_71;

}



;; Function Com_EB_SetBuffer (Com_EB_SetBuffer, funcdef_no=10, decl_uid=6155, cgraph_uid=11, symbol_order=13)

Com_EB_SetBuffer (const struct ComSignalBaseType * Com_EB_ReadPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  sint32 sint32Val;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  sint16 sint16Val;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  sint8 sint8Val;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  uint32 uint32Val;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  uint16 uint16Val;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  uint8 uint8Val;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  boolean boolVal;
  uint8 * const bufferBaseBool;
  const ComSignalBufferRefType ValueRef;
  const Com_TS_SignalTypeType SignalType;
  const uint8 * const dataPtr;
  uint8 * Com_gDataMemPtr.343_1;
  short unsigned int _2;
  sizetype _3;
  short unsigned int _4;
  short unsigned int _5;
  unsigned char _6;
  const struct Com_ConfigType * Com_gConfigPtr.345_7;
  short unsigned int _8;
  sizetype _9;
  int _10;
  unsigned char boolVal.346_11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  long unsigned int _15;
  short unsigned int _16;
  sizetype _17;
  uint8 * _18;
  long unsigned int _19;
  const struct Com_ConfigType * Com_gConfigPtr.348_20;
  short unsigned int _21;
  sizetype _22;
  int _23;
  sizetype _24;
  uint8 * _25;
  unsigned char uint8Val.349_26;
  const struct Com_ConfigType * Com_gConfigPtr.351_27;
  short unsigned int _28;
  sizetype _29;
  int _30;
  unsigned int _31;
  unsigned int _32;
  uint16 * _33;
  short unsigned int uint16Val.352_34;
  const struct Com_ConfigType * Com_gConfigPtr.354_35;
  short unsigned int _36;
  sizetype _37;
  int _38;
  unsigned int _39;
  unsigned int _40;
  uint32 * _41;
  long unsigned int uint32Val.355_42;
  const struct Com_ConfigType * Com_gConfigPtr.357_43;
  short unsigned int _44;
  sizetype _45;
  int _46;
  sizetype _47;
  sint8 * _48;
  signed char sint8Val.358_49;
  const struct Com_ConfigType * Com_gConfigPtr.360_50;
  short unsigned int _51;
  sizetype _52;
  int _53;
  unsigned int _54;
  unsigned int _55;
  sint16 * _56;
  short int sint16Val.361_57;
  const struct Com_ConfigType * Com_gConfigPtr.363_58;
  short unsigned int _59;
  sizetype _60;
  int _61;
  unsigned int _62;
  unsigned int _63;
  sint32 * _64;
  long int sint32Val.364_65;
  sizetype _124;
  sizetype _125;
  sizetype _126;
  sizetype _127;
  sizetype _128;
  sizetype _129;
  short unsigned int _130;
  short unsigned int _131;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.343_1 = Com_gDataMemPtr;
  _2 = Com_EB_ReadPropPtr_69(D)->ComBufferRef;
  _3 = (sizetype) _2;
  dataPtr_70 = Com_gDataMemPtr.343_1 + _3;
  # DEBUG dataPtr => dataPtr_70
  # DEBUG BEGIN_STMT
  _4 = Com_EB_ReadPropPtr_69(D)->ComRxSignalFlags;
  _5 = _4 >> 7;
  _6 = (unsigned char) _5;
  SignalType_71 = _6 & 15;
  # DEBUG SignalType => SignalType_71
  # DEBUG BEGIN_STMT
  ValueRef_72 = Com_EB_ReadPropPtr_69(D)->ComFilterConf.ComFilterSignalValueRef;
  # DEBUG ValueRef => ValueRef_72
  # DEBUG BEGIN_STMT
  switch (SignalType_71) <default: <L16> [12.50%], case 0: <L0> [12.50%], case 1: <L8> [12.50%], case 2: <L9> [12.50%], case 3: <L7> [12.50%], case 4: <L5> [12.50%], case 5: <L6> [12.50%], case 6: <L4> [12.50%]>

  <bb 3> [local count: 134217728]:
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.345_7 = Com_gConfigPtr;
  _8 = Com_gConfigPtr.345_7->ComBufferBaseBool;
  _9 = (sizetype) _8;
  bufferBaseBool_115 = Com_gDataMemPtr.343_1 + _9;
  # DEBUG bufferBaseBool => bufferBaseBool_115
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_117 = _4 & 63;
  # DEBUG index => index_117
  # DEBUG BEGIN_STMT
  _10 = (int) index_117;
  fptr_118 = Com_ReadFuncs[_10].Read;
  # DEBUG fptr => fptr_118
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_118 (&boolVal, dataPtr_70, Com_EB_ReadPropPtr_69(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  boolVal.346_11 = boolVal;
  if (boolVal.346_11 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 4> [local count: 45634028]:
  # DEBUG BEGIN_STMT
  _12 = ValueRef_72 >> 3;
  _13 = (sizetype) _12;
  _14 = bufferBaseBool_115 + _13;
  _131 = ValueRef_72 & 7;
  _15 = (long unsigned int) _131;
  TS_AtomicSetBit_8 (_14, _15);
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 88583701]:
  # DEBUG BEGIN_STMT
  _16 = ValueRef_72 >> 3;
  _17 = (sizetype) _16;
  _18 = bufferBaseBool_115 + _17;
  _130 = ValueRef_72 & 7;
  _19 = (long unsigned int) _130;
  TS_AtomicClearBit_8 (_18, _19);

  <bb 6> [local count: 134217728]:
  boolVal ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 7> [local count: 134217728]:
<L4>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.348_20 = Com_gConfigPtr;
  _21 = Com_gConfigPtr.348_20->ComBufferBaseUInt8;
  _22 = (sizetype) _21;
  # DEBUG bufferBaseUint8 => Com_gDataMemPtr.343_1 + _22
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_74 = _4 & 63;
  # DEBUG index => index_74
  # DEBUG BEGIN_STMT
  _23 = (int) index_74;
  fptr_75 = Com_ReadFuncs[_23].Read;
  # DEBUG fptr => fptr_75
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_75 (&uint8Val, dataPtr_70, Com_EB_ReadPropPtr_69(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _24 = (sizetype) ValueRef_72;
  _124 = _22 + _24;
  _25 = Com_gDataMemPtr.343_1 + _124;
  uint8Val.349_26 = uint8Val;
  *_25 = uint8Val.349_26;
  uint8Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 8> [local count: 134217728]:
<L5>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.351_27 = Com_gConfigPtr;
  _28 = Com_gConfigPtr.351_27->ComBufferBaseUInt16;
  _29 = (sizetype) _28;
  # DEBUG bufferBaseUint16 => Com_gDataMemPtr.343_1 + _29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_88 = _4 & 63;
  # DEBUG index => index_88
  # DEBUG BEGIN_STMT
  _30 = (int) index_88;
  fptr_89 = Com_ReadFuncs[_30].Read;
  # DEBUG fptr => fptr_89
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_89 (&uint16Val, dataPtr_70, Com_EB_ReadPropPtr_69(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = (unsigned int) ValueRef_72;
  _32 = _31 * 2;
  _126 = _29 + _32;
  _33 = Com_gDataMemPtr.343_1 + _126;
  uint16Val.352_34 = uint16Val;
  *_33 = uint16Val.352_34;
  uint16Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 9> [local count: 134217728]:
<L6>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.354_35 = Com_gConfigPtr;
  _36 = Com_gConfigPtr.354_35->ComBufferBaseUInt32;
  _37 = (sizetype) _36;
  # DEBUG bufferBaseUint32 => Com_gDataMemPtr.343_1 + _37
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_81 = _4 & 63;
  # DEBUG index => index_81
  # DEBUG BEGIN_STMT
  _38 = (int) index_81;
  fptr_82 = Com_ReadFuncs[_38].Read;
  # DEBUG fptr => fptr_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_82 (&uint32Val, dataPtr_70, Com_EB_ReadPropPtr_69(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _39 = (unsigned int) ValueRef_72;
  _40 = _39 * 4;
  _125 = _37 + _40;
  _41 = Com_gDataMemPtr.343_1 + _125;
  uint32Val.355_42 = uint32Val;
  *_41 = uint32Val.355_42;
  uint32Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 10> [local count: 134217728]:
<L7>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.357_43 = Com_gConfigPtr;
  _44 = Com_gConfigPtr.357_43->ComBufferBaseSInt8;
  _45 = (sizetype) _44;
  # DEBUG bufferBaseSint8 => Com_gDataMemPtr.343_1 + _45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_95 = _4 & 63;
  # DEBUG index => index_95
  # DEBUG BEGIN_STMT
  _46 = (int) index_95;
  fptr_96 = Com_ReadFuncs[_46].Read;
  # DEBUG fptr => fptr_96
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_96 (&sint8Val, dataPtr_70, Com_EB_ReadPropPtr_69(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _47 = (sizetype) ValueRef_72;
  _127 = _45 + _47;
  _48 = Com_gDataMemPtr.343_1 + _127;
  sint8Val.358_49 = sint8Val;
  *_48 = sint8Val.358_49;
  sint8Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 11> [local count: 134217728]:
<L8>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.360_50 = Com_gConfigPtr;
  _51 = Com_gConfigPtr.360_50->ComBufferBaseSInt16;
  _52 = (sizetype) _51;
  # DEBUG bufferBaseSint16 => Com_gDataMemPtr.343_1 + _52
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_109 = _4 & 63;
  # DEBUG index => index_109
  # DEBUG BEGIN_STMT
  _53 = (int) index_109;
  fptr_110 = Com_ReadFuncs[_53].Read;
  # DEBUG fptr => fptr_110
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_110 (&sint16Val, dataPtr_70, Com_EB_ReadPropPtr_69(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _54 = (unsigned int) ValueRef_72;
  _55 = _54 * 2;
  _129 = _52 + _55;
  _56 = Com_gDataMemPtr.343_1 + _129;
  sint16Val.361_57 = sint16Val;
  *_56 = sint16Val.361_57;
  sint16Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 134217728]:
<L9>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.363_58 = Com_gConfigPtr;
  _59 = Com_gConfigPtr.363_58->ComBufferBaseSInt32;
  _60 = (sizetype) _59;
  # DEBUG bufferBaseSint32 => Com_gDataMemPtr.343_1 + _60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_102 = _4 & 63;
  # DEBUG index => index_102
  # DEBUG BEGIN_STMT
  _61 = (int) index_102;
  fptr_103 = Com_ReadFuncs[_61].Read;
  # DEBUG fptr => fptr_103
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_103 (&sint32Val, dataPtr_70, Com_EB_ReadPropPtr_69(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _62 = (unsigned int) ValueRef_72;
  _63 = _62 * 4;
  _128 = _60 + _63;
  _64 = Com_gDataMemPtr.343_1 + _128;
  sint32Val.364_65 = sint32Val;
  *_64 = sint32Val.364_65;
  sint32Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT

  <bb 13> [local count: 1073741824]:
<L16>:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_InitRxIPdu (Com_EB_InitRxIPdu, funcdef_no=158, decl_uid=8958, cgraph_uid=159, symbol_order=163)


Symbols to be put in SSA form
{ D.12438 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


Merging blocks 2 and 6
Merging blocks 4 and 13
Removing basic block 11
Merging blocks 4 and 12
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Com_EB_InitRxIPdu (ComIPduRefType RxPduId)
{
  ComSignalRefType j;
  ComSignalRefType signalId;
  const struct ComRxSignalType * SignalPtr;
  const uint8 * const valPtr;
  const struct ComRxIPduType * IPduPtr;
  const struct Com_ConfigType * Com_gConfigPtr.328_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  long unsigned int _6;
  uint8 * Com_gDataMemPtr.331_7;
  short unsigned int _8;
  sizetype _9;
  uint8 * _10;
  short unsigned int _11;
  long unsigned int _12;
  const struct Com_ConfigType * Com_gConfigPtr.333_13;
  short unsigned int _14;
  sizetype _15;
  unsigned int _16;
  ComIPduSizeType * _17;
  short unsigned int _18;
  short unsigned int _19;
  int _20;
  int _21;
  int _22;
  sizetype _23;
  uint8 * _24;
  short unsigned int _25;
  const struct Com_ConfigType * Com_gConfigPtr.337_26;
  short unsigned int _27;
  unsigned int _28;
  short unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  uint8 * _32;
  long unsigned int _33;
  sizetype _45;
  short unsigned int _46;
  const struct Com_ConfigType * Com_gConfigPtr.338_47;
  long unsigned int _48;
  int _50;
  short unsigned int _51;
  int _52;
  int _53;
  unsigned int _54;
  unsigned int _55;
  sizetype _56;
  const ComSignalRefType * _57;
  long unsigned int _59;
  unsigned int _60;
  unsigned int _61;
  sizetype _62;
  const struct ComSignalBaseType * _64;
  unsigned char _65;
  short unsigned int _66;
  short unsigned int _68;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.328_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.328_1->ComRxIPduRef;
  _3 = (unsigned int) RxPduId_36(D);
  _4 = _3 * 48;
  _5 = _2 + _4;
  IPduPtr_37 = Com_gConfigPtr.328_1 + _5;
  # DEBUG IPduPtr => IPduPtr_37
  # DEBUG BEGIN_STMT
  _6 = IPduPtr_37->ComInitValueRef;
  valPtr_38 = Com_gConfigPtr.328_1 + _6;
  # DEBUG valPtr => valPtr_38
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.331_7 = Com_gDataMemPtr;
  _8 = IPduPtr_37->ComIPduValueRef;
  _9 = (sizetype) _8;
  _10 = Com_gDataMemPtr.331_7 + _9;
  _11 = IPduPtr_37->ComIPduSizeMax;
  _12 = (long unsigned int) _11;
  TS_MemCpy32 (_10, valPtr_38, _12);
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.333_13 = Com_gConfigPtr;
  _14 = Com_gConfigPtr.333_13->ComRxIPduLengthBase;
  _15 = (sizetype) _14;
  _16 = _3 * 2;
  _45 = _15 + _16;
  _17 = Com_gDataMemPtr.331_7 + _45;
  _18 = IPduPtr_37->ComIPduInitSize;
  *_17 = _18;
  # DEBUG BEGIN_STMT
  _19 = Com_gConfigPtr.333_13->ComRxIPduStatusBase;
  _20 = (int) _19;
  _21 = (int) RxPduId_36(D);
  _22 = _20 + _21;
  _23 = (sizetype) _22;
  _24 = Com_gDataMemPtr.331_7 + _23;
  *_24 = 0;
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_37
  # DEBUG INLINE_ENTRY Com_EB_InitRxSignalsWithFilter
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG j => 0
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.338_47 = Com_gConfigPtr;
  _48 = Com_gConfigPtr.338_47->ComRxIPduSignalListRef;
  _50 = (int) j_49;
  _51 = IPduPtr_37->ComIPduSignalRefFirst;
  _52 = (int) _51;
  _53 = _50 + _52;
  _54 = (unsigned int) _53;
  _55 = _54 * 2;
  _56 = _48 + _55;
  _57 = Com_gConfigPtr.338_47 + _56;
  signalId_58 = *_57;
  # DEBUG signalId => signalId_58
  # DEBUG BEGIN_STMT
  _59 = Com_gConfigPtr.338_47->ComRxSignalRef;
  _60 = (unsigned int) signalId_58;
  _61 = _60 * 20;
  _62 = _59 + _61;
  SignalPtr_63 = Com_gConfigPtr.338_47 + _62;
  # DEBUG SignalPtr => SignalPtr_63
  # DEBUG BEGIN_STMT
  _64 = &SignalPtr_63->ComSignalBase;
  Com_EB_SetBuffer (_64);
  # DEBUG BEGIN_STMT
  _65 = SignalPtr_63->ComSignalBase.ComFilterConf.ComFilterType;
  if (_65 == 7)
    goto <bb 4>; [20.24%]
  else
    goto <bb 5>; [79.76%]

  <bb 4> [local count: 193419557]:
  # DEBUG BEGIN_STMT
  _66 = SignalPtr_63->ComSignalBase.ComFilterConf.ComFilterRef;
  Com_ResetFilerOneEveryN (_66);

  <bb 5> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  j_67 = j_49 + 1;
  # DEBUG j => j_67

  <bb 6> [local count: 1073741824]:
  # j_49 = PHI <0(2), j_67(5)>
  # DEBUG j => j_49
  # DEBUG BEGIN_STMT
  _68 = IPduPtr_37->ComIPduSignalWithBufferRefNum;
  if (j_49 < _68)
    goto <bb 3>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # DEBUG IPduPtr => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG signalId => NULL
  # DEBUG j => NULL
  # DEBUG BEGIN_STMT
  _25 = IPduPtr_37->ComIPduSigGWFlagBit;
  if (_25 != 65535)
    goto <bb 8>; [48.88%]
  else
    goto <bb 9>; [51.12%]

  <bb 8> [local count: 57732950]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.337_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.337_26->ComSigGWRxPduFlagBase;
  _28 = (unsigned int) _27;
  _29 = _25 >> 3;
  _30 = (unsigned int) _29;
  _31 = _28 + _30;
  _32 = Com_gDataMemPtr.331_7 + _31;
  _46 = _25 & 7;
  _33 = (long unsigned int) _46;
  TS_AtomicClearBit_8 (_32, _33);

  <bb 9> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_37
  # DEBUG Initialize => 1
  # DEBUG INLINE_ENTRY Com_EB_DisableSignalAndSignalGroupBasedDMFlag
  # DEBUG BEGIN_STMT
  Com_EB_DisableSignalBasedDMFlag (IPduPtr_37, 1);
  # DEBUG BEGIN_STMT
  Com_EB_DisableSignalGroupBasedDMFlag (IPduPtr_37, 1);
  # DEBUG IPduPtr => NULL
  # DEBUG Initialize => NULL
  return;

}



;; Function Com_EB_InitTx_Signal (Com_EB_InitTx_Signal, funcdef_no=183, decl_uid=9320, cgraph_uid=184, symbol_order=188)

Com_EB_InitTx_Signal (ComSignalRefType signalId)
{
  const struct ComTxSignalType * const SignalPtr;
  const struct Com_ConfigType * Com_gConfigPtr.456_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  unsigned char _6;
  const struct ComSignalBaseType * _7;
  short unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.456_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.456_1->ComTxSignalRef;
  _3 = (unsigned int) signalId_11(D);
  _4 = _3 * 26;
  _5 = _2 + _4;
  SignalPtr_12 = Com_gConfigPtr.456_1 + _5;
  # DEBUG SignalPtr => SignalPtr_12
  # DEBUG BEGIN_STMT
  _6 = SignalPtr_12->ComSignalBase.ComFilterConf.ComFilterType;
  if (_6 == 2)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325345]:
  # DEBUG BEGIN_STMT
  _7 = &SignalPtr_12->ComSignalBase;
  Com_EB_SetBuffer (_7);
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 856416480]:
  # DEBUG BEGIN_STMT
  if (_6 == 7)
    goto <bb 5>; [20.24%]
  else
    goto <bb 6>; [79.76%]

  <bb 5> [local count: 173338695]:
  # DEBUG BEGIN_STMT
  _8 = SignalPtr_12->ComSignalBase.ComFilterConf.ComFilterRef;
  Com_ResetFilerOneEveryN (_8);

  <bb 6> [local count: 1073741824]:
  return;

}



;; Function Com_EB_Write_64_SX_DL_DUB_DOC_E1 (Com_EB_Write_64_SX_DL_DUB_DOC_E1, funcdef_no=52, decl_uid=7254, cgraph_uid=53, symbol_order=57)


Symbols to be put in SSA form
{ D.12252 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_DL_DUB_DOC_E1
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_64_SX_DL_DUB_DOC_E2 (Com_EB_Write_64_SX_DL_DUB_DOC_E2, funcdef_no=58, decl_uid=7284, cgraph_uid=59, symbol_order=63)


Symbols to be put in SSA form
{ D.12258 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_DL_DUB_DOC_E2
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_64_SX_DL_DUB_EOC_E1 (Com_EB_Write_64_SX_DL_DUB_EOC_E1, funcdef_no=63, decl_uid=7309, cgraph_uid=64, symbol_order=68)


Symbols to be put in SSA form
{ D.12263 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_DL_DUB_EOC_E1
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_Write_64_SX_DL_DUB_EOC_E2 (Com_EB_Write_64_SX_DL_DUB_EOC_E2, funcdef_no=69, decl_uid=7339, cgraph_uid=70, symbol_order=74)


Symbols to be put in SSA form
{ D.12269 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_DL_DUB_EOC_E2
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_Write_64_SX_DL_EUB_DOC_E1 (Com_EB_Write_64_SX_DL_EUB_DOC_E1, funcdef_no=74, decl_uid=7364, cgraph_uid=75, symbol_order=79)


Symbols to be put in SSA form
{ D.12274 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_DL_EUB_DOC_E1
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_Write_64_SX_DL_EUB_DOC_E2 (Com_EB_Write_64_SX_DL_EUB_DOC_E2, funcdef_no=80, decl_uid=7394, cgraph_uid=81, symbol_order=85)


Symbols to be put in SSA form
{ D.12280 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_DL_EUB_DOC_E2
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_Write_64_SX_DL_EUB_EOC_E1 (Com_EB_Write_64_SX_DL_EUB_EOC_E1, funcdef_no=85, decl_uid=7419, cgraph_uid=86, symbol_order=90)


Symbols to be put in SSA form
{ D.12285 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_DL_EUB_EOC_E1
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_Write_64_SX_DL_EUB_EOC_E2 (Com_EB_Write_64_SX_DL_EUB_EOC_E2, funcdef_no=91, decl_uid=7449, cgraph_uid=92, symbol_order=96)


Symbols to be put in SSA form
{ D.12291 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_DL_EUB_EOC_E2
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_RxDMQueue.isra.0 (Com_EB_RxDMQueue.isra.0, funcdef_no=304, decl_uid=12665, cgraph_uid=315, symbol_order=328)

Com_EB_RxDMQueue.isra.0 (const ComIPduRefType ISRA.981, Com_RxDMNextDueTimeType TimeOutOffset)
{
  Com_RxDMNextDueTimeType globalTime;
  Com_RxDMNextDueTimeType TimeOut;
  uint8 * Com_gDataMemPtr.391_1;
  const struct Com_ConfigType * Com_gConfigPtr.392_2;
  short unsigned int _3;
  sizetype _4;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  Com_RxDMNextDueTimeType * _13;

  <bb 3> [local count: 1073741824]:
  # DEBUG IPduPtr s=> IPduPtr

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.391_1 = Com_gDataMemPtr;
  Com_gConfigPtr.392_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.392_2->ComRxTimeoutQueueBase;
  _4 = (sizetype) _3;
  # DEBUG RxTimeoutQueueBase => Com_gDataMemPtr.391_1 + _4
  # DEBUG BEGIN_STMT
  globalTime_5 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_5
  # DEBUG BEGIN_STMT
  TimeOut_7 = globalTime_5 + TimeOutOffset_6(D);
  # DEBUG TimeOut => TimeOut_7
  # DEBUG BEGIN_STMT
  _9 = ISRA.981_16(D);
  _10 = (unsigned int) _9;
  _11 = _10 * 2;
  _12 = _4 + _11;
  _13 = Com_gDataMemPtr.391_1 + _12;
  *_13 = TimeOut_7;
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_RxDMSignalGroupQueue.isra.0 (Com_EB_RxDMSignalGroupQueue.isra.0, funcdef_no=305, decl_uid=12676, cgraph_uid=316, symbol_order=329)

Com_EB_RxDMSignalGroupQueue.isra.0 (const ComSignalRefType ISRA.983, Com_RxDMNextDueTimeType TimeOutOffset)
{
  Com_RxDMNextDueTimeType globalTime;
  Com_RxDMNextDueTimeType TimeOut;
  const struct ComRxSignalExtType * const SignalExtPtr;
  uint8 * Com_gDataMemPtr.413_1;
  const struct Com_ConfigType * Com_gConfigPtr.414_2;
  short unsigned int _3;
  sizetype _4;
  long unsigned int _5;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  sizetype _18;
  Com_RxDMNextDueTimeType * _19;

  <bb 3> [local count: 1073741824]:
  # DEBUG SignalGPtr s=> SignalGPtr

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.413_1 = Com_gDataMemPtr;
  Com_gConfigPtr.414_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.414_2->ComRxTimeoutSignalGroupQueueBase;
  _4 = (sizetype) _3;
  # DEBUG RxTimeoutSignalGroupQueueBase => Com_gDataMemPtr.413_1 + _4
  # DEBUG BEGIN_STMT
  _5 = Com_gConfigPtr.414_2->ComRxSignalExtRef;
  _7 = ISRA.983_22(D);
  _8 = (unsigned int) _7;
  _9 = _8 * 14;
  _10 = _5 + _9;
  SignalExtPtr_11 = Com_gConfigPtr.414_2 + _10;
  # DEBUG SignalExtPtr => SignalExtPtr_11
  # DEBUG BEGIN_STMT
  globalTime_12 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_12
  # DEBUG BEGIN_STMT
  TimeOut_14 = globalTime_12 + TimeOutOffset_13(D);
  # DEBUG TimeOut => TimeOut_14
  # DEBUG BEGIN_STMT
  _15 = SignalExtPtr_11->RxSigDMQueueRef;
  _16 = (unsigned int) _15;
  _17 = _16 * 2;
  _18 = _4 + _17;
  _19 = Com_gDataMemPtr.413_1 + _18;
  *_19 = TimeOut_14;
  return;

}



;; Function Com_EB_RxDMSignalQueue.isra.0 (Com_EB_RxDMSignalQueue.isra.0, funcdef_no=306, decl_uid=12688, cgraph_uid=317, symbol_order=330)

Com_EB_RxDMSignalQueue.isra.0 (const ComSignalRefType ISRA.985, Com_RxDMNextDueTimeType TimeOutOffset)
{
  Com_RxDMNextDueTimeType globalTime;
  Com_RxDMNextDueTimeType TimeOut;
  uint8 * Com_gDataMemPtr.402_1;
  const struct Com_ConfigType * Com_gConfigPtr.403_2;
  short unsigned int _3;
  sizetype _4;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  Com_RxDMNextDueTimeType * _13;

  <bb 3> [local count: 1073741824]:
  # DEBUG SignalExtPtr s=> SignalExtPtr

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.402_1 = Com_gDataMemPtr;
  Com_gConfigPtr.403_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.403_2->ComRxTimeoutSignalQueueBase;
  _4 = (sizetype) _3;
  # DEBUG RxTimeoutSignalQueueBase => Com_gDataMemPtr.402_1 + _4
  # DEBUG BEGIN_STMT
  globalTime_5 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_5
  # DEBUG BEGIN_STMT
  TimeOut_7 = globalTime_5 + TimeOutOffset_6(D);
  # DEBUG TimeOut => TimeOut_7
  # DEBUG BEGIN_STMT
  _9 = ISRA.985_16(D);
  _10 = (unsigned int) _9;
  _11 = _10 * 2;
  _12 = _4 + _11;
  _13 = Com_gDataMemPtr.402_1 + _12;
  *_13 = TimeOut_7;
  return;

}



;; Function Com_EB_HandleRxIPdu_EnableRxDM (Com_EB_HandleRxIPdu_EnableRxDM, funcdef_no=147, decl_uid=8934, cgraph_uid=148, symbol_order=152)


Symbols to be put in SSA form
{ D.12444 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 28
Number of blocks to update: 27 ( 96%)


Merging blocks 7 and 19
Removing basic block 17
Removing basic block 18
Removing basic block 27
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 1
;;  header 22, latch 21
;;  depth 1, outer 0
;;  nodes: 22 21 16 17 20 18 19
;;
;; Loop 2
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 8 9 12 10 11
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 14 }
;; 8 succs { 9 13 }
;; 9 succs { 10 13 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 8 15 }
;; 15 succs { 22 }
;; 16 succs { 17 21 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 16 23 }
;; 23 succs { 1 }
Com_EB_HandleRxIPdu_EnableRxDM (const struct ComRxIPduType * IPduPtr, uint8 * IPduFlagBytePtr)
{
  ComSignalRefType i;
  const ComSignalRefType signalId;
  const struct ComRxSignalType * const SignalPtr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  uint8 * const SigDMFlagsPtr;
  uint8 enableBitPos;
  ComSignalGroupRefType j;
  const ComSignalGroupRefType signalGId;
  const struct ComRxSignalGroupType * const SignalGPtr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  uint8 * const SigGDMFlagsPtr;
  uint8 enableBitPos;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  const struct Com_ConfigType * Com_gConfigPtr.404_22;
  long unsigned int _23;
  unsigned int _25;
  unsigned int _26;
  sizetype _27;
  const ComSignalGroupRefType * _28;
  long unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  sizetype _33;
  long unsigned int _35;
  short unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  sizetype _39;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  uint8 * Com_gDataMemPtr.410_45;
  short unsigned int _46;
  unsigned int _47;
  short unsigned int _48;
  short unsigned int _49;
  unsigned int _50;
  unsigned int _51;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _57;
  int _58;
  int _59;
  unsigned char _60;
  unsigned char _61;
  unsigned int _62;
  unsigned char _63;
  unsigned char _64;
  short unsigned int _65;
  int _67;
  short unsigned int _68;
  int _69;
  short unsigned int _70;
  int _71;
  int _72;
  const struct Com_ConfigType * Com_gConfigPtr.393_74;
  long unsigned int _75;
  unsigned int _77;
  unsigned int _78;
  sizetype _79;
  const ComSignalRefType * _80;
  long unsigned int _82;
  unsigned int _83;
  unsigned int _84;
  sizetype _85;
  long unsigned int _87;
  short unsigned int _88;
  unsigned int _89;
  unsigned int _90;
  sizetype _91;
  unsigned char _93;
  unsigned char _94;
  unsigned char _95;
  uint8 * Com_gDataMemPtr.399_97;
  short unsigned int _98;
  unsigned int _99;
  short unsigned int _100;
  short unsigned int _101;
  unsigned int _102;
  unsigned int _103;
  unsigned char _105;
  unsigned char _106;
  unsigned char _107;
  unsigned char _109;
  int _110;
  int _111;
  unsigned char _112;
  unsigned char _113;
  unsigned int _114;
  unsigned char _115;
  unsigned char _116;
  short unsigned int _117;
  int _119;
  short unsigned int _120;
  int _121;
  short unsigned int _122;
  int _123;
  int _124;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_8(D), 4);
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_10(D)->ComRxIPduFlags;
  _2 = _1 >> 1;
  _19 = _2 & 1;
  if (_19 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 3> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  TimeOutOffset_11 = IPduPtr_10(D)->ComRxFirstTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_11
  # DEBUG BEGIN_STMT
  if (TimeOutOffset_11 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 4> [local count: 19488414]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = *IPduFlagBytePtr_8(D);
  _20 = _3 & 2;
  if (_20 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 6431177]:
  # DEBUG BEGIN_STMT
  _4 = _3 | 2;
  *IPduFlagBytePtr_8(D) = _4;
  # DEBUG BEGIN_STMT
  _18 = MEM[(short unsigned int *)IPduPtr_10(D) + 36B];
  # DEBUG D#1 => IPduPtr_10(D)
  Com_EB_RxDMQueue.isra.0 (_18, TimeOutOffset_11);

  <bb 6> [local count: 19488414]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 7> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_EnableSignalBasedDMFlag
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_73 = IPduPtr_10(D)->ComIPduSignalRefFirst;
  # DEBUG i => i_73
  goto <bb 14>; [100.00%]

  <bb 8> [local count: 955630220]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.393_74 = Com_gConfigPtr;
  _75 = Com_gConfigPtr.393_74->ComRxIPduSignalListRef;
  _77 = (unsigned int) i_76;
  _78 = _77 * 2;
  _79 = _75 + _78;
  _80 = Com_gConfigPtr.393_74 + _79;
  signalId_81 = *_80;
  # DEBUG signalId => signalId_81
  # DEBUG BEGIN_STMT
  _82 = Com_gConfigPtr.393_74->ComRxSignalRef;
  _83 = (unsigned int) signalId_81;
  _84 = _83 * 20;
  _85 = _82 + _84;
  SignalPtr_86 = Com_gConfigPtr.393_74 + _85;
  # DEBUG SignalPtr => SignalPtr_86
  # DEBUG BEGIN_STMT
  _87 = Com_gConfigPtr.393_74->ComRxSignalExtRef;
  _88 = SignalPtr_86->ComSignalExtRef;
  _89 = (unsigned int) _88;
  _90 = _89 * 14;
  _91 = _87 + _90;
  SignalExtPtr_92 = Com_gConfigPtr.393_74 + _91;
  # DEBUG SignalExtPtr => SignalExtPtr_92
  # DEBUG BEGIN_STMT
  _93 = SignalExtPtr_92->ComRxSignalExtFlags;
  _94 = _93 >> 2;
  _95 = _94 & 1;
  if (_95 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 9> [local count: 477815110]:
  # DEBUG BEGIN_STMT
  TimeOutOffset_96 = SignalExtPtr_92->ComRxFirstTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_96
  # DEBUG BEGIN_STMT
  if (TimeOutOffset_96 != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 13>; [67.00%]

  <bb 10> [local count: 157678986]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.399_97 = Com_gDataMemPtr;
  _98 = Com_gConfigPtr.393_74->ComRxTimeoutSignalStatusQueueBase;
  _99 = (unsigned int) _98;
  _100 = SignalExtPtr_92->RxSigDMQueueRef;
  _101 = _100 >> 2;
  _102 = (unsigned int) _101;
  _103 = _99 + _102;
  SigDMFlagsPtr_104 = Com_gDataMemPtr.399_97 + _103;
  # DEBUG SigDMFlagsPtr => SigDMFlagsPtr_104
  # DEBUG BEGIN_STMT
  _105 = (unsigned char) _100;
  _106 = _105 & 3;
  _107 = _106 * 2;
  enableBitPos_108 = _107 + 1;
  # DEBUG enableBitPos => enableBitPos_108
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _109 = *SigDMFlagsPtr_104;
  _110 = (int) enableBitPos_108;
  _111 = 1 << _110;
  _112 = (unsigned char) _111;
  _113 = _109 & _112;
  if (_113 == 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 12>; [67.00%]

  <bb 11> [local count: 52034066]:
  # DEBUG BEGIN_STMT
  _114 = 1 << _110;
  _115 = (unsigned char) _114;
  _116 = _109 | _115;
  *SigDMFlagsPtr_104 = _116;
  # DEBUG BEGIN_STMT
  _117 = MEM[(short unsigned int *)SignalExtPtr_92 + 6B];
  # DEBUG D#3 => SignalExtPtr_92
  Com_EB_RxDMSignalQueue.isra.0 (_117, TimeOutOffset_96);

  <bb 12> [local count: 157678986]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 13> [local count: 955630222]:
  # DEBUG BEGIN_STMT
  i_118 = i_76 + 1;
  # DEBUG i => i_118

  <bb 14> [local count: 1073741821]:
  # i_76 = PHI <i_73(7), i_118(13)>
  # DEBUG i => i_76
  # DEBUG BEGIN_STMT
  _119 = (int) i_76;
  _120 = IPduPtr_10(D)->ComIPduSignalWithDMOnly;
  _121 = (int) _120;
  _122 = IPduPtr_10(D)->ComIPduSignalRefFirst;
  _123 = (int) _122;
  _124 = _121 + _123;
  if (_119 < _124)
    goto <bb 8>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 15> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => NULL
  # DEBUG enableBitPos => NULL
  # DEBUG SigDMFlagsPtr => NULL
  # DEBUG TimeOutOffset => NULL
  # DEBUG SignalExtPtr => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG signalId => NULL
  # DEBUG i => NULL
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_EnableSignalGroupBasedDMFlag
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_21 = IPduPtr_10(D)->ComIPduSignalGroupRefFirst;
  # DEBUG j => j_21
  goto <bb 22>; [100.00%]

  <bb 16> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.404_22 = Com_gConfigPtr;
  _23 = Com_gConfigPtr.404_22->ComRxIPduSignalGroupListRef;
  _25 = (unsigned int) j_24;
  _26 = _25 * 2;
  _27 = _23 + _26;
  _28 = Com_gConfigPtr.404_22 + _27;
  signalGId_29 = *_28;
  # DEBUG signalGId => signalGId_29
  # DEBUG BEGIN_STMT
  _30 = Com_gConfigPtr.404_22->ComRxSignalGroupRef;
  _31 = (unsigned int) signalGId_29;
  _32 = _31 * 10;
  _33 = _30 + _32;
  SignalGPtr_34 = Com_gConfigPtr.404_22 + _33;
  # DEBUG SignalGPtr => SignalGPtr_34
  # DEBUG BEGIN_STMT
  _35 = Com_gConfigPtr.404_22->ComRxSignalExtRef;
  _36 = SignalGPtr_34->ComSignalExtRef;
  _37 = (unsigned int) _36;
  _38 = _37 * 14;
  _39 = _35 + _38;
  SignalExtPtr_40 = Com_gConfigPtr.404_22 + _39;
  # DEBUG SignalExtPtr => SignalExtPtr_40
  # DEBUG BEGIN_STMT
  _41 = SignalExtPtr_40->ComRxSignalExtFlags;
  _42 = _41 >> 2;
  _43 = _42 & 1;
  if (_43 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 17> [local count: 477815112]:
  # DEBUG BEGIN_STMT
  TimeOutOffset_44 = SignalExtPtr_40->ComRxFirstTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_44
  # DEBUG BEGIN_STMT
  if (TimeOutOffset_44 != 0)
    goto <bb 18>; [33.00%]
  else
    goto <bb 21>; [67.00%]

  <bb 18> [local count: 157678987]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.410_45 = Com_gDataMemPtr;
  _46 = Com_gConfigPtr.404_22->ComRxDMInvSignalGroupStatusQueueBase;
  _47 = (unsigned int) _46;
  _48 = SignalExtPtr_40->RxSigDMQueueRef;
  _49 = _48 >> 2;
  _50 = (unsigned int) _49;
  _51 = _47 + _50;
  SigGDMFlagsPtr_52 = Com_gDataMemPtr.410_45 + _51;
  # DEBUG SigGDMFlagsPtr => SigGDMFlagsPtr_52
  # DEBUG BEGIN_STMT
  _53 = (unsigned char) _48;
  _54 = _53 & 3;
  _55 = _54 * 2;
  enableBitPos_56 = _55 + 1;
  # DEBUG enableBitPos => enableBitPos_56
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _57 = *SigGDMFlagsPtr_52;
  _58 = (int) enableBitPos_56;
  _59 = 1 << _58;
  _60 = (unsigned char) _59;
  _61 = _57 & _60;
  if (_61 == 0)
    goto <bb 19>; [33.00%]
  else
    goto <bb 20>; [67.00%]

  <bb 19> [local count: 52034066]:
  # DEBUG BEGIN_STMT
  _62 = 1 << _58;
  _63 = (unsigned char) _62;
  _64 = _57 | _63;
  *SigGDMFlagsPtr_52 = _64;
  # DEBUG BEGIN_STMT
  _65 = MEM[(short unsigned int *)SignalGPtr_34 + 8B];
  # DEBUG D#2 => SignalGPtr_34
  Com_EB_RxDMSignalGroupQueue.isra.0 (_65, TimeOutOffset_44);

  <bb 20> [local count: 157678987]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 21> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  j_66 = j_24 + 1;
  # DEBUG j => j_66

  <bb 22> [local count: 1073741824]:
  # j_24 = PHI <j_21(15), j_66(21)>
  # DEBUG j => j_24
  # DEBUG BEGIN_STMT
  _67 = (int) j_24;
  _68 = IPduPtr_10(D)->ComIPduSignalGroupRefNum;
  _69 = (int) _68;
  _70 = IPduPtr_10(D)->ComIPduSignalGroupRefFirst;
  _71 = (int) _70;
  _72 = _69 + _71;
  if (_67 < _72)
    goto <bb 16>; [89.00%]
  else
    goto <bb 23>; [11.00%]

  <bb 23> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => NULL
  # DEBUG enableBitPos => NULL
  # DEBUG SigGDMFlagsPtr => NULL
  # DEBUG TimeOutOffset => NULL
  # DEBUG SignalExtPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG signalGId => NULL
  # DEBUG j => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_GetSendSignalRetVal.isra.0 (Com_GetSendSignalRetVal.isra.0, funcdef_no=307, decl_uid=12701, cgraph_uid=318, symbol_order=331)

Com_GetSendSignalRetVal.isra.0 (const ComIPduRefType ISRA.989)
{
  uint8 RetVal;
  uint8 * const PduStatusFlagsPtr;
  uint8 * Com_gDataMemPtr.546_1;
  const struct Com_ConfigType * Com_gConfigPtr.547_2;
  short unsigned int _3;
  int _4;
  short unsigned int _6;
  int _7;
  int _8;
  sizetype _9;
  unsigned char _11;
  unsigned char _12;

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalPtr s=> SignalPtr

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 128
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.546_1 = Com_gDataMemPtr;
  Com_gConfigPtr.547_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.547_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _6 = ISRA.989_15(D);
  _7 = (int) _6;
  _8 = _4 + _7;
  _9 = (sizetype) _8;
  PduStatusFlagsPtr_10 = Com_gDataMemPtr.546_1 + _9;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_10
  # DEBUG BEGIN_STMT
  _11 = *PduStatusFlagsPtr_10;
  _12 = _11 & 1;
  if (_12 != 0)
    goto <bb 3>; [65.00%]
  else
    goto <bb 4>; [35.00%]

  <bb 3> [local count: 697932186]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 4> [local count: 1073741824]:
  # RetVal_13 = PHI <128(2), 0(3)>
  # DEBUG RetVal => RetVal_13
  # DEBUG BEGIN_STMT
  return RetVal_13;

}



;; Function Com_EB_Read_SignalExt (Com_EB_Read_SignalExt, funcdef_no=255, decl_uid=6162, cgraph_uid=256, symbol_order=260)


Symbols to be put in SSA form
{ D.12309 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 22
Number of blocks to update: 21 ( 95%)


Removing basic block 5
Removing basic block 6
Removing basic block 8
Removing basic block 18
Removing basic block 19
Merging blocks 20 and 21
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 15 }
;; 4 succs { 5 14 }
;; 5 succs { 13 6 11 12 10 8 9 7 }
;; 6 succs { 13 }
;; 7 succs { 13 }
;; 8 succs { 13 }
;; 9 succs { 13 }
;; 10 succs { 13 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
Com_EB_Read_SignalExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const Com_TS_SignalTypeType SignalType;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint8 * const initDataPtr;
  const struct ComRxIPduType * const IPduPtr;
  const ComIPduRefType PduId;
  const boolean takeInitVal;
  const struct Com_ConfigType * Com_gConfigPtr.797_1;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  long unsigned int _8;
  short unsigned int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _25;
  short unsigned int _26;
  unsigned char _27;
  uint8 * Com_gDataMemPtr.807_29;
  const struct Com_ConfigType * Com_gConfigPtr.808_30;
  short unsigned int _31;
  sizetype _32;
  short unsigned int _33;
  short unsigned int _34;
  sizetype _35;
  sizetype _36;
  uint8 * _37;
  unsigned char _38;
  int _39;
  short unsigned int _40;
  unsigned int _41;
  int _42;
  unsigned char _43;
  unsigned char _44;
  uint8 * Com_gDataMemPtr.809_45;
  const struct Com_ConfigType * Com_gConfigPtr.810_46;
  short unsigned int _47;
  sizetype _48;
  short unsigned int _49;
  sizetype _50;
  sizetype _51;
  uint8 * _52;
  unsigned char _53;
  uint8 * Com_gDataMemPtr.811_54;
  const struct Com_ConfigType * Com_gConfigPtr.812_55;
  short unsigned int _56;
  sizetype _57;
  short unsigned int _58;
  unsigned int _59;
  unsigned int _60;
  sizetype _61;
  uint16 * _62;
  short unsigned int _63;
  uint8 * Com_gDataMemPtr.813_64;
  const struct Com_ConfigType * Com_gConfigPtr.814_65;
  short unsigned int _66;
  sizetype _67;
  short unsigned int _68;
  unsigned int _69;
  unsigned int _70;
  sizetype _71;
  uint32 * _72;
  long unsigned int _73;
  uint8 * Com_gDataMemPtr.815_74;
  const struct Com_ConfigType * Com_gConfigPtr.816_75;
  short unsigned int _76;
  sizetype _77;
  short unsigned int _78;
  sizetype _79;
  sizetype _80;
  sint8 * _81;
  signed char _82;
  uint8 * Com_gDataMemPtr.817_83;
  const struct Com_ConfigType * Com_gConfigPtr.818_84;
  short unsigned int _85;
  sizetype _86;
  short unsigned int _87;
  unsigned int _88;
  unsigned int _89;
  sizetype _90;
  sint16 * _91;
  short int _92;
  uint8 * Com_gDataMemPtr.819_93;
  const struct Com_ConfigType * Com_gConfigPtr.820_94;
  short unsigned int _95;
  sizetype _96;
  short unsigned int _97;
  unsigned int _98;
  unsigned int _99;
  sizetype _100;
  sint32 * _101;
  long int _102;
  short unsigned int _103;
  int _105;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalPtr => Com_EB_ReadPropPtr_12(D)
  # DEBUG BEGIN_STMT
  takeInitVal_14 = Com_EB_Read_SignalReplace (Com_EB_ReadPropPtr_12(D));
  # DEBUG takeInitVal => takeInitVal_14
  # DEBUG BEGIN_STMT
  if (takeInitVal_14 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  PduId_19 = MEM[(const struct ComRxSignalType *)Com_EB_ReadPropPtr_12(D)].ComIPduRef;
  # DEBUG PduId => PduId_19
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.797_1 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.797_1->ComRxIPduRef;
  _4 = (unsigned int) PduId_19;
  _5 = _4 * 48;
  _6 = _3 + _5;
  IPduPtr_20 = Com_gConfigPtr.797_1 + _6;
  # DEBUG IPduPtr => IPduPtr_20
  # DEBUG BEGIN_STMT
  _8 = IPduPtr_20->ComInitValueRef;
  initDataPtr_21 = Com_gConfigPtr.797_1 + _8;
  # DEBUG initDataPtr => initDataPtr_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = Com_EB_ReadPropPtr_12(D)->ComRxSignalFlags;
  index_22 = _9 & 55;
  # DEBUG index => index_22
  # DEBUG BEGIN_STMT
  _10 = (int) index_22;
  fptr_23 = Com_ReadFuncs[_10].Read;
  # DEBUG fptr => fptr_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_23 (SignalDataPtr_15(D), initDataPtr_21, Com_EB_ReadPropPtr_12(D), retvalPtr_17(D));
  # DEBUG BEGIN_STMT
  goto <bb 15>; [100.00%]

  <bb 4> [local count: 708669604]:
  # DEBUG BEGIN_STMT
  _11 = Com_EB_ReadPropPtr_12(D)->ComFilterConf.ComFilterSignalValueRef;
  if (_11 != 65535)
    goto <bb 5>; [48.88%]
  else
    goto <bb 14>; [51.12%]

  <bb 5> [local count: 346397702]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => SignalDataPtr_15(D)
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_12(D)
  # DEBUG INLINE_ENTRY Com_EB_Read_SignalExt_SigBuffer
  # DEBUG BEGIN_STMT
  _25 = Com_EB_ReadPropPtr_12(D)->ComRxSignalFlags;
  _26 = _25 >> 7;
  _27 = (unsigned char) _26;
  SignalType_28 = _27 & 15;
  # DEBUG SignalType => SignalType_28
  # DEBUG BEGIN_STMT
  switch (SignalType_28) <default: <L13> [12.50%], case 0: <L6> [12.50%], case 1: <L11> [12.50%], case 2: <L12> [12.50%], case 3: <L10> [12.50%], case 4: <L8> [12.50%], case 5: <L9> [12.50%], case 6: <L7> [12.50%]>

  <bb 6> [local count: 43299713]:
<L6>:
  # DEBUG BEGIN_STMT
  # DEBUG BoolDataPtr => SignalDataPtr_15(D)
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.807_29 = Com_gDataMemPtr;
  Com_gConfigPtr.808_30 = Com_gConfigPtr;
  _31 = Com_gConfigPtr.808_30->ComBufferBaseBool;
  _32 = (sizetype) _31;
  # DEBUG bufferBaseBool => Com_gDataMemPtr.807_29 + _32
  # DEBUG BEGIN_STMT
  _33 = Com_EB_ReadPropPtr_12(D)->ComFilterConf.ComFilterSignalValueRef;
  _34 = _33 >> 3;
  _35 = (sizetype) _34;
  _36 = _32 + _35;
  _37 = Com_gDataMemPtr.807_29 + _36;
  _38 = *_37;
  _39 = (int) _38;
  _40 = _33 & 7;
  _41 = (unsigned int) _40;
  _42 = _39 >> _41;
  _43 = (unsigned char) _42;
  _44 = _43 & 1;
  MEM[(boolean *)SignalDataPtr_15(D)] = _44;
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 7> [local count: 43299713]:
<L7>:
  # DEBUG BEGIN_STMT
  # DEBUG U8DataPtr => SignalDataPtr_15(D)
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.809_45 = Com_gDataMemPtr;
  Com_gConfigPtr.810_46 = Com_gConfigPtr;
  _47 = Com_gConfigPtr.810_46->ComBufferBaseUInt8;
  _48 = (sizetype) _47;
  # DEBUG bufferBaseUint8 => Com_gDataMemPtr.809_45 + _48
  # DEBUG BEGIN_STMT
  _49 = Com_EB_ReadPropPtr_12(D)->ComFilterConf.ComFilterSignalValueRef;
  _50 = (sizetype) _49;
  _51 = _48 + _50;
  _52 = Com_gDataMemPtr.809_45 + _51;
  _53 = *_52;
  MEM[(uint8 *)SignalDataPtr_15(D)] = _53;
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 8> [local count: 43299713]:
<L8>:
  # DEBUG BEGIN_STMT
  # DEBUG U16DataPtr => SignalDataPtr_15(D)
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.811_54 = Com_gDataMemPtr;
  Com_gConfigPtr.812_55 = Com_gConfigPtr;
  _56 = Com_gConfigPtr.812_55->ComBufferBaseUInt16;
  _57 = (sizetype) _56;
  # DEBUG bufferBaseUint16 => Com_gDataMemPtr.811_54 + _57
  # DEBUG BEGIN_STMT
  _58 = Com_EB_ReadPropPtr_12(D)->ComFilterConf.ComFilterSignalValueRef;
  _59 = (unsigned int) _58;
  _60 = _59 * 2;
  _61 = _57 + _60;
  _62 = Com_gDataMemPtr.811_54 + _61;
  _63 = *_62;
  MEM[(uint16 *)SignalDataPtr_15(D)] = _63;
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 9> [local count: 43299713]:
<L9>:
  # DEBUG BEGIN_STMT
  # DEBUG U32DataPtr => SignalDataPtr_15(D)
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.813_64 = Com_gDataMemPtr;
  Com_gConfigPtr.814_65 = Com_gConfigPtr;
  _66 = Com_gConfigPtr.814_65->ComBufferBaseUInt32;
  _67 = (sizetype) _66;
  # DEBUG bufferBaseUint32 => Com_gDataMemPtr.813_64 + _67
  # DEBUG BEGIN_STMT
  _68 = Com_EB_ReadPropPtr_12(D)->ComFilterConf.ComFilterSignalValueRef;
  _69 = (unsigned int) _68;
  _70 = _69 * 4;
  _71 = _67 + _70;
  _72 = Com_gDataMemPtr.813_64 + _71;
  _73 = *_72;
  MEM[(uint32 *)SignalDataPtr_15(D)] = _73;
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 10> [local count: 43299713]:
<L10>:
  # DEBUG BEGIN_STMT
  # DEBUG S8DataPtr => SignalDataPtr_15(D)
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.815_74 = Com_gDataMemPtr;
  Com_gConfigPtr.816_75 = Com_gConfigPtr;
  _76 = Com_gConfigPtr.816_75->ComBufferBaseSInt8;
  _77 = (sizetype) _76;
  # DEBUG bufferBaseSint8 => Com_gDataMemPtr.815_74 + _77
  # DEBUG BEGIN_STMT
  _78 = Com_EB_ReadPropPtr_12(D)->ComFilterConf.ComFilterSignalValueRef;
  _79 = (sizetype) _78;
  _80 = _77 + _79;
  _81 = Com_gDataMemPtr.815_74 + _80;
  _82 = *_81;
  MEM[(sint8 *)SignalDataPtr_15(D)] = _82;
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 11> [local count: 43299713]:
<L11>:
  # DEBUG BEGIN_STMT
  # DEBUG S16DataPtr => SignalDataPtr_15(D)
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.817_83 = Com_gDataMemPtr;
  Com_gConfigPtr.818_84 = Com_gConfigPtr;
  _85 = Com_gConfigPtr.818_84->ComBufferBaseSInt16;
  _86 = (sizetype) _85;
  # DEBUG bufferBaseSint16 => Com_gDataMemPtr.817_83 + _86
  # DEBUG BEGIN_STMT
  _87 = Com_EB_ReadPropPtr_12(D)->ComFilterConf.ComFilterSignalValueRef;
  _88 = (unsigned int) _87;
  _89 = _88 * 2;
  _90 = _86 + _89;
  _91 = Com_gDataMemPtr.817_83 + _90;
  _92 = *_91;
  MEM[(sint16 *)SignalDataPtr_15(D)] = _92;
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 43299713]:
<L12>:
  # DEBUG BEGIN_STMT
  # DEBUG S32DataPtr => SignalDataPtr_15(D)
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.819_93 = Com_gDataMemPtr;
  Com_gConfigPtr.820_94 = Com_gConfigPtr;
  _95 = Com_gConfigPtr.820_94->ComBufferBaseSInt32;
  _96 = (sizetype) _95;
  # DEBUG bufferBaseSint32 => Com_gDataMemPtr.819_93 + _96
  # DEBUG BEGIN_STMT
  _97 = Com_EB_ReadPropPtr_12(D)->ComFilterConf.ComFilterSignalValueRef;
  _98 = (unsigned int) _97;
  _99 = _98 * 4;
  _100 = _96 + _99;
  _101 = Com_gDataMemPtr.819_93 + _100;
  _102 = *_101;
  MEM[(sint32 *)SignalDataPtr_15(D)] = _102;
  # DEBUG BEGIN_STMT

  <bb 13> [local count: 346397703]:
<L13>:
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 362271901]:
  # DEBUG SignalDataPtr => SignalDataPtr_15(D)
  # DEBUG dataPtr => dataPtr_16(D)
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_12(D)
  # DEBUG retvalPtr => retvalPtr_17(D)
  # DEBUG INLINE_ENTRY Com_EB_Read_SignalExt
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _103 = Com_EB_ReadPropPtr_12(D)->ComRxSignalFlags;
  index_104 = _103 & 63;
  # DEBUG index => index_104
  # DEBUG BEGIN_STMT
  _105 = (int) index_104;
  fptr_106 = Com_ReadFuncs[_105].Read;
  # DEBUG fptr => fptr_106
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_106 (SignalDataPtr_15(D), dataPtr_16(D), Com_EB_ReadPropPtr_12(D), retvalPtr_17(D));
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG retvalPtr => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG takeInitVal => NULL
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG initDataPtr => NULL
  # DEBUG fptr => NULL
  # DEBUG index => NULL
  # DEBUG fptr => NULL
  # DEBUG index => NULL
  # DEBUG SignalDataPtr => NULL
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG SignalType => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_64_SX_EL_EUB_EOC_E2 (Com_EB_Write_64_SX_EL_EUB_EOC_E2, funcdef_no=135, decl_uid=7669, cgraph_uid=136, symbol_order=140)


Symbols to be put in SSA form
{ D.12325 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_EL_EUB_EOC_E2
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_EL_EUB_EOC_E2 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_Write_64_SX_EL_EUB_EOC_E1 (Com_EB_Write_64_SX_EL_EUB_EOC_E1, funcdef_no=129, decl_uid=7639, cgraph_uid=130, symbol_order=134)


Symbols to be put in SSA form
{ D.12331 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_EL_EUB_EOC_E1
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_EL_EUB_EOC_E1 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_Write_64_SX_EL_EUB_DOC_E2 (Com_EB_Write_64_SX_EL_EUB_DOC_E2, funcdef_no=124, decl_uid=7614, cgraph_uid=125, symbol_order=129)


Symbols to be put in SSA form
{ D.12336 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_EL_EUB_DOC_E2
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_EL_EUB_DOC_E2 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_64_SX_EL_EUB_DOC_E1 (Com_EB_Write_64_SX_EL_EUB_DOC_E1, funcdef_no=118, decl_uid=7584, cgraph_uid=119, symbol_order=123)


Symbols to be put in SSA form
{ D.12342 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_EL_EUB_DOC_E1
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_EL_EUB_DOC_E1 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_64_SX_EL_DUB_EOC_E2 (Com_EB_Write_64_SX_EL_DUB_EOC_E2, funcdef_no=113, decl_uid=7559, cgraph_uid=114, symbol_order=118)


Symbols to be put in SSA form
{ D.12347 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_EL_DUB_EOC_E2
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_EL_DUB_EOC_E2 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_Write_64_SX_EL_DUB_EOC_E1 (Com_EB_Write_64_SX_EL_DUB_EOC_E1, funcdef_no=107, decl_uid=7529, cgraph_uid=108, symbol_order=112)


Symbols to be put in SSA form
{ D.12353 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_EL_DUB_EOC_E1
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_EL_DUB_EOC_E1 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  return;

}



;; Function Com_EB_Write_64_SX_EL_DUB_DOC_E2 (Com_EB_Write_64_SX_EL_DUB_DOC_E2, funcdef_no=102, decl_uid=7504, cgraph_uid=103, symbol_order=107)


Symbols to be put in SSA form
{ D.12358 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_EL_DUB_DOC_E2
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_EL_DUB_DOC_E2 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_64_SX_EL_DUB_DOC_E1 (Com_EB_Write_64_SX_EL_DUB_DOC_E1, funcdef_no=96, decl_uid=7474, cgraph_uid=97, symbol_order=101)


Symbols to be put in SSA form
{ D.12364 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_Write_64_SX_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  short unsigned int _1;
  const uint32 * _2;
  const uint32 * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  const uint32 * _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_3(D)
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG SignalDataPtr => SignalDataPtr_3(D)
  # DEBUG dataPtr => dataPtr_7(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_6(D)
  # DEBUG IntDataPtr => IntDataPtr_8(D)
  # DEBUG INLINE_ENTRY Com_EB_Write_64_SX_EL_DUB_DOC_E1
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_6(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_11, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_6(D)->ComSignalBase.ComBitSize;
  _13 = _12 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _13;
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  _15 = _14 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _15;
  # DEBUG BEGIN_STMT
  _16 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].HiWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_16, dataPtr_7(D), &Com_EB_WriteProp_loc, IntDataPtr_8(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_3(D)].LoWord;
  Com_EB_Write_32_SX_EL_DUB_DOC_E1 (_2, dataPtr_7(D), Com_EB_WritePropPtr_6(D), IntDataPtr_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG SignalDataPtr_loc => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_FilterUint64 (Com_EB_FilterUint64, funcdef_no=219, decl_uid=6340, cgraph_uid=220, symbol_order=224)


Symbols to be put in SSA form
{ D.12382 D.14705 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Removing basic block 3
Removing basic block 9
Merging blocks 10 and 11
Merging blocks 10 and 8
No longer having address taken: ComFilterProp_loc
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 7 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Com_EB_FilterUint64 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint8 FilterResult;
  boolean D.14705;
  uint8 FilterResult_new_equals_x;
  uint8 FilterResult_new_differs_x;
  struct ComFilterConfType ComFilterProp_loc;
  uint8 FilterResult;
  unsigned char _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  unsigned char _5;
  const uint32 * _7;
  const uint32 * _8;
  short unsigned int _26;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  ComFilterProp_loc = *ComFilterPropPtr_12(D);
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_14(D)
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_12(D)->ComFilterType;
  if (_1 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG D#10 => SignalDataPtr_14(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_12(D)
  # DEBUG INLINE_ENTRY Com_EB_FilterSint64
  # DEBUG D#9 => D#8
  # DEBUG SignalDataPtr => D#9
  # DEBUG BEGIN_STMT
  _26 = ComFilterPropPtr_12(D)->ComFilterRef;
  FilterResult_27 = Com_EB_FilterOneEveryN (_26);
  # DEBUG FilterResult => FilterResult_27
  # DEBUG FilterResult => FilterResult_27
  # DEBUG BEGIN_STMT
  _31 = FilterResult_27;
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG FilterResult => NULL
  # DEBUG SignalDataPtr_loc => NULL
  # DEBUG FilterResult_new_differs_x => NULL
  # DEBUG FilterResult_new_equals_x => NULL
  # DEBUG SignalDataPtr => NULL
  FilterResult_6 = _31;
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_14(D)].LoWord;
  FilterResult_17 = Com_EB_FilterUint32 (ComFilterPropPtr_12(D), _2);
  # DEBUG FilterResult => FilterResult_17
  # DEBUG BEGIN_STMT
  _3 = ComFilterProp_loc.ComFilterRef;
  _4 = _3 + 1;
  ComFilterProp_loc.ComFilterRef = _4;
  # DEBUG BEGIN_STMT
  _5 = ComFilterPropPtr_12(D)->ComFilterType;
  switch (_5) <default: <L9> [33.33%], case 3: <L2> [33.33%], case 4: <L3> [33.33%]>

  <bb 5> [local count: 236199579]:
<L2>:
  # DEBUG BEGIN_STMT
  _7 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_14(D)].HiWord;
  FilterResult_new_differs_x_23 = Com_EB_FilterUint32 (&ComFilterProp_loc, _7);
  # DEBUG FilterResult_new_differs_x => FilterResult_new_differs_x_23
  # DEBUG BEGIN_STMT
  FilterResult_24 = FilterResult_17 | FilterResult_new_differs_x_23;
  # DEBUG FilterResult => FilterResult_24
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 236199579]:
<L3>:
  # DEBUG BEGIN_STMT
  _8 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_14(D)].HiWord;
  FilterResult_new_equals_x_20 = Com_EB_FilterUint32 (&ComFilterProp_loc, _8);
  # DEBUG FilterResult_new_equals_x => FilterResult_new_equals_x_20
  # DEBUG BEGIN_STMT
  FilterResult_21 = FilterResult_17 & FilterResult_new_equals_x_20;
  # DEBUG FilterResult => FilterResult_21
  # DEBUG BEGIN_STMT

  <bb 7> [local count: 1073670958]:
  # FilterResult_9 = PHI <FilterResult_6(3), FilterResult_24(5), FilterResult_21(6), FilterResult_17(4)>
<L9>:
  # DEBUG FilterResult => FilterResult_9
  # DEBUG BEGIN_STMT
  ComFilterProp_loc ={v} {CLOBBER};
  return FilterResult_9;

}



;; Function Com_EB_TxDM_TMNone (Com_EB_TxDM_TMNone, funcdef_no=190, decl_uid=6257, cgraph_uid=191, symbol_order=195)


Symbols to be put in SSA form
{ D.12385 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


Removing basic block 7
Removing basic block 9
Removing basic block 10
Merging blocks 11 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 8 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Com_EB_TxDM_TMNone (const struct ComTxIPduType * IPduPtr, ComIPduRefType PduId)
{
  uint8 BitRes;
  boolean TxDM;
  unsigned char _1;
  unsigned char _2;
  uint8 * Com_gDataMemPtr.478_3;
  const struct Com_ConfigType * Com_gConfigPtr.479_4;
  short unsigned int _5;
  int _6;
  int _7;
  int _8;
  sizetype _9;
  uint8 * _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  uint8 iftmp.480_15;
  uint8 iftmp.480_21;
  uint8 iftmp.480_22;
  short unsigned int _25;
  short unsigned int _26;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_17(D)->ComTxIPduFlags;
  _2 = _1 >> 1;
  TxDM_18 = _2 & 1;
  # DEBUG TxDM => TxDM_18
  # DEBUG BEGIN_STMT
  if (TxDM_18 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.478_3 = Com_gDataMemPtr;
  Com_gConfigPtr.479_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.479_4->ComTxIPduStatusBase;
  _6 = (int) _5;
  _7 = (int) PduId_19(D);
  _8 = _6 + _7;
  _9 = (sizetype) _8;
  _10 = Com_gDataMemPtr.478_3 + _9;
  _11 = *_10;
  _12 = _11 >> 6;
  BitRes_20 = _12 & 1;
  # DEBUG BitRes => BitRes_20
  # DEBUG BEGIN_STMT
  if (BitRes_20 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 268435456]:
  _13 = IPduPtr_17(D)->ComTxModeModes;
  iftmp.480_22 = _13 & 15;
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 268435456]:
  _14 = IPduPtr_17(D)->ComTxModeModes;
  iftmp.480_21 = _14 >> 4;

  <bb 6> [local count: 536870913]:
  # iftmp.480_15 = PHI <iftmp.480_22(4), iftmp.480_21(5)>
  # DEBUG TMOther => iftmp.480_15
  # DEBUG BEGIN_STMT
  if (iftmp.480_15 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 177167401]:
  # DEBUG IPduPtr => IPduPtr_17(D)
  # DEBUG PduId => PduId_19(D)
  # DEBUG INLINE_ENTRY Com_EB_TxDM_TMNone
  # DEBUG BEGIN_STMT
  _25 = IPduPtr_17(D)->ComTxTimeoutFactorValue;
  _26 = IPduPtr_17(D)->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_19(D), _25, _26);
  # DEBUG BEGIN_STMT

  <bb 8> [local count: 1073741824]:
  # DEBUG IPduPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG TxDM => NULL
  # DEBUG BitRes => NULL
  # DEBUG TMOther => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_MdtQueue.isra.0 (Com_EB_MdtQueue.isra.0, funcdef_no=321, decl_uid=12934, cgraph_uid=332, symbol_order=345)

Com_EB_MdtQueue.isra.0 (ComIPduRefType Pdu, const ComIPduRefType ISRA.1076, ComTxIPduMinimumDelayTimeFactorType MDT)
{
  ComTxIPduMinimumDelayTimeFactorType globalTime;
  ComTxIPduMinimumDelayTimeFactorType TimeOut;
  ComTxIPduMinimumDelayTimeFactorType * const MDTQueueValPtr;
  uint8 * Com_gDataMemPtr.276_1;
  const struct Com_ConfigType * Com_gConfigPtr.277_2;
  short unsigned int _3;
  sizetype _4;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct Com_ConfigType * Com_gConfigPtr.279_14;
  short unsigned int _15;
  int _16;
  int _18;
  int _19;
  sizetype _20;
  uint8 * _21;
  unsigned char _22;
  unsigned char _23;

  <bb 3> [local count: 1073741824]:
  # DEBUG IPduPtr s=> IPduPtr

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.276_1 = Com_gDataMemPtr;
  Com_gConfigPtr.277_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.277_2->ComMDTQueueBase;
  _4 = (sizetype) _3;
  # DEBUG MDTQueueBase => Com_gDataMemPtr.276_1 + _4
  # DEBUG BEGIN_STMT
  _6 = ISRA.1076_29(D);
  _7 = (unsigned int) _6;
  _8 = _7 * 2;
  _9 = _4 + _8;
  MDTQueueValPtr_10 = Com_gDataMemPtr.276_1 + _9;
  # DEBUG MDTQueueValPtr => MDTQueueValPtr_10
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_11 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_11
  # DEBUG BEGIN_STMT
  TimeOut_13 = globalTime_11 + MDT_12(D);
  # DEBUG TimeOut => TimeOut_13
  # DEBUG BEGIN_STMT
  *MDTQueueValPtr_10 = TimeOut_13;
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.279_14 = Com_gConfigPtr;
  _15 = Com_gConfigPtr.279_14->ComTxIPduStatusBase;
  _16 = (int) _15;
  _18 = (int) Pdu_17(D);
  _19 = _16 + _18;
  _20 = (sizetype) _19;
  _21 = Com_gDataMemPtr.276_1 + _20;
  _22 = *_21;
  _23 = _22 | 2;
  *_21 = _23;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_CheckRxSignalUpdateBitAndDM.isra.0 (Com_EB_CheckRxSignalUpdateBitAndDM.isra.0, funcdef_no=322, decl_uid=12953, cgraph_uid=333, symbol_order=346)

Com_EB_CheckRxSignalUpdateBitAndDM.isra.0 (const struct ComRxSignalType * SignalPtr, const ComRAMIdxType * ISRA.1084, uint8 * passFilter_MASKED_NEW_DIFFERS_MASKED_OLD)
{
  uint8 SignalUpdated;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const uint32 UpdateBitByte;
  uint8 restart;
  uint8 * const RxDMFlagPtr;
  const uint8 RunningFlag;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  const ComIPduRefType ComRxPduId;
  uint8 * const IPduFlagBytePtr;
  const struct Com_ConfigType * Com_gConfigPtr.652_1;
  long unsigned int _2;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _9;
  unsigned char _10;
  unsigned char _11;
  short unsigned int _12;
  short unsigned int _13;
  uint8 * Com_gDataMemPtr.654_16;
  short unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  uint8 * _21;
  unsigned char _22;
  int _23;
  short unsigned int _24;
  short unsigned int _25;
  unsigned int _26;
  int _27;
  unsigned char _28;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  const struct Com_ConfigType * Com_gConfigPtr.656_33;
  short unsigned int _34;
  unsigned int _35;
  short unsigned int _36;
  short unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _46;
  int _47;
  int _48;
  unsigned char _49;
  unsigned char _50;
  int _51;
  int _52;
  int _53;
  unsigned char _54;
  unsigned int _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  short unsigned int _60;
  const struct Com_ConfigType * Com_gConfigPtr.658_62;
  short unsigned int _63;
  int _64;
  int _65;
  int _66;
  sizetype _67;
  unsigned char _69;
  unsigned char _70;
  int _71;
  int _72;
  int _73;
  unsigned char _74;
  unsigned int _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  unsigned int _80;
  unsigned char _81;
  unsigned char _82;
  short unsigned int _83;

  <bb 13> [local count: 1073741823]:
  # DEBUG IPduPtr s=> IPduPtr
  # DEBUG pduLength s=> pduLength

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalUpdated => 1
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.652_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.652_1->ComRxSignalExtRef;
  _4 = SignalPtr_3(D)->ComSignalExtRef;
  _5 = (unsigned int) _4;
  _6 = _5 * 14;
  _7 = _2 + _6;
  SignalExtPtr_8 = Com_gConfigPtr.652_1 + _7;
  # DEBUG SignalExtPtr => SignalExtPtr_8
  # DEBUG BEGIN_STMT
  _9 = SignalExtPtr_8->ComRxSignalExtFlags;
  _10 = _9 >> 1;
  _11 = _10 & 1;
  if (_11 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 3> [local count: 536870911]:
  # DEBUG BEGIN_STMT
  _12 = SignalExtPtr_8->ComUpdateBitPositionInBit;
  _13 = _12 >> 3;
  UpdateBitByte_14 = (const uint32) _13;
  # DEBUG UpdateBitByte => UpdateBitByte_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *passFilter_MASKED_NEW_DIFFERS_MASKED_OLD_15(D) = 0;
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.654_16 = Com_gDataMemPtr;
  _18 = *ISRA.1084_98(D);
  _19 = (long unsigned int) _18;
  _20 = UpdateBitByte_14 + _19;
  _21 = Com_gDataMemPtr.654_16 + _20;
  _22 = *_21;
  _23 = (int) _22;
  _24 = SignalExtPtr_8->ComUpdateBitPositionInBit;
  _25 = _24 & 7;
  _26 = (unsigned int) _25;
  _27 = _23 >> _26;
  _28 = (unsigned char) _27;
  SignalUpdated_29 = _28 & 1;
  # DEBUG SignalUpdated => SignalUpdated_29
  # DEBUG BEGIN_STMT
  if (SignalUpdated_29 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 4> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  _30 = SignalExtPtr_8->ComRxSignalExtFlags;
  _31 = _30 >> 2;
  _32 = _31 & 1;
  if (_32 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 12>; [67.00%]

  <bb 5> [local count: 88583700]:
  # DEBUG BEGIN_STMT
  # DEBUG restart => 0
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.656_33 = Com_gConfigPtr;
  _34 = Com_gConfigPtr.656_33->ComRxTimeoutSignalStatusQueueBase;
  _35 = (unsigned int) _34;
  _36 = SignalExtPtr_8->RxSigDMQueueRef;
  _37 = _36 >> 2;
  _38 = (unsigned int) _37;
  _39 = _35 + _38;
  RxDMFlagPtr_40 = Com_gDataMemPtr.654_16 + _39;
  # DEBUG RxDMFlagPtr => RxDMFlagPtr_40
  # DEBUG BEGIN_STMT
  _41 = (unsigned char) _36;
  _42 = _41 & 3;
  _43 = _42 * 2;
  RunningFlag_44 = _43 + 1;
  # DEBUG RunningFlag => RunningFlag_44
  # DEBUG BEGIN_STMT
  # DEBUG ToutFlag => _43
  # DEBUG BEGIN_STMT
  TimeOutOffset_45 = SignalExtPtr_8->ComRxTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_45
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _46 = *RxDMFlagPtr_40;
  _47 = (int) RunningFlag_44;
  _48 = 1 << _47;
  _49 = (unsigned char) _48;
  _50 = _46 & _49;
  if (_50 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 29232621]:
  # DEBUG BEGIN_STMT
  _51 = (int) _46;
  _52 = (int) _43;
  _53 = _51 >> _52;
  _54 = (unsigned char) _53;
  restart_55 = _54 & 1;
  # DEBUG restart => restart_55
  # DEBUG BEGIN_STMT
  _56 = 1 << _52;
  _57 = (unsigned char) _56;
  _58 = ~_57;
  _59 = _46 & _58;
  *RxDMFlagPtr_40 = _59;
  # DEBUG BEGIN_STMT
  _60 = MEM[(short unsigned int *)SignalExtPtr_8 + 6B];
  # DEBUG D#3 => SignalExtPtr_8
  Com_EB_RxDMSignalQueue.isra.0 (_60, TimeOutOffset_45);
  goto <bb 10>; [100.00%]

  <bb 7> [local count: 59351079]:
  # DEBUG BEGIN_STMT
  ComRxPduId_61 = SignalPtr_3(D)->ComIPduRef;
  # DEBUG ComRxPduId => ComRxPduId_61
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.658_62 = Com_gConfigPtr;
  _63 = Com_gConfigPtr.658_62->ComRxIPduStatusBase;
  _64 = (int) _63;
  _65 = (int) ComRxPduId_61;
  _66 = _64 + _65;
  _67 = (sizetype) _66;
  IPduFlagBytePtr_68 = Com_gDataMemPtr.654_16 + _67;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_68
  # DEBUG BEGIN_STMT
  _69 = *IPduFlagBytePtr_68;
  _70 = _69 & 16;
  if (_70 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 29675540]:
  # DEBUG restart => 0
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 9> [local count: 29675540]:
  # DEBUG BEGIN_STMT
  _71 = (int) _46;
  _72 = (int) _43;
  _73 = _71 >> _72;
  _74 = (unsigned char) _73;
  restart_75 = _74 & 1;
  # DEBUG restart => restart_75
  # DEBUG BEGIN_STMT
  _76 = 1 << _72;
  _77 = (unsigned char) _76;
  _78 = ~_77;
  _79 = _46 & _78;
  # DEBUG BEGIN_STMT
  _80 = 1 << _47;
  _81 = (unsigned char) _80;
  _82 = _79 | _81;
  *RxDMFlagPtr_40 = _82;
  # DEBUG BEGIN_STMT
  _83 = MEM[(short unsigned int *)SignalExtPtr_8 + 6B];
  # DEBUG D#3 => SignalExtPtr_8
  Com_EB_RxDMSignalQueue.isra.0 (_83, TimeOutOffset_45);

  <bb 10> [local count: 58908161]:
  # restart_84 = PHI <restart_55(6), restart_75(9)>
  # DEBUG restart => restart_84
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (restart_84 == 1)
    goto <bb 11>; [34.00%]
  else
    goto <bb 12>; [66.00%]

  <bb 11> [local count: 20028775]:
  # DEBUG BEGIN_STMT
  *passFilter_MASKED_NEW_DIFFERS_MASKED_OLD_15(D) = 1;

  <bb 12> [local count: 1073741824]:
  # SignalUpdated_85 = PHI <1(2), SignalUpdated_29(3), 1(4), 1(8), 1(10), 1(11)>
  # DEBUG SignalUpdated => SignalUpdated_85
  # DEBUG BEGIN_STMT
  return SignalUpdated_85;

}



;; Function Com_GetRxSignalCfg (Com_GetRxSignalCfg, funcdef_no=256, decl_uid=10356, cgraph_uid=257, symbol_order=261)


Symbols to be put in SSA form
{ D.12408 D.14724 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Removing basic block 5
Removing basic block 9
Merging blocks 10 and 11
Merging blocks 10 and 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Com_GetRxSignalCfg (Com_SignalIdType SignalId, uint8 ServiceId)
{
  const struct ComRxSignalType * D.14724;
  const struct ComRxSignalType * SignalPtr;
  unsigned char Com_InitStatus.824_1;
  const struct Com_ConfigType * Com_gConfigPtr.825_2;
  short unsigned int _3;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalPtr => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.824_1 = Com_InitStatus;
  if (Com_InitStatus.824_1 == 0)
    goto <bb 3>; [16.75%]
  else
    goto <bb 4>; [83.25%]

  <bb 3> [local count: 179851756]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_15(D), 2);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 893890069]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.825_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.825_2->ComRxSignalArraySize;
  if (_3 <= SignalId_13(D))
    goto <bb 5>; [16.75%]
  else
    goto <bb 6>; [83.25%]

  <bb 5> [local count: 149726587]:
  # DEBUG D#65 => SignalId_13(D)
  # DEBUG ServiceId => ServiceId_15(D)
  # DEBUG INLINE_ENTRY Com_GetRxSignalCfg
  # DEBUG D#66 => D#65
  # DEBUG SignalId => D#66
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_15(D), 1);
  # DEBUG SignalPtr => 0B
  # DEBUG BEGIN_STMT
  _19 = 0B;
  # DEBUG ServiceId => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG SignalId => NULL
  SignalPtr_4 = _19;
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 744163483]:
  # DEBUG BEGIN_STMT
  _6 = Com_gConfigPtr.825_2->ComRxSignalRef;
  _7 = (unsigned int) SignalId_13(D);
  _8 = _7 * 20;
  _9 = _6 + _8;
  SignalPtr_14 = Com_gConfigPtr.825_2 + _9;
  # DEBUG SignalPtr => SignalPtr_14

  <bb 7> [local count: 1073741824]:
  # SignalPtr_10 = PHI <0B(3), SignalPtr_4(5), SignalPtr_14(6)>
  # DEBUG SignalPtr => SignalPtr_10
  # DEBUG BEGIN_STMT
  return SignalPtr_10;

}



;; Function Com_GetRxSignalGroupCfg (Com_GetRxSignalGroupCfg, funcdef_no=261, decl_uid=10471, cgraph_uid=262, symbol_order=266)


Symbols to be put in SSA form
{ D.12409 D.14730 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Removing basic block 5
Removing basic block 9
Merging blocks 10 and 11
Merging blocks 10 and 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Com_GetRxSignalGroupCfg (Com_SignalGroupIdType SignalGroupId, uint8 ServiceId)
{
  const struct ComRxSignalGroupType * D.14730;
  const struct ComRxSignalGroupType * SignalGPtr;
  unsigned char Com_InitStatus.836_1;
  const struct Com_ConfigType * Com_gConfigPtr.837_2;
  short unsigned int _3;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalGPtr => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.836_1 = Com_InitStatus;
  if (Com_InitStatus.836_1 == 0)
    goto <bb 3>; [16.75%]
  else
    goto <bb 4>; [83.25%]

  <bb 3> [local count: 179851756]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_15(D), 2);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 893890069]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.837_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.837_2->ComRxSignalGroupArraySize;
  if (_3 <= SignalGroupId_13(D))
    goto <bb 5>; [16.75%]
  else
    goto <bb 6>; [83.25%]

  <bb 5> [local count: 149726587]:
  # DEBUG D#67 => SignalGroupId_13(D)
  # DEBUG ServiceId => ServiceId_15(D)
  # DEBUG INLINE_ENTRY Com_GetRxSignalGroupCfg
  # DEBUG D#68 => D#67
  # DEBUG SignalGroupId => D#68
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_15(D), 1);
  # DEBUG SignalGPtr => 0B
  # DEBUG BEGIN_STMT
  _19 = 0B;
  # DEBUG ServiceId => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG SignalGroupId => NULL
  SignalGPtr_4 = _19;
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 744163483]:
  # DEBUG BEGIN_STMT
  _6 = Com_gConfigPtr.837_2->ComRxSignalGroupRef;
  _7 = (unsigned int) SignalGroupId_13(D);
  _8 = _7 * 10;
  _9 = _6 + _8;
  SignalGPtr_14 = Com_gConfigPtr.837_2 + _9;
  # DEBUG SignalGPtr => SignalGPtr_14

  <bb 7> [local count: 1073741824]:
  # SignalGPtr_10 = PHI <0B(3), SignalGPtr_4(5), SignalGPtr_14(6)>
  # DEBUG SignalGPtr => SignalGPtr_10
  # DEBUG BEGIN_STMT
  return SignalGPtr_10;

}



;; Function Com_GetTxSignalCfg (Com_GetTxSignalCfg, funcdef_no=276, decl_uid=10582, cgraph_uid=277, symbol_order=281)


Symbols to be put in SSA form
{ D.12411 D.14736 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Removing basic block 5
Removing basic block 9
Merging blocks 10 and 11
Merging blocks 10 and 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Com_GetTxSignalCfg (Com_SignalIdType SignalId, uint8 ServiceId)
{
  const struct ComTxSignalType * D.14736;
  const struct ComTxSignalType * SignalPtr;
  unsigned char Com_InitStatus.852_1;
  const struct Com_ConfigType * Com_gConfigPtr.853_2;
  short unsigned int _3;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalPtr => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.852_1 = Com_InitStatus;
  if (Com_InitStatus.852_1 == 0)
    goto <bb 3>; [16.75%]
  else
    goto <bb 4>; [83.25%]

  <bb 3> [local count: 179851756]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_15(D), 2);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 893890069]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.853_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.853_2->ComTxSignalArraySize;
  if (_3 <= SignalId_13(D))
    goto <bb 5>; [16.75%]
  else
    goto <bb 6>; [83.25%]

  <bb 5> [local count: 149726587]:
  # DEBUG D#69 => SignalId_13(D)
  # DEBUG ServiceId => ServiceId_15(D)
  # DEBUG INLINE_ENTRY Com_GetTxSignalCfg
  # DEBUG D#70 => D#69
  # DEBUG SignalId => D#70
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_15(D), 1);
  # DEBUG SignalPtr => 0B
  # DEBUG BEGIN_STMT
  _19 = 0B;
  # DEBUG ServiceId => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG SignalId => NULL
  SignalPtr_4 = _19;
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 744163483]:
  # DEBUG BEGIN_STMT
  _6 = Com_gConfigPtr.853_2->ComTxSignalRef;
  _7 = (unsigned int) SignalId_13(D);
  _8 = _7 * 26;
  _9 = _6 + _8;
  SignalPtr_14 = Com_gConfigPtr.853_2 + _9;
  # DEBUG SignalPtr => SignalPtr_14

  <bb 7> [local count: 1073741824]:
  # SignalPtr_10 = PHI <0B(3), SignalPtr_4(5), SignalPtr_14(6)>
  # DEBUG SignalPtr => SignalPtr_10
  # DEBUG BEGIN_STMT
  return SignalPtr_10;

}



;; Function Com_GetTxSignalGroupCfg (Com_GetTxSignalGroupCfg, funcdef_no=277, decl_uid=10613, cgraph_uid=278, symbol_order=282)


Symbols to be put in SSA form
{ D.12412 D.14742 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Removing basic block 5
Removing basic block 9
Merging blocks 10 and 11
Merging blocks 10 and 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Com_GetTxSignalGroupCfg (Com_SignalGroupIdType SignalGroupId, uint8 ServiceId)
{
  const struct ComTxSignalGroupType * D.14742;
  const struct ComTxSignalGroupType * SignalGPtr;
  unsigned char Com_InitStatus.856_1;
  const struct Com_ConfigType * Com_gConfigPtr.857_2;
  short unsigned int _3;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalGPtr => 0B
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.856_1 = Com_InitStatus;
  if (Com_InitStatus.856_1 == 0)
    goto <bb 3>; [16.75%]
  else
    goto <bb 4>; [83.25%]

  <bb 3> [local count: 179851756]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_15(D), 2);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 893890069]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.857_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.857_2->ComTxSignalGroupArraySize;
  if (_3 <= SignalGroupId_13(D))
    goto <bb 5>; [16.75%]
  else
    goto <bb 6>; [83.25%]

  <bb 5> [local count: 149726587]:
  # DEBUG D#71 => SignalGroupId_13(D)
  # DEBUG ServiceId => ServiceId_15(D)
  # DEBUG INLINE_ENTRY Com_GetTxSignalGroupCfg
  # DEBUG D#72 => D#71
  # DEBUG SignalGroupId => D#72
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_15(D), 1);
  # DEBUG SignalGPtr => 0B
  # DEBUG BEGIN_STMT
  _19 = 0B;
  # DEBUG ServiceId => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG SignalGroupId => NULL
  SignalGPtr_4 = _19;
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 744163483]:
  # DEBUG BEGIN_STMT
  _6 = Com_gConfigPtr.857_2->ComTxSignalGroupRef;
  _7 = (unsigned int) SignalGroupId_13(D);
  _8 = _7 * 32;
  _9 = _6 + _8;
  SignalGPtr_14 = Com_gConfigPtr.857_2 + _9;
  # DEBUG SignalGPtr => SignalGPtr_14

  <bb 7> [local count: 1073741824]:
  # SignalGPtr_10 = PHI <0B(3), SignalGPtr_4(5), SignalGPtr_14(6)>
  # DEBUG SignalGPtr => SignalGPtr_10
  # DEBUG BEGIN_STMT
  return SignalGPtr_10;

}



;; Function Com_CopyRxSignalGroupArray (Com_CopyRxSignalGroupArray, funcdef_no=266, decl_uid=10487, cgraph_uid=267, symbol_order=271)


Symbols to be put in SSA form
{ D.12418 D.14751 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 18
Number of blocks to update: 17 ( 94%)


Merging blocks 2 and 7
Removing basic block 3
Merging blocks 13 and 6
Removing basic block 14
Removing basic block 15
Merging blocks 16 and 17
Merging blocks 2 and 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Com_CopyRxSignalGroupArray (uint8 * SGArrayPtr, const struct ComRxSignalGroupType * SignalGPtr, const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  const uint8 * const valPtr;
  uint8 RxDMTout;
  const struct ComRxSignalExtType * const SignalExtPtr;
  boolean RxDMReplace;
  boolean D.14751;
  const uint8 * const valPtr;
  const boolean RxDMReplace;
  uint8 * Com_gDataMemPtr.605_1;
  short unsigned int _2;
  int _3;
  short unsigned int _4;
  int _5;
  int _6;
  sizetype _7;
  short unsigned int _8;
  long unsigned int _9;
  short unsigned int _21;
  const struct Com_ConfigType * Com_gConfigPtr.606_23;
  long unsigned int _24;
  short unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  sizetype _28;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  uint8 * Com_gDataMemPtr.608_34;
  short unsigned int _35;
  unsigned int _36;
  short unsigned int _37;
  short unsigned int _38;
  unsigned int _39;
  unsigned int _40;
  uint8 * _41;
  unsigned char _42;
  int _43;
  short unsigned int _44;
  unsigned int _45;
  unsigned int _46;
  int _47;
  unsigned char _48;
  uint8 * Com_gDataMemPtr.610_50;
  short unsigned int _51;
  int _52;
  int _53;
  int _54;
  sizetype _55;
  uint8 * _56;
  unsigned char _57;
  unsigned char _58;
  const struct Com_ConfigType * Com_gConfigPtr.604_62;
  long unsigned int _63;
  short unsigned int _64;
  sizetype _65;
  sizetype _66;
  short unsigned int _68;
  long unsigned int _69;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _21 = MEM[(short unsigned int *)SignalGPtr_11(D) + 8B];
  # DEBUG D#7 => SignalGPtr_11(D)
  # DEBUG PduId => PduId_12(D)
  # DEBUG INLINE_ENTRY Com_ReceiveSignalGroup_Replace
  # DEBUG SignalGPtr => D#7
  # DEBUG BEGIN_STMT
  # DEBUG RxDMReplace => 0
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.606_23 = Com_gConfigPtr;
  _24 = Com_gConfigPtr.606_23->ComRxSignalExtRef;
  _25 = _21;
  _26 = (unsigned int) _25;
  _27 = _26 * 14;
  _28 = _24 + _27;
  SignalExtPtr_29 = Com_gConfigPtr.606_23 + _28;
  # DEBUG SignalExtPtr => SignalExtPtr_29
  # DEBUG BEGIN_STMT
  _30 = SignalExtPtr_29->ComRxSignalExtFlags;
  _31 = _30 & 1;
  if (_31 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _32 = _30 >> 2;
  _33 = _32 & 1;
  if (_33 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.608_34 = Com_gDataMemPtr;
  _35 = Com_gConfigPtr.606_23->ComRxDMInvSignalGroupStatusQueueBase;
  _36 = (unsigned int) _35;
  _37 = SignalExtPtr_29->RxSigDMQueueRef;
  _38 = _37 >> 2;
  _39 = (unsigned int) _38;
  _40 = _36 + _39;
  _41 = Com_gDataMemPtr.608_34 + _40;
  _42 = *_41;
  _43 = (int) _42;
  _44 = _37 & 3;
  _45 = (unsigned int) _44;
  _46 = _45 * 2;
  _47 = _43 >> _46;
  _48 = (unsigned char) _47;
  RxDMTout_49 = _48 & 1;
  # DEBUG RxDMTout => RxDMTout_49
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.610_50 = Com_gDataMemPtr;
  _51 = Com_gConfigPtr.606_23->ComRxIPduStatusBase;
  _52 = (int) _51;
  _53 = (int) PduId_12(D);
  _54 = _52 + _53;
  _55 = (sizetype) _54;
  _56 = Com_gDataMemPtr.610_50 + _55;
  _57 = *_56;
  _58 = _57 >> 2;
  RxDMTout_59 = _58 & 1;
  # DEBUG RxDMTout => RxDMTout_59

  <bb 6> [local count: 536870913]:
  # RxDMTout_61 = PHI <RxDMTout_49(4), RxDMTout_59(5)>
  # DEBUG RxDMTout => RxDMTout_61
  # DEBUG BEGIN_STMT

  <bb 7> [local count: 1073741824]:
  # RxDMReplace_60 = PHI <0(2), RxDMTout_61(6)>
  # DEBUG RxDMReplace => RxDMReplace_60
  # DEBUG BEGIN_STMT
  _70 = RxDMReplace_60;
  # DEBUG PduId => NULL
  # DEBUG RxDMReplace => NULL
  # DEBUG SignalExtPtr => NULL
  # DEBUG RxDMTout => NULL
  RxDMReplace_14 = _70;
  # DEBUG RxDMReplace => RxDMReplace_14
  # DEBUG BEGIN_STMT
  if (RxDMReplace_14 == 1)
    goto <bb 8>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 8> [local count: 365072220]:
  # DEBUG D#74 => PduId_12(D)
  # DEBUG SGArrayPtr => SGArrayPtr_18(D)
  # DEBUG SignalGPtr => SignalGPtr_11(D)
  # DEBUG IPduPtr => IPduPtr_15(D)
  # DEBUG INLINE_ENTRY Com_CopyRxSignalGroupArray
  # DEBUG D#75 => D#74
  # DEBUG PduId => D#75
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.604_62 = Com_gConfigPtr;
  _63 = IPduPtr_15(D)->ComInitValueRef;
  _64 = SignalGPtr_11(D)->ComSignalPositionInByte;
  _65 = (sizetype) _64;
  _66 = _63 + _65;
  valPtr_67 = Com_gConfigPtr.604_62 + _66;
  # DEBUG valPtr => valPtr_67
  # DEBUG BEGIN_STMT
  _68 = SignalGPtr_11(D)->ComByteSize;
  _69 = (long unsigned int) _68;
  TS_MemCpy32 (SGArrayPtr_18(D), valPtr_67, _69);
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.605_1 = Com_gDataMemPtr;
  _2 = IPduPtr_15(D)->ComIPduValueRef;
  _3 = (int) _2;
  _4 = SignalGPtr_11(D)->ComSignalPositionInByte;
  _5 = (int) _4;
  _6 = _3 + _5;
  _7 = (sizetype) _6;
  valPtr_16 = Com_gDataMemPtr.605_1 + _7;
  # DEBUG valPtr => valPtr_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _8 = SignalGPtr_11(D)->ComByteSize;
  _9 = (long unsigned int) _8;
  TS_MemCpy32 (SGArrayPtr_18(D), valPtr_16, _9);
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 10> [local count: 1073741824]:
  # DEBUG SGArrayPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG RxDMReplace => NULL
  # DEBUG valPtr => NULL
  # DEBUG valPtr => NULL
  # DEBUG PduId => NULL
  return;

}



;; Function Com_CopyRxSignalGroupArray_Shadow (Com_CopyRxSignalGroupArray_Shadow, funcdef_no=265, decl_uid=6178, cgraph_uid=266, symbol_order=270)


Symbols to be put in SSA form
{ D.12419 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_CopyRxSignalGroupArray_Shadow (uint8 * retvalPtr, struct Com_RxSGArrayInfoType * RxSGArrayInfoType, const struct ComRxSignalGroupType * SignalGPtr, const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  uint8 * const shadowBufferPtr;
  const ComRAMIdxType shadowBufferRef;
  uint8 * Com_gDataMemPtr.603_1;
  sizetype _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  shadowBufferRef_5 = SignalGPtr_4(D)->ComSignalGroupValueRef;
  # DEBUG shadowBufferRef => shadowBufferRef_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (shadowBufferRef_5 == 65535)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG D#76 => RxSGArrayInfoType_11(D)
  # DEBUG D#77 => SignalGPtr_4(D)
  # DEBUG D#78 => IPduPtr_7(D)
  # DEBUG D#79 => PduId_8(D)
  # DEBUG retvalPtr => retvalPtr_10(D)
  # DEBUG INLINE_ENTRY Com_CopyRxSignalGroupArray_Shadow
  # DEBUG D#83 => D#76
  # DEBUG RxSGArrayInfoType => D#83
  # DEBUG D#82 => D#77
  # DEBUG SignalGPtr => D#82
  # DEBUG D#81 => D#78
  # DEBUG IPduPtr => D#81
  # DEBUG D#80 => D#79
  # DEBUG PduId => D#80
  # DEBUG BEGIN_STMT
  *retvalPtr_10(D) = 128;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 14, 1);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.603_1 = Com_gDataMemPtr;
  _2 = (sizetype) shadowBufferRef_5;
  shadowBufferPtr_6 = Com_gDataMemPtr.603_1 + _2;
  # DEBUG shadowBufferPtr => shadowBufferPtr_6
  # DEBUG BEGIN_STMT
  Com_CopyRxSignalGroupArray (shadowBufferPtr_6, SignalGPtr_4(D), IPduPtr_7(D), PduId_8(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG retvalPtr => NULL
  # DEBUG shadowBufferRef => NULL
  # DEBUG shadowBufferPtr => NULL
  # DEBUG RxSGArrayInfoType => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG PduId => NULL
  return;

}



;; Function Com_CopyRxSignalGroupArray_Array (Com_CopyRxSignalGroupArray_Array, funcdef_no=264, decl_uid=10482, cgraph_uid=265, symbol_order=269)


Symbols to be put in SSA form
{ D.12420 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 4
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_CopyRxSignalGroupArray_Array (uint8 * retvalPtr, struct Com_RxSGArrayInfoType * RxSGArrayInfoPtr, const struct ComRxSignalGroupType * SignalGPtr, const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  short unsigned int _1;
  short unsigned int _2;
  uint8 * _13;
  uint16 * _14;
  short unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = RxSGArrayInfoPtr_4(D)->inSGArrayLength;
  _2 = SignalGPtr_5(D)->ComByteSize;
  if (_1 < _2)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  *retvalPtr_8(D) = 128;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 68, 1);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG D#84 => retvalPtr_8(D)
  # DEBUG RxSGArrayInfoPtr => RxSGArrayInfoPtr_4(D)
  # DEBUG SignalGPtr => SignalGPtr_5(D)
  # DEBUG IPduPtr => IPduPtr_6(D)
  # DEBUG PduId => PduId_7(D)
  # DEBUG INLINE_ENTRY Com_CopyRxSignalGroupArray_Array
  # DEBUG D#85 => D#84
  # DEBUG retvalPtr => D#85
  # DEBUG BEGIN_STMT
  _13 = RxSGArrayInfoPtr_4(D)->SGArrayPtr;
  Com_CopyRxSignalGroupArray (_13, SignalGPtr_5(D), IPduPtr_6(D), PduId_7(D));
  # DEBUG BEGIN_STMT
  _14 = RxSGArrayInfoPtr_4(D)->outSGArrayLengthPtr;
  _15 = SignalGPtr_5(D)->ComByteSize;
  *_14 = _15;

  <bb 5> [local count: 1073741824]:
  # DEBUG RxSGArrayInfoPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG retvalPtr => NULL
  return;

}



;; Function Com_EB_CalculateGroupSignalTM.isra.0 (Com_EB_CalculateGroupSignalTM.isra.0, funcdef_no=339, decl_uid=13206, cgraph_uid=351, symbol_order=364)

Com_EB_CalculateGroupSignalTM.isra.0 (const struct ComTxSignalType * GSignalPtr, const ComRAMIdxType ISRA.1130, boolean TMSResult)
{
  uint8 * const FlagPtr;
  boolean OldFilterResult;
  boolean CurrentTM;
  const ComSignalGroupRefType SignalGId;
  uint8 * Com_gDataMemPtr.254_1;
  short unsigned int _3;
  unsigned int _4;
  short unsigned int _6;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _12;
  int _13;
  unsigned char _14;
  unsigned char _15;
  int _16;
  int _17;
  unsigned char _18;
  const struct Com_ConfigType * Com_gConfigPtr.256_20;
  short unsigned int _21;
  int _22;
  int _23;
  int _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  const struct Com_ConfigType * Com_gConfigPtr.260_30;
  short unsigned int _31;
  int _32;
  int _33;
  sizetype _34;
  uint8 * _35;
  short unsigned int _36;
  short unsigned int _37;
  long unsigned int _38;
  short unsigned int _39;
  short unsigned int _40;
  long unsigned int _41;

  <bb 13> [local count: 1073741823]:
  # DEBUG SignalGPtr s=> SignalGPtr

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.254_1 = Com_gDataMemPtr;
  _3 = ISRA.1130_50(D);
  _4 = (unsigned int) _3;
  _6 = GSignalPtr_5(D)->ComPositionOfTMSFlag;
  _7 = _6 >> 3;
  _8 = (unsigned int) _7;
  _9 = _4 + _8;
  FlagPtr_10 = Com_gDataMemPtr.254_1 + _9;
  # DEBUG FlagPtr => FlagPtr_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalGId_11 = GSignalPtr_5(D)->ComSignalBase.ComSignalGroupRef;
  # DEBUG SignalGId => SignalGId_11
  # DEBUG BEGIN_STMT
  _12 = *FlagPtr_10;
  _13 = (int) _12;
  _14 = (unsigned char) _6;
  _15 = _14 & 7;
  _16 = (int) _15;
  _17 = _13 >> _16;
  _18 = (unsigned char) _17;
  OldFilterResult_19 = _18 & 1;
  # DEBUG OldFilterResult => OldFilterResult_19
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.256_20 = Com_gConfigPtr;
  _21 = Com_gConfigPtr.256_20->ComTxSignalGroupStatusBase;
  _22 = (int) _21;
  _23 = (int) SignalGId_11;
  _24 = _22 + _23;
  _25 = (sizetype) _24;
  _26 = Com_gDataMemPtr.254_1 + _25;
  _27 = *_26;
  CurrentTM_28 = _27 & 1;
  # DEBUG CurrentTM => CurrentTM_28
  # DEBUG BEGIN_STMT
  if (TMSResult_29(D) == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 3> [local count: 536870911]:
  if (OldFilterResult_19 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 4> [local count: 268435456]:
  if (CurrentTM_28 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 88583700]:
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (_26, 1);

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (TMSResult_29(D) != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 7> [local count: 536870913]:
  if (CurrentTM_28 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 8> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.260_30 = Com_gConfigPtr;
  _31 = Com_gConfigPtr.260_30->ComTxSignalGroupStatusBase;
  _32 = (int) _31;
  _33 = _23 + _32;
  _34 = (sizetype) _33;
  _35 = Com_gDataMemPtr.254_1 + _34;
  TS_AtomicSetBit_8 (_35, 1);

  <bb 9> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (TMSResult_29(D) == 1)
    goto <bb 10>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 10> [local count: 365072221]:
  # DEBUG BEGIN_STMT
  _36 = GSignalPtr_5(D)->ComPositionOfTMSFlag;
  _37 = _36 & 7;
  _38 = (long unsigned int) _37;
  TS_AtomicSetBit_8 (FlagPtr_10, _38);
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  _39 = GSignalPtr_5(D)->ComPositionOfTMSFlag;
  _40 = _39 & 7;
  _41 = (long unsigned int) _40;
  TS_AtomicClearBit_8 (FlagPtr_10, _41);

  <bb 12> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_WriteShadowBuffer.isra.0 (Com_EB_WriteShadowBuffer.isra.0, funcdef_no=342, decl_uid=13276, cgraph_uid=355, symbol_order=368)


Symbols to be put in SSA form
{ D.13277 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 30
Number of blocks to update: 29 ( 97%)


Merging blocks 10 and 23
Merging blocks 20 and 2
Removing basic block 21
Removing basic block 22
Removing basic block 29
No longer having address taken: forceTrigger

Symbols to be put in SSA form
{ D.13281 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 25
Number of blocks to update: 24 ( 96%)


;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14 11 12 13
;;
;; Loop 1
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19 17 18
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 22 }
;; 9 succs { 10 16 }
;; 10 succs { 15 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 11 22 }
;; 16 succs { 20 21 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 17 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 1 }
Com_EB_WriteShadowBuffer.isra.0 (const struct ComTxSignalGroupType * SignalGPtr, const ComRAMIdxType * ISRA.1149, const uint8 * SGArrayPtr)
{
  uint32 offset;
  uint8 valuePdu;
  uint8 valueShadowBuffer;
  uint8 writeMask;
  boolean forceTrigger;
  const ComSignalDescByteType ByteSize;
  const ComRAMIdxType ComIPduValueRef;
  ComSignalDescByteType StartingByte;
  uint16 i;
  long unsigned int _5;
  const struct Com_ConfigType * Com_gConfigPtr.580_6;
  const uint8 * iftmp.579_7;
  long unsigned int _8;
  const struct Com_ConfigType * Com_gConfigPtr.582_9;
  const uint8 * iftmp.581_10;
  unsigned char _11;
  unsigned char _12;
  const uint8 * iftmp.579_14;
  uint8 * Com_gDataMemPtr.583_15;
  int _16;
  int _17;
  int _18;
  sizetype _19;
  uint8 * _20;
  const uint8 * iftmp.581_22;
  uint8 * Com_gDataMemPtr.584_23;
  int _24;
  int _25;
  int _26;
  sizetype _27;
  sizetype _29;
  sizetype _30;
  uint8 * _31;
  unsigned char _32;
  const uint8 * _33;
  unsigned char _34;
  unsigned char _35;
  const uint8 * _36;
  unsigned char _37;
  unsigned char _38;
  uint8 * Com_gDataMemPtr.587_40;
  int _41;
  int _42;
  int _43;
  sizetype _44;
  uint8 * _45;
  long unsigned int _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  uint8 * Com_gDataMemPtr.588_50;
  short unsigned int _51;
  unsigned int _52;
  short unsigned int _53;
  short unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  uint8 * _57;
  short unsigned int _58;
  long unsigned int _59;
  unsigned char _60;
  uint8 * _79;
  const uint8 * _81;
  const uint8 * _83;
  unsigned char _85;
  unsigned char _86;
  const uint8 * _87;
  unsigned char _88;
  unsigned char _89;
  unsigned char _90;
  unsigned char _91;
  unsigned char _92;
  long unsigned int _94;

  <bb 2> [local count: 441786423]:
  # DEBUG IPduPtr s=> IPduPtr
  # DEBUG BEGIN_STMT
  forceTrigger_105 = 0;
  # DEBUG forceTrigger => forceTrigger_105
  # DEBUG BEGIN_STMT
  ByteSize_2 = SignalGPtr_1(D)->ComByteSize;
  # DEBUG ByteSize => ByteSize_2
  # DEBUG BEGIN_STMT
  ComIPduValueRef_4 = *ISRA.1149_77(D);
  # DEBUG ComIPduValueRef => ComIPduValueRef_4
  # DEBUG BEGIN_STMT
  # DEBUG byteOffset => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = SignalGPtr_1(D)->ComWriteMaskRef;
  if (_5 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 220893212]:
  Com_gConfigPtr.580_6 = Com_gConfigPtr;
  iftmp.579_7 = Com_gConfigPtr.580_6 + _5;

  <bb 4> [local count: 441786423]:
  # iftmp.579_14 = PHI <0B(2), iftmp.579_7(3)>
  # DEBUG writeMaskPtr => iftmp.579_14
  # DEBUG BEGIN_STMT
  _8 = SignalGPtr_1(D)->ComTOCMaskRef;
  if (_8 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 220893212]:
  Com_gConfigPtr.582_9 = Com_gConfigPtr;
  iftmp.581_10 = Com_gConfigPtr.582_9 + _8;

  <bb 6> [local count: 441786423]:
  # iftmp.581_22 = PHI <0B(4), iftmp.581_10(5)>
  # DEBUG TOCMaskPtr => iftmp.581_22
  # DEBUG BEGIN_STMT
  _11 = SignalGPtr_1(D)->ComTxSignalGroupFlags;
  _12 = _11 & 3;
  if (_12 == 1)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 150207384]:
  # DEBUG BEGIN_STMT
  forceTrigger_106 = 1;
  # DEBUG forceTrigger => forceTrigger_106

  <bb 8> [local count: 441786423]:
  # forceTrigger_99 = PHI <forceTrigger_105(6), forceTrigger_106(7)>
  # DEBUG forceTrigger => forceTrigger_99
  # DEBUG BEGIN_STMT
  StartingByte_13 = SignalGPtr_1(D)->ComSignalPositionInByte;
  # DEBUG StartingByte => StartingByte_13
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ByteSize_2 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 9> [local count: 220893212]:
  # DEBUG BEGIN_STMT
  if (iftmp.579_14 != 0B)
    goto <bb 10>; [53.47%]
  else
    goto <bb 16>; [46.53%]

  <bb 10> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.583_15 = Com_gDataMemPtr;
  _16 = (int) ComIPduValueRef_4;
  _17 = (int) StartingByte_13;
  _18 = _16 + _17;
  _19 = (sizetype) _18;
  _20 = Com_gDataMemPtr.583_15 + _19;
  # DEBUG PduValPtr => _20
  # DEBUG SGArrayValPtr => SGArrayPtr_21(D)
  # DEBUG WriteMaskPtr => iftmp.579_14
  # DEBUG TOCMaskPtr => iftmp.581_22
  # DEBUG forceTriggerPtr => &forceTrigger
  # DEBUG ByteSize => ByteSize_2
  # DEBUG INLINE_ENTRY Com_EB_WriteShadowBuffer_Fragment
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG offset => 0
  goto <bb 15>; [100.00%]

  <bb 11> [local count: 955630226]:
  # DEBUG BEGIN_STMT
  _79 = _20 + offset_78;
  valuePdu_80 = *_79;
  # DEBUG valuePdu => valuePdu_80
  # DEBUG BEGIN_STMT
  _81 = SGArrayPtr_21(D) + offset_78;
  valueShadowBuffer_82 = *_81;
  # DEBUG valueShadowBuffer => valueShadowBuffer_82
  # DEBUG BEGIN_STMT
  _83 = iftmp.579_14 + offset_78;
  writeMask_84 = *_83;
  # DEBUG writeMask => writeMask_84
  # DEBUG BEGIN_STMT
  # DEBUG D#5 => ~writeMask_84
  # DEBUG valuePdu => D#5 & valuePdu_80
  # DEBUG BEGIN_STMT
  # DEBUG valueShadowBuffer => valueShadowBuffer_82 & writeMask_84
  # DEBUG BEGIN_STMT
  if (iftmp.581_22 != 0B)
    goto <bb 12>; [70.00%]
  else
    goto <bb 14>; [30.00%]

  <bb 12> [local count: 668941158]:
  # DEBUG BEGIN_STMT
  # DEBUG valuePduCmp => valuePdu_80
  # DEBUG BEGIN_STMT
  # DEBUG valuePduCmp => valuePdu_80 & writeMask_84
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _85 = valuePdu_80 ^ valueShadowBuffer_82;
  _86 = writeMask_84 & _85;
  _87 = iftmp.581_22 + offset_78;
  _88 = *_87;
  _89 = _86 & _88;
  if (_89 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 334470579]:
  # DEBUG BEGIN_STMT
  forceTrigger_108 = 1;
  # DEBUG forceTrigger => forceTrigger_108

  <bb 14> [local count: 955630226]:
  # forceTrigger_100 = PHI <forceTrigger_101(11), forceTrigger_101(12), forceTrigger_108(13)>
  # DEBUG forceTrigger => forceTrigger_100
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _90 = valuePdu_80 ^ valueShadowBuffer_82;
  _91 = writeMask_84 & _90;
  _92 = valuePdu_80 ^ _91;
  *_79 = _92;
  # DEBUG BEGIN_STMT
  offset_93 = offset_78 + 1;
  # DEBUG offset => offset_93

  <bb 15> [local count: 1073741824]:
  # offset_78 = PHI <0(10), offset_93(14)>
  # forceTrigger_101 = PHI <forceTrigger_99(10), forceTrigger_100(14)>
  # DEBUG forceTrigger => forceTrigger_101
  # DEBUG offset => offset_78
  # DEBUG BEGIN_STMT
  _94 = (long unsigned int) ByteSize_2;
  if (offset_78 < _94)
    goto <bb 11>; [89.00%]
  else
    goto <bb 22>; [11.00%]

  <bb 16> [local count: 102781611]:
  # DEBUG BEGIN_STMT
  if (iftmp.581_22 != 0B)
    goto <bb 20>; [82.57%]
  else
    goto <bb 21>; [17.43%]

  <bb 17> [local count: 686649376]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.584_23 = Com_gDataMemPtr;
  _24 = (int) ComIPduValueRef_4;
  _25 = (int) StartingByte_13;
  _26 = _24 + _25;
  _27 = (sizetype) _26;
  _29 = (sizetype) i_28;
  _30 = _27 + _29;
  _31 = Com_gDataMemPtr.584_23 + _30;
  _32 = *_31;
  _33 = SGArrayPtr_21(D) + _29;
  _34 = *_33;
  _35 = _32 ^ _34;
  _36 = iftmp.581_22 + _29;
  _37 = *_36;
  _38 = _35 & _37;
  if (_38 != 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 18> [local count: 343324688]:
  # DEBUG BEGIN_STMT
  forceTrigger_107 = 1;
  # DEBUG forceTrigger => forceTrigger_107

  <bb 19> [local count: 686649376]:
  # forceTrigger_102 = PHI <forceTrigger_103(17), forceTrigger_107(18)>
  # DEBUG forceTrigger => forceTrigger_102
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *_31 = _34;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_39 = i_28 + 1;
  # DEBUG i => i_39

  <bb 20> [local count: 771516154]:
  # i_28 = PHI <i_39(19), 0(16)>
  # forceTrigger_103 = PHI <forceTrigger_102(19), forceTrigger_99(16)>
  # DEBUG forceTrigger => forceTrigger_103
  # DEBUG i => i_28
  # DEBUG BEGIN_STMT
  if (ByteSize_2 > i_28)
    goto <bb 17>; [89.00%]
  else
    goto <bb 22>; [11.00%]

  <bb 21> [local count: 17914835]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.587_40 = Com_gDataMemPtr;
  _41 = (int) ComIPduValueRef_4;
  _42 = (int) StartingByte_13;
  _43 = _41 + _42;
  _44 = (sizetype) _43;
  _45 = Com_gDataMemPtr.587_40 + _44;
  _46 = (long unsigned int) ByteSize_2;
  TS_MemCpy32 (_45, SGArrayPtr_21(D), _46);

  <bb 22> [local count: 441786424]:
  # forceTrigger_104 = PHI <forceTrigger_99(8), forceTrigger_101(15), forceTrigger_103(20), forceTrigger_99(21)>
  # DEBUG forceTrigger => forceTrigger_104
  # DEBUG PduValPtr => NULL
  # DEBUG SGArrayValPtr => NULL
  # DEBUG WriteMaskPtr => NULL
  # DEBUG TOCMaskPtr => NULL
  # DEBUG forceTriggerPtr => NULL
  # DEBUG ByteSize => NULL
  # DEBUG writeMask => NULL
  # DEBUG valueShadowBuffer => NULL
  # DEBUG valuePdu => NULL
  # DEBUG offset => NULL
  # DEBUG BEGIN_STMT
  _47 = SignalGPtr_1(D)->ComTxSignalGroupFlags;
  _48 = _47 >> 3;
  _49 = _48 & 1;
  if (_49 != 0)
    goto <bb 23>; [33.00%]
  else
    goto <bb 24>; [67.00%]

  <bb 23> [local count: 145789520]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.588_50 = Com_gDataMemPtr;
  _51 = *ISRA.1149_77(D);
  _52 = (unsigned int) _51;
  _53 = SignalGPtr_1(D)->ComUpdateBitPositionInBit;
  _54 = _53 >> 3;
  _55 = (unsigned int) _54;
  _56 = _52 + _55;
  _57 = Com_gDataMemPtr.588_50 + _56;
  _58 = _53 & 7;
  _59 = (long unsigned int) _58;
  TS_AtomicSetBit_8 (_57, _59);

  <bb 24> [local count: 441786424]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _60 = forceTrigger_104;
  # DEBUG D#376 => {CLOBBER}
  # DEBUG forceTrigger => D#376
  return _60;

}



;; Function Com_EB_HandleTxConfirmations (Com_EB_HandleTxConfirmations, funcdef_no=285, decl_uid=10673, cgraph_uid=286, symbol_order=290)


Symbols to be put in SSA form
{ D.12458 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 4
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_HandleTxConfirmations (const struct ComTxIPduType * IPduPtr)
{
  unsigned char _1;
  unsigned char _7;
  uint8 * Com_gDataMemPtr.909_8;
  const struct Com_ConfigType * Com_gConfigPtr.910_9;
  short unsigned int _10;
  unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  uint8 * _16;
  short unsigned int _17;
  long unsigned int _18;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_5(D)->ComTxIPduFlags;
  _7 = _1 & 1;
  if (_7 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Com_EB_TxConfirmations (IPduPtr_5(D));
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG IPduPtr => IPduPtr_5(D)
  # DEBUG INLINE_ENTRY Com_EB_HandleTxConfirmations
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.909_8 = Com_gDataMemPtr;
  Com_gConfigPtr.910_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.910_9->ComCbkTxAckDeferredStatusBase;
  _11 = (unsigned int) _10;
  _12 = IPduPtr_5(D)->ComNotificationDeferredQueueRef;
  _13 = _12 >> 3;
  _14 = (unsigned int) _13;
  _15 = _11 + _14;
  _16 = Com_gDataMemPtr.909_8 + _15;
  _17 = _12 & 7;
  _18 = (long unsigned int) _17;
  TS_AtomicSetBit_8 (_16, _18);

  <bb 5> [local count: 1073741824]:
  # DEBUG IPduPtr => NULL
  return;

}



;; Function Com_EB_Send_Pdu (Com_EB_Send_Pdu, funcdef_no=175, decl_uid=6241, cgraph_uid=176, symbol_order=180)


Symbols to be put in SSA form
{ D.12459 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 16
Number of blocks to update: 15 ( 94%)


Merging blocks 4 and 8
Removing basic block 5
Merging blocks 10 and 7
Removing basic block 11
Removing basic block 12
No longer having address taken: pduinfo
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 4 }
;; 3 succs { 4 10 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 10 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Com_EB_Send_Pdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr)
{
  const ComTxIPduMinimumDelayTimeFactorType MDT;
  Std_ReturnType PduRRet;
  boolean (*<T5e8>) (PduIdType, struct PduInfoType *) fptr;
  boolean coretval;
  uint8 * const pdudataptr;
  struct PduInfoType pduinfo;
  uint8 * Com_gDataMemPtr.273_1;
  short unsigned int _2;
  sizetype _3;
  const struct Com_ConfigType * Com_gConfigPtr.275_4;
  short unsigned int _5;
  sizetype _6;
  unsigned int _8;
  unsigned int _9;
  ComIPduSizeType * _10;
  short unsigned int _11;
  short unsigned int _12;
  int _13;
  short unsigned int _14;
  sizetype _19;
  short unsigned int _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.273_1 = Com_gDataMemPtr;
  _2 = IPduPtr_17(D)->ComIPduValueRef;
  _3 = (sizetype) _2;
  pdudataptr_18 = Com_gDataMemPtr.273_1 + _3;
  # DEBUG pdudataptr => pdudataptr_18
  # DEBUG BEGIN_STMT
  # DEBUG coretval => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pduinfo.SduDataPtr = pdudataptr_18;
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.275_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.275_4->ComTxIPduLengthBase;
  _6 = (sizetype) _5;
  _8 = (unsigned int) PduId_21(D);
  _9 = _8 * 2;
  _19 = _6 + _9;
  _10 = Com_gDataMemPtr.273_1 + _19;
  _11 = *_10;
  pduinfo.SduLength = _11;
  # DEBUG BEGIN_STMT
  _12 = IPduPtr_17(D)->ComIPduCallOutFuncPtrRef;
  if (_12 != 65535)
    goto <bb 3>; [79.76%]
  else
    goto <bb 4>; [20.24%]

  <bb 3> [local count: 856416480]:
  # DEBUG BEGIN_STMT
  _13 = (int) _12;
  fptr_23 = Com_TxCallouts[_13];
  # DEBUG fptr => fptr_23
  # DEBUG BEGIN_STMT
  coretval_25 = fptr_23 (PduId_21(D), &pduinfo);
  # DEBUG coretval => coretval_25
  # DEBUG BEGIN_STMT
  if (coretval_25 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 10>; [66.00%]

  <bb 4> [local count: 508506948]:
  # DEBUG coretval => NULL
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PduId => PduId_21(D)
  # DEBUG IPduPtr => IPduPtr_17(D)
  # DEBUG INLINE_ENTRY Com_EB_HandleMDT
  # DEBUG BEGIN_STMT
  MDT_31 = IPduPtr_17(D)->ComTxIPduMinimumDelayTimeFactorValue;
  # DEBUG MDT => MDT_31
  # DEBUG BEGIN_STMT
  if (MDT_31 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 167807293]:
  # DEBUG BEGIN_STMT
  _32 = MEM[(short unsigned int *)IPduPtr_17(D) + 38B];
  # DEBUG D#12 => IPduPtr_17(D)
  Com_EB_MdtQueue.isra.0 (PduId_21(D), _32, MDT_31);

  <bb 6> [local count: 508506948]:
  # DEBUG BEGIN_STMT
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG MDT => NULL
  # DEBUG BEGIN_STMT
  _14 = IPduPtr_17(D)->PduRTxPduId;
  PduRRet_28 = PduR_ComTransmit (_14, &pduinfo);
  # DEBUG PduRRet => PduRRet_28
  # DEBUG BEGIN_STMT
  if (PduRRet_28 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 7> [local count: 254253474]:
  # DEBUG D#112 => PduId_21(D)
  # DEBUG IPduPtr => IPduPtr_17(D)
  # DEBUG INLINE_ENTRY Com_EB_Send_Pdu
  # DEBUG D#113 => D#112
  # DEBUG PduId => D#113
  # DEBUG BEGIN_STMT
  _33 = IPduPtr_17(D)->ComTxIPduFlags;
  _34 = _33 >> 3;
  _35 = _34 & 3;
  if (_35 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 8> [local count: 83903646]:
  # DEBUG BEGIN_STMT
  Com_EB_ClearTxUpdateBits (IPduPtr_17(D));

  <bb 9> [local count: 254253474]:
  # DEBUG BEGIN_STMT

  <bb 10> [local count: 1073741824]:
  # DEBUG IPduPtr => NULL
  # DEBUG pdudataptr => NULL
  # DEBUG coretval => NULL
  # DEBUG fptr => NULL
  # DEBUG PduRRet => NULL
  # DEBUG PduId => NULL
  # DEBUG BEGIN_STMT
  pduinfo ={v} {CLOBBER};
  return;

}



;; Function Com_EB_Request_Send_Pdu (Com_EB_Request_Send_Pdu, funcdef_no=171, decl_uid=6229, cgraph_uid=172, symbol_order=176)

Com_EB_Request_Send_Pdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr, uint8 * PduStatusFlagsPtr, boolean SendInMainFunctionTx)
{
  unsigned char _1;
  unsigned char _2;
  short unsigned int _3;
  short unsigned int _4;
  unsigned char _5;
  unsigned char _16;
  unsigned char _17;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_9(D)->ComTxIPduFlags;
  _2 = _1 >> 1;
  _16 = _2 & 1;
  if (_16 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  _3 = IPduPtr_9(D)->ComTxTimeoutFactorValue;
  _4 = IPduPtr_9(D)->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_10(D), _3, _4);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _5 = *PduStatusFlagsPtr_12(D);
  _17 = _5 & 2;
  if (_17 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 5> [local count: 719407023]:
  if (SendInMainFunctionTx_13(D) == 1)
    goto <bb 6>; [51.12%]
  else
    goto <bb 7>; [48.88%]

  <bb 6> [local count: 722095673]:
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (PduStatusFlagsPtr_12(D), 4);
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 351646152]:
  # DEBUG BEGIN_STMT
  Com_EB_Send_Pdu (PduId_10(D), IPduPtr_9(D));

  <bb 8> [local count: 1073741824]:
  return;

}



;; Function Com_EB_SendUponSendApiCall (Com_EB_SendUponSendApiCall, funcdef_no=170, decl_uid=6224, cgraph_uid=171, symbol_order=175)

Com_EB_SendUponSendApiCall (ComIPduRefType PduId, boolean SendInMainFunctionTx)
{
  ComTxModeRepetitionPeriodFactorType NPeriod;
  uint8 N;
  const struct ComTxModeNTimesType * TMNTimesPtr;
  uint8 N;
  ComTxModeRepetitionPeriodFactorType NPeriod;
  const struct ComTxModeMixedNTimesType * TMMixedNTimesPtr;
  const struct ComTxIPduType * const IPduPtr;
  uint8 * const PduStatusFlagsPtr;
  uint8 CurrentTMS;
  uint8 * Com_gDataMemPtr.294_1;
  const struct Com_ConfigType * Com_gConfigPtr.295_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  long unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  const struct Com_ConfigType * Com_gConfigPtr.300_16;
  short unsigned int _17;
  sizetype _18;
  long unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  short unsigned int _23;
  sizetype _24;
  uint8 * _25;
  short unsigned int _26;
  const struct Com_ConfigType * Com_gConfigPtr.305_27;
  short unsigned int _28;
  sizetype _29;
  long unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  sizetype _33;
  short unsigned int _34;
  sizetype _35;
  uint8 * _36;
  short unsigned int _37;
  uint8 iftmp.298_38;
  ComTxModeIdxType iftmp.301_39;
  ComTxModeIdxType iftmp.306_40;
  uint8 iftmp.298_47;
  uint8 iftmp.298_48;
  ComTxModeIdxType iftmp.306_51;
  ComTxModeIdxType iftmp.306_52;
  sizetype _53;
  ComTxModeIdxType iftmp.301_59;
  ComTxModeIdxType iftmp.301_60;
  sizetype _61;
  unsigned int _67;
  unsigned int _68;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.294_1 = Com_gDataMemPtr;
  Com_gConfigPtr.295_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.295_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_43(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  PduStatusFlagsPtr_44 = Com_gDataMemPtr.294_1 + _7;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_44
  # DEBUG BEGIN_STMT
  _8 = Com_gConfigPtr.295_2->ComTxIPduRef;
  _9 = (unsigned int) PduId_43(D);
  _10 = _9 * 64;
  _11 = _8 + _10;
  IPduPtr_45 = Com_gConfigPtr.295_2 + _11;
  # DEBUG IPduPtr => IPduPtr_45
  # DEBUG BEGIN_STMT
  _12 = *PduStatusFlagsPtr_44;
  _13 = _12 >> 6;
  CurrentTMS_46 = _13 & 1;
  # DEBUG CurrentTMS => CurrentTMS_46
  # DEBUG BEGIN_STMT
  if (CurrentTMS_46 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  _14 = IPduPtr_45->ComTxModeModes;
  iftmp.298_48 = _14 & 15;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  _15 = IPduPtr_45->ComTxModeModes;
  iftmp.298_47 = _15 >> 4;

  <bb 5> [local count: 1073741824]:
  # iftmp.298_38 = PHI <iftmp.298_48(3), iftmp.298_47(4)>
  # DEBUG AktTM => iftmp.298_38
  # DEBUG BEGIN_STMT
  _67 = (unsigned int) iftmp.298_38;
  _68 = _67 + 4294967294;
  if (_68 <= 3)
    goto <bb 6>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 6> [local count: 354334802]:
<L3>:
  # DEBUG BEGIN_STMT
  Com_EB_Request_Send_Pdu (PduId_43(D), IPduPtr_45, PduStatusFlagsPtr_44, SendInMainFunctionTx_49(D));
  # DEBUG BEGIN_STMT
  switch (iftmp.298_38) <default: <L26> [33.33%], case 4: <L7> [33.33%], case 5: <L11> [33.33%]>

  <bb 7> [local count: 118099789]:
<L7>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.300_16 = Com_gConfigPtr;
  _17 = Com_gConfigPtr.300_16->ComNTimesQueueBaseRemaining;
  _18 = (sizetype) _17;
  # DEBUG NTimesQueueBaseRemaining => Com_gDataMemPtr.294_1 + _18
  # DEBUG BEGIN_STMT
  if (CurrentTMS_46 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 59049895]:
  iftmp.301_60 = IPduPtr_45->ComTxModeTrueRef;
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 59049895]:
  iftmp.301_59 = IPduPtr_45->ComTxModeFalseRef;

  <bb 10> [local count: 118099789]:
  # iftmp.301_39 = PHI <iftmp.301_60(8), iftmp.301_59(9)>
  # DEBUG TMRef => iftmp.301_39
  # DEBUG BEGIN_STMT
  _19 = Com_gConfigPtr.300_16->ComTxModeMixedNTimesRef;
  _20 = (unsigned int) iftmp.301_39;
  _21 = _20 * 8;
  _22 = _19 + _21;
  TMMixedNTimesPtr_62 = Com_gConfigPtr.300_16 + _22;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_62
  # DEBUG BEGIN_STMT
  NPeriod_63 = TMMixedNTimesPtr_62->ComTxModeRepetitionPeriodFactor;
  # DEBUG NPeriod => NPeriod_63
  # DEBUG BEGIN_STMT
  N_64 = TMMixedNTimesPtr_62->ComTxModeNumberOfRepetitions;
  # DEBUG N => N_64
  # DEBUG BEGIN_STMT
  _23 = IPduPtr_45->NTimesQueueRef;
  _24 = (sizetype) _23;
  _61 = _18 + _24;
  _25 = Com_gDataMemPtr.294_1 + _61;
  *_25 = N_64;
  # DEBUG BEGIN_STMT
  _26 = IPduPtr_45->NTimesQueueRef;
  Com_EB_NTimesSendQueue (PduId_43(D), NPeriod_63, _26);
  # DEBUG BEGIN_STMT
  goto <bb 15>; [100.00%]

  <bb 11> [local count: 118099789]:
<L11>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.305_27 = Com_gConfigPtr;
  _28 = Com_gConfigPtr.305_27->ComNTimesQueueBaseRemaining;
  _29 = (sizetype) _28;
  # DEBUG NTimesQueueBaseRemaining => Com_gDataMemPtr.294_1 + _29
  # DEBUG BEGIN_STMT
  if (CurrentTMS_46 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 59049895]:
  iftmp.306_52 = IPduPtr_45->ComTxModeTrueRef;
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 59049895]:
  iftmp.306_51 = IPduPtr_45->ComTxModeFalseRef;

  <bb 14> [local count: 118099789]:
  # iftmp.306_40 = PHI <iftmp.306_52(12), iftmp.306_51(13)>
  # DEBUG TMRef => iftmp.306_40
  # DEBUG BEGIN_STMT
  _30 = Com_gConfigPtr.305_27->ComTxModeNTimesRef;
  _31 = (unsigned int) iftmp.306_40;
  _32 = _31 * 4;
  _33 = _30 + _32;
  TMNTimesPtr_54 = Com_gConfigPtr.305_27 + _33;
  # DEBUG TMNTimesPtr => TMNTimesPtr_54
  # DEBUG BEGIN_STMT
  NPeriod_55 = TMNTimesPtr_54->ComTxModeRepetitionPeriodFactor;
  # DEBUG NPeriod => NPeriod_55
  # DEBUG BEGIN_STMT
  N_56 = TMNTimesPtr_54->ComTxModeNumberOfRepetitions;
  # DEBUG N => N_56
  # DEBUG BEGIN_STMT
  _34 = IPduPtr_45->NTimesQueueRef;
  _35 = (sizetype) _34;
  _53 = _29 + _35;
  _36 = Com_gDataMemPtr.294_1 + _53;
  *_36 = N_56;
  # DEBUG BEGIN_STMT
  _37 = IPduPtr_45->NTimesQueueRef;
  Com_EB_NTimesSendQueue (PduId_43(D), NPeriod_55, _37);
  # DEBUG BEGIN_STMT

  <bb 15> [local count: 1073706390]:
<L26>:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_CalculateSignalGroupTM (Com_EB_CalculateSignalGroupTM, funcdef_no=202, decl_uid=9572, cgraph_uid=203, symbol_order=207)

Com_EB_CalculateSignalGroupTM (boolean forceTrigger, const struct ComTxSignalGroupType * SignalGPtr, const struct ComTxIPduType * IPduPtr, ComIPduRefType PduId, boolean SendInMainFunctionTx)
{
  boolean CurrentTMIPDU;
  boolean newTM;
  uint16 numberOfFlagBytes;
  boolean CurrentTMSG;
  boolean newResult;
  uint16 j;
  uint8 * const SGFlagPtr;
  ptrdiff_t offset;
  const struct ComTxSignalGroupType * firstSignalGPtr;
  boolean TMSChanged;
  boolean transmit;
  uint8 * const PduStatusFlagsPtr;
  uint8 retval;
  uint8 * Com_gDataMemPtr.589_1;
  const struct Com_ConfigType * Com_gConfigPtr.590_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  long unsigned int _9;
  int _10;
  short unsigned int _11;
  int _12;
  int _13;
  sizetype _14;
  unsigned char _15;
  short unsigned int _16;
  sizetype _17;
  unsigned char _18;
  short unsigned int _19;
  short unsigned int _20;
  unsigned char _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  short unsigned int _25;
  unsigned int _26;
  short unsigned int _27;
  short unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  uint8 * _31;
  unsigned char _32;
  unsigned char _33;
  int _34;
  unsigned int _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  short unsigned int _40;
  unsigned int _41;
  short unsigned int _42;
  short unsigned int _43;
  unsigned int _44;
  unsigned int _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  int _49;
  unsigned int _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  unsigned char _65;
  unsigned char _66;
  const uint8 iftmp.602_74;
  int _83;
  unsigned char _84;
  unsigned char _90;
  unsigned char _91;
  unsigned char _95;
  sizetype _104;
  const uint8 iftmp.602_108;
  const uint8 iftmp.602_109;

  <bb 2> [local count: 236223200]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.589_1 = Com_gDataMemPtr;
  Com_gConfigPtr.590_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.590_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_80(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  PduStatusFlagsPtr_81 = Com_gDataMemPtr.589_1 + _7;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_81
  # DEBUG BEGIN_STMT
  # DEBUG transmit => forceTrigger_82(D)
  # DEBUG BEGIN_STMT
  # DEBUG TMSChanged => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = Com_gConfigPtr.590_2->ComTxSignalGroupRef;
  firstSignalGPtr_85 = Com_gConfigPtr.590_2 + _9;
  # DEBUG firstSignalGPtr => firstSignalGPtr_85
  # DEBUG BEGIN_STMT
  _10 = SignalGPtr_86(D) - firstSignalGPtr_85;
  offset_87 = _10 /[ex] 32;
  # DEBUG offset => offset_87
  # DEBUG BEGIN_STMT
  # DEBUG SignalGId => (ComSignalGroupRefType) offset_87
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = Com_gConfigPtr.590_2->ComTxSignalGroupStatusBase;
  _12 = (int) _11;
  _83 = offset_87 & 65535;
  _13 = _12 + _83;
  _14 = (sizetype) _13;
  SGFlagPtr_88 = Com_gDataMemPtr.589_1 + _14;
  # DEBUG SGFlagPtr => SGFlagPtr_88
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _15 = *SGFlagPtr_88;
  _84 = _15 & 2;
  if (_84 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 3> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _16 = SignalGPtr_86(D)->ComSignalGTMSFlagsRef;
  _17 = (sizetype) _16;
  # DEBUG SignalGTMFlagsBase => Com_gDataMemPtr.589_1 + _17
  # DEBUG BEGIN_STMT
  # DEBUG j => 0
  # DEBUG BEGIN_STMT
  # DEBUG newResult => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _18 = _15 & 253;
  *SGFlagPtr_88 = _18;
  # DEBUG BEGIN_STMT
  _19 = SignalGPtr_86(D)->ComGroupSignalWithFilterRefNum;
  numberOfFlagBytes_93 = _19 >> 3;
  # DEBUG numberOfFlagBytes => numberOfFlagBytes_93
  # DEBUG BEGIN_STMT
  _20 = _19 & 7;
  if (_20 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  numberOfFlagBytes_94 = numberOfFlagBytes_93 + 1;
  # DEBUG numberOfFlagBytes => numberOfFlagBytes_94

  <bb 5> [local count: 118111600]:
  # numberOfFlagBytes_73 = PHI <numberOfFlagBytes_93(3), numberOfFlagBytes_94(4)>
  # DEBUG numberOfFlagBytes => numberOfFlagBytes_73
  # DEBUG BEGIN_STMT
  # DEBUG j => 0
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _22 = (sizetype) j_70;
  _104 = _17 + _22;
  _23 = Com_gDataMemPtr.589_1 + _104;
  _24 = *_23;
  if (_24 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 477815111]:
  # DEBUG BEGIN_STMT
  # DEBUG newResult => 1

  <bb 8> [local count: 955630223]:
  # newResult_71 = PHI <newResult_72(6), 1(7)>
  # DEBUG newResult => newResult_71
  # DEBUG BEGIN_STMT
  j_110 = j_70 + 1;
  # DEBUG j => j_110

  <bb 9> [local count: 1073741824]:
  # j_70 = PHI <0(5), j_110(8)>
  # newResult_72 = PHI <0(5), newResult_71(8)>
  # DEBUG newResult => newResult_72
  # DEBUG j => j_70
  # DEBUG BEGIN_STMT
  if (j_70 < numberOfFlagBytes_73)
    goto <bb 6>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # newResult_8 = PHI <newResult_72(9)>
  # DEBUG BEGIN_STMT
  CurrentTMSG_96 = _18 & 1;
  # DEBUG CurrentTMSG => CurrentTMSG_96
  # DEBUG BEGIN_STMT
  if (newResult_8 != CurrentTMSG_96)
    goto <bb 11>; [66.00%]
  else
    goto <bb 14>; [34.00%]

  <bb 11> [local count: 77953656]:
  # DEBUG BEGIN_STMT
  if (newResult_8 == 1)
    goto <bb 12>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 12> [local count: 26504243]:
  # DEBUG BEGIN_STMT
  _25 = IPduPtr_97(D)->ComIPduTMSFlagsRef;
  _26 = (unsigned int) _25;
  _27 = SignalGPtr_86(D)->ComPositionOfTMSFlag;
  _28 = _27 >> 3;
  _29 = (unsigned int) _28;
  _30 = _26 + _29;
  _31 = Com_gDataMemPtr.589_1 + _30;
  _32 = *_31;
  _33 = (unsigned char) _27;
  _91 = _33 & 7;
  _34 = (int) _91;
  _35 = 1 << _34;
  _36 = (unsigned char) _35;
  _37 = _32 | _36;
  *_31 = _37;
  # DEBUG BEGIN_STMT
  _38 = *SGFlagPtr_88;
  _39 = _38 | 1;
  *SGFlagPtr_88 = _39;
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 51449413]:
  # DEBUG BEGIN_STMT
  _40 = IPduPtr_97(D)->ComIPduTMSFlagsRef;
  _41 = (unsigned int) _40;
  _42 = SignalGPtr_86(D)->ComPositionOfTMSFlag;
  _43 = _42 >> 3;
  _44 = (unsigned int) _43;
  _45 = _41 + _44;
  _46 = Com_gDataMemPtr.589_1 + _45;
  _47 = *_46;
  _48 = (unsigned char) _42;
  _90 = _48 & 7;
  _49 = (int) _90;
  _50 = 1 << _49;
  _51 = (unsigned char) _50;
  _52 = ~_51;
  _53 = _47 & _52;
  *_46 = _53;
  # DEBUG BEGIN_STMT
  _54 = *SGFlagPtr_88;
  _55 = _54 & 254;
  *SGFlagPtr_88 = _55;

  <bb 14> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _56 = *PduStatusFlagsPtr_81;
  _57 = _56 >> 6;
  CurrentTMIPDU_102 = _57 & 1;
  # DEBUG CurrentTMIPDU => CurrentTMIPDU_102
  # DEBUG BEGIN_STMT
  newTM_103 = Com_EB_CalculateTM (IPduPtr_97(D));
  # DEBUG newTM => newTM_103
  # DEBUG BEGIN_STMT
  if (CurrentTMIPDU_102 != newTM_103)
    goto <bb 15>; [66.00%]
  else
    goto <bb 24>; [34.00%]

  <bb 15> [local count: 77953656]:
  # DEBUG BEGIN_STMT
  # DEBUG TMSChanged => 1
  # DEBUG BEGIN_STMT
  if (newTM_103 == 1)
    goto <bb 16>; [34.00%]
  else
    goto <bb 17>; [66.00%]

  <bb 16> [local count: 26504243]:
  # DEBUG BEGIN_STMT
  _58 = _56 | 64;
  *PduStatusFlagsPtr_81 = _58;
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 51449413]:
  # DEBUG BEGIN_STMT
  _59 = _56 & 191;
  *PduStatusFlagsPtr_81 = _59;

  <bb 18> [local count: 77953656]:
  # DEBUG BEGIN_STMT
  _60 = *PduStatusFlagsPtr_81;
  _61 = _60 | 128;
  *PduStatusFlagsPtr_81 = _61;
  # DEBUG BEGIN_STMT
  if (newTM_103 == 1)
    goto <bb 19>; [34.00%]
  else
    goto <bb 20>; [66.00%]

  <bb 19> [local count: 26504243]:
  _62 = IPduPtr_97(D)->ComTxModeModes;
  iftmp.602_109 = _62 & 15;
  goto <bb 21>; [100.00%]

  <bb 20> [local count: 51449413]:
  _63 = IPduPtr_97(D)->ComTxModeModes;
  iftmp.602_108 = _63 >> 4;

  <bb 21> [local count: 77953656]:
  # iftmp.602_74 = PHI <iftmp.602_109(19), iftmp.602_108(20)>
  # DEBUG AktTM => iftmp.602_74
  # DEBUG BEGIN_STMT
  if (iftmp.602_74 == 2)
    goto <bb 23>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 22> [local count: 51449413]:
  if (iftmp.602_74 == 5)
    goto <bb 23>; [34.00%]
  else
    goto <bb 24>; [66.00%]

  <bb 23> [local count: 43997044]:
  # DEBUG BEGIN_STMT
  # DEBUG transmit => 1

  <bb 24> [local count: 236223201]:
  # transmit_68 = PHI <forceTrigger_82(D)(2), forceTrigger_82(D)(14), forceTrigger_82(D)(22), 1(23)>
  # TMSChanged_69 = PHI <0(2), 0(14), 1(22), 1(23)>
  # DEBUG TMSChanged => TMSChanged_69
  # DEBUG transmit => transmit_68
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _64 = *PduStatusFlagsPtr_81;
  _21 = _64 & 1;
  if (_21 != 0)
    goto <bb 25>; [65.00%]
  else
    goto <bb 30>; [35.00%]

  <bb 25> [local count: 153545080]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 0
  # DEBUG BEGIN_STMT
  if (transmit_68 == 1)
    goto <bb 26>; [34.00%]
  else
    goto <bb 30>; [66.00%]

  <bb 26> [local count: 52205327]:
  # DEBUG BEGIN_STMT
  _65 = SignalGPtr_86(D)->ComTxSignalGroupFlags;
  _66 = _65 >> 2;
  _95 = _66 & 1;
  # DEBUG trig_wo_rep => _95
  # DEBUG BEGIN_STMT
  # DEBUG tms_changed => TMSChanged_69 ^ 1
  # DEBUG BEGIN_STMT
  if (_95 != 0)
    goto <bb 27>; [67.00%]
  else
    goto <bb 29>; [33.00%]

  <bb 27> [local count: 34977569]:
  if (TMSChanged_69 == 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 29>; [67.00%]

  <bb 28> [local count: 11542598]:
  # DEBUG BEGIN_STMT
  Com_EB_Request_Send_Pdu (PduId_80(D), IPduPtr_97(D), PduStatusFlagsPtr_81, SendInMainFunctionTx_112(D));
  goto <bb 30>; [100.00%]

  <bb 29> [local count: 40662730]:
  # DEBUG BEGIN_STMT
  Com_EB_SendUponSendApiCall (PduId_80(D), SendInMainFunctionTx_112(D));

  <bb 30> [local count: 236223201]:
  # retval_67 = PHI <0(28), 128(24), 0(25), 0(29)>
  # DEBUG retval => retval_67
  # DEBUG BEGIN_STMT
  return retval_67;

}



;; Function Com_EB_StartIPdu (Com_EB_StartIPdu, funcdef_no=185, decl_uid=9325, cgraph_uid=186, symbol_order=190)

Com_EB_StartIPdu (const struct ComTxIPduType * IPduPtr, ComIPduRefType PduId)
{
  const struct ComTxModePeriodicType * const TMPeriodicPtr;
  const struct ComTxModeMixedNTimesType * const TMMixedNTimesPtr;
  uint8 * const IPduFlagBytePtr;
  Com_PeriodicSendNextDueTimeType TimeToSendFirst;
  Com_PeriodicSendNextDueTimeType TimeToSendPeriodic;
  uint8 BitRes;
  uint8 * Com_gDataMemPtr.468_1;
  const struct Com_ConfigType * Com_gConfigPtr.469_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;
  const struct Com_ConfigType * Com_gConfigPtr.472_14;
  long unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  sizetype _18;
  const struct Com_ConfigType * Com_gConfigPtr.474_19;
  long unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  sizetype _23;
  unsigned char _24;
  unsigned char _25;
  short unsigned int _26;
  short unsigned int _27;
  short unsigned int _28;
  uint8 iftmp.470_32;
  ComTxModeIdxType iftmp.471_33;
  unsigned char _36;
  uint8 iftmp.470_45;
  uint8 iftmp.470_46;
  ComTxModeIdxType iftmp.471_47;
  ComTxModeIdxType iftmp.471_48;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeToSendPeriodic => 0
  # DEBUG BEGIN_STMT
  # DEBUG TimeToSendFirst => 0
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.468_1 = Com_gDataMemPtr;
  Com_gConfigPtr.469_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.469_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_38(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  IPduFlagBytePtr_39 = Com_gDataMemPtr.468_1 + _7;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_39
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _8 = *IPduFlagBytePtr_39;
  _9 = _8 | 1;
  # DEBUG BEGIN_STMT
  _10 = _9 & 127;
  *IPduFlagBytePtr_39 = _10;
  # DEBUG BEGIN_STMT
  _11 = _10 >> 6;
  BitRes_42 = _11;
  # DEBUG BitRes => BitRes_42
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (BitRes_42 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  _12 = IPduPtr_44(D)->ComTxModeModes;
  iftmp.470_46 = _12 & 15;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  _13 = IPduPtr_44(D)->ComTxModeModes;
  iftmp.470_45 = _13 >> 4;

  <bb 5> [local count: 1073741824]:
  # iftmp.470_32 = PHI <iftmp.470_46(3), iftmp.470_45(4)>
  # DEBUG AktTM => iftmp.470_32
  # DEBUG BEGIN_STMT
  if (BitRes_42 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 536870913]:
  iftmp.471_48 = IPduPtr_44(D)->ComTxModeTrueRef;
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 536870913]:
  iftmp.471_47 = IPduPtr_44(D)->ComTxModeFalseRef;

  <bb 8> [local count: 1073741824]:
  # iftmp.471_33 = PHI <iftmp.471_48(6), iftmp.471_47(7)>
  # DEBUG TMRef => iftmp.471_33
  # DEBUG BEGIN_STMT
  switch (iftmp.470_32) <default: <L23> [33.33%], case 1: <L7> [33.33%], case 3: <L7> [33.33%], case 4: <L6> [33.33%]>

  <bb 9> [local count: 357878150]:
<L6>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.472_14 = Com_gConfigPtr;
  _15 = Com_gConfigPtr.472_14->ComTxModeMixedNTimesRef;
  _16 = (unsigned int) iftmp.471_33;
  _17 = _16 * 8;
  _18 = _15 + _17;
  TMMixedNTimesPtr_49 = Com_gConfigPtr.472_14 + _18;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_49
  # DEBUG BEGIN_STMT
  TimeToSendFirst_50 = TMMixedNTimesPtr_49->ComTxModeTimeOffsetFactor;
  # DEBUG TimeToSendFirst => TimeToSendFirst_50
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_51 = TMMixedNTimesPtr_49->ComTxModeTimePeriodFactor;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_51
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 357878150]:
<L7>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.474_19 = Com_gConfigPtr;
  _20 = Com_gConfigPtr.474_19->ComTxModePeriodicRef;
  _21 = (unsigned int) iftmp.471_33;
  _22 = _21 * 4;
  _23 = _20 + _22;
  TMPeriodicPtr_52 = Com_gConfigPtr.474_19 + _23;
  # DEBUG TMPeriodicPtr => TMPeriodicPtr_52
  # DEBUG BEGIN_STMT
  TimeToSendFirst_53 = TMPeriodicPtr_52->ComTxModeTimeOffsetFactor;
  # DEBUG TimeToSendFirst => TimeToSendFirst_53
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_54 = TMPeriodicPtr_52->ComTxModeTimePeriodFactor;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_54
  # DEBUG BEGIN_STMT

  <bb 11> [local count: 1073634451]:
  # TimeToSendPeriodic_29 = PHI <TimeToSendPeriodic_51(9), TimeToSendPeriodic_54(10), 0(8)>
  # TimeToSendFirst_31 = PHI <TimeToSendFirst_50(9), TimeToSendFirst_53(10), 0(8)>
<L23>:
  # DEBUG TimeToSendFirst => TimeToSendFirst_31
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_29
  # DEBUG BEGIN_STMT
  switch (iftmp.470_32) <default: <L25> [33.33%], case 0: <L19> [33.33%], case 1: <L11> [33.33%], case 3 ... 4: <L11> [33.33%]>

  <bb 12> [local count: 357842363]:
<L11>:
  # DEBUG BEGIN_STMT
  if (TimeToSendFirst_31 == 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 13> [local count: 118087980]:
  # DEBUG BEGIN_STMT
  Com_EB_Send_Pdu (PduId_38(D), IPduPtr_44(D));
  # DEBUG BEGIN_STMT
  _24 = IPduPtr_44(D)->ComTxIPduFlags;
  _25 = _24 >> 1;
  _36 = _25 & 1;
  if (_36 != 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 14> [local count: 38969033]:
  # DEBUG BEGIN_STMT
  _26 = IPduPtr_44(D)->ComTxTimeoutFactorValue;
  _27 = IPduPtr_44(D)->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_38(D), _26, _27);

  <bb 15> [local count: 357842363]:
  # TimeToSendPeriodic_30 = PHI <TimeToSendPeriodic_29(14), TimeToSendFirst_31(12), TimeToSendPeriodic_29(13)>
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_30
  # DEBUG BEGIN_STMT
  _28 = IPduPtr_44(D)->PeriodicQueueRef;
  Com_EB_PeriodicSendQueue (TimeToSendPeriodic_30, _28);
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_39, 2);
  # DEBUG BEGIN_STMT
  goto <bb 17>; [100.00%]

  <bb 16> [local count: 357842363]:
<L19>:
  # DEBUG BEGIN_STMT
  Com_EB_TxDM_TMNone (IPduPtr_44(D), PduId_38(D));
  # DEBUG BEGIN_STMT

  <bb 17> [local count: 1073527090]:
<L25>:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_SendSignal_Transmit (Com_EB_SendSignal_Transmit, funcdef_no=196, decl_uid=6268, cgraph_uid=197, symbol_order=201)


Symbols to be put in SSA form
{ D.12462 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 15
Number of blocks to update: 14 ( 93%)


Removing basic block 8
Removing basic block 11
Removing basic block 12
Merging blocks 13 and 14
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 10 }
;; 3 succs { 4 5 }
;; 4 succs { 6 5 }
;; 5 succs { 6 10 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Com_EB_SendSignal_Transmit (const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * const PduStatusFlagsPtr;
  const struct ComTxIPduType * const IPduPtr;
  boolean TmpTrigger;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _7;
  unsigned char _8;
  short unsigned int _9;
  unsigned char _10;
  unsigned char _11;
  short unsigned int _12;
  unsigned char _13;
  unsigned char _18;
  unsigned char _20;
  unsigned char _21;
  const struct Com_ConfigType * Com_gConfigPtr.263_22;
  long unsigned int _23;
  short unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  sizetype _27;
  uint8 * Com_gDataMemPtr.265_29;
  short unsigned int _30;
  int _31;
  int _32;
  int _33;
  sizetype _34;
  unsigned char _36;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = IntDataPtr_15(D)->SendSigRetval;
  if (_1 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  TmpTrigger_16 = IntDataPtr_15(D)->trigger;
  # DEBUG TmpTrigger => TmpTrigger_16
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_17(D)->ComTxSignalFlags;
  _3 = _2 >> 10;
  _4 = (unsigned char) _3;
  _18 = _4 & 1;
  if (_18 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  _7 = _2 >> 4;
  _8 = (unsigned char) _7;
  _20 = _8 & 1;
  if (_20 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 402653184]:
  # DEBUG TmpTrigger => TmpTrigger_16
  # DEBUG BEGIN_STMT
  if (TmpTrigger_16 == 1)
    goto <bb 6>; [34.00%]
  else
    goto <bb 10>; [66.00%]

  <bb 6> [local count: 271119811]:
  # DEBUG TmpTrigger => NULL
  # DEBUG BEGIN_STMT
  _9 = _2 >> 11;
  _10 = (unsigned char) _9;
  _21 = _10 & 1;
  # DEBUG trig_wo_rep => _21
  # DEBUG BEGIN_STMT
  _11 = IntDataPtr_15(D)->TMSChanged;
  # DEBUG D#114 => _11 == 0
  # DEBUG tms_changed => (boolean) D#114
  # DEBUG BEGIN_STMT
  if (_21 != 0)
    goto <bb 7>; [67.00%]
  else
    goto <bb 9>; [33.00%]

  <bb 7> [local count: 181650273]:
  if (_11 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 8> [local count: 59944590]:
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_17(D)
  # DEBUG IntDataPtr => IntDataPtr_15(D)
  # DEBUG INLINE_ENTRY Com_EB_SendSignal_Transmit
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.263_22 = Com_gConfigPtr;
  _23 = Com_gConfigPtr.263_22->ComTxIPduRef;
  _24 = Com_EB_WritePropPtr_17(D)->ComIPduRef;
  _25 = (unsigned int) _24;
  _26 = _25 * 64;
  _27 = _23 + _26;
  IPduPtr_28 = Com_gConfigPtr.263_22 + _27;
  # DEBUG IPduPtr => IPduPtr_28
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.265_29 = Com_gDataMemPtr;
  _30 = Com_gConfigPtr.263_22->ComTxIPduStatusBase;
  _31 = (int) _30;
  _32 = (int) _24;
  _33 = _31 + _32;
  _34 = (sizetype) _33;
  PduStatusFlagsPtr_35 = Com_gDataMemPtr.265_29 + _34;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_35
  # DEBUG BEGIN_STMT
  _36 = IntDataPtr_15(D)->SendInMainFunctionTx;
  Com_EB_Request_Send_Pdu (_24, IPduPtr_28, PduStatusFlagsPtr_35, _36);
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 211175221]:
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_17(D)->ComIPduRef;
  _13 = IntDataPtr_15(D)->SendInMainFunctionTx;
  Com_EB_SendUponSendApiCall (_12, _13);

  <bb 10> [local count: 1073741824]:
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG TmpTrigger => NULL
  # DEBUG trig_wo_rep => NULL
  # DEBUG tms_changed => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG PduStatusFlagsPtr => NULL
  return;

}



;; Function Com_EB_WriteDynSignal_ExitArea_0 (Com_EB_WriteDynSignal_ExitArea_0, funcdef_no=197, decl_uid=6272, cgraph_uid=198, symbol_order=202)

Com_EB_WriteDynSignal_ExitArea_0 (const uint8 * SignalDataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 index;
  void (*<T69f>) (const void *, uint8 *, const struct ComTxSignalType *, struct Com_EB_WriteIntDataType *) fptr;
  const ComIPduSizeType dynPduLength;
  const ComSignalDescBitType StartingByte;
  uint8 * const dataPtr;
  uint8 * Com_gDataMemPtr.553_1;
  short unsigned int _2;
  sizetype _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned char _7;
  const struct Com_ConfigType * Com_gConfigPtr.555_8;
  short unsigned int _9;
  sizetype _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  ComIPduSizeType * _14;
  short unsigned int _15;
  const struct Com_ConfigType * Com_gConfigPtr.557_16;
  short unsigned int _17;
  sizetype _18;
  short unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  ComIPduSizeType * _22;
  short unsigned int _23;
  int _24;
  unsigned char _40;
  sizetype _41;
  sizetype _42;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.553_1 = Com_gDataMemPtr;
  _2 = Com_EB_WritePropPtr_27(D)->ComSignalBase.ComBufferRef;
  _3 = (sizetype) _2;
  dataPtr_28 = Com_gDataMemPtr.553_1 + _3;
  # DEBUG dataPtr => dataPtr_28
  # DEBUG BEGIN_STMT
  StartingByte_29 = Com_EB_WritePropPtr_27(D)->ComSignalPositionInBit;
  # DEBUG StartingByte => StartingByte_29
  # DEBUG BEGIN_STMT
  _4 = IntDataPtr_30(D)->arraySize;
  dynPduLength_31 = _4 + StartingByte_29;
  # DEBUG dynPduLength => dynPduLength_31
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_27(D)->ComTxSignalFlags;
  _6 = _5 >> 4;
  _7 = (unsigned char) _6;
  _40 = _7 & 1;
  if (_40 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.555_8 = Com_gConfigPtr;
  _9 = Com_gConfigPtr.555_8->ComTxIPduLengthBase;
  _10 = (sizetype) _9;
  _11 = Com_EB_WritePropPtr_27(D)->ComIPduRef;
  _12 = (unsigned int) _11;
  _13 = _12 * 2;
  _41 = _10 + _13;
  _14 = Com_gDataMemPtr.553_1 + _41;
  _15 = *_14;
  if (_15 != dynPduLength_31)
    goto <bb 4>; [66.00%]
  else
    goto <bb 5>; [34.00%]

  <bb 4> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  IntDataPtr_30(D)->trigger = 1;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.557_16 = Com_gConfigPtr;
  _17 = Com_gConfigPtr.557_16->ComTxIPduLengthBase;
  _18 = (sizetype) _17;
  _19 = Com_EB_WritePropPtr_27(D)->ComIPduRef;
  _20 = (unsigned int) _19;
  _21 = _20 * 2;
  _42 = _18 + _21;
  _22 = Com_gDataMemPtr.553_1 + _42;
  *_22 = dynPduLength_31;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = Com_EB_WritePropPtr_27(D)->ComTxSignalFlags;
  index_34 = _23 & 191;
  # DEBUG index => index_34
  # DEBUG BEGIN_STMT
  _24 = (int) index_34;
  fptr_35 = Com_WriteFuncs[_24];
  # DEBUG fptr => fptr_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_35 (SignalDataPtr_36(D), dataPtr_28, Com_EB_WritePropPtr_27(D), IntDataPtr_30(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_EB_SendSignal_Transmit (Com_EB_WritePropPtr_27(D), IntDataPtr_30(D));
  return;

}



;; Function Com_EB_RouteSignalHelper_Write (Com_EB_RouteSignalHelper_Write, funcdef_no=228, decl_uid=9969, cgraph_uid=229, symbol_order=233)


Symbols to be put in SSA form
{ D.12465 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 10 and 11
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Com_EB_RouteSignalHelper_Write (const struct ComRxSignalType * SrcSignalPtr, const struct ComTxSignalType * DestSignalPtr, const void * SignalDataPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const ComIPduSizeType SrcPduSize;
  ComSignalBitSizeType DestSigLength;
  const ComSignalDescBitType SrcSigStartByte;
  ComIPduSizeType * const SrcSigDatLenPtr;
  const uint16 index;
  void (*<T69f>) (const void *, uint8 *, const struct ComTxSignalType *, struct Com_EB_WriteIntDataType *) fptr;
  uint8 * const DestDataPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  uint8 * Com_gDataMemPtr.552_6;
  short unsigned int _7;
  sizetype _8;
  short unsigned int _9;
  short unsigned int _10;
  int _11;
  unsigned char _22;
  const struct Com_ConfigType * Com_gConfigPtr.548_23;
  short unsigned int _24;
  unsigned int _25;
  uint8 * Com_gDataMemPtr.550_26;
  short unsigned int _27;
  sizetype _28;
  unsigned int _29;
  sizetype _30;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = SrcSignalPtr_13(D)->ComSignalBase.ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  _22 = _3 & 15;
  if (_22 == 8)
    goto <bb 3>; [20.24%]
  else
    goto <bb 6>; [79.76%]

  <bb 3> [local count: 217325345]:
  # DEBUG SrcSignalPtr => SrcSignalPtr_13(D)
  # DEBUG DestSignalPtr => DestSignalPtr_14(D)
  # DEBUG SignalDataPtr => SignalDataPtr_20(D)
  # DEBUG IntDataPtr => IntDataPtr_16(D)
  # DEBUG INLINE_ENTRY Com_EB_RouteSignalHelper_Write
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.548_23 = Com_gConfigPtr;
  # DEBUG D#118 => Com_gConfigPtr.548_23->ComRxIPduRef
  _24 = SrcSignalPtr_13(D)->ComIPduRef;
  _25 = (unsigned int) _24;
  # DEBUG D#117 => _25 * 48
  # DEBUG D#116 => D#118 + D#117
  # DEBUG IPduPtr => Com_gConfigPtr.548_23 + D#116
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.550_26 = Com_gDataMemPtr;
  _27 = Com_gConfigPtr.548_23->ComRxIPduLengthBase;
  _28 = (sizetype) _27;
  _29 = _25 * 2;
  _30 = _28 + _29;
  SrcSigDatLenPtr_31 = Com_gDataMemPtr.550_26 + _30;
  # DEBUG SrcSigDatLenPtr => SrcSigDatLenPtr_31
  # DEBUG BEGIN_STMT
  SrcSigStartByte_32 = SrcSignalPtr_13(D)->ComSignalBase.ComSignalPositionInBit;
  # DEBUG SrcSigStartByte => SrcSigStartByte_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SrcPduSize_33 = *SrcSigDatLenPtr_31;
  # DEBUG SrcPduSize => SrcPduSize_33
  # DEBUG BEGIN_STMT
  if (SrcSigStartByte_32 >= SrcPduSize_33)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 108662673]:
  # DEBUG BEGIN_STMT
  DestSigLength_34 = SrcPduSize_33 - SrcSigStartByte_32;
  # DEBUG DestSigLength => DestSigLength_34

  <bb 5> [local count: 217325345]:
  # DestSigLength_35 = PHI <0(3), DestSigLength_34(4)>
  # DEBUG DestSigLength => DestSigLength_35
  # DEBUG BEGIN_STMT
  IntDataPtr_16(D)->arraySize = DestSigLength_35;
  # DEBUG BEGIN_STMT
  Com_EB_WriteDynSignal_ExitArea_0 (SignalDataPtr_20(D), DestSignalPtr_14(D), IntDataPtr_16(D));
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 856416480]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.552_6 = Com_gDataMemPtr;
  _7 = DestSignalPtr_14(D)->ComSignalBase.ComBufferRef;
  _8 = (sizetype) _7;
  DestDataPtr_15 = Com_gDataMemPtr.552_6 + _8;
  # DEBUG DestDataPtr => DestDataPtr_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = DestSignalPtr_14(D)->ComSignalBase.ComBitSize;
  IntDataPtr_16(D)->arraySize = _9;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = DestSignalPtr_14(D)->ComTxSignalFlags;
  index_18 = _10 & 511;
  # DEBUG index => index_18
  # DEBUG BEGIN_STMT
  _11 = (int) index_18;
  fptr_19 = Com_WriteFuncs[_11];
  # DEBUG fptr => fptr_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_19 (SignalDataPtr_20(D), DestDataPtr_15, DestSignalPtr_14(D), IntDataPtr_16(D));

  <bb 7> [local count: 1073741824]:
  # DEBUG SrcSignalPtr => NULL
  # DEBUG DestSignalPtr => NULL
  # DEBUG SignalDataPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG SrcSigDatLenPtr => NULL
  # DEBUG SrcSigStartByte => NULL
  # DEBUG DestSigLength => NULL
  # DEBUG SrcPduSize => NULL
  # DEBUG DestDataPtr => NULL
  # DEBUG fptr => NULL
  # DEBUG index => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_RouteSignalHelper (Com_EB_RouteSignalHelper, funcdef_no=227, decl_uid=9964, cgraph_uid=228, symbol_order=232)


Symbols to be put in SSA form
{ D.12466 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 27
Number of blocks to update: 26 ( 96%)


Merging blocks 14 and 19
Removing basic block 18
Removing basic block 26
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 1
;;  header 22, latch 21
;;  depth 1, outer 0
;;  nodes: 22 21 13 20 12 19 14 18 15 16 17
;;
;; Loop 2
;;  header 19, latch 18
;;  depth 2, outer 1
;;  nodes: 19 18 15 16 17 20
;; 2 succs { 3 10 }
;; 3 succs { 9 4 6 7 5 8 }
;; 4 succs { 9 }
;; 5 succs { 9 }
;; 6 succs { 9 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 22 }
;; 12 succs { 21 13 14 }
;; 13 succs { 21 }
;; 14 succs { 19 }
;; 15 succs { 18 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 15 21 }
;; 21 succs { 22 }
;; 22 succs { 12 23 }
;; 23 succs { 1 }
Com_EB_RouteSignalHelper (const struct ComRxSignalType * SrcSignalPtr, const struct ComGWSourceType * GWSourcePtr, uint8 * SrcDataPtr)
{
  ComSignalGroupRefType ii;
  uint8 exit_flag;
  const ComSignalGroupRefType SignalGId;
  struct Com_EB_WriteIntDataType IntData;
  const struct ComTxSignalType * const DestSignalPtr;
  const struct ComGWDestinationType * const GWDestinationPtr;
  ComSignalDescBitType StartByte;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  Com_TS_SignalTypeType SignalType;
  const struct ComSignalBaseType * const Com_EB_ReadPropPtr;
  ComGWDestinationRefType i;
  void * SignalDataPtr;
  struct ComEmu64Type valuint64;
  boolean valboolean;
  uint8 valuint8;
  uint16 valuint16;
  uint32 valuint32;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  sizetype _10;
  const struct Com_ConfigType * Com_gConfigPtr.542_11;
  long unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  sizetype _15;
  long unsigned int _16;
  unsigned char _17;
  unsigned char _18;
  int _19;
  short unsigned int _20;
  int _21;
  short unsigned int _22;
  int _23;
  int _24;
  short unsigned int _78;
  uint8 * Com_gDataMemPtr.558_79;
  const struct Com_ConfigType * Com_gConfigPtr.561_80;
  short unsigned int _81;
  sizetype _82;
  unsigned int _84;
  unsigned int _85;
  sizetype _86;
  ComSignalGroupRefType * _87;
  short unsigned int _88;
  short unsigned int _90;

  <bb 2> [local count: 42623541]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => &valuint8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_EB_ReadPropPtr_33 = &SrcSignalPtr_32(D)->ComSignalBase;
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_33
  # DEBUG BEGIN_STMT
  _1 = MEM[(const struct ComSignalBaseType *)SrcSignalPtr_32(D)].ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  SignalType_35 = _3 & 15;
  # DEBUG SignalType => SignalType_35
  # DEBUG BEGIN_STMT
  _4 = SignalType_35 + 249;
  if (_4 > 1)
    goto <bb 3>; [59.00%]
  else
    goto <bb 10>; [41.00%]

  <bb 3> [local count: 25147889]:
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  switch (SignalType_35) <default: <L21> [16.67%], case 0: <L1> [16.67%], case 1: <L4> [16.67%], case 2: <L6> [16.67%], case 3: <L2> [16.67%], case 4: <L4> [16.67%], case 5: <L6> [16.67%], case 6: <L2> [16.67%], case 9 ... 10: <L8> [16.67%]>

  <bb 4> [local count: 4192153]:
<L1>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_52 = _1 & 63;
  # DEBUG index => index_52
  # DEBUG BEGIN_STMT
  _5 = (int) index_52;
  fptr_53 = Com_ReadFuncs[_5].Read;
  # DEBUG fptr => fptr_53
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_53 (&valboolean, SrcDataPtr_37(D), Com_EB_ReadPropPtr_33, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => &valboolean
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 5> [local count: 4192153]:
<L2>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_43 = _1 & 63;
  # DEBUG index => index_43
  # DEBUG BEGIN_STMT
  _6 = (int) index_43;
  fptr_44 = Com_ReadFuncs[_6].Read;
  # DEBUG fptr => fptr_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_44 (&valuint8, SrcDataPtr_37(D), Com_EB_ReadPropPtr_33, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => &valuint8
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 4192153]:
<L4>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_49 = _1 & 63;
  # DEBUG index => index_49
  # DEBUG BEGIN_STMT
  _7 = (int) index_49;
  fptr_50 = Com_ReadFuncs[_7].Read;
  # DEBUG fptr => fptr_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_50 (&valuint16, SrcDataPtr_37(D), Com_EB_ReadPropPtr_33, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => &valuint16
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 7> [local count: 4192153]:
<L6>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_46 = _1 & 63;
  # DEBUG index => index_46
  # DEBUG BEGIN_STMT
  _8 = (int) index_46;
  fptr_47 = Com_ReadFuncs[_8].Read;
  # DEBUG fptr => fptr_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_47 (&valuint32, SrcDataPtr_37(D), Com_EB_ReadPropPtr_33, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => &valuint32
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 4192153]:
<L8>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_40 = _1 & 63;
  # DEBUG index => index_40
  # DEBUG BEGIN_STMT
  _9 = (int) index_40;
  fptr_41 = Com_ReadFuncs[_9].Read;
  # DEBUG fptr => fptr_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_41 (&valuint64, SrcDataPtr_37(D), Com_EB_ReadPropPtr_33, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => &valuint64
  # DEBUG BEGIN_STMT

  <bb 9> [local count: 25152919]:
  # SignalDataPtr_25 = PHI <&valboolean(4), &valuint8(5), &valuint16(6), &valuint32(7), &valuint64(8), &valuint8(3)>
<L21>:
  # DEBUG SignalDataPtr => SignalDataPtr_25
  retval ={v} {CLOBBER};
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 17475652]:
  # DEBUG BEGIN_STMT
  StartByte_36 = SrcSignalPtr_32(D)->ComSignalBase.ComSignalPositionInBit;
  # DEBUG StartByte => StartByte_36
  # DEBUG BEGIN_STMT
  _10 = (sizetype) StartByte_36;
  SignalDataPtr_38 = SrcDataPtr_37(D) + _10;
  # DEBUG SignalDataPtr => SignalDataPtr_38

  <bb 11> [local count: 42628571]:
  # SignalDataPtr_26 = PHI <SignalDataPtr_25(9), SignalDataPtr_38(10)>
  # DEBUG SignalDataPtr => SignalDataPtr_26
  # DEBUG BEGIN_STMT
  i_57 = GWSourcePtr_56(D)->ComGWDestinationFirstRef;
  # DEBUG i => i_57
  goto <bb 22>; [100.00%]

  <bb 12> [local count: 344625059]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.542_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.542_11->ComGWDestinationRef;
  _13 = (unsigned int) i_27;
  _14 = _13 * 8;
  _15 = _12 + _14;
  GWDestinationPtr_63 = Com_gConfigPtr.542_11 + _15;
  # DEBUG GWDestinationPtr => GWDestinationPtr_63
  # DEBUG BEGIN_STMT
  _16 = GWDestinationPtr_63->ComGWDestinationRef;
  DestSignalPtr_64 = Com_gConfigPtr.542_11 + _16;
  # DEBUG DestSignalPtr => DestSignalPtr_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.arraySize = 0;
  # DEBUG BEGIN_STMT
  IntData.trigger = 0;
  # DEBUG BEGIN_STMT
  IntData.SendSigRetval = 128;
  # DEBUG BEGIN_STMT
  IntData.SendInMainFunctionTx = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.TMSChanged = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = GWDestinationPtr_63->ComGWDestinationSelect;
  switch (_17) <default: <L22> [33.33%], case 0: <L15> [33.33%], case 2: <L16> [33.33%]>

  <bb 13> [local count: 114863532]:
<L15>:
  # DEBUG BEGIN_STMT
  _78 = MEM[(short unsigned int *)DestSignalPtr_64 + 22B];
  # DEBUG D#4 => DestSignalPtr_64
  _18 = Com_GetSendSignalRetVal.isra.0 (_78);
  IntData.SendSigRetval = _18;
  # DEBUG BEGIN_STMT
  Com_EB_RouteSignalHelper_Write (SrcSignalPtr_32(D), DestSignalPtr_64, SignalDataPtr_26, &IntData);
  # DEBUG BEGIN_STMT
  Com_EB_SendSignal_Transmit (DestSignalPtr_64, &IntData);
  # DEBUG BEGIN_STMT
  goto <bb 21>; [100.00%]

  <bb 14> [local count: 114863532]:
<L16>:
  # DEBUG BEGIN_STMT
  SignalGId_70 = DestSignalPtr_64->ComSignalBase.ComSignalGroupRef;
  # DEBUG SignalGId => SignalGId_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_EB_RouteSignalHelper_Write (SrcSignalPtr_32(D), DestSignalPtr_64, SignalDataPtr_26, &IntData);
  # DEBUG BEGIN_STMT
  # DEBUG SignalGId => SignalGId_70
  # DEBUG INLINE_ENTRY Com_EB_SetSendSignalGroup
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG exit_flag => 1
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  goto <bb 19>; [100.00%]

  <bb 15> [local count: 958878294]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.558_79 = Com_gDataMemPtr;
  _81 = Com_gConfigPtr.561_80->ComSigGWTxSignalGroupQueueBase;
  _82 = (sizetype) _81;
  # DEBUG TxSignalGroupQueueBase => Com_gDataMemPtr.558_79 + _82
  # DEBUG BEGIN_STMT
  _84 = (unsigned int) ii_83;
  _85 = _84 * 2;
  _86 = _82 + _85;
  _87 = Com_gDataMemPtr.558_79 + _86;
  _88 = *_87;
  if (SignalGId_70 == _88)
    goto <bb 18>; [34.00%]
  else
    goto <bb 16>; [66.00%]

  <bb 16> [local count: 632859674]:
  # DEBUG BEGIN_STMT
  if (_88 == 65535)
    goto <bb 17>; [34.00%]
  else
    goto <bb 18>; [66.00%]

  <bb 17> [local count: 215172289]:
  # DEBUG BEGIN_STMT
  *_87 = SignalGId_70;
  # DEBUG BEGIN_STMT
  # DEBUG exit_flag => 0

  <bb 18> [local count: 958878294]:
  # exit_flag_92 = PHI <0(15), 1(16), 0(17)>
  # DEBUG exit_flag => exit_flag_92
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_89 = ii_83 + 1;
  # DEBUG ii => ii_89

  <bb 19> [local count: 1073741824]:
  # ii_83 = PHI <0(14), ii_89(18)>
  # exit_flag_91 = PHI <1(14), exit_flag_92(18)>
  # DEBUG exit_flag => exit_flag_91
  # DEBUG ii => ii_83
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.561_80 = Com_gConfigPtr;
  _90 = Com_gConfigPtr.561_80->ComSigGWTxSignalGroupQueueMax;
  if (ii_83 < _90)
    goto <bb 20>; [94.50%]
  else
    goto <bb 21>; [5.50%]

  <bb 20> [local count: 1014686025]:
  if (exit_flag_91 == 1)
    goto <bb 15>; [94.50%]
  else
    goto <bb 21>; [5.50%]

  <bb 21> [local count: 344590596]:
<L22>:
  # DEBUG SignalGId => NULL
  # DEBUG exit_flag => NULL
  # DEBUG ii => NULL
  IntData ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  i_77 = i_27 + 1;
  # DEBUG i => i_77

  <bb 22> [local count: 387219167]:
  # i_27 = PHI <i_57(11), i_77(21)>
  # DEBUG i => i_27
  # DEBUG BEGIN_STMT
  _19 = (int) i_27;
  _20 = GWSourcePtr_56(D)->ComGWDestinationFirstRef;
  _21 = (int) _20;
  _22 = GWSourcePtr_56(D)->ComGWDestinationNumRef;
  _23 = (int) _22;
  _24 = _21 + _23;
  if (_19 < _24)
    goto <bb 12>; [89.00%]
  else
    goto <bb 23>; [11.00%]

  <bb 23> [local count: 42594108]:
  valuint32 ={v} {CLOBBER};
  valuint16 ={v} {CLOBBER};
  valuint8 ={v} {CLOBBER};
  valboolean ={v} {CLOBBER};
  valuint64 ={v} {CLOBBER};
  return;

}



;; Function Com_EB_SendSignalGroup (Com_EB_SendSignalGroup, funcdef_no=199, decl_uid=6288, cgraph_uid=200, symbol_order=204)


Symbols to be put in SSA form
{ D.12475 D.14913 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 7
Merging blocks 8 and 9
Merging blocks 8 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_EB_SendSignalGroup (const uint8 * SGArrayPtr, uint16 SGArrayPtrLength, const struct ComTxSignalGroupType * SignalGPtr, ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr, boolean SendInMainFunctionTx)
{
  uint8 D.14913;
  boolean forceTrigger;
  uint8 retval;
  const ComRAMIdxType ComSignalGroupValueRef;
  uint8 * Com_gDataMemPtr.624_1;
  sizetype _2;
  uint8 * _3;
  const ComRAMIdxType * _17;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  ComSignalGroupValueRef_7 = SignalGPtr_6(D)->ComSignalGroupValueRef;
  # DEBUG ComSignalGroupValueRef => ComSignalGroupValueRef_7
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ComSignalGroupValueRef_7 == 65535)
    goto <bb 3>; [21.72%]
  else
    goto <bb 4>; [78.28%]

  <bb 3> [local count: 233216724]:
  # DEBUG D#135 => SGArrayPtr_8(D)
  # DEBUG D#136 => SGArrayPtrLength_16(D)
  # DEBUG D#137 => SignalGPtr_6(D)
  # DEBUG D#138 => PduId_12(D)
  # DEBUG D#139 => IPduPtr_9(D)
  # DEBUG D#140 => SendInMainFunctionTx_13(D)
  # DEBUG INLINE_ENTRY Com_EB_SendSignalGroup
  # DEBUG D#146 => D#135
  # DEBUG SGArrayPtr => D#146
  # DEBUG D#145 => D#136
  # DEBUG SGArrayPtrLength => D#145
  # DEBUG D#144 => D#137
  # DEBUG SignalGPtr => D#144
  # DEBUG D#143 => D#138
  # DEBUG PduId => D#143
  # DEBUG D#142 => D#139
  # DEBUG IPduPtr => D#142
  # DEBUG D#141 => D#140
  # DEBUG SendInMainFunctionTx => D#141
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 13, 1);
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  _23 = 128;
  # DEBUG ComSignalGroupValueRef => NULL
  # DEBUG retval => NULL
  # DEBUG forceTrigger => NULL
  # DEBUG SGArrayPtr => NULL
  # DEBUG SGArrayPtrLength => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG SendInMainFunctionTx => NULL
  retval_18 = _23;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 840525101]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.624_1 = Com_gDataMemPtr;
  _2 = (sizetype) ComSignalGroupValueRef_7;
  _3 = Com_gDataMemPtr.624_1 + _2;
  _17 = &MEM[(short unsigned int *)IPduPtr_9(D) + 16B];
  # DEBUG D#109 => IPduPtr_9(D)
  forceTrigger_11 = Com_EB_WriteShadowBuffer.isra.0 (SignalGPtr_6(D), _17, _3);
  # DEBUG forceTrigger => forceTrigger_11
  # DEBUG BEGIN_STMT
  retval_15 = Com_EB_CalculateSignalGroupTM (forceTrigger_11, SignalGPtr_6(D), IPduPtr_9(D), PduId_12(D), SendInMainFunctionTx_13(D));
  # DEBUG retval => retval_15

  <bb 5> [local count: 1073741824]:
  # retval_4 = PHI <retval_18(3), retval_15(4)>
  # DEBUG retval => retval_4
  # DEBUG BEGIN_STMT
  return retval_4;

}



;; Function Com_EB_Read_A1_EL (Com_EB_Read_A1_EL, funcdef_no=361, decl_uid=6803, cgraph_uid=47, symbol_order=50)


Symbols to be put in SSA form
{ D.13478 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


Merging blocks 2 and 4
Merging blocks 2 and 5
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Com_EB_Read_A1_EL (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 pos;
  sizetype _8;
  const uint8 * _9;
  unsigned char _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG SignalDataPtr => SignalDataPtr_2(D)
  # DEBUG dataPtr => dataPtr_3(D)
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_4(D)
  # DEBUG retvalPtr => retvalPtr_5(D)
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtrU8 => SignalDataPtr_2(D)
  # DEBUG BEGIN_STMT
  pos_7 = Com_EB_ReadPropPtr_4(D)->ComSignalPositionInBit;
  # DEBUG pos => pos_7
  # DEBUG BEGIN_STMT
  _8 = (sizetype) pos_7;
  _9 = dataPtr_3(D) + _8;
  _10 = *_9;
  MEM[(uint8 *)SignalDataPtr_2(D)] = _10;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG retvalPtr => NULL
  # DEBUG pos => NULL
  return;

}



;; Function Com_EB_Write_A1_EL_DUB_DOC (Com_EB_Write_A1_EL_DUB_DOC, funcdef_no=363, decl_uid=7694, cgraph_uid=141, symbol_order=145)


Symbols to be put in SSA form
{ D.13479 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


Merging blocks 2 and 4
Merging blocks 2 and 5
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Com_EB_Write_A1_EL_DUB_DOC (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 pos;
  const uint8 Val;
  sizetype _9;
  uint8 * _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG SignalDataPtr => SignalDataPtr_2(D)
  # DEBUG dataPtr => dataPtr_3(D)
  # DEBUG Com_EB_WritePropPtr => Com_EB_WritePropPtr_4(D)
  # DEBUG IntDataPtr => IntDataPtr_5(D)
  # DEBUG BEGIN_STMT
  Val_7 = MEM[(const uint8 *)SignalDataPtr_2(D)];
  # DEBUG Val => Val_7
  # DEBUG BEGIN_STMT
  pos_8 = Com_EB_WritePropPtr_4(D)->ComSignalPositionInBit;
  # DEBUG pos => pos_8
  # DEBUG BEGIN_STMT
  _9 = (sizetype) pos_8;
  _10 = dataPtr_3(D) + _9;
  *_10 = Val_7;
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_WritePropPtr => NULL
  # DEBUG IntDataPtr => NULL
  # DEBUG Val => NULL
  # DEBUG pos => NULL
  return;

}



;; Function Com_EB_InitTxIPdu (Com_EB_InitTxIPdu, funcdef_no=187, decl_uid=9310, cgraph_uid=188, symbol_order=192)


Symbols to be put in SSA form
{ D.12450 D.14953 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 39
Number of blocks to update: 38 ( 97%)


Merging blocks 2 and 22
Removing basic block 4
Removing basic block 7
Removing basic block 8
Removing basic block 14
Removing basic block 15
Merging blocks 17 and 24
Merging blocks 18 and 27
Removing basic block 20
Removing basic block 21
Removing basic block 23
Merging blocks 38 and 26
Merging blocks 17 and 25
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 24, latch 23
;;  depth 1, outer 0
;;  nodes: 24 23
;;
;; Loop 2
;;  header 17, latch 16
;;  depth 1, outer 0
;;  nodes: 17 16 7 15 13 14 12 8 11 9 10 5 6 3 4
;;
;; Loop 3
;;  header 15, latch 14
;;  depth 2, outer 2
;;  nodes: 15 14
;;
;; Loop 4
;;  header 12, latch 11
;;  depth 2, outer 2
;;  nodes: 12 11 9 10
;; 2 succs { 17 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 16 }
;; 8 succs { 12 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 9 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 14 16 }
;; 16 succs { 17 }
;; 17 succs { 3 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 23 25 }
;; 25 succs { 1 }
Com_EB_InitTxIPdu (ComIPduRefType TxPduId)
{
  const struct ComTxSignalGroupType * const SignalGPtr;
  uint8 * SGFlagPtr;
  ComSignalRefType length;
  uint16 j;
  ComTxGroupSignalRefType GSigRef;
  const ComSignalRefType GSignalId;
  const uint8 * const pduBuffer;
  const ComSignalDescByteType byteSize;
  uint16 D.14953;
  const uint8 * const valPtr;
  ComSignalGroupRefType i;
  const ComSignalGroupRefType SignalGId;
  const struct ComTxSignalGroupType * const SignalGPtr;
  uint8 * const buffer;
  const uint16 NumberOfFlagsBits;
  const uint16 NumberOfFlagsBytes;
  ComSignalRefType i;
  const ComSignalRefType signalId;
  const struct ComTxIPduType * IPduPtr;
  const struct Com_ConfigType * Com_gConfigPtr.429_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  const struct Com_ConfigType * Com_gConfigPtr.465_13;
  long unsigned int _14;
  int _16;
  short unsigned int _17;
  int _18;
  int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  const ComSignalRefType * _23;
  short unsigned int _26;
  uint8 * Com_gDataMemPtr.458_27;
  const struct Com_ConfigType * Com_gConfigPtr.459_28;
  short unsigned int _29;
  int _30;
  int _31;
  int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  const struct Com_ConfigType * Com_gConfigPtr.461_38;
  short unsigned int _39;
  int _40;
  int _41;
  sizetype _42;
  uint8 * _43;
  long unsigned int _44;
  const struct Com_ConfigType * Com_gConfigPtr.463_45;
  const uint8 * iftmp.462_46;
  short unsigned int _47;
  short unsigned int _48;
  short unsigned int _50;
  short unsigned int _52;
  sizetype _53;
  uint8 * _54;
  long unsigned int _55;
  const struct Com_ConfigType * Com_gConfigPtr.435_56;
  long unsigned int _57;
  int _59;
  short unsigned int _60;
  int _61;
  int _62;
  unsigned int _63;
  unsigned int _64;
  sizetype _65;
  const ComSignalGroupRefType * _66;
  long unsigned int _68;
  unsigned int _69;
  unsigned int _70;
  sizetype _71;
  short unsigned int _73;
  uint8 * Com_gDataMemPtr.439_74;
  sizetype _75;
  short unsigned int _77;
  short unsigned int _79;
  const struct Com_ConfigType * Com_gConfigPtr.431_80;
  long unsigned int _81;
  uint8 * Com_gDataMemPtr.432_83;
  short unsigned int _84;
  sizetype _85;
  uint8 * _86;
  short unsigned int _87;
  long unsigned int _88;
  const struct Com_ConfigType * Com_gConfigPtr.434_89;
  short unsigned int _90;
  sizetype _91;
  unsigned int _92;
  unsigned int _93;
  sizetype _94;
  ComIPduSizeType * _95;
  short unsigned int _96;
  uint8 * Com_gDataMemPtr.441_98;
  short unsigned int _99;
  int _100;
  short unsigned int _101;
  int _102;
  int _103;
  sizetype _104;
  long unsigned int _106;
  const struct Com_ConfigType * Com_gConfigPtr.442_107;
  long unsigned int _108;
  unsigned int _109;
  unsigned int _110;
  sizetype _111;
  long unsigned int _113;
  const uint8 * iftmp.444_114;
  uint8 * Com_gDataMemPtr.446_115;
  short unsigned int _116;
  int _117;
  int _118;
  int _119;
  sizetype _120;
  const uint8 * iftmp.444_122;
  short unsigned int _123;
  unsigned int _124;
  unsigned int _125;
  unsigned int _126;
  short unsigned int _128;
  sizetype _129;
  uint8 * _130;
  unsigned int _131;
  short unsigned int _132;
  int _133;
  int _135;
  int _136;
  sizetype _137;
  uint8 * _138;
  unsigned char _139;
  const struct Com_ConfigType * Com_gConfigPtr.451_140;
  short unsigned int _141;
  int _142;
  int _143;
  sizetype _144;
  uint8 * _145;
  const struct Com_ConfigType * Com_gConfigPtr.453_148;
  long unsigned int _149;
  unsigned int _151;
  unsigned int _152;
  sizetype _153;
  const ComSignalRefType * _154;
  int _157;
  short unsigned int _158;
  int _159;
  short unsigned int _160;
  int _161;
  int _162;

  <bb 2> [local count: 27301410]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.429_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.429_1->ComTxIPduRef;
  _3 = (unsigned int) TxPduId_7(D);
  _4 = _3 * 64;
  _5 = _2 + _4;
  IPduPtr_8 = Com_gConfigPtr.429_1 + _5;
  # DEBUG IPduPtr => IPduPtr_8
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_8
  # DEBUG TxPduId => TxPduId_7(D)
  # DEBUG INLINE_ENTRY Com_EB_InitTxIPdu_PduBuffer
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.431_80 = Com_gConfigPtr;
  _81 = IPduPtr_8->ComInitValueRef;
  valPtr_82 = Com_gConfigPtr.431_80 + _81;
  # DEBUG valPtr => valPtr_82
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.432_83 = Com_gDataMemPtr;
  _84 = IPduPtr_8->ComIPduValueRef;
  _85 = (sizetype) _84;
  _86 = Com_gDataMemPtr.432_83 + _85;
  _87 = IPduPtr_8->ComIPduSizeMax;
  _88 = (long unsigned int) _87;
  TS_MemCpy32 (_86, valPtr_82, _88);
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.434_89 = Com_gConfigPtr;
  _90 = Com_gConfigPtr.434_89->ComTxIPduLengthBase;
  _91 = (sizetype) _90;
  _92 = (unsigned int) TxPduId_7(D);
  _93 = _92 * 2;
  _94 = _91 + _93;
  _95 = Com_gDataMemPtr.432_83 + _94;
  _96 = IPduPtr_8->ComIPduInitSize;
  *_95 = _96;
  # DEBUG BEGIN_STMT
  goto <bb 17>; [100.00%]

  <bb 3> [local count: 220893214]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.435_56 = Com_gConfigPtr;
  _57 = Com_gConfigPtr.435_56->ComTxIPduSignalGroupListRef;
  _59 = (int) i_58;
  _60 = IPduPtr_8->ComIPduSignalGroupRefFirst;
  _61 = (int) _60;
  _62 = _59 + _61;
  _63 = (unsigned int) _62;
  _64 = _63 * 2;
  _65 = _57 + _64;
  _66 = Com_gConfigPtr.435_56 + _65;
  SignalGId_67 = *_66;
  # DEBUG SignalGId => SignalGId_67
  # DEBUG BEGIN_STMT
  _68 = Com_gConfigPtr.435_56->ComTxSignalGroupRef;
  _69 = (unsigned int) SignalGId_67;
  _70 = _69 * 32;
  _71 = _68 + _70;
  SignalGPtr_72 = Com_gConfigPtr.435_56 + _71;
  # DEBUG SignalGPtr => SignalGPtr_72
  # DEBUG BEGIN_STMT
  _73 = SignalGPtr_72->ComSignalGroupValueRef;
  if (_73 != 65535)
    goto <bb 4>; [48.88%]
  else
    goto <bb 5>; [51.12%]

  <bb 4> [local count: 107972603]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.439_74 = Com_gDataMemPtr;
  _75 = (sizetype) _73;
  buffer_76 = Com_gDataMemPtr.439_74 + _75;
  # DEBUG buffer => buffer_76
  # DEBUG BEGIN_STMT
  _77 = MEM[(short unsigned int *)IPduPtr_8 + 16B];
  # DEBUG D#73 => IPduPtr_8
  # DEBUG SGArrayPtr => buffer_76
  # DEBUG SignalGPtr => SignalGPtr_72
  # DEBUG INLINE_ENTRY Com_EB_InitSGBuffer
  # DEBUG IPduPtr => D#73
  # DEBUG BEGIN_STMT
  byteSize_97 = SignalGPtr_72->ComByteSize;
  # DEBUG byteSize => byteSize_97
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.441_98 = Com_gDataMemPtr;
  _99 = _77;
  _100 = (int) _99;
  _101 = SignalGPtr_72->ComSignalPositionInByte;
  _102 = (int) _101;
  _103 = _100 + _102;
  _104 = (sizetype) _103;
  pduBuffer_105 = Com_gDataMemPtr.441_98 + _104;
  # DEBUG pduBuffer => pduBuffer_105
  # DEBUG BEGIN_STMT
  _106 = (long unsigned int) byteSize_97;
  TS_MemCpy32 (buffer_76, pduBuffer_105, _106);
  # DEBUG BEGIN_STMT
  _179 = byteSize_97;

  <bb 5> [local count: 220893214]:
  # DEBUG SGArrayPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG byteSize => NULL
  # DEBUG pduBuffer => NULL
  # DEBUG BEGIN_STMT
  # DEBUG SignalGId => SignalGId_67
  # DEBUG INLINE_ENTRY Com_EB_ClearTxSGTMSState
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.442_107 = Com_gConfigPtr;
  _108 = Com_gConfigPtr.442_107->ComTxSignalGroupRef;
  _109 = (unsigned int) SignalGId_67;
  _110 = _109 * 32;
  _111 = _108 + _110;
  SignalGPtr_112 = Com_gConfigPtr.442_107 + _111;
  # DEBUG SignalGPtr => SignalGPtr_112
  # DEBUG BEGIN_STMT
  _113 = SignalGPtr_112->ComSignalGTMSFlagsInitValueRef;
  if (_113 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 110446607]:
  iftmp.444_114 = Com_gConfigPtr.442_107 + _113;

  <bb 7> [local count: 220893214]:
  # iftmp.444_122 = PHI <0B(5), iftmp.444_114(6)>
  # DEBUG initFlagPtr => iftmp.444_122
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.446_115 = Com_gDataMemPtr;
  _116 = Com_gConfigPtr.442_107->ComTxSignalGroupStatusBase;
  _117 = (int) _116;
  _118 = (int) SignalGId_67;
  _119 = _117 + _118;
  _120 = (sizetype) _119;
  SGFlagPtr_121 = Com_gDataMemPtr.446_115 + _120;
  # DEBUG SGFlagPtr => SGFlagPtr_121
  # DEBUG BEGIN_STMT
  *SGFlagPtr_121 = 0;
  # DEBUG BEGIN_STMT
  if (iftmp.444_122 != 0B)
    goto <bb 8>; [53.47%]
  else
    goto <bb 16>; [46.53%]

  <bb 8> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  _123 = SignalGPtr_112->ComGroupSignalWithFilterRefNum;
  _124 = (unsigned int) _123;
  _125 = _124 + 7;
  _126 = _125 >> 3;
  length_127 = (ComSignalRefType) _126;
  # DEBUG length => length_127
  # DEBUG BEGIN_STMT
  _128 = SignalGPtr_112->ComSignalGTMSFlagsRef;
  _129 = (sizetype) _128;
  _130 = Com_gDataMemPtr.446_115 + _129;
  _131 = _126;
  TS_MemCpy32 (_130, iftmp.444_122, _131);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG j => 0
  goto <bb 12>; [100.00%]

  <bb 9> [local count: 955630219]:
  # DEBUG BEGIN_STMT
  _132 = SignalGPtr_112->ComSignalGTMSFlagsRef;
  _133 = (int) _132;
  _135 = (int) j_134;
  _136 = _133 + _135;
  _137 = (sizetype) _136;
  _138 = Com_gDataMemPtr.446_115 + _137;
  _139 = *_138;
  if (_139 != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 10> [local count: 315357972]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.451_140 = Com_gConfigPtr;
  _141 = Com_gConfigPtr.451_140->ComTxSignalGroupStatusBase;
  _142 = (int) _141;
  _143 = _118 + _142;
  _144 = (sizetype) _143;
  _145 = Com_gDataMemPtr.446_115 + _144;
  TS_AtomicSetBit_8 (_145, 0);

  <bb 11> [local count: 955630219]:
  # DEBUG BEGIN_STMT
  j_146 = j_134 + 1;
  # DEBUG j => j_146

  <bb 12> [local count: 1073741819]:
  # j_134 = PHI <0(8), j_146(11)>
  # DEBUG j => j_134
  # DEBUG BEGIN_STMT
  if (length_127 > j_134)
    goto <bb 9>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  GSigRef_147 = SignalGPtr_112->ComGroupSignalRefFirst;
  # DEBUG GSigRef => GSigRef_147
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.453_148 = Com_gConfigPtr;
  _149 = Com_gConfigPtr.453_148->ComTxSignalGroupGroupSignalListRef;
  _151 = (unsigned int) GSigRef_150;
  _152 = _151 * 2;
  _153 = _149 + _152;
  _154 = Com_gConfigPtr.453_148 + _153;
  GSignalId_155 = *_154;
  # DEBUG GSignalId => GSignalId_155
  # DEBUG BEGIN_STMT
  Com_EB_InitTx_Signal (GSignalId_155);
  # DEBUG BEGIN_STMT
  GSigRef_156 = GSigRef_150 + 1;
  # DEBUG GSigRef => GSigRef_156

  <bb 15> [local count: 1073741824]:
  # GSigRef_150 = PHI <GSigRef_147(13), GSigRef_156(14)>
  # DEBUG GSigRef => GSigRef_150
  # DEBUG BEGIN_STMT
  _157 = (int) GSigRef_150;
  _158 = SignalGPtr_112->ComGroupSignalWithFilterRefNum;
  _159 = (int) _158;
  _160 = SignalGPtr_112->ComGroupSignalRefFirst;
  _161 = (int) _160;
  _162 = _159 + _161;
  if (_157 < _162)
    goto <bb 14>; [89.00%]
  else
    goto <bb 16>; [11.00%]

  <bb 16> [local count: 220893214]:
  # DEBUG SignalGId => NULL
  # DEBUG GSignalId => NULL
  # DEBUG GSigRef => NULL
  # DEBUG j => NULL
  # DEBUG length => NULL
  # DEBUG SGFlagPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG BEGIN_STMT
  i_78 = i_58 + 1;
  # DEBUG i => i_78

  <bb 17> [local count: 248194623]:
  # i_58 = PHI <0(2), i_78(16)>
  # DEBUG IPduPtr => NULL
  # DEBUG TxPduId => NULL
  # DEBUG valPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG i => NULL
  # DEBUG i => i_58
  # DEBUG BEGIN_STMT
  _79 = IPduPtr_8->ComIPduSignalGroupRefNum;
  if (i_58 < _79)
    goto <bb 3>; [89.00%]
  else
    goto <bb 18>; [11.00%]

  <bb 18> [local count: 27301409]:
  # DEBUG IPduPtr => NULL
  # DEBUG buffer => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG SignalGId => NULL
  # DEBUG i => NULL
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_8
  # DEBUG TxPduId => TxPduId_7(D)
  # DEBUG INLINE_ENTRY Com_EB_InitTxIPdu_HandleFlags
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.458_27 = Com_gDataMemPtr;
  Com_gConfigPtr.459_28 = Com_gConfigPtr;
  _29 = Com_gConfigPtr.459_28->ComTxIPduStatusBase;
  _30 = (int) _29;
  _31 = (int) TxPduId_7(D);
  _32 = _30 + _31;
  _33 = (sizetype) _32;
  _34 = Com_gDataMemPtr.458_27 + _33;
  *_34 = 0;
  # DEBUG BEGIN_STMT
  _35 = IPduPtr_8->ComTxIPduFlags;
  _36 = _35 >> 2;
  _37 = _36 & 1;
  if (_37 != 0)
    goto <bb 19>; [33.00%]
  else
    goto <bb 20>; [67.00%]

  <bb 19> [local count: 9009465]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.461_38 = Com_gConfigPtr;
  _39 = Com_gConfigPtr.461_38->ComTxIPduStatusBase;
  _40 = (int) _39;
  _41 = _31 + _40;
  _42 = (sizetype) _41;
  _43 = Com_gDataMemPtr.458_27 + _42;
  TS_AtomicSetBit_8 (_43, 6);

  <bb 20> [local count: 27301409]:
  # DEBUG BEGIN_STMT
  _44 = IPduPtr_8->ComIPduTMSFlagsInitValueRef;
  if (_44 != 0)
    goto <bb 21>; [33.00%]
  else
    goto <bb 22>; [67.00%]

  <bb 21> [local count: 9009465]:
  Com_gConfigPtr.463_45 = Com_gConfigPtr;
  iftmp.462_46 = Com_gConfigPtr.463_45 + _44;
  # DEBUG initFlagPtr => iftmp.462_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _47 = IPduPtr_8->ComIPduSignalWithFilterRefNum;
  _48 = IPduPtr_8->ComIPduSignalGroupWithFilterRefNum;
  NumberOfFlagsBits_49 = _47 + _48;
  # DEBUG NumberOfFlagsBits => NumberOfFlagsBits_49
  # DEBUG BEGIN_STMT
  _50 = NumberOfFlagsBits_49 + 7;
  NumberOfFlagsBytes_51 = _50 >> 3;
  # DEBUG NumberOfFlagsBytes => NumberOfFlagsBytes_51
  # DEBUG BEGIN_STMT
  _52 = IPduPtr_8->ComIPduTMSFlagsRef;
  _53 = (sizetype) _52;
  _54 = Com_gDataMemPtr.458_27 + _53;
  _55 = (long unsigned int) NumberOfFlagsBytes_51;
  TS_MemCpy32 (_54, iftmp.462_46, _55);

  <bb 22> [local count: 27301409]:
  # DEBUG initFlagPtr => NULL
  goto <bb 24>; [100.00%]

  <bb 23> [local count: 220893216]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.465_13 = Com_gConfigPtr;
  _14 = Com_gConfigPtr.465_13->ComTxIPduSignalListRef;
  _16 = (int) i_15;
  _17 = IPduPtr_8->ComIPduSignalRefFirst;
  _18 = (int) _17;
  _19 = _16 + _18;
  _20 = (unsigned int) _19;
  _21 = _20 * 2;
  _22 = _14 + _21;
  _23 = Com_gConfigPtr.465_13 + _22;
  signalId_24 = *_23;
  # DEBUG signalId => signalId_24
  # DEBUG BEGIN_STMT
  Com_EB_InitTx_Signal (signalId_24);
  # DEBUG BEGIN_STMT
  i_25 = i_15 + 1;
  # DEBUG i => i_25

  <bb 24> [local count: 248194624]:
  # i_15 = PHI <0(22), i_25(23)>
  # DEBUG IPduPtr => NULL
  # DEBUG TxPduId => NULL
  # DEBUG NumberOfFlagsBytes => NULL
  # DEBUG NumberOfFlagsBits => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG i => NULL
  # DEBUG i => i_15
  # DEBUG BEGIN_STMT
  _26 = IPduPtr_8->ComIPduSignalWithFilterRefNum;
  if (i_15 < _26)
    goto <bb 23>; [89.00%]
  else
    goto <bb 25>; [11.00%]

  <bb 25> [local count: 27301409]:
  # DEBUG IPduPtr => NULL
  # DEBUG signalId => NULL
  # DEBUG i => NULL
  return;

}



;; Function Com_EB_HandleRxIPdu_DisableRxDM (Com_EB_HandleRxIPdu_DisableRxDM, funcdef_no=148, decl_uid=8937, cgraph_uid=149, symbol_order=153)


Symbols to be put in SSA form
{ D.12426 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


Merging blocks 2 and 4
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Com_EB_HandleRxIPdu_DisableRxDM (const struct ComRxIPduType * IPduPtr, uint8 * IPduFlagBytePtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_2(D), 4);
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_2(D), 1);
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_5(D)
  # DEBUG Initialize => 0
  # DEBUG INLINE_ENTRY Com_EB_DisableSignalAndSignalGroupBasedDMFlag
  # DEBUG BEGIN_STMT
  Com_EB_DisableSignalBasedDMFlag (IPduPtr_5(D), 0);
  # DEBUG BEGIN_STMT
  Com_EB_DisableSignalGroupBasedDMFlag (IPduPtr_5(D), 0);
  # DEBUG IPduPtr => NULL
  # DEBUG Initialize => NULL
  return;

}



;; Function Com_EB_HandlePduGroupRx (Com_EB_HandlePduGroupRx, funcdef_no=142, decl_uid=6182, cgraph_uid=143, symbol_order=147)


Symbols to be put in SSA form
{ D.12446 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 31
Number of blocks to update: 30 ( 97%)


Merging blocks 10 and 16
Removing basic block 14
Removing basic block 15
Removing basic block 19
Merging blocks 30 and 27
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 24, latch 23
;;  depth 1, outer 0
;;  nodes: 24 23 3 22 11 12 15 17 18 19 20 21 16 10 9 8 7 5 6 4 13 14
;;
;; Loop 2
;;  header 5, latch 9
;;  depth 2, outer 1
;;  nodes: 5 9 8 7 6
;; 2 succs { 24 }
;; 3 succs { 4 23 }
;; 4 succs { 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 5 10 }
;; 10 succs { 11 16 }
;; 11 succs { 12 22 }
;; 12 succs { 22 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 22 }
;; 16 succs { 17 20 }
;; 17 succs { 22 18 19 }
;; 18 succs { 22 }
;; 19 succs { 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 3 25 }
;; 25 succs { 1 }
Com_EB_HandlePduGroupRx (Com_IpduGroupModeType mode, const uint8 * ipduGroupVector, boolean Initialize)
{
  uint8 * const IPduFlagBytePtr;
  uint16 iPduGroupVectorByte;
  boolean toBeActivated;
  const struct ComRxIPduType * const IPduPtr;
  ComIPduRefType IPduId;
  const ComIPduRefType rxPduCount;
  const struct Com_ConfigType * Com_gConfigPtr.316_1;
  const struct Com_ConfigType * Com_gConfigPtr.317_2;
  unsigned char iftmp.324_3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  short unsigned int _8;
  long unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  sizetype _13;
  const ComIPduGroupMaskType * _14;
  unsigned char _15;
  const uint8 * _16;
  unsigned char _17;
  unsigned char _18;
  boolean iftmp.323_22;
  boolean iftmp.324_23;
  sizetype _28;
  uint8 * Com_gDataMemPtr.326_37;
  const struct Com_ConfigType * Com_gConfigPtr.327_38;
  short unsigned int _39;
  int _40;
  int _41;
  int _42;
  sizetype _43;
  unsigned char _45;
  unsigned char _46;

  <bb 2> [local count: 34934905]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.316_1 = Com_gConfigPtr;
  rxPduCount_27 = Com_gConfigPtr.316_1->ComRxIPduArraySize;
  # DEBUG rxPduCount => rxPduCount_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG IPduId => 0
  goto <bb 24>; [100.00%]

  <bb 3> [local count: 282631252]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.317_2 = Com_gConfigPtr;
  _4 = Com_gConfigPtr.317_2->ComRxIPduRef;
  _5 = (unsigned int) IPduId_19;
  _6 = _5 * 48;
  _7 = _4 + _6;
  IPduPtr_29 = Com_gConfigPtr.317_2 + _7;
  # DEBUG IPduPtr => IPduPtr_29
  # DEBUG BEGIN_STMT
  _8 = IPduPtr_29->ComIPduGroupMaskRef;
  if (_8 != 65535)
    goto <bb 4>; [41.79%]
  else
    goto <bb 23>; [58.21%]

  <bb 4> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _9 = Com_gConfigPtr.317_2->ComIPduGroupMaskRef;
  _10 = (unsigned int) _8;
  _11 = _10 * 4;
  _12 = _9 + _11;
  # DEBUG MaskPtr => Com_gConfigPtr.317_2 + _12
  # DEBUG BEGIN_STMT
  # DEBUG toBeActivated => 0
  # DEBUG BEGIN_STMT
  # DEBUG activate => 0
  # DEBUG BEGIN_STMT
  iPduGroupVectorByte_30 = Com_gConfigPtr.317_2->ComRxIpduGroupVectorByteEnd;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_30

  <bb 5> [local count: 1073741824]:
  # toBeActivated_20 = PHI <0(4), iftmp.324_23(9)>
  # iPduGroupVectorByte_21 = PHI <iPduGroupVectorByte_30(4), iPduGroupVectorByte_31(9)>
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_21
  # DEBUG toBeActivated => toBeActivated_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  iPduGroupVectorByte_31 = iPduGroupVectorByte_21 + 65535;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_31
  # DEBUG BEGIN_STMT
  _13 = (sizetype) iPduGroupVectorByte_31;
  _28 = _12 + _13;
  _14 = Com_gConfigPtr.317_2 + _28;
  _15 = *_14;
  _16 = ipduGroupVector_32(D) + _13;
  _17 = *_16;
  _18 = _15 & _17;
  if (_18 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 536870913]:

  <bb 7> [local count: 1073741824]:
  # iftmp.323_22 = PHI <1(5), 0(6)>
  # DEBUG activate => iftmp.323_22
  # DEBUG BEGIN_STMT
  if (toBeActivated_20 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 536870913]:

  <bb 9> [local count: 1073741824]:
  # iftmp.324_23 = PHI <iftmp.323_22(8), 1(7)>
  # DEBUG toBeActivated => iftmp.324_23
  # DEBUG BEGIN_STMT
  if (iPduGroupVectorByte_31 != 0)
    goto <bb 5>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 10> [local count: 118111601]:
  # iftmp.324_3 = PHI <iftmp.324_23(9)>
  # DEBUG BEGIN_STMT
  # DEBUG mode => mode_33(D)
  # DEBUG toBeActivated => iftmp.324_3
  # DEBUG IPduPtr => IPduPtr_29
  # DEBUG Initialize => Initialize_34(D)
  # DEBUG IPduId => IPduId_19
  # DEBUG INLINE_ENTRY Com_EB_HandleRxIPdu
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.326_37 = Com_gDataMemPtr;
  Com_gConfigPtr.327_38 = Com_gConfigPtr;
  _39 = Com_gConfigPtr.327_38->ComRxIPduStatusBase;
  _40 = (int) _39;
  _41 = (int) IPduId_19;
  _42 = _40 + _41;
  _43 = (sizetype) _42;
  IPduFlagBytePtr_44 = Com_gDataMemPtr.326_37 + _43;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_44
  # DEBUG BEGIN_STMT
  _45 = *IPduFlagBytePtr_44;
  _46 = _45 & 1;
  if (_46 == 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 11> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  if (iftmp.324_3 == 1)
    goto <bb 12>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 12> [local count: 20078972]:
  # DEBUG BEGIN_STMT
  if (mode_33(D) == 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 22>; [67.00%]

  <bb 13> [local count: 6626061]:
  # DEBUG BEGIN_STMT
  # DEBUG IPduId => IPduId_19
  # DEBUG Initialize => Initialize_34(D)
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_44
  # DEBUG INLINE_ENTRY Com_EB_HandleRxIPdu_Start
  # DEBUG BEGIN_STMT
  if (Initialize_34(D) == 1)
    goto <bb 14>; [20.24%]
  else
    goto <bb 15>; [79.76%]

  <bb 14> [local count: 1341115]:
  # DEBUG BEGIN_STMT
  Com_EB_InitRxIPdu (IPduId_19);

  <bb 15> [local count: 6626061]:
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_44, 0);
  # DEBUG IPduId => NULL
  # DEBUG Initialize => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_EnableRxDM (IPduPtr_29, IPduFlagBytePtr_44);
  # DEBUG BEGIN_STMT
  goto <bb 22>; [100.00%]

  <bb 16> [local count: 59055800]:
  # DEBUG BEGIN_STMT
  if (iftmp.324_3 == 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 17> [local count: 29527900]:
  # DEBUG BEGIN_STMT
  switch (mode_33(D)) <default: <L19> [33.33%], case 0: <L16> [33.33%], case 1: <L17> [33.33%]>

  <bb 18> [local count: 9841649]:
<L16>:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_44, 0);
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_DisableRxDM (IPduPtr_29, IPduFlagBytePtr_44);
  # DEBUG BEGIN_STMT
  goto <bb 22>; [100.00%]

  <bb 19> [local count: 9841649]:
<L17>:
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_DisableRxDM (IPduPtr_29, IPduFlagBytePtr_44);
  # DEBUG BEGIN_STMT
  goto <bb 22>; [100.00%]

  <bb 20> [local count: 29527900]:
  # DEBUG BEGIN_STMT
  if (mode_33(D) == 1)
    goto <bb 21>; [20.24%]
  else
    goto <bb 22>; [79.76%]

  <bb 21> [local count: 5976447]:
<L18>:
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_EnableRxDM (IPduPtr_29, IPduFlagBytePtr_44);
  # DEBUG BEGIN_STMT

  <bb 22> [local count: 118108648]:
<L19>:
  # DEBUG BEGIN_STMT

  <bb 23> [local count: 282628300]:
  # DEBUG mode => NULL
  # DEBUG toBeActivated => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG Initialize => NULL
  # DEBUG IPduId => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG BEGIN_STMT
  IPduId_36 = IPduId_19 + 1;
  # DEBUG IPduId => IPduId_36

  <bb 24> [local count: 317563204]:
  # IPduId_19 = PHI <0(2), IPduId_36(23)>
  # DEBUG IPduId => IPduId_19
  # DEBUG BEGIN_STMT
  if (IPduId_19 < rxPduCount_27)
    goto <bb 3>; [89.00%]
  else
    goto <bb 25>; [11.00%]

  <bb 25> [local count: 34931952]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_FilterSint64 (Com_EB_FilterSint64, funcdef_no=220, decl_uid=6343, cgraph_uid=221, symbol_order=225)


Symbols to be put in SSA form
{ D.12380 D.15027 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Removing basic block 3
Removing basic block 9
Merging blocks 10 and 11
Merging blocks 10 and 8
No longer having address taken: ComFilterProp_loc
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 7 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Com_EB_FilterSint64 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint8 FilterResult;
  boolean D.15027;
  uint8 FilterResult_new_equals_x;
  uint8 FilterResult_new_differs_x;
  struct ComFilterConfType ComFilterProp_loc;
  uint8 FilterResult;
  unsigned char _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  unsigned char _5;
  const uint32 * _7;
  const uint32 * _8;
  short unsigned int _26;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  ComFilterProp_loc = *ComFilterPropPtr_12(D);
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr_loc => SignalDataPtr_14(D)
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_12(D)->ComFilterType;
  if (_1 == 7)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG D#8 => SignalDataPtr_14(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_12(D)
  # DEBUG INLINE_ENTRY Com_EB_FilterSint64
  # DEBUG D#9 => D#8
  # DEBUG SignalDataPtr => D#9
  # DEBUG BEGIN_STMT
  _26 = ComFilterPropPtr_12(D)->ComFilterRef;
  FilterResult_27 = Com_EB_FilterOneEveryN (_26);
  # DEBUG FilterResult => FilterResult_27
  # DEBUG FilterResult => FilterResult_27
  # DEBUG BEGIN_STMT
  _31 = FilterResult_27;
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG FilterResult => NULL
  # DEBUG SignalDataPtr_loc => NULL
  # DEBUG FilterResult_new_differs_x => NULL
  # DEBUG FilterResult_new_equals_x => NULL
  # DEBUG SignalDataPtr => NULL
  FilterResult_6 = _31;
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 708669605]:
  # DEBUG BEGIN_STMT
  _2 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_14(D)].LoWord;
  FilterResult_17 = Com_EB_FilterUint32 (ComFilterPropPtr_12(D), _2);
  # DEBUG FilterResult => FilterResult_17
  # DEBUG BEGIN_STMT
  _3 = ComFilterProp_loc.ComFilterRef;
  _4 = _3 + 1;
  ComFilterProp_loc.ComFilterRef = _4;
  # DEBUG BEGIN_STMT
  _5 = ComFilterPropPtr_12(D)->ComFilterType;
  switch (_5) <default: <L9> [33.33%], case 3: <L2> [33.33%], case 4: <L3> [33.33%]>

  <bb 5> [local count: 236199579]:
<L2>:
  # DEBUG BEGIN_STMT
  _7 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_14(D)].HiWord;
  FilterResult_new_differs_x_23 = Com_EB_FilterUint32 (&ComFilterProp_loc, _7);
  # DEBUG FilterResult_new_differs_x => FilterResult_new_differs_x_23
  # DEBUG BEGIN_STMT
  FilterResult_24 = FilterResult_17 | FilterResult_new_differs_x_23;
  # DEBUG FilterResult => FilterResult_24
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 236199579]:
<L3>:
  # DEBUG BEGIN_STMT
  _8 = &MEM[(const struct ComEmu64Type *)SignalDataPtr_14(D)].HiWord;
  FilterResult_new_equals_x_20 = Com_EB_FilterUint32 (&ComFilterProp_loc, _8);
  # DEBUG FilterResult_new_equals_x => FilterResult_new_equals_x_20
  # DEBUG BEGIN_STMT
  FilterResult_21 = FilterResult_17 & FilterResult_new_equals_x_20;
  # DEBUG FilterResult => FilterResult_21
  # DEBUG BEGIN_STMT

  <bb 7> [local count: 1073670958]:
  # FilterResult_9 = PHI <FilterResult_6(3), FilterResult_24(5), FilterResult_21(6), FilterResult_17(4)>
<L9>:
  # DEBUG FilterResult => FilterResult_9
  # DEBUG BEGIN_STMT
  ComFilterProp_loc ={v} {CLOBBER};
  return FilterResult_9;

}



;; Function Com_EB_CalculateFilter (Com_EB_CalculateFilter, funcdef_no=9, decl_uid=6153, cgraph_uid=10, symbol_order=12)


Symbols to be put in SSA form
{ D.12433 D.15039 D.15047 D.15055 D.15063 D.15071 D.15079 D.15087 D.15095 D.15103 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 32
Number of blocks to update: 31 ( 97%)


Merging blocks 3 and 14
Removing basic block 4
Removing basic block 5
Removing basic block 6
Removing basic block 7
Removing basic block 8
Removing basic block 9
Removing basic block 10
Removing basic block 11
Merging blocks 17 and 16
Merging blocks 19 and 18
Merging blocks 21 and 20
Merging blocks 23 and 22
Merging blocks 25 and 24
Merging blocks 27 and 26
Merging blocks 29 and 28
Merging blocks 31 and 30
Merging blocks 3 and 15
Merging blocks 3 and 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 12 3 8 9 7 5 6 4 11 10 }
;; 3 succs { 12 }
;; 4 succs { 12 }
;; 5 succs { 12 }
;; 6 succs { 12 }
;; 7 succs { 12 }
;; 8 succs { 12 }
;; 9 succs { 12 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Com_EB_CalculateFilter (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  struct ComEmu64Type value;
  uint8 retval;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  boolean D.15103;
  struct ComEmu64Type value;
  uint8 retval;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  boolean D.15095;
  sint32 value;
  uint8 retval;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  boolean D.15087;
  sint16 value;
  uint8 retval;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  boolean D.15079;
  sint8 value;
  uint8 retval;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  boolean D.15071;
  uint32 value;
  uint8 retval;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  boolean D.15063;
  uint16 value;
  uint8 retval;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  boolean D.15055;
  uint8 value;
  uint8 retval;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  boolean D.15047;
  uint8 MSB;
  const ComSignalDescBitType ComSignalPosition;
  boolean D.15039;
  const Com_TS_SignalTypeType SignalType;
  boolean FilterResult;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _29;
  short unsigned int _31;
  sizetype _32;
  const uint8 * _33;
  unsigned char _34;
  int _35;
  short unsigned int _36;
  unsigned int _37;
  int _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  short unsigned int _42;
  int _44;
  unsigned char _46;
  short unsigned int _47;
  int _49;
  unsigned char _51;
  short unsigned int _52;
  int _54;
  unsigned char _56;
  short unsigned int _57;
  int _59;
  unsigned char _61;
  short unsigned int _62;
  int _64;
  unsigned char _66;
  short unsigned int _67;
  int _69;
  unsigned char _71;
  short unsigned int _72;
  int _74;
  unsigned char _76;
  short unsigned int _77;
  int _79;
  unsigned char _81;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FilterResult => 0
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_7(D)->ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  SignalType_8 = _3 & 15;
  # DEBUG SignalType => SignalType_8
  # DEBUG BEGIN_STMT
  switch (SignalType_8) <default: <L12> [10.00%], case 0: <L0> [10.00%], case 1: <L17> [10.00%], case 2: <L18> [10.00%], case 3: <L16> [10.00%], case 4: <L14> [10.00%], case 5: <L15> [10.00%], case 6: <L13> [10.00%], case 9: <L20> [10.00%], case 10: <L19> [10.00%]>

  <bb 3> [local count: 107374182]:
<L0>:
  # DEBUG BEGIN_STMT
  _29 = MEM[(short unsigned int *)Com_EB_ReadPropPtr_7(D) + 2B];
  # DEBUG D#88 => Com_EB_ReadPropPtr_7(D)
  # DEBUG dataPtr => dataPtr_9(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_CalculateFilter_Bool
  # DEBUG Com_EB_ReadPropPtr => D#88
  # DEBUG BEGIN_STMT
  ComSignalPosition_30 = _29;
  # DEBUG ComSignalPosition => ComSignalPosition_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = ComSignalPosition_30 >> 3;
  _32 = (sizetype) _31;
  _33 = dataPtr_9(D) + _32;
  _34 = *_33;
  # DEBUG tmp_val => _34
  # DEBUG BEGIN_STMT
  _35 = (int) _34;
  _36 = ComSignalPosition_30 & 7;
  _37 = (unsigned int) _36;
  _38 = _35 >> _37;
  _39 = (unsigned char) _38;
  _40 = _39 & 1;
  MSB = _40;
  # DEBUG BEGIN_STMT
  _41 = Com_EB_FilterBoolean (ComFilterPropPtr_10(D), &MSB);
  MSB ={v} {CLOBBER};
  # DEBUG D#87 => {CLOBBER}
  # DEBUG tmp_val => D#87
  _133 = _41;
  # DEBUG dataPtr => NULL
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG ComSignalPosition => NULL
  # DEBUG MSB => NULL
  FilterResult_28 = _133;
  # DEBUG FilterResult => FilterResult_28
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 4> [local count: 107374182]:
<L13>:
  # DEBUG BEGIN_STMT
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_7(D)
  # DEBUG dataPtr => dataPtr_9(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_CalculateFilter_Uint8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _42 = Com_EB_ReadPropPtr_7(D)->ComRxSignalFlags;
  index_43 = _42 & 63;
  # DEBUG index => index_43
  # DEBUG BEGIN_STMT
  _44 = (int) index_43;
  fptr_45 = Com_ReadFuncs[_44].Read;
  # DEBUG fptr => fptr_45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_45 (&value, dataPtr_9(D), Com_EB_ReadPropPtr_7(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _46 = Com_EB_FilterUint8 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  _99 = _46;
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG index => NULL
  # DEBUG fptr => NULL
  # DEBUG retval => NULL
  # DEBUG value => NULL
  FilterResult_16 = _99;
  # DEBUG FilterResult => FilterResult_16
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 5> [local count: 107374182]:
<L14>:
  # DEBUG BEGIN_STMT
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_7(D)
  # DEBUG dataPtr => dataPtr_9(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_CalculateFilter_Uint16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _47 = Com_EB_ReadPropPtr_7(D)->ComRxSignalFlags;
  index_48 = _47 & 63;
  # DEBUG index => index_48
  # DEBUG BEGIN_STMT
  _49 = (int) index_48;
  fptr_50 = Com_ReadFuncs[_49].Read;
  # DEBUG fptr => fptr_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_50 (&value, dataPtr_9(D), Com_EB_ReadPropPtr_7(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _51 = Com_EB_FilterUint16 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  _111 = _51;
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG index => NULL
  # DEBUG fptr => NULL
  # DEBUG retval => NULL
  # DEBUG value => NULL
  FilterResult_20 = _111;
  # DEBUG FilterResult => FilterResult_20
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 6> [local count: 107374182]:
<L15>:
  # DEBUG BEGIN_STMT
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_7(D)
  # DEBUG dataPtr => dataPtr_9(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_CalculateFilter_Uint32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _52 = Com_EB_ReadPropPtr_7(D)->ComRxSignalFlags;
  index_53 = _52 & 63;
  # DEBUG index => index_53
  # DEBUG BEGIN_STMT
  _54 = (int) index_53;
  fptr_55 = Com_ReadFuncs[_54].Read;
  # DEBUG fptr => fptr_55
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_55 (&value, dataPtr_9(D), Com_EB_ReadPropPtr_7(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _56 = Com_EB_FilterUint32 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  _105 = _56;
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG index => NULL
  # DEBUG fptr => NULL
  # DEBUG retval => NULL
  # DEBUG value => NULL
  FilterResult_18 = _105;
  # DEBUG FilterResult => FilterResult_18
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 7> [local count: 107374182]:
<L16>:
  # DEBUG BEGIN_STMT
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_7(D)
  # DEBUG dataPtr => dataPtr_9(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_CalculateFilter_Sint8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _57 = Com_EB_ReadPropPtr_7(D)->ComRxSignalFlags;
  index_58 = _57 & 63;
  # DEBUG index => index_58
  # DEBUG BEGIN_STMT
  _59 = (int) index_58;
  fptr_60 = Com_ReadFuncs[_59].Read;
  # DEBUG fptr => fptr_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_60 (&value, dataPtr_9(D), Com_EB_ReadPropPtr_7(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _61 = Com_EB_FilterSint8 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  _117 = _61;
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG index => NULL
  # DEBUG fptr => NULL
  # DEBUG retval => NULL
  # DEBUG value => NULL
  FilterResult_22 = _117;
  # DEBUG FilterResult => FilterResult_22
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 8> [local count: 107374182]:
<L17>:
  # DEBUG BEGIN_STMT
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_7(D)
  # DEBUG dataPtr => dataPtr_9(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_CalculateFilter_Sint16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _62 = Com_EB_ReadPropPtr_7(D)->ComRxSignalFlags;
  index_63 = _62 & 63;
  # DEBUG index => index_63
  # DEBUG BEGIN_STMT
  _64 = (int) index_63;
  fptr_65 = Com_ReadFuncs[_64].Read;
  # DEBUG fptr => fptr_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_65 (&value, dataPtr_9(D), Com_EB_ReadPropPtr_7(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _66 = Com_EB_FilterSint16 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  _129 = _66;
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG index => NULL
  # DEBUG fptr => NULL
  # DEBUG retval => NULL
  # DEBUG value => NULL
  FilterResult_26 = _129;
  # DEBUG FilterResult => FilterResult_26
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 9> [local count: 107374182]:
<L18>:
  # DEBUG BEGIN_STMT
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_7(D)
  # DEBUG dataPtr => dataPtr_9(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_CalculateFilter_Sint32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _67 = Com_EB_ReadPropPtr_7(D)->ComRxSignalFlags;
  index_68 = _67 & 63;
  # DEBUG index => index_68
  # DEBUG BEGIN_STMT
  _69 = (int) index_68;
  fptr_70 = Com_ReadFuncs[_69].Read;
  # DEBUG fptr => fptr_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_70 (&value, dataPtr_9(D), Com_EB_ReadPropPtr_7(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _71 = Com_EB_FilterSint32 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  _123 = _71;
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG index => NULL
  # DEBUG fptr => NULL
  # DEBUG retval => NULL
  # DEBUG value => NULL
  FilterResult_24 = _123;
  # DEBUG FilterResult => FilterResult_24
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 10> [local count: 107374182]:
<L19>:
  # DEBUG BEGIN_STMT
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_7(D)
  # DEBUG dataPtr => dataPtr_9(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_CalculateFilter_Sint64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _72 = Com_EB_ReadPropPtr_7(D)->ComRxSignalFlags;
  index_73 = _72 & 63;
  # DEBUG index => index_73
  # DEBUG BEGIN_STMT
  _74 = (int) index_73;
  fptr_75 = Com_ReadFuncs[_74].Read;
  # DEBUG fptr => fptr_75
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_75 (&value, dataPtr_9(D), Com_EB_ReadPropPtr_7(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _76 = Com_EB_FilterSint64 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  _87 = _76;
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG index => NULL
  # DEBUG fptr => NULL
  # DEBUG retval => NULL
  FilterResult_12 = _87;
  # DEBUG FilterResult => FilterResult_12
  # DEBUG BEGIN_STMT
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 107374182]:
<L20>:
  # DEBUG BEGIN_STMT
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_7(D)
  # DEBUG dataPtr => dataPtr_9(D)
  # DEBUG ComFilterPropPtr => ComFilterPropPtr_10(D)
  # DEBUG INLINE_ENTRY Com_EB_CalculateFilter_Uint64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _77 = Com_EB_ReadPropPtr_7(D)->ComRxSignalFlags;
  index_78 = _77 & 63;
  # DEBUG index => index_78
  # DEBUG BEGIN_STMT
  _79 = (int) index_78;
  fptr_80 = Com_ReadFuncs[_79].Read;
  # DEBUG fptr => fptr_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_80 (&value, dataPtr_9(D), Com_EB_ReadPropPtr_7(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _81 = Com_EB_FilterUint64 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  _93 = _81;
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG ComFilterPropPtr => NULL
  # DEBUG index => NULL
  # DEBUG fptr => NULL
  # DEBUG retval => NULL
  FilterResult_14 = _93;
  # DEBUG FilterResult => FilterResult_14
  # DEBUG BEGIN_STMT

  <bb 12> [local count: 1073741824]:
  # FilterResult_4 = PHI <FilterResult_28(3), FilterResult_16(4), FilterResult_20(5), FilterResult_18(6), FilterResult_22(7), FilterResult_26(8), FilterResult_24(9), FilterResult_12(10), FilterResult_14(11), 0(2)>
<L12>:
  # DEBUG FilterResult => FilterResult_4
  # DEBUG BEGIN_STMT
  return FilterResult_4;

}



;; Function Com_EB_SetGroupSignalTMSFlagOfSignalGroup (Com_EB_SetGroupSignalTMSFlagOfSignalGroup, funcdef_no=207, decl_uid=9566, cgraph_uid=208, symbol_order=212)

Com_EB_SetGroupSignalTMSFlagOfSignalGroup (const struct ComTxSignalGroupType * SignalGPtr, const uint8 * SGArrayPtr)
{
  const struct ComTxSignalType * const GSignalPtr;
  const ComSignalRefType GSignalId;
  boolean TMSResult;
  Com_SignalIdType i;
  const struct Com_ConfigType * Com_gConfigPtr.573_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  const ComSignalRefType * _6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const struct ComSignalBaseType * _11;
  const struct ComFilterConfType * _12;
  int _13;
  short unsigned int _14;
  int _15;
  short unsigned int _16;
  int _17;
  int _18;
  short unsigned int _31;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_23 = SignalGPtr_22(D)->ComGroupSignalRefFirst;
  # DEBUG i => i_23
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.573_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.573_1->ComTxSignalGroupGroupSignalListRef;
  _3 = (unsigned int) i_19;
  _4 = _3 * 2;
  _5 = _2 + _4;
  _6 = Com_gConfigPtr.573_1 + _5;
  GSignalId_24 = *_6;
  # DEBUG GSignalId => GSignalId_24
  # DEBUG BEGIN_STMT
  _7 = Com_gConfigPtr.573_1->ComTxSignalRef;
  _8 = (unsigned int) GSignalId_24;
  _9 = _8 * 26;
  _10 = _7 + _9;
  GSignalPtr_25 = Com_gConfigPtr.573_1 + _10;
  # DEBUG GSignalPtr => GSignalPtr_25
  # DEBUG BEGIN_STMT
  _11 = &GSignalPtr_25->ComSignalBase;
  _12 = &GSignalPtr_25->ComSignalBase.ComFilterConf;
  TMSResult_28 = Com_EB_CalculateFilter (_11, SGArrayPtr_26(D), _12);
  # DEBUG TMSResult => TMSResult_28
  # DEBUG BEGIN_STMT
  _31 = MEM[(short unsigned int *)SignalGPtr_22(D) + 24B];
  # DEBUG D#89 => SignalGPtr_22(D)
  Com_EB_CalculateGroupSignalTM.isra.0 (GSignalPtr_25, _31, TMSResult_28);
  # DEBUG BEGIN_STMT
  i_30 = i_19 + 1;
  # DEBUG i => i_30

  <bb 4> [local count: 1073741824]:
  # i_19 = PHI <i_23(2), i_30(3)>
  # DEBUG i => i_19
  # DEBUG BEGIN_STMT
  _13 = (int) i_19;
  _14 = SignalGPtr_22(D)->ComGroupSignalWithFilterRefNum;
  _15 = (int) _14;
  _16 = SignalGPtr_22(D)->ComGroupSignalRefFirst;
  _17 = (int) _16;
  _18 = _15 + _17;
  if (_13 < _18)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_NotifyReceivers.isra.0 (Com_EB_NotifyReceivers.isra.0, funcdef_no=341, decl_uid=13259, cgraph_uid=354, symbol_order=367)


Symbols to be put in SSA form
{ D.13260 D.15197 D.15204 D.15218 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 64
Number of blocks to update: 63 ( 98%)


Removing basic block 2
Merging blocks 3 and 42
Removing basic block 5
Removing basic block 6
Merging blocks 7 and 54
Removing basic block 12
Removing basic block 13
Removing basic block 14
Merging blocks 16 and 50
Removing basic block 18
Removing basic block 19
Removing basic block 20
Removing basic block 26
Removing basic block 27
Removing basic block 28
Removing basic block 40
Merging blocks 48 and 41
Removing basic block 51
Merging blocks 63 and 53
Merging blocks 7 and 55
Merging blocks 16 and 52
Merging blocks 16 and 49
Merging blocks 48 and 29
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
;;
;; Loop 1
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 35 36 37 27 28 29 34 31 32 33 30
;;
;; Loop 2
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25
;;
;; Loop 3
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 20 21
;;
;; Loop 4
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 9 14 15 16 13 12 11 10
;; 2 succs { 3 8 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 18 }
;; 9 succs { 10 17 }
;; 10 succs { 11 14 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 9 19 }
;; 19 succs { 23 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 20 24 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 25 39 }
;; 27 succs { 28 35 }
;; 28 succs { 29 35 }
;; 29 succs { 30 35 }
;; 30 succs { 31 32 }
;; 31 succs { 34 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 }
;; 35 succs { 36 38 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 }
;; 39 succs { 27 40 }
;; 40 succs { 1 }
Com_EB_NotifyReceivers.isra.0 (const struct ComRxIPduType * IPduPtr)
{
  uint8 * const IPduFlagBytePtr;
  const ComIPduRefType ComRxPduId;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  const uint8 RunningFlag;
  uint8 * const RxDMFlagPtr;
  const uint32 UpdateBitByte;
  const struct ComRxSignalExtType * const SignalExtPtr;
  uint8 SignalUpdated;
  boolean D.15218;
  uint8 SignalUpdated;
  uint8 D.15204;
  uint8 restart;
  uint8 * IPduFlagBytePtr;
  const struct ComRxIPduType * firstCfgPtr;
  ptrdiff_t offset;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  uint8 D.15197;
  uint8 SignalUpdated;
  void (*<T608>) (void) fptr;
  const struct ComSignalBaseType * const Com_EB_ReadPropPtr;
  const uint8 * const dataPtr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  uint8 passFilter_MASKED_NEW_DIFFERS_MASKED_OLD;
  uint8 filter;
  ComSignalRefType i;
  uint8 SignalUpdated;
  void (*<T608>) (void) fptr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  uint8 passFilter_MASKED_NEW_DIFFERS_MASKED_OLD;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  ComSignalRefType loopStop;
  ComSignalRefType loopStart;
  ComSignalRefType i;
  uint8 passFilter_MASKED_NEW_DIFFERS_MASKED_OLD;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  ComSignalRefType loopStop;
  ComSignalRefType loopStart;
  ComSignalRefType i;
  uint8 SignalUpdated;
  void (*<T608>) (void) fptr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType signalGId;
  ComSignalGroupRefType i;
  uint8 pduRxDMRestat;
  const struct Com_ConfigType * Com_gConfigPtr.677_9;
  long unsigned int _10;
  int _12;
  short unsigned int _13;
  int _14;
  int _15;
  unsigned int _16;
  unsigned int _17;
  sizetype _18;
  const ComSignalGroupRefType * _19;
  long unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  sizetype _24;
  const ComRAMIdxType * _26;
  const struct Com_ConfigType * Com_gConfigPtr.681_28;
  long unsigned int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  sizetype _33;
  short unsigned int _35;
  int _36;
  short unsigned int _39;
  short unsigned int _41;
  short unsigned int _43;
  const struct Com_ConfigType * Com_gConfigPtr.670_45;
  long unsigned int _46;
  unsigned int _48;
  unsigned int _49;
  sizetype _50;
  const ComSignalRefType * _51;
  long unsigned int _53;
  unsigned int _54;
  unsigned int _55;
  sizetype _56;
  const struct Com_ConfigType * Com_gConfigPtr.661_61;
  long unsigned int _62;
  int _64;
  short unsigned int _65;
  int _66;
  int _67;
  unsigned int _68;
  unsigned int _69;
  sizetype _70;
  const ComSignalRefType * _71;
  long unsigned int _73;
  unsigned int _74;
  unsigned int _75;
  sizetype _76;
  const ComRAMIdxType * _78;
  const struct Com_ConfigType * Com_gConfigPtr.665_80;
  long unsigned int _81;
  short unsigned int _82;
  unsigned int _83;
  unsigned int _84;
  sizetype _85;
  short unsigned int _87;
  int _88;
  uint8 * Com_gDataMemPtr.641_91;
  const struct Com_ConfigType * Com_gConfigPtr.643_92;
  long unsigned int _93;
  int _95;
  short unsigned int _96;
  int _97;
  int _98;
  unsigned int _99;
  unsigned int _100;
  sizetype _101;
  const ComSignalRefType * _102;
  long unsigned int _104;
  unsigned int _105;
  unsigned int _106;
  sizetype _107;
  const ComRAMIdxType * _109;
  const struct Com_ConfigType * Com_gConfigPtr.647_111;
  long unsigned int _112;
  short unsigned int _113;
  unsigned int _114;
  unsigned int _115;
  sizetype _116;
  short unsigned int _118;
  sizetype _119;
  const struct ComFilterConfType * _122;
  unsigned char passFilter_MASKED_NEW_DIFFERS_MASKED_OLD.650_124;
  unsigned char _125;
  unsigned char _126;
  unsigned char _127;
  unsigned char _128;
  short unsigned int _129;
  int _130;
  short unsigned int _133;
  const struct Com_ConfigType * Com_gConfigPtr.637_134;
  long unsigned int _135;
  int _137;
  uint8 * Com_gDataMemPtr.639_139;
  short unsigned int _140;
  int _141;
  int _142;
  int _143;
  sizetype _144;
  unsigned char _146;
  unsigned char _147;
  unsigned char _148;
  unsigned char _150;
  unsigned char _151;
  unsigned char _152;
  unsigned char _154;
  short unsigned int _155;
  unsigned char _156;
  unsigned char _157;
  unsigned char _159;
  unsigned char _160;
  short unsigned int _161;
  const ComRAMIdxType * _164;
  const struct Com_ConfigType * Com_gConfigPtr.684_166;
  long unsigned int _167;
  short unsigned int _168;
  unsigned int _169;
  unsigned int _170;
  sizetype _171;
  unsigned char _173;
  unsigned char _174;
  unsigned char _175;
  short unsigned int _176;
  short unsigned int _177;
  uint8 * Com_gDataMemPtr.686_179;
  short unsigned int _180;
  long unsigned int _181;
  long unsigned int _182;
  uint8 * _183;
  unsigned char _184;
  int _185;
  short unsigned int _186;
  unsigned int _187;
  int _188;
  unsigned char _189;
  unsigned char _191;
  unsigned char _192;
  short unsigned int _193;
  unsigned int _194;
  short unsigned int _195;
  short unsigned int _196;
  unsigned int _197;
  unsigned int _198;
  unsigned char _200;
  unsigned char _201;
  unsigned char _202;
  unsigned char _205;
  int _206;
  int _207;
  unsigned char _208;
  unsigned char _209;
  int _210;
  unsigned int _211;
  unsigned char _212;
  unsigned char _213;
  unsigned char _214;
  short unsigned int _215;
  const struct Com_ConfigType * Com_gConfigPtr.690_217;
  short unsigned int _218;
  int _219;
  int _220;
  int _221;
  sizetype _222;
  unsigned char _224;
  unsigned char _225;
  int _226;
  unsigned int _227;
  unsigned char _228;
  unsigned char _229;
  unsigned char _230;
  unsigned int _231;
  unsigned char _232;
  unsigned char _233;
  short unsigned int _234;

  <bb 2> [local count: 118111598]:
  # DEBUG PduId s=> PduId
  # DEBUG D#104 s=> PduId
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_1(D)
  # DEBUG INLINE_ENTRY Com_EB_HandlePduRxDM
  # DEBUG BEGIN_STMT
  # DEBUG restart => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.637_134 = Com_gConfigPtr;
  _135 = Com_gConfigPtr.637_134->ComRxIPduRef;
  firstCfgPtr_136 = Com_gConfigPtr.637_134 + _135;
  # DEBUG firstCfgPtr => firstCfgPtr_136
  # DEBUG BEGIN_STMT
  _137 = IPduPtr_1(D) - firstCfgPtr_136;
  offset_138 = _137 /[ex] 48;
  # DEBUG offset => offset_138
  # DEBUG BEGIN_STMT
  # DEBUG ComRxPduId => (ComIPduRefType) offset_138
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.639_139 = Com_gDataMemPtr;
  _140 = Com_gConfigPtr.637_134->ComRxIPduStatusBase;
  _141 = (int) _140;
  _142 = offset_138 & 65535;
  _143 = _141 + _142;
  _144 = (sizetype) _143;
  IPduFlagBytePtr_145 = Com_gDataMemPtr.639_139 + _144;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_145
  # DEBUG BEGIN_STMT
  _146 = IPduPtr_1(D)->ComRxIPduFlags;
  _147 = _146 >> 1;
  _148 = _147 & 1;
  if (_148 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 3> [local count: 38976827]:
  # DEBUG BEGIN_STMT
  TimeOutOffset_149 = IPduPtr_1(D)->ComRxTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_149
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _150 = *IPduFlagBytePtr_145;
  _151 = _150 & 2;
  if (_151 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 12862353]:
  # DEBUG BEGIN_STMT
  _152 = _150 >> 2;
  restart_153 = _152 & 1;
  # DEBUG restart => restart_153
  # DEBUG BEGIN_STMT
  _154 = _150 & 251;
  *IPduFlagBytePtr_145 = _154;
  # DEBUG BEGIN_STMT
  _155 = MEM[(short unsigned int *)IPduPtr_1(D) + 36B];
  # DEBUG D#1 => IPduPtr_1(D)
  Com_EB_RxDMQueue.isra.0 (_155, TimeOutOffset_149);
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 26114474]:
  # DEBUG BEGIN_STMT
  _156 = _150 & 16;
  if (_156 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 8617777]:
  # DEBUG BEGIN_STMT
  _157 = _150 >> 2;
  restart_158 = _157 & 1;
  # DEBUG restart => restart_158
  # DEBUG BEGIN_STMT
  _159 = _150 & 251;
  # DEBUG BEGIN_STMT
  _160 = _159 | 2;
  *IPduFlagBytePtr_145 = _160;
  # DEBUG BEGIN_STMT
  _161 = MEM[(short unsigned int *)IPduPtr_1(D) + 36B];
  # DEBUG D#1 => IPduPtr_1(D)
  Com_EB_RxDMQueue.isra.0 (_161, TimeOutOffset_149);

  <bb 7> [local count: 38976828]:
  # restart_163 = PHI <restart_153(4), 0(5), restart_158(6)>
  # DEBUG restart => restart_163
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 8> [local count: 118111598]:
  # restart_162 = PHI <0(2), restart_163(7)>
  # DEBUG restart => restart_162
  # DEBUG BEGIN_STMT
  _254 = restart_162;
  # DEBUG IPduPtr => NULL
  # DEBUG TimeOutOffset => NULL
  # DEBUG offset => NULL
  # DEBUG firstCfgPtr => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG restart => NULL
  pduRxDMRestat_2 = _254;
  # DEBUG pduRxDMRestat => pduRxDMRestat_2
  # DEBUG BEGIN_STMT
  # DEBUG D#103 => D#104
  # DEBUG IPduPtr => IPduPtr_1(D)
  # DEBUG pduRxDMRestat => pduRxDMRestat_2
  # DEBUG INLINE_ENTRY Com_EB_HandleRxSignalsWithBuffer
  # DEBUG PduId => D#103
  # DEBUG D#102 => D#103
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.641_91 = Com_gDataMemPtr;
  # DEBUG D#101 => Com_gConfigPtr
  # DEBUG D#100 => D#101->ComRxIPduLengthBase
  # DEBUG D#99 => (sizetype) D#100
  # DEBUG D#98 => (unsigned int) D#102
  # DEBUG D#97 => D#98 * 2
  # DEBUG D#96 => D#99 + D#97
  # DEBUG D#95 => Com_gDataMemPtr.641_91 + D#96
  # DEBUG D#94 => *D#95
  # DEBUG D#93 => (const uint32) D#94
  # DEBUG pduLength => D#93
  # DEBUG BEGIN_STMT
  # DEBUG D#92 => IPduPtr_1(D)->ComIPduSizeMax
  # DEBUG D#91 => D#94 != D#92
  # DEBUG D#90 => (const uint8) D#91
  # DEBUG checkRequired => D#90
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 18>; [100.00%]

  <bb 9> [local count: 955630209]:
  # DEBUG BEGIN_STMT
  # DEBUG filter => 1
  # DEBUG BEGIN_STMT
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD = pduRxDMRestat_2;
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.643_92 = Com_gConfigPtr;
  _93 = Com_gConfigPtr.643_92->ComRxIPduSignalListRef;
  _95 = (int) i_94;
  _96 = IPduPtr_1(D)->ComIPduSignalRefFirst;
  _97 = (int) _96;
  _98 = _95 + _97;
  _99 = (unsigned int) _98;
  _100 = _99 * 2;
  _101 = _93 + _100;
  _102 = Com_gConfigPtr.643_92 + _101;
  signalId_103 = *_102;
  # DEBUG signalId => signalId_103
  # DEBUG BEGIN_STMT
  _104 = Com_gConfigPtr.643_92->ComRxSignalRef;
  _105 = (unsigned int) signalId_103;
  _106 = _105 * 20;
  _107 = _104 + _106;
  SignalPtr_108 = Com_gConfigPtr.643_92 + _107;
  # DEBUG SignalPtr => SignalPtr_108
  # DEBUG BEGIN_STMT
  # DEBUG D#16 => D#93
  # DEBUG D#17 => D#90
  # DEBUG SignalPtr => SignalPtr_108
  # DEBUG IPduPtr => IPduPtr_1(D)
  # DEBUG passFilter_MASKED_NEW_DIFFERS_MASKED_OLD => &passFilter_MASKED_NEW_DIFFERS_MASKED_OLD
  # DEBUG INLINE_ENTRY Com_EB_CheckRxSignal_Receive_UpdateBitAndDM
  # DEBUG pduLength => D#16
  # DEBUG checkRequired => D#17
  # DEBUG D#15 => D#16
  # DEBUG BEGIN_STMT
  # DEBUG SignalUpdated => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _109 = &MEM[(short unsigned int *)IPduPtr_1(D) + 10B];
  # DEBUG D#13 => IPduPtr_1(D)
  # DEBUG D#14 => D#15
  SignalUpdated_110 = Com_EB_CheckRxSignalUpdateBitAndDM.isra.0 (SignalPtr_108, _109, &passFilter_MASKED_NEW_DIFFERS_MASKED_OLD);
  # DEBUG SignalUpdated => SignalUpdated_110
  # DEBUG BEGIN_STMT
  # DEBUG SignalPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG passFilter_MASKED_NEW_DIFFERS_MASKED_OLD => NULL
  # DEBUG SignalUpdated => NULL
  # DEBUG SignalUpdated => SignalUpdated_110
  # DEBUG BEGIN_STMT
  if (SignalUpdated_110 == 1)
    goto <bb 10>; [20.24%]
  else
    goto <bb 17>; [79.76%]

  <bb 10> [local count: 193419554]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.647_111 = Com_gConfigPtr;
  _112 = Com_gConfigPtr.647_111->ComRxSignalExtRef;
  _113 = SignalPtr_108->ComSignalExtRef;
  _114 = (unsigned int) _113;
  _115 = _114 * 14;
  _116 = _112 + _115;
  SignalExtPtr_117 = Com_gConfigPtr.647_111 + _116;
  # DEBUG SignalExtPtr => SignalExtPtr_117
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _118 = SignalPtr_108->ComSignalBase.ComBufferRef;
  _119 = (sizetype) _118;
  dataPtr_120 = Com_gDataMemPtr.641_91 + _119;
  # DEBUG dataPtr => dataPtr_120
  # DEBUG BEGIN_STMT
  Com_EB_ReadPropPtr_121 = &SignalPtr_108->ComSignalBase;
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_121
  # DEBUG BEGIN_STMT
  _122 = &MEM[(const struct ComSignalBaseType *)SignalPtr_108].ComFilterConf;
  filter_123 = Com_EB_CalculateFilter (Com_EB_ReadPropPtr_121, dataPtr_120, _122);
  # DEBUG filter => filter_123
  # DEBUG BEGIN_STMT
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD.650_124 = passFilter_MASKED_NEW_DIFFERS_MASKED_OLD;
  if (passFilter_MASKED_NEW_DIFFERS_MASKED_OLD.650_124 == 1)
    goto <bb 11>; [34.00%]
  else
    goto <bb 14>; [66.00%]

  <bb 11> [local count: 65762648]:
  # DEBUG BEGIN_STMT
  _125 = SignalExtPtr_117->ComRxSignalExtFlags;
  _126 = _125 >> 3;
  _127 = _126 & 1;
  if (_127 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 12> [local count: 32881324]:
  # DEBUG BEGIN_STMT
  _128 = SignalPtr_108->ComSignalBase.ComFilterConf.ComFilterType;
  if (_128 == 2)
    goto <bb 13>; [20.24%]
  else
    goto <bb 14>; [79.76%]

  <bb 13> [local count: 6655180]:
  # DEBUG BEGIN_STMT
  # DEBUG filter => 1
  # DEBUG BEGIN_STMT
  Com_EB_SetBuffer (Com_EB_ReadPropPtr_121);
  # DEBUG filter => 1
  # DEBUG BEGIN_STMT
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 186764374]:
  # DEBUG filter => filter_123
  # DEBUG BEGIN_STMT
  if (filter_123 == 1)
    goto <bb 15>; [34.00%]
  else
    goto <bb 17>; [66.00%]

  <bb 15> [local count: 70155067]:
  # DEBUG BEGIN_STMT
  _129 = SignalExtPtr_117->ComNotification;
  if (_129 != 65535)
    goto <bb 16>; [66.00%]
  else
    goto <bb 17>; [34.00%]

  <bb 16> [local count: 46302344]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _130 = (int) _129;
  fptr_131 = Com_CbkRxAck_Array[_130];
  # DEBUG fptr => fptr_131
  # DEBUG BEGIN_STMT
  fptr_131 ();

  <bb 17> [local count: 955630211]:
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  i_132 = i_94 + 1;
  # DEBUG i => i_132

  <bb 18> [local count: 1073741809]:
  # i_94 = PHI <0(8), i_132(17)>
  # DEBUG i => i_94
  # DEBUG BEGIN_STMT
  _133 = IPduPtr_1(D)->ComIPduSignalWithBufferRefNum;
  if (i_94 < _133)
    goto <bb 9>; [89.00%]
  else
    goto <bb 19>; [11.00%]

  <bb 19> [local count: 118111599]:
  # DEBUG IPduPtr => NULL
  # DEBUG pduRxDMRestat => NULL
  # DEBUG i => NULL
  # DEBUG filter => NULL
  # DEBUG passFilter_MASKED_NEW_DIFFERS_MASKED_OLD => NULL
  # DEBUG signalId => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG SignalExtPtr => NULL
  # DEBUG dataPtr => NULL
  # DEBUG Com_EB_ReadPropPtr => NULL
  # DEBUG fptr => NULL
  # DEBUG SignalUpdated => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#32 => D#104
  # DEBUG IPduPtr => IPduPtr_1(D)
  # DEBUG INLINE_ENTRY Com_EB_HandleRxSig_W_F_A_A_Noti
  # DEBUG PduId => D#32
  # DEBUG D#31 => D#32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG D#30 => Com_gDataMemPtr
  # DEBUG D#29 => Com_gConfigPtr
  # DEBUG D#28 => D#29->ComRxIPduLengthBase
  # DEBUG D#27 => (sizetype) D#28
  # DEBUG D#26 => (unsigned int) D#31
  # DEBUG D#25 => D#26 * 2
  # DEBUG D#24 => D#27 + D#25
  # DEBUG D#23 => D#30 + D#24
  # DEBUG D#22 => *D#23
  # DEBUG D#21 => (const uint32) D#22
  # DEBUG pduLength => D#21
  # DEBUG BEGIN_STMT
  # DEBUG D#20 => IPduPtr_1(D)->ComIPduSizeMax
  # DEBUG D#19 => D#22 != D#20
  # DEBUG D#18 => (const uint8) D#19
  # DEBUG checkRequired => D#18
  # DEBUG BEGIN_STMT
  loopStart_59 = IPduPtr_1(D)->ComIPduSignalWithBufferRefNum;
  # DEBUG loopStart => loopStart_59
  # DEBUG BEGIN_STMT
  loopStop_60 = IPduPtr_1(D)->ComIPduSignalW_F_A_NotiRefNum;
  # DEBUG loopStop => loopStop_60
  # DEBUG BEGIN_STMT
  # DEBUG i => loopStart_59
  goto <bb 23>; [100.00%]

  <bb 20> [local count: 955630212]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.661_61 = Com_gConfigPtr;
  _62 = Com_gConfigPtr.661_61->ComRxIPduSignalListRef;
  _64 = (int) i_63;
  _65 = IPduPtr_1(D)->ComIPduSignalRefFirst;
  _66 = (int) _65;
  _67 = _64 + _66;
  _68 = (unsigned int) _67;
  _69 = _68 * 2;
  _70 = _62 + _69;
  _71 = Com_gConfigPtr.661_61 + _70;
  signalId_72 = *_71;
  # DEBUG signalId => signalId_72
  # DEBUG BEGIN_STMT
  _73 = Com_gConfigPtr.661_61->ComRxSignalRef;
  _74 = (unsigned int) signalId_72;
  _75 = _74 * 20;
  _76 = _73 + _75;
  SignalPtr_77 = Com_gConfigPtr.661_61 + _76;
  # DEBUG SignalPtr => SignalPtr_77
  # DEBUG BEGIN_STMT
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD = 0;
  # DEBUG BEGIN_STMT
  # DEBUG D#16 => D#21
  # DEBUG D#17 => D#18
  # DEBUG SignalPtr => SignalPtr_77
  # DEBUG IPduPtr => IPduPtr_1(D)
  # DEBUG passFilter_MASKED_NEW_DIFFERS_MASKED_OLD => &passFilter_MASKED_NEW_DIFFERS_MASKED_OLD
  # DEBUG INLINE_ENTRY Com_EB_CheckRxSignal_Receive_UpdateBitAndDM
  # DEBUG pduLength => D#16
  # DEBUG checkRequired => D#17
  # DEBUG D#15 => D#16
  # DEBUG BEGIN_STMT
  # DEBUG SignalUpdated => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _78 = &MEM[(short unsigned int *)IPduPtr_1(D) + 10B];
  # DEBUG D#13 => IPduPtr_1(D)
  # DEBUG D#14 => D#15
  SignalUpdated_79 = Com_EB_CheckRxSignalUpdateBitAndDM.isra.0 (SignalPtr_77, _78, &passFilter_MASKED_NEW_DIFFERS_MASKED_OLD);
  # DEBUG SignalUpdated => SignalUpdated_79
  # DEBUG BEGIN_STMT
  # DEBUG SignalPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG passFilter_MASKED_NEW_DIFFERS_MASKED_OLD => NULL
  # DEBUG SignalUpdated => NULL
  # DEBUG SignalUpdated => SignalUpdated_79
  # DEBUG BEGIN_STMT
  if (SignalUpdated_79 == 1)
    goto <bb 21>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 21> [local count: 324914272]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.665_80 = Com_gConfigPtr;
  _81 = Com_gConfigPtr.665_80->ComRxSignalExtRef;
  _82 = SignalPtr_77->ComSignalExtRef;
  _83 = (unsigned int) _82;
  _84 = _83 * 14;
  _85 = _81 + _84;
  SignalExtPtr_86 = Com_gConfigPtr.665_80 + _85;
  # DEBUG SignalExtPtr => SignalExtPtr_86
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _87 = SignalExtPtr_86->ComNotification;
  _88 = (int) _87;
  fptr_89 = Com_CbkRxAck_Array[_88];
  # DEBUG fptr => fptr_89
  # DEBUG BEGIN_STMT
  fptr_89 ();

  <bb 22> [local count: 955630212]:
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  i_90 = i_63 + 1;
  # DEBUG i => i_90

  <bb 23> [local count: 1073741812]:
  # i_63 = PHI <loopStart_59(19), i_90(22)>
  # DEBUG i => i_63
  # DEBUG BEGIN_STMT
  if (loopStop_60 > i_63)
    goto <bb 20>; [89.00%]
  else
    goto <bb 24>; [11.00%]

  <bb 24> [local count: 118111599]:
  # DEBUG IPduPtr => NULL
  # DEBUG i => NULL
  # DEBUG loopStart => NULL
  # DEBUG loopStop => NULL
  # DEBUG signalId => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG passFilter_MASKED_NEW_DIFFERS_MASKED_OLD => NULL
  # DEBUG SignalExtPtr => NULL
  # DEBUG fptr => NULL
  # DEBUG SignalUpdated => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#47 => D#104
  # DEBUG IPduPtr => IPduPtr_1(D)
  # DEBUG INLINE_ENTRY Com_EB_HandleRxSignalsDMUBOnly
  # DEBUG PduId => D#47
  # DEBUG D#46 => D#47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  loopStart_40 = IPduPtr_1(D)->ComIPduSignalRefFirst;
  # DEBUG loopStart => loopStart_40
  # DEBUG BEGIN_STMT
  # DEBUG loopStop => loopStart_40
  # DEBUG BEGIN_STMT
  # DEBUG D#45 => Com_gDataMemPtr
  # DEBUG D#44 => Com_gConfigPtr
  # DEBUG D#43 => D#44->ComRxIPduLengthBase
  # DEBUG D#42 => (sizetype) D#43
  # DEBUG D#41 => (unsigned int) D#46
  # DEBUG D#40 => D#41 * 2
  # DEBUG D#39 => D#42 + D#40
  # DEBUG D#38 => D#45 + D#39
  # DEBUG D#37 => *D#38
  # DEBUG D#36 => (const uint32) D#37
  # DEBUG pduLength => D#36
  # DEBUG BEGIN_STMT
  # DEBUG D#35 => IPduPtr_1(D)->ComIPduSizeMax
  # DEBUG D#34 => D#37 != D#35
  # DEBUG D#33 => (const uint8) D#34
  # DEBUG checkRequired => D#33
  # DEBUG BEGIN_STMT
  _41 = IPduPtr_1(D)->ComIPduSignalRefNum;
  loopStop_42 = loopStart_40 + _41;
  # DEBUG loopStop => loopStop_42
  # DEBUG BEGIN_STMT
  _43 = IPduPtr_1(D)->ComIPduSignalW_F_A_NotiRefNum;
  loopStart_44 = loopStart_40 + _43;
  # DEBUG loopStart => loopStart_44
  # DEBUG BEGIN_STMT
  # DEBUG i => loopStart_44
  goto <bb 26>; [100.00%]

  <bb 25> [local count: 955630219]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.670_45 = Com_gConfigPtr;
  _46 = Com_gConfigPtr.670_45->ComRxIPduSignalListRef;
  _48 = (unsigned int) i_47;
  _49 = _48 * 2;
  _50 = _46 + _49;
  _51 = Com_gConfigPtr.670_45 + _50;
  signalId_52 = *_51;
  # DEBUG signalId => signalId_52
  # DEBUG BEGIN_STMT
  _53 = Com_gConfigPtr.670_45->ComRxSignalRef;
  _54 = (unsigned int) signalId_52;
  _55 = _54 * 20;
  _56 = _53 + _55;
  SignalPtr_57 = Com_gConfigPtr.670_45 + _56;
  # DEBUG SignalPtr => SignalPtr_57
  # DEBUG BEGIN_STMT
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD = 0;
  # DEBUG BEGIN_STMT
  # DEBUG D#16 => D#36
  # DEBUG D#17 => D#33
  # DEBUG SignalPtr => SignalPtr_57
  # DEBUG IPduPtr => IPduPtr_1(D)
  # DEBUG passFilter_MASKED_NEW_DIFFERS_MASKED_OLD => &passFilter_MASKED_NEW_DIFFERS_MASKED_OLD
  # DEBUG INLINE_ENTRY Com_EB_CheckRxSignal_Receive_UpdateBitAndDM
  # DEBUG pduLength => D#16
  # DEBUG checkRequired => D#17
  # DEBUG D#15 => D#16
  # DEBUG BEGIN_STMT
  # DEBUG SignalUpdated => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _164 = &MEM[(short unsigned int *)IPduPtr_1(D) + 10B];
  # DEBUG D#13 => IPduPtr_1(D)
  # DEBUG D#14 => D#15
  SignalUpdated_165 = Com_EB_CheckRxSignalUpdateBitAndDM.isra.0 (SignalPtr_57, _164, &passFilter_MASKED_NEW_DIFFERS_MASKED_OLD);
  # DEBUG SignalUpdated => SignalUpdated_165
  # DEBUG BEGIN_STMT
  _265 = SignalUpdated_165;
  # DEBUG SignalPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG passFilter_MASKED_NEW_DIFFERS_MASKED_OLD => NULL
  # DEBUG SignalUpdated => NULL
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  i_58 = i_47 + 1;
  # DEBUG i => i_58

  <bb 26> [local count: 1073741819]:
  # i_47 = PHI <loopStart_44(24), i_58(25)>
  # DEBUG i => i_47
  # DEBUG BEGIN_STMT
  if (loopStop_42 > i_47)
    goto <bb 25>; [89.00%]
  else
    goto <bb 39>; [11.00%]

  <bb 27> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.677_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.677_9->ComRxIPduSignalGroupListRef;
  _12 = (int) i_11;
  _13 = IPduPtr_1(D)->ComIPduSignalGroupRefFirst;
  _14 = (int) _13;
  _15 = _12 + _14;
  _16 = (unsigned int) _15;
  _17 = _16 * 2;
  _18 = _10 + _17;
  _19 = Com_gConfigPtr.677_9 + _18;
  signalGId_20 = *_19;
  # DEBUG signalGId => signalGId_20
  # DEBUG BEGIN_STMT
  _21 = Com_gConfigPtr.677_9->ComRxSignalGroupRef;
  _22 = (unsigned int) signalGId_20;
  _23 = _22 * 10;
  _24 = _21 + _23;
  SignalGPtr_25 = Com_gConfigPtr.677_9 + _24;
  # DEBUG SignalGPtr => SignalGPtr_25
  # DEBUG BEGIN_STMT
  # DEBUG D#51 => D#52
  # DEBUG SignalGPtr => SignalGPtr_25
  # DEBUG IPduPtr => IPduPtr_1(D)
  # DEBUG INLINE_ENTRY Com_EB_CheckRxSignalGroup_Receive_UpdateBitAndDM
  # DEBUG pduLength => D#51
  # DEBUG D#50 => D#51
  # DEBUG BEGIN_STMT
  # DEBUG SignalUpdated => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = &MEM[(short unsigned int *)IPduPtr_1(D) + 10B];
  # DEBUG D#48 => IPduPtr_1(D)
  # DEBUG D#49 => D#50
  # DEBUG SignalGPtr => SignalGPtr_25
  # DEBUG INLINE_ENTRY Com_EB_CheckRxSignalGoupUpdateBitAndDM
  # DEBUG IPduPtr => D#48
  # DEBUG pduLength => D#49
  # DEBUG BEGIN_STMT
  # DEBUG SignalUpdated => 1
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.684_166 = Com_gConfigPtr;
  _167 = Com_gConfigPtr.684_166->ComRxSignalExtRef;
  _168 = SignalGPtr_25->ComSignalExtRef;
  _169 = (unsigned int) _168;
  _170 = _169 * 14;
  _171 = _167 + _170;
  SignalExtPtr_172 = Com_gConfigPtr.684_166 + _171;
  # DEBUG SignalExtPtr => SignalExtPtr_172
  # DEBUG BEGIN_STMT
  _173 = SignalExtPtr_172->ComRxSignalExtFlags;
  _174 = _173 >> 1;
  _175 = _174 & 1;
  if (_175 != 0)
    goto <bb 28>; [50.00%]
  else
    goto <bb 35>; [50.00%]

  <bb 28> [local count: 477815112]:
  # DEBUG BEGIN_STMT
  _176 = SignalExtPtr_172->ComUpdateBitPositionInBit;
  _177 = _176 >> 3;
  UpdateBitByte_178 = (const uint32) _177;
  # DEBUG UpdateBitByte => UpdateBitByte_178
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.686_179 = Com_gDataMemPtr;
  _180 = *_26;
  _181 = (long unsigned int) _180;
  _182 = UpdateBitByte_178 + _181;
  _183 = Com_gDataMemPtr.686_179 + _182;
  _184 = *_183;
  _185 = (int) _184;
  _186 = _176 & 7;
  _187 = (unsigned int) _186;
  _188 = _185 >> _187;
  _189 = (unsigned char) _188;
  SignalUpdated_190 = _189 & 1;
  # DEBUG SignalUpdated => SignalUpdated_190
  # DEBUG BEGIN_STMT
  if (SignalUpdated_190 != 0)
    goto <bb 29>; [50.00%]
  else
    goto <bb 35>; [50.00%]

  <bb 29> [local count: 238907556]:
  # DEBUG BEGIN_STMT
  _191 = _173 >> 2;
  _192 = _191 & 1;
  if (_192 != 0)
    goto <bb 30>; [33.00%]
  else
    goto <bb 35>; [67.00%]

  <bb 30> [local count: 78839493]:
  # DEBUG BEGIN_STMT
  _193 = Com_gConfigPtr.684_166->ComRxDMInvSignalGroupStatusQueueBase;
  _194 = (unsigned int) _193;
  _195 = SignalExtPtr_172->RxSigDMQueueRef;
  _196 = _195 >> 2;
  _197 = (unsigned int) _196;
  _198 = _194 + _197;
  RxDMFlagPtr_199 = Com_gDataMemPtr.686_179 + _198;
  # DEBUG RxDMFlagPtr => RxDMFlagPtr_199
  # DEBUG BEGIN_STMT
  _200 = (unsigned char) _195;
  _201 = _200 & 3;
  _202 = _201 * 2;
  RunningFlag_203 = _202 + 1;
  # DEBUG RunningFlag => RunningFlag_203
  # DEBUG BEGIN_STMT
  # DEBUG ToutFlag => _202
  # DEBUG BEGIN_STMT
  TimeOutOffset_204 = SignalExtPtr_172->ComRxTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_204
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _205 = *RxDMFlagPtr_199;
  _206 = (int) RunningFlag_203;
  _207 = 1 << _206;
  _208 = (unsigned char) _207;
  _209 = _205 & _208;
  if (_209 != 0)
    goto <bb 31>; [33.00%]
  else
    goto <bb 32>; [67.00%]

  <bb 31> [local count: 26017033]:
  # DEBUG BEGIN_STMT
  _210 = (int) _202;
  _211 = 1 << _210;
  _212 = (unsigned char) _211;
  _213 = ~_212;
  _214 = _205 & _213;
  *RxDMFlagPtr_199 = _214;
  # DEBUG BEGIN_STMT
  _215 = MEM[(short unsigned int *)SignalGPtr_25 + 8B];
  # DEBUG D#2 => SignalGPtr_25
  Com_EB_RxDMSignalGroupQueue.isra.0 (_215, TimeOutOffset_204);
  goto <bb 34>; [100.00%]

  <bb 32> [local count: 52822461]:
  # DEBUG BEGIN_STMT
  ComRxPduId_216 = SignalGPtr_25->ComIPduRef;
  # DEBUG ComRxPduId => ComRxPduId_216
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.690_217 = Com_gConfigPtr;
  _218 = Com_gConfigPtr.690_217->ComRxIPduStatusBase;
  _219 = (int) _218;
  _220 = (int) ComRxPduId_216;
  _221 = _219 + _220;
  _222 = (sizetype) _221;
  IPduFlagBytePtr_223 = Com_gDataMemPtr.686_179 + _222;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_223
  # DEBUG BEGIN_STMT
  _224 = *IPduFlagBytePtr_223;
  _225 = _224 & 16;
  if (_225 != 0)
    goto <bb 33>; [33.00%]
  else
    goto <bb 34>; [67.00%]

  <bb 33> [local count: 17431412]:
  # DEBUG BEGIN_STMT
  _226 = (int) _202;
  _227 = 1 << _226;
  _228 = (unsigned char) _227;
  _229 = ~_228;
  _230 = _205 & _229;
  # DEBUG BEGIN_STMT
  _231 = 1 << _206;
  _232 = (unsigned char) _231;
  _233 = _230 | _232;
  *RxDMFlagPtr_199 = _233;
  # DEBUG BEGIN_STMT
  _234 = MEM[(short unsigned int *)SignalGPtr_25 + 8B];
  # DEBUG D#2 => SignalGPtr_25
  Com_EB_RxDMSignalGroupQueue.isra.0 (_234, TimeOutOffset_204);

  <bb 34> [local count: 78839494]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 35> [local count: 955630225]:
  # SignalUpdated_235 = PHI <1(27), SignalUpdated_190(28), 1(29), 1(34)>
  # DEBUG SignalUpdated => SignalUpdated_235
  # DEBUG BEGIN_STMT
  _261 = SignalUpdated_235;
  # DEBUG SignalGPtr => NULL
  # DEBUG SignalUpdated => NULL
  # DEBUG SignalExtPtr => NULL
  # DEBUG UpdateBitByte => NULL
  # DEBUG RxDMFlagPtr => NULL
  # DEBUG RunningFlag => NULL
  # DEBUG TimeOutOffset => NULL
  # DEBUG ComRxPduId => NULL
  # DEBUG IPduFlagBytePtr => NULL
  SignalUpdated_27 = _261;
  # DEBUG SignalUpdated => SignalUpdated_27
  # DEBUG BEGIN_STMT
  # DEBUG SignalGPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG SignalUpdated => NULL
  # DEBUG SignalUpdated => SignalUpdated_27
  # DEBUG BEGIN_STMT
  if (SignalUpdated_27 == 1)
    goto <bb 36>; [34.00%]
  else
    goto <bb 38>; [66.00%]

  <bb 36> [local count: 324914276]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.681_28 = Com_gConfigPtr;
  _29 = Com_gConfigPtr.681_28->ComRxSignalExtRef;
  _30 = SignalGPtr_25->ComSignalExtRef;
  _31 = (unsigned int) _30;
  _32 = _31 * 14;
  _33 = _29 + _32;
  SignalExtPtr_34 = Com_gConfigPtr.681_28 + _33;
  # DEBUG SignalExtPtr => SignalExtPtr_34
  # DEBUG BEGIN_STMT
  _35 = SignalExtPtr_34->ComNotification;
  if (_35 != 65535)
    goto <bb 37>; [66.00%]
  else
    goto <bb 38>; [34.00%]

  <bb 37> [local count: 214443422]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = (int) _35;
  fptr_37 = Com_CbkRxAck_Array[_36];
  # DEBUG fptr => fptr_37
  # DEBUG BEGIN_STMT
  fptr_37 ();

  <bb 38> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  i_38 = i_11 + 1;
  # DEBUG i => i_38

  <bb 39> [local count: 1073741824]:
  # i_11 = PHI <0(26), i_38(38)>
  # DEBUG IPduPtr => NULL
  # DEBUG i => NULL
  # DEBUG loopStart => NULL
  # DEBUG loopStop => NULL
  # DEBUG signalId => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG passFilter_MASKED_NEW_DIFFERS_MASKED_OLD => NULL
  # DEBUG D#63 => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG D#62 => NULL
  # DEBUG D#61 => NULL
  # DEBUG D#60 => NULL
  # DEBUG D#59 => NULL
  # DEBUG D#58 => NULL
  # DEBUG D#57 => NULL
  # DEBUG D#56 => NULL
  # DEBUG D#55 => NULL
  # DEBUG D#54 => NULL
  # DEBUG D#53 => NULL
  # DEBUG D#52 => NULL
  # DEBUG pduLength => NULL
  # DEBUG i => NULL
  # DEBUG i => i_11
  # DEBUG BEGIN_STMT
  _39 = IPduPtr_1(D)->ComIPduSignalGroupRefNum;
  if (i_11 < _39)
    goto <bb 27>; [89.00%]
  else
    goto <bb 40>; [11.00%]

  <bb 40> [local count: 118111601]:
  # DEBUG IPduPtr => NULL
  # DEBUG i => NULL
  # DEBUG signalGId => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG SignalExtPtr => NULL
  # DEBUG fptr => NULL
  # DEBUG SignalUpdated => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_Write_SignalExt (Com_EB_Write_SignalExt, funcdef_no=195, decl_uid=6167, cgraph_uid=196, symbol_order=200)


Symbols to be put in SSA form
{ D.12463 D.15248 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 36
Number of blocks to update: 35 ( 97%)


Removing basic block 3
Merging blocks 35 and 24
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;; 2 succs { 3 31 }
;; 3 succs { 13 4 9 10 8 6 7 5 12 11 }
;; 4 succs { 13 }
;; 5 succs { 13 }
;; 6 succs { 13 }
;; 7 succs { 13 }
;; 8 succs { 13 }
;; 9 succs { 13 }
;; 10 succs { 13 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 31 }
;; 15 succs { 16 31 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 24 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 25 31 }
;; 25 succs { 26 27 }
;; 26 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 30 29 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 1 }
Com_EB_Write_SignalExt (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  boolean TMSResult;
  boolean D.15248;
  uint8 PduStatusByte;
  boolean newTM;
  const uint8 SignalTMSFlag;
  boolean CurrentTM;
  boolean OldFilterResult;
  uint8 * const PduTMSFlagPtr;
  const struct ComTxSignalGroupType * const SignalGPtr;
  const boolean TMSResult;
  uint8 * const PduStatusFlagsPtr;
  const uint16 index;
  void (*<T69f>) (const void *, uint8 *, const struct ComTxSignalType *, struct Com_EB_WriteIntDataType *) fptr;
  const struct ComTxIPduType * const IPduPtr;
  const ComIPduRefType PduId;
  const struct Com_ConfigType * Com_gConfigPtr.144_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  short unsigned int _6;
  int _7;
  uint8 * Com_gDataMemPtr.146_8;
  const struct Com_ConfigType * Com_gConfigPtr.147_9;
  short unsigned int _10;
  int _11;
  short unsigned int _12;
  int _13;
  int _14;
  sizetype _15;
  unsigned char _16;
  short unsigned int _17;
  const struct Com_ConfigType * Com_gConfigPtr.148_18;
  long unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  short unsigned int _23;
  unsigned int _24;
  short unsigned int _25;
  short unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned char _29;
  unsigned char _30;
  int _31;
  int _32;
  int _33;
  unsigned char _34;
  long unsigned int _35;
  long unsigned int _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  short unsigned int _44;
  const uint8 iftmp.156_45;
  const uint8 iftmp.156_75;
  const uint8 iftmp.156_76;
  short unsigned int _81;
  short unsigned int _83;
  short unsigned int _84;
  unsigned char _85;
  const struct ComFilterConfType * _86;
  const struct ComFilterConfType * _88;
  const struct ComFilterConfType * _90;
  const struct ComFilterConfType * _92;
  const struct ComFilterConfType * _94;
  const struct ComFilterConfType * _96;
  const struct ComFilterConfType * _98;
  const struct ComFilterConfType * _100;
  const struct ComFilterConfType * _102;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  PduId_52 = Com_EB_WritePropPtr_51(D)->ComIPduRef;
  # DEBUG PduId => PduId_52
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.144_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.144_1->ComTxIPduRef;
  _3 = (unsigned int) PduId_52;
  _4 = _3 * 64;
  _5 = _2 + _4;
  IPduPtr_53 = Com_gConfigPtr.144_1 + _5;
  # DEBUG IPduPtr => IPduPtr_53
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = Com_EB_WritePropPtr_51(D)->ComTxSignalFlags;
  index_54 = _6 & 255;
  # DEBUG index => index_54
  # DEBUG BEGIN_STMT
  _7 = (int) index_54;
  fptr_55 = Com_WriteFuncs[_7];
  # DEBUG fptr => fptr_55
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_55 (SignalDataPtr_56(D), dataPtr_57(D), Com_EB_WritePropPtr_51(D), IntDataPtr_58(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.146_8 = Com_gDataMemPtr;
  Com_gConfigPtr.147_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.147_9->ComTxIPduStatusBase;
  _11 = (int) _10;
  _12 = Com_EB_WritePropPtr_51(D)->ComIPduRef;
  _13 = (int) _12;
  _14 = _11 + _13;
  _15 = (sizetype) _14;
  PduStatusFlagsPtr_60 = Com_gDataMemPtr.146_8 + _15;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_60
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_51(D)->ComSignalBase.ComFilterConf.ComFilterType;
  if (_16 > 1)
    goto <bb 3>; [41.48%]
  else
    goto <bb 31>; [58.52%]

  <bb 3> [local count: 445388108]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalPtr => Com_EB_WritePropPtr_51(D)
  # DEBUG SignalDataPtr => SignalDataPtr_56(D)
  # DEBUG INLINE_ENTRY Com_EB_SendSignal_Filter
  # DEBUG BEGIN_STMT
  # DEBUG TMSResult => 0
  # DEBUG BEGIN_STMT
  _83 = Com_EB_WritePropPtr_51(D)->ComTxSignalFlags;
  _84 = _83 >> 12;
  _85 = (unsigned char) _84;
  # DEBUG SignalType => _85
  # DEBUG BEGIN_STMT
  # DEBUG D#86 => &Com_EB_WritePropPtr_51(D)->ComSignalBase
  # DEBUG Com_EB_ReadPropPtr => D#86
  # DEBUG BEGIN_STMT
  switch (_85) <default: <L35> [10.00%], case 0: <L26> [10.00%], case 1: <L31> [10.00%], case 2: <L32> [10.00%], case 3: <L30> [10.00%], case 4: <L28> [10.00%], case 5: <L29> [10.00%], case 6: <L27> [10.00%], case 9: <L34> [10.00%], case 10: <L33> [10.00%]>

  <bb 4> [local count: 44538811]:
<L26>:
  # DEBUG BEGIN_STMT
  _86 = &MEM[(const struct ComSignalBaseType *)Com_EB_WritePropPtr_51(D)].ComFilterConf;
  TMSResult_87 = Com_EB_FilterBoolean (_86, SignalDataPtr_56(D));
  # DEBUG TMSResult => TMSResult_87
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 5> [local count: 44538811]:
<L27>:
  # DEBUG BEGIN_STMT
  _88 = &MEM[(const struct ComSignalBaseType *)Com_EB_WritePropPtr_51(D)].ComFilterConf;
  TMSResult_89 = Com_EB_FilterUint8 (_88, SignalDataPtr_56(D));
  # DEBUG TMSResult => TMSResult_89
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 6> [local count: 44538811]:
<L28>:
  # DEBUG BEGIN_STMT
  _90 = &MEM[(const struct ComSignalBaseType *)Com_EB_WritePropPtr_51(D)].ComFilterConf;
  TMSResult_91 = Com_EB_FilterUint16 (_90, SignalDataPtr_56(D));
  # DEBUG TMSResult => TMSResult_91
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 7> [local count: 44538811]:
<L29>:
  # DEBUG BEGIN_STMT
  _92 = &MEM[(const struct ComSignalBaseType *)Com_EB_WritePropPtr_51(D)].ComFilterConf;
  TMSResult_93 = Com_EB_FilterUint32 (_92, SignalDataPtr_56(D));
  # DEBUG TMSResult => TMSResult_93
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 8> [local count: 44538811]:
<L30>:
  # DEBUG BEGIN_STMT
  _94 = &MEM[(const struct ComSignalBaseType *)Com_EB_WritePropPtr_51(D)].ComFilterConf;
  TMSResult_95 = Com_EB_FilterSint8 (_94, SignalDataPtr_56(D));
  # DEBUG TMSResult => TMSResult_95
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 9> [local count: 44538811]:
<L31>:
  # DEBUG BEGIN_STMT
  _96 = &MEM[(const struct ComSignalBaseType *)Com_EB_WritePropPtr_51(D)].ComFilterConf;
  TMSResult_97 = Com_EB_FilterSint16 (_96, SignalDataPtr_56(D));
  # DEBUG TMSResult => TMSResult_97
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 10> [local count: 44538811]:
<L32>:
  # DEBUG BEGIN_STMT
  _98 = &MEM[(const struct ComSignalBaseType *)Com_EB_WritePropPtr_51(D)].ComFilterConf;
  TMSResult_99 = Com_EB_FilterSint32 (_98, SignalDataPtr_56(D));
  # DEBUG TMSResult => TMSResult_99
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 11> [local count: 44538811]:
<L33>:
  # DEBUG BEGIN_STMT
  _100 = &MEM[(const struct ComSignalBaseType *)Com_EB_WritePropPtr_51(D)].ComFilterConf;
  TMSResult_101 = Com_EB_FilterSint64 (_100, SignalDataPtr_56(D));
  # DEBUG TMSResult => TMSResult_101
  # DEBUG BEGIN_STMT
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 44538811]:
<L34>:
  # DEBUG BEGIN_STMT
  _102 = &MEM[(const struct ComSignalBaseType *)Com_EB_WritePropPtr_51(D)].ComFilterConf;
  TMSResult_103 = Com_EB_FilterUint64 (_102, SignalDataPtr_56(D));
  # DEBUG TMSResult => TMSResult_103
  # DEBUG BEGIN_STMT

  <bb 13> [local count: 445388108]:
  # TMSResult_104 = PHI <0(3), TMSResult_87(4), TMSResult_89(5), TMSResult_91(6), TMSResult_93(7), TMSResult_95(8), TMSResult_97(9), TMSResult_99(10), TMSResult_101(11), TMSResult_103(12)>
<L35>:
  # DEBUG TMSResult => TMSResult_104
  # DEBUG BEGIN_STMT
  _115 = TMSResult_104;
  # DEBUG SignalPtr => NULL
  # DEBUG SignalDataPtr => NULL
  # DEBUG TMSResult => NULL
  TMSResult_62 = _115;
  # DEBUG TMSResult => TMSResult_62
  # DEBUG BEGIN_STMT
  _17 = Com_EB_WritePropPtr_51(D)->ComSignalBase.ComSignalGroupRef;
  if (_17 != 65535)
    goto <bb 14>; [48.88%]
  else
    goto <bb 15>; [51.12%]

  <bb 14> [local count: 217705707]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalGId => _17
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.148_18 = Com_gConfigPtr;
  _19 = Com_gConfigPtr.148_18->ComTxSignalGroupRef;
  _20 = (unsigned int) _17;
  _21 = _20 * 32;
  _22 = _19 + _21;
  SignalGPtr_78 = Com_gConfigPtr.148_18 + _22;
  # DEBUG SignalGPtr => SignalGPtr_78
  # DEBUG BEGIN_STMT
  _81 = MEM[(short unsigned int *)SignalGPtr_78 + 24B];
  # DEBUG D#89 => SignalGPtr_78
  Com_EB_CalculateGroupSignalTM.isra.0 (Com_EB_WritePropPtr_51(D), _81, TMSResult_62);
  goto <bb 31>; [100.00%]

  <bb 15> [local count: 227682401]:
  # DEBUG BEGIN_STMT
  _23 = IPduPtr_53->ComIPduTMSFlagsRef;
  _24 = (unsigned int) _23;
  _25 = Com_EB_WritePropPtr_51(D)->ComPositionOfTMSFlag;
  _26 = _25 >> 3;
  _27 = (unsigned int) _26;
  _28 = _24 + _27;
  PduTMSFlagPtr_63 = Com_gDataMemPtr.146_8 + _28;
  # DEBUG PduTMSFlagPtr => PduTMSFlagPtr_63
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = (unsigned char) _25;
  SignalTMSFlag_64 = _29 & 7;
  # DEBUG SignalTMSFlag => SignalTMSFlag_64
  # DEBUG BEGIN_STMT
  _30 = *PduTMSFlagPtr_63;
  _31 = (int) _30;
  _32 = (int) SignalTMSFlag_64;
  _33 = _31 >> _32;
  _34 = (unsigned char) _33;
  OldFilterResult_65 = _34 & 1;
  # DEBUG OldFilterResult => OldFilterResult_65
  # DEBUG BEGIN_STMT
  if (TMSResult_62 != OldFilterResult_65)
    goto <bb 16>; [66.00%]
  else
    goto <bb 31>; [34.00%]

  <bb 16> [local count: 150270385]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntDataPtr_58(D)->TMSChanged = 1;
  # DEBUG BEGIN_STMT
  if (TMSResult_62 == 1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 18>; [66.00%]

  <bb 17> [local count: 51091931]:
  # DEBUG BEGIN_STMT
  _35 = (long unsigned int) SignalTMSFlag_64;
  TS_AtomicSetBit_8 (PduTMSFlagPtr_63, _35);
  goto <bb 19>; [100.00%]

  <bb 18> [local count: 99178454]:
  # DEBUG BEGIN_STMT
  _36 = (long unsigned int) SignalTMSFlag_64;
  TS_AtomicClearBit_8 (PduTMSFlagPtr_63, _36);

  <bb 19> [local count: 150270385]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  newTM_71 = Com_EB_CalculateTM (IPduPtr_53);
  # DEBUG newTM => newTM_71
  # DEBUG BEGIN_STMT
  _37 = *PduStatusFlagsPtr_60;
  # DEBUG PduStatusByte => _37
  # DEBUG BEGIN_STMT
  _38 = _37 >> 6;
  CurrentTM_72 = _38 & 1;
  # DEBUG CurrentTM => CurrentTM_72
  # DEBUG BEGIN_STMT
  if (newTM_71 != CurrentTM_72)
    goto <bb 20>; [66.00%]
  else
    goto <bb 24>; [34.00%]

  <bb 20> [local count: 99178454]:
  # DEBUG BEGIN_STMT
  if (newTM_71 == 1)
    goto <bb 21>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 21> [local count: 33720674]:
  # DEBUG BEGIN_STMT
  _39 = _37 | 64;
  # DEBUG PduStatusByte => _39
  goto <bb 23>; [100.00%]

  <bb 22> [local count: 65457780]:
  # DEBUG BEGIN_STMT
  _40 = _37 & 191;
  # DEBUG PduStatusByte => _40

  <bb 23> [local count: 99178454]:
  # PduStatusByte_70 = PHI <_39(21), _40(22)>
  # DEBUG PduStatusByte => PduStatusByte_70
  # DEBUG BEGIN_STMT
  _41 = PduStatusByte_70 | 128;
  # DEBUG PduStatusByte => _41
  # DEBUG BEGIN_STMT
  *PduStatusFlagsPtr_60 = _41;

  <bb 24> [local count: 150270385]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (newTM_71 != CurrentTM_72)
    goto <bb 25>; [66.00%]
  else
    goto <bb 31>; [34.00%]

  <bb 25> [local count: 99178454]:
  # DEBUG BEGIN_STMT
  if (newTM_71 == 1)
    goto <bb 26>; [34.00%]
  else
    goto <bb 27>; [66.00%]

  <bb 26> [local count: 33720674]:
  _42 = IPduPtr_53->ComTxModeModes;
  iftmp.156_76 = _42 & 15;
  goto <bb 28>; [100.00%]

  <bb 27> [local count: 65457780]:
  _43 = IPduPtr_53->ComTxModeModes;
  iftmp.156_75 = _43 >> 4;

  <bb 28> [local count: 99178454]:
  # iftmp.156_45 = PHI <iftmp.156_76(26), iftmp.156_75(27)>
  # DEBUG AktTM => iftmp.156_45
  # DEBUG BEGIN_STMT
  if (iftmp.156_45 == 2)
    goto <bb 30>; [34.00%]
  else
    goto <bb 29>; [66.00%]

  <bb 29> [local count: 65457780]:
  if (iftmp.156_45 == 5)
    goto <bb 30>; [34.00%]
  else
    goto <bb 31>; [66.00%]

  <bb 30> [local count: 55976319]:
  # DEBUG BEGIN_STMT
  IntDataPtr_58(D)->trigger = 1;

  <bb 31> [local count: 1073741824]:
  # DEBUG PduStatusByte => NULL
  # DEBUG BEGIN_STMT
  _44 = Com_EB_WritePropPtr_51(D)->ComSignalBase.ComSignalGroupRef;
  if (_44 == 65535)
    goto <bb 32>; [20.24%]
  else
    goto <bb 33>; [79.76%]

  <bb 32> [local count: 217325345]:
  # DEBUG BEGIN_STMT
  Com_EB_SendSignal_Transmit (Com_EB_WritePropPtr_51(D), IntDataPtr_58(D));

  <bb 33> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_TxDMDummyCbk (Com_EB_TxDMDummyCbk, funcdef_no=12, decl_uid=6113, cgraph_uid=13, symbol_order=15)


Saving body of Com_EB_TxDMDummyCbk for later reuse
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1

Symbols to be put in SSA form
{ D.15266 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 4
Number of blocks to update: 3 ( 75%)


Com_EB_TxDMDummyCbk ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_EB_CbkTxPrepDummyCbk (Com_EB_CbkTxPrepDummyCbk, funcdef_no=357, decl_uid=6115, cgraph_uid=14, symbol_order=16)

Merging blocks 2 and 4
Removing basic block 5
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Com_EB_CbkTxPrepDummyCbk ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_IsValidConfig (Com_IsValidConfig, funcdef_no=14, decl_uid=6040, cgraph_uid=15, symbol_order=17)


Symbols to be put in SSA form
{ D.12486 D.15275 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


Removing basic block 5
Removing basic block 8
Merging blocks 12 and 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 9 }
;; 3 succs { 4 9 }
;; 4 succs { 5 9 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Com_IsValidConfig (const void * ConfigPtr)
{
  Std_ReturnType retval;
  Std_ReturnType D.15275;
  Std_ReturnType retval;
  long unsigned int _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _11;
  long unsigned int Com_LcfgSignature.0_12;
  long unsigned int _13;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ConfigPtr_6(D) != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 9>; [46.53%]

  <bb 3> [local count: 574129754]:
  # DEBUG BEGIN_STMT
  # DEBUG TmpCfgPtr => ConfigPtr_6(D)
  # DEBUG BEGIN_STMT
  _1 = MEM[(const struct Com_ConfigType *)ConfigPtr_6(D)].ComPlatformSignature;
  _2 = TS_PlatformSigIsValid (_1);
  if (_2 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 4> [local count: 195204116]:
  # DEBUG BEGIN_STMT
  _3 = MEM[(const struct Com_ConfigType *)ConfigPtr_6(D)].ComCfgSignature;
  if (_3 == 1285855334)
    goto <bb 5>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 5> [local count: 66369399]:
  # DEBUG ConfigPtr => ConfigPtr_6(D)
  # DEBUG INLINE_ENTRY Com_IsValidConfig
  # DEBUG BEGIN_STMT
  _11 = MEM[(const struct Com_ConfigType *)ConfigPtr_6(D)].ComLcfgSignature;
  Com_LcfgSignature.0_12 = Com_LcfgSignature;
  if (_11 == Com_LcfgSignature.0_12)
    goto <bb 6>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 6> [local count: 22565596]:
  # DEBUG BEGIN_STMT
  _13 = MEM[(const struct Com_ConfigType *)ConfigPtr_6(D)].ComPublicInfoSignature;
  if (_13 == 698836561)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 7672303]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 0

  <bb 8> [local count: 66369399]:
  # retval_14 = PHI <1(5), 1(6), 0(7)>
  # DEBUG retval => retval_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = retval_14;
  # DEBUG ConfigPtr => NULL
  # DEBUG retval => NULL
  # DEBUG TmpCfgPtr => NULL
  retval_10 = _15;

  <bb 9> [local count: 1073741823]:
  # retval_4 = PHI <1(2), 1(3), 1(4), retval_10(8)>
  # DEBUG retval => retval_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return retval_4;

}



;; Function Com_GetRxIPduBuffer (Com_GetRxIPduBuffer, funcdef_no=160, decl_uid=6103, cgraph_uid=161, symbol_order=165)

Com_GetRxIPduBuffer (PduIdType ComRxPduId, struct PduInfoType * PduInfoPtr)
{
  const struct ComRxIPduType * IPduPtr;
  uint8 RetVal;
  unsigned char Com_InitStatus.137_1;
  const struct Com_ConfigType * Com_gConfigPtr.138_2;
  short unsigned int _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  uint8 * Com_gDataMemPtr.141_8;
  short unsigned int _9;
  sizetype _10;
  uint8 * _11;
  short unsigned int _12;
  sizetype _13;
  unsigned int _14;
  ComIPduSizeType * _15;
  short unsigned int _16;
  sizetype _19;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.137_1 = Com_InitStatus;
  if (Com_InitStatus.137_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 254, 2);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  if (PduInfoPtr_21(D) == 0B)
    goto <bb 5>; [17.43%]
  else
    goto <bb 6>; [82.57%]

  <bb 5> [local count: 125392644]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 254, 3);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 594014379]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.138_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.138_2->ComRxIPduArraySize;
  if (_3 <= ComRxPduId_22(D))
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 196024745]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 254, 1);
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 397989633]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = Com_gConfigPtr.138_2->ComRxIPduRef;
  _5 = (unsigned int) ComRxPduId_22(D);
  _6 = _5 * 48;
  _7 = _4 + _6;
  IPduPtr_23 = Com_gConfigPtr.138_2 + _7;
  # DEBUG IPduPtr => IPduPtr_23
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.141_8 = Com_gDataMemPtr;
  _9 = IPduPtr_23->ComIPduValueRef;
  _10 = (sizetype) _9;
  _11 = Com_gDataMemPtr.141_8 + _10;
  PduInfoPtr_21(D)->SduDataPtr = _11;
  # DEBUG BEGIN_STMT
  _12 = Com_gConfigPtr.138_2->ComRxIPduLengthBase;
  _13 = (sizetype) _12;
  _14 = _5 * 2;
  _19 = _13 + _14;
  _15 = Com_gDataMemPtr.141_8 + _19;
  _16 = *_15;
  PduInfoPtr_21(D)->SduLength = _16;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 9> [local count: 1073741824]:
  # RetVal_17 = PHI <1(3), 1(5), 1(7), 0(8)>
  # DEBUG RetVal => RetVal_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_17;

}



;; Function Com_IpduGroupControl (Com_IpduGroupControl, funcdef_no=209, decl_uid=6047, cgraph_uid=210, symbol_order=214)


Symbols to be put in SSA form
{ D.12488 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 44
Number of blocks to update: 43 ( 98%)


Merging blocks 6 and 9
Removing basic block 8
Removing basic block 17
Merging blocks 18 and 23
Removing basic block 21
Removing basic block 22
Removing basic block 24
Removing basic block 25
Removing basic block 27
Removing basic block 33
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 7 30 19 29 27 28 25 26 24 20 23 21 22 14 13 11 12 9 10 8 15 18 16 17
;;
;; Loop 3
;;  header 23, latch 22
;;  depth 2, outer 1
;;  nodes: 23 22
;;
;; Loop 2
;;  header 9, latch 13
;;  depth 2, outer 1
;;  nodes: 9 13 11 12 10
;; 2 succs { 3 4 }
;; 3 succs { 33 }
;; 4 succs { 5 6 }
;; 5 succs { 33 }
;; 6 succs { 32 }
;; 7 succs { 8 31 }
;; 8 succs { 9 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 9 14 }
;; 14 succs { 15 20 }
;; 15 succs { 16 19 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 30 }
;; 20 succs { 21 24 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 22 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 7 33 }
;; 33 succs { 1 }
Com_IpduGroupControl (uint8 * ipduGroupVector, boolean Initialize)
{
  uint8 BitRes;
  Com_CbkTxTOutIdxType j;
  const ComIPduRefType txPduCount;
  ComIPduRefType IPduId;
  const struct ComTxIPduType * const IPduPtr;
  boolean toBeActivated;
  uint16 iPduGroupVectorByte;
  unsigned char Com_InitStatus.315_1;
  const struct Com_ConfigType * Com_gConfigPtr.417_10;
  const struct Com_ConfigType * Com_gConfigPtr.418_12;
  long unsigned int _13;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  short unsigned int _19;
  long unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  sizetype _23;
  sizetype _26;
  sizetype _27;
  const ComIPduGroupMaskType * _28;
  unsigned char _29;
  const uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char iftmp.424_35;
  unsigned char iftmp.424_37;
  unsigned char iftmp.423_38;
  uint8 * Com_gDataMemPtr.427_39;
  const struct Com_ConfigType * Com_gConfigPtr.428_40;
  short unsigned int _41;
  int _42;
  int _43;
  int _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  uint8 * Com_gDataMemPtr.481_49;
  const struct Com_ConfigType * Com_gConfigPtr.482_50;
  short unsigned int _51;
  int _52;
  int _53;
  int _54;
  sizetype _55;
  uint8 * _56;
  const struct Com_ConfigType * Com_gConfigPtr.484_57;
  short unsigned int _58;
  int _59;
  int _60;
  sizetype _61;
  uint8 * _62;
  const struct Com_ConfigType * Com_gConfigPtr.486_63;
  short unsigned int _64;
  int _65;
  int _66;
  sizetype _67;
  uint8 * _68;
  unsigned char _69;
  unsigned char _70;
  const struct Com_ConfigType * Com_gConfigPtr.489_72;
  long unsigned int _73;
  unsigned int _75;
  unsigned int _76;
  sizetype _77;
  const Com_CbkTxTOutIdxType * _78;
  short unsigned int _79;
  int _80;
  void (*<T600>) (void) _81;
  int _83;
  short unsigned int _84;
  int _85;
  short unsigned int _86;
  int _87;
  int _88;
  const struct Com_ConfigType * Com_gConfigPtr.493_89;
  short unsigned int _90;
  int _91;
  int _92;
  sizetype _93;
  uint8 * _94;
  unsigned char _95;
  unsigned char _96;
  unsigned char _98;
  unsigned char iftmp.494_99;
  unsigned char _100;
  unsigned char iftmp.494_101;
  unsigned char iftmp.494_102;
  const struct Com_ConfigType * Com_gConfigPtr.498_103;
  short unsigned int _104;
  int _105;
  int _106;
  sizetype _107;
  uint8 * _108;

  <bb 2> [local count: 74481775]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.315_1 = Com_InitStatus;
  if (Com_InitStatus.315_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 24578986]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 3, 2);
  goto <bb 33>; [100.00%]

  <bb 4> [local count: 49902789]:
  # DEBUG BEGIN_STMT
  if (ipduGroupVector_4(D) == 0B)
    goto <bb 5>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 5> [local count: 14970837]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 3, 3);
  goto <bb 33>; [100.00%]

  <bb 6> [local count: 34931952]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_EB_HandlePduGroupRx (0, ipduGroupVector_4(D), Initialize_5(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ipduGroupVector => ipduGroupVector_4(D)
  # DEBUG Initialize => Initialize_5(D)
  # DEBUG INLINE_ENTRY Com_EB_HandlePduGroupTx
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.417_10 = Com_gConfigPtr;
  txPduCount_11 = Com_gConfigPtr.417_10->ComTxIPduArraySize;
  # DEBUG txPduCount => txPduCount_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG IPduId => 0
  goto <bb 32>; [100.00%]

  <bb 7> [local count: 282631252]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.418_12 = Com_gConfigPtr;
  _13 = Com_gConfigPtr.418_12->ComTxIPduRef;
  _15 = (unsigned int) IPduId_14;
  _16 = _15 * 64;
  _17 = _13 + _16;
  IPduPtr_18 = Com_gConfigPtr.418_12 + _17;
  # DEBUG IPduPtr => IPduPtr_18
  # DEBUG BEGIN_STMT
  _19 = IPduPtr_18->ComIPduGroupMaskRef;
  if (_19 != 65535)
    goto <bb 8>; [41.79%]
  else
    goto <bb 31>; [58.21%]

  <bb 8> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  _20 = Com_gConfigPtr.418_12->ComIPduGroupMaskRef;
  _21 = (unsigned int) _19;
  _22 = _21 * 4;
  _23 = _20 + _22;
  # DEBUG MaskPtr => Com_gConfigPtr.418_12 + _23
  # DEBUG BEGIN_STMT
  # DEBUG toBeActivated => 0
  # DEBUG BEGIN_STMT
  iPduGroupVectorByte_24 = Com_gConfigPtr.418_12->ComTxIpduGroupVectorByteStart;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_24

  <bb 9> [local count: 1073741824]:
  # toBeActivated_33 = PHI <0(8), iftmp.424_37(13)>
  # iPduGroupVectorByte_25 = PHI <iPduGroupVectorByte_24(8), iPduGroupVectorByte_34(13)>
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_25
  # DEBUG toBeActivated => toBeActivated_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = (sizetype) iPduGroupVectorByte_25;
  _27 = _23 + _26;
  _28 = Com_gConfigPtr.418_12 + _27;
  _29 = *_28;
  _30 = ipduGroupVector_4(D) + _26;
  _31 = *_30;
  _32 = _29 & _31;
  if (_32 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 536870913]:

  <bb 11> [local count: 1073741824]:
  # iftmp.423_38 = PHI <1(9), 0(10)>
  # DEBUG activate => iftmp.423_38
  # DEBUG BEGIN_STMT
  if (toBeActivated_33 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 12> [local count: 536870913]:

  <bb 13> [local count: 1073741824]:
  # iftmp.424_37 = PHI <1(11), iftmp.423_38(12)>
  # DEBUG toBeActivated => iftmp.424_37
  # DEBUG BEGIN_STMT
  iPduGroupVectorByte_34 = iPduGroupVectorByte_25 + 1;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_34
  # DEBUG BEGIN_STMT
  if (iPduGroupVectorByte_34 != 4)
    goto <bb 9>; [89.00%]
  else
    goto <bb 14>; [11.00%]

  <bb 14> [local count: 118111601]:
  # iftmp.424_35 = PHI <iftmp.424_37(13)>
  # DEBUG BEGIN_STMT
  # DEBUG toBeActivated => iftmp.424_35
  # DEBUG IPduPtr => IPduPtr_18
  # DEBUG Initialize => Initialize_5(D)
  # DEBUG IPduId => IPduId_14
  # DEBUG INLINE_ENTRY Com_EB_HandleTxIPdu
  # DEBUG BEGIN_STMT
  if (iftmp.424_35 == 1)
    goto <bb 15>; [34.00%]
  else
    goto <bb 20>; [66.00%]

  <bb 15> [local count: 40157944]:
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_18
  # DEBUG Initialize => Initialize_5(D)
  # DEBUG IPduId => IPduId_14
  # DEBUG INLINE_ENTRY Com_EB_HandleTxIPdu_Start
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.427_39 = Com_gDataMemPtr;
  Com_gConfigPtr.428_40 = Com_gConfigPtr;
  _41 = Com_gConfigPtr.428_40->ComTxIPduStatusBase;
  _42 = (int) _41;
  _43 = (int) IPduId_14;
  _44 = _42 + _43;
  _45 = (sizetype) _44;
  _46 = Com_gDataMemPtr.427_39 + _45;
  _47 = *_46;
  _48 = _47 & 1;
  if (_48 == 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 16> [local count: 20078972]:
  # DEBUG BEGIN_STMT
  if (Initialize_5(D) == 1)
    goto <bb 17>; [20.24%]
  else
    goto <bb 18>; [79.76%]

  <bb 17> [local count: 4063984]:
  # DEBUG BEGIN_STMT
  Com_EB_InitTxIPdu (IPduId_14);

  <bb 18> [local count: 20078972]:
  # DEBUG BEGIN_STMT
  Com_EB_StartIPdu (IPduPtr_18, IPduId_14);

  <bb 19> [local count: 40157944]:
  goto <bb 30>; [100.00%]

  <bb 20> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_18
  # DEBUG IPduId => IPduId_14
  # DEBUG INLINE_ENTRY Com_EB_HandleTxIPdu_Stop
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.481_49 = Com_gDataMemPtr;
  Com_gConfigPtr.482_50 = Com_gConfigPtr;
  _51 = Com_gConfigPtr.482_50->ComTxIPduStatusBase;
  _52 = (int) _51;
  _53 = (int) IPduId_14;
  _54 = _52 + _53;
  _55 = (sizetype) _54;
  _56 = Com_gDataMemPtr.481_49 + _55;
  TS_AtomicClearBit_8 (_56, 0);
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.484_57 = Com_gConfigPtr;
  _58 = Com_gConfigPtr.484_57->ComTxIPduStatusBase;
  _59 = (int) _58;
  _60 = _53 + _59;
  _61 = (sizetype) _60;
  _62 = Com_gDataMemPtr.481_49 + _61;
  TS_AtomicClearBit_8 (_62, 4);
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.486_63 = Com_gConfigPtr;
  _64 = Com_gConfigPtr.486_63->ComTxIPduStatusBase;
  _65 = (int) _64;
  _66 = _53 + _65;
  _67 = (sizetype) _66;
  _68 = Com_gDataMemPtr.481_49 + _67;
  _69 = *_68;
  _70 = _69 & 32;
  if (_70 != 0)
    goto <bb 21>; [33.00%]
  else
    goto <bb 24>; [67.00%]

  <bb 21> [local count: 25724707]:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (_68, 5);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_71 = IPduPtr_18->ComTxTimeoutNotificationFirst;
  # DEBUG j => j_71
  goto <bb 23>; [100.00%]

  <bb 22> [local count: 208136264]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.489_72 = Com_gConfigPtr;
  _73 = Com_gConfigPtr.489_72->ComTxErrorNotificationRef;
  _75 = (unsigned int) j_74;
  _76 = _75 * 2;
  _77 = _73 + _76;
  _78 = Com_gConfigPtr.489_72 + _77;
  _79 = *_78;
  _80 = (int) _79;
  _81 = Com_CbkTxErr_Array[_80];
  _81 ();
  # DEBUG BEGIN_STMT
  j_82 = j_74 + 1;
  # DEBUG j => j_82

  <bb 23> [local count: 233860971]:
  # j_74 = PHI <j_71(21), j_82(22)>
  # DEBUG j => j_74
  # DEBUG BEGIN_STMT
  _83 = (int) j_74;
  _84 = IPduPtr_18->ComTxTimeoutNotificationFirst;
  _85 = (int) _84;
  _86 = IPduPtr_18->ComTxTimeoutNotificationNum;
  _87 = (int) _86;
  _88 = _85 + _87;
  if (_83 < _88)
    goto <bb 22>; [89.00%]
  else
    goto <bb 24>; [11.00%]

  <bb 24> [local count: 77953657]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.493_89 = Com_gConfigPtr;
  _90 = Com_gConfigPtr.493_89->ComTxIPduStatusBase;
  _91 = (int) _90;
  _92 = _53 + _91;
  _93 = (sizetype) _92;
  _94 = Com_gDataMemPtr.481_49 + _93;
  _95 = *_94;
  _96 = _95 >> 6;
  BitRes_97 = _96 & 1;
  # DEBUG BitRes => BitRes_97
  # DEBUG BEGIN_STMT
  if (BitRes_97 != 0)
    goto <bb 25>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 25> [local count: 38976828]:
  _98 = IPduPtr_18->ComTxModeModes;
  iftmp.494_99 = _98 & 15;
  goto <bb 27>; [100.00%]

  <bb 26> [local count: 38976828]:
  _100 = IPduPtr_18->ComTxModeModes;
  iftmp.494_101 = _100 >> 4;

  <bb 27> [local count: 77953657]:
  # iftmp.494_102 = PHI <iftmp.494_99(25), iftmp.494_101(26)>
  # DEBUG AktTM => iftmp.494_102
  # DEBUG BEGIN_STMT
  switch (iftmp.494_102) <default: <L7> [67.00%], case 1: <L6> [33.00%], case 3 ... 5: <L6> [33.00%]>

  <bb 28> [local count: 25724707]:
<L6>:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (_94, 2);
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.498_103 = Com_gConfigPtr;
  _104 = Com_gConfigPtr.498_103->ComTxIPduStatusBase;
  _105 = (int) _104;
  _106 = _53 + _105;
  _107 = (sizetype) _106;
  _108 = Com_gDataMemPtr.481_49 + _107;
  TS_AtomicClearBit_8 (_108, 3);
  # DEBUG BEGIN_STMT

  <bb 29> [local count: 77953657]:
<L7>:
  # DEBUG BEGIN_STMT

  <bb 30> [local count: 118111601]:
  # DEBUG IPduPtr => NULL
  # DEBUG IPduId => NULL
  # DEBUG j => NULL
  # DEBUG BitRes => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG Initialize => NULL
  # DEBUG IPduId => NULL

  <bb 31> [local count: 282631253]:
  # DEBUG toBeActivated => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG Initialize => NULL
  # DEBUG IPduId => NULL
  # DEBUG BEGIN_STMT
  IPduId_36 = IPduId_14 + 1;
  # DEBUG IPduId => IPduId_36

  <bb 32> [local count: 317563205]:
  # IPduId_14 = PHI <0(6), IPduId_36(31)>
  # DEBUG IPduId => IPduId_14
  # DEBUG BEGIN_STMT
  if (txPduCount_11 > IPduId_14)
    goto <bb 7>; [89.00%]
  else
    goto <bb 33>; [11.00%]

  <bb 33> [local count: 74481775]:
  # DEBUG ipduGroupVector => NULL
  # DEBUG Initialize => NULL
  # DEBUG iPduGroupVectorByte => NULL
  # DEBUG toBeActivated => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG IPduId => NULL
  # DEBUG txPduCount => NULL
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_ReceptionDMControl (Com_ReceptionDMControl, funcdef_no=210, decl_uid=6049, cgraph_uid=211, symbol_order=215)

Com_ReceptionDMControl (uint8 * ipduGroupVector)
{
  unsigned char Com_InitStatus.499_1;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.499_1 = Com_InitStatus;
  if (Com_InitStatus.499_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 6, 2);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  if (ipduGroupVector_4(D) == 0B)
    goto <bb 5>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 5> [local count: 215822106]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 6, 3);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 503584915]:
  # DEBUG BEGIN_STMT
  Com_EB_HandlePduGroupRx (1, ipduGroupVector_4(D), 0);

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_GetConfigurationId (Com_GetConfigurationId, funcdef_no=221, decl_uid=6059, cgraph_uid=222, symbol_order=226)

Com_GetConfigurationId ()
{
  uint32 ConfigId;
  unsigned char Com_InitStatus.500_1;
  const struct Com_ConfigType * Com_gConfigPtr.501_2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.500_1 = Com_InitStatus;
  if (Com_InitStatus.500_1 == 0)
    goto <bb 3>; [20.96%]
  else
    goto <bb 4>; [79.04%]

  <bb 3> [local count: 225056286]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 8, 2);
  # DEBUG BEGIN_STMT
  # DEBUG ConfigId => 4294967295
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 848685538]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.501_2 = Com_gConfigPtr;
  ConfigId_6 = Com_gConfigPtr.501_2->ComConfigurationId;
  # DEBUG ConfigId => ConfigId_6

  <bb 5> [local count: 1073741824]:
  # ConfigId_3 = PHI <4294967295(3), ConfigId_6(4)>
  # DEBUG ConfigId => ConfigId_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return ConfigId_3;

}



;; Function Com_Init (Com_Init, funcdef_no=222, decl_uid=6038, cgraph_uid=223, symbol_order=227)


Symbols to be put in SSA form
{ D.12491 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 26
Number of blocks to update: 25 ( 96%)


Removing basic block 5
Removing basic block 7
Removing basic block 17
Merging blocks 21 and 18
Merging blocks 25 and 22
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 4
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17
;;
;; Loop 3
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 9 10
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 3 4 }
;; 3 succs { 20 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 12 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 9 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 14 16 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 17 19 }
;; 19 succs { 20 }
;; 20 succs { 1 }
Com_Init (const struct Com_ConfigType * Com_ConfigPtr)
{
  const struct ComTxIPduType * IPduPtr;
  const struct ComRxIPduType * IPduPtr;
  uint8 * const IPduFlagBytePtr;
  ComRAMIdxType ii;
  ComRAMIdxType i;
  ComIPduRefType pdu;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.504_4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  const struct Com_ConfigType * Com_gConfigPtr.508_9;
  uint8 * Com_gDataMemPtr.506_10;
  sizetype _11;
  uint8 * _12;
  int _13;
  const struct Com_ConfigType * Com_gConfigPtr.508_14;
  short unsigned int _15;
  int _16;
  int _17;
  int _18;
  uint8 * Com_gDataMemPtr.509_19;
  short unsigned int _20;
  sizetype _21;
  unsigned int _22;
  unsigned int _23;
  ComSignalGroupRefType * _24;
  short unsigned int _25;
  unsigned int _36;
  sizetype _40;
  const struct Com_ConfigType * Com_gConfigPtr.513_52;
  long unsigned int _53;
  unsigned int _54;
  unsigned int _55;
  sizetype _56;
  short unsigned int _58;
  uint8 * Com_gDataMemPtr.515_59;
  const struct Com_ConfigType * Com_gConfigPtr.516_60;
  short unsigned int _61;
  int _62;
  int _63;
  int _64;
  sizetype _65;
  const struct Com_ConfigType * Com_gConfigPtr.517_67;
  long unsigned int _68;
  unsigned int _69;
  unsigned int _70;
  sizetype _71;
  short unsigned int _73;

  <bb 2> [local count: 176285968]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TmpCfgPtr => Com_ConfigPtr_35(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_IsValidConfig (Com_ConfigPtr_35(D));
  if (_1 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 58174369]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 1, 3);
  goto <bb 20>; [100.00%]

  <bb 4> [local count: 118111598]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr = Com_ConfigPtr_35(D);
  # DEBUG BEGIN_STMT
  # DEBUG pdu => 0
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 955630209]:
  # DEBUG BEGIN_STMT
  # DEBUG RxPduId => pdu_26
  # DEBUG INLINE_ENTRY Com_EB_InitStartRxIPdu
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.513_52 = Com_gConfigPtr;
  _53 = Com_gConfigPtr.513_52->ComRxIPduRef;
  _54 = (unsigned int) pdu_26;
  _55 = _54 * 48;
  _56 = _53 + _55;
  IPduPtr_57 = Com_gConfigPtr.513_52 + _56;
  # DEBUG IPduPtr => IPduPtr_57
  # DEBUG BEGIN_STMT
  Com_EB_InitRxIPdu (pdu_26);
  # DEBUG BEGIN_STMT
  _58 = IPduPtr_57->ComIPduGroupMaskRef;
  if (_58 == 65535)
    goto <bb 6>; [20.24%]
  else
    goto <bb 7>; [79.76%]

  <bb 6> [local count: 193419554]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.515_59 = Com_gDataMemPtr;
  Com_gConfigPtr.516_60 = Com_gConfigPtr;
  _61 = Com_gConfigPtr.516_60->ComRxIPduStatusBase;
  _62 = (int) _61;
  _63 = (int) pdu_26;
  _64 = _62 + _63;
  _65 = (sizetype) _64;
  IPduFlagBytePtr_66 = Com_gDataMemPtr.515_59 + _65;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_66
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_66, 0);
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_EnableRxDM (IPduPtr_57, IPduFlagBytePtr_66);

  <bb 7> [local count: 955630209]:
  # DEBUG RxPduId => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG BEGIN_STMT
  pdu_50 = pdu_26 + 1;
  # DEBUG pdu => pdu_50

  <bb 8> [local count: 1073741809]:
  # pdu_26 = PHI <0(4), pdu_50(7)>
  # DEBUG pdu => pdu_26
  # DEBUG BEGIN_STMT
  _2 = Com_ConfigPtr_35(D)->ComRxIPduArraySize;
  if (_2 > pdu_26)
    goto <bb 5>; [89.00%]
  else
    goto <bb 12>; [11.00%]

  <bb 9> [local count: 955630215]:
  # DEBUG BEGIN_STMT
  # DEBUG TxPduId => pdu_27
  # DEBUG INLINE_ENTRY Com_EB_InitStartTxIPdu
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.517_67 = Com_gConfigPtr;
  _68 = Com_gConfigPtr.517_67->ComTxIPduRef;
  _69 = (unsigned int) pdu_27;
  _70 = _69 * 64;
  _71 = _68 + _70;
  IPduPtr_72 = Com_gConfigPtr.517_67 + _71;
  # DEBUG IPduPtr => IPduPtr_72
  # DEBUG BEGIN_STMT
  Com_EB_InitTxIPdu (pdu_27);
  # DEBUG BEGIN_STMT
  _73 = IPduPtr_72->ComIPduGroupMaskRef;
  if (_73 == 65535)
    goto <bb 10>; [20.24%]
  else
    goto <bb 11>; [79.76%]

  <bb 10> [local count: 193419555]:
  # DEBUG BEGIN_STMT
  Com_EB_StartIPdu (IPduPtr_72, pdu_27);

  <bb 11> [local count: 955630215]:
  # DEBUG TxPduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG BEGIN_STMT
  pdu_48 = pdu_27 + 1;
  # DEBUG pdu => pdu_48

  <bb 12> [local count: 1073741815]:
  # pdu_27 = PHI <pdu_48(11), 0(8)>
  # DEBUG pdu => pdu_27
  # DEBUG BEGIN_STMT
  _3 = Com_ConfigPtr_35(D)->ComTxIPduArraySize;
  if (_3 > pdu_27)
    goto <bb 9>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.504_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.504_4->ComCbkTxAckDeferredListMax;
  _6 = (unsigned int) _5;
  _7 = _6 + 7;
  _8 = _7 >> 3;
  # DEBUG numBytes => (ComRAMIdxType) _8
  # DEBUG BEGIN_STMT
  i_41 = Com_gConfigPtr.504_4->ComCbkTxAckDeferredStatusBase;
  # DEBUG i => i_41
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 955630221]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.506_10 = Com_gDataMemPtr;
  _11 = (sizetype) i_28;
  _12 = Com_gDataMemPtr.506_10 + _11;
  *_12 = 0;
  # DEBUG BEGIN_STMT
  i_46 = i_28 + 1;
  # DEBUG i => i_46

  <bb 15> [local count: 1073741821]:
  # i_28 = PHI <i_41(13), i_46(14)>
  # DEBUG i => i_28
  # DEBUG BEGIN_STMT
  _13 = (int) i_28;
  Com_gConfigPtr.508_14 = Com_gConfigPtr;
  _15 = Com_gConfigPtr.508_14->ComCbkTxAckDeferredStatusBase;
  _16 = (int) _15;
  _36 = _8;
  _17 = (int) _36;
  _18 = _16 + _17;
  if (_13 < _18)
    goto <bb 14>; [89.00%]
  else
    goto <bb 16>; [11.00%]

  <bb 16> [local count: 118111600]:
  # Com_gConfigPtr.508_9 = PHI <Com_gConfigPtr.508_14(15)>
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.509_19 = Com_gDataMemPtr;
  _20 = Com_gConfigPtr.508_9->ComSigGWTxSignalGroupQueueBase;
  _21 = (sizetype) _20;
  # DEBUG TxSignalGroupQueueBase => Com_gDataMemPtr.509_19 + _21
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  _22 = (unsigned int) ii_29;
  _23 = _22 * 2;
  _40 = _21 + _23;
  _24 = Com_gDataMemPtr.509_19 + _40;
  *_24 = 65535;
  # DEBUG BEGIN_STMT
  ii_44 = ii_29 + 1;
  # DEBUG ii => ii_44

  <bb 18> [local count: 1073741824]:
  # ii_29 = PHI <0(16), ii_44(17)>
  # DEBUG ii => ii_29
  # DEBUG BEGIN_STMT
  _25 = Com_gConfigPtr.508_9->ComSigGWTxSignalGroupQueueMax;
  if (_25 > ii_29)
    goto <bb 17>; [89.00%]
  else
    goto <bb 19>; [11.00%]

  <bb 19> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  Com_InitStatus = 1;

  <bb 20> [local count: 176285970]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_ClearIpduGroupVector (Com_ClearIpduGroupVector, funcdef_no=223, decl_uid=6051, cgraph_uid=224, symbol_order=228)

Com_ClearIpduGroupVector (uint8 * ipduGroupVector)
{
  uint16 iPduGroupVectorByte;
  unsigned char Com_InitStatus.519_1;
  sizetype _2;
  uint8 * _3;

  <bb 2> [local count: 388179662]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.519_1 = Com_InitStatus;
  if (Com_InitStatus.519_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 128099288]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 28, 2);
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 260080373]:
  # DEBUG BEGIN_STMT
  if (ipduGroupVector_8(D) == 0B)
    goto <bb 5>; [17.43%]
  else
    goto <bb 9>; [82.57%]

  <bb 9> [local count: 214748364]:
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 45332009]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 28, 3);
  goto <bb 8>; [100.00%]

  <bb 6> [local count: 858993460]:
  # DEBUG BEGIN_STMT
  _2 = (sizetype) iPduGroupVectorByte_4;
  _3 = ipduGroupVector_8(D) + _2;
  *_3 = 0;
  # DEBUG BEGIN_STMT
  iPduGroupVectorByte_10 = iPduGroupVectorByte_4 + 1;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_10

  <bb 7> [local count: 1073741824]:
  # iPduGroupVectorByte_4 = PHI <iPduGroupVectorByte_10(6), 0(9)>
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_4
  # DEBUG BEGIN_STMT
  if (iPduGroupVectorByte_4 != 4)
    goto <bb 6>; [80.00%]
  else
    goto <bb 8>; [20.00%]

  <bb 8> [local count: 388179662]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_SetIpduGroup (Com_SetIpduGroup, funcdef_no=224, decl_uid=6055, cgraph_uid=225, symbol_order=229)

Com_SetIpduGroup (uint8 * ipduGroupVector, Com_IpduGroupIdType ipduGroupId, boolean bitval)
{
  unsigned char Com_InitStatus.521_1;
  const struct Com_ConfigType * Com_gConfigPtr.522_2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  short unsigned int _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  short unsigned int _31;
  short unsigned int _32;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.521_1 = Com_InitStatus;
  if (Com_InitStatus.521_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 29, 2);
  goto <bb 11>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  if (ipduGroupVector_23(D) == 0B)
    goto <bb 5>; [17.43%]
  else
    goto <bb 6>; [82.57%]

  <bb 5> [local count: 125392644]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 29, 3);
  goto <bb 11>; [100.00%]

  <bb 6> [local count: 594014379]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.522_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.522_2->ComIPduGroupsNum;
  if (_3 <= ipduGroupId_24(D))
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 196024745]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 29, 1);
  goto <bb 11>; [100.00%]

  <bb 8> [local count: 397989633]:
  # DEBUG BEGIN_STMT
  if (bitval_25(D) == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 198994816]:
  # DEBUG BEGIN_STMT
  _4 = ipduGroupId_24(D) >> 3;
  _5 = (sizetype) _4;
  _6 = ipduGroupVector_23(D) + _5;
  _7 = *_6;
  _32 = ipduGroupId_24(D) & 7;
  _8 = (unsigned int) _32;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = ~_10;
  _12 = _7 & _11;
  *_6 = _12;
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 198994816]:
  # DEBUG BEGIN_STMT
  _13 = ipduGroupId_24(D) >> 3;
  _14 = (sizetype) _13;
  _15 = ipduGroupVector_23(D) + _14;
  _16 = *_15;
  _31 = ipduGroupId_24(D) & 7;
  _17 = (unsigned int) _31;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _20 = _16 | _19;
  *_15 = _20;

  <bb 11> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_MainFunctionRouteSignals (Com_MainFunctionRouteSignals, funcdef_no=235, decl_uid=6015, cgraph_uid=236, symbol_order=240)


Symbols to be put in SSA form
{ D.12494 D.15385 D.15400 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 57
Number of blocks to update: 56 ( 98%)


Merging blocks 4 and 10
Removing basic block 8
Removing basic block 9
Merging blocks 12 and 19
Merging blocks 13 and 25
Removing basic block 14
Removing basic block 17
Removing basic block 18
Merging blocks 31 and 37
Removing basic block 34
Merging blocks 35 and 24
Removing basic block 36
Removing basic block 39
Removing basic block 41
Removing basic block 43
Removing basic block 47
Merging blocks 50 and 56
Removing basic block 55
Merging blocks 12 and 20
Merging blocks 13 and 26
Merging blocks 31 and 38
Merging blocks 31 and 40
No longer having address taken: retval

Symbols to be put in SSA form
{ D.15410 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 35
Number of blocks to update: 34 ( 97%)


;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32 3 31 29 30 25 28 26 27 24 4 23 5 9 19 22 20 21 11 17 18 12 10 13 16 14 15 7 8 6
;;
;; Loop 4
;;  header 29, latch 28
;;  depth 2, outer 1
;;  nodes: 29 28 26 27 30
;;
;; Loop 2
;;  header 24, latch 23
;;  depth 2, outer 1
;;  nodes: 24 23 5 9 19 22 20 21 11 17 18 12 10 13 16 14 15 7 8 6
;;
;; Loop 3
;;  header 17, latch 16
;;  depth 3, outer 2
;;  nodes: 17 16 14 15
;; 2 succs { 33 34 }
;; 3 succs { 4 32 }
;; 4 succs { 24 }
;; 5 succs { 23 6 10 20 }
;; 6 succs { 7 8 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 23 }
;; 10 succs { 11 12 }
;; 11 succs { 12 19 }
;; 12 succs { 13 18 }
;; 13 succs { 17 }
;; 14 succs { 16 15 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 14 19 }
;; 18 succs { 19 }
;; 19 succs { 23 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 5 25 }
;; 25 succs { 29 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 }
;; 29 succs { 30 31 }
;; 30 succs { 26 31 }
;; 31 succs { 32 }
;; 32 succs { 33 }
;; 33 succs { 3 34 }
;; 34 succs { 1 }
Com_MainFunctionRouteSignals ()
{
  const ComIPduRefType PduId;
  const struct ComTxIPduType * const IPduPtr;
  ComSignalGroupRefType ii;
  uint8 exit_flag;
  uint8 retval;
  const ComSignalGroupRefType SignalGId;
  const struct ComTxSignalGroupType * const SignalGPtr;
  const struct ComRxSignalType * const SrcSignalPtr;
  uint8 * SrcDataPtr;
  uint8 retval;
  uint8 retval;
  boolean forceTrigger;
  uint8 D.15400;
  const struct ComTxIPduType * const DestIPduPtr;
  const ComIPduRefType DestPduId;
  const struct ComTxSignalGroupType * const DestSignalGPtr;
  const struct ComGWDestinationType * const GWDestinationPtr;
  ComGWDestinationRefType GWDestinationRef;
  const struct ComRxSignalExtType * const SignalExtPtr;
  uint8 SignalUpdated;
  boolean routeGroupSignals;
  const ComRAMIdxType PosInSrcIPdu;
  const struct ComRxSignalGroupType * const SrcSignalGPtr;
  boolean D.15385;
  uint8 * SrcDataPtr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  uint8 GateSignal;
  const struct ComRxSignalType * const SrcSignalPtr;
  boolean routeGroupSignals;
  ComGWSourceRefType sigGWSourceRef;
  const struct ComGWSourceType * const GWSourcePtr;
  const struct ComRxIPduType * const IPduPtr;
  const ComIPduRefType IPduId;
  uint16 sigGWRxPduRef;
  unsigned char Com_InitStatus.523_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  const ComIPduRefType * _6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  uint8 * Com_gDataMemPtr.528_11;
  short unsigned int _12;
  unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  uint8 * _18;
  unsigned char _19;
  unsigned int _20;
  int _21;
  unsigned char _22;
  unsigned char _23;
  const struct Com_ConfigType * Com_gConfigPtr.533_24;
  short unsigned int _25;
  short unsigned int _31;
  const struct Com_ConfigType * Com_gConfigPtr.534_38;
  long unsigned int _39;
  unsigned int _41;
  unsigned int _42;
  sizetype _43;
  unsigned char _45;
  short unsigned int _46;
  short unsigned int _47;
  int _51;
  short unsigned int _52;
  int _53;
  short unsigned int _54;
  int _55;
  int _56;
  const struct Com_ConfigType * Com_gConfigPtr.537_58;
  long unsigned int _59;
  long unsigned int _61;
  short unsigned int _62;
  unsigned int _63;
  unsigned int _64;
  sizetype _65;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  uint8 * Com_gDataMemPtr.540_70;
  short unsigned int _71;
  unsigned int _72;
  short unsigned int _73;
  short unsigned int _74;
  unsigned int _75;
  unsigned int _76;
  uint8 * _77;
  unsigned char _78;
  int _79;
  unsigned char _80;
  unsigned char _81;
  int _82;
  int _83;
  unsigned char _84;
  uint8 * Com_gDataMemPtr.541_86;
  short unsigned int _87;
  sizetype _88;
  const struct Com_ConfigType * Com_gConfigPtr.562_90;
  long unsigned int _91;
  short unsigned int _93;
  short unsigned int _94;
  long unsigned int _96;
  short unsigned int _97;
  unsigned int _98;
  unsigned int _99;
  sizetype _100;
  unsigned char _102;
  unsigned char _103;
  unsigned char _104;
  uint8 * Com_gDataMemPtr.565_105;
  unsigned int _106;
  short unsigned int _107;
  short unsigned int _108;
  unsigned int _109;
  unsigned int _110;
  uint8 * _111;
  unsigned char _112;
  int _113;
  unsigned char _114;
  unsigned char _115;
  int _116;
  int _117;
  unsigned char _118;
  short unsigned int _120;
  const struct Com_ConfigType * Com_gConfigPtr.566_122;
  long unsigned int _123;
  unsigned int _125;
  unsigned int _126;
  sizetype _127;
  unsigned char _129;
  long unsigned int _130;
  int _132;
  short unsigned int _133;
  int _134;
  short unsigned int _135;
  int _136;
  int _137;
  const struct Com_ConfigType * Com_gConfigPtr.569_139;
  long unsigned int _140;
  long unsigned int _143;
  unsigned int _144;
  unsigned int _145;
  sizetype _146;
  uint8 * Com_gDataMemPtr.572_148;
  sizetype _149;
  uint8 * _150;
  const ComRAMIdxType * _151;
  const struct Com_ConfigType * Com_gConfigPtr.616_154;
  long unsigned int _155;
  uint8 * Com_gDataMemPtr.617_157;
  short unsigned int _158;
  sizetype _159;
  uint8 * Com_gDataMemPtr.618_161;
  const struct Com_ConfigType * Com_gConfigPtr.623_162;
  short unsigned int _163;
  sizetype _164;
  unsigned int _166;
  unsigned int _167;
  sizetype _168;
  ComSignalGroupRefType * _169;
  long unsigned int _171;
  unsigned int _172;
  unsigned int _173;
  sizetype _174;
  short unsigned int _177;
  const struct Com_ConfigType * Com_gConfigPtr.625_181;
  long unsigned int _182;
  unsigned int _183;
  unsigned int _184;
  sizetype _185;
  unsigned char _187;

  <bb 2> [local count: 126529556]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.523_1 = Com_InitStatus;
  if (Com_InitStatus.523_1 == 1)
    goto <bb 33>; [34.00%]
  else
    goto <bb 34>; [66.00%]

  <bb 3> [local count: 348071308]:
  # DEBUG BEGIN_STMT
  _2 = Com_gConfigPtr.533_24->ComSigGWRxIPduListRef;
  _3 = (unsigned int) sigGWRxPduRef_26;
  _4 = _3 * 2;
  _5 = _2 + _4;
  _6 = Com_gConfigPtr.533_24 + _5;
  IPduId_32 = *_6;
  # DEBUG IPduId => IPduId_32
  # DEBUG BEGIN_STMT
  _7 = Com_gConfigPtr.533_24->ComRxIPduRef;
  _8 = (unsigned int) IPduId_32;
  _9 = _8 * 48;
  _10 = _7 + _9;
  IPduPtr_33 = Com_gConfigPtr.533_24 + _10;
  # DEBUG IPduPtr => IPduPtr_33
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.528_11 = Com_gDataMemPtr;
  _12 = Com_gConfigPtr.533_24->ComSigGWRxPduFlagBase;
  _13 = (unsigned int) _12;
  _14 = IPduPtr_33->ComIPduSigGWFlagBit;
  _15 = _14 >> 3;
  _16 = (unsigned int) _15;
  _17 = _13 + _16;
  _18 = Com_gDataMemPtr.528_11 + _17;
  _19 = *_18;
  _31 = _14 & 7;
  _20 = (unsigned int) _31;
  _21 = 1 << _20;
  _22 = (unsigned char) _21;
  _23 = _19 & _22;
  if (_23 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 32>; [67.00%]

  <bb 4> [local count: 114863531]:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (_18, _20);
  # DEBUG BEGIN_STMT
  # DEBUG SrcIPduPtr => IPduPtr_33
  # DEBUG INLINE_ENTRY Com_MainFunctionRouteSignals_Src_Generic_hlp
  # DEBUG BEGIN_STMT
  # DEBUG routeGroupSignals => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  sigGWSourceRef_37 = IPduPtr_33->ComIPduGWSourceRefFirst;
  # DEBUG sigGWSourceRef => sigGWSourceRef_37
  goto <bb 24>; [100.00%]

  <bb 5> [local count: 929350396]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.534_38 = Com_gConfigPtr;
  _39 = Com_gConfigPtr.534_38->ComGWSourceRef;
  _41 = (unsigned int) sigGWSourceRef_40;
  _42 = _41 * 12;
  _43 = _39 + _42;
  GWSourcePtr_44 = Com_gConfigPtr.534_38 + _43;
  # DEBUG GWSourcePtr => GWSourcePtr_44
  # DEBUG BEGIN_STMT
  _45 = GWSourcePtr_44->ComGWSourceSelect;
  switch (_45) <default: <L10> [25.00%], case 0: <L7> [25.00%], case 1: <L8> [25.00%], case 2: <L12> [25.00%]>

  <bb 6> [local count: 232337599]:
<L7>:
  # DEBUG BEGIN_STMT
  _46 = MEM[(short unsigned int *)IPduPtr_33 + 10B];
  # DEBUG D#119 => IPduPtr_33
  # DEBUG GWSourcePtr => GWSourcePtr_44
  # DEBUG INLINE_ENTRY Com_EB_RouteSignal
  # DEBUG SrcIPduPtr => D#119
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.537_58 = Com_gConfigPtr;
  _59 = GWSourcePtr_44->ComGWSourceRef;
  SrcSignalPtr_60 = Com_gConfigPtr.537_58 + _59;
  # DEBUG SrcSignalPtr => SrcSignalPtr_60
  # DEBUG BEGIN_STMT
  # DEBUG GateSignal => 1
  # DEBUG BEGIN_STMT
  _61 = Com_gConfigPtr.537_58->ComRxSignalExtRef;
  _62 = SrcSignalPtr_60->ComSignalExtRef;
  _63 = (unsigned int) _62;
  _64 = _63 * 14;
  _65 = _61 + _64;
  SignalExtPtr_66 = Com_gConfigPtr.537_58 + _65;
  # DEBUG SignalExtPtr => SignalExtPtr_66
  # DEBUG BEGIN_STMT
  _67 = SignalExtPtr_66->ComRxSignalExtFlags;
  _68 = _67 >> 1;
  _69 = _68 & 1;
  if (_69 != 0)
    goto <bb 7>; [67.00%]
  else
    goto <bb 8>; [33.00%]

  <bb 7> [local count: 155666191]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.540_70 = Com_gDataMemPtr;
  _71 = _46;
  _72 = (unsigned int) _71;
  _73 = SignalExtPtr_66->ComUpdateBitPositionInBit;
  _74 = _73 >> 3;
  _75 = (unsigned int) _74;
  _76 = _72 + _75;
  _77 = Com_gDataMemPtr.540_70 + _76;
  _78 = *_77;
  _79 = (int) _78;
  _80 = (unsigned char) _73;
  _81 = _80 & 7;
  _82 = (int) _81;
  _83 = _79 >> _82;
  _84 = (unsigned char) _83;
  GateSignal_85 = _84 & 1;
  # DEBUG GateSignal => GateSignal_85
  # DEBUG BEGIN_STMT
  if (GateSignal_85 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 154504503]:
  # DEBUG GateSignal => NULL
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.541_86 = Com_gDataMemPtr;
  _87 = _46;
  _88 = (sizetype) _87;
  SrcDataPtr_89 = Com_gDataMemPtr.541_86 + _88;
  # DEBUG SrcDataPtr => SrcDataPtr_89
  # DEBUG BEGIN_STMT
  Com_EB_RouteSignalHelper (SrcSignalPtr_60, GWSourcePtr_44, SrcDataPtr_89);

  <bb 9> [local count: 232337599]:
  goto <bb 23>; [100.00%]

  <bb 10> [local count: 232337599]:
<L8>:
  # DEBUG BEGIN_STMT
  _47 = MEM[(short unsigned int *)IPduPtr_33 + 10B];
  # DEBUG D#122 => IPduPtr_33
  # DEBUG GWSourcePtr => GWSourcePtr_44
  # DEBUG INLINE_ENTRY Com_EB_RouteSignalGroup
  # DEBUG SrcIPduPtr => D#122
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.562_90 = Com_gConfigPtr;
  _91 = GWSourcePtr_44->ComGWSourceRef;
  SrcSignalGPtr_92 = Com_gConfigPtr.562_90 + _91;
  # DEBUG SrcSignalGPtr => SrcSignalGPtr_92
  # DEBUG BEGIN_STMT
  _93 = SrcSignalGPtr_92->ComSignalPositionInByte;
  _94 = _47;
  PosInSrcIPdu_95 = _93 + _94;
  # DEBUG PosInSrcIPdu => PosInSrcIPdu_95
  # DEBUG BEGIN_STMT
  # DEBUG routeGroupSignals => 0
  # DEBUG BEGIN_STMT
  # DEBUG SignalUpdated => 1
  # DEBUG BEGIN_STMT
  _96 = Com_gConfigPtr.562_90->ComRxSignalExtRef;
  _97 = SrcSignalGPtr_92->ComSignalExtRef;
  _98 = (unsigned int) _97;
  _99 = _98 * 14;
  _100 = _96 + _99;
  SignalExtPtr_101 = Com_gConfigPtr.562_90 + _100;
  # DEBUG SignalExtPtr => SignalExtPtr_101
  # DEBUG BEGIN_STMT
  _102 = SignalExtPtr_101->ComRxSignalExtFlags;
  _103 = _102 >> 1;
  _104 = _103 & 1;
  if (_104 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [local count: 116168799]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.565_105 = Com_gDataMemPtr;
  _106 = (unsigned int) _94;
  _107 = SignalExtPtr_101->ComUpdateBitPositionInBit;
  _108 = _107 >> 3;
  _109 = (unsigned int) _108;
  _110 = _106 + _109;
  _111 = Com_gDataMemPtr.565_105 + _110;
  _112 = *_111;
  _113 = (int) _112;
  _114 = (unsigned char) _107;
  _115 = _114 & 7;
  _116 = (int) _115;
  _117 = _113 >> _116;
  _118 = (unsigned char) _117;
  SignalUpdated_119 = _118 & 1;
  # DEBUG SignalUpdated => SignalUpdated_119
  # DEBUG BEGIN_STMT
  if (SignalUpdated_119 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 12> [local count: 174253199]:
  # DEBUG SignalUpdated => NULL
  # DEBUG BEGIN_STMT
  _120 = GWSourcePtr_44->ComGWDestinationNumRef;
  if (_120 != 0)
    goto <bb 13>; [67.00%]
  else
    goto <bb 18>; [33.00%]

  <bb 13> [local count: 116749644]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  GWDestinationRef_121 = GWSourcePtr_44->ComGWDestinationFirstRef;
  # DEBUG GWDestinationRef => GWDestinationRef_121
  goto <bb 17>; [100.00%]

  <bb 14> [local count: 944610759]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.566_122 = Com_gConfigPtr;
  _123 = Com_gConfigPtr.566_122->ComGWDestinationRef;
  _125 = (unsigned int) GWDestinationRef_124;
  _126 = _125 * 8;
  _127 = _123 + _126;
  GWDestinationPtr_128 = Com_gConfigPtr.566_122 + _127;
  # DEBUG GWDestinationPtr => GWDestinationPtr_128
  # DEBUG BEGIN_STMT
  _129 = GWDestinationPtr_128->ComGWDestinationSelect;
  if (_129 == 1)
    goto <bb 15>; [20.24%]
  else
    goto <bb 16>; [79.76%]

  <bb 15> [local count: 191189218]:
<L11>:
  # DEBUG BEGIN_STMT
  _130 = MEM[(long unsigned int *)GWDestinationPtr_128];
  # DEBUG D#121 => GWDestinationPtr_128
  # DEBUG PosInSrcIPdu => PosInSrcIPdu_95
  # DEBUG INLINE_ENTRY Com_EB_RouteSG_2_SG
  # DEBUG GWDestinationPtr => D#121
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.569_139 = Com_gConfigPtr;
  _140 = _130;
  DestSignalGPtr_141 = Com_gConfigPtr.569_139 + _140;
  # DEBUG DestSignalGPtr => DestSignalGPtr_141
  # DEBUG BEGIN_STMT
  DestPduId_142 = DestSignalGPtr_141->ComIPduRef;
  # DEBUG DestPduId => DestPduId_142
  # DEBUG BEGIN_STMT
  _143 = Com_gConfigPtr.569_139->ComTxIPduRef;
  _144 = (unsigned int) DestPduId_142;
  _145 = _144 * 64;
  _146 = _143 + _145;
  DestIPduPtr_147 = Com_gConfigPtr.569_139 + _146;
  # DEBUG DestIPduPtr => DestIPduPtr_147
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.572_148 = Com_gDataMemPtr;
  _149 = (sizetype) PosInSrcIPdu_95;
  _150 = Com_gDataMemPtr.572_148 + _149;
  # DEBUG SGArrayPtr => _150
  # DEBUG SignalGPtr => DestSignalGPtr_141
  # DEBUG PduId => DestPduId_142
  # DEBUG IPduPtr => DestIPduPtr_147
  # DEBUG SendInMainFunctionTx => 1
  # DEBUG INLINE_ENTRY Com_EB_SendSignalGroupArray
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  Com_EB_SetGroupSignalTMSFlagOfSignalGroup (DestSignalGPtr_141, _150);
  # DEBUG BEGIN_STMT
  _151 = &MEM[(short unsigned int *)DestIPduPtr_147 + 16B];
  # DEBUG D#109 => DestIPduPtr_147
  forceTrigger_152 = Com_EB_WriteShadowBuffer.isra.0 (DestSignalGPtr_141, _151, _150);
  # DEBUG forceTrigger => forceTrigger_152
  # DEBUG BEGIN_STMT
  retval_153 = Com_EB_CalculateSignalGroupTM (forceTrigger_152, DestSignalGPtr_141, DestIPduPtr_147, DestPduId_142, 1);
  # DEBUG retval => retval_153
  # DEBUG BEGIN_STMT
  _209 = retval_153;

  <bb 16> [local count: 944610759]:
  # DEBUG SGArrayPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG SendInMainFunctionTx => NULL
  # DEBUG forceTrigger => NULL
  # DEBUG retval => NULL
  # DEBUG PosInSrcIPdu => NULL
  # DEBUG DestSignalGPtr => NULL
  # DEBUG DestPduId => NULL
  # DEBUG DestIPduPtr => NULL
  # DEBUG BEGIN_STMT
  GWDestinationRef_131 = GWDestinationRef_124 + 1;
  # DEBUG GWDestinationRef => GWDestinationRef_131

  <bb 17> [local count: 1061360403]:
  # GWDestinationRef_124 = PHI <GWDestinationRef_121(13), GWDestinationRef_131(16)>
  # DEBUG GWDestinationRef => GWDestinationRef_124
  # DEBUG BEGIN_STMT
  _132 = (int) GWDestinationRef_124;
  _133 = GWSourcePtr_44->ComGWDestinationFirstRef;
  _134 = (int) _133;
  _135 = GWSourcePtr_44->ComGWDestinationNumRef;
  _136 = (int) _135;
  _137 = _134 + _136;
  if (_132 < _137)
    goto <bb 14>; [89.00%]
  else
    goto <bb 19>; [11.00%]

  <bb 18> [local count: 57503556]:
  # DEBUG BEGIN_STMT
  # DEBUG routeGroupSignals => 1
  # DEBUG BEGIN_STMT
  # DEBUG SignalGPtr => SrcSignalGPtr_92
  # DEBUG INLINE_ENTRY Com_EB_RouteReceiveSignalGroup
  # DEBUG BEGIN_STMT
  retval = 0;
  # DEBUG BEGIN_STMT
  Com_SetupRxSignalGroup (&retval, 0B, SrcSignalGPtr_92, Com_CopyRxSignalGroupArray_Shadow);
  # DEBUG BEGIN_STMT
  retval ={v} {CLOBBER};

  <bb 19> [local count: 232337600]:
  # routeGroupSignals_138 = PHI <0(11), 0(17), 1(18)>
  # DEBUG SignalGPtr => NULL
  # DEBUG retval => NULL
  # DEBUG routeGroupSignals => routeGroupSignals_138
  # DEBUG BEGIN_STMT
  _210 = routeGroupSignals_138;
  # DEBUG GWSourcePtr => NULL
  # DEBUG SrcSignalGPtr => NULL
  # DEBUG PosInSrcIPdu => NULL
  # DEBUG routeGroupSignals => NULL
  # DEBUG SignalUpdated => NULL
  # DEBUG SignalExtPtr => NULL
  # DEBUG GWDestinationRef => NULL
  # DEBUG GWDestinationPtr => NULL
  routeGroupSignals_48 = _210;
  # DEBUG routeGroupSignals => routeGroupSignals_48
  # DEBUG BEGIN_STMT
  goto <bb 23>; [100.00%]

  <bb 20> [local count: 232337599]:
<L12>:
  # DEBUG BEGIN_STMT
  # DEBUG GWSourcePtr => GWSourcePtr_44
  # DEBUG routeGroupSignals => routeGroupSignals_49
  # DEBUG INLINE_ENTRY Com_EB_RouteGroupSignal
  # DEBUG BEGIN_STMT
  if (routeGroupSignals_49 == 1)
    goto <bb 21>; [20.24%]
  else
    goto <bb 22>; [79.76%]

  <bb 21> [local count: 47025130]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.616_154 = Com_gConfigPtr;
  _155 = GWSourcePtr_44->ComGWSourceRef;
  SrcSignalPtr_156 = Com_gConfigPtr.616_154 + _155;
  # DEBUG SrcSignalPtr => SrcSignalPtr_156
  # DEBUG BEGIN_STMT
  # DEBUG D#120 => &SrcSignalPtr_156->ComSignalBase
  # DEBUG Com_EB_ReadPropPtr => D#120
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.617_157 = Com_gDataMemPtr;
  _158 = MEM[(const struct ComSignalBaseType *)SrcSignalPtr_156].ComBufferRef;
  _159 = (sizetype) _158;
  SrcDataPtr_160 = Com_gDataMemPtr.617_157 + _159;
  # DEBUG SrcDataPtr => SrcDataPtr_160
  # DEBUG BEGIN_STMT
  Com_EB_RouteSignalHelper (SrcSignalPtr_156, GWSourcePtr_44, SrcDataPtr_160);

  <bb 22> [local count: 232337599]:

  <bb 23> [local count: 929350398]:
  # routeGroupSignals_57 = PHI <routeGroupSignals_49(5), routeGroupSignals_49(9), routeGroupSignals_48(19), routeGroupSignals_49(22)>
<L10>:
  # DEBUG GWSourcePtr => NULL
  # DEBUG routeGroupSignals => NULL
  # DEBUG SrcDataPtr => NULL
  # DEBUG SrcSignalPtr => NULL
  # DEBUG GWSourcePtr => NULL
  # DEBUG SrcSignalPtr => NULL
  # DEBUG GateSignal => NULL
  # DEBUG SignalExtPtr => NULL
  # DEBUG SrcDataPtr => NULL
  # DEBUG routeGroupSignals => routeGroupSignals_57
  # DEBUG BEGIN_STMT
  sigGWSourceRef_50 = sigGWSourceRef_40 + 1;
  # DEBUG sigGWSourceRef => sigGWSourceRef_50

  <bb 24> [local count: 1044213929]:
  # routeGroupSignals_49 = PHI <0(4), routeGroupSignals_57(23)>
  # sigGWSourceRef_40 = PHI <sigGWSourceRef_37(4), sigGWSourceRef_50(23)>
  # DEBUG sigGWSourceRef => sigGWSourceRef_40
  # DEBUG routeGroupSignals => routeGroupSignals_49
  # DEBUG BEGIN_STMT
  _51 = (int) sigGWSourceRef_40;
  _52 = IPduPtr_33->ComIPduGWSourceRefFirst;
  _53 = (int) _52;
  _54 = IPduPtr_33->ComIPduGWSourceRefNum;
  _55 = (int) _54;
  _56 = _53 + _55;
  if (_51 < _56)
    goto <bb 5>; [89.00%]
  else
    goto <bb 25>; [11.00%]

  <bb 25> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Com_EB_CheckSendSignalGroup
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG exit_flag => 1
  # DEBUG BEGIN_STMT
  retval_212 = 0;
  # DEBUG retval => retval_212
  # DEBUG BEGIN_STMT
  # DEBUG ii => 0
  goto <bb 29>; [100.00%]

  <bb 26> [local count: 958878293]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.618_161 = Com_gDataMemPtr;
  _163 = Com_gConfigPtr.623_162->ComSigGWTxSignalGroupQueueBase;
  _164 = (sizetype) _163;
  # DEBUG TxSignalGroupQueueBase => Com_gDataMemPtr.618_161 + _164
  # DEBUG BEGIN_STMT
  _166 = (unsigned int) ii_165;
  _167 = _166 * 2;
  _168 = _164 + _167;
  _169 = Com_gDataMemPtr.618_161 + _168;
  SignalGId_170 = *_169;
  # DEBUG SignalGId => SignalGId_170
  # DEBUG BEGIN_STMT
  if (SignalGId_170 != 65535)
    goto <bb 27>; [48.88%]
  else
    goto <bb 28>; [51.12%]

  <bb 27> [local count: 468699710]:
  # DEBUG BEGIN_STMT
  _171 = Com_gConfigPtr.623_162->ComTxSignalGroupRef;
  _172 = (unsigned int) SignalGId_170;
  _173 = _172 * 32;
  _174 = _171 + _173;
  SignalGPtr_175 = Com_gConfigPtr.623_162 + _174;
  # DEBUG SignalGPtr => SignalGPtr_175
  # DEBUG BEGIN_STMT
  *_169 = 65535;
  # DEBUG BEGIN_STMT
  # DEBUG SGArrayPtr => 0B
  # DEBUG SGArrayLength => 0
  # DEBUG Com_TxSignalGroupFPtr => Com_EB_SendSignalGroup
  # DEBUG SignalGPtr => SignalGPtr_175
  # DEBUG retvalPtr => &retval
  # DEBUG SendInMainFunctionTx => 1
  # DEBUG INLINE_ENTRY Com_SetupTxSignalGroup
  # DEBUG BEGIN_STMT
  PduId_180 = SignalGPtr_175->ComIPduRef;
  # DEBUG PduId => PduId_180
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.625_181 = Com_gConfigPtr;
  _182 = Com_gConfigPtr.625_181->ComTxIPduRef;
  _183 = (unsigned int) PduId_180;
  _184 = _183 * 64;
  _185 = _182 + _184;
  IPduPtr_186 = Com_gConfigPtr.625_181 + _185;
  # DEBUG IPduPtr => IPduPtr_186
  # DEBUG BEGIN_STMT
  _187 = Com_EB_SendSignalGroup (0B, 0, SignalGPtr_175, PduId_180, IPduPtr_186, 1);
  retval_213 = _187;
  # DEBUG retval => retval_213

  <bb 28> [local count: 958878293]:
  # exit_flag_179 = PHI <0(26), 1(27)>
  # DEBUG SGArrayPtr => NULL
  # DEBUG SGArrayLength => NULL
  # DEBUG Com_TxSignalGroupFPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG retvalPtr => NULL
  # DEBUG SendInMainFunctionTx => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG exit_flag => exit_flag_179
  # DEBUG BEGIN_STMT
  ii_176 = ii_165 + 1;
  # DEBUG ii => ii_176

  <bb 29> [local count: 1073741824]:
  # ii_165 = PHI <0(25), ii_176(28)>
  # exit_flag_178 = PHI <1(25), exit_flag_179(28)>
  # DEBUG exit_flag => exit_flag_178
  # DEBUG ii => ii_165
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.623_162 = Com_gConfigPtr;
  _177 = Com_gConfigPtr.623_162->ComSigGWTxSignalGroupQueueMax;
  if (ii_165 < _177)
    goto <bb 30>; [94.50%]
  else
    goto <bb 31>; [5.50%]

  <bb 30> [local count: 1014686025]:
  if (exit_flag_178 == 1)
    goto <bb 26>; [94.50%]
  else
    goto <bb 31>; [5.50%]

  <bb 31> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG D#495 => {CLOBBER}
  # DEBUG retval => D#495

  <bb 32> [local count: 348071308]:
  # DEBUG SignalGPtr => NULL
  # DEBUG SignalGId => NULL
  # DEBUG retval => NULL
  # DEBUG exit_flag => NULL
  # DEBUG ii => NULL
  # DEBUG SrcIPduPtr => NULL
  # DEBUG GWSourcePtr => NULL
  # DEBUG sigGWSourceRef => NULL
  # DEBUG routeGroupSignals => NULL
  # DEBUG BEGIN_STMT
  sigGWRxPduRef_36 = sigGWRxPduRef_26 + 1;
  # DEBUG sigGWRxPduRef => sigGWRxPduRef_36

  <bb 33> [local count: 391091357]:
  # sigGWRxPduRef_26 = PHI <sigGWRxPduRef_36(32), 0(2)>
  # DEBUG sigGWRxPduRef => sigGWRxPduRef_26
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.533_24 = Com_gConfigPtr;
  _25 = Com_gConfigPtr.533_24->ComSigGWRxIPduArraySize;
  if (_25 > sigGWRxPduRef_26)
    goto <bb 3>; [89.00%]
  else
    goto <bb 34>; [11.00%]

  <bb 34> [local count: 126529556]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_MainFunctionRx (Com_MainFunctionRx, funcdef_no=239, decl_uid=6011, cgraph_uid=240, symbol_order=244)


Symbols to be put in SSA form
{ D.12495 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 44
Number of blocks to update: 43 ( 98%)


Removing basic block 8
Removing basic block 10
Removing basic block 20
Removing basic block 21
Removing basic block 31
Removing basic block 32
Removing basic block 43
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;;
;; Loop 2
;;  header 35, latch 34
;;  depth 1, outer 0
;;  nodes: 35 34 29 31 32 33 30 28
;;
;; Loop 3
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 20 22 23 24 21 19
;;
;; Loop 4
;;  header 17, latch 16
;;  depth 1, outer 0
;;  nodes: 17 16 10 13 15 12 14 11 9
;;
;; Loop 5
;;  header 15, latch 14
;;  depth 2, outer 4
;;  nodes: 15 14
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5
;; 2 succs { 3 36 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 4 8 }
;; 8 succs { 17 }
;; 9 succs { 11 10 }
;; 10 succs { 16 }
;; 11 succs { 12 13 }
;; 12 succs { 15 }
;; 13 succs { 16 }
;; 14 succs { 15 }
;; 15 succs { 14 16 }
;; 16 succs { 17 }
;; 17 succs { 9 18 }
;; 18 succs { 26 }
;; 19 succs { 21 20 }
;; 20 succs { 25 }
;; 21 succs { 22 23 }
;; 22 succs { 24 25 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 19 27 }
;; 27 succs { 35 }
;; 28 succs { 30 29 }
;; 29 succs { 34 }
;; 30 succs { 31 32 }
;; 31 succs { 33 34 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 35 }
;; 35 succs { 28 36 }
;; 36 succs { 1 }
Com_MainFunctionRx ()
{
  Com_RxDMNextDueTimeType globalTime;
  Com_RxDMNextDueTimeType CompTime;
  ComIPduRefType i;
  const struct ComRxIPduType * IPduPtr;
  ComIPduRefType AktPduId;
  Com_CbkRxTOutIdxType j;
  Com_RxDMNextDueTimeType globalTime;
  Com_RxDMNextDueTimeType CompTime;
  ComSignalRefType i;
  const ComSignalRefType AktSignalId;
  const struct ComRxSignalType * const SignalPtr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  Com_RxDMNextDueTimeType globalTime;
  Com_RxDMNextDueTimeType CompTime;
  ComSignalGroupRefType i;
  const ComSignalGroupRefType AktSignalGId;
  const struct ComRxSignalGroupType * SignalGPtr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxIPduType * IPduPtr;
  uint16 RxPduCount;
  uint16 i;
  unsigned char Com_InitStatus.627_1;
  short unsigned int Com_GlobalTime.628_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.629_4;
  const struct Com_ConfigType * Com_gConfigPtr.630_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  uint8 * Com_gDataMemPtr.632_10;
  short unsigned int _11;
  int _12;
  int _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _27;
  uint8 * Com_gDataMemPtr.722_36;
  const struct Com_ConfigType * Com_gConfigPtr.735_37;
  short unsigned int _38;
  sizetype _39;
  long unsigned int _40;
  unsigned int _42;
  unsigned int _43;
  sizetype _44;
  const ComSignalGroupRefType * _45;
  long unsigned int _47;
  unsigned int _48;
  unsigned int _49;
  sizetype _50;
  long unsigned int _52;
  short unsigned int _53;
  unsigned int _54;
  unsigned int _55;
  sizetype _56;
  const struct Com_ConfigType * Com_gConfigPtr.731_58;
  short unsigned int _59;
  unsigned int _60;
  short unsigned int _61;
  short unsigned int _62;
  unsigned int _63;
  unsigned int _64;
  uint8 * _65;
  unsigned char _66;
  short unsigned int _67;
  unsigned int _68;
  unsigned int _69;
  unsigned int _70;
  int _71;
  unsigned char _72;
  unsigned char _73;
  sizetype _74;
  Com_RxDMNextDueTimeType * _75;
  long unsigned int _77;
  short unsigned int _78;
  short unsigned int _79;
  short unsigned int _80;
  int _81;
  void (*<T60c>) (void) _82;
  short unsigned int _84;
  uint8 * Com_gDataMemPtr.708_86;
  const struct Com_ConfigType * Com_gConfigPtr.721_87;
  short unsigned int _88;
  sizetype _89;
  long unsigned int _90;
  unsigned int _92;
  unsigned int _93;
  sizetype _94;
  const ComSignalRefType * _95;
  long unsigned int _97;
  unsigned int _98;
  unsigned int _99;
  sizetype _100;
  long unsigned int _102;
  short unsigned int _103;
  unsigned int _104;
  unsigned int _105;
  sizetype _106;
  const struct Com_ConfigType * Com_gConfigPtr.717_108;
  short unsigned int _109;
  unsigned int _110;
  short unsigned int _111;
  short unsigned int _112;
  unsigned int _113;
  unsigned int _114;
  uint8 * _115;
  unsigned char _116;
  short unsigned int _117;
  unsigned int _118;
  unsigned int _119;
  unsigned int _120;
  int _121;
  unsigned char _122;
  unsigned char _123;
  sizetype _124;
  Com_RxDMNextDueTimeType * _125;
  long unsigned int _127;
  short unsigned int _128;
  short unsigned int _129;
  short unsigned int _130;
  int _131;
  void (*<T60c>) (void) _132;
  short unsigned int _134;
  uint8 * Com_gDataMemPtr.691_136;
  const struct Com_ConfigType * Com_gConfigPtr.707_137;
  short unsigned int _138;
  sizetype _139;
  long unsigned int _140;
  unsigned int _142;
  unsigned int _143;
  sizetype _144;
  const ComIPduRefType * _145;
  long unsigned int _147;
  unsigned int _148;
  unsigned int _149;
  sizetype _150;
  const struct Com_ConfigType * Com_gConfigPtr.698_152;
  short unsigned int _153;
  int _154;
  int _155;
  int _156;
  sizetype _157;
  uint8 * _158;
  unsigned char _159;
  unsigned char _160;
  sizetype _161;
  Com_RxDMNextDueTimeType * _162;
  unsigned char _164;
  short unsigned int _165;
  short unsigned int _166;
  const struct Com_ConfigType * Com_gConfigPtr.703_168;
  long unsigned int _169;
  unsigned int _171;
  unsigned int _172;
  sizetype _173;
  const Com_CbkRxTOutIdxType * _174;
  short unsigned int _175;
  int _176;
  void (*<T60c>) (void) _177;
  int _179;
  short unsigned int _180;
  int _181;
  short unsigned int _182;
  int _183;
  int _184;
  short unsigned int _186;

  <bb 2> [local count: 583555347]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.627_1 = Com_InitStatus;
  if (Com_InitStatus.627_1 == 1)
    goto <bb 3>; [20.24%]
  else
    goto <bb 36>; [79.76%]

  <bb 3> [local count: 118111602]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_GlobalTime.628_2 = Com_GlobalTime;
  _3 = Com_GlobalTime.628_2 + 1;
  Com_GlobalTime = _3;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.629_4 = Com_gConfigPtr;
  RxPduCount_26 = Com_gConfigPtr.629_4->ComRxIPduArraySize;
  # DEBUG RxPduCount => RxPduCount_26
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.630_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.630_5->ComRxIPduRef;
  _7 = (unsigned int) i_18;
  _8 = _7 * 48;
  _9 = _6 + _8;
  IPduPtr_31 = Com_gConfigPtr.630_5 + _9;
  # DEBUG IPduPtr => IPduPtr_31
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.632_10 = Com_gDataMemPtr;
  _11 = Com_gConfigPtr.630_5->ComRxIPduStatusBase;
  _12 = (int) _11;
  _13 = (int) i_18;
  _14 = _12 + _13;
  _15 = (sizetype) _14;
  _16 = Com_gDataMemPtr.632_10 + _15;
  _17 = *_16;
  _27 = _17 & 8;
  if (_27 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 315357974]:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (_16, 3);
  # DEBUG BEGIN_STMT
  # DEBUG D#108 => i_18
  Com_EB_NotifyReceivers.isra.0 (IPduPtr_31);

  <bb 6> [local count: 955630224]:
  # DEBUG BEGIN_STMT
  i_34 = i_18 + 1;
  # DEBUG i => i_34

  <bb 7> [local count: 1073741824]:
  # i_18 = PHI <0(3), i_34(6)>
  # DEBUG i => i_18
  # DEBUG BEGIN_STMT
  if (i_18 < RxPduCount_26)
    goto <bb 4>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Com_EB_CheckRxDMTable
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  globalTime_135 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_135
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 17>; [100.00%]

  <bb 9> [local count: 955630213]:
  # DEBUG BEGIN_STMT
  # DEBUG invokeCbks => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.691_136 = Com_gDataMemPtr;
  _138 = Com_gConfigPtr.707_137->ComRxTimeoutQueueBase;
  _139 = (sizetype) _138;
  # DEBUG RxTimeoutQueueBase => Com_gDataMemPtr.691_136 + _139
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _140 = Com_gConfigPtr.707_137->ComRxTimeoutQueueListRef;
  _142 = (unsigned int) i_141;
  _143 = _142 * 2;
  _144 = _140 + _143;
  _145 = Com_gConfigPtr.707_137 + _144;
  AktPduId_146 = *_145;
  # DEBUG AktPduId => AktPduId_146
  # DEBUG BEGIN_STMT
  _147 = Com_gConfigPtr.707_137->ComRxIPduRef;
  _148 = (unsigned int) AktPduId_146;
  _149 = _148 * 48;
  _150 = _147 + _149;
  IPduPtr_151 = Com_gConfigPtr.707_137 + _150;
  # DEBUG IPduPtr => IPduPtr_151
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.698_152 = Com_gConfigPtr;
  _153 = Com_gConfigPtr.698_152->ComRxIPduStatusBase;
  _154 = (int) _153;
  _155 = (int) AktPduId_146;
  _156 = _154 + _155;
  _157 = (sizetype) _156;
  _158 = Com_gDataMemPtr.691_136 + _157;
  _159 = *_158;
  _160 = _159 & 2;
  if (_160 != 0)
    goto <bb 11>; [67.00%]
  else
    goto <bb 10>; [33.00%]

  <bb 10> [local count: 315357970]:
  # DEBUG invokeCbks => 0
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 11> [local count: 640272243]:
  # DEBUG BEGIN_STMT
  _161 = _139 + _143;
  _162 = Com_gDataMemPtr.691_136 + _161;
  CompTime_163 = *_162;
  # DEBUG CompTime => CompTime_163
  # DEBUG BEGIN_STMT
  if (globalTime_135 == CompTime_163)
    goto <bb 12>; [16.00%]
  else
    goto <bb 13>; [84.00%]

  <bb 12> [local count: 102443559]:
  # DEBUG BEGIN_STMT
  _164 = _159 | 4;
  *_158 = _164;
  # DEBUG BEGIN_STMT
  _165 = IPduPtr_151->ComRxTimeoutFactorValue;
  _166 = MEM[(short unsigned int *)IPduPtr_151 + 36B];
  # DEBUG D#1 => IPduPtr_151
  Com_EB_RxDMQueue.isra.0 (_166, _165);
  # DEBUG BEGIN_STMT
  # DEBUG invokeCbks => 1
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_167 = IPduPtr_151->ComRxTimeoutNotificationFirst;
  # DEBUG j => j_167
  goto <bb 15>; [100.00%]

  <bb 13> [local count: 537828684]:
  # DEBUG invokeCbks => 0
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 14> [local count: 828861526]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.703_168 = Com_gConfigPtr;
  _169 = Com_gConfigPtr.703_168->ComRxTimeoutNotificationRef;
  _171 = (unsigned int) j_170;
  _172 = _171 * 2;
  _173 = _169 + _172;
  _174 = Com_gConfigPtr.703_168 + _173;
  _175 = *_174;
  _176 = (int) _175;
  _177 = Com_CbkRxTOut_Array[_176];
  _177 ();
  # DEBUG BEGIN_STMT
  j_178 = j_170 + 1;
  # DEBUG j => j_178

  <bb 15> [local count: 931305086]:
  # j_170 = PHI <j_167(12), j_178(14)>
  # DEBUG j => j_170
  # DEBUG BEGIN_STMT
  _179 = (int) j_170;
  _180 = IPduPtr_151->ComRxTimeoutNotificationFirst;
  _181 = (int) _180;
  _182 = IPduPtr_151->ComRxTimeoutNotificationNum;
  _183 = (int) _182;
  _184 = _181 + _183;
  if (_179 < _184)
    goto <bb 14>; [89.00%]
  else
    goto <bb 16>; [11.00%]

  <bb 16> [local count: 955630214]:
  # DEBUG BEGIN_STMT
  i_185 = i_141 + 1;
  # DEBUG i => i_185

  <bb 17> [local count: 1073741813]:
  # i_141 = PHI <0(8), i_185(16)>
  # DEBUG i => i_141
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.707_137 = Com_gConfigPtr;
  _186 = Com_gConfigPtr.707_137->ComRxTimeoutQueueMax;
  if (i_141 < _186)
    goto <bb 9>; [89.00%]
  else
    goto <bb 18>; [11.00%]

  <bb 18> [local count: 118111599]:
  # DEBUG BEGIN_STMT
  # DEBUG j => NULL
  # DEBUG AktPduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG i => NULL
  # DEBUG CompTime => NULL
  # DEBUG globalTime => NULL
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Com_EB_CheckRxSignalDMTable
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  globalTime_85 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_85
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 26>; [100.00%]

  <bb 19> [local count: 955630201]:
  # DEBUG BEGIN_STMT
  # DEBUG invokeCbks => 0
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.708_86 = Com_gDataMemPtr;
  _88 = Com_gConfigPtr.721_87->ComRxTimeoutSignalQueueBase;
  _89 = (sizetype) _88;
  # DEBUG RxTimeoutSignalQueueBase => Com_gDataMemPtr.708_86 + _89
  # DEBUG BEGIN_STMT
  _90 = Com_gConfigPtr.721_87->ComRxTimeoutSignalQueueListRef;
  _92 = (unsigned int) i_91;
  _93 = _92 * 2;
  _94 = _90 + _93;
  _95 = Com_gConfigPtr.721_87 + _94;
  AktSignalId_96 = *_95;
  # DEBUG AktSignalId => AktSignalId_96
  # DEBUG BEGIN_STMT
  _97 = Com_gConfigPtr.721_87->ComRxSignalRef;
  _98 = (unsigned int) AktSignalId_96;
  _99 = _98 * 20;
  _100 = _97 + _99;
  SignalPtr_101 = Com_gConfigPtr.721_87 + _100;
  # DEBUG SignalPtr => SignalPtr_101
  # DEBUG BEGIN_STMT
  _102 = Com_gConfigPtr.721_87->ComRxSignalExtRef;
  _103 = SignalPtr_101->ComSignalExtRef;
  _104 = (unsigned int) _103;
  _105 = _104 * 14;
  _106 = _102 + _105;
  SignalExtPtr_107 = Com_gConfigPtr.721_87 + _106;
  # DEBUG SignalExtPtr => SignalExtPtr_107
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.717_108 = Com_gConfigPtr;
  _109 = Com_gConfigPtr.717_108->ComRxTimeoutSignalStatusQueueBase;
  _110 = (unsigned int) _109;
  _111 = SignalExtPtr_107->RxSigDMQueueRef;
  _112 = _111 >> 2;
  _113 = (unsigned int) _112;
  _114 = _110 + _113;
  _115 = Com_gDataMemPtr.708_86 + _114;
  _116 = *_115;
  _117 = _111 & 3;
  _118 = (unsigned int) _117;
  _119 = _118 * 2;
  _120 = _119 + 1;
  _121 = 1 << _120;
  _122 = (unsigned char) _121;
  _123 = _116 & _122;
  if (_123 != 0)
    goto <bb 21>; [67.00%]
  else
    goto <bb 20>; [33.00%]

  <bb 20> [local count: 315357966]:
  # DEBUG invokeCbks => 0
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 25>; [100.00%]

  <bb 21> [local count: 640272235]:
  # DEBUG BEGIN_STMT
  _124 = _89 + _93;
  _125 = Com_gDataMemPtr.708_86 + _124;
  CompTime_126 = *_125;
  # DEBUG CompTime => CompTime_126
  # DEBUG BEGIN_STMT
  if (globalTime_85 == CompTime_126)
    goto <bb 22>; [34.00%]
  else
    goto <bb 23>; [66.00%]

  <bb 22> [local count: 217692559]:
  # DEBUG BEGIN_STMT
  _127 = _119;
  TS_AtomicSetBit_8 (_115, _127);
  # DEBUG BEGIN_STMT
  _128 = SignalExtPtr_107->ComRxTimeoutFactorValue;
  _129 = MEM[(short unsigned int *)SignalExtPtr_107 + 6B];
  # DEBUG D#3 => SignalExtPtr_107
  Com_EB_RxDMSignalQueue.isra.0 (_129, _128);
  # DEBUG BEGIN_STMT
  # DEBUG invokeCbks => 1
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _130 = SignalExtPtr_107->ComRxTimeoutNotification;
  if (_130 != 65535)
    goto <bb 24>; [66.00%]
  else
    goto <bb 25>; [34.00%]

  <bb 23> [local count: 422579674]:
  # DEBUG invokeCbks => 0
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 25>; [100.00%]

  <bb 24> [local count: 143677089]:
  # DEBUG BEGIN_STMT
  _131 = (int) _130;
  _132 = Com_CbkRxTOut_Array[_131];
  _132 ();

  <bb 25> [local count: 955630199]:
  # DEBUG BEGIN_STMT
  i_133 = i_91 + 1;
  # DEBUG i => i_133

  <bb 26> [local count: 1073741800]:
  # i_91 = PHI <0(18), i_133(25)>
  # DEBUG i => i_91
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.721_87 = Com_gConfigPtr;
  _134 = Com_gConfigPtr.721_87->ComRxTimeoutSignalQueueMax;
  if (i_91 < _134)
    goto <bb 19>; [89.00%]
  else
    goto <bb 27>; [11.00%]

  <bb 27> [local count: 118111598]:
  # DEBUG BEGIN_STMT
  # DEBUG SignalExtPtr => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG AktSignalId => NULL
  # DEBUG i => NULL
  # DEBUG CompTime => NULL
  # DEBUG globalTime => NULL
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Com_EB_CheckRxSignalGroupDMTable
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  globalTime_35 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_35
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 35>; [100.00%]

  <bb 28> [local count: 955630189]:
  # DEBUG BEGIN_STMT
  # DEBUG invokeCbks => 0
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.722_36 = Com_gDataMemPtr;
  _38 = Com_gConfigPtr.735_37->ComRxTimeoutSignalGroupQueueBase;
  _39 = (sizetype) _38;
  # DEBUG RxTimeoutSignalGroupQueueBase => Com_gDataMemPtr.722_36 + _39
  # DEBUG BEGIN_STMT
  _40 = Com_gConfigPtr.735_37->ComRxTimeoutSignalGroupQueueListRef;
  _42 = (unsigned int) i_41;
  _43 = _42 * 2;
  _44 = _40 + _43;
  _45 = Com_gConfigPtr.735_37 + _44;
  AktSignalGId_46 = *_45;
  # DEBUG AktSignalGId => AktSignalGId_46
  # DEBUG BEGIN_STMT
  _47 = Com_gConfigPtr.735_37->ComRxSignalGroupRef;
  _48 = (unsigned int) AktSignalGId_46;
  _49 = _48 * 10;
  _50 = _47 + _49;
  SignalGPtr_51 = Com_gConfigPtr.735_37 + _50;
  # DEBUG SignalGPtr => SignalGPtr_51
  # DEBUG BEGIN_STMT
  _52 = Com_gConfigPtr.735_37->ComRxSignalExtRef;
  _53 = SignalGPtr_51->ComSignalExtRef;
  _54 = (unsigned int) _53;
  _55 = _54 * 14;
  _56 = _52 + _55;
  SignalExtPtr_57 = Com_gConfigPtr.735_37 + _56;
  # DEBUG SignalExtPtr => SignalExtPtr_57
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.731_58 = Com_gConfigPtr;
  _59 = Com_gConfigPtr.731_58->ComRxDMInvSignalGroupStatusQueueBase;
  _60 = (unsigned int) _59;
  _61 = SignalExtPtr_57->RxSigDMQueueRef;
  _62 = _61 >> 2;
  _63 = (unsigned int) _62;
  _64 = _60 + _63;
  _65 = Com_gDataMemPtr.722_36 + _64;
  _66 = *_65;
  _67 = _61 & 3;
  _68 = (unsigned int) _67;
  _69 = _68 * 2;
  _70 = _69 + 1;
  _71 = 1 << _70;
  _72 = (unsigned char) _71;
  _73 = _66 & _72;
  if (_73 != 0)
    goto <bb 30>; [67.00%]
  else
    goto <bb 29>; [33.00%]

  <bb 29> [local count: 315357963]:
  # DEBUG invokeCbks => 0
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 34>; [100.00%]

  <bb 30> [local count: 640272227]:
  # DEBUG BEGIN_STMT
  _74 = _39 + _43;
  _75 = Com_gDataMemPtr.722_36 + _74;
  CompTime_76 = *_75;
  # DEBUG CompTime => CompTime_76
  # DEBUG BEGIN_STMT
  if (globalTime_35 == CompTime_76)
    goto <bb 31>; [34.00%]
  else
    goto <bb 32>; [66.00%]

  <bb 31> [local count: 217692557]:
  # DEBUG BEGIN_STMT
  _77 = _69;
  TS_AtomicSetBit_8 (_65, _77);
  # DEBUG BEGIN_STMT
  _78 = SignalExtPtr_57->ComRxTimeoutFactorValue;
  _79 = MEM[(short unsigned int *)SignalGPtr_51 + 8B];
  # DEBUG D#2 => SignalGPtr_51
  Com_EB_RxDMSignalGroupQueue.isra.0 (_79, _78);
  # DEBUG BEGIN_STMT
  # DEBUG invokeCbks => 1
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _80 = SignalExtPtr_57->ComRxTimeoutNotification;
  if (_80 != 65535)
    goto <bb 33>; [66.00%]
  else
    goto <bb 34>; [34.00%]

  <bb 32> [local count: 422579669]:
  # DEBUG invokeCbks => 0
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 34>; [100.00%]

  <bb 33> [local count: 143677087]:
  # DEBUG BEGIN_STMT
  _81 = (int) _80;
  _82 = Com_CbkRxTOut_Array[_81];
  _82 ();

  <bb 34> [local count: 955630189]:
  # DEBUG BEGIN_STMT
  i_83 = i_41 + 1;
  # DEBUG i => i_83

  <bb 35> [local count: 1073741786]:
  # i_41 = PHI <0(27), i_83(34)>
  # DEBUG i => i_41
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.735_37 = Com_gConfigPtr;
  _84 = Com_gConfigPtr.735_37->ComRxTimeoutSignalGroupQueueMax;
  if (i_41 < _84)
    goto <bb 28>; [89.00%]
  else
    goto <bb 36>; [11.00%]

  <bb 36> [local count: 583555342]:
  # DEBUG SignalExtPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG AktSignalGId => NULL
  # DEBUG i => NULL
  # DEBUG CompTime => NULL
  # DEBUG globalTime => NULL
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_MainFunctionTx (Com_MainFunctionTx, funcdef_no=249, decl_uid=6013, cgraph_uid=250, symbol_order=254)


Symbols to be put in SSA form
{ D.12496 D.15508 D.15520 D.15555 D.15574 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 113
Number of blocks to update: 112 ( 99%)


Removing basic block 3
Removing basic block 6
Merging blocks 9 and 26
Removing basic block 11
Removing basic block 12
Removing basic block 14
Removing basic block 19
Merging blocks 23 and 101
Merging blocks 24 and 109
Removing basic block 25
Merging blocks 32 and 35
Merging blocks 33 and 30
Merging blocks 54 and 34
Removing basic block 55
Merging blocks 81 and 67
Merging blocks 99 and 82
Removing basic block 100
Removing basic block 108
Merging blocks 112 and 7
Merging blocks 9 and 27
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
;;
;; Loop 1
;;  header 91, latch 90
;;  depth 1, outer 0
;;  nodes: 91 90 87 88 89 7 86 81 82 84 85 83 80 59 79 76 77 78 74 75 72 73 60 70 71 67 68 69 65 66 64 62 63 61 41 58 55 56 57 53 54 42 52 49 50 51 47 48 46 44 45 43 29 40 31 38 39 36 37 35 34 32 33 30 8 28 12 14 15 24 25 26 27 19 23 21 22 20 17 18 16 13 10 11 9 3 6 4 5
;;
;; Loop 2
;;  header 34, latch 33
;;  depth 2, outer 1
;;  nodes: 34 33
;; 2 succs { 91 92 }
;; 3 succs { 4 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 8 87 }
;; 8 succs { 9 29 }
;; 9 succs { 10 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 28 13 16 14 20 15 }
;; 13 succs { 14 }
;; 14 succs { 28 }
;; 15 succs { 28 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 24 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 25 28 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 }
;; 29 succs { 30 41 }
;; 30 succs { 32 31 }
;; 31 succs { 40 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 33 35 }
;; 35 succs { 36 37 }
;; 36 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 }
;; 41 succs { 42 59 }
;; 42 succs { 43 53 }
;; 43 succs { 44 45 }
;; 44 succs { 46 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 49 }
;; 48 succs { 49 }
;; 49 succs { 52 51 50 }
;; 50 succs { 52 }
;; 51 succs { 52 }
;; 52 succs { 53 }
;; 53 succs { 54 55 }
;; 54 succs { 55 }
;; 55 succs { 58 56 }
;; 56 succs { 58 57 }
;; 57 succs { 58 }
;; 58 succs { 59 }
;; 59 succs { 60 80 }
;; 60 succs { 61 72 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 67 }
;; 66 succs { 67 }
;; 67 succs { 70 69 68 }
;; 68 succs { 70 }
;; 69 succs { 70 }
;; 70 succs { 71 72 }
;; 71 succs { 72 }
;; 72 succs { 73 74 }
;; 73 succs { 74 }
;; 74 succs { 75 76 }
;; 75 succs { 76 }
;; 76 succs { 79 77 }
;; 77 succs { 79 78 }
;; 78 succs { 79 }
;; 79 succs { 80 }
;; 80 succs { 81 83 }
;; 81 succs { 82 86 }
;; 82 succs { 86 }
;; 83 succs { 85 84 }
;; 84 succs { 85 86 }
;; 85 succs { 86 }
;; 86 succs { 87 }
;; 87 succs { 88 90 }
;; 88 succs { 89 90 }
;; 89 succs { 90 }
;; 90 succs { 91 }
;; 91 succs { 3 92 }
;; 92 succs { 1 }
Com_MainFunctionTx ()
{
  Com_PeriodicSendNextDueTimeType globalTime;
  Com_PeriodicSendNextDueTimeType CompTime;
  Com_PeriodicSendNextDueTimeType Period;
  uint8 BitRes;
  boolean transmit;
  uint8 QueuedTxDM;
  Com_PeriodicSendNextDueTimeType * const PeriodicQueueValPtr;
  uint8 * const IPduFlagBytePtr;
  const struct ComTxModeMixedNTimesType * TMMixedNTimesPtr;
  const struct ComTxModePeriodicType * TMPeriodicPtr;
  boolean D.15574;
  ComTxModeRepetitionPeriodFactorType globalTime;
  ComTxModeRepetitionPeriodFactorType CompTime;
  ComTxModeRepetitionPeriodFactorType NPeriod;
  uint8 N;
  uint8 BitRes;
  boolean transmit;
  uint8 * const NTimesQueueValRemainingPtr;
  ComTxModeRepetitionPeriodFactorType * const NTimesQueueValNextTimePtr;
  const struct ComTxModeNTimesType * TMNTimesPtr;
  const struct ComTxModeMixedNTimesType * TMMixedNTimesPtr;
  boolean D.15555;
  ComTxTimeoutFactorType globalTime;
  ComTxTimeoutFactorType CompTime;
  uint8 * const IPduFlagBytePtr;
  ComTxTimeoutFactorType * const TxTimeoutQueueValPtr;
  Com_CbkTxTOutIdxType j;
  uint8 CurrentTMS;
  boolean transmit;
  Com_PeriodicSendNextDueTimeType TimeToSendPeriodic;
  uint8 * const IPduFlagBytePtr;
  const struct ComTxModePeriodicType * TMPeriodicPtr;
  const struct ComTxModeMixedNTimesType * TMMixedNTimesPtr;
  boolean D.15520;
  boolean newTM;
  boolean transmit;
  uint8 * const IPduFlagBytePtr;
  boolean D.15508;
  ComTxIPduMinimumDelayTimeFactorType * const MDTQueueValPtr;
  uint8 * const PduFlagPtr;
  ComTxIPduMinimumDelayTimeFactorType CompTime;
  ComTxIPduMinimumDelayTimeFactorType globalTime;
  boolean transmit;
  const struct ComTxIPduType * IPduPtr;
  uint8 * const IPduFlagBytePtr;
  const boolean transmit_ntimes;
  const boolean transmit_cyclic;
  ComIPduRefType PduId;
  unsigned char Com_InitStatus.736_1;
  const struct Com_ConfigType * Com_gConfigPtr.738_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.739_10;
  long unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  sizetype _14;
  uint8 * Com_gDataMemPtr.741_16;
  short unsigned int _17;
  int _18;
  int _19;
  int _20;
  sizetype _21;
  unsigned char _23;
  unsigned char _24;
  short unsigned int _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  int iftmp.743_34;
  unsigned char _36;
  unsigned char _37;
  int iftmp.744_40;
  uint8 * Com_gDataMemPtr.745_43;
  const struct Com_ConfigType * Com_gConfigPtr.746_44;
  short unsigned int _45;
  int _46;
  int _47;
  int _48;
  sizetype _49;
  short unsigned int _51;
  sizetype _52;
  short unsigned int _53;
  unsigned int _54;
  unsigned int _55;
  sizetype _56;
  unsigned char _60;
  unsigned char _61;
  uint8 * Com_gDataMemPtr.749_62;
  const struct Com_ConfigType * Com_gConfigPtr.750_63;
  short unsigned int _64;
  int _65;
  int _66;
  int _67;
  sizetype _68;
  unsigned char _70;
  signed char _71;
  unsigned char _72;
  unsigned char _73;
  uint8 * Com_gDataMemPtr.751_77;
  const struct Com_ConfigType * Com_gConfigPtr.752_78;
  short unsigned int _79;
  int _80;
  int _81;
  int _82;
  sizetype _83;
  unsigned char _85;
  unsigned char iftmp.753_86;
  unsigned char _87;
  unsigned char iftmp.753_88;
  unsigned char iftmp.753_89;
  short unsigned int iftmp.754_90;
  short unsigned int iftmp.754_91;
  long unsigned int _92;
  short unsigned int iftmp.754_93;
  unsigned int _94;
  unsigned int _95;
  sizetype _96;
  short unsigned int iftmp.757_99;
  short unsigned int iftmp.757_100;
  long unsigned int _101;
  short unsigned int iftmp.757_102;
  unsigned int _103;
  unsigned int _104;
  sizetype _105;
  short unsigned int _109;
  unsigned char _110;
  unsigned char _111;
  unsigned char _112;
  unsigned char _113;
  unsigned char _114;
  short unsigned int _115;
  short unsigned int _116;
  uint8 * Com_gDataMemPtr.760_118;
  const struct Com_ConfigType * Com_gConfigPtr.761_119;
  short unsigned int _120;
  int _121;
  int _122;
  int _123;
  sizetype _124;
  short unsigned int _126;
  sizetype _127;
  short unsigned int _128;
  unsigned int _129;
  unsigned int _130;
  sizetype _131;
  unsigned char _135;
  unsigned char _136;
  unsigned char _137;
  unsigned char _138;
  const struct Com_ConfigType * Com_gConfigPtr.764_140;
  long unsigned int _141;
  unsigned int _143;
  unsigned int _144;
  sizetype _145;
  const Com_CbkTxTOutIdxType * _146;
  short unsigned int _147;
  int _148;
  void (*<T604>) (void) _149;
  int _151;
  short unsigned int _152;
  int _153;
  short unsigned int _154;
  int _155;
  int _156;
  unsigned char _157;
  unsigned char _158;
  unsigned char _160;
  unsigned char iftmp.767_161;
  unsigned char _162;
  unsigned char iftmp.767_163;
  unsigned char iftmp.767_164;
  uint8 * Com_gDataMemPtr.768_165;
  const struct Com_ConfigType * Com_gConfigPtr.769_166;
  short unsigned int _167;
  sizetype _168;
  short unsigned int _169;
  sizetype _170;
  sizetype _171;
  short unsigned int _173;
  sizetype _174;
  unsigned int _175;
  sizetype _176;
  const struct Com_ConfigType * Com_gConfigPtr.773_180;
  short unsigned int _181;
  int _182;
  int _183;
  int _184;
  sizetype _185;
  uint8 * _186;
  unsigned char _187;
  unsigned char _188;
  unsigned char _190;
  unsigned char iftmp.774_191;
  unsigned char _192;
  unsigned char iftmp.774_193;
  short unsigned int iftmp.775_194;
  short unsigned int iftmp.775_195;
  unsigned char iftmp.774_196;
  long unsigned int _197;
  short unsigned int iftmp.775_198;
  unsigned int _199;
  unsigned int _200;
  sizetype _201;
  long unsigned int _204;
  unsigned int _205;
  unsigned int _206;
  sizetype _207;
  short unsigned int _212;
  uint8 * Com_gDataMemPtr.780_216;
  const struct Com_ConfigType * Com_gConfigPtr.781_217;
  short unsigned int _218;
  sizetype _219;
  short unsigned int _220;
  unsigned int _221;
  unsigned int _222;
  sizetype _223;
  short unsigned int _225;
  int _226;
  int _227;
  int _228;
  sizetype _229;
  unsigned char _233;
  unsigned char _234;
  unsigned char _236;
  unsigned char iftmp.784_237;
  unsigned char _238;
  unsigned char iftmp.784_239;
  short unsigned int iftmp.785_240;
  short unsigned int iftmp.785_241;
  unsigned char iftmp.784_242;
  const struct Com_ConfigType * Com_gConfigPtr.786_243;
  long unsigned int _244;
  short unsigned int iftmp.785_245;
  unsigned int _246;
  unsigned int _247;
  sizetype _248;
  const struct Com_ConfigType * Com_gConfigPtr.788_251;
  long unsigned int _252;
  unsigned int _253;
  unsigned int _254;
  sizetype _255;
  unsigned char _258;
  unsigned char _259;
  unsigned char _260;
  unsigned char _261;
  short unsigned int _264;
  short unsigned int _267;
  short unsigned int _268;
  unsigned char _270;
  unsigned char _271;
  unsigned char _272;
  unsigned char _273;
  unsigned char _274;
  uint8 * Com_gDataMemPtr.790_275;
  const struct Com_ConfigType * Com_gConfigPtr.791_276;
  short unsigned int _277;
  unsigned int _278;
  short unsigned int _279;
  short unsigned int _280;
  unsigned int _281;
  unsigned int _282;
  uint8 * _283;
  unsigned char _284;
  short unsigned int _285;
  unsigned int _286;
  int _287;
  unsigned char _288;
  unsigned char _289;
  short unsigned int _290;
  sizetype _291;
  uint8 * _292;

  <bb 2> [local count: 347360571]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.736_1 = Com_InitStatus;
  if (Com_InitStatus.736_1 == 1)
    goto <bb 91>; [34.00%]
  else
    goto <bb 92>; [66.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  # DEBUG PduId => PduId_4
  # DEBUG INLINE_ENTRY Com_EB_MainFunctionTx_hlp
  # DEBUG BEGIN_STMT
  # DEBUG transmit => 0
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.739_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.739_10->ComTxIPduRef;
  _12 = (unsigned int) PduId_4;
  _13 = _12 * 64;
  _14 = _11 + _13;
  IPduPtr_15 = Com_gConfigPtr.739_10 + _14;
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.741_16 = Com_gDataMemPtr;
  _17 = Com_gConfigPtr.739_10->ComTxIPduStatusBase;
  _18 = (int) _17;
  _19 = (int) PduId_4;
  _20 = _18 + _19;
  _21 = (sizetype) _20;
  IPduFlagBytePtr_22 = Com_gDataMemPtr.741_16 + _21;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_22
  # DEBUG BEGIN_STMT
  _23 = *IPduFlagBytePtr_22;
  _24 = _23 & 2;
  if (_24 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 4> [local count: 315357974]:
  # DEBUG BEGIN_STMT
  _25 = MEM[(short unsigned int *)IPduPtr_15 + 38B];
  # DEBUG D#64 => IPduPtr_15
  # DEBUG PduId => PduId_4
  # DEBUG INLINE_ENTRY Com_EB_CheckMdtforPdu
  # DEBUG IPduPtr => D#64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.745_43 = Com_gDataMemPtr;
  Com_gConfigPtr.746_44 = Com_gConfigPtr;
  _45 = Com_gConfigPtr.746_44->ComTxIPduStatusBase;
  _46 = (int) _45;
  _47 = (int) PduId_4;
  _48 = _46 + _47;
  _49 = (sizetype) _48;
  PduFlagPtr_50 = Com_gDataMemPtr.745_43 + _49;
  # DEBUG PduFlagPtr => PduFlagPtr_50
  # DEBUG BEGIN_STMT
  _51 = Com_gConfigPtr.746_44->ComMDTQueueBase;
  _52 = (sizetype) _51;
  # DEBUG MDTQueueBase => Com_gDataMemPtr.745_43 + _52
  # DEBUG BEGIN_STMT
  _53 = _25;
  _54 = (unsigned int) _53;
  _55 = _54 * 2;
  _56 = _52 + _55;
  MDTQueueValPtr_57 = Com_gDataMemPtr.745_43 + _56;
  # DEBUG MDTQueueValPtr => MDTQueueValPtr_57
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_58 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_58
  # DEBUG BEGIN_STMT
  CompTime_59 = *MDTQueueValPtr_57;
  # DEBUG CompTime => CompTime_59
  # DEBUG BEGIN_STMT
  if (globalTime_58 == CompTime_59)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 107221711]:
  # DEBUG BEGIN_STMT
  _60 = *PduFlagPtr_50;
  _61 = _60 & 253;
  *PduFlagPtr_50 = _61;

  <bb 6> [local count: 315357974]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 7> [local count: 955630223]:
  # DEBUG PduId => NULL
  # DEBUG globalTime => NULL
  # DEBUG CompTime => NULL
  # DEBUG PduFlagPtr => NULL
  # DEBUG MDTQueueValPtr => NULL
  # DEBUG BEGIN_STMT
  _26 = *IPduFlagBytePtr_22;
  _27 = _26 & 1;
  if (_27 != 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 87>; [67.00%]

  <bb 8> [local count: 315357974]:
  # DEBUG BEGIN_STMT
  # DEBUG PduId => PduId_4
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG INLINE_ENTRY Com_EB_CheckTMSforPdu
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG transmit => 0
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.749_62 = Com_gDataMemPtr;
  Com_gConfigPtr.750_63 = Com_gConfigPtr;
  _64 = Com_gConfigPtr.750_63->ComTxIPduStatusBase;
  _65 = (int) _64;
  _66 = (int) PduId_4;
  _67 = _65 + _66;
  _68 = (sizetype) _67;
  IPduFlagBytePtr_69 = Com_gDataMemPtr.749_62 + _68;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_69
  # DEBUG BEGIN_STMT
  _70 = *IPduFlagBytePtr_69;
  _71 = (signed char) _70;
  if (_71 < 0)
    goto <bb 9>; [25.50%]
  else
    goto <bb 29>; [74.50%]

  <bb 9> [local count: 80416283]:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_69, 7);
  # DEBUG BEGIN_STMT
  _72 = *IPduFlagBytePtr_69;
  _73 = _72 >> 6;
  newTM_74 = _73 & 1;
  # DEBUG newTM => newTM_74
  # DEBUG BEGIN_STMT
  # DEBUG PduId => PduId_4
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG CurrentTM => newTM_74
  # DEBUG INLINE_ENTRY Com_EB_TMSwitch
  # DEBUG BEGIN_STMT
  # DEBUG transmit => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeToSendPeriodic => 0
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.751_77 = Com_gDataMemPtr;
  Com_gConfigPtr.752_78 = Com_gConfigPtr;
  _79 = Com_gConfigPtr.752_78->ComTxIPduStatusBase;
  _80 = (int) _79;
  _81 = (int) PduId_4;
  _82 = _80 + _81;
  _83 = (sizetype) _82;
  IPduFlagBytePtr_84 = Com_gDataMemPtr.751_77 + _83;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_84
  # DEBUG BEGIN_STMT
  if (newTM_74 == 1)
    goto <bb 10>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 10> [local count: 27341536]:
  _85 = IPduPtr_15->ComTxModeModes;
  iftmp.753_86 = _85 & 15;
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 53074747]:
  _87 = IPduPtr_15->ComTxModeModes;
  iftmp.753_88 = _87 >> 4;

  <bb 12> [local count: 80416283]:
  # iftmp.753_89 = PHI <iftmp.753_86(10), iftmp.753_88(11)>
  # DEBUG mode => iftmp.753_89
  # DEBUG BEGIN_STMT
  switch (iftmp.753_89) <default: <L11> [16.67%], case 0: <L5> [16.67%], case 1: <L8> [16.67%], case 2: <L6> [16.67%], case 3: <L8> [16.67%], case 4: <L9> [16.67%], case 5: <L7> [16.67%]>

  <bb 13> [local count: 13405394]:
<L5>:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_84, 5);

  <bb 14> [local count: 26810789]:
<L6>:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_84, 2);
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_84, 3);
  # DEBUG BEGIN_STMT
  # DEBUG TimeToSendPeriodic => 0
  # DEBUG BEGIN_STMT
  goto <bb 28>; [100.00%]

  <bb 15> [local count: 13405394]:
<L7>:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_84, 2);
  # DEBUG BEGIN_STMT
  # DEBUG TimeToSendPeriodic => 0
  # DEBUG BEGIN_STMT
  goto <bb 28>; [100.00%]

  <bb 16> [local count: 13405394]:
<L8>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (newTM_74 == 1)
    goto <bb 17>; [34.00%]
  else
    goto <bb 18>; [66.00%]

  <bb 17> [local count: 4557834]:
  iftmp.754_90 = IPduPtr_15->ComTxModeTrueRef;
  goto <bb 19>; [100.00%]

  <bb 18> [local count: 8847560]:
  iftmp.754_91 = IPduPtr_15->ComTxModeFalseRef;

  <bb 19> [local count: 13405394]:
  # iftmp.754_93 = PHI <iftmp.754_90(17), iftmp.754_91(18)>
  # DEBUG TMRef => iftmp.754_93
  # DEBUG BEGIN_STMT
  _92 = Com_gConfigPtr.752_78->ComTxModePeriodicRef;
  _94 = (unsigned int) iftmp.754_93;
  _95 = _94 * 4;
  _96 = _92 + _95;
  TMPeriodicPtr_97 = Com_gConfigPtr.752_78 + _96;
  # DEBUG TMPeriodicPtr => TMPeriodicPtr_97
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_98 = TMPeriodicPtr_97->ComTxModeTimePeriodFactor;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_98
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_84, 3);
  # DEBUG BEGIN_STMT
  goto <bb 24>; [100.00%]

  <bb 20> [local count: 13405394]:
<L9>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (newTM_74 == 1)
    goto <bb 21>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 21> [local count: 4557834]:
  iftmp.757_99 = IPduPtr_15->ComTxModeTrueRef;
  goto <bb 23>; [100.00%]

  <bb 22> [local count: 8847560]:
  iftmp.757_100 = IPduPtr_15->ComTxModeFalseRef;

  <bb 23> [local count: 13405394]:
  # iftmp.757_102 = PHI <iftmp.757_99(21), iftmp.757_100(22)>
  # DEBUG TMRef => iftmp.757_102
  # DEBUG BEGIN_STMT
  _101 = Com_gConfigPtr.752_78->ComTxModeMixedNTimesRef;
  _103 = (unsigned int) iftmp.757_102;
  _104 = _103 * 8;
  _105 = _101 + _104;
  TMMixedNTimesPtr_106 = Com_gConfigPtr.752_78 + _105;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_106
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_107 = TMMixedNTimesPtr_106->ComTxModeTimePeriodFactor;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_107
  # DEBUG BEGIN_STMT

  <bb 24> [local count: 26810789]:
  # TimeToSendPeriodic_108 = PHI <TimeToSendPeriodic_98(19), TimeToSendPeriodic_107(23)>
<L10>:
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_108
  # DEBUG BEGIN_STMT
  if (TimeToSendPeriodic_108 != 0)
    goto <bb 25>; [33.00%]
  else
    goto <bb 28>; [67.00%]

  <bb 25> [local count: 8847560]:
  # DEBUG BEGIN_STMT
  _109 = IPduPtr_15->PeriodicQueueRef;
  Com_EB_PeriodicSendQueue (TimeToSendPeriodic_108, _109);
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_84, 2);
  # DEBUG BEGIN_STMT
  _110 = IPduPtr_15->ComTxIPduFlags;
  _111 = _110 >> 1;
  _112 = _111 & 1;
  if (_112 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 26> [local count: 4423780]:
  # DEBUG BEGIN_STMT
  _113 = *IPduFlagBytePtr_84;
  _114 = _113 & 32;
  if (_114 == 0)
    goto <bb 27>; [33.00%]
  else
    goto <bb 28>; [67.00%]

  <bb 27> [local count: 1459847]:
  # DEBUG BEGIN_STMT
  _115 = IPduPtr_15->ComTxTimeoutFactorValue;
  _116 = IPduPtr_15->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_4, _115, _116);

  <bb 28> [local count: 80432367]:
  # transmit_117 = PHI <0(12), 0(14), 0(15), 0(24), 1(25), 1(26), 1(27)>
<L11>:
  # DEBUG TimeToSendPeriodic => NULL
  # DEBUG transmit => transmit_117
  # DEBUG BEGIN_STMT
  _322 = transmit_117;
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG CurrentTM => NULL
  # DEBUG TMMixedNTimesPtr => NULL
  # DEBUG TMPeriodicPtr => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG TimeToSendPeriodic => NULL
  # DEBUG transmit => NULL
  transmit_75 = _322;
  # DEBUG transmit => transmit_75

  <bb 29> [local count: 315374057]:
  # transmit_76 = PHI <0(8), transmit_75(28)>
  # DEBUG transmit => transmit_76
  # DEBUG BEGIN_STMT
  _323 = transmit_76;
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG transmit => NULL
  # DEBUG newTM => NULL
  transmit_28 = _323;
  # DEBUG transmit => transmit_28
  # DEBUG BEGIN_STMT
  _29 = *IPduFlagBytePtr_22;
  _30 = _29 & 32;
  if (_30 != 0)
    goto <bb 30>; [33.00%]
  else
    goto <bb 41>; [67.00%]

  <bb 30> [local count: 104073439]:
  # DEBUG BEGIN_STMT
  # DEBUG PduId => PduId_4
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG INLINE_ENTRY Com_EB_CheckTxDMforPdu
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG timeout => 0
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.760_118 = Com_gDataMemPtr;
  Com_gConfigPtr.761_119 = Com_gConfigPtr;
  _120 = Com_gConfigPtr.761_119->ComTxIPduStatusBase;
  _121 = (int) _120;
  _122 = (int) PduId_4;
  _123 = _121 + _122;
  _124 = (sizetype) _123;
  IPduFlagBytePtr_125 = Com_gDataMemPtr.760_118 + _124;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_125
  # DEBUG BEGIN_STMT
  _126 = Com_gConfigPtr.761_119->ComTxTimeoutQueueBase;
  _127 = (sizetype) _126;
  # DEBUG TxTimeoutQueueBase => Com_gDataMemPtr.760_118 + _127
  # DEBUG BEGIN_STMT
  _128 = IPduPtr_15->TxDMQueueRef;
  _129 = (unsigned int) _128;
  _130 = _129 * 2;
  _131 = _127 + _130;
  TxTimeoutQueueValPtr_132 = Com_gDataMemPtr.760_118 + _131;
  # DEBUG TxTimeoutQueueValPtr => TxTimeoutQueueValPtr_132
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_133 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_133
  # DEBUG BEGIN_STMT
  CompTime_134 = *TxTimeoutQueueValPtr_132;
  # DEBUG CompTime => CompTime_134
  # DEBUG BEGIN_STMT
  if (globalTime_133 == CompTime_134)
    goto <bb 32>; [34.00%]
  else
    goto <bb 31>; [66.00%]

  <bb 31> [local count: 68688470]:
  # DEBUG timeout => 0
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 40>; [100.00%]

  <bb 32> [local count: 35384969]:
  # DEBUG BEGIN_STMT
  # DEBUG timeout => 1
  # DEBUG BEGIN_STMT
  _135 = *IPduFlagBytePtr_125;
  _136 = _135 & 223;
  # DEBUG BEGIN_STMT
  _137 = _136 & 247;
  # DEBUG BEGIN_STMT
  _138 = _137 & 253;
  *IPduFlagBytePtr_125 = _138;
  # DEBUG timeout => 1
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_139 = IPduPtr_15->ComTxTimeoutNotificationFirst;
  # DEBUG j => j_139
  goto <bb 34>; [100.00%]

  <bb 33> [local count: 286296570]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.764_140 = Com_gConfigPtr;
  _141 = Com_gConfigPtr.764_140->ComTxTimeoutNotificationRef;
  _143 = (unsigned int) j_142;
  _144 = _143 * 2;
  _145 = _141 + _144;
  _146 = Com_gConfigPtr.764_140 + _145;
  _147 = *_146;
  _148 = (int) _147;
  _149 = Com_CbkTxTOut_Array[_148];
  _149 ();
  # DEBUG BEGIN_STMT
  j_150 = j_142 + 1;
  # DEBUG j => j_150

  <bb 34> [local count: 321681540]:
  # j_142 = PHI <j_139(32), j_150(33)>
  # DEBUG j => j_142
  # DEBUG BEGIN_STMT
  _151 = (int) j_142;
  _152 = IPduPtr_15->ComTxTimeoutNotificationFirst;
  _153 = (int) _152;
  _154 = IPduPtr_15->ComTxTimeoutNotificationNum;
  _155 = (int) _154;
  _156 = _153 + _155;
  if (_151 < _156)
    goto <bb 33>; [89.00%]
  else
    goto <bb 35>; [11.00%]

  <bb 35> [local count: 35384969]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _157 = *IPduFlagBytePtr_125;
  _158 = _157 >> 6;
  CurrentTMS_159 = _158 & 1;
  # DEBUG CurrentTMS => CurrentTMS_159
  # DEBUG BEGIN_STMT
  if (CurrentTMS_159 != 0)
    goto <bb 36>; [50.00%]
  else
    goto <bb 37>; [50.00%]

  <bb 36> [local count: 17692485]:
  _160 = IPduPtr_15->ComTxModeModes;
  iftmp.767_161 = _160 & 15;
  goto <bb 38>; [100.00%]

  <bb 37> [local count: 17692485]:
  _162 = IPduPtr_15->ComTxModeModes;
  iftmp.767_163 = _162 >> 4;

  <bb 38> [local count: 35384969]:
  # iftmp.767_164 = PHI <iftmp.767_161(36), iftmp.767_163(37)>
  # DEBUG AktTM => iftmp.767_164
  # DEBUG BEGIN_STMT
  if (iftmp.767_164 == 0)
    goto <bb 39>; [33.00%]
  else
    goto <bb 40>; [67.00%]

  <bb 39> [local count: 11677040]:
  # DEBUG BEGIN_STMT
  Com_EB_TxDM_TMNone (IPduPtr_15, PduId_4);

  <bb 40> [local count: 104073439]:

  <bb 41> [local count: 315374057]:
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG CurrentTMS => NULL
  # DEBUG j => NULL
  # DEBUG TxTimeoutQueueValPtr => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG CompTime => NULL
  # DEBUG globalTime => NULL
  # DEBUG BEGIN_STMT
  _31 = *IPduFlagBytePtr_22;
  _32 = _31 & 8;
  if (_32 != 0)
    goto <bb 42>; [33.00%]
  else
    goto <bb 59>; [67.00%]

  <bb 42> [local count: 104073439]:
  # DEBUG BEGIN_STMT
  # DEBUG PduId => PduId_4
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG INLINE_ENTRY Com_EB_CheckNTimesSendforPdu
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG NPeriod => 0
  # DEBUG BEGIN_STMT
  # DEBUG N => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG transmit => 0
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.768_165 = Com_gDataMemPtr;
  Com_gConfigPtr.769_166 = Com_gConfigPtr;
  _167 = Com_gConfigPtr.769_166->ComNTimesQueueBaseRemaining;
  _168 = (sizetype) _167;
  # DEBUG NTimesQueueBaseRemaining => Com_gDataMemPtr.768_165 + _168
  # DEBUG BEGIN_STMT
  _169 = IPduPtr_15->NTimesQueueRef;
  _170 = (sizetype) _169;
  _171 = _168 + _170;
  NTimesQueueValRemainingPtr_172 = Com_gDataMemPtr.768_165 + _171;
  # DEBUG NTimesQueueValRemainingPtr => NTimesQueueValRemainingPtr_172
  # DEBUG BEGIN_STMT
  _173 = Com_gConfigPtr.769_166->ComNTimesQueueBaseNextTime;
  _174 = (sizetype) _173;
  # DEBUG NTimesQueueBaseNextTimeBase => Com_gDataMemPtr.768_165 + _174
  # DEBUG BEGIN_STMT
  _175 = _170 * 2;
  _176 = _174 + _175;
  NTimesQueueValNextTimePtr_177 = Com_gDataMemPtr.768_165 + _176;
  # DEBUG NTimesQueueValNextTimePtr => NTimesQueueValNextTimePtr_177
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_178 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_178
  # DEBUG BEGIN_STMT
  CompTime_179 = *NTimesQueueValNextTimePtr_177;
  # DEBUG CompTime => CompTime_179
  # DEBUG BEGIN_STMT
  if (globalTime_178 == CompTime_179)
    goto <bb 43>; [34.00%]
  else
    goto <bb 53>; [66.00%]

  <bb 43> [local count: 35384969]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.773_180 = Com_gConfigPtr;
  _181 = Com_gConfigPtr.773_180->ComTxIPduStatusBase;
  _182 = (int) _181;
  _183 = (int) PduId_4;
  _184 = _182 + _183;
  _185 = (sizetype) _184;
  _186 = Com_gDataMemPtr.768_165 + _185;
  _187 = *_186;
  _188 = _187 >> 6;
  BitRes_189 = _188 & 1;
  # DEBUG BitRes => BitRes_189
  # DEBUG BEGIN_STMT
  if (BitRes_189 != 0)
    goto <bb 44>; [50.00%]
  else
    goto <bb 45>; [50.00%]

  <bb 44> [local count: 17692485]:
  _190 = IPduPtr_15->ComTxModeModes;
  iftmp.774_191 = _190 & 15;
  goto <bb 46>; [100.00%]

  <bb 45> [local count: 17692485]:
  _192 = IPduPtr_15->ComTxModeModes;
  iftmp.774_193 = _192 >> 4;

  <bb 46> [local count: 35384969]:
  # iftmp.774_196 = PHI <iftmp.774_191(44), iftmp.774_193(45)>
  # DEBUG AktTM => iftmp.774_196
  # DEBUG BEGIN_STMT
  if (BitRes_189 != 0)
    goto <bb 47>; [50.00%]
  else
    goto <bb 48>; [50.00%]

  <bb 47> [local count: 17692485]:
  iftmp.775_194 = IPduPtr_15->ComTxModeTrueRef;
  goto <bb 49>; [100.00%]

  <bb 48> [local count: 17692485]:
  iftmp.775_195 = IPduPtr_15->ComTxModeFalseRef;

  <bb 49> [local count: 35384969]:
  # iftmp.775_198 = PHI <iftmp.775_194(47), iftmp.775_195(48)>
  # DEBUG TMRef => iftmp.775_198
  # DEBUG BEGIN_STMT
  switch (iftmp.774_196) <default: <L14> [33.33%], case 4: <L13> [33.33%], case 5: <L12> [33.33%]>

  <bb 50> [local count: 11793810]:
<L12>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _197 = Com_gConfigPtr.773_180->ComTxModeNTimesRef;
  _199 = (unsigned int) iftmp.775_198;
  _200 = _199 * 4;
  _201 = _197 + _200;
  TMNTimesPtr_202 = Com_gConfigPtr.773_180 + _201;
  # DEBUG TMNTimesPtr => TMNTimesPtr_202
  # DEBUG BEGIN_STMT
  NPeriod_203 = TMNTimesPtr_202->ComTxModeRepetitionPeriodFactor;
  # DEBUG NPeriod => NPeriod_203
  # DEBUG BEGIN_STMT
  goto <bb 52>; [100.00%]

  <bb 51> [local count: 11793810]:
<L13>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _204 = Com_gConfigPtr.773_180->ComTxModeMixedNTimesRef;
  _205 = (unsigned int) iftmp.775_198;
  _206 = _205 * 8;
  _207 = _204 + _206;
  TMMixedNTimesPtr_208 = Com_gConfigPtr.773_180 + _207;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_208
  # DEBUG BEGIN_STMT
  NPeriod_209 = TMMixedNTimesPtr_208->ComTxModeRepetitionPeriodFactor;
  # DEBUG NPeriod => NPeriod_209
  # DEBUG BEGIN_STMT

  <bb 52> [local count: 35381431]:
  # NPeriod_215 = PHI <0(49), NPeriod_203(50), NPeriod_209(51)>
<L14>:
  # DEBUG NPeriod => NPeriod_215
  # DEBUG BEGIN_STMT
  N_210 = *NTimesQueueValRemainingPtr_172;
  # DEBUG N => N_210

  <bb 53> [local count: 104069900]:
  # NPeriod_213 = PHI <0(42), NPeriod_215(52)>
  # N_211 = PHI <0(42), N_210(52)>
  # DEBUG N => N_211
  # DEBUG NPeriod => NPeriod_213
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (N_211 != 0)
    goto <bb 54>; [33.00%]
  else
    goto <bb 55>; [67.00%]

  <bb 54> [local count: 34343067]:
  # DEBUG BEGIN_STMT
  # DEBUG transmit => 1
  # DEBUG BEGIN_STMT
  _212 = IPduPtr_15->NTimesQueueRef;
  Com_EB_NTimesSendQueue (PduId_4, NPeriod_213, _212);

  <bb 55> [local count: 104069900]:
  # transmit_214 = PHI <0(53), 1(54)>
  # DEBUG transmit => transmit_214
  # DEBUG BEGIN_STMT
  _333 = transmit_214;
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG TMMixedNTimesPtr => NULL
  # DEBUG TMNTimesPtr => NULL
  # DEBUG NTimesQueueValNextTimePtr => NULL
  # DEBUG NTimesQueueValRemainingPtr => NULL
  # DEBUG transmit => NULL
  # DEBUG BitRes => NULL
  # DEBUG N => NULL
  # DEBUG NPeriod => NULL
  # DEBUG CompTime => NULL
  # DEBUG globalTime => NULL
  transmit_ntimes_33 = _333;
  # DEBUG transmit_ntimes => transmit_ntimes_33
  # DEBUG BEGIN_STMT
  if (transmit_28 != 0)
    goto <bb 58>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 56> [local count: 52034950]:
  if (transmit_ntimes_33 != 0)
    goto <bb 58>; [50.00%]
  else
    goto <bb 57>; [50.00%]

  <bb 57> [local count: 26017475]:

  <bb 58> [local count: 104069900]:
  # iftmp.743_34 = PHI <1(55), 1(56), 0(57)>
  transmit_35 = (boolean) iftmp.743_34;
  # DEBUG transmit => transmit_35

  <bb 59> [local count: 315370518]:
  # transmit_39 = PHI <transmit_28(41), transmit_35(58)>
  # DEBUG transmit => transmit_39
  # DEBUG BEGIN_STMT
  _36 = *IPduFlagBytePtr_22;
  _37 = _36 & 4;
  if (_37 != 0)
    goto <bb 60>; [33.00%]
  else
    goto <bb 80>; [67.00%]

  <bb 60> [local count: 104072271]:
  # DEBUG BEGIN_STMT
  # DEBUG PduId => PduId_4
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG INLINE_ENTRY Com_EB_CheckPeriodicSendforPdu
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Period => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG transmit => 0
  # DEBUG BEGIN_STMT
  # DEBUG QueuedTxDM => 1
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.780_216 = Com_gDataMemPtr;
  Com_gConfigPtr.781_217 = Com_gConfigPtr;
  _218 = Com_gConfigPtr.781_217->ComPeriodicQueueBase;
  _219 = (sizetype) _218;
  # DEBUG PeriodicQueueBase => Com_gDataMemPtr.780_216 + _219
  # DEBUG BEGIN_STMT
  _220 = IPduPtr_15->PeriodicQueueRef;
  _221 = (unsigned int) _220;
  _222 = _221 * 2;
  _223 = _219 + _222;
  PeriodicQueueValPtr_224 = Com_gDataMemPtr.780_216 + _223;
  # DEBUG PeriodicQueueValPtr => PeriodicQueueValPtr_224
  # DEBUG BEGIN_STMT
  _225 = Com_gConfigPtr.781_217->ComTxIPduStatusBase;
  _226 = (int) _225;
  _227 = (int) PduId_4;
  _228 = _226 + _227;
  _229 = (sizetype) _228;
  IPduFlagBytePtr_230 = Com_gDataMemPtr.780_216 + _229;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_230
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_231 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_231
  # DEBUG BEGIN_STMT
  CompTime_232 = *PeriodicQueueValPtr_224;
  # DEBUG CompTime => CompTime_232
  # DEBUG BEGIN_STMT
  if (globalTime_231 == CompTime_232)
    goto <bb 61>; [34.00%]
  else
    goto <bb 72>; [66.00%]

  <bb 61> [local count: 35384572]:
  # DEBUG BEGIN_STMT
  _233 = *IPduFlagBytePtr_230;
  _234 = _233 >> 6;
  BitRes_235 = _234 & 1;
  # DEBUG BitRes => BitRes_235
  # DEBUG BEGIN_STMT
  if (BitRes_235 != 0)
    goto <bb 62>; [50.00%]
  else
    goto <bb 63>; [50.00%]

  <bb 62> [local count: 17692286]:
  _236 = IPduPtr_15->ComTxModeModes;
  iftmp.784_237 = _236 & 15;
  goto <bb 64>; [100.00%]

  <bb 63> [local count: 17692286]:
  _238 = IPduPtr_15->ComTxModeModes;
  iftmp.784_239 = _238 >> 4;

  <bb 64> [local count: 35384572]:
  # iftmp.784_242 = PHI <iftmp.784_237(62), iftmp.784_239(63)>
  # DEBUG AktTM => iftmp.784_242
  # DEBUG BEGIN_STMT
  if (BitRes_235 != 0)
    goto <bb 65>; [50.00%]
  else
    goto <bb 66>; [50.00%]

  <bb 65> [local count: 17692286]:
  iftmp.785_240 = IPduPtr_15->ComTxModeTrueRef;
  goto <bb 67>; [100.00%]

  <bb 66> [local count: 17692286]:
  iftmp.785_241 = IPduPtr_15->ComTxModeFalseRef;

  <bb 67> [local count: 35384572]:
  # iftmp.785_245 = PHI <iftmp.785_240(65), iftmp.785_241(66)>
  # DEBUG TMRef => iftmp.785_245
  # DEBUG BEGIN_STMT
  switch (iftmp.784_242) <default: <L17> [33.33%], case 1: <L16> [33.33%], case 3: <L16> [33.33%], case 4: <L15> [33.33%]>

  <bb 68> [local count: 11793678]:
<L15>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.786_243 = Com_gConfigPtr;
  _244 = Com_gConfigPtr.786_243->ComTxModeMixedNTimesRef;
  _246 = (unsigned int) iftmp.785_245;
  _247 = _246 * 8;
  _248 = _244 + _247;
  TMMixedNTimesPtr_249 = Com_gConfigPtr.786_243 + _248;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_249
  # DEBUG BEGIN_STMT
  Period_250 = TMMixedNTimesPtr_249->ComTxModeTimePeriodFactor;
  # DEBUG Period => Period_250
  # DEBUG BEGIN_STMT
  goto <bb 70>; [100.00%]

  <bb 69> [local count: 11793678]:
<L16>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.788_251 = Com_gConfigPtr;
  _252 = Com_gConfigPtr.788_251->ComTxModePeriodicRef;
  _253 = (unsigned int) iftmp.785_245;
  _254 = _253 * 4;
  _255 = _252 + _254;
  TMPeriodicPtr_256 = Com_gConfigPtr.788_251 + _255;
  # DEBUG TMPeriodicPtr => TMPeriodicPtr_256
  # DEBUG BEGIN_STMT
  Period_257 = TMPeriodicPtr_256->ComTxModeTimePeriodFactor;
  # DEBUG Period => Period_257
  # DEBUG BEGIN_STMT

  <bb 70> [local count: 35381034]:
  # Period_269 = PHI <0(67), Period_250(68), Period_257(69)>
<L17>:
  # DEBUG Period => Period_269
  # DEBUG BEGIN_STMT
  _258 = IPduPtr_15->ComTxIPduFlags;
  _259 = _258 >> 1;
  _260 = _259 & 1;
  if (_260 != 0)
    goto <bb 71>; [50.00%]
  else
    goto <bb 72>; [50.00%]

  <bb 71> [local count: 17690517]:
  # DEBUG BEGIN_STMT
  _261 = _233 >> 5;
  QueuedTxDM_262 = _261 & 1;
  # DEBUG QueuedTxDM => QueuedTxDM_262

  <bb 72> [local count: 104068733]:
  # Period_265 = PHI <0(60), Period_269(70), Period_269(71)>
  # transmit_263 = PHI <0(60), 1(70), 1(71)>
  # QueuedTxDM_266 = PHI <1(60), 1(70), QueuedTxDM_262(71)>
  # DEBUG QueuedTxDM => QueuedTxDM_266
  # DEBUG transmit => transmit_263
  # DEBUG Period => Period_265
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (transmit_263 == 1)
    goto <bb 73>; [20.24%]
  else
    goto <bb 74>; [79.76%]

  <bb 73> [local count: 21063511]:
  # DEBUG BEGIN_STMT
  _264 = IPduPtr_15->PeriodicQueueRef;
  Com_EB_PeriodicSendQueue (Period_265, _264);

  <bb 74> [local count: 104068733]:
  # DEBUG BEGIN_STMT
  if (QueuedTxDM_266 == 0)
    goto <bb 75>; [33.00%]
  else
    goto <bb 76>; [67.00%]

  <bb 75> [local count: 34342682]:
  # DEBUG BEGIN_STMT
  _267 = IPduPtr_15->ComTxTimeoutFactorValue;
  _268 = IPduPtr_15->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_4, _267, _268);

  <bb 76> [local count: 104068733]:
  # DEBUG BEGIN_STMT
  _338 = transmit_263;
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG TMPeriodicPtr => NULL
  # DEBUG TMMixedNTimesPtr => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG PeriodicQueueValPtr => NULL
  # DEBUG QueuedTxDM => NULL
  # DEBUG transmit => NULL
  # DEBUG BitRes => NULL
  # DEBUG Period => NULL
  # DEBUG CompTime => NULL
  # DEBUG globalTime => NULL
  transmit_cyclic_38 = _338;
  # DEBUG transmit_cyclic => transmit_cyclic_38
  # DEBUG BEGIN_STMT
  if (transmit_39 != 0)
    goto <bb 79>; [50.00%]
  else
    goto <bb 77>; [50.00%]

  <bb 77> [local count: 52034366]:
  if (transmit_cyclic_38 != 0)
    goto <bb 79>; [50.00%]
  else
    goto <bb 78>; [50.00%]

  <bb 78> [local count: 26017183]:

  <bb 79> [local count: 104068733]:
  # iftmp.744_40 = PHI <1(76), 1(77), 0(78)>
  transmit_41 = (boolean) iftmp.744_40;
  # DEBUG transmit => transmit_41

  <bb 80> [local count: 315366980]:
  # transmit_42 = PHI <transmit_39(59), transmit_41(79)>
  # DEBUG transmit => transmit_42
  # DEBUG BEGIN_STMT
  # DEBUG PduId => PduId_4
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_22
  # DEBUG transmit => transmit_42
  # DEBUG INLINE_ENTRY Com_EB_Handle_Send_Pdu
  # DEBUG BEGIN_STMT
  # DEBUG to_transmit => transmit_42
  # DEBUG BEGIN_STMT
  _270 = *IPduFlagBytePtr_22;
  _271 = _270 & 2;
  if (_271 != 0)
    goto <bb 81>; [50.00%]
  else
    goto <bb 83>; [50.00%]

  <bb 81> [local count: 157683490]:
  # DEBUG BEGIN_STMT
  if (transmit_42 == 1)
    goto <bb 82>; [20.24%]
  else
    goto <bb 86>; [79.76%]

  <bb 82> [local count: 31915138]:
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_22, 4);
  goto <bb 86>; [100.00%]

  <bb 83> [local count: 157683490]:
  # DEBUG BEGIN_STMT
  _272 = _270 & 16;
  if (_272 != 0)
    goto <bb 85>; [33.00%]
  else
    goto <bb 84>; [67.00%]

  <bb 84> [local count: 105647938]:
  # DEBUG to_transmit => transmit_42
  # DEBUG BEGIN_STMT
  if (transmit_42 == 1)
    goto <bb 85>; [34.00%]
  else
    goto <bb 86>; [66.00%]

  <bb 85> [local count: 87955851]:
  # DEBUG to_transmit => NULL
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_22, 4);
  # DEBUG BEGIN_STMT
  Com_EB_Send_Pdu (PduId_4, IPduPtr_15);

  <bb 86> [local count: 315366980]:

  <bb 87> [local count: 955639230]:
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG transmit => NULL
  # DEBUG BEGIN_STMT
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG INLINE_ENTRY Com_EB_HandleDeferredTxConfirm
  # DEBUG BEGIN_STMT
  _273 = IPduPtr_15->ComTxIPduFlags;
  _274 = _273 & 1;
  if (_274 == 0)
    goto <bb 88>; [50.00%]
  else
    goto <bb 90>; [50.00%]

  <bb 88> [local count: 477819614]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.790_275 = Com_gDataMemPtr;
  Com_gConfigPtr.791_276 = Com_gConfigPtr;
  _277 = Com_gConfigPtr.791_276->ComCbkTxAckDeferredStatusBase;
  _278 = (unsigned int) _277;
  _279 = IPduPtr_15->ComNotificationDeferredQueueRef;
  _280 = _279 >> 3;
  _281 = (unsigned int) _280;
  _282 = _278 + _281;
  _283 = Com_gDataMemPtr.790_275 + _282;
  _284 = *_283;
  _285 = _279 & 7;
  _286 = (unsigned int) _285;
  _287 = 1 << _286;
  _288 = (unsigned char) _287;
  _289 = _284 & _288;
  if (_289 != 0)
    goto <bb 89>; [33.00%]
  else
    goto <bb 90>; [67.00%]

  <bb 89> [local count: 157680473]:
  # DEBUG BEGIN_STMT
  _290 = _277 + _280;
  _291 = (sizetype) _290;
  _292 = Com_gDataMemPtr.790_275 + _291;
  TS_AtomicClearBit_8 (_292, _286);
  # DEBUG BEGIN_STMT
  Com_EB_TxConfirmations (IPduPtr_15);

  <bb 90> [local count: 955639230]:
  # DEBUG IPduPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG transmit_cyclic => NULL
  # DEBUG transmit_ntimes => NULL
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG transmit => NULL
  # DEBUG BEGIN_STMT
  PduId_9 = PduId_4 + 1;
  # DEBUG PduId => PduId_9

  <bb 91> [local count: 1073741824]:
  # PduId_4 = PHI <PduId_9(90), 0(2)>
  # DEBUG PduId => PduId_4
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.738_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.738_2->ComTxIPduArraySize;
  if (_3 > PduId_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 92>; [11.00%]

  <bb 92> [local count: 347369578]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_ReceiveSignal (Com_ReceiveSignal, funcdef_no=257, decl_uid=6069, cgraph_uid=258, symbol_order=262)

Com_ReceiveSignal (Com_SignalIdType SignalId, void * SignalDataPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint8 * const dataPtr;
  const ComIPduRefType PduId;
  const struct ComRxSignalType * const SignalPtr;
  uint8 retval;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  uint8 * Com_gDataMemPtr.821_5;
  sizetype _6;
  const struct Com_ConfigType * Com_gConfigPtr.823_7;
  short unsigned int _8;
  int _9;
  int _10;
  int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  int _15;
  const struct ComSignalBaseType * _16;
  uint8 _34;
  unsigned char _36;
  unsigned char _37;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  SignalPtr_23 = Com_GetRxSignalCfg (SignalId_21(D), 11);
  # DEBUG SignalPtr => SignalPtr_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalPtr_23 == 0B)
    goto <bb 12>; [30.00%]
  else
    goto <bb 3>; [70.00%]

  <bb 3> [local count: 751619277]:
  # DEBUG BEGIN_STMT
  if (SignalDataPtr_24(D) == 0B)
    goto <bb 4>; [17.43%]
  else
    goto <bb 5>; [82.57%]

  <bb 4> [local count: 131007240]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 11, 3);
  goto <bb 12>; [100.00%]

  <bb 5> [local count: 620612037]:
  # DEBUG BEGIN_STMT
  _1 = SignalPtr_23->ComSignalBase.ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  _36 = _3 & 15;
  if (_36 == 8)
    goto <bb 6>; [20.24%]
  else
    goto <bb 7>; [79.76%]

  <bb 6> [local count: 125611876]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 11, 1);
  goto <bb 12>; [100.00%]

  <bb 7> [local count: 495000160]:
  # DEBUG BEGIN_STMT
  _4 = SignalPtr_23->ComSignalBase.ComBufferRef;
  if (_4 == 65535)
    goto <bb 8>; [20.24%]
  else
    goto <bb 9>; [79.76%]

  <bb 8> [local count: 100188032]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 11, 1);
  goto <bb 12>; [100.00%]

  <bb 9> [local count: 394812128]:
  # DEBUG BEGIN_STMT
  PduId_25 = SignalPtr_23->ComIPduRef;
  # DEBUG PduId => PduId_25
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.821_5 = Com_gDataMemPtr;
  _6 = (sizetype) _4;
  dataPtr_26 = Com_gDataMemPtr.821_5 + _6;
  # DEBUG dataPtr => dataPtr_26
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.823_7 = Com_gConfigPtr;
  _8 = Com_gConfigPtr.823_7->ComRxIPduStatusBase;
  _9 = (int) _8;
  _10 = (int) PduId_25;
  _11 = _9 + _10;
  _12 = (sizetype) _11;
  _13 = Com_gDataMemPtr.821_5 + _12;
  _14 = *_13;
  _37 = _14 & 1;
  if (_37 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 197406064]:
  # DEBUG BEGIN_STMT
  retval = 0;

  <bb 11> [local count: 394812128]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_28 = _1 & 127;
  # DEBUG index => index_28
  # DEBUG BEGIN_STMT
  _15 = (int) index_28;
  fptr_29 = Com_ReadFuncs[_15].Read;
  # DEBUG fptr => fptr_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = &SignalPtr_23->ComSignalBase;
  fptr_29 (SignalDataPtr_24(D), dataPtr_26, _16, &retval);

  <bb 12> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = retval;
  retval ={v} {CLOBBER};
  return _34;

}



;; Function Com_ReceiveShadowSignal (Com_ReceiveShadowSignal, funcdef_no=250, decl_uid=6087, cgraph_uid=251, symbol_order=255)

Com_ReceiveShadowSignal (Com_SignalIdType SignalId, void * SignalDataPtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_ReceiveSignal (SignalId_2(D), SignalDataPtr_3(D));
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_ReceiveDynSignal (Com_ReceiveDynSignal, funcdef_no=258, decl_uid=6073, cgraph_uid=259, symbol_order=263)


Symbols to be put in SSA form
{ D.12499 D.15665 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 23
Number of blocks to update: 22 ( 96%)


Merging blocks 9 and 14
Merging blocks 22 and 13
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 20 }
;; 5 succs { 6 7 }
;; 6 succs { 20 }
;; 7 succs { 8 9 }
;; 8 succs { 20 }
;; 9 succs { 10 12 }
;; 10 succs { 11 17 }
;; 11 succs { 17 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 20 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 1 }
Com_ReceiveDynSignal (Com_SignalIdType SignalId, void * SignalDataPtr, uint16 * LengthPtr)
{
  uint8 retval;
  ComSignalBitSizeType SigLen;
  const ComSignalDescBitType startbyte;
  const boolean takeInitVal;
  const uint8 * const initDataDynSigPtr;
  const uint8 * const dataPtr;
  const uint16 pduLength;
  uint8 D.15665;
  const struct ComRxIPduType * const IPduPtr;
  const ComIPduRefType PduId;
  const struct ComRxSignalType * const SignalPtr;
  uint8 retval;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  const struct Com_ConfigType * Com_gConfigPtr.828_4;
  long unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  sizetype _8;
  uint8 * Com_gDataMemPtr.830_9;
  const struct Com_ConfigType * Com_gConfigPtr.831_10;
  short unsigned int _11;
  int _12;
  int _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char _20;
  unsigned char _31;
  short unsigned int _37;
  short unsigned int _39;
  const struct Com_ConfigType * Com_gConfigPtr.832_40;
  long unsigned int _41;
  sizetype _42;
  long unsigned int _43;
  long unsigned int _45;
  uint8 * Com_gDataMemPtr.833_46;
  short unsigned int _47;
  int _48;
  int _49;
  int _50;
  sizetype _51;
  const struct Com_ConfigType * Com_gConfigPtr.835_53;
  short unsigned int _54;
  sizetype _55;
  unsigned int _56;
  unsigned int _57;
  sizetype _58;
  ComIPduSizeType * _59;
  short unsigned int _62;
  long unsigned int _64;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  SignalPtr_24 = Com_GetRxSignalCfg (SignalId_22(D), 34);
  # DEBUG SignalPtr => SignalPtr_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalPtr_24 == 0B)
    goto <bb 20>; [18.75%]
  else
    goto <bb 3>; [81.25%]

  <bb 3> [local count: 872415233]:
  # DEBUG BEGIN_STMT
  if (SignalDataPtr_25(D) == 0B)
    goto <bb 4>; [10.21%]
  else
    goto <bb 5>; [89.79%]

  <bb 4> [local count: 89073595]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 34, 3);
  goto <bb 20>; [100.00%]

  <bb 5> [local count: 783341638]:
  # DEBUG BEGIN_STMT
  if (LengthPtr_26(D) == 0B)
    goto <bb 6>; [10.21%]
  else
    goto <bb 7>; [89.79%]

  <bb 6> [local count: 79979181]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 34, 3);
  goto <bb 20>; [100.00%]

  <bb 7> [local count: 703362457]:
  # DEBUG BEGIN_STMT
  _1 = SignalPtr_24->ComSignalBase.ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  _20 = _3 & 15;
  if (_20 != 8)
    goto <bb 8>; [51.11%]
  else
    goto <bb 9>; [48.89%]

  <bb 8> [local count: 359488551]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 34, 1);
  goto <bb 20>; [100.00%]

  <bb 9> [local count: 343873905]:
  # DEBUG BEGIN_STMT
  PduId_27 = SignalPtr_24->ComIPduRef;
  # DEBUG PduId => PduId_27
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.828_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.828_4->ComRxIPduRef;
  _6 = (unsigned int) PduId_27;
  _7 = _6 * 48;
  _8 = _5 + _7;
  IPduPtr_28 = Com_gConfigPtr.828_4 + _8;
  # DEBUG IPduPtr => IPduPtr_28
  # DEBUG BEGIN_STMT
  # DEBUG SignalDataPtr => SignalDataPtr_25(D)
  # DEBUG LengthPtr => LengthPtr_26(D)
  # DEBUG SignalPtr => SignalPtr_24
  # DEBUG IPduPtr => IPduPtr_28
  # DEBUG PduId => PduId_27
  # DEBUG INLINE_ENTRY Com_EB_ReadValue_Uint8Dyn
  # DEBUG BEGIN_STMT
  # DEBUG retval => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  startbyte_35 = SignalPtr_24->ComSignalBase.ComSignalPositionInBit;
  # DEBUG startbyte => startbyte_35
  # DEBUG BEGIN_STMT
  takeInitVal_36 = Com_EB_Read_SignalReplace (SignalPtr_24);
  # DEBUG takeInitVal => takeInitVal_36
  # DEBUG BEGIN_STMT
  if (takeInitVal_36 == 1)
    goto <bb 10>; [51.12%]
  else
    goto <bb 12>; [48.88%]

  <bb 10> [local count: 175788340]:
  # DEBUG BEGIN_STMT
  _37 = IPduPtr_28->ComIPduInitSize;
  SigLen_38 = _37 - startbyte_35;
  # DEBUG SigLen => SigLen_38
  # DEBUG BEGIN_STMT
  _39 = *LengthPtr_26(D);
  if (SigLen_38 <= _39)
    goto <bb 11>; [33.00%]
  else
    goto <bb 17>; [67.00%]

  <bb 11> [local count: 58010152]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.832_40 = Com_gConfigPtr;
  _41 = IPduPtr_28->ComInitValueRef;
  # DEBUG initDataPduPtr => Com_gConfigPtr.832_40 + _41
  # DEBUG BEGIN_STMT
  _42 = (sizetype) startbyte_35;
  _43 = _41 + _42;
  initDataDynSigPtr_44 = Com_gConfigPtr.832_40 + _43;
  # DEBUG initDataDynSigPtr => initDataDynSigPtr_44
  # DEBUG BEGIN_STMT
  _45 = (long unsigned int) SigLen_38;
  TS_MemCpy32 (SignalDataPtr_25(D), initDataDynSigPtr_44, _45);
  # DEBUG BEGIN_STMT
  # DEBUG retval => 0
  goto <bb 17>; [100.00%]

  <bb 12> [local count: 168085565]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.833_46 = Com_gDataMemPtr;
  _47 = SignalPtr_24->ComSignalBase.ComBufferRef;
  _48 = (int) _47;
  _49 = (int) startbyte_35;
  _50 = _48 + _49;
  _51 = (sizetype) _50;
  dataPtr_52 = Com_gDataMemPtr.833_46 + _51;
  # DEBUG dataPtr => dataPtr_52
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.835_53 = Com_gConfigPtr;
  _54 = Com_gConfigPtr.835_53->ComRxIPduLengthBase;
  _55 = (sizetype) _54;
  _56 = (unsigned int) PduId_27;
  _57 = _56 * 2;
  _58 = _55 + _57;
  _59 = Com_gDataMemPtr.833_46 + _58;
  pduLength_60 = *_59;
  # DEBUG pduLength => pduLength_60
  # DEBUG BEGIN_STMT
  if (startbyte_35 < pduLength_60)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 84042782]:
  # DEBUG BEGIN_STMT
  SigLen_61 = pduLength_60 - startbyte_35;
  # DEBUG SigLen => SigLen_61

  <bb 14> [local count: 168085564]:
  # SigLen_63 = PHI <0(12), SigLen_61(13)>
  # DEBUG SigLen => SigLen_63
  # DEBUG BEGIN_STMT
  _62 = *LengthPtr_26(D);
  if (_62 >= SigLen_63)
    goto <bb 15>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 15> [local count: 55468236]:
  # DEBUG BEGIN_STMT
  _64 = (long unsigned int) SigLen_63;
  TS_MemCpy32 (SignalDataPtr_25(D), dataPtr_52, _64);
  # DEBUG BEGIN_STMT
  # DEBUG retval => 0

  <bb 16> [local count: 168085564]:
  # retval_67 = PHI <1(14), 0(15)>
  # DEBUG retval => retval_67
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 17> [local count: 343873905]:
  # retval_66 = PHI <1(10), 0(11), retval_67(16)>
  # SigLen_65 = PHI <SigLen_38(10), SigLen_38(11), SigLen_63(16)>
  # DEBUG SigLen => SigLen_65
  # DEBUG retval => retval_66
  # DEBUG BEGIN_STMT
  *LengthPtr_26(D) = SigLen_65;
  # DEBUG BEGIN_STMT
  _75 = retval_66;
  # DEBUG SignalDataPtr => NULL
  # DEBUG LengthPtr => NULL
  # DEBUG SignalPtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG pduLength => NULL
  # DEBUG dataPtr => NULL
  # DEBUG initDataDynSigPtr => NULL
  # DEBUG takeInitVal => NULL
  # DEBUG startbyte => NULL
  # DEBUG SigLen => NULL
  # DEBUG retval => NULL
  retval_30 = _75;
  # DEBUG retval => retval_30
  # DEBUG BEGIN_STMT
  if (retval_30 == 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 18> [local count: 171936952]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.830_9 = Com_gDataMemPtr;
  Com_gConfigPtr.831_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.831_10->ComRxIPduStatusBase;
  _12 = (int) _11;
  _13 = (int) PduId_27;
  _14 = _12 + _13;
  _15 = (sizetype) _14;
  _16 = Com_gDataMemPtr.830_9 + _15;
  _17 = *_16;
  _31 = _17 & 1;
  if (_31 == 0)
    goto <bb 19>; [35.00%]
  else
    goto <bb 20>; [65.00%]

  <bb 19> [local count: 60177933]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128

  <bb 20> [local count: 1073741824]:
  # retval_18 = PHI <128(2), 128(4), 128(6), 128(8), retval_30(17), 0(18), 128(19)>
  # DEBUG retval => retval_18
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return retval_18;

}



;; Function Com_ComXf_GetRxSGId (Com_ComXf_GetRxSGId, funcdef_no=259, decl_uid=6432, cgraph_uid=260, symbol_order=264)

Com_ComXf_GetRxSGId (Com_SignalIdType GroupSignalId)
{
  const struct ComRxSignalType * const SignalPtr;
  Com_SignalGroupIdType SGId;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SGId => 65535
  # DEBUG BEGIN_STMT
  SignalPtr_5 = Com_GetRxSignalCfg (GroupSignalId_3(D), 255);
  # DEBUG SignalPtr => SignalPtr_5
  # DEBUG BEGIN_STMT
  if (SignalPtr_5 == 0B)
    goto <bb 4>; [18.75%]
  else
    goto <bb 3>; [81.25%]

  <bb 3> [local count: 872415233]:
  # DEBUG BEGIN_STMT
  SGId_6 = SignalPtr_5->ComSignalBase.ComSignalGroupRef;
  # DEBUG SGId => SGId_6

  <bb 4> [local count: 1073741824]:
  # SGId_1 = PHI <65535(2), SGId_6(3)>
  # DEBUG SGId => SGId_1
  # DEBUG BEGIN_STMT
  return SGId_1;

}



;; Function Com_ReceiveSignalGroup (Com_ReceiveSignalGroup, funcdef_no=267, decl_uid=6084, cgraph_uid=268, symbol_order=272)


Symbols to be put in SSA form
{ D.12501 D.15676 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 7
Number of blocks to update: 6 ( 86%)


Merging blocks 2 and 4
Merging blocks 6 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Com_ReceiveSignalGroup (Com_SignalGroupIdType SignalGroupId)
{
  uint8 retval;
  const struct ComRxSignalGroupType * const SignalGPtr;
  uint8 D.15676;
  uint8 retval;
  unsigned char _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SignalGroupId => SignalGroupId_2(D)
  # DEBUG RxSGArrayInfoPtr => 0B
  # DEBUG Com_RxSignalGroupFPtr => Com_CopyRxSignalGroupArray_Shadow
  # DEBUG ServiceId => 14
  # DEBUG INLINE_ENTRY Com_SetupRxSignalGroup_DET
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  SignalGPtr_5 = Com_GetRxSignalGroupCfg (SignalGroupId_2(D), 14);
  # DEBUG SignalGPtr => SignalGPtr_5
  # DEBUG BEGIN_STMT
  if (SignalGPtr_5 != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> [local count: 574129754]:
  # DEBUG BEGIN_STMT
  Com_SetupRxSignalGroup (&retval, 0B, SignalGPtr_5, Com_CopyRxSignalGroupArray_Shadow);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _6 = retval;
  retval ={v} {CLOBBER};
  _12 = _6;
  # DEBUG SignalGroupId => NULL
  # DEBUG RxSGArrayInfoPtr => NULL
  # DEBUG Com_RxSignalGroupFPtr => NULL
  # DEBUG ServiceId => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG retval => NULL
  retval_4 = _12;
  # DEBUG retval => retval_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return retval_4;

}



;; Function Com_ReceiveSignalGroupArray (Com_ReceiveSignalGroupArray, funcdef_no=268, decl_uid=6095, cgraph_uid=269, symbol_order=273)


Symbols to be put in SSA form
{ D.12502 D.15685 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 12
Number of blocks to update: 11 ( 92%)


Merging blocks 6 and 9
Merging blocks 11 and 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 9 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Com_ReceiveSignalGroupArray (Com_SignalGroupIdType SignalGroupId, uint8 * SignalGroupArrayPtr, uint16 * SignalGroupArrayLengthPtr)
{
  uint8 retval;
  const struct ComRxSignalGroupType * const SignalGPtr;
  uint8 D.15685;
  struct Com_RxSGArrayInfoType SGArrayInfo;
  uint8 retval;
  short unsigned int _1;
  unsigned char _19;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalGroupArrayLengthPtr_4(D) == 0B)
    goto <bb 3>; [10.21%]
  else
    goto <bb 4>; [89.79%]

  <bb 3> [local count: 109629040]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 68, 3);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 964112783]:
  # DEBUG BEGIN_STMT
  if (SignalGroupArrayPtr_5(D) == 0B)
    goto <bb 5>; [18.75%]
  else
    goto <bb 6>; [81.25%]

  <bb 5> [local count: 180771147]:
  # DEBUG BEGIN_STMT
  *SignalGroupArrayLengthPtr_4(D) = 0;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 68, 3);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 783341637]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SGArrayInfo.SGArrayPtr = SignalGroupArrayPtr_5(D);
  # DEBUG BEGIN_STMT
  SGArrayInfo.outSGArrayLengthPtr = SignalGroupArrayLengthPtr_4(D);
  # DEBUG BEGIN_STMT
  _1 = *SignalGroupArrayLengthPtr_4(D);
  SGArrayInfo.inSGArrayLength = _1;
  # DEBUG BEGIN_STMT
  *SignalGroupArrayLengthPtr_4(D) = 0;
  # DEBUG BEGIN_STMT
  # DEBUG SignalGroupId => SignalGroupId_11(D)
  # DEBUG RxSGArrayInfoPtr => &SGArrayInfo
  # DEBUG Com_RxSignalGroupFPtr => Com_CopyRxSignalGroupArray_Array
  # DEBUG ServiceId => 68
  # DEBUG INLINE_ENTRY Com_SetupRxSignalGroup_DET
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  SignalGPtr_18 = Com_GetRxSignalGroupCfg (SignalGroupId_11(D), 68);
  # DEBUG SignalGPtr => SignalGPtr_18
  # DEBUG BEGIN_STMT
  if (SignalGPtr_18 != 0B)
    goto <bb 7>; [53.47%]
  else
    goto <bb 8>; [46.53%]

  <bb 7> [local count: 418852773]:
  # DEBUG BEGIN_STMT
  Com_SetupRxSignalGroup (&retval, &SGArrayInfo, SignalGPtr_18, Com_CopyRxSignalGroupArray_Array);

  <bb 8> [local count: 783341637]:
  # DEBUG BEGIN_STMT
  _19 = retval;
  retval ={v} {CLOBBER};
  _25 = _19;
  # DEBUG SignalGroupId => NULL
  # DEBUG RxSGArrayInfoPtr => NULL
  # DEBUG Com_RxSignalGroupFPtr => NULL
  # DEBUG ServiceId => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG retval => NULL
  retval_13 = _25;
  # DEBUG retval => retval_13
  SGArrayInfo ={v} {CLOBBER};

  <bb 9> [local count: 1073741824]:
  # retval_2 = PHI <128(3), 128(5), retval_13(8)>
  # DEBUG retval => retval_2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return retval_2;

}



;; Function Com_ComXf_Get_RxSignalGroupSize (Com_ComXf_Get_RxSignalGroupSize, funcdef_no=269, decl_uid=6430, cgraph_uid=270, symbol_order=274)

Com_ComXf_Get_RxSignalGroupSize (Com_SignalGroupIdType SignalGroupId)
{
  const struct ComRxSignalGroupType * const SignalGPtr;
  uint16 length;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG length => 0
  # DEBUG BEGIN_STMT
  SignalGPtr_5 = Com_GetRxSignalGroupCfg (SignalGroupId_3(D), 255);
  # DEBUG SignalGPtr => SignalGPtr_5
  # DEBUG BEGIN_STMT
  if (SignalGPtr_5 != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 4>; [30.00%]

  <bb 3> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  length_6 = SignalGPtr_5->ComByteSize;
  # DEBUG length => length_6

  <bb 4> [local count: 1073741824]:
  # length_1 = PHI <0(2), length_6(3)>
  # DEBUG length => length_1
  # DEBUG BEGIN_STMT
  return length_1;

}



;; Function Com_RxIndication (Com_RxIndication, funcdef_no=270, decl_uid=5744, cgraph_uid=271, symbol_order=275)


Symbols to be put in SSA form
{ D.12504 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 23
Number of blocks to update: 22 ( 96%)


Merging blocks 15 and 18
Removing basic block 17
Merging blocks 15 and 19
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;; 2 succs { 3 4 }
;; 3 succs { 19 }
;; 4 succs { 5 6 }
;; 5 succs { 19 }
;; 6 succs { 7 8 }
;; 7 succs { 19 }
;; 8 succs { 9 10 }
;; 9 succs { 19 }
;; 10 succs { 11 19 }
;; 11 succs { 12 13 }
;; 12 succs { 13 19 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 1 }
Com_RxIndication (PduIdType ComRxPduId, struct PduInfoType * PduInfoPtr)
{
  uint8 * const pdudataptr;
  uint32 pdulength;
  boolean (*<T5f4>) (PduIdType, const struct PduInfoType *) fptr;
  boolean coretval;
  uint8 * const IPduFlagBytePtr;
  const struct ComRxIPduType * IPduPtr;
  unsigned char Com_InitStatus.840_1;
  uint8 * _2;
  const struct Com_ConfigType * Com_gConfigPtr.841_3;
  short unsigned int _4;
  long unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  sizetype _8;
  uint8 * Com_gDataMemPtr.844_9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  sizetype _14;
  unsigned char _15;
  short unsigned int _16;
  short unsigned int _17;
  int _18;
  short unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  sizetype _22;
  uint8 * _23;
  const struct Com_ConfigType * Com_gConfigPtr.848_24;
  short unsigned int _25;
  sizetype _26;
  unsigned int _27;
  ComIPduSizeType * _28;
  short unsigned int _29;
  short unsigned int _30;
  const struct Com_ConfigType * Com_gConfigPtr.850_31;
  short unsigned int _32;
  unsigned int _33;
  short unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  uint8 * _37;
  long unsigned int _38;
  unsigned char _47;
  sizetype _62;
  short unsigned int _63;
  unsigned char _65;
  unsigned char _66;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.840_1 = Com_InitStatus;
  if (Com_InitStatus.840_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 66, 2);
  goto <bb 19>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  if (PduInfoPtr_43(D) == 0B)
    goto <bb 5>; [17.43%]
  else
    goto <bb 6>; [82.57%]

  <bb 5> [local count: 125392644]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 66, 3);
  goto <bb 19>; [100.00%]

  <bb 6> [local count: 594014378]:
  # DEBUG BEGIN_STMT
  _2 = PduInfoPtr_43(D)->SduDataPtr;
  if (_2 == 0B)
    goto <bb 7>; [17.43%]
  else
    goto <bb 8>; [82.57%]

  <bb 7> [local count: 103536706]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 66, 3);
  goto <bb 19>; [100.00%]

  <bb 8> [local count: 490477671]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.841_3 = Com_gConfigPtr;
  _4 = Com_gConfigPtr.841_3->ComRxIPduArraySize;
  if (_4 <= ComRxPduId_44(D))
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 161857632]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 66, 1);
  goto <bb 19>; [100.00%]

  <bb 10> [local count: 328620040]:
  # DEBUG BEGIN_STMT
  _5 = Com_gConfigPtr.841_3->ComRxIPduRef;
  _6 = (unsigned int) ComRxPduId_44(D);
  _7 = _6 * 48;
  _8 = _5 + _7;
  IPduPtr_45 = Com_gConfigPtr.841_3 + _8;
  # DEBUG IPduPtr => IPduPtr_45
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.844_9 = Com_gDataMemPtr;
  _10 = Com_gConfigPtr.841_3->ComRxIPduStatusBase;
  _11 = (int) _10;
  _12 = (int) ComRxPduId_44(D);
  _13 = _11 + _12;
  _14 = (sizetype) _13;
  IPduFlagBytePtr_46 = Com_gDataMemPtr.844_9 + _14;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_46
  # DEBUG BEGIN_STMT
  _15 = *IPduFlagBytePtr_46;
  _47 = _15 & 1;
  if (_47 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 11> [local count: 164310020]:
  # DEBUG BEGIN_STMT
  # DEBUG coretval => 1
  # DEBUG BEGIN_STMT
  _17 = IPduPtr_45->ComIPduCallOutFuncPtrRef;
  if (_17 != 65535)
    goto <bb 12>; [79.76%]
  else
    goto <bb 13>; [20.24%]

  <bb 12> [local count: 131053672]:
  # DEBUG BEGIN_STMT
  _18 = (int) _17;
  fptr_48 = Com_RxCallouts[_18];
  # DEBUG fptr => fptr_48
  # DEBUG BEGIN_STMT
  coretval_50 = fptr_48 (ComRxPduId_44(D), PduInfoPtr_43(D));
  # DEBUG coretval => coretval_50
  # DEBUG BEGIN_STMT
  if (coretval_50 == 1)
    goto <bb 13>; [34.00%]
  else
    goto <bb 19>; [66.00%]

  <bb 13> [local count: 77814597]:
  # DEBUG coretval => NULL
  # DEBUG BEGIN_STMT
  _19 = IPduPtr_45->ComIPduSizeMax;
  # DEBUG pdulength => (uint32) _19
  # DEBUG BEGIN_STMT
  _20 = PduInfoPtr_43(D)->SduLength;
  _16 = MIN_EXPR <_20, _19>;
  pdulength_39 = (uint32) _16;
  # DEBUG pdulength => pdulength_39
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1 ();
  # DEBUG BEGIN_STMT
  _21 = IPduPtr_45->ComIPduValueRef;
  _22 = (sizetype) _21;
  pdudataptr_52 = Com_gDataMemPtr.844_9 + _22;
  # DEBUG pdudataptr => pdudataptr_52
  # DEBUG BEGIN_STMT
  _23 = PduInfoPtr_43(D)->SduDataPtr;
  TS_MemCpy32 (pdudataptr_52, _23, pdulength_39);
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.848_24 = Com_gConfigPtr;
  _25 = Com_gConfigPtr.848_24->ComRxIPduLengthBase;
  _26 = (sizetype) _25;
  _27 = _6 * 2;
  _62 = _26 + _27;
  _28 = Com_gDataMemPtr.844_9 + _62;
  _29 = (short unsigned int) pdulength_39;
  *_28 = _29;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1 ();
  # DEBUG BEGIN_STMT
  _30 = IPduPtr_45->ComIPduSigGWFlagBit;
  if (_30 != 65535)
    goto <bb 14>; [48.88%]
  else
    goto <bb 15>; [51.12%]

  <bb 14> [local count: 38035775]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.850_31 = Com_gConfigPtr;
  _32 = Com_gConfigPtr.850_31->ComSigGWRxPduFlagBase;
  _33 = (unsigned int) _32;
  _34 = _30 >> 3;
  _35 = (unsigned int) _34;
  _36 = _33 + _35;
  _37 = Com_gDataMemPtr.844_9 + _36;
  _63 = _30 & 7;
  _38 = (long unsigned int) _63;
  TS_AtomicSetBit_8 (_37, _38);

  <bb 15> [local count: 77814597]:
  # DEBUG BEGIN_STMT
  # DEBUG D#111 => ComRxPduId_44(D)
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_46
  # DEBUG IPduPtr => IPduPtr_45
  # DEBUG INLINE_ENTRY Com_EB_HandleRxConfirm
  # DEBUG PduId => D#111
  # DEBUG D#110 => D#111
  # DEBUG BEGIN_STMT
  _65 = IPduPtr_45->ComRxIPduFlags;
  _66 = _65 & 1;
  if (_66 == 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 16> [local count: 38907298]:
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_46, 3);
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 38907298]:
  # DEBUG BEGIN_STMT
  # DEBUG D#108 => D#110
  Com_EB_NotifyReceivers.isra.0 (IPduPtr_45);

  <bb 18> [local count: 77814597]:
  # DEBUG BEGIN_STMT

  <bb 19> [local count: 1073741824]:
  # DEBUG IPduFlagBytePtr => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_TpRxIndication (Com_TpRxIndication, funcdef_no=271, decl_uid=5747, cgraph_uid=272, symbol_order=276)


Saving body of Com_TpRxIndication for later reuse
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1

Symbols to be put in SSA form
{ D.15696 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 4
Number of blocks to update: 3 ( 75%)


Com_TpRxIndication (PduIdType PduId, NotifResultType Result)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_SendSignal (Com_SendSignal, funcdef_no=273, decl_uid=6062, cgraph_uid=274, symbol_order=278)

Com_SendSignal (Com_SignalIdType SignalId, const void * SignalDataPtr)
{
  const uint16 index;
  void (*<T69f>) (const void *, uint8 *, const struct ComTxSignalType *, struct Com_EB_WriteIntDataType *) fptr;
  struct Com_EB_WriteIntDataType IntData;
  uint8 * const dataPtr;
  const struct ComTxSignalType * const SignalPtr;
  uint8 RetVal;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  uint8 * Com_gDataMemPtr.851_5;
  sizetype _6;
  short unsigned int _7;
  int _8;
  short unsigned int _30;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 128
  # DEBUG BEGIN_STMT
  SignalPtr_14 = Com_GetTxSignalCfg (SignalId_12(D), 10);
  # DEBUG SignalPtr => SignalPtr_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalPtr_14 == 0B)
    goto <bb 10>; [18.75%]
  else
    goto <bb 3>; [81.25%]

  <bb 3> [local count: 872415233]:
  # DEBUG BEGIN_STMT
  if (SignalDataPtr_15(D) == 0B)
    goto <bb 4>; [10.21%]
  else
    goto <bb 5>; [89.79%]

  <bb 4> [local count: 89073595]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 10, 3);
  goto <bb 10>; [100.00%]

  <bb 5> [local count: 783341638]:
  # DEBUG BEGIN_STMT
  _1 = SignalPtr_14->ComTxSignalFlags;
  _2 = _1 >> 12;
  _3 = (unsigned char) _2;
  if (_3 == 8)
    goto <bb 6>; [12.02%]
  else
    goto <bb 7>; [87.98%]

  <bb 6> [local count: 94157665]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 10, 1);
  goto <bb 10>; [100.00%]

  <bb 7> [local count: 689183973]:
  # DEBUG BEGIN_STMT
  _4 = SignalPtr_14->ComSignalBase.ComBufferRef;
  if (_4 == 65535)
    goto <bb 8>; [12.02%]
  else
    goto <bb 9>; [87.98%]

  <bb 8> [local count: 82839914]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 10, 1);
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 606344059]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.851_5 = Com_gDataMemPtr;
  _6 = (sizetype) _4;
  dataPtr_16 = Com_gDataMemPtr.851_5 + _6;
  # DEBUG dataPtr => dataPtr_16
  # DEBUG BEGIN_STMT
  _30 = MEM[(short unsigned int *)SignalPtr_14 + 22B];
  # DEBUG D#4 => SignalPtr_14
  RetVal_17 = Com_GetSendSignalRetVal.isra.0 (_30);
  # DEBUG RetVal => RetVal_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = SignalPtr_14->ComSignalBase.ComBitSize;
  IntData.arraySize = _7;
  # DEBUG BEGIN_STMT
  IntData.trigger = 0;
  # DEBUG BEGIN_STMT
  IntData.SendSigRetval = RetVal_17;
  # DEBUG BEGIN_STMT
  IntData.SendInMainFunctionTx = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.TMSChanged = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  index_23 = _1 & 511;
  # DEBUG index => index_23
  # DEBUG BEGIN_STMT
  _8 = (int) index_23;
  fptr_24 = Com_WriteFuncs[_8];
  # DEBUG fptr => fptr_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_24 (SignalDataPtr_15(D), dataPtr_16, SignalPtr_14, &IntData);
  # DEBUG BEGIN_STMT
  IntData ={v} {CLOBBER};

  <bb 10> [local count: 1073741824]:
  # RetVal_9 = PHI <128(2), 128(4), 128(6), 128(8), RetVal_17(9)>
  # DEBUG RetVal => RetVal_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_9;

}



;; Function Com_SendDynSignal (Com_SendDynSignal, funcdef_no=274, decl_uid=6066, cgraph_uid=275, symbol_order=279)

Com_SendDynSignal (Com_SignalIdType SignalId, const void * SignalDataPtr, uint16 Length)
{
  struct Com_EB_WriteIntDataType IntData;
  const struct ComTxSignalType * const SignalPtr;
  uint8 RetVal;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  short unsigned int _25;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 128
  # DEBUG BEGIN_STMT
  SignalPtr_10 = Com_GetTxSignalCfg (SignalId_8(D), 33);
  # DEBUG SignalPtr => SignalPtr_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalPtr_10 == 0B)
    goto <bb 10>; [18.75%]
  else
    goto <bb 3>; [81.25%]

  <bb 3> [local count: 872415233]:
  # DEBUG BEGIN_STMT
  if (SignalDataPtr_11(D) == 0B)
    goto <bb 4>; [10.21%]
  else
    goto <bb 5>; [89.79%]

  <bb 4> [local count: 89073595]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 33, 3);
  goto <bb 10>; [100.00%]

  <bb 5> [local count: 783341638]:
  # DEBUG BEGIN_STMT
  _1 = SignalPtr_10->ComTxSignalFlags;
  _2 = _1 >> 12;
  _3 = (unsigned char) _2;
  if (_3 != 8)
    goto <bb 6>; [33.99%]
  else
    goto <bb 7>; [66.01%]

  <bb 6> [local count: 266257823]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 33, 1);
  goto <bb 10>; [100.00%]

  <bb 7> [local count: 517083814]:
  # DEBUG BEGIN_STMT
  _4 = SignalPtr_10->ComSignalBase.ComBitSize;
  if (_4 < Length_12(D))
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 258541907]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 33, 1);
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 258541907]:
  # DEBUG BEGIN_STMT
  _25 = MEM[(short unsigned int *)SignalPtr_10 + 22B];
  # DEBUG D#4 => SignalPtr_10
  RetVal_13 = Com_GetSendSignalRetVal.isra.0 (_25);
  # DEBUG RetVal => RetVal_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.arraySize = Length_12(D);
  # DEBUG BEGIN_STMT
  IntData.trigger = 0;
  # DEBUG BEGIN_STMT
  IntData.SendSigRetval = RetVal_13;
  # DEBUG BEGIN_STMT
  IntData.SendInMainFunctionTx = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.TMSChanged = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_EB_WriteDynSignal_ExitArea_0 (SignalDataPtr_11(D), SignalPtr_10, &IntData);
  IntData ={v} {CLOBBER};

  <bb 10> [local count: 1073741824]:
  # RetVal_5 = PHI <128(2), 128(4), 128(6), 1(8), RetVal_13(9)>
  # DEBUG RetVal => RetVal_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return RetVal_5;

}



;; Function Com_ComXf_GetTxSGId (Com_ComXf_GetTxSGId, funcdef_no=275, decl_uid=6438, cgraph_uid=276, symbol_order=280)

Com_ComXf_GetTxSGId (Com_SignalIdType GroupSignalId)
{
  const struct ComTxSignalType * const SignalPtr;
  Com_SignalGroupIdType SGId;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG SGId => 65535
  # DEBUG BEGIN_STMT
  SignalPtr_5 = Com_GetTxSignalCfg (GroupSignalId_3(D), 255);
  # DEBUG SignalPtr => SignalPtr_5
  # DEBUG BEGIN_STMT
  if (SignalPtr_5 != 0B)
    goto <bb 3>; [81.25%]
  else
    goto <bb 4>; [18.75%]

  <bb 3> [local count: 872415233]:
  # DEBUG BEGIN_STMT
  SGId_6 = SignalPtr_5->ComSignalBase.ComSignalGroupRef;
  # DEBUG SGId => SGId_6

  <bb 4> [local count: 1073741824]:
  # SGId_1 = PHI <65535(2), SGId_6(3)>
  # DEBUG SGId => SGId_1
  # DEBUG BEGIN_STMT
  return SGId_1;

}



;; Function Com_SendSignalGroup (Com_SendSignalGroup, funcdef_no=279, decl_uid=6082, cgraph_uid=280, symbol_order=284)


Symbols to be put in SSA form
{ D.12509 D.15715 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


Merging blocks 2 and 4
Removing basic block 5
Merging blocks 6 and 3
Removing basic block 7
No longer having address taken: retval

Symbols to be put in SSA form
{ D.15713 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Com_SendSignalGroup (Com_SignalGroupIdType SignalGroupId)
{
  const ComIPduRefType PduId;
  const struct ComTxIPduType * const IPduPtr;
  uint8 retval;
  const struct ComTxSignalGroupType * const SignalGPtr;
  uint8 D.15715;
  uint8 retval;
  unsigned char _6;
  const struct Com_ConfigType * Com_gConfigPtr.625_8;
  long unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  unsigned char _14;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SGArrayPtr => 0B
  # DEBUG SGArrayLength => 0
  # DEBUG Com_TxSignalGroupFPtr => Com_EB_SendSignalGroup
  # DEBUG SignalGroupId => SignalGroupId_2(D)
  # DEBUG ServiceId => 13
  # DEBUG INLINE_ENTRY Com_SetupTxSignalGroup_DET
  # DEBUG BEGIN_STMT
  retval_23 = 128;
  # DEBUG retval => retval_23
  # DEBUG BEGIN_STMT
  SignalGPtr_5 = Com_GetTxSignalGroupCfg (SignalGroupId_2(D), 13);
  # DEBUG SignalGPtr => SignalGPtr_5
  # DEBUG BEGIN_STMT
  if (SignalGPtr_5 != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> [local count: 574129754]:
  # DEBUG BEGIN_STMT
  # DEBUG SGArrayPtr => 0B
  # DEBUG SGArrayLength => 0
  # DEBUG Com_TxSignalGroupFPtr => Com_EB_SendSignalGroup
  # DEBUG SignalGPtr => SignalGPtr_5
  # DEBUG retvalPtr => &retval
  # DEBUG SendInMainFunctionTx => 0
  # DEBUG INLINE_ENTRY Com_SetupTxSignalGroup
  # DEBUG BEGIN_STMT
  PduId_7 = SignalGPtr_5->ComIPduRef;
  # DEBUG PduId => PduId_7
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.625_8 = Com_gConfigPtr;
  _9 = Com_gConfigPtr.625_8->ComTxIPduRef;
  _10 = (unsigned int) PduId_7;
  _11 = _10 * 64;
  _12 = _9 + _11;
  IPduPtr_13 = Com_gConfigPtr.625_8 + _12;
  # DEBUG IPduPtr => IPduPtr_13
  # DEBUG BEGIN_STMT
  _14 = Com_EB_SendSignalGroup (0B, 0, SignalGPtr_5, PduId_7, IPduPtr_13, 0);
  retval_24 = _14;
  # DEBUG retval => retval_24

  <bb 4> [local count: 1073741824]:
  # retval_22 = PHI <retval_23(2), retval_24(3)>
  # DEBUG retval => retval_22
  # DEBUG SGArrayPtr => NULL
  # DEBUG SGArrayLength => NULL
  # DEBUG Com_TxSignalGroupFPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG retvalPtr => NULL
  # DEBUG SendInMainFunctionTx => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG BEGIN_STMT
  _6 = retval_22;
  # DEBUG D#573 => {CLOBBER}
  # DEBUG retval => D#573
  _21 = _6;
  # DEBUG SGArrayPtr => NULL
  # DEBUG SGArrayLength => NULL
  # DEBUG Com_TxSignalGroupFPtr => NULL
  # DEBUG SignalGroupId => NULL
  # DEBUG ServiceId => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG retval => NULL
  retval_4 = _21;
  # DEBUG retval => retval_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return retval_4;

}



;; Function Com_SendSignalGroupArray (Com_SendSignalGroupArray, funcdef_no=280, decl_uid=6091, cgraph_uid=281, symbol_order=285)


Symbols to be put in SSA form
{ D.12510 D.15733 D.15749 D.15757 D.15765 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 22
Number of blocks to update: 21 ( 95%)


Merging blocks 2 and 4
Removing basic block 5
Merging blocks 6 and 3
Removing basic block 7
Merging blocks 8 and 10
Removing basic block 11
Removing basic block 14
Merging blocks 15 and 9
Removing basic block 17
Merging blocks 18 and 19
Merging blocks 21 and 20
Merging blocks 18 and 16
No longer having address taken: retval

Symbols to be put in SSA form
{ D.15731 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 9 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Com_SendSignalGroupArray (Com_SignalGroupIdType SignalGroupId, const uint8 * SignalGroupArrayPtr, uint16 SignalGroupArrayLength)
{
  uint8 retval;
  boolean forceTrigger;
  uint8 D.15765;
  uint8 D.15757;
  uint8 retval;
  uint8 D.15749;
  const ComIPduRefType PduId;
  const struct ComTxIPduType * const IPduPtr;
  uint8 retval;
  const struct ComTxSignalGroupType * const SignalGPtr;
  uint8 D.15733;
  uint8 retval;
  unsigned char _8;
  const struct Com_ConfigType * Com_gConfigPtr.625_10;
  long unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  sizetype _14;
  unsigned char _16;
  short unsigned int _18;
  const ComRAMIdxType * _22;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SGArrayPtr => SignalGroupArrayPtr_2(D)
  # DEBUG SGArrayLength => SignalGroupArrayLength_3(D)
  # DEBUG Com_TxSignalGroupFPtr => Com_EB_SendSignalGroupArray_DETCheck
  # DEBUG SignalGroupId => SignalGroupId_4(D)
  # DEBUG ServiceId => 67
  # DEBUG INLINE_ENTRY Com_SetupTxSignalGroup_DET
  # DEBUG BEGIN_STMT
  retval_41 = 128;
  # DEBUG retval => retval_41
  # DEBUG BEGIN_STMT
  SignalGPtr_7 = Com_GetTxSignalGroupCfg (SignalGroupId_4(D), 67);
  # DEBUG SignalGPtr => SignalGPtr_7
  # DEBUG BEGIN_STMT
  if (SignalGPtr_7 != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 9>; [46.53%]

  <bb 3> [local count: 574129754]:
  # DEBUG BEGIN_STMT
  # DEBUG SGArrayPtr => SignalGroupArrayPtr_2(D)
  # DEBUG SGArrayLength => SignalGroupArrayLength_3(D)
  # DEBUG Com_TxSignalGroupFPtr => Com_EB_SendSignalGroupArray_DETCheck
  # DEBUG SignalGPtr => SignalGPtr_7
  # DEBUG retvalPtr => &retval
  # DEBUG SendInMainFunctionTx => 0
  # DEBUG INLINE_ENTRY Com_SetupTxSignalGroup
  # DEBUG BEGIN_STMT
  PduId_9 = SignalGPtr_7->ComIPduRef;
  # DEBUG PduId => PduId_9
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.625_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.625_10->ComTxIPduRef;
  _12 = (unsigned int) PduId_9;
  _13 = _12 * 64;
  _14 = _11 + _13;
  IPduPtr_15 = Com_gConfigPtr.625_10 + _14;
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG BEGIN_STMT
  # DEBUG SGArrayPtr => SignalGroupArrayPtr_2(D)
  # DEBUG SGArrayLength => SignalGroupArrayLength_3(D)
  # DEBUG SignalGPtr => SignalGPtr_7
  # DEBUG PduId => PduId_9
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG SendInMainFunctionTx => 0
  # DEBUG INLINE_ENTRY Com_EB_SendSignalGroupArray_DETCheck
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  if (SignalGroupArrayPtr_2(D) == 0B)
    goto <bb 4>; [10.21%]
  else
    goto <bb 5>; [89.79%]

  <bb 4> [local count: 58618648]:
  # DEBUG D#123 => SignalGroupArrayPtr_2(D)
  # DEBUG D#124 => SignalGroupArrayLength_3(D)
  # DEBUG D#125 => SignalGPtr_7
  # DEBUG D#126 => PduId_9
  # DEBUG D#127 => IPduPtr_15
  # DEBUG D#128 => 0
  # DEBUG INLINE_ENTRY Com_EB_SendSignalGroupArray_DETCheck
  # DEBUG D#134 => D#123
  # DEBUG SGArrayPtr => D#134
  # DEBUG D#133 => D#124
  # DEBUG SGArrayLength => D#133
  # DEBUG D#132 => D#125
  # DEBUG SignalGPtr => D#132
  # DEBUG D#131 => D#126
  # DEBUG PduId => D#131
  # DEBUG D#130 => D#127
  # DEBUG IPduPtr => D#130
  # DEBUG D#129 => D#128
  # DEBUG SendInMainFunctionTx => D#129
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 67, 3);
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  _35 = 128;
  # DEBUG retval => NULL
  # DEBUG SGArrayPtr => NULL
  # DEBUG SGArrayLength => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG SendInMainFunctionTx => NULL
  retval_17 = _35;
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 515511105]:
  # DEBUG BEGIN_STMT
  _18 = SignalGPtr_7->ComByteSize;
  if (SignalGroupArrayLength_3(D) != _18)
    goto <bb 6>; [51.11%]
  else
    goto <bb 7>; [48.89%]

  <bb 6> [local count: 263477726]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 67, 1);
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 252033379]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG SGArrayPtr => SignalGroupArrayPtr_2(D)
  # DEBUG SignalGPtr => SignalGPtr_7
  # DEBUG PduId => PduId_9
  # DEBUG IPduPtr => IPduPtr_15
  # DEBUG SendInMainFunctionTx => 0
  # DEBUG INLINE_ENTRY Com_EB_SendSignalGroupArray
  # DEBUG BEGIN_STMT
  # DEBUG retval => 128
  # DEBUG BEGIN_STMT
  Com_EB_SetGroupSignalTMSFlagOfSignalGroup (SignalGPtr_7, SignalGroupArrayPtr_2(D));
  # DEBUG BEGIN_STMT
  _22 = &MEM[(short unsigned int *)IPduPtr_15 + 16B];
  # DEBUG D#109 => IPduPtr_15
  forceTrigger_23 = Com_EB_WriteShadowBuffer.isra.0 (SignalGPtr_7, _22, SignalGroupArrayPtr_2(D));
  # DEBUG forceTrigger => forceTrigger_23
  # DEBUG BEGIN_STMT
  retval_24 = Com_EB_CalculateSignalGroupTM (forceTrigger_23, SignalGPtr_7, IPduPtr_15, PduId_9, 0);
  # DEBUG retval => retval_24
  # DEBUG BEGIN_STMT
  _32 = retval_24;
  # DEBUG SGArrayPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG SendInMainFunctionTx => NULL
  # DEBUG forceTrigger => NULL
  # DEBUG retval => NULL
  retval_19 = _32;
  # DEBUG retval => retval_19

  <bb 8> [local count: 574129754]:
  # retval_20 = PHI <retval_17(4), 128(6), retval_19(7)>
  # DEBUG retval => retval_20
  # DEBUG BEGIN_STMT
  _36 = retval_20;
  # DEBUG SGArrayPtr => NULL
  # DEBUG SGArrayLength => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG SendInMainFunctionTx => NULL
  # DEBUG retval => NULL
  _16 = _36;
  retval_42 = _16;
  # DEBUG retval => retval_42

  <bb 9> [local count: 1073741824]:
  # retval_40 = PHI <retval_41(2), retval_42(8)>
  # DEBUG retval => retval_40
  # DEBUG SGArrayPtr => NULL
  # DEBUG SGArrayLength => NULL
  # DEBUG Com_TxSignalGroupFPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG retvalPtr => NULL
  # DEBUG SendInMainFunctionTx => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG PduId => NULL
  # DEBUG BEGIN_STMT
  _8 = retval_40;
  # DEBUG D#577 => {CLOBBER}
  # DEBUG retval => D#577
  _39 = _8;
  # DEBUG SGArrayPtr => NULL
  # DEBUG SGArrayLength => NULL
  # DEBUG Com_TxSignalGroupFPtr => NULL
  # DEBUG SignalGroupId => NULL
  # DEBUG ServiceId => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG retval => NULL
  retval_6 = _39;
  # DEBUG retval => retval_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return retval_6;

}



;; Function Com_ComXf_TxPrepareBuffer (Com_ComXf_TxPrepareBuffer, funcdef_no=281, decl_uid=6436, cgraph_uid=282, symbol_order=286)


Symbols to be put in SSA form
{ D.12511 D.15774 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


Merging blocks 4 and 7
Merging blocks 4 and 8
Merging blocks 4 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Com_ComXf_TxPrepareBuffer (uint8 * buffer, Com_SignalGroupIdType SignalGroupId, boolean Initialize)
{
  const uint8 * const pduBuffer;
  const ComSignalDescByteType byteSize;
  uint16 D.15774;
  const struct ComTxIPduType * const IPduPtr;
  const ComIPduRefType PduId;
  const struct ComTxSignalGroupType * const SignalGPtr;
  uint16 length;
  const struct Com_ConfigType * Com_gConfigPtr.860_1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  sizetype _5;
  short unsigned int _18;
  uint8 * Com_gDataMemPtr.441_20;
  short unsigned int _21;
  int _22;
  short unsigned int _23;
  int _24;
  int _25;
  sizetype _26;
  long unsigned int _28;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG length => 0
  # DEBUG BEGIN_STMT
  SignalGPtr_11 = Com_GetTxSignalGroupCfg (SignalGroupId_9(D), 255);
  # DEBUG SignalGPtr => SignalGPtr_11
  # DEBUG BEGIN_STMT
  if (SignalGPtr_11 != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 3> [local count: 751619277]:
  # DEBUG BEGIN_STMT
  if (Initialize_12(D) == 1)
    goto <bb 4>; [20.24%]
  else
    goto <bb 5>; [79.76%]

  <bb 4> [local count: 152127742]:
  # DEBUG BEGIN_STMT
  PduId_13 = SignalGPtr_11->ComIPduRef;
  # DEBUG PduId => PduId_13
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.860_1 = Com_gConfigPtr;
  _2 = Com_gConfigPtr.860_1->ComTxIPduRef;
  _3 = (unsigned int) PduId_13;
  _4 = _3 * 64;
  _5 = _2 + _4;
  IPduPtr_14 = Com_gConfigPtr.860_1 + _5;
  # DEBUG IPduPtr => IPduPtr_14
  # DEBUG BEGIN_STMT
  _18 = MEM[(short unsigned int *)IPduPtr_14 + 16B];
  # DEBUG D#73 => IPduPtr_14
  # DEBUG SGArrayPtr => buffer_15(D)
  # DEBUG SignalGPtr => SignalGPtr_11
  # DEBUG INLINE_ENTRY Com_EB_InitSGBuffer
  # DEBUG IPduPtr => D#73
  # DEBUG BEGIN_STMT
  byteSize_19 = SignalGPtr_11->ComByteSize;
  # DEBUG byteSize => byteSize_19
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.441_20 = Com_gDataMemPtr;
  _21 = _18;
  _22 = (int) _21;
  _23 = SignalGPtr_11->ComSignalPositionInByte;
  _24 = (int) _23;
  _25 = _22 + _24;
  _26 = (sizetype) _25;
  pduBuffer_27 = Com_gDataMemPtr.441_20 + _26;
  # DEBUG pduBuffer => pduBuffer_27
  # DEBUG BEGIN_STMT
  _28 = (long unsigned int) byteSize_19;
  TS_MemCpy32 (buffer_15(D), pduBuffer_27, _28);
  # DEBUG BEGIN_STMT
  _30 = byteSize_19;
  # DEBUG SGArrayPtr => NULL
  # DEBUG SignalGPtr => NULL
  # DEBUG byteSize => NULL
  # DEBUG pduBuffer => NULL
  length_17 = _30;
  # DEBUG length => length_17

  <bb 5> [local count: 1073741824]:
  # length_6 = PHI <0(2), 0(3), length_17(4)>
  # DEBUG length => length_6
  # DEBUG BEGIN_STMT
  return length_6;

}



;; Function Com_SwitchIpduTxMode (Com_SwitchIpduTxMode, funcdef_no=282, decl_uid=6100, cgraph_uid=283, symbol_order=287)

Com_SwitchIpduTxMode (PduIdType PduId, boolean Mode)
{
  uint8 CurrentTM;
  uint8 PduStatusByte;
  uint8 * const PduStatusFlagsPtr;
  unsigned char Com_InitStatus.862_1;
  const struct Com_ConfigType * Com_gConfigPtr.863_2;
  short unsigned int _3;
  uint8 * Com_gDataMemPtr.864_4;
  short unsigned int _5;
  int _6;
  int _7;
  int _8;
  sizetype _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.862_1 = Com_InitStatus;
  if (Com_InitStatus.862_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 39, 2);
  goto <bb 14>; [100.00%]

  <bb 4> [local count: 719407022]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.863_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.863_2->ComTxIPduArraySize;
  if (_3 <= PduId_18(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 39, 1);
  goto <bb 14>; [100.00%]

  <bb 6> [local count: 482002704]:
  # DEBUG BEGIN_STMT
  if (Mode_19(D) > 1)
    goto <bb 7>; [59.00%]
  else
    goto <bb 8>; [41.00%]

  <bb 7> [local count: 284381595]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 39, 1);
  goto <bb 14>; [100.00%]

  <bb 8> [local count: 197621109]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.864_4 = Com_gDataMemPtr;
  _5 = Com_gConfigPtr.863_2->ComTxIPduStatusBase;
  _6 = (int) _5;
  _7 = (int) PduId_18(D);
  _8 = _6 + _7;
  _9 = (sizetype) _8;
  PduStatusFlagsPtr_20 = Com_gDataMemPtr.864_4 + _9;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = *PduStatusFlagsPtr_20;
  # DEBUG PduStatusByte => _10
  # DEBUG BEGIN_STMT
  _11 = _10 >> 6;
  CurrentTM_22 = _11 & 1;
  # DEBUG CurrentTM => CurrentTM_22
  # DEBUG BEGIN_STMT
  if (Mode_19(D) != CurrentTM_22)
    goto <bb 9>; [66.00%]
  else
    goto <bb 13>; [34.00%]

  <bb 9> [local count: 130429932]:
  # DEBUG BEGIN_STMT
  if (Mode_19(D) == 1)
    goto <bb 10>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 10> [local count: 44346177]:
  # DEBUG BEGIN_STMT
  _12 = _10 | 64;
  # DEBUG PduStatusByte => _12
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 86083755]:
  # DEBUG BEGIN_STMT
  _13 = _10 & 191;
  # DEBUG PduStatusByte => _13

  <bb 12> [local count: 130429932]:
  # PduStatusByte_28 = PHI <_12(10), _13(11)>
  # DEBUG PduStatusByte => PduStatusByte_28
  # DEBUG BEGIN_STMT
  _14 = PduStatusByte_28 | 128;
  # DEBUG PduStatusByte => _14
  # DEBUG BEGIN_STMT
  *PduStatusFlagsPtr_20 = _14;

  <bb 13> [local count: 197621109]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG D#147 => {CLOBBER}
  # DEBUG PduStatusByte => D#147

  <bb 14> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_TriggerIPDUSend (Com_TriggerIPDUSend, funcdef_no=283, decl_uid=6097, cgraph_uid=284, symbol_order=288)

Com_TriggerIPDUSend (PduIdType ComTxPduId)
{
  const struct ComTxIPduType * const IPduPtr;
  unsigned char Com_InitStatus.871_1;
  const struct Com_ConfigType * Com_gConfigPtr.872_2;
  short unsigned int _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  uint8 * Com_gDataMemPtr.875_8;
  short unsigned int _9;
  int _10;
  int _11;
  int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned char _24;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.871_1 = Com_InitStatus;
  if (Com_InitStatus.871_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 23, 2);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.872_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.872_2->ComTxIPduArraySize;
  if (_3 <= ComTxPduId_18(D))
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 237404317]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 23, 1);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 482002705]:
  # DEBUG BEGIN_STMT
  _4 = Com_gConfigPtr.872_2->ComTxIPduRef;
  _5 = (unsigned int) ComTxPduId_18(D);
  _6 = _5 * 64;
  _7 = _4 + _6;
  IPduPtr_19 = Com_gConfigPtr.872_2 + _7;
  # DEBUG IPduPtr => IPduPtr_19
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.875_8 = Com_gDataMemPtr;
  _9 = Com_gConfigPtr.872_2->ComTxIPduStatusBase;
  _10 = (int) _9;
  _11 = (int) ComTxPduId_18(D);
  _12 = _10 + _11;
  _13 = (sizetype) _12;
  _14 = Com_gDataMemPtr.875_8 + _13;
  _15 = *_14;
  _24 = _15 & 2;
  if (_24 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 241001352]:
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (_14, 4);
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 241001352]:
  # DEBUG BEGIN_STMT
  Com_EB_Send_Pdu (ComTxPduId_18(D), IPduPtr_19);

  <bb 9> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_TriggerTransmit (Com_TriggerTransmit, funcdef_no=284, decl_uid=5741, cgraph_uid=285, symbol_order=289)

Com_TriggerTransmit (PduIdType ComTxPduId, struct PduInfoType * PduInfoPtr)
{
  boolean (*<T5ec>) (PduIdType, struct PduInfoType *) fptr;
  struct PduInfoType PduData;
  const struct ComTxIPduType * IPduPtr;
  Std_ReturnType retval;
  unsigned char Com_InitStatus.879_1;
  uint8 * _2;
  const struct Com_ConfigType * Com_gConfigPtr.880_3;
  short unsigned int _4;
  long unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  sizetype _8;
  uint8 * Com_gDataMemPtr.883_9;
  short unsigned int _10;
  sizetype _11;
  uint8 * _12;
  short unsigned int _13;
  sizetype _14;
  unsigned int _15;
  ComIPduSizeType * _16;
  short unsigned int _17;
  short unsigned int _18;
  int _19;
  const struct Com_ConfigType * Com_gConfigPtr.887_20;
  short unsigned int _21;
  int _22;
  int _23;
  int _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  short unsigned int _28;
  uint8 * _29;
  uint8 * _30;
  long unsigned int _31;
  unsigned char _32;
  unsigned char _33;
  sizetype _37;
  unsigned char _52;
  unsigned char _58;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG retval => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PduInfoPtr_38(D) == 0B)
    goto <bb 3>; [17.43%]
  else
    goto <bb 4>; [82.57%]

  <bb 3> [local count: 187153200]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 65, 3);
  goto <bb 15>; [100.00%]

  <bb 4> [local count: 886588623]:
  # DEBUG BEGIN_STMT
  PduInfoPtr_38(D)->SduLength = 0;
  # DEBUG BEGIN_STMT
  Com_InitStatus.879_1 = Com_InitStatus;
  if (Com_InitStatus.879_1 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 292574246]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 65, 2);
  goto <bb 15>; [100.00%]

  <bb 6> [local count: 594014378]:
  # DEBUG BEGIN_STMT
  _2 = PduInfoPtr_38(D)->SduDataPtr;
  if (_2 == 0B)
    goto <bb 7>; [17.43%]
  else
    goto <bb 8>; [82.57%]

  <bb 7> [local count: 103536706]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 65, 3);
  goto <bb 15>; [100.00%]

  <bb 8> [local count: 490477671]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.880_3 = Com_gConfigPtr;
  _4 = Com_gConfigPtr.880_3->ComTxIPduArraySize;
  if (_4 <= ComTxPduId_41(D))
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 161857632]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 65, 1);
  goto <bb 15>; [100.00%]

  <bb 10> [local count: 328620040]:
  # DEBUG BEGIN_STMT
  _5 = Com_gConfigPtr.880_3->ComTxIPduRef;
  _6 = (unsigned int) ComTxPduId_41(D);
  _7 = _6 * 64;
  _8 = _5 + _7;
  IPduPtr_42 = Com_gConfigPtr.880_3 + _8;
  # DEBUG IPduPtr => IPduPtr_42
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.883_9 = Com_gDataMemPtr;
  _10 = IPduPtr_42->ComIPduValueRef;
  _11 = (sizetype) _10;
  _12 = Com_gDataMemPtr.883_9 + _11;
  PduData.SduDataPtr = _12;
  # DEBUG BEGIN_STMT
  _13 = Com_gConfigPtr.880_3->ComTxIPduLengthBase;
  _14 = (sizetype) _13;
  _15 = _6 * 2;
  _37 = _14 + _15;
  _16 = Com_gDataMemPtr.883_9 + _37;
  _17 = *_16;
  PduData.SduLength = _17;
  # DEBUG BEGIN_STMT
  _18 = IPduPtr_42->ComIPduTrigTxCallOutFuncPtrRef;
  if (_18 != 65535)
    goto <bb 11>; [66.00%]
  else
    goto <bb 12>; [34.00%]

  <bb 11> [local count: 216889226]:
  # DEBUG BEGIN_STMT
  _19 = (int) _18;
  fptr_45 = Com_TxCallouts[_19];
  # DEBUG fptr => fptr_45
  # DEBUG BEGIN_STMT
  fptr_45 (ComTxPduId_41(D), &PduData);

  <bb 12> [local count: 328620040]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.887_20 = Com_gConfigPtr;
  _21 = Com_gConfigPtr.887_20->ComTxIPduStatusBase;
  _22 = (int) _21;
  _23 = (int) ComTxPduId_41(D);
  _24 = _22 + _23;
  _25 = (sizetype) _24;
  _26 = Com_gDataMemPtr.883_9 + _25;
  _27 = *_26;
  _52 = _27 & 1;
  if (_52 != 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 13> [local count: 108444613]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _28 = PduData.SduLength;
  PduInfoPtr_38(D)->SduLength = _28;
  # DEBUG BEGIN_STMT
  _29 = PduInfoPtr_38(D)->SduDataPtr;
  _30 = PduData.SduDataPtr;
  _31 = (long unsigned int) _28;
  TS_MemCpy32 (_29, _30, _31);
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _32 = IPduPtr_42->ComTxIPduFlags;
  _33 = _32 >> 3;
  _58 = _33 & 3;
  if (_58 == 1)
    goto <bb 14>; [20.24%]
  else
    goto <bb 15>; [79.76%]

  <bb 14> [local count: 21949190]:
  # DEBUG BEGIN_STMT
  Com_EB_ClearTxUpdateBits (IPduPtr_42);

  <bb 15> [local count: 1073741824]:
  # retval_34 = PHI <1(3), 1(5), 1(7), 1(9), 1(12), 0(14), 0(13)>
  # DEBUG retval => retval_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PduData ={v} {CLOBBER};
  return retval_34;

}



;; Function Com_TxConfirmation (Com_TxConfirmation, funcdef_no=287, decl_uid=5749, cgraph_uid=288, symbol_order=292)


Symbols to be put in SSA form
{ D.12515 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 25
Number of blocks to update: 24 ( 96%)


Merging blocks 6 and 9
Removing basic block 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;; 2 succs { 3 4 }
;; 3 succs { 22 }
;; 4 succs { 5 6 }
;; 5 succs { 22 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 21 20 19 15 14 }
;; 14 succs { 21 15 }
;; 15 succs { 16 19 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 21 19 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 1 }
Com_TxConfirmation (PduIdType ComTxPduId)
{
  uint8 BitRes;
  const ComTxIPduMinimumDelayTimeFactorType MDT;
  uint8 N;
  ComIPduRefType NRamBufIdx;
  const struct ComTxIPduType * IPduPtr;
  unsigned char Com_InitStatus.888_1;
  const struct Com_ConfigType * Com_gConfigPtr.889_2;
  short unsigned int _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  uint8 * Com_gDataMemPtr.892_18;
  const struct Com_ConfigType * Com_gConfigPtr.893_19;
  short unsigned int _20;
  int _21;
  int _22;
  int _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned char _27;
  short unsigned int _29;
  const struct Com_ConfigType * Com_gConfigPtr.895_30;
  short unsigned int _31;
  int _32;
  int _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _39;
  unsigned char iftmp.896_40;
  unsigned char _41;
  unsigned char iftmp.896_42;
  unsigned char iftmp.896_43;
  unsigned char _44;
  unsigned char _46;
  short unsigned int _47;
  sizetype _48;
  sizetype _50;
  sizetype _51;
  uint8 * _52;
  unsigned char _53;
  const struct Com_ConfigType * Com_gConfigPtr.904_55;
  short unsigned int _56;
  int _57;
  int _58;
  sizetype _59;
  uint8 * _60;
  unsigned char _61;
  unsigned char _62;
  const struct Com_ConfigType * Com_gConfigPtr.908_63;
  short unsigned int _64;
  int _65;
  int _66;
  sizetype _67;
  uint8 * _68;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.888_1 = Com_InitStatus;
  if (Com_InitStatus.888_1 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 64, 2);
  goto <bb 22>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.889_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.889_2->ComTxIPduArraySize;
  if (_3 <= ComTxPduId_10(D))
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 64, 1);
  goto <bb 22>; [100.00%]

  <bb 6> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  _4 = Com_gConfigPtr.889_2->ComTxIPduRef;
  _5 = (unsigned int) ComTxPduId_10(D);
  _6 = _5 * 64;
  _7 = _4 + _6;
  IPduPtr_11 = Com_gConfigPtr.889_2 + _7;
  # DEBUG IPduPtr => IPduPtr_11
  # DEBUG BEGIN_STMT
  # DEBUG ComTxPduId => ComTxPduId_10(D)
  # DEBUG IPduPtr => IPduPtr_11
  # DEBUG INLINE_ENTRY Com_EB_HlpTxConfirmation
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = IPduPtr_11->ComTxIPduFlags;
  _16 = _15 >> 3;
  _17 = _16 & 3;
  if (_17 == 2)
    goto <bb 7>; [20.24%]
  else
    goto <bb 8>; [79.76%]

  <bb 7> [local count: 72803991]:
  # DEBUG BEGIN_STMT
  Com_EB_ClearTxUpdateBits (IPduPtr_11);

  <bb 8> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.892_18 = Com_gDataMemPtr;
  Com_gConfigPtr.893_19 = Com_gConfigPtr;
  _20 = Com_gConfigPtr.893_19->ComTxIPduStatusBase;
  _21 = (int) _20;
  _22 = (int) ComTxPduId_10(D);
  _23 = _21 + _22;
  _24 = (sizetype) _23;
  _25 = Com_gDataMemPtr.892_18 + _24;
  _26 = *_25;
  _27 = _26 & 2;
  if (_27 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 118702158]:
  # DEBUG BEGIN_STMT
  MDT_28 = IPduPtr_11->ComTxIPduMinimumDelayTimeFactorValue;
  # DEBUG MDT => MDT_28
  # DEBUG BEGIN_STMT
  _29 = MEM[(short unsigned int *)IPduPtr_11 + 38B];
  # DEBUG D#12 => IPduPtr_11
  Com_EB_MdtQueue.isra.0 (ComTxPduId_10(D), _29, MDT_28);

  <bb 10> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.895_30 = Com_gConfigPtr;
  _31 = Com_gConfigPtr.895_30->ComTxIPduStatusBase;
  _32 = (int) _31;
  _33 = _22 + _32;
  _34 = (sizetype) _33;
  _35 = Com_gDataMemPtr.892_18 + _34;
  _36 = *_35;
  _37 = _36 >> 6;
  BitRes_38 = _37 & 1;
  # DEBUG BitRes => BitRes_38
  # DEBUG BEGIN_STMT
  if (BitRes_38 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [local count: 179851755]:
  _39 = IPduPtr_11->ComTxModeModes;
  iftmp.896_40 = _39 & 15;
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 179851755]:
  _41 = IPduPtr_11->ComTxModeModes;
  iftmp.896_42 = _41 >> 4;

  <bb 13> [local count: 359703511]:
  # iftmp.896_43 = PHI <iftmp.896_40(11), iftmp.896_42(12)>
  # DEBUG AktTM => iftmp.896_43
  # DEBUG BEGIN_STMT
  switch (iftmp.896_43) <default: <L10> [20.00%], case 0: <L9> [20.00%], case 1 ... 3: <L8> [20.00%], case 4: <L7> [20.00%], case 5: <L6> [20.00%]>

  <bb 14> [local count: 71940702]:
<L6>:
  # DEBUG BEGIN_STMT
  _44 = _36 >> 3;
  BitRes_45 = _44 & 1;
  # DEBUG BitRes => BitRes_45
  # DEBUG BEGIN_STMT
  if (BitRes_45 == 0)
    goto <bb 21>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [local count: 107911053]:
<L7>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _46 = _36 & 8;
  if (_46 != 0)
    goto <bb 16>; [33.00%]
  else
    goto <bb 19>; [67.00%]

  <bb 16> [local count: 35610648]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _47 = Com_gConfigPtr.895_30->ComNTimesQueueBaseRemaining;
  _48 = (sizetype) _47;
  # DEBUG NTimesQueueBaseRemaining => Com_gDataMemPtr.892_18 + _48
  # DEBUG BEGIN_STMT
  NRamBufIdx_49 = IPduPtr_11->NTimesQueueRef;
  # DEBUG NRamBufIdx => NRamBufIdx_49
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1 ();
  # DEBUG BEGIN_STMT
  _50 = (sizetype) NRamBufIdx_49;
  _51 = _48 + _50;
  _52 = Com_gDataMemPtr.892_18 + _51;
  _53 = *_52;
  N_54 = _53 + 255;
  # DEBUG N => N_54
  # DEBUG BEGIN_STMT
  *_52 = N_54;
  # DEBUG BEGIN_STMT
  if (N_54 == 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [local count: 17805324]:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.904_55 = Com_gConfigPtr;
  _56 = Com_gConfigPtr.904_55->ComTxIPduStatusBase;
  _57 = (int) _56;
  _58 = _22 + _57;
  _59 = (sizetype) _58;
  _60 = Com_gDataMemPtr.892_18 + _59;
  _61 = *_60;
  _62 = _61 & 247;
  *_60 = _62;

  <bb 18> [local count: 35610648]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1 ();
  # DEBUG BEGIN_STMT
  if (N_54 != 0)
    goto <bb 21>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 19> [local count: 162046432]:
<L8>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.908_63 = Com_gConfigPtr;
  _64 = Com_gConfigPtr.908_63->ComTxIPduStatusBase;
  _65 = (int) _64;
  _66 = _22 + _65;
  _67 = (sizetype) _66;
  _68 = Com_gDataMemPtr.892_18 + _67;
  TS_AtomicClearBit_8 (_68, 5);
  # DEBUG BEGIN_STMT
  Com_EB_HandleTxConfirmations (IPduPtr_11);
  # DEBUG BEGIN_STMT
  goto <bb 21>; [100.00%]

  <bb 20> [local count: 71940702]:
<L9>:
  # DEBUG BEGIN_STMT
  Com_EB_TxDM_TMNone (IPduPtr_11, ComTxPduId_10(D));
  # DEBUG BEGIN_STMT
  Com_EB_HandleTxConfirmations (IPduPtr_11);
  # DEBUG BEGIN_STMT

  <bb 21> [local count: 359703511]:
<L10>:

  <bb 22> [local count: 1073741824]:
  # DEBUG ComTxPduId => NULL
  # DEBUG IPduPtr => NULL
  # DEBUG NRamBufIdx => NULL
  # DEBUG N => NULL
  # DEBUG MDT => NULL
  # DEBUG BitRes => NULL
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_TpTxConfirmation (Com_TpTxConfirmation, funcdef_no=355, decl_uid=5752, cgraph_uid=289, symbol_order=293)

Merging blocks 2 and 4
Removing basic block 5
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Com_TpTxConfirmation (PduIdType PduId, NotifResultType Result)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG PduId => PduId_1(D)
  # DEBUG Result => Result_2(D)
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG PduId => NULL
  # DEBUG Result => NULL
  return;

}



;; Function Com_UpdateShadowSignal (Com_UpdateShadowSignal, funcdef_no=289, decl_uid=6080, cgraph_uid=290, symbol_order=294)

Com_UpdateShadowSignal (Com_SignalIdType SignalId, const void * SignalDataPtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_SendSignal (SignalId_2(D), SignalDataPtr_3(D));
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_GetVersionInfo (Com_GetVersionInfo, funcdef_no=290, decl_uid=6042, cgraph_uid=291, symbol_order=295)

Com_GetVersionInfo (struct Std_VersionInfoType * versionInfoPtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (versionInfoPtr_2(D) == 0B)
    goto <bb 3>; [17.43%]
  else
    goto <bb 4>; [82.57%]

  <bb 3> [local count: 187153200]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 9, 3);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 886588625]:
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->vendorID = 1;
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->moduleID = 50;
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->sw_major_version = 6;
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->sw_minor_version = 3;
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->sw_patch_version = 53;

  <bb 5> [local count: 1073741824]:
  return;

}



;; Function Com_DeInit (Com_DeInit, funcdef_no=291, decl_uid=6044, cgraph_uid=292, symbol_order=296)

Com_DeInit ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}



;; Function Com_GetStatus (Com_GetStatus, funcdef_no=292, decl_uid=6057, cgraph_uid=293, symbol_order=297)

Com_GetStatus ()
{
  Com_StatusType statusRetVal;
  unsigned char Com_InitStatus.911_1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG statusRetVal => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.911_1 = Com_InitStatus;
  if (Com_InitStatus.911_1 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
<L1>:
  # DEBUG BEGIN_STMT
  # DEBUG statusRetVal => 1
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741824]:
  # statusRetVal_2 = PHI <0(2), 1(3)>
<L5>:
  # DEBUG statusRetVal => statusRetVal_2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return statusRetVal_2;

}



;; Function Com_CopyTxData (Com_CopyTxData, funcdef_no=293, decl_uid=5757, cgraph_uid=294, symbol_order=298)

Com_CopyTxData (PduIdType PduId, struct PduInfoType * PduInfoPtr, struct RetryInfoType * RetryInfoPtr, PduLengthType * TxDataCntPtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return 1;

}



;; Function Com_CopyRxData (Com_CopyRxData, funcdef_no=294, decl_uid=5761, cgraph_uid=295, symbol_order=299)

Com_CopyRxData (PduIdType PduId, const struct PduInfoType * PduInfoPointer, PduLengthType * RxBufferSizePtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return 1;

}



;; Function Com_StartOfReception (Com_StartOfReception, funcdef_no=295, decl_uid=5765, cgraph_uid=296, symbol_order=300)

Com_StartOfReception (PduIdType ComRxPduId, PduLengthType TpSduLength, PduLengthType * RxBufferSizePtr)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return 1;

}


