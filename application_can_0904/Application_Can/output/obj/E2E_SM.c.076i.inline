IPA function summary for E2E_EB_SMAddStatus.isra.0/14 inlinable
  global time:     82.714558
  self size:       27
  global size:     27
  min size:       0
  self stack:      0
  global stack:    0
    size:16.000000, time:70.018163
    size:6.000000, time:8.039355,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.159466,  nonconst if:(op2[ref offset: 80] changed)
    size:1.000000, time:0.999192,  nonconst if:(op1 changed)
    size:2.000000, time:1.998383,  nonconst if:(op2[ref offset: 80] changed || op1 changed)
  loop iterations:(op1 changed)
  array index:(op2[ref offset: 80] changed)
  calls:

IPA function summary for E2E_EB_CheckHandleSMNoData.isra.0/13 inlinable
  global time:     6.320000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.320000,  executed if:(op0 != 3),  nonconst if:(op0 changed) && (op0 != 3)
    size:0.500000, time:0.282200,  executed if:(op0 == 3 || op0 == 5) && (not inlined)
    size:0.500000, time:0.282200,  executed if:(op0 == 3 || op0 == 5)
    size:0.500000, time:0.217800,  executed if:(op0 != 5) && (op0 != 3) && (not inlined)
    size:0.500000, time:0.217800,  executed if:(op0 != 5) && (op0 != 3)
  calls:

IPA function summary for E2E_EB_SMCheckStateParamChecks.isra.0/12 inlinable
  global time:     8.000000
  self size:       13
  global size:     13
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 104] changed) && (not inlined)
    size:6.500000, time:2.500000,  nonconst if:(op1[ref offset: 104] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 80] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 80] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1[ref offset: 80] changed || op0 changed)
  calls:

IPA function summary for E2E_EB_CheckHandleSMInvalid/10 inlinable
  global time:     23.000000
  self size:       18
  global size:     18
  min size:       8
  self stack:      0
  global stack:    0
    size:7.000000, time:5.000000
    size:6.000000, time:4.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
  calls:
    E2E_EB_SMAddStatus.isra.0/14 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:13 stack: 0

IPA function summary for E2E_EB_CheckHandleSMValid/9 inlinable
  global time:     23.000000
  self size:       18
  global size:     18
  min size:       8
  self stack:      0
  global stack:    0
    size:7.000000, time:5.000000
    size:6.000000, time:4.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
  calls:
    E2E_EB_SMAddStatus.isra.0/14 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:13 stack: 0

IPA function summary for E2E_EB_CheckHandleSMInit/8 inlinable
  global time:     23.000000
  self size:       19
  global size:     19
  min size:       8
  self stack:      0
  global stack:    0
    size:7.500000, time:5.000000
    size:6.500000, time:4.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
  calls:
    E2E_EB_SMAddStatus.isra.0/14 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:13 stack: 0

IPA function summary for E2E_EB_SMCheck/6 inlinable
  global time:     18.000000
  self size:       33
  global size:     33
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 104] changed) && (not inlined)
    size:10.500000, time:4.500000,  nonconst if:(op2[ref offset: 104] changed)
  calls:
    E2E_EB_CheckHandleSMInvalid/10 function not considered for inlining
      loop depth: 0 freq:0.20 size: 5 time: 14callee size: 9 stack: 0 predicate: (op2[ref offset: 104] == 4)
    E2E_EB_CheckHandleSMValid/9 function not considered for inlining
      loop depth: 0 freq:0.20 size: 5 time: 14callee size: 9 stack: 0 predicate: (op2[ref offset: 104] == 0)
    E2E_EB_CheckHandleSMInit/8 function not considered for inlining
      loop depth: 0 freq:0.20 size: 5 time: 14callee size: 9 stack: 0 predicate: (op2[ref offset: 104] == 3)
    E2E_EB_CheckHandleSMNoData.isra.0/13 function not considered for inlining
      loop depth: 0 freq:0.20 size: 4 time: 13callee size: 4 stack: 0 predicate: (op2[ref offset: 104] == 2)

IPA function summary for E2E_EB_SMCheckProfileStatusChecks/5 inlinable
  global time:     4.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:6.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for E2E_EB_SMCheckConfigParamChecks/3 inlinable
  global time:     10.617188
  self size:       32
  global size:     32
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.250000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 24] changed) && (not inlined)
    size:2.500000, time:0.281250,  nonconst if:(op0[ref offset: 24] changed)
    size:0.500000, time:0.250000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.250000,  nonconst if:(op0[ref offset: 32] changed)
    size:1.000000, time:0.500000,  nonconst if:(op0[ref offset: 24] changed || op0[ref offset: 32] changed)
    size:2.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op0[ref offset: 24] changed || op0[ref offset: 32] changed)
    size:0.500000, time:0.125000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 8] changed) && (not inlined)
    size:0.500000, time:0.125000,  nonconst if:(op0[ref offset: 8] changed)
    size:0.500000, time:0.125000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.125000,  nonconst if:(op0[ref offset: 16] changed)
    size:1.000000, time:0.250000,  nonconst if:(op0[ref offset: 8] changed || op0[ref offset: 16] changed)
    size:2.000000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed || op0[ref offset: 8] changed || op0[ref offset: 16] changed)
    size:0.500000, time:0.062500,  executed if:(not inlined),  nonconst if:(op0[ref offset: 40] changed) && (not inlined)
    size:0.500000, time:0.062500,  nonconst if:(op0[ref offset: 40] changed)
    size:0.500000, time:0.062500,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.062500,  nonconst if:(op0[ref offset: 48] changed)
    size:1.000000, time:0.125000,  nonconst if:(op0[ref offset: 40] changed || op0[ref offset: 48] changed)
    size:2.000000, time:0.250000,  nonconst if:(op0[ref offset: 0] changed || op0[ref offset: 40] changed || op0[ref offset: 48] changed)
    size:2.000000, time:0.125000,  nonconst if:(op0[ref offset: 16] changed || op0[ref offset: 48] changed)
    size:2.000000, time:0.062500,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 16] changed)
    size:2.000000, time:0.015625,  executed if:(op0[ref offset: 24] != 0),  nonconst if:(op0[ref offset: 24] changed || op0[ref offset: 8] changed) && (op0[ref offset: 24] != 0)
    size:2.000000, time:0.007812,  executed if:(op0[ref offset: 24] != 0),  nonconst if:(op0[ref offset: 8] changed || op0[ref offset: 40] changed) && (op0[ref offset: 24] != 0)
  calls:

IPA function summary for E2E_SMCheckInit/1 inlinable
  global time:     27.374273
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.400000,  executed if:(op1 != 0B),  nonconst if:(op0 changed) && (op1 != 0B)
    size:7.500000, time:11.273341,  executed if:(op0 != 0B) && (op1 != 0B)
    size:0.500000, time:1.447727,  executed if:(op0 != 0B) && (op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op0 != 0B) && (op1 != 0B) && (not inlined)
    size:0.500000, time:1.447727,  executed if:(op0 != 0B) && (op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op0 != 0B) && (op1 != 0B)
    size:2.500000, time:1.925477,  executed if:(op0 != 0B) && (op1 != 0B) && (not inlined)
  calls:
    E2E_EB_SMCheckConfigParamChecks/3 function not considered for inlining
      loop depth: 0 freq:0.49 size: 3 time: 12callee size:16 stack: 0 predicate: (op0 != 0B) && (op1 != 0B)

IPA function summary for E2E_SMCheck/0 inlinable
  global time:     21.638892
  self size:       29
  global size:     29
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.400000,  executed if:(op1 != 0B),  nonconst if:(op2 changed) && (op1 != 0B)
    size:4.000000, time:1.617000,  executed if:(op2 != 0B) && (op1 != 0B)
    size:0.500000, time:0.159250,  executed if:(op2 != 0B) && (op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op2 != 0B) && (op1 != 0B) && (not inlined)
    size:0.500000, time:0.159250,  executed if:(op2 != 0B) && (op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op2 != 0B) && (op1 != 0B)
    size:2.000000, time:0.414050,  executed if:(op2 != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op2 != 0B) && (op1 != 0B)
  calls:
    E2E_EB_SMCheck/6 function not considered for inlining
      loop depth: 0 freq:0.10 size: 5 time: 14callee size:16 stack: 0 predicate: (op2 != 0B) && (op1 != 0B)
    E2E_EB_SMCheckProfileStatusChecks/5 function not considered for inlining
      loop depth: 0 freq:0.21 size: 3 time: 12callee size: 4 stack: 0 predicate: (op2 != 0B) && (op1 != 0B)
    E2E_EB_SMCheckStateParamChecks.isra.0/12 function not considered for inlining
      loop depth: 0 freq:0.32 size: 4 time: 13callee size: 6 stack: 0 predicate: (op2 != 0B) && (op1 != 0B)
    E2E_EB_SMCheckConfigParamChecks/3 function not considered for inlining
      loop depth: 0 freq:0.49 size: 3 time: 12callee size:16 stack: 0 predicate: (op2 != 0B) && (op1 != 0B)


Flattening functions:
Overall time estimate: 247.664911 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in E2E_EB_SMAddStatus.isra.0/14.
Enqueueing calls in E2E_EB_CheckHandleSMNoData.isra.0/13.
Enqueueing calls in E2E_EB_SMCheckStateParamChecks.isra.0/12.
Enqueueing calls in E2E_EB_CheckHandleSMInvalid/10.
Enqueueing calls in E2E_EB_CheckHandleSMValid/9.
Enqueueing calls in E2E_EB_CheckHandleSMInit/8.
Enqueueing calls in E2E_EB_SMCheck/6.
Enqueueing calls in E2E_EB_SMCheckProfileStatusChecks/5.
Enqueueing calls in E2E_EB_SMCheckConfigParamChecks/3.
Enqueueing calls in E2E_SMCheckInit/1.
Enqueueing calls in E2E_SMCheck/0.

Considering E2E_EB_CheckHandleSMNoData.isra.0/13 with 9 size
 to be inlined into E2E_EB_SMCheck/6 in D:/eb2/plugins/E2ESM_TS_TxDxM1I1R0/src/E2E_SM.c:441
 Estimated badness is -0.364706, frequency 0.20.

Considering E2E_EB_SMCheckProfileStatusChecks/5 with 9 size
 to be inlined into E2E_SMCheck/0 in D:/eb2/plugins/E2ESM_TS_TxDxM1I1R0/src/E2E_SM.c:236
 Estimated badness is -0.120765, frequency 0.21.

Considering E2E_EB_SMCheckStateParamChecks.isra.0/12 with 13 size
 to be inlined into E2E_SMCheck/0 in D:/eb2/plugins/E2ESM_TS_TxDxM1I1R0/src/E2E_SM.c:232
 Estimated badness is -0.119906, frequency 0.32.

Considering E2E_EB_CheckHandleSMInvalid/10 with 18 size
 to be inlined into E2E_EB_SMCheck/6 in D:/eb2/plugins/E2ESM_TS_TxDxM1I1R0/src/E2E_SM.c:456
 Estimated badness is -0.052857, frequency 0.20.

Considering E2E_EB_CheckHandleSMInit/8 with 19 size
 to be inlined into E2E_EB_SMCheck/6 in D:/eb2/plugins/E2ESM_TS_TxDxM1I1R0/src/E2E_SM.c:446
 Estimated badness is -0.052857, frequency 0.20.

Considering E2E_EB_CheckHandleSMValid/9 with 18 size
 to be inlined into E2E_EB_SMCheck/6 in D:/eb2/plugins/E2ESM_TS_TxDxM1I1R0/src/E2E_SM.c:451
 Estimated badness is -0.052857, frequency 0.20.

Considering E2E_EB_SMCheck/6 with 54 size
 to be inlined into E2E_SMCheck/0 in D:/eb2/plugins/E2ESM_TS_TxDxM1I1R0/src/E2E_SM.c:242
 Estimated badness is -0.001892, frequency 0.10.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 137.960450 weighted by profile: 0.000000

Why inlining failed?
call is unlikely and code size would grow         :        5 calls, 1.039338 freq, 0 count
IPA function summary for E2E_EB_SMAddStatus.isra.0/14 inlinable
  global time:     82.714558
  self size:       27
  global size:     27
  min size:       16
  self stack:      0
  global stack:    0
  estimated growth:24
    size:16.000000, time:70.018163
    size:6.000000, time:8.039355,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 80] changed) && (not inlined)
    size:1.500000, time:1.159466,  nonconst if:(op2[ref offset: 80] changed)
    size:1.000000, time:0.999192,  nonconst if:(op1 changed)
    size:2.000000, time:1.998383,  nonconst if:(op2[ref offset: 80] changed || op1 changed)
  loop iterations:(op1 changed)
  array index:(op2[ref offset: 80] changed)
  calls:

IPA function summary for E2E_EB_SMCheckConfigParamChecks/3 inlinable
  global time:     10.617188
  self size:       32
  global size:     32
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:14
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.250000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 24] changed) && (not inlined)
    size:2.500000, time:0.281250,  nonconst if:(op0[ref offset: 24] changed)
    size:0.500000, time:0.250000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:0.500000, time:0.250000,  nonconst if:(op0[ref offset: 32] changed)
    size:1.000000, time:0.500000,  nonconst if:(op0[ref offset: 24] changed || op0[ref offset: 32] changed)
    size:2.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op0[ref offset: 24] changed || op0[ref offset: 32] changed)
    size:0.500000, time:0.125000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 8] changed) && (not inlined)
    size:0.500000, time:0.125000,  nonconst if:(op0[ref offset: 8] changed)
    size:0.500000, time:0.125000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.125000,  nonconst if:(op0[ref offset: 16] changed)
    size:1.000000, time:0.250000,  nonconst if:(op0[ref offset: 8] changed || op0[ref offset: 16] changed)
    size:2.000000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed || op0[ref offset: 8] changed || op0[ref offset: 16] changed)
    size:0.500000, time:0.062500,  executed if:(not inlined),  nonconst if:(op0[ref offset: 40] changed) && (not inlined)
    size:0.500000, time:0.062500,  nonconst if:(op0[ref offset: 40] changed)
    size:0.500000, time:0.062500,  executed if:(not inlined),  nonconst if:(op0[ref offset: 48] changed) && (not inlined)
    size:0.500000, time:0.062500,  nonconst if:(op0[ref offset: 48] changed)
    size:1.000000, time:0.125000,  nonconst if:(op0[ref offset: 40] changed || op0[ref offset: 48] changed)
    size:2.000000, time:0.250000,  nonconst if:(op0[ref offset: 0] changed || op0[ref offset: 40] changed || op0[ref offset: 48] changed)
    size:2.000000, time:0.125000,  nonconst if:(op0[ref offset: 16] changed || op0[ref offset: 48] changed)
    size:2.000000, time:0.062500,  nonconst if:(op0[ref offset: 32] changed || op0[ref offset: 16] changed)
    size:2.000000, time:0.015625,  executed if:(op0[ref offset: 24] != 0),  nonconst if:(op0[ref offset: 24] changed || op0[ref offset: 8] changed) && (op0[ref offset: 24] != 0)
    size:2.000000, time:0.007812,  executed if:(op0[ref offset: 24] != 0),  nonconst if:(op0[ref offset: 8] changed || op0[ref offset: 40] changed) && (op0[ref offset: 24] != 0)
  calls:

IPA function summary for E2E_SMCheckInit/1 inlinable
  global time:     27.374273
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.400000,  executed if:(op1 != 0B),  nonconst if:(op0 changed) && (op1 != 0B)
    size:7.500000, time:11.273341,  executed if:(op0 != 0B) && (op1 != 0B)
    size:0.500000, time:1.447727,  executed if:(op0 != 0B) && (op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op0 != 0B) && (op1 != 0B) && (not inlined)
    size:0.500000, time:1.447727,  executed if:(op0 != 0B) && (op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op0 != 0B) && (op1 != 0B)
    size:2.500000, time:1.925477,  executed if:(op0 != 0B) && (op1 != 0B) && (not inlined)
  calls:
    E2E_EB_SMCheckConfigParamChecks/3 call is unlikely and code size would grow
      loop depth: 0 freq:0.49 size: 3 time: 12callee size:16 stack: 0 predicate: (op0 != 0B) && (op1 != 0B)

IPA function summary for E2E_SMCheck/0 inlinable
  global time:     17.254432
  self size:       29
  global size:     83
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.400000,  executed if:(op1 != 0B),  nonconst if:(op2 changed) && (op1 != 0B)
    size:6.000000, time:2.254000,  executed if:(op2 != 0B) && (op1 != 0B)
    size:0.500000, time:0.159250,  executed if:(op2 != 0B) && (op1 != 0B) && (not inlined),  nonconst if:(op1[ref offset: 0] changed) && (op2 != 0B) && (op1 != 0B) && (not inlined)
    size:0.500000, time:0.159250,  executed if:(op2 != 0B) && (op1 != 0B),  nonconst if:(op1[ref offset: 0] changed) && (op2 != 0B) && (op1 != 0B)
    size:8.000000, time:0.828100,  executed if:(op2 != 0B) && (op1 != 0B),  nonconst if:(op0 changed) && (op2 != 0B) && (op1 != 0B)
    size:17.000000, time:1.241281,  executed if:(op2 != 0B) && (op1 != 0B),  nonconst if:(op2[ref offset: 104] changed) && (op2 != 0B) && (op1 != 0B)
    size:0.500000, time:0.159250,  executed if:(op2 != 0B) && (op1 != 0B),  nonconst if:(op2[ref offset: 80] changed) && (op2 != 0B) && (op1 != 0B)
    size:2.000000, time:0.039558,  executed if:(op2[ref offset: 104] == 2) && (op2 != 0B) && (op1 != 0B),  nonconst if:(op2[ref offset: 104] == 2) && (op0 changed) && (op2 != 0B) && (op1 != 0B)
    size:2.000000, time:0.026109,  executed if:(op0 != 3) && (op2[ref offset: 104] == 2) && (op2 != 0B) && (op1 != 0B),  nonconst if:(op0 != 3) && (op2[ref offset: 104] == 2) && (op0 changed) && (op2 != 0B) && (op1 != 0B)
    size:0.500000, time:0.005582,  executed if:(op0 == 3 || op0 == 5) && (op2[ref offset: 104] == 2) && (op2 != 0B) && (op1 != 0B)
    size:0.500000, time:0.004308,  executed if:(op0 != 5) && (op0 != 3) && (op2[ref offset: 104] == 2) && (op2 != 0B) && (op1 != 0B)
    size:7.000000, time:0.098896,  executed if:(op2[ref offset: 104] == 4) && (op2 != 0B) && (op1 != 0B)
    size:0.500000, time:0.009890,  executed if:(op2[ref offset: 104] == 4) && (op2 != 0B) && (op1 != 0B),  nonconst if:(op2[ref offset: 104] == 4) && (op1[ref offset: 0] changed) && (op2 != 0B) && (op1 != 0B)
    size:7.500000, time:0.098896,  executed if:(op2[ref offset: 104] == 3) && (op2 != 0B) && (op1 != 0B)
    size:0.500000, time:0.009890,  executed if:(op2[ref offset: 104] == 3) && (op2 != 0B) && (op1 != 0B),  nonconst if:(op2[ref offset: 104] == 3) && (op1[ref offset: 0] changed) && (op2 != 0B) && (op1 != 0B)
    size:7.000000, time:0.098896,  executed if:(op2[ref offset: 104] == 0) && (op2 != 0B) && (op1 != 0B)
    size:0.500000, time:0.009890,  executed if:(op2[ref offset: 104] == 0) && (op2 != 0B) && (op1 != 0B),  nonconst if:(op2[ref offset: 104] == 0) && (op1[ref offset: 0] changed) && (op2 != 0B) && (op1 != 0B)
  calls:
    E2E_EB_SMCheck/6 inlined
      loop depth: 0 freq:0.10 size: 5 time: 14callee size:27 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      E2E_EB_CheckHandleSMInvalid/10 inlined
        loop depth: 0 freq:0.02 size: 5 time: 14callee size: 9 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        E2E_EB_SMAddStatus.isra.0/14 call is unlikely and code size would grow
          loop depth: 0 freq:0.02 size: 4 time: 13callee size:13 stack: 0 predicate: (op2[ref offset: 104] == 4) && (op2 != 0B) && (op1 != 0B)
      E2E_EB_CheckHandleSMValid/9 inlined
        loop depth: 0 freq:0.02 size: 5 time: 14callee size: 9 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        E2E_EB_SMAddStatus.isra.0/14 call is unlikely and code size would grow
          loop depth: 0 freq:0.02 size: 4 time: 13callee size:13 stack: 0 predicate: (op2[ref offset: 104] == 0) && (op2 != 0B) && (op1 != 0B)
      E2E_EB_CheckHandleSMInit/8 inlined
        loop depth: 0 freq:0.02 size: 5 time: 14callee size: 9 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        E2E_EB_SMAddStatus.isra.0/14 call is unlikely and code size would grow
          loop depth: 0 freq:0.02 size: 4 time: 13callee size:13 stack: 0 predicate: (op2[ref offset: 104] == 3) && (op2 != 0B) && (op1 != 0B)
      E2E_EB_CheckHandleSMNoData.isra.0/13 inlined
        loop depth: 0 freq:0.02 size: 4 time: 13callee size: 4 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
    E2E_EB_SMCheckProfileStatusChecks/5 inlined
      loop depth: 0 freq:0.21 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    E2E_EB_SMCheckStateParamChecks.isra.0/12 inlined
      loop depth: 0 freq:0.32 size: 4 time: 13callee size: 6 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    E2E_EB_SMCheckConfigParamChecks/3 call is unlikely and code size would grow
      loop depth: 0 freq:0.49 size: 3 time: 12callee size:16 stack: 0 predicate: (op2 != 0B) && (op1 != 0B)

Symbol table:

E2E_EB_SMAddStatus.isra.0/14 (E2E_EB_SMAddStatus.isra.0) @06bba8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:118207164 (estimated locally) body local optimize_size
  Called by: E2E_EB_CheckHandleSMInvalid/10 (21237720 (estimated locally),0.02 per call) E2E_EB_CheckHandleSMValid/9 (21237720 (estimated locally),0.02 per call) E2E_EB_CheckHandleSMInit/8 (21237720 (estimated locally),0.02 per call) 
  Calls: 
E2E_EB_CheckHandleSMNoData.isra.0/13 (E2E_EB_CheckHandleSMNoData.isra.0) @06bba380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function E2E_EB_CheckHandleSMNoData.isra.0/13 is inline copy in E2E_SMCheck/0
  Availability: local
  Function flags: count:21237720 (estimated locally) body local optimize_size
  Called by: E2E_EB_SMCheck/6 (inlined) (21237720 (estimated locally),0.02 per call) 
  Calls: 
E2E_EB_SMCheckStateParamChecks.isra.0/12 (E2E_EB_SMCheckStateParamChecks.isra.0) @06b8a8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function E2E_EB_SMCheckStateParamChecks.isra.0/12 is inline copy in E2E_SMCheck/0
  Availability: local
  Function flags: count:341986771 (estimated locally) body local optimize_size
  Called by: E2E_SMCheck/0 (inlined) (341986771 (estimated locally),0.32 per call) 
  Calls: 
E2E_EB_CheckHandleSMInvalid/10 (E2E_EB_CheckHandleSMInvalid) @06b0f9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function E2E_EB_CheckHandleSMInvalid/10 is inline copy in E2E_SMCheck/0
  Availability: local
  Function flags: count:21237720 (estimated locally) body local optimize_size
  Called by: E2E_EB_SMCheck/6 (inlined) (21237720 (estimated locally),0.02 per call) 
  Calls: E2E_EB_SMAddStatus.isra.0/14 (21237720 (estimated locally),0.02 per call) 
E2E_EB_CheckHandleSMValid/9 (E2E_EB_CheckHandleSMValid) @06b0f7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function E2E_EB_CheckHandleSMValid/9 is inline copy in E2E_SMCheck/0
  Availability: local
  Function flags: count:21237720 (estimated locally) body local optimize_size
  Called by: E2E_EB_SMCheck/6 (inlined) (21237720 (estimated locally),0.02 per call) 
  Calls: E2E_EB_SMAddStatus.isra.0/14 (21237720 (estimated locally),0.02 per call) 
E2E_EB_CheckHandleSMInit/8 (E2E_EB_CheckHandleSMInit) @06b0f620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function E2E_EB_CheckHandleSMInit/8 is inline copy in E2E_SMCheck/0
  Availability: local
  Function flags: count:21237720 (estimated locally) body local optimize_size
  Called by: E2E_EB_SMCheck/6 (inlined) (21237720 (estimated locally),0.02 per call) 
  Calls: E2E_EB_SMAddStatus.isra.0/14 (21237720 (estimated locally),0.02 per call) 
E2E_EB_SMCheck/6 (E2E_EB_SMCheck) @06b0f2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function E2E_EB_SMCheck/6 is inline copy in E2E_SMCheck/0
  Availability: local
  Function flags: count:106188602 (estimated locally) body local optimize_size
  Called by: E2E_SMCheck/0 (inlined) (106188602 (estimated locally),0.10 per call) 
  Calls: E2E_EB_CheckHandleSMInvalid/10 (inlined) (21237720 (estimated locally),0.02 per call) E2E_EB_CheckHandleSMValid/9 (inlined) (21237720 (estimated locally),0.02 per call) E2E_EB_CheckHandleSMInit/8 (inlined) (21237720 (estimated locally),0.02 per call) E2E_EB_CheckHandleSMNoData.isra.0/13 (inlined) (21237720 (estimated locally),0.02 per call) 
E2E_EB_SMCheckProfileStatusChecks/5 (E2E_EB_SMCheckProfileStatusChecks) @06b0f0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function E2E_EB_SMCheckProfileStatusChecks/5 is inline copy in E2E_SMCheck/0
  Availability: local
  Function flags: count:222291401 (estimated locally) body local optimize_size
  Called by: E2E_SMCheck/0 (inlined) (222291401 (estimated locally),0.21 per call) 
  Calls: 
E2E_EB_SMCheckConfigParamChecks/3 (E2E_EB_SMCheckConfigParamChecks) @06b06d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: E2E_SMCheckInit/1 (181710154 (estimated locally),0.49 per call) E2E_SMCheck/0 (526133494 (estimated locally),0.49 per call) 
  Calls: 
E2E_SMCheckInit/1 (E2E_SMCheckInit) @06b069a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:370837049 (estimated locally) body optimize_size
  Called by: 
  Calls: E2E_EB_SMCheckConfigParamChecks/3 (181710154 (estimated locally),0.49 per call) 
E2E_SMCheck/0 (E2E_SMCheck) @06b067e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: E2E_EB_SMCheck/6 (inlined) (106188602 (estimated locally),0.10 per call) E2E_EB_SMCheckProfileStatusChecks/5 (inlined) (222291401 (estimated locally),0.21 per call) E2E_EB_SMCheckStateParamChecks.isra.0/12 (inlined) (341986771 (estimated locally),0.32 per call) E2E_EB_SMCheckConfigParamChecks/3 (526133494 (estimated locally),0.49 per call) 

;; Function E2E_EB_SMCheckConfigParamChecks (E2E_EB_SMCheckConfigParamChecks, funcdef_no=3, decl_uid=5399, cgraph_uid=4, symbol_order=3)

E2E_EB_SMCheckConfigParamChecks (const struct E2E_SMConfigType * ConfigPtr)
{
  Std_ReturnType RetVal;
  unsigned char _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  int _5;
  unsigned char _6;
  int _7;
  int _8;
  unsigned char _9;
  int _10;
  unsigned char _11;
  int _12;
  int _13;
  unsigned char _14;
  int _15;
  unsigned char _16;
  int _17;
  int _18;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  _1 = ConfigPtr_21(D)->WindowSize;
  _2 = _1 + 255;
  if (_2 > 9)
    goto <bb 12>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _3 = (int) _1;
  _4 = ConfigPtr_21(D)->MinOkStateValid;
  _5 = (int) _4;
  _6 = ConfigPtr_21(D)->MaxErrorStateValid;
  _7 = (int) _6;
  _8 = _5 + _7;
  if (_3 < _8)
    goto <bb 12>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  _9 = ConfigPtr_21(D)->MinOkStateInit;
  _10 = (int) _9;
  _11 = ConfigPtr_21(D)->MaxErrorStateInit;
  _12 = (int) _11;
  _13 = _10 + _12;
  if (_3 < _13)
    goto <bb 12>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  _14 = ConfigPtr_21(D)->MinOkStateInvalid;
  _15 = (int) _14;
  _16 = ConfigPtr_21(D)->MaxErrorStateInvalid;
  _17 = (int) _16;
  _18 = _15 + _17;
  if (_3 < _18)
    goto <bb 12>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 67108864]:
  # DEBUG BEGIN_STMT
  if (_11 < _16)
    goto <bb 12>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 33554432]:
  if (_6 < _11)
    goto <bb 12>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 16777216]:
  # DEBUG BEGIN_STMT
  if (_4 == 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 8388608]:
  if (_4 > _9)
    goto <bb 12>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 4194304]:
  if (_9 > _14)
    goto <bb 12>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 2097152]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 12> [local count: 1073741824]:
  # RetVal_19 = PHI <1(2), 1(3), 1(4), 1(5), 1(7), 1(9), 0(11), 1(6), 1(8), 1(10)>
  # DEBUG RetVal => RetVal_19
  # DEBUG BEGIN_STMT
  return RetVal_19;

}



;; Function E2E_EB_SMAddStatus.isra.0 (E2E_EB_SMAddStatus.isra.0, funcdef_no=14, decl_uid=5660, cgraph_uid=15, symbol_order=14)

E2E_EB_SMAddStatus.isra.0 (E2E_PCheckStatusType ProfileStatus, const uint8 ISRA.12, struct E2E_SMCheckStateType * StatePtr)
{
  uint8 Idx;
  uint8 okCountTemp;
  uint8 errorCountTemp;
  unsigned char _2;
  int _3;
  int _6;
  unsigned char _7;
  unsigned char _14;
  unsigned int _17;
  unsigned char _18;
  unsigned int _19;
  unsigned int _20;
  unsigned char _21;

  <bb 12> [local count: 118207164]:
  # DEBUG ConfigPtr s=> ConfigPtr

  <bb 2> [local count: 118207164]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG okCountTemp => 0
  # DEBUG BEGIN_STMT
  # DEBUG errorCountTemp => 0
  # DEBUG BEGIN_STMT
  _2 = StatePtr_1(D)->WindowTopIndex;
  _3 = (int) _2;
  StatePtr_1(D)->ProfileStatusWindowArray[_3] = ProfileStatus_4(D);
  # DEBUG BEGIN_STMT
  # DEBUG Idx => 0
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _6 = (int) Idx_5;
  _7 = StatePtr_1(D)->ProfileStatusWindowArray[_6];
  switch (_7) <default: <L1> [33.33%], case 0: <L0> [33.33%], case 1 ... 2: <L2> [33.33%], case 4 ... 5: <L2> [33.33%]>

  <bb 4> [local count: 318511554]:
<L0>:
  # DEBUG BEGIN_STMT
  okCountTemp_9 = okCountTemp_8 + 1;
  # DEBUG okCountTemp => okCountTemp_9
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 318511554]:
<L1>:
  # DEBUG BEGIN_STMT
  errorCountTemp_11 = errorCountTemp_10 + 1;
  # DEBUG errorCountTemp => errorCountTemp_11
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 955534663]:
  # okCountTemp_22 = PHI <okCountTemp_8(3), okCountTemp_9(4), okCountTemp_8(5)>
  # errorCountTemp_23 = PHI <errorCountTemp_10(3), errorCountTemp_10(4), errorCountTemp_11(5)>
<L2>:
  # DEBUG errorCountTemp => errorCountTemp_23
  # DEBUG okCountTemp => okCountTemp_22
  # DEBUG BEGIN_STMT
  Idx_12 = Idx_5 + 1;
  # DEBUG Idx => Idx_12

  <bb 7> [local count: 1073741824]:
  # Idx_5 = PHI <0(2), Idx_12(6)>
  # okCountTemp_8 = PHI <0(2), okCountTemp_22(6)>
  # errorCountTemp_10 = PHI <0(2), errorCountTemp_23(6)>
  # DEBUG errorCountTemp => errorCountTemp_10
  # DEBUG okCountTemp => okCountTemp_8
  # DEBUG Idx => Idx_5
  # DEBUG BEGIN_STMT
  _14 = ISRA.12_31(D);
  if (Idx_5 < _14)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111601]:
  # _18 = PHI <_14(7)>
  # okCountTemp_15 = PHI <okCountTemp_8(7)>
  # errorCountTemp_16 = PHI <errorCountTemp_10(7)>
  # DEBUG BEGIN_STMT
  StatePtr_1(D)->OkCount = okCountTemp_15;
  # DEBUG BEGIN_STMT
  StatePtr_1(D)->ErrorCount = errorCountTemp_16;
  # DEBUG BEGIN_STMT
  _17 = (unsigned int) _2;
  _19 = (unsigned int) _18;
  _20 = _19 + 4294967295;
  if (_17 == _20)
    goto <bb 9>; [34.00%]
  else
    goto <bb 10>; [66.00%]

  <bb 9> [local count: 40157944]:
  # DEBUG BEGIN_STMT
  StatePtr_1(D)->WindowTopIndex = 0;
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 77953656]:
  # DEBUG BEGIN_STMT
  _21 = _2 + 1;
  StatePtr_1(D)->WindowTopIndex = _21;

  <bb 11> [local count: 118111601]:
  return;

}



;; Function E2E_SMCheck (E2E_SMCheck, funcdef_no=0, decl_uid=5391, cgraph_uid=1, symbol_order=0)


Symbols to be put in SSA form
{ D.5632 D.5705 D.5710 D.5717 D.5727 D.5732 D.5737 D.5742 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 53
Number of blocks to update: 52 ( 98%)


Merging blocks 5 and 10
Removing basic block 6
Removing basic block 7
Merging blocks 15 and 9
Merging blocks 19 and 16
Merging blocks 22 and 28
Removing basic block 23
Removing basic block 24
Removing basic block 25
Merging blocks 26 and 20
Merging blocks 33 and 27
Merging blocks 40 and 34
Merging blocks 46 and 41
Merging blocks 52 and 47
Merging blocks 5 and 11
Merging blocks 22 and 29
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;; 2 succs { 36 3 }
;; 3 succs { 36 4 }
;; 4 succs { 36 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 36 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 36 13 }
;; 13 succs { 35 25 14 19 30 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 35 }
;; 19 succs { 20 21 }
;; 20 succs { 24 }
;; 21 succs { 22 23 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 35 }
;; 25 succs { 27 26 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 35 }
;; 30 succs { 31 33 }
;; 31 succs { 32 33 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 35 }
;; 35 succs { 36 }
;; 36 succs { 1 }
E2E_SMCheck (E2E_PCheckStatusType ProfileStatus, const struct E2E_SMConfigType * ConfigPtr, struct E2E_SMCheckStateType * StatePtr)
{
  Std_ReturnType D.5742;
  Std_ReturnType D.5737;
  Std_ReturnType D.5732;
  Std_ReturnType D.5727;
  Std_ReturnType RetVal;
  Std_ReturnType D.5717;
  Std_ReturnType RetVal;
  Std_ReturnType D.5710;
  Std_ReturnType RetVal;
  Std_ReturnType D.5705;
  Std_ReturnType RetVal;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _19;
  E2E_SMStateType * _20;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 25
  # DEBUG BEGIN_STMT
  # DEBUG ConfigPtr => ConfigPtr_7(D)
  # DEBUG StatePtr => StatePtr_8(D)
  # DEBUG INLINE_ENTRY E2E_EB_SMCheckNullChecks
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  if (ConfigPtr_7(D) == 0B)
    goto <bb 36>; [30.00%]
  else
    goto <bb 3>; [70.00%]

  <bb 3> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  if (StatePtr_8(D) == 0B)
    goto <bb 36>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 4> [local count: 526133494]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  # DEBUG ConfigPtr => NULL
  # DEBUG StatePtr => NULL
  # DEBUG RetVal => NULL
  # DEBUG BEGIN_STMT
  _1 = E2E_EB_SMCheckConfigParamChecks (ConfigPtr_7(D));
  if (_1 != 0)
    goto <bb 36>; [35.00%]
  else
    goto <bb 5>; [65.00%]

  <bb 5> [local count: 341986771]:
  # DEBUG BEGIN_STMT
  _12 = MEM[(unsigned char *)ConfigPtr_7(D)];
  # DEBUG D#1 => ConfigPtr_7(D)
  # DEBUG StatePtr => StatePtr_8(D)
  # DEBUG INLINE_ENTRY E2E_EB_SMCheckStateParamChecks
  # DEBUG ConfigPtr => D#1
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  _13 = MEM[(const struct E2E_SMCheckStateType *)StatePtr_8(D)].SMState;
  switch (_13) <default: <L13> [50.00%], case 0: <L14> [50.00%], case 2 ... 4: <L14> [50.00%]>

  <bb 6> [local count: 170993386]:
<L13>:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT

  <bb 7> [local count: 341986771]:
  # RetVal_17 = PHI <0(5), 1(6)>
<L14>:
  # DEBUG RetVal => RetVal_17
  # DEBUG BEGIN_STMT
  _14 = MEM[(const struct E2E_SMCheckStateType *)StatePtr_8(D)].WindowTopIndex;
  _15 = _12;
  if (_14 >= _15)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 170993386]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1

  <bb 9> [local count: 341986771]:
  # RetVal_16 = PHI <RetVal_17(7), 1(8)>
  # DEBUG RetVal => RetVal_16
  # DEBUG BEGIN_STMT
  _46 = RetVal_16;
  # DEBUG StatePtr => NULL
  # DEBUG RetVal => NULL
  _2 = _46;
  if (_2 != 0)
    goto <bb 36>; [35.00%]
  else
    goto <bb 10>; [65.00%]

  <bb 10> [local count: 222291401]:
  # DEBUG BEGIN_STMT
  # DEBUG ProfileStatus => ProfileStatus_9(D)
  # DEBUG INLINE_ENTRY E2E_EB_SMCheckProfileStatusChecks
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  switch (ProfileStatus_9(D)) <default: <L15> [50.00%], case 0 ... 3: <L16> [50.00%], case 5: <L16> [50.00%]>

  <bb 11> [local count: 111145701]:
<L15>:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT

  <bb 12> [local count: 222291401]:
  # RetVal_18 = PHI <0(10), 1(11)>
<L16>:
  # DEBUG RetVal => RetVal_18
  # DEBUG BEGIN_STMT
  _47 = RetVal_18;
  # DEBUG ProfileStatus => NULL
  # DEBUG RetVal => NULL
  _3 = _47;
  if (_3 != 0)
    goto <bb 36>; [52.23%]
  else
    goto <bb 13>; [47.77%]

  <bb 13> [local count: 106188602]:
  # DEBUG BEGIN_STMT
  # DEBUG ProfileStatus => ProfileStatus_9(D)
  # DEBUG ConfigPtr => ConfigPtr_7(D)
  # DEBUG StatePtr => StatePtr_8(D)
  # DEBUG INLINE_ENTRY E2E_EB_SMCheck
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 25
  # DEBUG BEGIN_STMT
  _19 = StatePtr_8(D)->SMState;
  switch (_19) <default: <L21> [20.00%], case 0: <L23> [20.00%], case 2: <L17> [20.00%], case 3: <L22> [20.00%], case 4: <L24> [20.00%]>

  <bb 14> [local count: 21237720]:
<L17>:
  # DEBUG BEGIN_STMT
  _20 = &MEM[(unsigned char *)StatePtr_8(D) + 13B];
  # DEBUG D#2 => StatePtr_8(D)
  # DEBUG ProfileStatus => ProfileStatus_9(D)
  # DEBUG INLINE_ENTRY E2E_EB_CheckHandleSMNoData
  # DEBUG StatePtr => D#2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ProfileStatus_9(D) != 3)
    goto <bb 15>; [66.00%]
  else
    goto <bb 17>; [34.00%]

  <bb 15> [local count: 14016895]:
  if (ProfileStatus_9(D) != 5)
    goto <bb 16>; [66.00%]
  else
    goto <bb 17>; [34.00%]

  <bb 16> [local count: 9251151]:
  # DEBUG BEGIN_STMT
  *_20 = 3;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 11986569]:
  # DEBUG BEGIN_STMT
  *_20 = 2;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 18> [local count: 21237720]:
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _59 = 0;
  # DEBUG ProfileStatus => NULL
  RetVal_21 = _59;
  # DEBUG RetVal => RetVal_21
  # DEBUG BEGIN_STMT
  goto <bb 35>; [100.00%]

  <bb 19> [local count: 21237720]:
<L22>:
  # DEBUG BEGIN_STMT
  # DEBUG ProfileStatus => ProfileStatus_9(D)
  # DEBUG ConfigPtr => ConfigPtr_7(D)
  # DEBUG StatePtr => StatePtr_8(D)
  # DEBUG INLINE_ENTRY E2E_EB_CheckHandleSMInit
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = MEM[(unsigned char *)ConfigPtr_7(D)];
  # DEBUG D#3 => ConfigPtr_7(D)
  E2E_EB_SMAddStatus.isra.0 (ProfileStatus_9(D), _26, StatePtr_8(D));
  # DEBUG BEGIN_STMT
  _27 = StatePtr_8(D)->ErrorCount;
  _28 = ConfigPtr_7(D)->MaxErrorStateInit;
  if (_27 > _28)
    goto <bb 20>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 20> [local count: 10618860]:
  # DEBUG BEGIN_STMT
  StatePtr_8(D)->SMState = 4;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  goto <bb 24>; [100.00%]

  <bb 21> [local count: 10618860]:
  # DEBUG BEGIN_STMT
  _29 = StatePtr_8(D)->OkCount;
  _30 = ConfigPtr_7(D)->MinOkStateInit;
  if (_29 >= _30)
    goto <bb 22>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 22> [local count: 5309430]:
  # DEBUG BEGIN_STMT
  StatePtr_8(D)->SMState = 0;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  goto <bb 24>; [100.00%]

  <bb 23> [local count: 5309430]:
  # DEBUG BEGIN_STMT
  StatePtr_8(D)->SMState = 3;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 24> [local count: 21237720]:
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _56 = 0;
  # DEBUG ProfileStatus => NULL
  # DEBUG ConfigPtr => NULL
  # DEBUG StatePtr => NULL
  RetVal_22 = _56;
  # DEBUG RetVal => RetVal_22
  # DEBUG BEGIN_STMT
  goto <bb 35>; [100.00%]

  <bb 25> [local count: 21237720]:
<L23>:
  # DEBUG BEGIN_STMT
  # DEBUG ProfileStatus => ProfileStatus_9(D)
  # DEBUG ConfigPtr => ConfigPtr_7(D)
  # DEBUG StatePtr => StatePtr_8(D)
  # DEBUG INLINE_ENTRY E2E_EB_CheckHandleSMValid
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = MEM[(unsigned char *)ConfigPtr_7(D)];
  # DEBUG D#3 => ConfigPtr_7(D)
  E2E_EB_SMAddStatus.isra.0 (ProfileStatus_9(D), _31, StatePtr_8(D));
  # DEBUG BEGIN_STMT
  _32 = StatePtr_8(D)->ErrorCount;
  _33 = ConfigPtr_7(D)->MaxErrorStateValid;
  if (_32 > _33)
    goto <bb 27>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 26> [local count: 10618860]:
  _34 = StatePtr_8(D)->OkCount;
  _35 = ConfigPtr_7(D)->MinOkStateValid;
  if (_34 < _35)
    goto <bb 27>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 27> [local count: 15928290]:
  # DEBUG BEGIN_STMT
  StatePtr_8(D)->SMState = 4;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  goto <bb 29>; [100.00%]

  <bb 28> [local count: 5309430]:
  # DEBUG BEGIN_STMT
  StatePtr_8(D)->SMState = 0;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 29> [local count: 21237720]:
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _63 = 0;
  # DEBUG ProfileStatus => NULL
  # DEBUG ConfigPtr => NULL
  # DEBUG StatePtr => NULL
  RetVal_23 = _63;
  # DEBUG RetVal => RetVal_23
  # DEBUG BEGIN_STMT
  goto <bb 35>; [100.00%]

  <bb 30> [local count: 21237720]:
<L24>:
  # DEBUG BEGIN_STMT
  # DEBUG ProfileStatus => ProfileStatus_9(D)
  # DEBUG ConfigPtr => ConfigPtr_7(D)
  # DEBUG StatePtr => StatePtr_8(D)
  # DEBUG INLINE_ENTRY E2E_EB_CheckHandleSMInvalid
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = MEM[(unsigned char *)ConfigPtr_7(D)];
  # DEBUG D#3 => ConfigPtr_7(D)
  E2E_EB_SMAddStatus.isra.0 (ProfileStatus_9(D), _36, StatePtr_8(D));
  # DEBUG BEGIN_STMT
  _37 = StatePtr_8(D)->ErrorCount;
  _38 = ConfigPtr_7(D)->MaxErrorStateInvalid;
  if (_37 <= _38)
    goto <bb 31>; [50.00%]
  else
    goto <bb 33>; [50.00%]

  <bb 31> [local count: 10618860]:
  _39 = StatePtr_8(D)->OkCount;
  _40 = ConfigPtr_7(D)->MinOkStateInvalid;
  if (_39 >= _40)
    goto <bb 32>; [50.00%]
  else
    goto <bb 33>; [50.00%]

  <bb 32> [local count: 5309430]:
  # DEBUG BEGIN_STMT
  StatePtr_8(D)->SMState = 0;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  goto <bb 34>; [100.00%]

  <bb 33> [local count: 15928290]:
  # DEBUG BEGIN_STMT
  StatePtr_8(D)->SMState = 4;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 34> [local count: 21237720]:
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _51 = 0;
  # DEBUG ProfileStatus => NULL
  # DEBUG ConfigPtr => NULL
  # DEBUG StatePtr => NULL
  RetVal_24 = _51;
  # DEBUG RetVal => RetVal_24
  # DEBUG BEGIN_STMT

  <bb 35> [local count: 106188602]:
  # RetVal_25 = PHI <25(13), RetVal_21(18), RetVal_22(24), RetVal_23(29), RetVal_24(34)>
<L21>:
  # DEBUG RetVal => RetVal_25
  # DEBUG BEGIN_STMT
  _64 = RetVal_25;
  # DEBUG ProfileStatus => NULL
  # DEBUG ConfigPtr => NULL
  # DEBUG StatePtr => NULL
  # DEBUG RetVal => NULL
  RetVal_11 = _64;
  # DEBUG RetVal => RetVal_11

  <bb 36> [local count: 1073741824]:
  # RetVal_4 = PHI <19(3), 23(4), 26(9), 23(12), RetVal_11(35), 19(2)>
  # DEBUG ConfigPtr => NULL
  # DEBUG StatePtr => NULL
  # DEBUG RetVal => NULL
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  return RetVal_4;

}



;; Function E2E_SMCheckInit (E2E_SMCheckInit, funcdef_no=1, decl_uid=5394, cgraph_uid=2, symbol_order=1)

Removing basic block 9
E2E_SMCheckInit (struct E2E_SMCheckStateType * StatePtr, const struct E2E_SMConfigType * ConfigPtr)
{
  uint8 Idx;
  Std_ReturnType RetVal;
  unsigned char _1;
  int _2;
  unsigned char _3;

  <bb 2> [local count: 370837049]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 25
  # DEBUG BEGIN_STMT
  # DEBUG ConfigPtr => ConfigPtr_9(D)
  # DEBUG StatePtr => StatePtr_10(D)
  # DEBUG INLINE_ENTRY E2E_EB_SMCheckNullChecks
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  if (ConfigPtr_9(D) == 0B)
    goto <bb 8>; [30.00%]
  else
    goto <bb 3>; [70.00%]

  <bb 3> [local count: 259585934]:
  # DEBUG BEGIN_STMT
  if (StatePtr_10(D) == 0B)
    goto <bb 8>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 4> [local count: 181710154]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  # DEBUG ConfigPtr => NULL
  # DEBUG StatePtr => NULL
  # DEBUG RetVal => NULL
  # DEBUG BEGIN_STMT
  _1 = E2E_EB_SMCheckConfigParamChecks (ConfigPtr_9(D));
  if (_1 != 0)
    goto <bb 8>; [35.00%]
  else
    goto <bb 6>; [65.00%]

  <bb 5> [local count: 955630225]:
  # DEBUG BEGIN_STMT
  _2 = (int) Idx_5;
  StatePtr_10(D)->ProfileStatusWindowArray[_2] = 4;
  # DEBUG BEGIN_STMT
  Idx_16 = Idx_5 + 1;
  # DEBUG Idx => Idx_16

  <bb 6> [local count: 1073741824]:
  # Idx_5 = PHI <Idx_16(5), 0(4)>
  # DEBUG Idx => Idx_5
  # DEBUG BEGIN_STMT
  _3 = ConfigPtr_9(D)->WindowSize;
  if (_3 > Idx_5)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 118111601]:
  # DEBUG BEGIN_STMT
  StatePtr_10(D)->WindowTopIndex = 0;
  # DEBUG BEGIN_STMT
  StatePtr_10(D)->OkCount = 0;
  # DEBUG BEGIN_STMT
  StatePtr_10(D)->ErrorCount = 0;
  # DEBUG BEGIN_STMT
  StatePtr_10(D)->SMState = 2;
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0

  <bb 8> [local count: 370837049]:
  # RetVal_4 = PHI <19(3), 23(4), 0(7), 19(2)>
  # DEBUG ConfigPtr => NULL
  # DEBUG StatePtr => NULL
  # DEBUG RetVal => NULL
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  return RetVal_4;

}


