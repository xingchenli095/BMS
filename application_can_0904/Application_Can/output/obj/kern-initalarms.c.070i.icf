Parsed function:OS_InitAlarms
Dump after hash based groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Dump after WPA based types groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Init called for 0 items (0.00%).
Dump after full equality comparison of groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes



Item count: 1
Congruent classes before: 1, after: 1
Average class size before: 1.00, after: 1.00
Average non-singular class size: 0.00, count: 0
Equal symbols: 0
Fraction of visited symbols: 0.00%

__attribute__((target ("general-regs-only")))
OS_InitAlarms ()
{
  const struct os_alarm_t * const as;
  os_alarmid_t i;
  const struct os_alarm_t * OS_alarmTableBase.0_1;
  unsigned int _2;
  unsigned int _3;
  struct os_alarmdynamic_t * _4;
  short unsigned int OS_totalAlarms.1_5;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG myCoreId => 0
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  OS_alarmTableBase.0_1 = OS_alarmTableBase;
  _2 = (unsigned int) i_6;
  _3 = _2 * 28;
  as_9 = OS_alarmTableBase.0_1 + _3;
  # DEBUG as => as_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = as_9->dynamic;
  _4->next = 65535;
  # DEBUG BEGIN_STMT
  i_11 = i_6 + 1;
  # DEBUG i => i_11

  <bb 4> [local count: 1073741824]:
  # i_6 = PHI <0(2), i_11(3)>
  # DEBUG i => i_6
  # DEBUG BEGIN_STMT
  OS_totalAlarms.1_5 = OS_totalAlarms;
  if (OS_totalAlarms.1_5 > i_6)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111601]:
  return;

}


