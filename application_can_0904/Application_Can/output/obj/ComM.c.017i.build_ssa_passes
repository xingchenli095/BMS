ComM_PNCWakeUpIndication_ChannelHandle (PNCHandleType pncIdx)
{
  const uint8 Channel;
  uint8 chIdx;
  boolean PassiveStartupStatus;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PassiveStartupStatus = 0;
  # DEBUG BEGIN_STMT
  chIdx = 0;
  # DEBUG BEGIN_STMT
  chIdx = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.21_1 = ComM_ConfigPtr;
  ComM_ConfigPtr.22_2 = ComM_ConfigPtr;
  _3 = ComM_ConfigPtr.22_2->pChannelsOfAllPnc;
  ComM_ConfigPtr.23_4 = ComM_ConfigPtr;
  _5 = (int) pncIdx;
  _6 = ComM_ConfigPtr.23_4->NumChannelsOfAllPnc[_5];
  _7 = (int) _6;
  _8 = (int) chIdx;
  _9 = _7 + _8;
  _10 = (sizetype) _9;
  _11 = _3 + _10;
  _12 = ComM_ConfigPtr.21_1 + _11;
  Channel = *_12;
  # DEBUG BEGIN_STMT
  _13 = (int) Channel;
  PassiveStartupStatus = ComM_DcmActiveStatus[_13];
  # DEBUG BEGIN_STMT
  _14 = (int) Channel;
  _15 = ComM_RequestedComMode[_14];
  if (_15 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  if (PassiveStartupStatus == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _16 = (int) Channel;
  ComM_PassiveStartupStatus[_16] = 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  _17 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _17, 6);
  # DEBUG BEGIN_STMT
  chIdx.24_18 = chIdx;
  chIdx = chIdx.24_18 + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.25_19 = ComM_ConfigPtr;
  _20 = (unsigned int) pncIdx;
  _21 = _20 + 1;
  _22 = ComM_ConfigPtr.25_19->NumChannelsOfAllPnc[_21];
  _23 = (unsigned char) _22;
  ComM_ConfigPtr.26_24 = ComM_ConfigPtr;
  _25 = (int) pncIdx;
  _26 = ComM_ConfigPtr.26_24->NumChannelsOfAllPnc[_25];
  _27 = (unsigned char) _26;
  _28 = _23 - _27;
  if (chIdx < _28)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


ComM_PNCWakeUpIndication_PncHandle (PNCHandleType pncIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, pncIdx, 4);
  # DEBUG BEGIN_STMT
  return;

}


ComM_IsValidConfig (const void * voidConfigPtr)
{
  const struct ComM_ConfigType * ConfigPtr;
  Std_ReturnType result;
  Std_ReturnType D.7218;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  ConfigPtr = voidConfigPtr;
  # DEBUG BEGIN_STMT
  if (ConfigPtr != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = ConfigPtr->PlatformSignature;
  _2 = TS_PlatformSigIsValid (_1);
  if (_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = ConfigPtr->CfgSignature;
  if (_3 == 3337107713)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = ConfigPtr->LcfgSignature;
  ComM_LcfgSignature.43_5 = ComM_LcfgSignature;
  if (_4 == ComM_LcfgSignature.43_5)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _6 = ConfigPtr->PublicInfoSignature;
  if (_6 == 1499283658)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  result = 0;

  <bb 8> :
  # DEBUG BEGIN_STMT
  D.7218 = result;
  return D.7218;

}


ComM_PncMainFunction ()
{
  boolean ComMExecutePncMainFunction;
  PNCHandleType PncIdx;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComMExecutePncMainFunction = 0;
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  ComMPncMainfunctionRunning.37_1 = ComMPncMainfunctionRunning;
  if (ComMPncMainfunctionRunning.37_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComMPncMainfunctionRunning = 1;
  # DEBUG BEGIN_STMT
  ComMExecutePncMainFunction = 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ComMExecutePncMainFunction == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ComM_ProcessPncComSignals (&ComM_RxEiraSignalStatus, &ComM_RxComSignalEiraCfg, &ComM_RxEira, 0);
  # DEBUG BEGIN_STMT
  PncIdx = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = ComM_HsmScComMPnc.instances;
  _3 = (unsigned int) PncIdx;
  _4 = _3 * 4;
  _5 = _2 + _4;
  _6 = _5->evQueueFill;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_HsmMainInst (&ComM_HsmScComMPnc, PncIdx);

  <bb 8> :
  # DEBUG BEGIN_STMT
  PncIdx.38_7 = PncIdx;
  PncIdx = PncIdx.38_7 + 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (PncIdx <= 1)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ComMPncMainfunctionRunning = 0;

  <bb 11> :
  return;

}


ComM_ProcessPncComSignals (boolean * SignalStatusPtr, const struct ComM_RxSignal_Struct_Type * SignalConfigurationPtr, uint8 * SignalMergedPtr, uint8 SignalKind)
{
  uint8 EiraMask;
  Std_ReturnType retVal;
  uint8 RxEiraReceived[6];
  uint8 signalCount;
  boolean EiraStatus;
  uint8 RxEiraMerged[6];
  uint8 i;
  uint8 Index;
  PNCHandleType PncIdx;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  EiraStatus = 0;
  # DEBUG BEGIN_STMT
  signalCount = 0;
  # DEBUG BEGIN_STMT
  TS_MemSet32 (&RxEiraMerged, 0, 6);
  # DEBUG BEGIN_STMT
  signalCount = 1;
  # DEBUG BEGIN_STMT
  _1 = *SignalStatusPtr;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  *SignalStatusPtr = 0;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Index = 0;
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (unsigned int) Index;
  _3 = _2 * 2;
  _4 = SignalConfigurationPtr + _3;
  _5 = _4->ComHandleId;
  retVal = Com_ReceiveSignal (_5, &RxEiraReceived);
  # DEBUG BEGIN_STMT
  if (retVal == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  EiraStatus = 1;
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _6 = (int) i;
  _7 = RxEiraMerged[_6];
  _8 = (int) i;
  _9 = RxEiraReceived[_8];
  _10 = (int) Index;
  _11 = ComM_PncRxEiraMask[_10];
  _12 = (sizetype) i;
  _13 = _11 + _12;
  _14 = *_13;
  _15 = _9 & _14;
  _16 = (int) i;
  _17 = _7 | _15;
  RxEiraMerged[_16] = _17;
  # DEBUG BEGIN_STMT
  i.39_18 = i;
  i = i.39_18 + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (i <= 5)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  RxEiraReceived = {CLOBBER};
  # DEBUG BEGIN_STMT
  Index.40_19 = Index;
  Index = Index.40_19 + 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (Index < signalCount)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (EiraStatus == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  PncIdx = 0;
  goto <bb 22>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = (int) PncIdx;
  _21 = ComM_PncID[_20];
  _22 = _21 >> 3;
  _23 = (unsigned char) _22;
  Index = _23 + 254;
  # DEBUG BEGIN_STMT
  _24 = (int) PncIdx;
  _25 = ComM_PncID[_24];
  _26 = (unsigned int) _25;
  _27 = _26 & 7;
  _28 = 1 << _27;
  EiraMask = (uint8) _28;
  # DEBUG BEGIN_STMT
  _29 = (sizetype) Index;
  _30 = SignalMergedPtr + _29;
  _31 = *_30;
  _32 = (int) Index;
  _33 = RxEiraMerged[_32];
  _34 = _31 ^ _33;
  _35 = EiraMask & _34;
  if (_35 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (SignalKind == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, PncIdx, 3);
  goto <bb 17>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (SignalKind == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, PncIdx, 0);

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = SignalKind + 255;
  if (_36 <= 1)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _37 = (int) Index;
  _38 = RxEiraMerged[_37];
  _39 = EiraMask & _38;
  if (_39 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, PncIdx, 6);
  goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, PncIdx, 2);

  <bb 21> :
  # DEBUG BEGIN_STMT
  PncIdx.41_40 = PncIdx;
  PncIdx = PncIdx.41_40 + 1;

  <bb 22> :
  # DEBUG BEGIN_STMT
  if (PncIdx <= 1)
    goto <bb 12>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  Index = 0;
  goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  _41 = (int) Index;
  _42 = (sizetype) Index;
  _43 = SignalMergedPtr + _42;
  _44 = RxEiraMerged[_41];
  *_43 = _44;
  # DEBUG BEGIN_STMT
  Index.42_45 = Index;
  Index = Index.42_45 + 1;

  <bb 25> :
  # DEBUG BEGIN_STMT
  if (Index <= 5)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  RxEiraMerged = {CLOBBER};
  return;

}


ComM_EB_GetPncRequestedComMode (uint8 Channel, PNCHandleType PncPos)
{
  PNCHandleType PncIDIdx;
  PNCHandleType Idx;
  ComM_ASR40_ModeType reqMode;
  ComM_ASR40_ModeType D.7180;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PncIDIdx = 0;
  # DEBUG BEGIN_STMT
  Idx = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.34_1 = ComM_ConfigPtr;
  ComM_ConfigPtr.35_2 = ComM_ConfigPtr;
  _3 = ComM_ConfigPtr.35_2->pPNCsOfAllChannel;
  ComM_ConfigPtr.36_4 = ComM_ConfigPtr;
  _5 = (int) Channel;
  _6 = ComM_ConfigPtr.36_4->NumPncOfAllCh[_5];
  _7 = (int) _6;
  _8 = (int) PncPos;
  _9 = _7 + _8;
  _10 = (unsigned int) _9;
  _11 = _10 * 2;
  _12 = _3 + _11;
  _13 = ComM_ConfigPtr.34_1 + _12;
  _14 = *_13;
  _15 = (int) Idx;
  _16 = ComM_PncID[_15];
  if (_14 == _16)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  PncIDIdx = Idx;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Idx = Idx + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Idx <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _17 = (int) PncIDIdx;
  reqMode = ComM_PNCRequestedComMode[_17];
  # DEBUG BEGIN_STMT
  D.7180 = reqMode;
  return D.7180;

}


ComM_BitArrayIsBitSet (const uint8 * arr, uint16 idx)
{
  boolean RetVal;
  boolean D.7176;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = idx / 8;
  _2 = (sizetype) _1;
  _3 = arr + _2;
  _4 = *_3;
  _5 = (int) _4;
  _6 = (unsigned int) idx;
  _7 = _6 & 7;
  _8 = _5 >> _7;
  _9 = (unsigned char) _8;
  RetVal = _9 & 1;
  # DEBUG BEGIN_STMT
  D.7176 = RetVal;
  return D.7176;

}


ComM_BitArrayClear (uint8 * arr, uint16 idx)
{
  short unsigned int D.7175;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.7175 = idx / 8;
  _1 = (sizetype) D.7175;
  _2 = arr + _1;
  _3 = *_2;
  _4 = (unsigned int) idx;
  _5 = _4 & 7;
  _6 = 1 << _5;
  _7 = (unsigned char) _6;
  _8 = ~_7;
  _9 = (sizetype) D.7175;
  _10 = arr + _9;
  _11 = _3 & _8;
  *_10 = _11;
  return;

}


ComM_BitArraySet (uint8 * arr, uint16 idx)
{
  short unsigned int D.7174;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.7174 = idx / 8;
  _1 = (sizetype) D.7174;
  _2 = arr + _1;
  _3 = *_2;
  _4 = (unsigned int) idx;
  _5 = _4 & 7;
  _6 = 1 << _5;
  _7 = (unsigned char) _6;
  _8 = (sizetype) D.7174;
  _9 = arr + _8;
  _10 = _3 | _7;
  *_9 = _10;
  return;

}


ComM_EvaluatePnc (PNCHandleType Pnc, ComM_ASR40_ModeType ComMode)
{
  const uint8 UserOfPnc;
  uint8_least UserPos;
  const uint8_least NumUser;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.29_1 = ComM_ConfigPtr;
  _2 = (unsigned int) Pnc;
  _3 = _2 + 1;
  _4 = ComM_ConfigPtr.29_1->NumUsersOfAllPnc[_3];
  _5 = (unsigned char) _4;
  ComM_ConfigPtr.30_6 = ComM_ConfigPtr;
  _7 = (int) Pnc;
  _8 = ComM_ConfigPtr.30_6->NumUsersOfAllPnc[_7];
  _9 = (unsigned char) _8;
  _10 = _5 - _9;
  NumUser = (const uint8_least) _10;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  UserPos = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.31_11 = ComM_ConfigPtr;
  ComM_ConfigPtr.32_12 = ComM_ConfigPtr;
  _13 = ComM_ConfigPtr.32_12->pUsersOfAllPnc;
  ComM_ConfigPtr.33_14 = ComM_ConfigPtr;
  _15 = (int) Pnc;
  _16 = ComM_ConfigPtr.33_14->NumUsersOfAllPnc[_15];
  _17 = (long unsigned int) _16;
  _18 = UserPos + _17;
  _19 = _13 + _18;
  _20 = ComM_ConfigPtr.31_11 + _19;
  UserOfPnc = *_20;
  # DEBUG BEGIN_STMT
  _21 = (int) UserOfPnc;
  _22 = ComM_UserRequestedComMode[_21];
  if (ComMode < _22)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _23 = (int) UserOfPnc;
  ComMode = ComM_UserRequestedComMode[_23];

  <bb 5> :
  # DEBUG BEGIN_STMT
  UserPos = UserPos + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (UserPos < NumUser)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ComMode == 2)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, Pnc, 6);
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, Pnc, 2);

  <bb 10> :
  return;

}


ComM_EB_SetRequestedComMode (uint8 Channel, ComM_ASR40_ModeType ComMode)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) Channel;
  ComM_RequestedComMode[_1] = ComMode;
  return;

}


ComM_EB_GetUserRequestedComMode (uint8 User)
{
  ComM_ASR40_ModeType ret;
  ComM_ASR40_ModeType D.7167;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) User;
  ret = ComM_UserRequestedComMode[_1];
  # DEBUG BEGIN_STMT
  D.7167 = ret;
  return D.7167;

}


ComM_BusSM_ModeIndication (NetworkHandleType Channel, ComM_ASR40_ModeType * ComMode)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.28_1 = ComM_InitStatus;
  if (ComM_InitStatus.28_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 51, 1);
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ComMode == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (Channel != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 51, 2);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  _3 = *ComMode;
  ComM_ChannelMode[_2] = _3;
  # DEBUG BEGIN_STMT
  _4 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _4, 0);

  <bb 8> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_CommunicationAllowed (NetworkHandleType Channel, boolean Allowed)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.27_1 = ComM_InitStatus;
  if (ComM_InitStatus.27_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 53, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 53, 2);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Allowed == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  ComM_Communication_Allowed[_2] = 1;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = (int) Channel;
  ComM_Communication_Allowed[_3] = 0;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();

  <bb 9> :
  # DEBUG BEGIN_STMT
  _4 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _4, 4);

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_EcuM_PNCWakeUpIndication (PNCHandleType PNCid)
{
  uint8 InstanceID;
  PNCHandleType PncIDIdx;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PncIDIdx = 0;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PncIDIdx = 0;
  goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) PncIDIdx;
  _2 = ComM_PncID[_1];
  if (PNCid == _2)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  PncIDIdx.18_3 = PncIDIdx;
  PncIDIdx = PncIDIdx.18_3 + 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (PncIDIdx <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ComM_InitStatus.19_4 = ComM_InitStatus;
  if (ComM_InitStatus.19_4 != 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 55, 1);
  goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (PncIDIdx > 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 55, 2);
  goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.20_5 = ComM_ConfigPtr;
  _6 = ComM_ConfigPtr.20_5->ComMPncEnabled;
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ComM_PNCWakeUpIndication_PncHandle (PncIDIdx);
  # DEBUG BEGIN_STMT
  ComM_PNCWakeUpIndication_ChannelHandle (PncIDIdx);

  <bb 12> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_EcuM_WakeUpIndication (NetworkHandleType Channel)
{
  uint8 InstanceID;
  boolean PassiveStartupStatus;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PassiveStartupStatus = 0;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.17_1 = ComM_InitStatus;
  if (ComM_InitStatus.17_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 42, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 42, 2);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  PassiveStartupStatus = ComM_DcmActiveStatus[_2];
  # DEBUG BEGIN_STMT
  _3 = (int) Channel;
  _4 = ComM_RequestedComMode[_3];
  if (_4 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (PassiveStartupStatus == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _5 = (int) Channel;
  ComM_PassiveStartupStatus[_5] = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _6, 6);

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_DCM_InactiveDiagnostic (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.16_1 = ComM_InitStatus;
  if (ComM_InitStatus.16_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 32, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 32, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  ComM_DcmActiveStatus[_2] = 0;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _3, 9);

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


ComM_DCM_ActiveDiagnostic (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.15_1 = ComM_InitStatus;
  if (ComM_InitStatus.15_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 31, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 31, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  ComM_DcmActiveStatus[_2] = 1;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _3, 9);

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


ComM_BusSM_BusSleepMode (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.14_1 = ComM_InitStatus;
  if (ComM_InitStatus.14_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 246, 1);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 246, 2);

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_RestartIndication (NetworkHandleType Channel)
{
  boolean PassiveStartupStatus;
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  PassiveStartupStatus = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.13_1 = ComM_InitStatus;
  if (ComM_InitStatus.13_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 27, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 27, 2);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  PassiveStartupStatus = ComM_DcmActiveStatus[_2];
  # DEBUG BEGIN_STMT
  _3 = (int) Channel;
  _4 = ComM_RequestedComMode[_3];
  if (_4 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (PassiveStartupStatus == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _5 = (int) Channel;
  ComM_PassiveStartupStatus[_5] = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _6, 6);

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_BusSleepMode (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.12_1 = ComM_InitStatus;
  if (ComM_InitStatus.12_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 26, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 26, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _2, 8);

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_PrepareBusSleepMode (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.11_1 = ComM_InitStatus;
  if (ComM_InitStatus.11_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 25, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 25, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _2, 8);

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_NetworkMode (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.10_1 = ComM_InitStatus;
  if (ComM_InitStatus.10_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 24, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 24, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _2, 8);

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_NetworkStartIndication (NetworkHandleType Channel)
{
  uint8 InstanceID;
  boolean PassiveStartupStatus;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PassiveStartupStatus = 0;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.9_1 = ComM_InitStatus;
  if (ComM_InitStatus.9_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 21, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 21, 2);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  PassiveStartupStatus = ComM_DcmActiveStatus[_2];
  # DEBUG BEGIN_STMT
  _3 = (int) Channel;
  _4 = ComM_RequestedComMode[_3];
  if (_4 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (PassiveStartupStatus == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _5 = (int) Channel;
  ComM_PassiveStartupStatus[_5] = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _6, 6);

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_ASR40_GetCurrentPNCComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType * ComMode)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7064;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.8_1 = ComM_InitStatus;
  if (ComM_InitStatus.8_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 254, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 254, 2);

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7064 = RetVal;
  return D.7064;

}


ComM_ASR40_GetCurrentComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType * ComMode)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7059;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.7_1 = ComM_InitStatus;
  if (ComM_InitStatus.7_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 8, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 8, 2);

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7059 = RetVal;
  return D.7059;

}


ComM_ASR40_GetRequestedComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType * ComMode)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7054;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.6_1 = ComM_InitStatus;
  if (ComM_InitStatus.6_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 7, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 7, 2);

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7054 = RetVal;
  return D.7054;

}


ComM_ASR40_GetMaxComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType * ComMode)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7049;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.5_1 = ComM_InitStatus;
  if (ComM_InitStatus.5_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 6, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 6, 2);

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7049 = RetVal;
  return D.7049;

}


ComM_ASR40_RequestComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType ComMode)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7044;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.4_1 = ComM_InitStatus;
  if (ComM_InitStatus.4_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 5, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 5, 2);

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7044 = RetVal;
  return D.7044;

}


ComM_GetStatus (ComM_InitStatusType * Status)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7039;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Status == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 3, 2);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ComM_InitStatus.3_1 = ComM_InitStatus;
  *Status = ComM_InitStatus.3_1;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7039 = RetVal;
  return D.7039;

}


ComM_GetState (NetworkHandleType Channel, ComM_StateType * State)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7034;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.2_1 = ComM_InitStatus;
  if (ComM_InitStatus.2_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 52, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (State == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (Channel != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 52, 2);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  _3 = ComM_ChanState[_2];
  *State = _3;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7034 = RetVal;
  return D.7034;

}


ComM_DeInit ()
{
  uint8_least i;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.1_1 = ComM_InitStatus;
  if (ComM_InitStatus.1_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, 0, 2, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _2 = ComM_ChanState[i];
  if (_2 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (i == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (i == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ComM_InitStatus = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Init (const struct ComM_ConfigType * ConfigPtr)
{
  const struct ComM_ConfigType * LocalConfigPtr;
  uint8_least i;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LocalConfigPtr = ConfigPtr;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (LocalConfigPtr == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, 0, 1, 2);
  goto <bb 18>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = ComM_IsValidConfig (LocalConfigPtr);
  if (_1 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, 0, 1, 2);
  goto <bb 18>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr = LocalConfigPtr;
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_RequestedComMode[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_ChanState[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_ChannelMode[i] = 0;
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (i == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  TS_MemSet32 (&ComM_UserRequestedComMode, 0, 1);
  # DEBUG BEGIN_STMT
  ComM_HsmInit (&ComM_HsmScComM);
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ComM_Communication_Allowed[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_DcmActiveStatus[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_PassiveStartupStatus[i] = 0;
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (i == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.0_2 = ComM_ConfigPtr;
  _3 = ComM_ConfigPtr.0_2->ComMPncEnabled;
  if (_3 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  ComM_HsmInit (&ComM_HsmScComMPnc);
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ComM_RxEira[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_TxEiraEraActive[i] = 0;
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (i <= 5)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  ComM_RxEiraSignalStatus = 0;
  # DEBUG BEGIN_STMT
  TS_MemSet32 (&ComM_PNCRequestedComMode, 0, 2);
  # DEBUG BEGIN_STMT
  TS_MemSet32 (&ComM_PNCMode, 0, 2);

  <bb 17> :
  # DEBUG BEGIN_STMT
  ComMPncMainfunctionRunning = 0;
  # DEBUG BEGIN_STMT
  ComM_RteNotificationDoActFkp = ComM_RteNotificationDoAction;
  # DEBUG BEGIN_STMT
  ComM_InitStatus = 1;

  <bb 18> :
  # DEBUG BEGIN_STMT
  return;

}


