NvM_Rte_InvalidateNvBlock (NvM_BlockIdType BlockId)
{
  Std_ReturnType ret;
  Std_ReturnType _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_1 = 1;
  # DEBUG ret => ret_1
  # DEBUG BEGIN_STMT
  ret_5 = NvM_ASR40_InvalidateNvBlock (BlockId_3(D));
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  _6 = ret_5;
  return _6;

}


NvM_Rte_EraseNvBlock (NvM_BlockIdType BlockId)
{
  Std_ReturnType ret;
  Std_ReturnType _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_1 = 1;
  # DEBUG ret => ret_1
  # DEBUG BEGIN_STMT
  ret_5 = NvM_ASR40_EraseNvBlock (BlockId_3(D));
  # DEBUG ret => ret_5
  # DEBUG BEGIN_STMT
  _6 = ret_5;
  return _6;

}


NvM_Rte_RestoreBlockDefaults (NvM_BlockIdType BlockId, void * NvM_DestPtr)
{
  Std_ReturnType ret;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_1 = 1;
  # DEBUG ret => ret_1
  # DEBUG BEGIN_STMT
  ret_6 = NvM_ASR40_RestoreBlockDefaults (BlockId_3(D), NvM_DestPtr_4(D));
  # DEBUG ret => ret_6
  # DEBUG BEGIN_STMT
  _7 = ret_6;
  return _7;

}


NvM_Rte_WriteBlock (NvM_BlockIdType BlockId, const void * NvM_SrcPtr)
{
  Std_ReturnType ret;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_1 = 1;
  # DEBUG ret => ret_1
  # DEBUG BEGIN_STMT
  ret_6 = NvM_ASR40_WriteBlock (BlockId_3(D), NvM_SrcPtr_4(D));
  # DEBUG ret => ret_6
  # DEBUG BEGIN_STMT
  _7 = ret_6;
  return _7;

}


NvM_Rte_ReadBlock (NvM_BlockIdType BlockId, void * NvM_DstPtr)
{
  Std_ReturnType ret;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_1 = 1;
  # DEBUG ret => ret_1
  # DEBUG BEGIN_STMT
  ret_6 = NvM_ASR40_ReadBlock (BlockId_3(D), NvM_DstPtr_4(D));
  # DEBUG ret => ret_6
  # DEBUG BEGIN_STMT
  _7 = ret_6;
  return _7;

}


NvM_Rte_SetRamBlockStatus (NvM_BlockIdType BlockId, boolean BlockChanged)
{
  Std_ReturnType ret;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_1 = 1;
  # DEBUG ret => ret_1
  # DEBUG BEGIN_STMT
  ret_6 = NvM_ASR40_SetRamBlockStatus (BlockId_3(D), BlockChanged_4(D));
  # DEBUG ret => ret_6
  # DEBUG BEGIN_STMT
  _7 = ret_6;
  return _7;

}


NvM_Rte_GetDataIndex (NvM_BlockIdType BlockId, uint8 * DataIndex)
{
  Std_ReturnType ret;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_1 = 1;
  # DEBUG ret => ret_1
  # DEBUG BEGIN_STMT
  ret_6 = NvM_ASR40_GetDataIndex (BlockId_3(D), DataIndex_4(D));
  # DEBUG ret => ret_6
  # DEBUG BEGIN_STMT
  _7 = ret_6;
  return _7;

}


NvM_Rte_SetDataIndex (NvM_BlockIdType BlockId, uint8 DataIndex)
{
  Std_ReturnType ret;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_1 = 1;
  # DEBUG ret => ret_1
  # DEBUG BEGIN_STMT
  ret_6 = NvM_ASR40_SetDataIndex (BlockId_3(D), DataIndex_4(D));
  # DEBUG ret => ret_6
  # DEBUG BEGIN_STMT
  _7 = ret_6;
  return _7;

}


NvM_Rte_GetErrorStatus (NvM_BlockIdType BlockId, NvM_RequestResultType * RequestResultPtr)
{
  Std_ReturnType ret;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_1 = 1;
  # DEBUG ret => ret_1
  # DEBUG BEGIN_STMT
  ret_6 = NvM_ASR40_GetErrorStatus (BlockId_3(D), RequestResultPtr_4(D));
  # DEBUG ret => ret_6
  # DEBUG BEGIN_STMT
  _7 = ret_6;
  return _7;

}


