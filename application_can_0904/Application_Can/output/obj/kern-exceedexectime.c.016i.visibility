
Marking local functions:


Marking externally visible functions: OS_ExceedExecTime


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_svc_TrapHandler/3 (OS_svc_TrapHandler) @06c7bab0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_ExceedExecTime/0 (addr)OS_ExceedExecTime/0 (addr)OS_ExceedExecTime/0 (addr)OS_ExceedExecTime/0 (addr)OS_ExceedExecTime/0 (addr)OS_ExceedExecTime/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/2 (OS_Error) @06c9fd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_ExceedExecTime/0 OS_ExceedExecTime/0 OS_ExceedExecTime/0 OS_ExceedExecTime/0 OS_ExceedExecTime/0 OS_ExceedExecTime/0 
  Calls: 
OS_kernelData/1 (OS_kernelData) @06c7ba20
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_ExceedExecTime/0 (addr)OS_ExceedExecTime/0 (read)OS_ExceedExecTime/0 (read)OS_ExceedExecTime/0 (write)OS_ExceedExecTime/0 (write)OS_ExceedExecTime/0 (read)OS_ExceedExecTime/0 (write)OS_ExceedExecTime/0 (read)OS_ExceedExecTime/0 (write)OS_ExceedExecTime/0 (read)OS_ExceedExecTime/0 (read)OS_ExceedExecTime/0 (write)
  Availability: not_available
  Varpool flags:
OS_ExceedExecTime/0 (OS_ExceedExecTime) @06c9fa80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_svc_TrapHandler/3 (addr)OS_svc_TrapHandler/3 (addr)OS_svc_TrapHandler/3 (addr)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_TrapHandler/3 (addr)OS_svc_TrapHandler/3 (addr)OS_svc_TrapHandler/3 (addr)OS_kernelData/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Error/2 OS_Error/2 OS_Error/2 OS_Error/2 OS_Error/2 OS_Error/2 
__attribute__((target ("general-regs-only")))
OS_ExceedExecTime ()
{
  os_uint8_t inFunctionSave;
  struct os_kerneldata_t * const kernel_data;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  inFunctionSave = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.accounting.inFunction;
  OS_kernelData.inFunction = _1;
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.inFunction = 255;
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.inFunction;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.taskTimingNesting = 1;
  # DEBUG BEGIN_STMT
  _3 = OS_kernelData.accounting.etType;
  _4 = (int) _3;
  switch (_4) <default: <L3> [INV], case 2: <L1> [INV], case 3: <L2> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 63, 0B);
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 65, 0B);
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 34, 0B);
  # DEBUG BEGIN_STMT

  <bb 7> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.taskTimingNesting = 0;
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.inFunction;
  if (_5 == 3)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = OS_kernelData.accounting.etType;
  _7 = (int) _6;
  switch (_7) <default: <L9> [INV], case 2: <L7> [INV], case 3: <L8> [INV]>

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 64, 0B);
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 11> :
<L8>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 66, 0B);
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 12> :
<L9>:
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_TrapHandler, 35, 0B);
  # DEBUG BEGIN_STMT

  <bb 13> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = inFunctionSave;
  return;

}


