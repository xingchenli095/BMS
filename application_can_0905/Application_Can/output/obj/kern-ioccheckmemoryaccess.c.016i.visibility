
Marking local functions:


Marking externally visible functions: OS_KernIocCheckMemoryAccess


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_KernCheckIsrMemoryAccess/3 (OS_KernCheckIsrMemoryAccess) @06b70d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernIocCheckMemoryAccess/0 
  Calls: 
OS_KernCheckTaskMemoryAccess/2 (OS_KernCheckTaskMemoryAccess) @06b70c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernIocCheckMemoryAccess/0 
  Calls: 
OS_kernelData/1 (OS_kernelData) @06bfb708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernIocCheckMemoryAccess/0 (read)OS_KernIocCheckMemoryAccess/0 (read)OS_KernIocCheckMemoryAccess/0 (read)
  Availability: not_available
  Varpool flags:
OS_KernIocCheckMemoryAccess/0 (OS_KernIocCheckMemoryAccess) @06b70a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_KernCheckIsrMemoryAccess/3 OS_KernCheckTaskMemoryAccess/2 
__attribute__((target ("general-regs-only")))
OS_KernIocCheckMemoryAccess (const void * data, os_size_t len)
{
  const os_isrid_t current_isr;
  const struct os_task_t * const current_task;
  const os_uint8_t inFunction;
  os_memoryaccess_t access;
  os_memoryaccess_t D.7424;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  inFunction = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  if (inFunction == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  current_task = OS_kernelData.taskCurrent;
  # DEBUG BEGIN_STMT
  _1 = current_task->taskId;
  access = OS_KernCheckTaskMemoryAccess (_1, data, len);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (inFunction == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  current_isr = OS_kernelData.isrCurrent;
  # DEBUG BEGIN_STMT
  access = OS_KernCheckIsrMemoryAccess (current_isr, data, len);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  access = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.7424 = access;
  return D.7424;

}


