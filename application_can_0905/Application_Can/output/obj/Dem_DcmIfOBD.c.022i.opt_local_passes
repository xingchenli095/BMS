Dem_UpdatePID01value (const Dem_EventIdType EventId, const uint16 ReadinessGroup, const boolean ReadinessGroupChecked, uint8 * PID01value)
{
  boolean Result;
  short unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  uint8 * _4;
  unsigned char _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned char _9;
  short unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  uint8 * _13;
  unsigned char _14;
  int _15;
  unsigned char _16;
  unsigned int _17;
  unsigned int _18;
  short unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  uint8 * _23;
  unsigned char _24;
  unsigned int _25;
  short unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  unsigned char _31;
  short unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  uint8 * _36;
  unsigned char _37;
  int _38;
  unsigned char _39;
  unsigned int _40;
  unsigned int _41;
  short unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  unsigned int _45;
  uint8 * _46;
  unsigned char _47;
  unsigned int _48;
  short unsigned int _49;
  unsigned int _50;
  unsigned int _51;
  unsigned int _52;
  unsigned int _53;
  unsigned char _54;
  unsigned char _55;
  short unsigned int _56;
  unsigned int _57;
  unsigned int _58;
  unsigned int _59;
  uint8 * _60;
  unsigned char _61;
  boolean _77;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_67 = ReadinessGroupChecked_66(D);
  # DEBUG Result => Result_67
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ReadinessGroupChecked_66(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = ReadinessGroup_69(D) / 8;
  _2 = (unsigned int) _1;
  _3 = 2 - _2;
  _4 = PID01value_70(D) + _3;
  _5 = *_4;
  _6 = (unsigned int) ReadinessGroup_69(D);
  _7 = _6 & 7;
  _8 = 1 << _7;
  _9 = (unsigned char) _8;
  _10 = ReadinessGroup_69(D) / 8;
  _11 = (unsigned int) _10;
  _12 = 2 - _11;
  _13 = PID01value_70(D) + _12;
  _14 = _5 | _9;
  *_13 = _14;
  # DEBUG BEGIN_STMT
  _15 = (int) EventId_72(D);
  _16 = Dem_NvData.DTCStatusMask[_15];
  _17 = (unsigned int) _16;
  _18 = _17 & 20;
  if (_18 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _19 = ReadinessGroup_69(D) / 8;
  _20 = (unsigned int) _19;
  _21 = _20 * 2;
  _22 = 3 - _21;
  _23 = PID01value_70(D) + _22;
  _24 = *_23;
  _25 = (unsigned int) ReadinessGroup_69(D);
  _26 = ReadinessGroup_69(D) / 8;
  _27 = (unsigned int) _26;
  _28 = _27 * 4;
  _29 = _25 - _28;
  _30 = 1 << _29;
  _31 = (unsigned char) _30;
  _32 = ReadinessGroup_69(D) / 8;
  _33 = (unsigned int) _32;
  _34 = _33 * 2;
  _35 = 3 - _34;
  _36 = PID01value_70(D) + _35;
  _37 = _24 | _31;
  *_36 = _37;
  # DEBUG BEGIN_STMT
  Result_74 = 1;
  # DEBUG Result => Result_74

  <bb 5> :
  # Result_62 = PHI <Result_67(2), Result_67(3), Result_74(4)>
  # DEBUG Result => Result_62
  # DEBUG BEGIN_STMT
  _38 = (int) EventId_72(D);
  _39 = Dem_NvData.DTCStatusMask[_38];
  _40 = (unsigned int) _39;
  _41 = _40 & 8;
  if (_41 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _42 = ReadinessGroup_69(D) / 8;
  _43 = (unsigned int) _42;
  _44 = _43 * 2;
  _45 = 3 - _44;
  _46 = PID01value_70(D) + _45;
  _47 = *_46;
  _48 = (unsigned int) ReadinessGroup_69(D);
  _49 = ReadinessGroup_69(D) / 8;
  _50 = (unsigned int) _49;
  _51 = _50 * 4;
  _52 = _48 - _51;
  _53 = 1 << _52;
  _54 = (unsigned char) _53;
  _55 = ~_54;
  _56 = ReadinessGroup_69(D) / 8;
  _57 = (unsigned int) _56;
  _58 = _57 * 2;
  _59 = 3 - _58;
  _60 = PID01value_70(D) + _59;
  _61 = _47 & _55;
  *_60 = _61;
  # DEBUG BEGIN_STMT
  Result_76 = 1;
  # DEBUG Result => Result_76

  <bb 7> :
  # Result_63 = PHI <Result_62(5), Result_76(6)>
  # DEBUG Result => Result_63
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _77 = Result_63;
  return _77;

}


Dem_DcmGetDTRData (uint8 Obdmid, uint8 TIDindex, uint8 * TIDvalue, uint8 * UaSID, uint16 * Testvalue, uint16 * Lowlimvalue, uint16 * Upplimvalue)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.30_1;
  Std_ReturnType _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.30_1 = Dem_InitializationState;
  if (Dem_InitializationState.30_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 165, 32);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (TIDvalue_5(D) == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (UaSID_6(D) == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (Testvalue_7(D) == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (Lowlimvalue_8(D) == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (Upplimvalue_9(D) == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 165, 17);

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Result_3;
  return _12;

}


Dem_DcmGetNumTIDsOfOBDMID (uint8 Obdmid, uint8 * numberOfTIDs)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.29_1;
  Std_ReturnType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.29_1 = Dem_InitializationState;
  if (Dem_InitializationState.29_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 164, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (numberOfTIDs_5(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 164, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = Result_3;
  return _8;

}


Dem_DcmGetAvailableOBDMIDs (uint8 Obdmid, uint32 * Obdmidvalue)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.28_1;
  Std_ReturnType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.28_1 = Dem_InitializationState;
  if (Dem_InitializationState.28_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 163, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Obdmidvalue_5(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 163, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = Result_3;
  return _8;

}


Dem_DcmGetDTCOfOBDFreezeFrame (uint8 FrameNumber, uint32 * DTC, Dem_DTCFormatType DTCFormat)
{
  uint32 DtcTempValue;
  Dem_SizeEvMemEntryType SelectedEntryIndex;
  boolean EntryFound;
  Dem_EventIdType StoredOBDFFEventId;
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.26_1;
  struct Dem_EventMemoryEntryType * _2;
  unsigned char SelectedEntryIndex.27_3;
  unsigned int _4;
  unsigned int _5;
  struct Dem_EventMemoryEntryType * _6;
  Std_ReturnType _34;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_12 = 1;
  # DEBUG Result => Result_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.26_1 = Dem_InitializationState;
  if (Dem_InitializationState.26_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 83, 32);
  goto <bb 16>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (DTC_14(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 83, 17);
  goto <bb 16>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (DTCFormat_15(D) > 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 83, 18);
  goto <bb 16>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (FrameNumber_16(D) == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (DTCFormat_15(D) <= 1)
    goto <bb 10>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  StoredOBDFFEventId_17 = 0;
  # DEBUG StoredOBDFFEventId => StoredOBDFFEventId_17
  # DEBUG BEGIN_STMT
  EntryFound_18 = 0;
  # DEBUG EntryFound => EntryFound_18
  # DEBUG BEGIN_STMT
  SelectedEntryIndex = 0;
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  EntryFound_22 = Dem_SelectEntryOfOBDFreezeFrameEvent (&SelectedEntryIndex, 1);
  # DEBUG EntryFound => EntryFound_22
  # DEBUG BEGIN_STMT
  if (EntryFound_22 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _2 = Dem_EventMem[0];
  SelectedEntryIndex.27_3 = SelectedEntryIndex;
  _4 = (unsigned int) SelectedEntryIndex.27_3;
  _5 = _4 * 16;
  _6 = _2 + _5;
  StoredOBDFFEventId_23 = _6->EventId;
  # DEBUG StoredOBDFFEventId => StoredOBDFFEventId_23

  <bb 12> :
  # StoredOBDFFEventId_9 = PHI <StoredOBDFFEventId_17(10), StoredOBDFFEventId_23(11)>
  # DEBUG StoredOBDFFEventId => StoredOBDFFEventId_9
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (EntryFound_22 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  DtcTempValue_25 = 0;
  # DEBUG DtcTempValue => DtcTempValue_25
  # DEBUG BEGIN_STMT
  DtcTempValue_27 = Dem_GetVisibleCmbDTC (DTCFormat_15(D), StoredOBDFFEventId_9);
  # DEBUG DtcTempValue => DtcTempValue_27
  # DEBUG BEGIN_STMT
  if (DtcTempValue_27 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  *DTC_14(D) = DtcTempValue_27;
  # DEBUG BEGIN_STMT
  Result_29 = 0;
  # DEBUG Result => Result_29

  <bb 15> :
  # Result_7 = PHI <Result_12(12), Result_12(13), Result_29(14)>
  # DEBUG Result => Result_7
  SelectedEntryIndex ={v} {CLOBBER};

  <bb 16> :
  # Result_8 = PHI <Result_12(3), Result_12(5), Result_12(7), Result_12(8), Result_12(9), Result_7(15)>
  # DEBUG Result => Result_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = Result_8;
  return _34;

}


Dem_DcmReadDataOfOBDFreezeFrame (uint8 PID, uint8 DataElementIndexOfPID, uint8 * DestBuffer, uint16 * BufSize)
{
  const Dem_SizeEntryDataType ObdFFDataIdx;
  Dem_EntryDataType * OBDFFStoredData;
  Dem_SizeEntryDataType StartByte;
  uint8_least PidClassIterator;
  boolean EntryFound;
  Dem_SizeEvMemEntryType SelectedEntryIndex;
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.24_1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  short unsigned int _6;
  short unsigned int _7;
  const uint8 * _8;
  sizetype _9;
  const uint8 * _10;
  unsigned char _11;
  short unsigned int _12;
  const Dem_OBDFFDataElementOffsetType * _13;
  sizetype _14;
  const Dem_OBDFFDataElementOffsetType * _15;
  unsigned char _16;
  short unsigned int _17;
  unsigned char SelectedEntryIndex.25_18;
  int _19;
  sizetype _20;
  Dem_EntryDataType * _21;
  const uint8 * _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  long unsigned int _26;
  const uint8 * _27;
  sizetype _28;
  const uint8 * _29;
  unsigned char _30;
  short unsigned int _31;
  Std_ReturnType _65;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_38 = 1;
  # DEBUG Result => Result_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.24_1 = Dem_InitializationState;
  if (Dem_InitializationState.24_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 82, 32);
  goto <bb 19>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (DestBuffer_40(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 82, 17);
  goto <bb 19>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (BufSize_41(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 82, 17);
  goto <bb 19>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  SelectedEntryIndex = 0;
  # DEBUG BEGIN_STMT
  EntryFound_43 = 0;
  # DEBUG EntryFound => EntryFound_43
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  EntryFound_46 = Dem_SelectEntryOfOBDFreezeFrameEvent (&SelectedEntryIndex, 1);
  # DEBUG EntryFound => EntryFound_46
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (EntryFound_46 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  StartByte_48 = 0;
  # DEBUG StartByte => StartByte_48
  # DEBUG BEGIN_STMT
  PidClassIterator_49 = 0;
  # DEBUG PidClassIterator => PidClassIterator_49
  goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = Dem_PidClass[PidClassIterator_34].ParameterId;
  if (PID_50(D) == _2)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  _3 = Dem_PidClass[PidClassIterator_34].ParameterId;
  if (_3 != 255)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _4 = Dem_PidClass[PidClassIterator_34].NumSegDataElements;
  if (DataElementIndexOfPID_51(D) < _4)
    goto <bb 15>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _5 = Dem_PidClass[PidClassIterator_34].Size;
  _6 = (short unsigned int) _5;
  StartByte_52 = StartByte_35 + _6;
  # DEBUG StartByte => StartByte_52
  # DEBUG BEGIN_STMT
  PidClassIterator_53 = PidClassIterator_34 + 1;
  # DEBUG PidClassIterator => PidClassIterator_53

  <bb 14> :
  # PidClassIterator_34 = PHI <PidClassIterator_49(9), PidClassIterator_53(13)>
  # StartByte_35 = PHI <StartByte_48(9), StartByte_52(13)>
  # DEBUG StartByte => StartByte_35
  # DEBUG PidClassIterator => PidClassIterator_34
  # DEBUG BEGIN_STMT
  if (PidClassIterator_34 <= 1)
    goto <bb 10>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (PidClassIterator_34 <= 1)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _7 = *BufSize_41(D);
  _8 = Dem_PidClass[PidClassIterator_34].ObdFFPidDataElementSize;
  _9 = (sizetype) DataElementIndexOfPID_51(D);
  _10 = _8 + _9;
  _11 = *_10;
  _12 = (short unsigned int) _11;
  if (_7 >= _12)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _13 = Dem_PidClass[PidClassIterator_34].ObdFFPidDataElementOffset;
  _14 = (sizetype) DataElementIndexOfPID_51(D);
  _15 = _13 + _14;
  _16 = *_15;
  _17 = (short unsigned int) _16;
  ObdFFDataIdx_54 = StartByte_35 + _17;
  # DEBUG ObdFFDataIdx => ObdFFDataIdx_54
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  SelectedEntryIndex.25_18 = SelectedEntryIndex;
  _19 = (int) SelectedEntryIndex.25_18;
  OBDFFStoredData_56 = &Dem_EntryOBDFF[_19].OBDFFData;
  # DEBUG OBDFFStoredData => OBDFFStoredData_56
  # DEBUG BEGIN_STMT
  _20 = (sizetype) ObdFFDataIdx_54;
  _21 = OBDFFStoredData_56 + _20;
  _22 = Dem_PidClass[PidClassIterator_34].ObdFFPidDataElementSize;
  _23 = (sizetype) DataElementIndexOfPID_51(D);
  _24 = _22 + _23;
  _25 = *_24;
  _26 = (long unsigned int) _25;
  TS_MemCpy32 (DestBuffer_40(D), _21, _26);
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _27 = Dem_PidClass[PidClassIterator_34].ObdFFPidDataElementSize;
  _28 = (sizetype) DataElementIndexOfPID_51(D);
  _29 = _27 + _28;
  _30 = *_29;
  _31 = (short unsigned int) _30;
  *BufSize_41(D) = _31;
  # DEBUG BEGIN_STMT
  Result_60 = 0;
  # DEBUG Result => Result_60

  <bb 18> :
  # Result_32 = PHI <Result_38(8), Result_38(15), Result_38(16), Result_60(17)>
  # DEBUG Result => Result_32
  SelectedEntryIndex ={v} {CLOBBER};

  <bb 19> :
  # Result_33 = PHI <Result_38(3), Result_38(5), Result_38(7), Result_32(18)>
  # DEBUG Result => Result_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _65 = Result_33;
  return _65;

}


Dem_DcmReadDataOfPID91 (uint8 * PID91value)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.23_1;
  Std_ReturnType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.23_1 = Dem_InitializationState;
  if (Dem_InitializationState.23_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 106, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID91value_5(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 106, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = Result_3;
  return _8;

}


Dem_DcmReadDataOfPID1C (uint8 * PID1Cvalue)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.21_1;
  unsigned char Dem_ObdCompliancyPID1CByte.22_2;
  Std_ReturnType _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_4 = 0;
  # DEBUG Result => Result_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.21_1 = Dem_InitializationState;
  if (Dem_InitializationState.21_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 99, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID1Cvalue_6(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 99, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Dem_ObdCompliancyPID1CByte.22_2 = Dem_ObdCompliancyPID1CByte;
  *PID1Cvalue_6(D) = Dem_ObdCompliancyPID1CByte.22_2;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = Result_4;
  return _10;

}


Dem_DcmReadDataOfPID4E (uint8 * PID4Evalue)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.20_1;
  Std_ReturnType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.20_1 = Dem_InitializationState;
  if (Dem_InitializationState.20_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 105, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID4Evalue_5(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 105, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = Result_3;
  return _8;

}


Dem_DcmReadDataOfPID4D (uint8 * PID4Dvalue)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.19_1;
  Std_ReturnType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.19_1 = Dem_InitializationState;
  if (Dem_InitializationState.19_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 104, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID4Dvalue_5(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 104, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = Result_3;
  return _8;

}


Dem_DcmReadDataOfPID41 (uint8 * PID41value)
{
  const Dem_EventOBDReadinessGroupType ReadinessGroup;
  Dem_EventIdType EvId;
  uint8 PID41[4];
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.16_1;
  unsigned char Dem_ObdReadinessPID41ByteB.17_2;
  long unsigned int _3;
  int _4;
  long unsigned int _5;
  long unsigned int _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  unsigned char _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;
  unsigned char _18;
  int _19;
  unsigned char _20;
  unsigned int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  unsigned char _27;
  unsigned int _28;
  unsigned char _29;
  unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  unsigned int _33;
  unsigned char _34;
  unsigned char _35;
  unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char Dem_ObdReadinessForceCompleteMask.18_41;
  unsigned char _42;
  Std_ReturnType _66;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_48 = 0;
  # DEBUG Result => Result_48
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.16_1 = Dem_InitializationState;
  if (Dem_InitializationState.16_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 103, 32);
  goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID41value_50(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 103, 17);
  goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  PID41 = "\x00";
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_ObdReadinessPID41ByteB.17_2 = Dem_ObdReadinessPID41ByteB;
  PID41[1] = Dem_ObdReadinessPID41ByteB.17_2;
  # DEBUG BEGIN_STMT
  EvId_53 = 1;
  # DEBUG EvId => EvId_53
  goto <bb 13>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ReadinessGroup_58 = Dem_GbiOBDReadinessGroup (EvId_43);
  # DEBUG ReadinessGroup => ReadinessGroup_58
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ReadinessGroup_58 <= 10)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _3 = Dem_NvData.ReadinessEnableStatus;
  _4 = (int) ReadinessGroup_58;
  _5 = _3 >> _4;
  _6 = _5 & 1;
  if (_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _7 = ReadinessGroup_58 / 8;
  _8 = (unsigned int) _7;
  _9 = 2 - _8;
  _10 = PID41[_9];
  _11 = (unsigned int) ReadinessGroup_58;
  _12 = _11 & 7;
  _13 = 1 << _12;
  _14 = (unsigned char) _13;
  _15 = ReadinessGroup_58 / 8;
  _16 = (unsigned int) _15;
  _17 = 2 - _16;
  _18 = _10 | _14;
  PID41[_17] = _18;

  <bb 10> :
  # DEBUG BEGIN_STMT
  _19 = (int) EvId_43;
  _20 = Dem_NvData.DTCStatusMask[_19];
  _21 = (unsigned int) _20;
  _22 = _21 & 64;
  if (_22 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _23 = ReadinessGroup_58 / 8;
  _24 = (unsigned int) _23;
  _25 = _24 * 2;
  _26 = 3 - _25;
  _27 = PID41[_26];
  _28 = (unsigned int) ReadinessGroup_58;
  _29 = ReadinessGroup_58 / 8;
  _30 = (unsigned int) _29;
  _31 = _30 * 4;
  _32 = _28 - _31;
  _33 = 1 << _32;
  _34 = (unsigned char) _33;
  _35 = ReadinessGroup_58 / 8;
  _36 = (unsigned int) _35;
  _37 = _36 * 2;
  _38 = 3 - _37;
  _39 = _27 | _34;
  PID41[_38] = _39;

  <bb 12> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  EvId_63 = EvId_43 + 1;
  # DEBUG EvId => EvId_63

  <bb 13> :
  # EvId_43 = PHI <EvId_53(6), EvId_63(12)>
  # DEBUG EvId => EvId_43
  # DEBUG BEGIN_STMT
  if (EvId_43 <= 14)
    goto <bb 7>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _40 = PID41[1];
  Dem_ObdReadinessForceCompleteMask.18_41 = Dem_ObdReadinessForceCompleteMask;
  _42 = _40 & Dem_ObdReadinessForceCompleteMask.18_41;
  PID41[1] = _42;
  # DEBUG BEGIN_STMT
  TS_MemCpy32 (PID41value_50(D), &PID41[0], 4);
  PID41 ={v} {CLOBBER};

  <bb 15> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _66 = Result_48;
  return _66;

}


Dem_DcmReadDataOfPID31 (uint8 * PID31value)
{
  <unnamed type> Dem_InitializationState.15_1;
  uint8 * _2;
  Std_ReturnType _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.15_1 = Dem_InitializationState;
  if (Dem_InitializationState.15_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 102, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID31value_5(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 102, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  *PID31value_5(D) = 0;
  # DEBUG BEGIN_STMT
  _2 = PID31value_5(D) + 1;
  *_2 = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = 0;
  return _10;

}


Dem_DcmReadDataOfPID30 (uint8 * PID30value)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.14_1;
  Std_ReturnType _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 0;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.14_1 = Dem_InitializationState;
  if (Dem_InitializationState.14_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 101, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID30value_5(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 101, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  *PID30value_5(D) = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = Result_3;
  return _9;

}


Dem_DcmReadDataOfPID21 (uint8 * PID21value)
{
  <unnamed type> Dem_InitializationState.13_1;
  uint8 * _2;
  Std_ReturnType _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.13_1 = Dem_InitializationState;
  if (Dem_InitializationState.13_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 100, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID21value_5(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 100, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  *PID21value_5(D) = 0;
  # DEBUG BEGIN_STMT
  _2 = PID21value_5(D) + 1;
  *_2 = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = 0;
  return _10;

}


Dem_DcmReadDataOfPID01 (uint8 * PID01value)
{
  const uint32 ObdDtc;
  const uint8 ObdReadinessEngineTypeMask;
  uint8 PID01[4];
  Dem_EventIdType EventId;
  Dem_EventOBDReadinessGroupType ReadinessGroup;
  boolean ReadinessGroupChecked[11];
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.10_1;
  int _2;
  unsigned char ReadinessGroup.11_3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  short unsigned int _7;
  int _8;
  unsigned char _9;
  int _10;
  unsigned char _11;
  int _12;
  unsigned char _13;
  unsigned int _14;
  unsigned int _15;
  unsigned char _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char Dem_ObdReadinessForceCompleteMask.12_23;
  unsigned char _24;
  Std_ReturnType _63;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_35 = 0;
  # DEBUG Result => Result_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.10_1 = Dem_InitializationState;
  if (Dem_InitializationState.10_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 97, 32);
  goto <bb 24>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID01value_37(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 97, 17);
  goto <bb 24>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PID01 = "\x00";
  # DEBUG BEGIN_STMT
  ObdReadinessEngineTypeMask_39 = 8;
  # DEBUG ObdReadinessEngineTypeMask => ObdReadinessEngineTypeMask_39
  # DEBUG BEGIN_STMT
  PID01[1] = 8;
  # DEBUG BEGIN_STMT
  ReadinessGroup_41 = 0;
  # DEBUG ReadinessGroup => ReadinessGroup_41
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _2 = (int) ReadinessGroup_25;
  ReadinessGroupChecked[_2] = 0;
  # DEBUG BEGIN_STMT
  ReadinessGroup.11_3 = ReadinessGroup_25;
  ReadinessGroup_60 = ReadinessGroup.11_3 + 1;
  # DEBUG ReadinessGroup => ReadinessGroup_60

  <bb 8> :
  # ReadinessGroup_25 = PHI <ReadinessGroup_41(6), ReadinessGroup_60(7)>
  # DEBUG ReadinessGroup => ReadinessGroup_25
  # DEBUG BEGIN_STMT
  if (ReadinessGroup_25 <= 10)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _4 = Dem_InternalGetIndicatorStatus (0, 1);
  if (_4 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _5 = PID01[0];
  _6 = _5 | 128;
  PID01[0] = _6;

  <bb 11> :
  # DEBUG BEGIN_STMT
  EventId_44 = 1;
  # DEBUG EventId => EventId_44
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  ReadinessGroup_55 = Dem_GbiOBDReadinessGroup (EventId_26);
  # DEBUG ReadinessGroup => ReadinessGroup_55
  # DEBUG BEGIN_STMT
  if (ReadinessGroup_55 <= 10)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _7 = (short unsigned int) ReadinessGroup_55;
  _8 = (int) ReadinessGroup_55;
  _9 = ReadinessGroupChecked[_8];
  _10 = (int) ReadinessGroup_55;
  _11 = Dem_UpdatePID01value (EventId_26, _7, _9, &PID01);
  ReadinessGroupChecked[_10] = _11;

  <bb 14> :
  # DEBUG BEGIN_STMT
  EventId_58 = EventId_26 + 1;
  # DEBUG EventId => EventId_58

  <bb 15> :
  # EventId_26 = PHI <EventId_44(11), EventId_58(14)>
  # DEBUG EventId => EventId_26
  # DEBUG BEGIN_STMT
  if (EventId_26 <= 14)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  EventId_45 = 1;
  # DEBUG EventId => EventId_45
  goto <bb 22>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  ObdDtc_51 = Dem_GetVisibleObdDTC (EventId_27);
  # DEBUG ObdDtc => ObdDtc_51
  # DEBUG BEGIN_STMT
  if (ObdDtc_51 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _12 = (int) EventId_27;
  _13 = Dem_NvData.DTCStatusMask[_12];
  _14 = (unsigned int) _13;
  _15 = _14 & 8;
  if (_15 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _16 = PID01[0];
  _17 = (unsigned int) _16;
  _18 = _17 & 127;
  if (_18 <= 126)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _19 = PID01[0];
  _20 = _19;
  _21 = _20 + 1;
  PID01[0] = _21;

  <bb 21> :
  # DEBUG BEGIN_STMT
  EventId_53 = EventId_27 + 1;
  # DEBUG EventId => EventId_53

  <bb 22> :
  # EventId_27 = PHI <EventId_45(16), EventId_53(21)>
  # DEBUG EventId => EventId_27
  # DEBUG BEGIN_STMT
  if (EventId_27 <= 14)
    goto <bb 17>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  _22 = PID01[1];
  Dem_ObdReadinessForceCompleteMask.12_23 = Dem_ObdReadinessForceCompleteMask;
  _24 = _22 & Dem_ObdReadinessForceCompleteMask.12_23;
  PID01[1] = _24;
  # DEBUG BEGIN_STMT
  TS_MemCpy32 (PID01value_37(D), &PID01[0], 4);
  ReadinessGroupChecked ={v} {CLOBBER};
  PID01 ={v} {CLOBBER};

  <bb 24> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _63 = Result_35;
  return _63;

}


Dem_DcmGetInfoTypeValue0B (Dcm_OpStatusType OpStatus, uint8 * Iumprdata0B, uint8 * Iumprdata0BBufferSize)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.9_1;
  Std_ReturnType _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.9_1 = Dem_InitializationState;
  if (Dem_InitializationState.9_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 108, 32);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (OpStatus_5(D) != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 108, 18);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Iumprdata0B_6(D) == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (Iumprdata0BBufferSize_7(D) == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 108, 17);

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = Result_3;
  return _11;

}


Dem_DcmGetInfoTypeValue08 (Dcm_OpStatusType OpStatus, uint8 * Iumprdata08, uint8 * Iumprdata08BufferSize)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.8_1;
  Std_ReturnType _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.8_1 = Dem_InitializationState;
  if (Dem_InitializationState.8_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 107, 32);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (OpStatus_5(D) != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 107, 18);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Iumprdata08_6(D) == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (Iumprdata08BufferSize_7(D) == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 107, 17);

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = Result_3;
  return _11;

}


Dem_RepIUMPRDenRelease (Dem_RatioIdType RatioID)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.7_1;
  Std_ReturnType _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.7_1 = Dem_InitializationState;
  if (Dem_InitializationState.7_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 114, 32);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = Result_3;
  return _6;

}


Dem_RepIUMPRDenLock (Dem_RatioIdType RatioID)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.6_1;
  Std_ReturnType _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.6_1 = Dem_InitializationState;
  if (Dem_InitializationState.6_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 113, 32);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = Result_3;
  return _6;

}


Dem_RepIUMPRFaultDetect (Dem_RatioIdType RatioID)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.5_1;
  Std_ReturnType _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.5_1 = Dem_InitializationState;
  if (Dem_InitializationState.5_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 115, 32);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = Result_3;
  return _6;

}


Dem_ResetReadiness ()
{
  Dem_DTCStatusMaskType * EventDTCStatusPtr;
  Dem_DTCStatusMaskType NewDTCStatusMask;
  Dem_DTCStatusMaskType OldDTCStatusMask;
  const Dem_EventOBDReadinessGroupType ReadinessGroup;
  Dem_EventIdType EvId;
  <unnamed type> Dem_InitializationState.4_1;
  int _2;
  unsigned int _3;
  unsigned int _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.4_1 = Dem_InitializationState;
  if (Dem_InitializationState.4_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 172, 32);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  EvId_11 = 1;
  # DEBUG EvId => EvId_11
  goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ReadinessGroup_13 = Dem_GbiOBDReadinessGroup (EvId_5);
  # DEBUG ReadinessGroup => ReadinessGroup_13
  # DEBUG BEGIN_STMT
  if (ReadinessGroup_13 <= 10)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (int) EvId_5;
  EventDTCStatusPtr_14 = &Dem_NvData.DTCStatusMask[_2];
  # DEBUG EventDTCStatusPtr => EventDTCStatusPtr_14
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  OldDTCStatusMask_16 = *EventDTCStatusPtr_14;
  # DEBUG OldDTCStatusMask => OldDTCStatusMask_16
  # DEBUG BEGIN_STMT
  NewDTCStatusMask_17 = OldDTCStatusMask_16;
  # DEBUG NewDTCStatusMask => NewDTCStatusMask_17
  # DEBUG BEGIN_STMT
  _3 = (unsigned int) OldDTCStatusMask_16;
  _4 = _3 & 12;
  if (_4 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NewDTCStatusMask_18 = NewDTCStatusMask_17 | 16;
  # DEBUG NewDTCStatusMask => NewDTCStatusMask_18
  # DEBUG BEGIN_STMT
  *EventDTCStatusPtr_14 = NewDTCStatusMask_18;

  <bb 8> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();

  <bb 9> :
  # DEBUG BEGIN_STMT
  EvId_21 = EvId_5 + 1;
  # DEBUG EvId => EvId_21

  <bb 10> :
  # EvId_5 = PHI <EvId_11(4), EvId_21(9)>
  # DEBUG EvId => EvId_5
  # DEBUG BEGIN_STMT
  if (EvId_5 <= 14)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  return;

}


Dem_GetPfcCycleQualified (boolean * isqualified)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.3_1;
  unsigned char _2;
  Std_ReturnType _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_4 = 0;
  # DEBUG Result => Result_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.3_1 = Dem_InitializationState;
  if (Dem_InitializationState.3_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 171, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (isqualified_6(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 171, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = Dem_NvData.PfcStatus;
  *isqualified_6(D) = _2;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = Result_4;
  return _10;

}


Dem_SetPfcCycleQualified ()
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.2_1;
  Std_ReturnType _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 0;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.2_1 = Dem_InitializationState;
  if (Dem_InitializationState.2_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 170, 32);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Dem_NvData.PfcStatus = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = Result_3;
  return _7;

}


Dem_SetPtoStatus (boolean PtoStatus)
{
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.1_1;
  Std_ReturnType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_3 = 1;
  # DEBUG Result => Result_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.1_1 = Dem_InitializationState;
  if (Dem_InitializationState.1_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 121, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PtoStatus_5(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 121, 18);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = Result_3;
  return _8;

}


Dem_SetEventDisabled (Dem_EventIdType EventId)
{
  const Dem_EventOBDReadinessGroupType ReadinessGroup;
  Std_ReturnType Result;
  <unnamed type> Dem_InitializationState.0_1;
  long unsigned int _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  Std_ReturnType _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_10 = 1;
  # DEBUG Result => Result_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.0_1 = Dem_InitializationState;
  if (Dem_InitializationState.0_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 81, 32);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (EventId_12(D) == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 81, 18);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (EventId_12(D) > 14)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 81, 16);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ReadinessGroup_14 = Dem_GbiOBDReadinessGroup (EventId_12(D));
  # DEBUG ReadinessGroup => ReadinessGroup_14
  # DEBUG BEGIN_STMT
  if (ReadinessGroup_14 <= 10)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = Dem_NvData.ReadinessEnableStatus;
  _3 = (int) ReadinessGroup_14;
  _4 = 1 << _3;
  _5 = ~_4;
  _6 = _2 & _5;
  Dem_NvData.ReadinessEnableStatus = _6;
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();

  <bb 10> :
  # DEBUG BEGIN_STMT
  Result_18 = 0;
  # DEBUG Result => Result_18

  <bb 11> :
  # Result_7 = PHI <Result_10(3), Result_10(5), Result_10(7), Result_18(10)>
  # DEBUG Result => Result_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = Result_7;
  return _22;

}


