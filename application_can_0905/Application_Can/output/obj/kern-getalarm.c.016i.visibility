
Marking local functions:


Marking externally visible functions: OS_KernGetAlarm


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_LocalGetAlarm/10 (OS_LocalGetAlarm) @06ca9a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetAlarm/0 
  Calls: 
OS_isrTableBase/9 (OS_isrTableBase) @06cdb9d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_alarmTableBase/8 (OS_alarmTableBase) @06cdb990
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetAlarm/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nAlarms/7 (OS_nAlarms) @06cdb900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetAlarm/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CanWrite/6 (OS_CanWrite) @06ca99a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetAlarm/0 
  Calls: 
OS_iecMode/5 (OS_iecMode) @06cdb7e0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetAlarm/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_GetAlarm/4 (OS_svc_GetAlarm) @06cdb798
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetAlarm/0 (addr)OS_KernGetAlarm/0 (addr)OS_KernGetAlarm/0 (addr)OS_KernGetAlarm/0 (addr)OS_KernGetAlarm/0 (addr)OS_KernGetAlarm/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/3 (OS_Error) @06ca98c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetAlarm/0 OS_KernGetAlarm/0 OS_KernGetAlarm/0 OS_KernGetAlarm/0 OS_KernGetAlarm/0 OS_KernGetAlarm/0 
  Calls: 
OS_permittedContext/2 (OS_permittedContext) @06cdb708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06cdb6c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)OS_KernGetAlarm/0 (read)
  Availability: not_available
  Varpool flags:
OS_KernGetAlarm/0 (OS_KernGetAlarm) @06ca9460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_svc_GetAlarm/4 (addr)OS_iecMode/5 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_GetAlarm/4 (addr)OS_svc_GetAlarm/4 (addr)OS_nAlarms/7 (read)OS_svc_GetAlarm/4 (addr)OS_alarmTableBase/8 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_isrTableBase/9 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_isrTableBase/9 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_GetAlarm/4 (addr)OS_svc_GetAlarm/4 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Error/3 OS_LocalGetAlarm/10 OS_Error/3 OS_Error/3 OS_Error/3 OS_CanWrite/6 OS_Error/3 OS_Error/3 
__attribute__((target ("general-regs-only")))
OS_KernGetAlarm (os_alarmid_t a, os_tick_t * out)
{
  os_errorresult_t e;
  os_paramtype_t p[3];
  const struct os_alarm_t * as;
  os_result_t r;
  os_result_t D.7476;
  const struct os_appcontext_t * iftmp.14;
  const struct os_appcontext_t * iftmp.12;
  const struct os_appcontext_t * iftmp.11;
  int iftmp.10;
  int iftmp.2;
  _Bool iftmp.1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  r = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) a;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  out.0_2 = (unsigned int) out;
  p[1] = out.0_2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = OS_kernelData.inFunction;
  if (_3 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.3_4 = OS_permittedContext;
  _5 = OS_permittedContext.3_4 + 74;
  _6 = *_5;
  _7 = (unsigned int) _6;
  _8 = _7 & 1024;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.4_9 = OS_permittedContext;
  _10 = OS_permittedContext.4_9 + 74;
  _11 = *_10;
  _12 = OS_kernelData.errorStatus.calledFrom;
  _13 = (int) _12;
  _14 = 1 << _13;
  _15 = (short unsigned int) _14;
  _16 = _11 & _15;
  if (_16 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.2 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.2 = 0;

  <bb 7> :
  iftmp.1 = iftmp.2 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.5_17 = OS_permittedContext;
  _18 = OS_permittedContext.5_17 + 74;
  _19 = *_18;
  _20 = OS_kernelData.inFunction;
  _21 = (int) _20;
  _22 = 1 << _21;
  _23 = (short unsigned int) _22;
  _24 = _19 & _23;
  iftmp.1 = _24 == 0;

  <bb 9> :
  if (iftmp.1 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetAlarm, 12, &p);
  goto <bb 46>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_iecMode.6_25 = OS_iecMode;
  if (OS_iecMode.6_25 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  _26 = OS_kernelData.inFunction;
  if (_26 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _27 = OS_kernelData.taskCurrent;
  _28 = _27->dynamic;
  _29 = BIT_FIELD_REF <MEM[(void *)_28], 16, 160>;
  _30 = _29;
  if (_30 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _31 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _32 = _31;
  if (_32 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetAlarm, 55, &p);
  goto <bb 46>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _33 = OS_CanWrite (out, 4);
  if (_33 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetAlarm, 6, &p);
  goto <bb 46>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  OS_nAlarms.7_34 = OS_nAlarms;
  if (a >= OS_nAlarms.7_34)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetAlarm, 9, &p);
  goto <bb 46>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_alarmTableBase.8_35 = OS_alarmTableBase;
  _36 = (unsigned int) a;
  _37 = _36 * 28;
  as = OS_alarmTableBase.8_35 + _37;
  # DEBUG BEGIN_STMT
  _38 = OS_kernelData.inFunction;
  if (_38 == 1)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _39 = OS_kernelData.taskCurrent;
  _40 = _39->app;
  if (_40 != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 22> :
  _41 = OS_kernelData.inFunction;
  if (_41 == 3)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  OS_isrTableBase.9_42 = OS_isrTableBase;
  _43 = OS_kernelData.isrCurrent;
  _44 = (unsigned int) _43;
  _45 = _44 * 68;
  _46 = OS_isrTableBase.9_42 + _45;
  _47 = _46->app;
  if (_47 != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 24> :
  _48 = OS_kernelData.inFunction;
  if (_48 == 10)
    goto <bb 27>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  _49 = OS_kernelData.inFunction;
  if (_49 == 8)
    goto <bb 27>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  _50 = OS_kernelData.inFunction;
  if (_50 == 9)
    goto <bb 27>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 27> :
  _51 = OS_kernelData.hookApp;
  if (_51 != 0B)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  iftmp.10 = 1;
  goto <bb 30>; [INV]

  <bb 29> :
  iftmp.10 = 0;

  <bb 30> :
  _52 = (_Bool) iftmp.10;
  if (_52 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 31> :
  _53 = OS_kernelData.inFunction;
  if (_53 == 1)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  _54 = OS_kernelData.taskCurrent;
  iftmp.11 = _54->app;
  goto <bb 42>; [INV]

  <bb 33> :
  _55 = OS_kernelData.inFunction;
  if (_55 == 3)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  OS_isrTableBase.13_56 = OS_isrTableBase;
  _57 = OS_kernelData.isrCurrent;
  _58 = (unsigned int) _57;
  _59 = _58 * 68;
  _60 = OS_isrTableBase.13_56 + _59;
  iftmp.12 = _60->app;
  goto <bb 41>; [INV]

  <bb 35> :
  _61 = OS_kernelData.inFunction;
  if (_61 == 10)
    goto <bb 38>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _62 = OS_kernelData.inFunction;
  if (_62 == 8)
    goto <bb 38>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 37> :
  _63 = OS_kernelData.inFunction;
  if (_63 == 9)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  iftmp.14 = OS_kernelData.hookApp;
  goto <bb 40>; [INV]

  <bb 39> :
  iftmp.14 = 0B;

  <bb 40> :
  iftmp.12 = iftmp.14;

  <bb 41> :
  iftmp.11 = iftmp.12;

  <bb 42> :
  _64 = iftmp.11->permissionBit;
  _65 = as->permissions;
  _66 = _64 & _65;
  if (_66 == 0)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetAlarm, 37, &p);
  goto <bb 46>; [INV]

  <bb 44> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  e = OS_LocalGetAlarm (a, as, out);
  # DEBUG BEGIN_STMT
  if (e != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetAlarm, e, &p);

  <bb 46> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7476 = r;
  p = {CLOBBER};
  return D.7476;

}


