CanTp_CancelReceive (PduIdType CanTpRxSduId)
{
  uint8 MaxCfLength;
  struct CanTp_ChannelType * ChannelPtr;
  Std_ReturnType ChannelLockedFound;
  boolean ChannelLockSuccess;
  CanTp_ChType Channel;
  Std_ReturnType ret_result;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.251_2;
  short unsigned int _3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.252_4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.253_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct CanTp_RxNSduConfigType * _10;
  int _11;
  unsigned char _12;
  short unsigned int _13;
  const struct CanTp_ConfigType * CanTp_CfgPtr.254_14;
  const struct CanTp_ConfigType * CanTp_CfgPtr.255_15;
  long unsigned int _16;
  short unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  sizetype _20;
  const struct CanTp_RxNSduConfigType * _21;
  unsigned char _22;
  unsigned char _23;
  int _24;
  short unsigned int _25;
  int _26;
  short unsigned int _27;
  int _28;
  int _29;
  int _30;
  Std_ReturnType _70;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_result_41 = 1;
  # DEBUG ret_result => ret_result_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 9, 32);
  goto <bb 27>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.251_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.251_2->NumberRxNSdus;
  if (CanTpRxSduId_43(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 9, 2);
  goto <bb 27>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelLockedFound_44 = 1;
  # DEBUG ChannelLockedFound => ChannelLockedFound_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.252_4 = CanTp_CfgPtr;
  CanTp_CfgPtr.253_5 = CanTp_CfgPtr;
  _6 = CanTp_CfgPtr.253_5->RxNSduConfigPtr;
  _7 = (unsigned int) CanTpRxSduId_43(D);
  _8 = _7 * 26;
  _9 = _6 + _8;
  _10 = CanTp_CfgPtr.252_4 + _9;
  Channel_45 = _10->Channel;
  # DEBUG Channel => Channel_45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (int) Channel_45;
  ChannelPtr_46 = &CanTp_Channel[_11];
  # DEBUG ChannelPtr => ChannelPtr_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = ChannelPtr_46->ChannelLockFlag;
  if (_12 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ChannelLockSuccess_50 = 0;
  # DEBUG ChannelLockSuccess => ChannelLockSuccess_50
  # DEBUG BEGIN_STMT
  ret_result_51 = 1;
  # DEBUG ret_result => ret_result_51
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_46->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelLockSuccess_49 = 1;
  # DEBUG ChannelLockSuccess => ChannelLockSuccess_49

  <bb 9> :
  # ret_result_31 = PHI <ret_result_51(7), ret_result_41(8)>
  # ChannelLockSuccess_35 = PHI <ChannelLockSuccess_50(7), ChannelLockSuccess_49(8)>
  # DEBUG ChannelLockSuccess => ChannelLockSuccess_35
  # DEBUG ret_result => ret_result_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ChannelLockSuccess_35 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _13 = ChannelPtr_46->NSduId;
  if (CanTpRxSduId_43(D) == _13)
    goto <bb 11>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.254_14 = CanTp_CfgPtr;
  CanTp_CfgPtr.255_15 = CanTp_CfgPtr;
  _16 = CanTp_CfgPtr.255_15->RxNSduConfigPtr;
  _17 = ChannelPtr_46->NSduId;
  _18 = (unsigned int) _17;
  _19 = _18 * 26;
  _20 = _16 + _19;
  _21 = CanTp_CfgPtr.254_14 + _20;
  _22 = _21->AddressingFormat;
  if (_22 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  MaxCfLength_56 = 7;
  # DEBUG MaxCfLength => MaxCfLength_56
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  MaxCfLength_55 = 6;
  # DEBUG MaxCfLength => MaxCfLength_55

  <bb 14> :
  # MaxCfLength_36 = PHI <MaxCfLength_56(12), MaxCfLength_55(13)>
  # DEBUG MaxCfLength => MaxCfLength_36
  # DEBUG BEGIN_STMT
  _23 = ChannelPtr_46->State;
  _24 = (int) _23;
  switch (_24) <default: <L28> [INV], case 64: <L12> [INV], case 65: <L13> [INV], case 66: <L24> [INV], case 76 ... 78: <L13> [INV], case 84 ... 86: <L25> [INV], case 194: <L20> [INV], case 204 ... 206: <L13> [INV]>

  <bb 15> :
<L12>:
  # DEBUG BEGIN_STMT
  ret_result_62 = 1;
  # DEBUG ret_result => ret_result_62
  # DEBUG BEGIN_STMT
  goto <bb 23>; [INV]

  <bb 16> :
<L13>:
  # DEBUG BEGIN_STMT
  ret_result_61 = 0;
  # DEBUG ret_result => ret_result_61
  # DEBUG BEGIN_STMT
  goto <bb 23>; [INV]

  <bb 17> :
<L20>:
  # DEBUG BEGIN_STMT
  _25 = ChannelPtr_46->TotalLength;
  _26 = (int) _25;
  _27 = ChannelPtr_46->ProcessedLength;
  _28 = (int) _27;
  _29 = _26 - _28;
  _30 = (int) MaxCfLength_36;
  if (_29 <= _30)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  ret_result_58 = 1;
  # DEBUG ret_result => ret_result_58
  goto <bb 23>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  ret_result_57 = 0;
  # DEBUG ret_result => ret_result_57
  goto <bb 23>; [INV]

  <bb 20> :
<L24>:
  # DEBUG BEGIN_STMT
  ret_result_60 = 0;
  # DEBUG ret_result => ret_result_60
  # DEBUG BEGIN_STMT
  goto <bb 23>; [INV]

  <bb 21> :
<L25>:
  # DEBUG BEGIN_STMT
  ret_result_59 = 1;
  # DEBUG ret_result => ret_result_59
  # DEBUG BEGIN_STMT
  goto <bb 23>; [INV]

  <bb 22> :
<L28>:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 9, 160);
  # DEBUG BEGIN_STMT
  ret_result_64 = 1;
  # DEBUG ret_result => ret_result_64
  # DEBUG BEGIN_STMT

  <bb 23> :
  # ret_result_32 = PHI <ret_result_62(15), ret_result_61(16), ret_result_57(19), ret_result_60(20), ret_result_59(21), ret_result_64(22), ret_result_58(18)>
  # DEBUG ret_result => ret_result_32
  # DEBUG BEGIN_STMT
  if (ret_result_32 == 0)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_46, 1, 1);
  goto <bb 26>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 9, 160);
  # DEBUG BEGIN_STMT
  ret_result_54 = 1;
  # DEBUG ret_result => ret_result_54

  <bb 26> :
  # ret_result_33 = PHI <ret_result_32(24), ret_result_54(25), ret_result_32(23)>
  # DEBUG ret_result => ret_result_33
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_46);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_46->ChannelLockFlag = 0;

  <bb 27> :
  # ret_result_34 = PHI <ret_result_41(3), ret_result_41(5), ret_result_31(9), ret_result_33(26)>
  # DEBUG ret_result => ret_result_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _70 = ret_result_34;
  return _70;

}


CanTp_PostponedTimeoutHandling (struct CanTp_ChannelType * ChannelPtr)
{
  boolean TimeoutDetected;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  short unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  TimeoutDetected_15 = 0;
  # DEBUG TimeoutDetected => TimeoutDetected_15
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_17(D)->State;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_17(D)->PostTicks;
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_17(D)->PostTicks;
  _4 = (long unsigned int) _3;
  _5 = ChannelPtr_17(D)->Ticks;
  if (_4 >= _5)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->Ticks = 0;
  # DEBUG BEGIN_STMT
  TimeoutDetected_22 = 1;
  # DEBUG TimeoutDetected => TimeoutDetected_22
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _6 = ChannelPtr_17(D)->Ticks;
  _7 = ChannelPtr_17(D)->PostTicks;
  _8 = (long unsigned int) _7;
  _9 = _6 - _8;
  ChannelPtr_17(D)->Ticks = _9;
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->PostTicks = 0;

  <bb 7> :
  # TimeoutDetected_10 = PHI <TimeoutDetected_15(3), TimeoutDetected_22(5), TimeoutDetected_15(6)>
  # DEBUG TimeoutDetected => TimeoutDetected_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();

  <bb 8> :
  # TimeoutDetected_11 = PHI <TimeoutDetected_15(2), TimeoutDetected_10(7)>
  # DEBUG TimeoutDetected => TimeoutDetected_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (TimeoutDetected_11 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  CanTp_TimeoutHandling (ChannelPtr_17(D));

  <bb 10> :
  return;

}


CanTp_HandlePostponedFlags (struct CanTp_ChannelType * ChannelPtr)
{
  boolean PostponedFlags;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PostponedFlags_7 = 0;
  # DEBUG PostponedFlags => PostponedFlags_7

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_PostponedTimeoutHandling (ChannelPtr_9(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_9(D)->PostFlag;
  _2 = (unsigned int) _1;
  _3 = _2 & 7;
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  PostponedFlags_13 = 1;
  # DEBUG PostponedFlags => PostponedFlags_13
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  PostponedFlags_12 = 0;
  # DEBUG PostponedFlags => PostponedFlags_12

  <bb 6> :
  # PostponedFlags_4 = PHI <PostponedFlags_13(4), PostponedFlags_12(5)>
  # DEBUG PostponedFlags => PostponedFlags_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PostponedFlags_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_9(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_PostTxConfirmation (ChannelPtr_9(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_9(D)->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_PostRxIndication (ChannelPtr_9(D));
  # DEBUG BEGIN_STMT
  CanTp_PostSTminCallback (ChannelPtr_9(D));

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (PostponedFlags_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  return;

}


CanTp_ProcessConfirmedCF (struct CanTp_ChannelType * ChannelPtr)
{
  const CanTp_TxChannelType Channel;
  const PduIdType NSduId;
  PduLengthType RemainingBytes;
  uint32 GPTticks;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  const struct CanTp_ConfigType * CanTp_CfgPtr.237_6;
  const struct CanTp_ConfigType * CanTp_CfgPtr.238_7;
  long unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  const struct CanTp_TxNSduConfigType * _12;
  short unsigned int _13;
  long unsigned int _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  const struct CanTp_ConfigType * CanTp_CfgPtr.239_18;
  const struct CanTp_ConfigType * CanTp_CfgPtr.240_19;
  long unsigned int _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  sizetype _24;
  const struct CanTp_TxNSduConfigType * _25;
  unsigned char _26;
  signed char _27;
  unsigned char _28;
  long unsigned int _29;
  unsigned char _30;
  long unsigned int _31;
  long unsigned int _32;
  const struct CanTp_ConfigType * CanTp_CfgPtr.241_33;
  const struct CanTp_ConfigType * CanTp_CfgPtr.242_34;
  long unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  sizetype _38;
  const struct CanTp_MfCtrConfigType * _39;
  long unsigned int _40;
  long unsigned int _41;
  unsigned char _42;
  unsigned int _43;
  unsigned int _44;
  const struct CanTp_ConfigType * CanTp_CfgPtr.243_45;
  const struct CanTp_ConfigType * CanTp_CfgPtr.244_46;
  long unsigned int _47;
  unsigned int _48;
  unsigned int _49;
  sizetype _50;
  const struct CanTp_MfCtrConfigType * _51;
  long unsigned int _52;
  long unsigned int _53;
  unsigned char _54;
  unsigned char _55;
  const struct CanTp_ConfigType * CanTp_CfgPtr.245_56;
  const struct CanTp_ConfigType * CanTp_CfgPtr.246_57;
  long unsigned int _58;
  unsigned int _59;
  unsigned int _60;
  sizetype _61;
  const struct CanTp_MfCtrConfigType * _62;
  long unsigned int _63;
  const struct CanTp_ConfigType * CanTp_CfgPtr.247_64;
  const struct CanTp_ConfigType * CanTp_CfgPtr.248_65;
  long unsigned int _66;
  unsigned int _67;
  unsigned int _68;
  sizetype _69;
  const struct CanTp_TxNSduConfigType * _70;
  short unsigned int _71;
  long unsigned int _72;
  const struct CanTp_ConfigType * CanTp_CfgPtr.249_73;
  const struct CanTp_ConfigType * CanTp_CfgPtr.250_74;
  long unsigned int _75;
  unsigned int _76;
  unsigned int _77;
  sizetype _78;
  const struct CanTp_MfCtrConfigType * _79;
  unsigned char _80;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NSduId_87 = ChannelPtr_86(D)->NSduId;
  # DEBUG NSduId => NSduId_87
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_86(D)->TotalLength;
  _2 = ChannelPtr_86(D)->ProcessedLength;
  RemainingBytes_88 = _1 - _2;
  # DEBUG RemainingBytes => RemainingBytes_88
  # DEBUG BEGIN_STMT
  if (RemainingBytes_88 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_86(D), 1, 0);
  goto <bb 17>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_86(D)->BlockSize;
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _4 = ChannelPtr_86(D)->BlockSize;
  _5 = ChannelPtr_86(D)->ProcessedBlockFrames;
  if (_4 == _5)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_86(D)->State = 228;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.237_6 = CanTp_CfgPtr;
  CanTp_CfgPtr.238_7 = CanTp_CfgPtr;
  _8 = CanTp_CfgPtr.238_7->TxNSduConfigPtr;
  _9 = (unsigned int) NSduId_87;
  _10 = _9 * 24;
  _11 = _8 + _10;
  _12 = CanTp_CfgPtr.237_6 + _11;
  _13 = _12->N_Bs;
  _14 = (long unsigned int) _13;
  ChannelPtr_86(D)->Ticks = _14;
  goto <bb 17>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = ChannelPtr_86(D)->ConnectionFlags;
  _16 = _15 & 239;
  ChannelPtr_86(D)->ConnectionFlags = _16;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = ChannelPtr_86(D)->StMin;
  if (_17 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_86(D)->State = 98;
  # DEBUG BEGIN_STMT
  CanTp_TxStateHandling (ChannelPtr_86(D), 0);
  goto <bb 17>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.239_18 = CanTp_CfgPtr;
  CanTp_CfgPtr.240_19 = CanTp_CfgPtr;
  _20 = CanTp_CfgPtr.240_19->TxNSduConfigPtr;
  _21 = ChannelPtr_86(D)->NSduId;
  _22 = (unsigned int) _21;
  _23 = _22 * 24;
  _24 = _20 + _23;
  _25 = CanTp_CfgPtr.239_18 + _24;
  Channel_92 = _25->Channel;
  # DEBUG Channel => Channel_92
  # DEBUG BEGIN_STMT
  _26 = ChannelPtr_86(D)->StMin;
  _27 = (signed char) _26;
  if (_27 >= 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _28 = ChannelPtr_86(D)->StMin;
  _29 = (long unsigned int) _28;
  GPTticks_94 = _29 * 1000000;
  # DEBUG GPTticks => GPTticks_94
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _30 = ChannelPtr_86(D)->StMin;
  _31 = (long unsigned int) _30;
  _32 = _31 * 100000;
  GPTticks_93 = _32 + 4270967296;
  # DEBUG GPTticks => GPTticks_93

  <bb 12> :
  # GPTticks_81 = PHI <GPTticks_94(10), GPTticks_93(11)>
  # DEBUG GPTticks => GPTticks_81
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.241_33 = CanTp_CfgPtr;
  CanTp_CfgPtr.242_34 = CanTp_CfgPtr;
  _35 = CanTp_CfgPtr.242_34->MfCtrConfigPtr;
  _36 = (unsigned int) Channel_92;
  _37 = _36 * 8;
  _38 = _35 + _37;
  _39 = CanTp_CfgPtr.241_33 + _38;
  _40 = _39->Resolution;
  _41 = GPTticks_81 + _40;
  GPTticks_95 = _41 + 4294967295;
  # DEBUG GPTticks => GPTticks_95
  # DEBUG BEGIN_STMT
  _42 = ChannelPtr_86(D)->ConnectionFlags;
  _43 = (unsigned int) _42;
  _44 = _43 & 1;
  if (_44 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.243_45 = CanTp_CfgPtr;
  CanTp_CfgPtr.244_46 = CanTp_CfgPtr;
  _47 = CanTp_CfgPtr.244_46->MfCtrConfigPtr;
  _48 = (unsigned int) Channel_92;
  _49 = _48 * 8;
  _50 = _47 + _49;
  _51 = CanTp_CfgPtr.243_45 + _50;
  _52 = _51->Resolution;
  _53 = GPTticks_95 / _52;
  GPTticks_97 = _53 + 1;
  # DEBUG GPTticks => GPTticks_97
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _54 = ChannelPtr_86(D)->ConnectionFlags;
  _55 = _54 & 254;
  ChannelPtr_86(D)->ConnectionFlags = _55;
  # DEBUG BEGIN_STMT
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.245_56 = CanTp_CfgPtr;
  CanTp_CfgPtr.246_57 = CanTp_CfgPtr;
  _58 = CanTp_CfgPtr.246_57->MfCtrConfigPtr;
  _59 = (unsigned int) Channel_92;
  _60 = _59 * 8;
  _61 = _58 + _60;
  _62 = CanTp_CfgPtr.245_56 + _61;
  _63 = _62->Resolution;
  GPTticks_96 = GPTticks_95 / _63;
  # DEBUG GPTticks => GPTticks_96

  <bb 15> :
  # GPTticks_82 = PHI <GPTticks_97(13), GPTticks_96(14)>
  # DEBUG GPTticks => GPTticks_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_86(D)->State = 122;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.247_64 = CanTp_CfgPtr;
  CanTp_CfgPtr.248_65 = CanTp_CfgPtr;
  _66 = CanTp_CfgPtr.248_65->TxNSduConfigPtr;
  _67 = (unsigned int) NSduId_87;
  _68 = _67 * 24;
  _69 = _66 + _68;
  _70 = CanTp_CfgPtr.247_64 + _69;
  _71 = _70->N_Cs;
  _72 = (long unsigned int) _71;
  ChannelPtr_86(D)->Ticks = _72;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.249_73 = CanTp_CfgPtr;
  CanTp_CfgPtr.250_74 = CanTp_CfgPtr;
  _75 = CanTp_CfgPtr.250_74->MfCtrConfigPtr;
  _76 = (unsigned int) Channel_92;
  _77 = _76 * 8;
  _78 = _75 + _77;
  _79 = CanTp_CfgPtr.249_73 + _78;
  _80 = _79->CallbackType;
  if (_80 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  ChannelPtr_86(D)->MfCounterTicks = GPTticks_82;

  <bb 17> :
  # DEBUG BEGIN_STMT
  return;

}


CanTp_ProcessTxPdu (struct CanTp_ChannelType * ChannelPtr, PduIdType CanTpTxNPduConfId)
{
  const uint8 DataLength_FF;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  CanTp_ChType Rx_ChannelID;
  CanTp_TxChannelType Tx_ChannelID;
  const PduIdType NSduId;
  PduIdType SearchTxNPduId;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.218_4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.219_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct CanTp_RxNSduConfigType * _10;
  const struct CanTp_ConfigType * CanTp_CfgPtr.220_11;
  const struct CanTp_ConfigType * CanTp_CfgPtr.221_12;
  long unsigned int _13;
  short unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  const struct CanTp_RxNSduConfigType * _18;
  const struct CanTp_ConfigType * CanTp_CfgPtr.222_19;
  const struct CanTp_ConfigType * CanTp_CfgPtr.223_20;
  long unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  sizetype _24;
  const struct CanTp_TxNSduConfigType * _25;
  const struct CanTp_ConfigType * CanTp_CfgPtr.224_26;
  const struct CanTp_ConfigType * CanTp_CfgPtr.225_27;
  long unsigned int _28;
  short unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  sizetype _32;
  const struct CanTp_TxNSduConfigType * _33;
  unsigned char _34;
  int _35;
  unsigned char _36;
  unsigned int _37;
  unsigned int _38;
  const struct CanTp_ConfigType * CanTp_CfgPtr.226_39;
  const struct CanTp_ConfigType * CanTp_CfgPtr.227_40;
  long unsigned int _41;
  unsigned int _42;
  unsigned int _43;
  sizetype _44;
  const struct CanTp_TxNSduConfigType * _45;
  short unsigned int _46;
  long unsigned int _47;
  unsigned char _48;
  unsigned char _49;
  const struct CanTp_ConfigType * CanTp_CfgPtr.228_50;
  const struct CanTp_ConfigType * CanTp_CfgPtr.229_51;
  long unsigned int _52;
  unsigned int _53;
  unsigned int _54;
  sizetype _55;
  const struct CanTp_RxNSduConfigType * _56;
  short unsigned int _57;
  long unsigned int _58;
  const struct CanTp_ConfigType * CanTp_CfgPtr.230_59;
  const struct CanTp_ConfigType * CanTp_CfgPtr.231_60;
  long unsigned int _61;
  short unsigned int _62;
  unsigned int _63;
  unsigned int _64;
  sizetype _65;
  unsigned char _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  const struct CanTp_ConfigType * CanTp_CfgPtr.233_74;
  const struct CanTp_ConfigType * CanTp_CfgPtr.234_75;
  long unsigned int _76;
  unsigned int _77;
  unsigned int _78;
  sizetype _79;
  const struct CanTp_RxNSduConfigType * _80;
  short unsigned int _81;
  long unsigned int _82;
  unsigned char _83;
  long unsigned int _84;
  const struct CanTp_ConfigType * CanTp_CfgPtr.235_85;
  const struct CanTp_ConfigType * CanTp_CfgPtr.236_86;
  long unsigned int _87;
  unsigned int _88;
  unsigned int _89;
  sizetype _90;
  const struct CanTp_RxNSduConfigType * _91;
  short unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  short unsigned int _95;
  short unsigned int _96;
  int iftmp.232_100;
  int iftmp.232_125;
  int iftmp.232_126;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NSduId_107 = ChannelPtr_106(D)->NSduId;
  # DEBUG NSduId => NSduId_107
  # DEBUG BEGIN_STMT
  Tx_ChannelID_108 = 255;
  # DEBUG Tx_ChannelID => Tx_ChannelID_108
  # DEBUG BEGIN_STMT
  Rx_ChannelID_109 = 255;
  # DEBUG Rx_ChannelID => Rx_ChannelID_109
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_106(D)->State;
  _2 = (unsigned int) _1;
  _3 = _2 & 96;
  if (_3 == 64)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.218_4 = CanTp_CfgPtr;
  CanTp_CfgPtr.219_5 = CanTp_CfgPtr;
  _6 = CanTp_CfgPtr.219_5->RxNSduConfigPtr;
  _7 = (unsigned int) NSduId_107;
  _8 = _7 * 26;
  _9 = _6 + _8;
  _10 = CanTp_CfgPtr.218_4 + _9;
  SearchTxNPduId_112 = _10->NPduConfIdFc;
  # DEBUG SearchTxNPduId => SearchTxNPduId_112
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.220_11 = CanTp_CfgPtr;
  CanTp_CfgPtr.221_12 = CanTp_CfgPtr;
  _13 = CanTp_CfgPtr.221_12->RxNSduConfigPtr;
  _14 = ChannelPtr_106(D)->NSduId;
  _15 = (unsigned int) _14;
  _16 = _15 * 26;
  _17 = _13 + _16;
  _18 = CanTp_CfgPtr.220_11 + _17;
  Tx_ChannelID_113 = _18->Tx_Channel;
  # DEBUG Tx_ChannelID => Tx_ChannelID_113
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.222_19 = CanTp_CfgPtr;
  CanTp_CfgPtr.223_20 = CanTp_CfgPtr;
  _21 = CanTp_CfgPtr.223_20->TxNSduConfigPtr;
  _22 = (unsigned int) NSduId_107;
  _23 = _22 * 24;
  _24 = _21 + _23;
  _25 = CanTp_CfgPtr.222_19 + _24;
  SearchTxNPduId_110 = _25->NPduConfIdxF;
  # DEBUG SearchTxNPduId => SearchTxNPduId_110
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.224_26 = CanTp_CfgPtr;
  CanTp_CfgPtr.225_27 = CanTp_CfgPtr;
  _28 = CanTp_CfgPtr.225_27->TxNSduConfigPtr;
  _29 = ChannelPtr_106(D)->NSduId;
  _30 = (unsigned int) _29;
  _31 = _30 * 24;
  _32 = _28 + _31;
  _33 = CanTp_CfgPtr.224_26 + _32;
  Rx_ChannelID_111 = _33->Rx_Channel;
  # DEBUG Rx_ChannelID => Rx_ChannelID_111

  <bb 5> :
  # SearchTxNPduId_97 = PHI <SearchTxNPduId_112(3), SearchTxNPduId_110(4)>
  # Tx_ChannelID_98 = PHI <Tx_ChannelID_113(3), Tx_ChannelID_108(4)>
  # Rx_ChannelID_99 = PHI <Rx_ChannelID_109(3), Rx_ChannelID_111(4)>
  # DEBUG Rx_ChannelID => Rx_ChannelID_99
  # DEBUG Tx_ChannelID => Tx_ChannelID_98
  # DEBUG SearchTxNPduId => SearchTxNPduId_97
  # DEBUG BEGIN_STMT
  if (CanTpTxNPduConfId_114(D) == SearchTxNPduId_97)
    goto <bb 6>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _34 = ChannelPtr_106(D)->State;
  _35 = (int) _34;
  switch (_35) <default: <L25> [INV], case 84: <L10> [INV], case 85: <L21> [INV], case 86: <L11> [INV], case 112: <L4> [INV], case 113: <L5> [INV], case 114: <L9> [INV]>

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_106(D), 1, 0);
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFlowControl (Rx_ChannelID_99);
  # DEBUG BEGIN_STMT
  goto <bb 25>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  _36 = ChannelPtr_106(D)->ConnectionFlags;
  _37 = (unsigned int) _36;
  _38 = _37 & 16;
  if (_38 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_106(D)->State = 228;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.226_39 = CanTp_CfgPtr;
  CanTp_CfgPtr.227_40 = CanTp_CfgPtr;
  _41 = CanTp_CfgPtr.227_40->TxNSduConfigPtr;
  _42 = (unsigned int) NSduId_107;
  _43 = _42 * 24;
  _44 = _41 + _43;
  _45 = CanTp_CfgPtr.226_39 + _44;
  _46 = _45->N_Bs;
  _47 = (long unsigned int) _46;
  ChannelPtr_106(D)->Ticks = _47;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_106(D)->State = 98;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _48 = ChannelPtr_106(D)->ConnectionFlags;
  _49 = _48 & 239;
  ChannelPtr_106(D)->ConnectionFlags = _49;

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFlowControl (Rx_ChannelID_99);
  # DEBUG BEGIN_STMT
  goto <bb 25>; [INV]

  <bb 12> :
<L9>:
  # DEBUG BEGIN_STMT
  CanTp_ProcessConfirmedCF (ChannelPtr_106(D));
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFlowControl (Rx_ChannelID_99);
  # DEBUG BEGIN_STMT
  goto <bb 25>; [INV]

  <bb 13> :
<L10>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_106(D)->State = 194;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.228_50 = CanTp_CfgPtr;
  CanTp_CfgPtr.229_51 = CanTp_CfgPtr;
  _52 = CanTp_CfgPtr.229_51->RxNSduConfigPtr;
  _53 = (unsigned int) NSduId_107;
  _54 = _53 * 26;
  _55 = _52 + _54;
  _56 = CanTp_CfgPtr.228_50 + _55;
  _57 = _56->N_Cr;
  _58 = (long unsigned int) _57;
  ChannelPtr_106(D)->Ticks = _58;
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFrame (Tx_ChannelID_98);
  # DEBUG BEGIN_STMT
  goto <bb 25>; [INV]

  <bb 14> :
<L11>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.230_59 = CanTp_CfgPtr;
  CanTp_CfgPtr.231_60 = CanTp_CfgPtr;
  _61 = CanTp_CfgPtr.231_60->RxNSduConfigPtr;
  _62 = ChannelPtr_106(D)->NSduId;
  _63 = (unsigned int) _62;
  _64 = _63 * 26;
  _65 = _61 + _64;
  RxNSduCfgPtr_124 = CanTp_CfgPtr.230_59 + _65;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_124
  # DEBUG BEGIN_STMT
  _66 = RxNSduCfgPtr_124->NPduLength;
  _67 = RxNSduCfgPtr_124->AddressingFormat;
  if (_67 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _68 = RxNSduCfgPtr_124->AddressingFormat;
  if (_68 != 3)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.232_125 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.232_126 = 0;

  <bb 18> :
  # iftmp.232_100 = PHI <iftmp.232_125(16), iftmp.232_126(17)>
  _69 = (unsigned char) iftmp.232_100;
  _70 = _66 - _69;
  DataLength_FF_127 = _70 + 254;
  # DEBUG DataLength_FF => DataLength_FF_127
  # DEBUG BEGIN_STMT
  _71 = ChannelPtr_106(D)->WftCounter;
  _72 = _71;
  _73 = _72 + 255;
  ChannelPtr_106(D)->WftCounter = _73;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.233_74 = CanTp_CfgPtr;
  CanTp_CfgPtr.234_75 = CanTp_CfgPtr;
  _76 = CanTp_CfgPtr.234_75->RxNSduConfigPtr;
  _77 = (unsigned int) NSduId_107;
  _78 = _77 * 26;
  _79 = _76 + _78;
  _80 = CanTp_CfgPtr.233_74 + _79;
  _81 = _80->N_Br;
  _82 = (long unsigned int) _81;
  ChannelPtr_106(D)->Ticks = _82;
  # DEBUG BEGIN_STMT
  _83 = ChannelPtr_106(D)->WftCounter;
  if (_83 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _84 = ChannelPtr_106(D)->Ticks;
  CanTp_CfgPtr.235_85 = CanTp_CfgPtr;
  CanTp_CfgPtr.236_86 = CanTp_CfgPtr;
  _87 = CanTp_CfgPtr.236_86->RxNSduConfigPtr;
  _88 = (unsigned int) NSduId_107;
  _89 = _88 * 26;
  _90 = _87 + _89;
  _91 = CanTp_CfgPtr.235_85 + _90;
  _92 = _91->N_Ar;
  _93 = (long unsigned int) _92;
  _94 = _84 + _93;
  ChannelPtr_106(D)->Ticks = _94;

  <bb 20> :
  # DEBUG BEGIN_STMT
  _95 = ChannelPtr_106(D)->ProcessedLength;
  _96 = (short unsigned int) DataLength_FF_127;
  if (_95 > _96)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_106(D)->State = 66;
  goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_106(D)->State = 65;

  <bb 23> :
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFrame (Tx_ChannelID_98);
  # DEBUG BEGIN_STMT
  goto <bb 25>; [INV]

  <bb 24> :
<L21>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_106(D), 0, 1);
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFrame (Tx_ChannelID_98);
  # DEBUG BEGIN_STMT

  <bb 25> :
<L25>:
  return;

}


CanTp_PostTxConfirmation (struct CanTp_ChannelType * ChannelPtr)
{
  boolean PendingTxConf;
  PduIdType CanTpTxNPduConfId;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  unsigned char _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PendingTxConf_10 = 0;
  # DEBUG PendingTxConf => PendingTxConf_10
  # DEBUG BEGIN_STMT
  CanTpTxNPduConfId_11 = 0;
  # DEBUG CanTpTxNPduConfId => CanTpTxNPduConfId_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_14(D)->PostFlag;
  _2 = (unsigned int) _1;
  _3 = _2 & 2;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanTpTxNPduConfId_15 = ChannelPtr_14(D)->PostTxConfNPduId;
  # DEBUG CanTpTxNPduConfId => CanTpTxNPduConfId_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = ChannelPtr_14(D)->PostFlag;
  _5 = _4 & 253;
  ChannelPtr_14(D)->PostFlag = _5;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PendingTxConf_17 = 1;
  # DEBUG PendingTxConf => PendingTxConf_17

  <bb 4> :
  # CanTpTxNPduConfId_6 = PHI <CanTpTxNPduConfId_11(2), CanTpTxNPduConfId_15(3)>
  # PendingTxConf_7 = PHI <PendingTxConf_10(2), PendingTxConf_17(3)>
  # DEBUG PendingTxConf => PendingTxConf_7
  # DEBUG CanTpTxNPduConfId => CanTpTxNPduConfId_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PendingTxConf_7 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  CanTp_ProcessTxPdu (ChannelPtr_14(D), CanTpTxNPduConfId_6);

  <bb 6> :
  return;

}


CanTp_TxConfirmation (PduIdType CanTpTxPduId)
{
  struct CanTp_ChannelType * ChannelPtrLcl;
  CanTp_ChType ChannelLcl;
  boolean PduHandled;
  boolean TxConfirmFlag;
  CanTp_ChType Channel;
  struct CanTp_ChannelType * ChannelPtr;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.207_2;
  short unsigned int _3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.208_4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.209_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct CanTp_TxNPduToTpChannelType * _10;
  const struct CanTp_ConfigType * CanTp_CfgPtr.210_11;
  const struct CanTp_ConfigType * CanTp_CfgPtr.211_12;
  long unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  sizetype _16;
  const struct CanTp_TxNPduToTpChannelType * _17;
  const struct CanTp_ConfigType * CanTp_CfgPtr.212_18;
  const struct CanTp_ConfigType * CanTp_CfgPtr.213_19;
  long unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  sizetype _23;
  const struct CanTp_TxNPduToTpChannelType * _24;
  unsigned char _25;
  int _26;
  unsigned char _27;
  int _28;
  const struct CanTp_ConfigType * CanTp_CfgPtr.214_29;
  const struct CanTp_ConfigType * CanTp_CfgPtr.215_30;
  long unsigned int _31;
  unsigned int _32;
  unsigned int _33;
  sizetype _34;
  const struct CanTp_TxNPduToTpChannelType * _35;
  const struct CanTp_ConfigType * CanTp_CfgPtr.216_36;
  const struct CanTp_ConfigType * CanTp_CfgPtr.217_37;
  long unsigned int _38;
  unsigned int _39;
  unsigned int _40;
  sizetype _41;
  const struct CanTp_TxNPduToTpChannelType * _42;
  int _43;
  unsigned char _44;
  unsigned char _45;
  unsigned int _46;
  unsigned int _47;
  unsigned char _48;
  unsigned char _49;
  unsigned int _65;
  unsigned int _66;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TxConfirmFlag_56 = 0;
  # DEBUG TxConfirmFlag => TxConfirmFlag_56
  # DEBUG BEGIN_STMT
  PduHandled_57 = 1;
  # DEBUG PduHandled => PduHandled_57
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 64, 32);
  goto <bb 19>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.207_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.207_2->NumberTxConfNPdus;
  if (CanTpTxPduId_59(D) < _3)
    goto <bb 5>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.208_4 = CanTp_CfgPtr;
  CanTp_CfgPtr.209_5 = CanTp_CfgPtr;
  _6 = CanTp_CfgPtr.209_5->TxNPduToTpChannelPtr;
  _7 = (unsigned int) CanTpTxPduId_59(D);
  _8 = _7 * 2;
  _9 = _6 + _8;
  _10 = CanTp_CfgPtr.208_4 + _9;
  Channel_61 = _10->Tx_Chan;
  # DEBUG Channel => Channel_61
  # DEBUG BEGIN_STMT
  if (Channel_61 != 255)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.210_11 = CanTp_CfgPtr;
  CanTp_CfgPtr.211_12 = CanTp_CfgPtr;
  _13 = CanTp_CfgPtr.211_12->TxNPduToTpChannelPtr;
  _14 = (unsigned int) CanTpTxPduId_59(D);
  _15 = _14 * 2;
  _16 = _13 + _15;
  _17 = CanTp_CfgPtr.210_11 + _16;
  ChannelLcl_63 = _17->Rx_Chan;
  # DEBUG ChannelLcl => ChannelLcl_63
  # DEBUG BEGIN_STMT
  if (ChannelLcl_63 != 255)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.212_18 = CanTp_CfgPtr;
  CanTp_CfgPtr.213_19 = CanTp_CfgPtr;
  _20 = CanTp_CfgPtr.213_19->TxNPduToTpChannelPtr;
  _21 = (unsigned int) CanTpTxPduId_59(D);
  _22 = _21 * 2;
  _23 = _20 + _22;
  _24 = CanTp_CfgPtr.212_18 + _23;
  _25 = _24->Rx_Chan;
  _26 = (int) _25;
  ChannelPtrLcl_64 = &CanTp_Channel[_26];
  # DEBUG ChannelPtrLcl => ChannelPtrLcl_64
  # DEBUG BEGIN_STMT
  _27 = ChannelPtrLcl_64->State;
  _28 = (int) _27;
  _65 = (unsigned int) _28;
  _66 = _65 + 4294967212;
  if (_66 <= 2)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.214_29 = CanTp_CfgPtr;
  CanTp_CfgPtr.215_30 = CanTp_CfgPtr;
  _31 = CanTp_CfgPtr.215_30->TxNPduToTpChannelPtr;
  _32 = (unsigned int) CanTpTxPduId_59(D);
  _33 = _32 * 2;
  _34 = _31 + _33;
  _35 = CanTp_CfgPtr.214_29 + _34;
  Channel_67 = _35->Rx_Chan;
  # DEBUG Channel => Channel_67
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.216_36 = CanTp_CfgPtr;
  CanTp_CfgPtr.217_37 = CanTp_CfgPtr;
  _38 = CanTp_CfgPtr.217_37->TxNPduToTpChannelPtr;
  _39 = (unsigned int) CanTpTxPduId_59(D);
  _40 = _39 * 2;
  _41 = _38 + _40;
  _42 = CanTp_CfgPtr.216_36 + _41;
  Channel_62 = _42->Rx_Chan;
  # DEBUG Channel => Channel_62

  <bb 10> :
  # Channel_50 = PHI <Channel_67(8), Channel_62(9), Channel_61(6), Channel_61(7)>
  # DEBUG Channel => Channel_50
  # DEBUG BEGIN_STMT
  _43 = (int) Channel_50;
  ChannelPtr_68 = &CanTp_Channel[_43];
  # DEBUG ChannelPtr => ChannelPtr_68
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _44 = ChannelPtr_68->ChannelLockFlag;
  if (_44 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _45 = ChannelPtr_68->State;
  _46 = (unsigned int) _45;
  _47 = _46 & 152;
  if (_47 == 16)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _48 = ChannelPtr_68->PostFlag;
  _49 = _48 | 2;
  ChannelPtr_68->PostFlag = _49;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_68->PostTxConfNPduId = CanTpTxPduId_59(D);
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_68->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TxConfirmFlag_71 = 1;
  # DEBUG TxConfirmFlag => TxConfirmFlag_71

  <bb 14> :
  # TxConfirmFlag_51 = PHI <TxConfirmFlag_56(12), TxConfirmFlag_71(13), TxConfirmFlag_56(11)>
  # DEBUG TxConfirmFlag => TxConfirmFlag_51
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (TxConfirmFlag_51 == 1)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  CanTp_ProcessTxPdu (ChannelPtr_68, CanTpTxPduId_59(D));
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_68);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_68->ChannelLockFlag = 0;
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  PduHandled_60 = 0;
  # DEBUG PduHandled => PduHandled_60

  <bb 17> :
  # PduHandled_52 = PHI <PduHandled_57(15), PduHandled_60(16), PduHandled_57(14)>
  # DEBUG PduHandled => PduHandled_52
  # DEBUG BEGIN_STMT
  if (PduHandled_52 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 64, 48);

  <bb 19> :
  # DEBUG BEGIN_STMT
  return;

}


CanTp_ProcessCopyTxData (struct CanTp_ChannelType * ChannelPtr, struct PduInfoType * PduInfoPtr)
{
  PduLengthType UL_BufferSize;
  BufReq_ReturnType Ret_CopyTxData;
  const struct CanTp_ConfigType * CanTp_CfgPtr.204_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.205_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanTp_TxNSduConfigType * _8;
  short unsigned int _9;
  short unsigned int UL_BufferSize.206_10;
  BufReq_ReturnType _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  UL_BufferSize = 0;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.204_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.205_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.205_2->TxNSduConfigPtr;
  _4 = ChannelPtr_14(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 24;
  _7 = _3 + _6;
  _8 = CanTp_CfgPtr.204_1 + _7;
  _9 = _8->IPduConfId;
  Ret_CopyTxData_17 = PduR_CanTpCopyTxData (_9, PduInfoPtr_15(D), 0B, &UL_BufferSize);
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_17
  # DEBUG BEGIN_STMT
  if (Ret_CopyTxData_17 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (Ret_CopyTxData_17 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  UL_BufferSize.206_10 = UL_BufferSize;
  ChannelPtr_14(D)->ActualBufferSize = UL_BufferSize.206_10;

  <bb 5> :
  # DEBUG BEGIN_STMT
  _19 = Ret_CopyTxData_17;
  UL_BufferSize ={v} {CLOBBER};
  return _19;

}


CanTp_RequestTxFrameData (struct CanTp_ChannelType * ChannelPtr)
{
  boolean FrameReadyToSend;
  uint8 ReqTxFrameBytes;
  const PduLengthType RemainingMsgBytes;
  struct PduInfoType PduInfo;
  BufReq_ReturnType Ret_CopyTxData;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const struct CanTp_ConfigType * CanTp_CfgPtr.202_7;
  const struct CanTp_ConfigType * CanTp_CfgPtr.203_8;
  long unsigned int _9;
  short unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  const struct CanTp_TxNSduConfigType * _14;
  unsigned char _15;
  unsigned char _16;
  short unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  unsigned char _22;
  int _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  short unsigned int _27;
  short unsigned int _28;
  short unsigned int _29;
  BufReq_ReturnType _60;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Ret_CopyTxData_38 = 1;
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_40(D)->CanIfDLC;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanTp_PreparexF (ChannelPtr_40(D));

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_40(D)->ActualBufferSize;
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  PduInfo.SduDataPtr = 0B;
  # DEBUG BEGIN_STMT
  PduInfo.SduLength = 0;
  # DEBUG BEGIN_STMT
  Ret_CopyTxData_45 = CanTp_ProcessCopyTxData (ChannelPtr_40(D), &PduInfo);
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_45
  # DEBUG BEGIN_STMT
  if (Ret_CopyTxData_45 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _3 = ChannelPtr_40(D)->ActualBufferSize;
  if (_3 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Ret_CopyTxData_46 = 2;
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_46

  <bb 8> :
  # Ret_CopyTxData_30 = PHI <Ret_CopyTxData_38(4), Ret_CopyTxData_45(5), Ret_CopyTxData_45(6), Ret_CopyTxData_46(7)>
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_30
  # DEBUG BEGIN_STMT
  _4 = ChannelPtr_40(D)->ActualBufferSize;
  if (_4 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _5 = ChannelPtr_40(D)->TotalLength;
  _6 = ChannelPtr_40(D)->ProcessedLength;
  RemainingMsgBytes_47 = _5 - _6;
  # DEBUG RemainingMsgBytes => RemainingMsgBytes_47
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.202_7 = CanTp_CfgPtr;
  CanTp_CfgPtr.203_8 = CanTp_CfgPtr;
  _9 = CanTp_CfgPtr.203_8->TxNSduConfigPtr;
  _10 = ChannelPtr_40(D)->NSduId;
  _11 = (unsigned int) _10;
  _12 = _11 * 24;
  _13 = _9 + _12;
  _14 = CanTp_CfgPtr.202_7 + _13;
  _15 = _14->LSduMaxLength;
  _16 = ChannelPtr_40(D)->CanIfDLC;
  ReqTxFrameBytes_48 = _15 - _16;
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_48
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = (short unsigned int) ReqTxFrameBytes_48;
  if (RemainingMsgBytes_47 < _17)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ReqTxFrameBytes_49 = (uint8) RemainingMsgBytes_47;
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_49

  <bb 11> :
  # ReqTxFrameBytes_32 = PHI <ReqTxFrameBytes_48(9), ReqTxFrameBytes_49(10)>
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_32
  # DEBUG BEGIN_STMT
  _18 = (short unsigned int) ReqTxFrameBytes_32;
  _19 = ChannelPtr_40(D)->ActualBufferSize;
  if (_18 > _19)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _20 = ChannelPtr_40(D)->ActualBufferSize;
  ReqTxFrameBytes_51 = (uint8) _20;
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_51
  # DEBUG BEGIN_STMT
  FrameReadyToSend_52 = 0;
  # DEBUG FrameReadyToSend => FrameReadyToSend_52
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  FrameReadyToSend_50 = 1;
  # DEBUG FrameReadyToSend => FrameReadyToSend_50

  <bb 14> :
  # ReqTxFrameBytes_33 = PHI <ReqTxFrameBytes_51(12), ReqTxFrameBytes_32(13)>
  # FrameReadyToSend_34 = PHI <FrameReadyToSend_52(12), FrameReadyToSend_50(13)>
  # DEBUG FrameReadyToSend => FrameReadyToSend_34
  # DEBUG ReqTxFrameBytes => ReqTxFrameBytes_33
  # DEBUG BEGIN_STMT
  _21 = (short unsigned int) ReqTxFrameBytes_33;
  PduInfo.SduLength = _21;
  # DEBUG BEGIN_STMT
  _22 = ChannelPtr_40(D)->CanIfDLC;
  _23 = (int) _22;
  _24 = &ChannelPtr_40(D)->CanIfData[_23];
  PduInfo.SduDataPtr = _24;
  # DEBUG BEGIN_STMT
  Ret_CopyTxData_56 = CanTp_ProcessCopyTxData (ChannelPtr_40(D), &PduInfo);
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_56
  # DEBUG BEGIN_STMT
  if (Ret_CopyTxData_56 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _25 = ChannelPtr_40(D)->CanIfDLC;
  _26 = ReqTxFrameBytes_33 + _25;
  ChannelPtr_40(D)->CanIfDLC = _26;
  # DEBUG BEGIN_STMT
  _27 = ChannelPtr_40(D)->ProcessedLength;
  _28 = (short unsigned int) ReqTxFrameBytes_33;
  _29 = _27 + _28;
  ChannelPtr_40(D)->ProcessedLength = _29;
  # DEBUG BEGIN_STMT
  if (FrameReadyToSend_34 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  Ret_CopyTxData_59 = 2;
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_59

  <bb 17> :
  # Ret_CopyTxData_31 = PHI <Ret_CopyTxData_30(8), Ret_CopyTxData_56(14), Ret_CopyTxData_56(15), Ret_CopyTxData_59(16)>
  # DEBUG Ret_CopyTxData => Ret_CopyTxData_31
  # DEBUG BEGIN_STMT
  _60 = Ret_CopyTxData_31;
  PduInfo ={v} {CLOBBER};
  return _60;

}


CanTp_TxStateHandling (struct CanTp_ChannelType * ChannelPtr, boolean CFBufferRequested)
{
  CanTp_ChStateType CurrentState;
  CanTp_ChStateType NextState;
  CanTp_ChStateType CurrentState;
  CanTp_ChStateType NextState;
  struct CanTp_ChannelType * ChPtr;
  CanTp_ChStateType ChanState;
  const PduIdType NSduId;
  struct CanTp_ChannelType * Rx_ChannelPtr;
  boolean Ret_Postponed;
  CanTp_ChType Rx_ChannelID;
  unsigned char _1;
  int _2;
  <unnamed type> _3;
  <unnamed type> RetVal_DataReq.192_4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.193_5;
  const struct CanTp_ConfigType * CanTp_CfgPtr.194_6;
  long unsigned int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  const struct CanTp_TxNSduConfigType * _12;
  int _13;
  unsigned int _14;
  unsigned int _15;
  const struct CanTp_ConfigType * CanTp_CfgPtr.195_16;
  const struct CanTp_ConfigType * CanTp_CfgPtr.196_17;
  long unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  sizetype _21;
  const struct CanTp_TxNSduConfigType * _22;
  unsigned char _23;
  const struct CanTp_ConfigType * CanTp_CfgPtr.197_24;
  const struct CanTp_ConfigType * CanTp_CfgPtr.198_25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  sizetype _29;
  const struct CanTp_TxNSduConfigType * _30;
  unsigned char _31;
  int _32;
  unsigned char _33;
  unsigned char _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  const struct CanTp_ConfigType * CanTp_CfgPtr.199_38;
  const struct CanTp_ConfigType * CanTp_CfgPtr.200_39;
  long unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  sizetype _43;
  const struct CanTp_TxNSduConfigType * _44;
  short unsigned int _45;
  long unsigned int _46;
  <unnamed type> _47;
  <unnamed type> RetVal_DataReq.201_48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Rx_ChannelID_57 = 255;
  # DEBUG Rx_ChannelID => Rx_ChannelID_57
  # DEBUG BEGIN_STMT
  Ret_Postponed_58 = 0;
  # DEBUG Ret_Postponed => Ret_Postponed_58
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_60(D)->State;
  _2 = (int) _1;
  switch (_2) <default: <L36> [INV], case 96 ... 98: <L0> [INV], case 122: <L25> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  NSduId_68 = ChannelPtr_60(D)->NSduId;
  # DEBUG NSduId => NSduId_68
  # DEBUG BEGIN_STMT
  if (CFBufferRequested_69(D) != 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = CanTp_RequestTxFrameData (ChannelPtr_60(D));
  RetVal_DataReq = _3;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RetVal_DataReq.192_4 = RetVal_DataReq;
  switch (RetVal_DataReq.192_4) <default: <L19> [INV], case 0: <L6> [INV], case 2: <L36> [INV]>

  <bb 6> :
<L6>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.193_5 = CanTp_CfgPtr;
  CanTp_CfgPtr.194_6 = CanTp_CfgPtr;
  _7 = CanTp_CfgPtr.194_6->TxNSduConfigPtr;
  _8 = ChannelPtr_60(D)->NSduId;
  _9 = (unsigned int) _8;
  _10 = _9 * 24;
  _11 = _7 + _10;
  _12 = CanTp_CfgPtr.193_5 + _11;
  Rx_ChannelID_72 = _12->Rx_Channel;
  # DEBUG Rx_ChannelID => Rx_ChannelID_72
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Ret_Postponed_73 = 0;
  # DEBUG Ret_Postponed => Ret_Postponed_73
  # DEBUG BEGIN_STMT
  if (Rx_ChannelID_72 != 255)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _13 = (int) Rx_ChannelID_72;
  ChPtr_74 = &CanTp_Channel[_13];
  # DEBUG ChPtr => ChPtr_74
  # DEBUG BEGIN_STMT
  ChanState_75 = ChPtr_74->State;
  # DEBUG ChanState => ChanState_75
  # DEBUG BEGIN_STMT
  _14 = (unsigned int) ChanState_75;
  _15 = _14 & 152;
  if (_15 == 16)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Ret_Postponed_76 = 1;
  # DEBUG Ret_Postponed => Ret_Postponed_76

  <bb 9> :
  # Ret_Postponed_52 = PHI <Ret_Postponed_73(6), Ret_Postponed_73(7), Ret_Postponed_76(8)>
  # DEBUG Ret_Postponed => Ret_Postponed_52
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.195_16 = CanTp_CfgPtr;
  CanTp_CfgPtr.196_17 = CanTp_CfgPtr;
  _18 = CanTp_CfgPtr.196_17->TxNSduConfigPtr;
  _19 = (unsigned int) NSduId_68;
  _20 = _19 * 24;
  _21 = _18 + _20;
  _22 = CanTp_CfgPtr.195_16 + _21;
  _23 = _22->PaddingActivation;
  CanTp_CfgPtr.197_24 = CanTp_CfgPtr;
  CanTp_CfgPtr.198_25 = CanTp_CfgPtr;
  _26 = CanTp_CfgPtr.198_25->TxNSduConfigPtr;
  _27 = (unsigned int) NSduId_68;
  _28 = _27 * 24;
  _29 = _26 + _28;
  _30 = CanTp_CfgPtr.197_24 + _29;
  _31 = _30->CanIdType;
  CanTp_PreparePadding (ChannelPtr_60(D), _23, _31, 0B);
  # DEBUG BEGIN_STMT
  if (Ret_Postponed_52 == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _32 = (int) Rx_ChannelID_72;
  Rx_ChannelPtr_84 = &CanTp_Channel[_32];
  # DEBUG Rx_ChannelPtr => Rx_ChannelPtr_84
  # DEBUG BEGIN_STMT
  _33 = ChannelPtr_60(D)->State;
  _34 = _33 + 160;
  if (_34 <= 1)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _35 = ChannelPtr_60(D)->Ticks;
  _36 = Rx_ChannelPtr_84->Ticks;
  if (_35 < _36)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _37 = Rx_ChannelPtr_84->Ticks;
  ChannelPtr_60(D)->Ticks = _37;

  <bb 13> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CurrentState_86 = ChannelPtr_60(D)->State;
  # DEBUG CurrentState => CurrentState_86
  # DEBUG BEGIN_STMT
  NextState_87 = CurrentState_86 & 103;
  # DEBUG NextState => NextState_87
  # DEBUG BEGIN_STMT
  NextState_88 = NextState_87 | 136;
  # DEBUG NextState => NextState_88
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_60(D)->State = NextState_88;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 22>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.199_38 = CanTp_CfgPtr;
  CanTp_CfgPtr.200_39 = CanTp_CfgPtr;
  _40 = CanTp_CfgPtr.200_39->TxNSduConfigPtr;
  _41 = (unsigned int) NSduId_68;
  _42 = _41 * 24;
  _43 = _40 + _42;
  _44 = CanTp_CfgPtr.199_38 + _43;
  _45 = _44->N_As;
  _46 = (long unsigned int) _45;
  ChannelPtr_60(D)->Ticks = _46;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CurrentState_79 = ChannelPtr_60(D)->State;
  # DEBUG CurrentState => CurrentState_79
  # DEBUG BEGIN_STMT
  NextState_80 = CurrentState_79 & 103;
  # DEBUG NextState => NextState_80
  # DEBUG BEGIN_STMT
  NextState_81 = NextState_80 | 16;
  # DEBUG NextState => NextState_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_60(D)->State = NextState_81;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TransmitFrame (ChannelPtr_60(D), 0B);
  goto <bb 22>; [INV]

  <bb 15> :
<L19>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_60(D), 1, 1);
  # DEBUG BEGIN_STMT
  goto <bb 22>; [INV]

  <bb 16> :
<L25>:
  # DEBUG BEGIN_STMT
  ChannelPtr_60(D)->State = 98;
  # DEBUG BEGIN_STMT
  _47 = CanTp_RequestTxFrameData (ChannelPtr_60(D));
  RetVal_DataReq = _47;
  # DEBUG BEGIN_STMT
  RetVal_DataReq.201_48 = RetVal_DataReq;
  switch (RetVal_DataReq.201_48) <default: <L30> [INV], case 0: <L26> [INV], case 2: <L29> [INV]>

  <bb 17> :
<L26>:
  # DEBUG BEGIN_STMT
  _49 = ChannelPtr_60(D)->MfCounterTicks;
  _50 = ChannelPtr_60(D)->Ticks;
  if (_49 > _50)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _51 = ChannelPtr_60(D)->MfCounterTicks;
  ChannelPtr_60(D)->Ticks = _51;

  <bb 19> :
  # DEBUG BEGIN_STMT
  ChannelPtr_60(D)->State = 106;
  # DEBUG BEGIN_STMT
  goto <bb 22>; [INV]

  <bb 20> :
<L29>:
  # DEBUG BEGIN_STMT
  ChannelPtr_60(D)->State = 122;
  # DEBUG BEGIN_STMT
  goto <bb 22>; [INV]

  <bb 21> :
<L30>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_60(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 22> :
<L36>:
  return;

}


CanTp_TransmitPostponedFlowControl (CanTp_ChType RxChannelID)
{
  struct CanTp_ChannelType * Rx_ChannelPtr;
  int _1;
  unsigned char _2;
  int _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Rx_ChannelPtr_5 = 0B;
  # DEBUG Rx_ChannelPtr => Rx_ChannelPtr_5
  # DEBUG BEGIN_STMT
  if (RxChannelID_6(D) != 255)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) RxChannelID_6(D);
  Rx_ChannelPtr_8 = &CanTp_Channel[_1];
  # DEBUG Rx_ChannelPtr => Rx_ChannelPtr_8
  # DEBUG BEGIN_STMT
  _2 = Rx_ChannelPtr_8->State;
  _3 = (int) _2;
  switch (_3) <default: <L7> [INV], case 204: <L2> [INV], case 205: <L3> [INV], case 206: <L1> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  Rx_ChannelPtr_8->State = 78;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (Rx_ChannelPtr_8, 49);
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  Rx_ChannelPtr_8->State = 76;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (Rx_ChannelPtr_8, 48);
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  Rx_ChannelPtr_8->State = 77;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (Rx_ChannelPtr_8, 50);
  # DEBUG BEGIN_STMT

  <bb 7> :
<L7>:
  return;

}


CanTp_TransmitPostponedFrame (CanTp_TxChannelType TxChannelID)
{
  CanTp_ChStateType CurrentState;
  CanTp_ChStateType NextState;
  struct CanTp_ChannelType * Tx_ChannelPtr;
  int _1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  unsigned char _5;
  unsigned char _6;
  const struct CanTp_ConfigType * CanTp_CfgPtr.190_7;
  const struct CanTp_ConfigType * CanTp_CfgPtr.191_8;
  long unsigned int _9;
  short unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  const struct CanTp_TxNSduConfigType * _14;
  short unsigned int _15;
  long unsigned int _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Tx_ChannelPtr_18 = 0B;
  # DEBUG Tx_ChannelPtr => Tx_ChannelPtr_18
  # DEBUG BEGIN_STMT
  if (TxChannelID_19(D) != 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) TxChannelID_19(D);
  Tx_ChannelPtr_21 = &CanTp_Channel[_1];
  # DEBUG Tx_ChannelPtr => Tx_ChannelPtr_21
  # DEBUG BEGIN_STMT
  _2 = Tx_ChannelPtr_21->State;
  _3 = (unsigned int) _2;
  _4 = _3 & 152;
  if (_4 == 136)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = Tx_ChannelPtr_21->State;
  _6 = _5 & 119;
  Tx_ChannelPtr_21->State = _6;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.190_7 = CanTp_CfgPtr;
  CanTp_CfgPtr.191_8 = CanTp_CfgPtr;
  _9 = CanTp_CfgPtr.191_8->TxNSduConfigPtr;
  _10 = Tx_ChannelPtr_21->NSduId;
  _11 = (unsigned int) _10;
  _12 = _11 * 24;
  _13 = _9 + _12;
  _14 = CanTp_CfgPtr.190_7 + _13;
  _15 = _14->N_As;
  _16 = (long unsigned int) _15;
  Tx_ChannelPtr_21->Ticks = _16;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CurrentState_24 = Tx_ChannelPtr_21->State;
  # DEBUG CurrentState => CurrentState_24
  # DEBUG BEGIN_STMT
  NextState_25 = CurrentState_24 & 103;
  # DEBUG NextState => NextState_25
  # DEBUG BEGIN_STMT
  NextState_26 = NextState_25 | 16;
  # DEBUG NextState => NextState_26
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Tx_ChannelPtr_21->State = NextState_26;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TransmitFrame (Tx_ChannelPtr_21, 0B);

  <bb 5> :
  return;

}


CanTp_TransmitFrame (struct CanTp_ChannelType * ChannelPtr, struct PduInfoType * FCBufferPtr)
{
  CanTp_ChStateType CurrentState;
  CanTp_ChStateType NextState;
  Std_ReturnType CanIfRet;
  PduIdType LSduId;
  const PduIdType NSduId;
  struct PduInfoType PduInfo;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.186_4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.187_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct CanTp_RxNSduConfigType * _10;
  const struct CanTp_ConfigType * CanTp_CfgPtr.188_11;
  const struct CanTp_ConfigType * CanTp_CfgPtr.189_12;
  long unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  sizetype _16;
  const struct CanTp_TxNSduConfigType * _17;
  uint8 * _18;
  short unsigned int _19;
  unsigned char _20;
  short unsigned int _21;
  uint8[64] * _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NSduId_28 = ChannelPtr_27(D)->NSduId;
  # DEBUG NSduId => NSduId_28
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_27(D)->State;
  _2 = (unsigned int) _1;
  _3 = _2 & 96;
  if (_3 == 64)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.186_4 = CanTp_CfgPtr;
  CanTp_CfgPtr.187_5 = CanTp_CfgPtr;
  _6 = CanTp_CfgPtr.187_5->RxNSduConfigPtr;
  _7 = (unsigned int) NSduId_28;
  _8 = _7 * 26;
  _9 = _6 + _8;
  _10 = CanTp_CfgPtr.186_4 + _9;
  LSduId_30 = _10->LSduIdFc;
  # DEBUG LSduId => LSduId_30
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.188_11 = CanTp_CfgPtr;
  CanTp_CfgPtr.189_12 = CanTp_CfgPtr;
  _13 = CanTp_CfgPtr.189_12->TxNSduConfigPtr;
  _14 = (unsigned int) NSduId_28;
  _15 = _14 * 24;
  _16 = _13 + _15;
  _17 = CanTp_CfgPtr.188_11 + _16;
  LSduId_29 = _17->LSduIdxF;
  # DEBUG LSduId => LSduId_29

  <bb 5> :
  # LSduId_23 = PHI <LSduId_30(3), LSduId_29(4)>
  # DEBUG LSduId => LSduId_23
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_31(D) != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _18 = FCBufferPtr_31(D)->SduDataPtr;
  PduInfo.SduDataPtr = _18;
  # DEBUG BEGIN_STMT
  _19 = FCBufferPtr_31(D)->SduLength;
  PduInfo.SduLength = _19;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _20 = ChannelPtr_27(D)->CanIfDLC;
  _21 = (short unsigned int) _20;
  PduInfo.SduLength = _21;
  # DEBUG BEGIN_STMT
  _22 = &ChannelPtr_27(D)->CanIfData;
  PduInfo.SduDataPtr = _22;

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CurrentState_36 = ChannelPtr_27(D)->State;
  # DEBUG CurrentState => CurrentState_36
  # DEBUG BEGIN_STMT
  NextState_37 = CurrentState_36 & 103;
  # DEBUG NextState => NextState_37
  # DEBUG BEGIN_STMT
  NextState_38 = NextState_37 | 16;
  # DEBUG NextState => NextState_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_27(D)->State = NextState_38;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanIfRet_41 = CanIf_Transmit (LSduId_23, &PduInfo);
  # DEBUG CanIfRet => CanIfRet_41
  # DEBUG BEGIN_STMT
  if (CanIfRet_41 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_31(D) == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ChannelPtr_27(D)->CanIfDLC = 0;
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_27(D), 1, 1);

  <bb 12> :
  PduInfo ={v} {CLOBBER};
  return;

}


CanTp_Transmit (PduIdType CanTpTxSduId, const struct PduInfoType * CanTpTxInfoPtr)
{
  uint8 MaxUnSegMsgLength;
  uint8 NPciSize_SF;
  Std_ReturnType ValidLength;
  Std_ReturnType ChannelFound;
  CanTp_TxChannelType Channel;
  struct CanTp_ChannelType * ChannelPtr;
  Std_ReturnType Ret;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.166_2;
  short unsigned int _3;
  short unsigned int _4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.167_5;
  const struct CanTp_ConfigType * CanTp_CfgPtr.168_6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const struct CanTp_TxNSduConfigType * _11;
  int _12;
  const struct CanTp_ConfigType * CanTp_CfgPtr.169_13;
  const struct CanTp_ConfigType * CanTp_CfgPtr.170_14;
  long unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  sizetype _18;
  const struct CanTp_TxNSduConfigType * _19;
  unsigned char _20;
  const struct CanTp_ConfigType * CanTp_CfgPtr.171_21;
  const struct CanTp_ConfigType * CanTp_CfgPtr.172_22;
  long unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  sizetype _26;
  const struct CanTp_TxNSduConfigType * _27;
  unsigned char _28;
  unsigned char _29;
  const struct CanTp_ConfigType * CanTp_CfgPtr.174_30;
  const struct CanTp_ConfigType * CanTp_CfgPtr.175_31;
  long unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  sizetype _35;
  const struct CanTp_TxNSduConfigType * _36;
  unsigned char _37;
  const struct CanTp_ConfigType * CanTp_CfgPtr.176_38;
  const struct CanTp_ConfigType * CanTp_CfgPtr.177_39;
  long unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  sizetype _43;
  const struct CanTp_TxNSduConfigType * _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  short unsigned int _49;
  short unsigned int _50;
  short unsigned int _51;
  const struct CanTp_ConfigType * CanTp_CfgPtr.178_52;
  const struct CanTp_ConfigType * CanTp_CfgPtr.179_53;
  long unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  sizetype _57;
  const struct CanTp_TxNSduConfigType * _58;
  short unsigned int _59;
  long unsigned int _60;
  unsigned char CanTp_NonIdleChannelCounter.180_61;
  unsigned char _62;
  const struct CanTp_ConfigType * CanTp_CfgPtr.181_63;
  const struct CanTp_ConfigType * CanTp_CfgPtr.182_64;
  long unsigned int _65;
  unsigned int _66;
  unsigned int _67;
  sizetype _68;
  const struct CanTp_TxNSduConfigType * _69;
  unsigned char _70;
  short unsigned int _71;
  const struct CanTp_ConfigType * CanTp_CfgPtr.183_72;
  const struct CanTp_ConfigType * CanTp_CfgPtr.184_73;
  long unsigned int _74;
  unsigned int _75;
  unsigned int _76;
  sizetype _77;
  const struct CanTp_TxNSduConfigType * _78;
  short unsigned int _79;
  long unsigned int _80;
  unsigned char CanTp_NonIdleChannelCounter.185_81;
  unsigned char _82;
  int iftmp.173_89;
  int iftmp.173_104;
  int iftmp.173_105;
  Std_ReturnType _131;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Ret_94 = 1;
  # DEBUG Ret => Ret_94
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 32);
  goto <bb 28>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.166_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.166_2->NumberTxNSdus;
  if (CanTpTxSduId_96(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 2);
  goto <bb 28>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (CanTpTxInfoPtr_97(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 3);
  goto <bb 28>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _4 = CanTpTxInfoPtr_97(D)->SduLength;
  if (_4 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 112);
  goto <bb 28>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelFound_98 = 1;
  # DEBUG ChannelFound => ChannelFound_98
  # DEBUG BEGIN_STMT
  ValidLength_99 = 1;
  # DEBUG ValidLength => ValidLength_99
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.167_5 = CanTp_CfgPtr;
  CanTp_CfgPtr.168_6 = CanTp_CfgPtr;
  _7 = CanTp_CfgPtr.168_6->TxNSduConfigPtr;
  _8 = (unsigned int) CanTpTxSduId_96(D);
  _9 = _8 * 24;
  _10 = _7 + _9;
  _11 = CanTp_CfgPtr.167_5 + _10;
  Channel_100 = _11->Channel;
  # DEBUG Channel => Channel_100
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = (int) Channel_100;
  ChannelPtr_101 = &CanTp_Channel[_12];
  # DEBUG ChannelPtr => ChannelPtr_101
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.169_13 = CanTp_CfgPtr;
  CanTp_CfgPtr.170_14 = CanTp_CfgPtr;
  _15 = CanTp_CfgPtr.170_14->TxNSduConfigPtr;
  _16 = (unsigned int) CanTpTxSduId_96(D);
  _17 = _16 * 24;
  _18 = _15 + _17;
  _19 = CanTp_CfgPtr.169_13 + _18;
  _20 = _19->LSduMaxLength;
  if (_20 > 8)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  NPciSize_SF_103 = 2;
  # DEBUG NPciSize_SF => NPciSize_SF_103
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  NPciSize_SF_102 = 1;
  # DEBUG NPciSize_SF => NPciSize_SF_102

  <bb 13> :
  # NPciSize_SF_88 = PHI <NPciSize_SF_103(11), NPciSize_SF_102(12)>
  # DEBUG NPciSize_SF => NPciSize_SF_88
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.171_21 = CanTp_CfgPtr;
  CanTp_CfgPtr.172_22 = CanTp_CfgPtr;
  _23 = CanTp_CfgPtr.172_22->TxNSduConfigPtr;
  _24 = (unsigned int) CanTpTxSduId_96(D);
  _25 = _24 * 24;
  _26 = _23 + _25;
  _27 = CanTp_CfgPtr.171_21 + _26;
  _28 = _27->LSduMaxLength;
  _29 = _28 - NPciSize_SF_88;
  CanTp_CfgPtr.174_30 = CanTp_CfgPtr;
  CanTp_CfgPtr.175_31 = CanTp_CfgPtr;
  _32 = CanTp_CfgPtr.175_31->TxNSduConfigPtr;
  _33 = (unsigned int) CanTpTxSduId_96(D);
  _34 = _33 * 24;
  _35 = _32 + _34;
  _36 = CanTp_CfgPtr.174_30 + _35;
  _37 = _36->AddressingFormat;
  if (_37 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  CanTp_CfgPtr.176_38 = CanTp_CfgPtr;
  CanTp_CfgPtr.177_39 = CanTp_CfgPtr;
  _40 = CanTp_CfgPtr.177_39->TxNSduConfigPtr;
  _41 = (unsigned int) CanTpTxSduId_96(D);
  _42 = _41 * 24;
  _43 = _40 + _42;
  _44 = CanTp_CfgPtr.176_38 + _43;
  _45 = _44->AddressingFormat;
  if (_45 != 3)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.173_104 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.173_105 = 0;

  <bb 17> :
  # iftmp.173_89 = PHI <iftmp.173_104(15), iftmp.173_105(16)>
  _46 = (unsigned char) iftmp.173_89;
  MaxUnSegMsgLength_106 = _29 - _46;
  # DEBUG MaxUnSegMsgLength => MaxUnSegMsgLength_106
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _47 = ChannelPtr_101->State;
  if (_47 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 18> :
  _48 = ChannelPtr_101->ChannelLockFlag;
  if (_48 == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_101->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _49 = CanTpTxInfoPtr_97(D)->SduLength;
  _50 = (short unsigned int) MaxUnSegMsgLength_106;
  if (_49 <= _50)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  ChannelPtr_101->NSduId = CanTpTxSduId_96(D);
  # DEBUG BEGIN_STMT
  _51 = CanTpTxInfoPtr_97(D)->SduLength;
  ChannelPtr_101->TotalLength = _51;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.178_52 = CanTp_CfgPtr;
  CanTp_CfgPtr.179_53 = CanTp_CfgPtr;
  _54 = CanTp_CfgPtr.179_53->TxNSduConfigPtr;
  _55 = (unsigned int) CanTpTxSduId_96(D);
  _56 = _55 * 24;
  _57 = _54 + _56;
  _58 = CanTp_CfgPtr.178_52 + _57;
  _59 = _58->N_Cs;
  _60 = (long unsigned int) _59;
  ChannelPtr_101->Ticks = _60;
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.180_61 = CanTp_NonIdleChannelCounter;
  _62 = CanTp_NonIdleChannelCounter.180_61 + 1;
  CanTp_NonIdleChannelCounter = _62;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_101->State = 96;
  # DEBUG BEGIN_STMT
  ValidLength_120 = 0;
  # DEBUG ValidLength => ValidLength_120
  goto <bb 23>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.181_63 = CanTp_CfgPtr;
  CanTp_CfgPtr.182_64 = CanTp_CfgPtr;
  _65 = CanTp_CfgPtr.182_64->TxNSduConfigPtr;
  _66 = (unsigned int) CanTpTxSduId_96(D);
  _67 = _66 * 24;
  _68 = _65 + _67;
  _69 = CanTp_CfgPtr.181_63 + _68;
  _70 = _69->Tatype;
  if (_70 != 1)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  ChannelPtr_101->NSduId = CanTpTxSduId_96(D);
  # DEBUG BEGIN_STMT
  _71 = CanTpTxInfoPtr_97(D)->SduLength;
  ChannelPtr_101->TotalLength = _71;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.183_72 = CanTp_CfgPtr;
  CanTp_CfgPtr.184_73 = CanTp_CfgPtr;
  _74 = CanTp_CfgPtr.184_73->TxNSduConfigPtr;
  _75 = (unsigned int) CanTpTxSduId_96(D);
  _76 = _75 * 24;
  _77 = _74 + _76;
  _78 = CanTp_CfgPtr.183_72 + _77;
  _79 = _78->N_Cs;
  _80 = (long unsigned int) _79;
  ChannelPtr_101->Ticks = _80;
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.185_81 = CanTp_NonIdleChannelCounter;
  _82 = CanTp_NonIdleChannelCounter.185_81 + 1;
  CanTp_NonIdleChannelCounter = _82;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_101->State = 97;
  # DEBUG BEGIN_STMT
  ValidLength_114 = 0;
  # DEBUG ValidLength => ValidLength_114

  <bb 23> :
  # ValidLength_86 = PHI <ValidLength_120(20), ValidLength_99(21), ValidLength_114(22)>
  # DEBUG ValidLength => ValidLength_86
  # DEBUG BEGIN_STMT
  Ret_121 = 0;
  # DEBUG Ret => Ret_121

  <bb 24> :
  # Ret_83 = PHI <Ret_94(17), Ret_94(18), Ret_121(23)>
  # ValidLength_87 = PHI <ValidLength_99(17), ValidLength_99(18), ValidLength_86(23)>
  # DEBUG ValidLength => ValidLength_87
  # DEBUG Ret => Ret_83
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Ret_83 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  if (ValidLength_87 == 1)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 3, 144);
  # DEBUG BEGIN_STMT
  Ret_124 = 1;
  # DEBUG Ret => Ret_124

  <bb 27> :
  # Ret_84 = PHI <Ret_83(25), Ret_124(26)>
  # DEBUG Ret => Ret_84
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_101);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_101->ChannelLockFlag = 0;

  <bb 28> :
  # Ret_85 = PHI <Ret_94(3), Ret_94(5), Ret_94(7), Ret_94(9), Ret_83(24), Ret_84(27)>
  # DEBUG Ret => Ret_85
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _131 = Ret_85;
  return _131;

}


CanTp_StopChannel (struct CanTp_ChannelType * ChannelPtr, CanTp_ULIndicationType ULIndication, NotifResultType Result)
{
  PduIdType NSduID;
  boolean CallPduRCanTpTxConfirmation;
  unsigned char _1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.162_5;
  const struct CanTp_ConfigType * CanTp_CfgPtr.163_6;
  long unsigned int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  const struct CanTp_RxNSduConfigType * _12;
  short unsigned int _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  const struct CanTp_ConfigType * CanTp_CfgPtr.164_18;
  const struct CanTp_ConfigType * CanTp_CfgPtr.165_19;
  long unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  sizetype _23;
  const struct CanTp_TxNSduConfigType * _24;
  short unsigned int _25;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CallPduRCanTpTxConfirmation_31 = 0;
  # DEBUG CallPduRCanTpTxConfirmation => CallPduRCanTpTxConfirmation_31
  # DEBUG BEGIN_STMT
  NSduID_34 = ChannelPtr_33(D)->NSduId;
  # DEBUG NSduID => NSduID_34
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_33(D)->State;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (ULIndication_35(D) == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_33(D)->State;
  _3 = (unsigned int) _2;
  _4 = _3 & 96;
  if (_4 == 64)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.162_5 = CanTp_CfgPtr;
  CanTp_CfgPtr.163_6 = CanTp_CfgPtr;
  _7 = CanTp_CfgPtr.163_6->RxNSduConfigPtr;
  _8 = ChannelPtr_33(D)->NSduId;
  _9 = (unsigned int) _8;
  _10 = _9 * 26;
  _11 = _7 + _10;
  _12 = CanTp_CfgPtr.162_5 + _11;
  _13 = _12->IPduId;
  PduR_CanTpRxIndication (_13, Result_37(D));
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  CallPduRCanTpTxConfirmation_36 = 1;
  # DEBUG CallPduRCanTpTxConfirmation => CallPduRCanTpTxConfirmation_36

  <bb 7> :
  # CallPduRCanTpTxConfirmation_26 = PHI <CallPduRCanTpTxConfirmation_31(2), CallPduRCanTpTxConfirmation_31(3), CallPduRCanTpTxConfirmation_31(5), CallPduRCanTpTxConfirmation_36(6)>
  # DEBUG CallPduRCanTpTxConfirmation => CallPduRCanTpTxConfirmation_26
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = ChannelPtr_33(D)->PostRxIndFrameType;
  if (_14 == 32)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = ChannelPtr_33(D)->PostFlag;
  _16 = _15 & 254;
  ChannelPtr_33(D)->PostFlag = _16;

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_InitChannelPtr (ChannelPtr_33(D));
  # DEBUG BEGIN_STMT
  if (CallPduRCanTpTxConfirmation_26 == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _17 = ChannelPtr_33(D)->ChannelLockFlag;
  if (_17 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ChannelPtr_33(D)->ChannelLockFlag = 0;

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CallPduRCanTpTxConfirmation_26 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.164_18 = CanTp_CfgPtr;
  CanTp_CfgPtr.165_19 = CanTp_CfgPtr;
  _20 = CanTp_CfgPtr.165_19->TxNSduConfigPtr;
  _21 = (unsigned int) NSduID_34;
  _22 = _21 * 24;
  _23 = _20 + _22;
  _24 = CanTp_CfgPtr.164_18 + _23;
  _25 = _24->IPduConfId;
  PduR_CanTpTxConfirmation (_25, Result_37(D));

  <bb 14> :
  return;

}


CanTp_STminTimeoutHandling (struct CanTp_ChannelType * ChannelPtr)
{
  unsigned char _1;
  unsigned char _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_5(D)->State;
  if (_1 == 106)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_5(D)->State = 98;
  # DEBUG BEGIN_STMT
  CanTp_TxStateHandling (ChannelPtr_5(D), 1);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_5(D)->State;
  if (_2 == 122)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_5(D)->State = 98;
  # DEBUG BEGIN_STMT
  CanTp_TxStateHandling (ChannelPtr_5(D), 0);

  <bb 6> :
  # DEBUG BEGIN_STMT
  return;

}


CanTp_PostSTminCallback (struct CanTp_ChannelType * ChannelPtr)
{
  boolean PendingSTminTimeout;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  unsigned char _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PendingSTminTimeout_9 = 0;
  # DEBUG PendingSTminTimeout => PendingSTminTimeout_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_12(D)->PostFlag;
  _2 = (unsigned int) _1;
  _3 = _2 & 4;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = ChannelPtr_12(D)->PostFlag;
  _5 = _4 & 251;
  ChannelPtr_12(D)->PostFlag = _5;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PendingSTminTimeout_14 = 1;
  # DEBUG PendingSTminTimeout => PendingSTminTimeout_14

  <bb 4> :
  # PendingSTminTimeout_6 = PHI <PendingSTminTimeout_9(2), PendingSTminTimeout_14(3)>
  # DEBUG PendingSTminTimeout => PendingSTminTimeout_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PendingSTminTimeout_6 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_12(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_STminTimeoutHandling (ChannelPtr_12(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_12(D)->ChannelLockFlag = 0;

  <bb 6> :
  # DEBUG BEGIN_STMT
  return;

}


CanTp_STminCallback (CanTp_ChType Channel)
{
  boolean STminCallbackFlag;
  struct CanTp_ChannelType * ChannelPtr;
  int _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  STminCallbackFlag_8 = 0;
  # DEBUG STminCallbackFlag => STminCallbackFlag_8
  # DEBUG BEGIN_STMT
  _1 = (int) Channel_9(D);
  ChannelPtr_10 = &CanTp_Channel[_1];
  # DEBUG ChannelPtr => ChannelPtr_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_10->ChannelLockFlag;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_10->PostFlag;
  _4 = _3 | 4;
  ChannelPtr_10->PostFlag = _4;
  # DEBUG BEGIN_STMT
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_10->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  STminCallbackFlag_14 = 1;
  # DEBUG STminCallbackFlag => STminCallbackFlag_14

  <bb 5> :
  # STminCallbackFlag_5 = PHI <STminCallbackFlag_8(3), STminCallbackFlag_14(4)>
  # DEBUG STminCallbackFlag => STminCallbackFlag_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (STminCallbackFlag_5 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  CanTp_STminTimeoutHandling (ChannelPtr_10);
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_10);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_10->ChannelLockFlag = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


CanTp_ValidateNAI (struct CanTp_ChannelType * ChannelPtr, PduIdType NSduId, PduIdType CanDataNAI, uint8 FrameType)
{
  PduIdType N_AI;
  boolean IgnoreMsgFlag;
  PduIdType NPduId;
  uint8 AddressingFormat;
  const struct CanTp_ConfigType * CanTp_CfgPtr.119_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.120_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct CanTp_TxNSduConfigType * _7;
  const struct CanTp_ConfigType * CanTp_CfgPtr.121_8;
  const struct CanTp_ConfigType * CanTp_CfgPtr.122_9;
  long unsigned int _10;
  const struct CanTp_ConfigType * CanTp_CfgPtr.123_11;
  const struct CanTp_ConfigType * CanTp_CfgPtr.124_12;
  long unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  sizetype _16;
  const CanTp_RxNPduLookupEntryType * _17;
  short unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  sizetype _21;
  const struct CanTp_RxNPduTableType * _22;
  const struct CanTp_ConfigType * CanTp_CfgPtr.125_23;
  const struct CanTp_ConfigType * CanTp_CfgPtr.126_24;
  long unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  sizetype _28;
  const struct CanTp_RxNSduConfigType * _29;
  const struct CanTp_ConfigType * CanTp_CfgPtr.127_30;
  const struct CanTp_ConfigType * CanTp_CfgPtr.128_31;
  long unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  sizetype _35;
  const struct CanTp_RxNSduConfigType * _36;
  unsigned char _37;
  unsigned int _38;
  unsigned int _39;
  short unsigned int _40;
  boolean _61;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IgnoreMsgFlag_46 = 0;
  # DEBUG IgnoreMsgFlag => IgnoreMsgFlag_46
  # DEBUG BEGIN_STMT
  if (FrameType_47(D) == 48)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.119_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.120_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.120_2->TxNSduConfigPtr;
  _4 = (unsigned int) NSduId_49(D);
  _5 = _4 * 24;
  _6 = _3 + _5;
  _7 = CanTp_CfgPtr.119_1 + _6;
  NPduId_52 = _7->NPduIdFc;
  # DEBUG NPduId => NPduId_52
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.121_8 = CanTp_CfgPtr;
  CanTp_CfgPtr.122_9 = CanTp_CfgPtr;
  _10 = CanTp_CfgPtr.122_9->RxNPduTablePtr;
  CanTp_CfgPtr.123_11 = CanTp_CfgPtr;
  CanTp_CfgPtr.124_12 = CanTp_CfgPtr;
  _13 = CanTp_CfgPtr.124_12->RxNPduLookupTablePtr;
  _14 = (unsigned int) NPduId_52;
  _15 = _14 * 2;
  _16 = _13 + _15;
  _17 = CanTp_CfgPtr.123_11 + _16;
  _18 = *_17;
  _19 = (unsigned int) _18;
  _20 = _19 * 8;
  _21 = _10 + _20;
  _22 = CanTp_CfgPtr.121_8 + _21;
  AddressingFormat_53 = _22->AddressingFormat;
  # DEBUG AddressingFormat => AddressingFormat_53
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.125_23 = CanTp_CfgPtr;
  CanTp_CfgPtr.126_24 = CanTp_CfgPtr;
  _25 = CanTp_CfgPtr.126_24->RxNSduConfigPtr;
  _26 = (unsigned int) NSduId_49(D);
  _27 = _26 * 26;
  _28 = _25 + _27;
  _29 = CanTp_CfgPtr.125_23 + _28;
  NPduId_50 = _29->NPduIdxF;
  # DEBUG NPduId => NPduId_50
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.127_30 = CanTp_CfgPtr;
  CanTp_CfgPtr.128_31 = CanTp_CfgPtr;
  _32 = CanTp_CfgPtr.128_31->RxNSduConfigPtr;
  _33 = (unsigned int) NSduId_49(D);
  _34 = _33 * 26;
  _35 = _32 + _34;
  _36 = CanTp_CfgPtr.127_30 + _35;
  AddressingFormat_51 = _36->AddressingFormat;
  # DEBUG AddressingFormat => AddressingFormat_51

  <bb 5> :
  # AddressingFormat_41 = PHI <AddressingFormat_53(3), AddressingFormat_51(4)>
  # NPduId_42 = PHI <NPduId_52(3), NPduId_50(4)>
  # DEBUG NPduId => NPduId_42
  # DEBUG AddressingFormat => AddressingFormat_41
  # DEBUG BEGIN_STMT
  if (FrameType_47(D) == 16)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (FrameType_47(D) == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  N_AI_54 = 0;
  # DEBUG N_AI => N_AI_54
  # DEBUG BEGIN_STMT
  if (AddressingFormat_41 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  N_AI_57 = NPduId_42;
  # DEBUG N_AI => N_AI_57
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  N_AI_56 = CanDataNAI_55(D);
  # DEBUG N_AI => N_AI_56

  <bb 10> :
  # N_AI_44 = PHI <N_AI_57(8), N_AI_56(9)>
  # DEBUG N_AI => N_AI_44
  # DEBUG BEGIN_STMT
  _37 = ChannelPtr_58(D)->ConnectionFlags;
  _38 = (unsigned int) _37;
  _39 = _38 & 2;
  if (_39 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ChannelPtr_58(D)->RxNAILock = N_AI_44;
  goto <bb 14>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _40 = ChannelPtr_58(D)->RxNAILock;
  if (N_AI_44 != _40)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  IgnoreMsgFlag_59 = 1;
  # DEBUG IgnoreMsgFlag => IgnoreMsgFlag_59

  <bb 14> :
  # IgnoreMsgFlag_43 = PHI <IgnoreMsgFlag_46(6), IgnoreMsgFlag_46(11), IgnoreMsgFlag_46(12), IgnoreMsgFlag_59(13)>
  # DEBUG IgnoreMsgFlag => IgnoreMsgFlag_43
  # DEBUG BEGIN_STMT
  _61 = IgnoreMsgFlag_43;
  return _61;

}


CanTp_ValidateFCLength (PduIdType NSduId, PduLengthType SduLength, const uint8 AddressingFormat)
{
  PduLengthType FCMinLength;
  PduLengthType NPduMaxLength;
  boolean FCValidLength;
  const struct CanTp_ConfigType * CanTp_CfgPtr.111_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.112_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct CanTp_TxNSduConfigType * _7;
  unsigned char _8;
  const struct CanTp_ConfigType * CanTp_CfgPtr.113_9;
  const struct CanTp_ConfigType * CanTp_CfgPtr.114_10;
  long unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  sizetype _14;
  const struct CanTp_TxNSduConfigType * _15;
  unsigned char _16;
  const struct CanTp_ConfigType * CanTp_CfgPtr.115_17;
  const struct CanTp_ConfigType * CanTp_CfgPtr.116_18;
  long unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  const struct CanTp_TxNSduConfigType * _23;
  unsigned char _24;
  const struct CanTp_ConfigType * CanTp_CfgPtr.117_25;
  const struct CanTp_ConfigType * CanTp_CfgPtr.118_26;
  long unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  sizetype _30;
  const struct CanTp_TxNSduConfigType * _31;
  unsigned char _32;
  unsigned char _33;
  boolean _51;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FCValidLength_38 = 0;
  # DEBUG FCValidLength => FCValidLength_38
  # DEBUG BEGIN_STMT
  NPduMaxLength_39 = 8;
  # DEBUG NPduMaxLength => NPduMaxLength_39
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.111_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.112_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.112_2->TxNSduConfigPtr;
  _4 = (unsigned int) NSduId_41(D);
  _5 = _4 * 24;
  _6 = _3 + _5;
  _7 = CanTp_CfgPtr.111_1 + _6;
  _8 = _7->PaddingActivation;
  if (_8 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (AddressingFormat_47(D) == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  FCMinLength_49 = 3;
  # DEBUG FCMinLength => FCMinLength_49
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  FCMinLength_48 = 4;
  # DEBUG FCMinLength => FCMinLength_48

  <bb 6> :
  # FCMinLength_37 = PHI <FCMinLength_49(4), FCMinLength_48(5)>
  # DEBUG FCMinLength => FCMinLength_37
  # DEBUG BEGIN_STMT
  if (SduLength_43(D) >= FCMinLength_37)
    goto <bb 7>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 7> :
  if (SduLength_43(D) <= NPduMaxLength_39)
    goto <bb 8>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  FCValidLength_50 = 1;
  # DEBUG FCValidLength => FCValidLength_50
  goto <bb 18>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.113_9 = CanTp_CfgPtr;
  CanTp_CfgPtr.114_10 = CanTp_CfgPtr;
  _11 = CanTp_CfgPtr.114_10->TxNSduConfigPtr;
  _12 = (unsigned int) NSduId_41(D);
  _13 = _12 * 24;
  _14 = _11 + _13;
  _15 = CanTp_CfgPtr.113_9 + _14;
  _16 = _15->PaddingActivation;
  if (_16 == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (SduLength_43(D) > 8)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.115_17 = CanTp_CfgPtr;
  CanTp_CfgPtr.116_18 = CanTp_CfgPtr;
  _19 = CanTp_CfgPtr.116_18->TxNSduConfigPtr;
  _20 = (unsigned int) NSduId_41(D);
  _21 = _20 * 24;
  _22 = _19 + _21;
  _23 = CanTp_CfgPtr.115_17 + _22;
  _24 = _23->LSduMaxLength;
  NPduMaxLength_45 = (PduLengthType) _24;
  # DEBUG NPduMaxLength => NPduMaxLength_45

  <bb 12> :
  # NPduMaxLength_35 = PHI <NPduMaxLength_39(10), NPduMaxLength_45(11)>
  # DEBUG NPduMaxLength => NPduMaxLength_35
  # DEBUG BEGIN_STMT
  if (SduLength_43(D) == NPduMaxLength_35)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  FCValidLength_46 = 1;
  # DEBUG FCValidLength => FCValidLength_46
  goto <bb 18>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.117_25 = CanTp_CfgPtr;
  CanTp_CfgPtr.118_26 = CanTp_CfgPtr;
  _27 = CanTp_CfgPtr.118_26->TxNSduConfigPtr;
  _28 = (unsigned int) NSduId_41(D);
  _29 = _28 * 24;
  _30 = _27 + _29;
  _31 = CanTp_CfgPtr.117_25 + _30;
  _32 = _31->CanIdType;
  _33 = _32 + 254;
  if (_33 <= 1)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  NPduMaxLength_42 = 64;
  # DEBUG NPduMaxLength => NPduMaxLength_42

  <bb 16> :
  # NPduMaxLength_36 = PHI <NPduMaxLength_39(14), NPduMaxLength_42(15)>
  # DEBUG NPduMaxLength => NPduMaxLength_36
  # DEBUG BEGIN_STMT
  if (SduLength_43(D) == NPduMaxLength_36)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  FCValidLength_44 = 1;
  # DEBUG FCValidLength => FCValidLength_44

  <bb 18> :
  # FCValidLength_34 = PHI <FCValidLength_38(7), FCValidLength_46(13), FCValidLength_38(16), FCValidLength_44(17), FCValidLength_38(6), FCValidLength_50(8), FCValidLength_38(12)>
  # DEBUG FCValidLength => FCValidLength_34
  # DEBUG BEGIN_STMT
  _51 = FCValidLength_34;
  return _51;

}


CanTp_CheckNPduLength (PduLengthType NPduLength, uint8 Padding, uint8 MaxLength)
{
  boolean ValidNPduLength;
  short unsigned int _1;
  boolean _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Padding_3(D) == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) MaxLength_16(D);
  if (NPduLength_4(D) == _1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_18 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_18
  goto <bb 27>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_17 = 0;
  # DEBUG ValidNPduLength => ValidNPduLength_17
  goto <bb 27>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) <= 7)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (Padding_3(D) == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_15 = 0;
  # DEBUG ValidNPduLength => ValidNPduLength_15
  goto <bb 27>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_14 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_14
  goto <bb 27>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 8)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_13 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_13
  goto <bb 27>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 12)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_12 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_12
  goto <bb 27>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 16)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_11 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_11
  goto <bb 27>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 20)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_10 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_10
  goto <bb 27>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 24)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_9 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_9
  goto <bb 27>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 32)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_8 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_8
  goto <bb 27>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 48)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_7 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_7
  goto <bb 27>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  if (NPduLength_4(D) == 64)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_6 = 1;
  # DEBUG ValidNPduLength => ValidNPduLength_6
  goto <bb 27>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  ValidNPduLength_5 = 0;
  # DEBUG ValidNPduLength => ValidNPduLength_5

  <bb 27> :
  # ValidNPduLength_2 = PHI <ValidNPduLength_17(5), ValidNPduLength_14(9), ValidNPduLength_13(11), ValidNPduLength_12(13), ValidNPduLength_11(15), ValidNPduLength_10(17), ValidNPduLength_9(19), ValidNPduLength_8(21), ValidNPduLength_7(23), ValidNPduLength_6(25), ValidNPduLength_5(26), ValidNPduLength_18(4), ValidNPduLength_15(8)>
  # DEBUG ValidNPduLength => ValidNPduLength_2
  # DEBUG BEGIN_STMT
  _19 = ValidNPduLength_2;
  return _19;

}


CanTp_ProcessReceivedFC (const struct PduInfoType * CanTpRxPduPtr, struct CanTp_ChannelType * ChannelPtr)
{
  uint8 DataIndex;
  const uint8 * const CanDataPtr;
  boolean ExpectedFrame;
  const uint8 StartPosition_FC_N_PCI;
  const struct CanTp_TxNSduConfigType * const TxNSduCfgPtr;
  const struct CanTp_ConfigType * CanTp_CfgPtr.157_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.158_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;
  int _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  short unsigned int _15;
  short unsigned int _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  int _20;
  unsigned char DataIndex.160_21;
  sizetype _22;
  const uint8 * _23;
  unsigned char _24;
  unsigned char DataIndex.161_25;
  sizetype _26;
  const uint8 * _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  short unsigned int _35;
  long unsigned int _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  short unsigned int _40;
  long unsigned int _41;
  int iftmp.159_43;
  int iftmp.159_50;
  int iftmp.159_51;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.157_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.158_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.158_2->TxNSduConfigPtr;
  _4 = ChannelPtr_48(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 24;
  _7 = _3 + _6;
  TxNSduCfgPtr_49 = CanTp_CfgPtr.157_1 + _7;
  # DEBUG TxNSduCfgPtr => TxNSduCfgPtr_49
  # DEBUG BEGIN_STMT
  _8 = TxNSduCfgPtr_49->AddressingFormat;
  if (_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _9 = TxNSduCfgPtr_49->AddressingFormat;
  if (_9 != 3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.159_50 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.159_51 = 0;

  <bb 6> :
  # iftmp.159_43 = PHI <iftmp.159_50(4), iftmp.159_51(5)>
  StartPosition_FC_N_PCI_52 = (const uint8) iftmp.159_43;
  # DEBUG StartPosition_FC_N_PCI => StartPosition_FC_N_PCI_52
  # DEBUG BEGIN_STMT
  _10 = ChannelPtr_48(D)->State;
  _11 = (int) _10;
  switch (_11) <default: <L33> [INV], case 113 ... 114: <L4> [INV], case 228: <L4> [INV]>

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  ExpectedFrame_53 = 0;
  # DEBUG ExpectedFrame => ExpectedFrame_53
  # DEBUG BEGIN_STMT
  _12 = ChannelPtr_48(D)->BlockSize;
  if (_12 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ExpectedFrame_57 = 0;
  # DEBUG ExpectedFrame => ExpectedFrame_57
  goto <bb 14>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _13 = ChannelPtr_48(D)->BlockSize;
  _14 = ChannelPtr_48(D)->ProcessedBlockFrames;
  if (_13 != _14)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ExpectedFrame_56 = 0;
  # DEBUG ExpectedFrame => ExpectedFrame_56
  goto <bb 14>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _15 = ChannelPtr_48(D)->TotalLength;
  _16 = ChannelPtr_48(D)->ProcessedLength;
  if (_15 == _16)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  ExpectedFrame_55 = 0;
  # DEBUG ExpectedFrame => ExpectedFrame_55
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  ExpectedFrame_54 = 1;
  # DEBUG ExpectedFrame => ExpectedFrame_54

  <bb 14> :
  # ExpectedFrame_42 = PHI <ExpectedFrame_57(8), ExpectedFrame_56(10), ExpectedFrame_55(12), ExpectedFrame_54(13)>
  # DEBUG ExpectedFrame => ExpectedFrame_42
  # DEBUG BEGIN_STMT
  if (ExpectedFrame_42 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  CanDataPtr_59 = CanTpRxPduPtr_58(D)->SduDataPtr;
  # DEBUG CanDataPtr => CanDataPtr_59
  # DEBUG BEGIN_STMT
  _17 = (sizetype) StartPosition_FC_N_PCI_52;
  _18 = CanDataPtr_59 + _17;
  _19 = *_18;
  _20 = (int) _19;
  switch (_20) <default: <L28> [INV], case 48: <L17> [INV], case 49: <L26> [INV], case 50: <L27> [INV]>

  <bb 16> :
<L17>:
  # DEBUG BEGIN_STMT
  DataIndex_62 = StartPosition_FC_N_PCI_52;
  # DEBUG DataIndex => DataIndex_62
  # DEBUG BEGIN_STMT
  ChannelPtr_48(D)->ProcessedBlockFrames = 0;
  # DEBUG BEGIN_STMT
  DataIndex.160_21 = DataIndex_62;
  DataIndex_64 = DataIndex.160_21 + 1;
  # DEBUG DataIndex => DataIndex_64
  # DEBUG BEGIN_STMT
  _22 = (sizetype) DataIndex_64;
  _23 = CanDataPtr_59 + _22;
  _24 = *_23;
  ChannelPtr_48(D)->BlockSize = _24;
  # DEBUG BEGIN_STMT
  DataIndex.161_25 = DataIndex_64;
  DataIndex_66 = DataIndex.161_25 + 1;
  # DEBUG DataIndex => DataIndex_66
  # DEBUG BEGIN_STMT
  _26 = (sizetype) DataIndex_66;
  _27 = CanDataPtr_59 + _26;
  _28 = *_27;
  ChannelPtr_48(D)->StMin = _28;
  # DEBUG BEGIN_STMT
  _29 = ChannelPtr_48(D)->StMin;
  _30 = _29 + 128;
  if (_30 <= 112)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _31 = ChannelPtr_48(D)->StMin;
  if (_31 > 249)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  ChannelPtr_48(D)->StMin = 127;

  <bb 19> :
  # DEBUG BEGIN_STMT
  _32 = ChannelPtr_48(D)->StMin;
  if (_32 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _33 = ChannelPtr_48(D)->ConnectionFlags;
  _34 = _33 | 1;
  ChannelPtr_48(D)->ConnectionFlags = _34;

  <bb 21> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _35 = TxNSduCfgPtr_49->N_Cs;
  _36 = (long unsigned int) _35;
  ChannelPtr_48(D)->Ticks = _36;
  # DEBUG BEGIN_STMT
  _37 = ChannelPtr_48(D)->State;
  if (_37 == 228)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_48(D)->State = 98;
  # DEBUG BEGIN_STMT
  CanTp_TxStateHandling (ChannelPtr_48(D), 0);
  goto <bb 27>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = ChannelPtr_48(D)->ConnectionFlags;
  _39 = _38 | 16;
  ChannelPtr_48(D)->ConnectionFlags = _39;
  goto <bb 27>; [INV]

  <bb 24> :
<L26>:
  # DEBUG BEGIN_STMT
  _40 = TxNSduCfgPtr_49->N_Bs;
  _41 = (long unsigned int) _40;
  ChannelPtr_48(D)->Ticks = _41;
  # DEBUG BEGIN_STMT
  goto <bb 27>; [INV]

  <bb 25> :
<L27>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_48(D), 1, 10);
  # DEBUG BEGIN_STMT
  goto <bb 27>; [INV]

  <bb 26> :
<L28>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_48(D), 1, 6);
  # DEBUG BEGIN_STMT

  <bb 27> :
<L33>:
  return;

}


CanTp_ProcessReceivedLastCF (const struct PduInfoType * CanTpRxPduPtr, struct CanTp_ChannelType * ChannelPtr, uint8 DataLength)
{
  uint8 * const NSduDataPtr;
  BufReq_ReturnType Ret_CopyRxData;
  const uint8 MinReqSduLength;
  const uint8 StartPosition_CF_N_PCI;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  boolean ValidFrameLength;
  const struct CanTp_ConfigType * CanTp_CfgPtr.143_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.144_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  uint8 * _17;
  sizetype _18;
  sizetype _19;
  unsigned char _20;
  unsigned char _21;
  int iftmp.145_23;
  int iftmp.145_30;
  int iftmp.145_31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.143_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.144_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.144_2->RxNSduConfigPtr;
  _4 = ChannelPtr_28(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 26;
  _7 = _3 + _6;
  RxNSduCfgPtr_29 = CanTp_CfgPtr.143_1 + _7;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_29
  # DEBUG BEGIN_STMT
  _8 = RxNSduCfgPtr_29->AddressingFormat;
  if (_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _9 = RxNSduCfgPtr_29->AddressingFormat;
  if (_9 != 3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.145_30 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.145_31 = 0;

  <bb 6> :
  # iftmp.145_23 = PHI <iftmp.145_30(4), iftmp.145_31(5)>
  StartPosition_CF_N_PCI_32 = (const uint8) iftmp.145_23;
  # DEBUG StartPosition_CF_N_PCI => StartPosition_CF_N_PCI_32
  # DEBUG BEGIN_STMT
  _10 = StartPosition_CF_N_PCI_32 + DataLength_33(D);
  MinReqSduLength_34 = _10 + 1;
  # DEBUG MinReqSduLength => MinReqSduLength_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = CanTpRxPduPtr_35(D)->SduLength;
  _12 = (short unsigned int) MinReqSduLength_34;
  if (_11 < _12)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_39 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_39
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _13 = CanTpRxPduPtr_35(D)->SduLength;
  _14 = RxNSduCfgPtr_29->PaddingActivation;
  _15 = RxNSduCfgPtr_29->NPduLength;
  _16 = CanTp_CheckNPduLength (_13, _14, _15);
  if (_16 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_38 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_38
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_37 = 1;
  # DEBUG ValidFrameLength => ValidFrameLength_37

  <bb 11> :
  # ValidFrameLength_22 = PHI <ValidFrameLength_39(7), ValidFrameLength_38(9), ValidFrameLength_37(10)>
  # DEBUG ValidFrameLength => ValidFrameLength_22
  # DEBUG BEGIN_STMT
  if (ValidFrameLength_22 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = CanTpRxPduPtr_35(D)->SduDataPtr;
  _18 = (sizetype) StartPosition_CF_N_PCI_32;
  _19 = _18 + 1;
  NSduDataPtr_41 = _17 + _19;
  # DEBUG NSduDataPtr => NSduDataPtr_41
  # DEBUG BEGIN_STMT
  Ret_CopyRxData_43 = CanTp_RxProcessData (ChannelPtr_28(D), NSduDataPtr_41, DataLength_33(D));
  # DEBUG Ret_CopyRxData => Ret_CopyRxData_43
  # DEBUG BEGIN_STMT
  if (Ret_CopyRxData_43 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_28(D), 1, 0);
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_28(D), 1, 1);

  <bb 15> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = ChannelPtr_28(D)->ConnectionFlags;
  _21 = _20 & 251;
  ChannelPtr_28(D)->ConnectionFlags = _21;
  # DEBUG BEGIN_STMT
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 17> :
  return;

}


CanTp_ProcessReceivedIntermediateCF (const struct PduInfoType * CanTpRxPduPtr, struct CanTp_ChannelType * ChannelPtr)
{
  boolean ContinueWithNextBlock;
  const uint8 DataLength;
  uint8 * const NSduDataPtr;
  const uint8 StartPosition_CF_N_PCI;
  BufReq_ReturnType Ret_CopyRxData;
  const uint8 DataLen;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  const struct CanTp_ConfigType * CanTp_CfgPtr.146_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.147_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  short unsigned int _8;
  short unsigned int _9;
  unsigned char _10;
  unsigned char _11;
  uint8 * _12;
  sizetype _13;
  sizetype _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  short unsigned int _21;
  short unsigned int _22;
  short unsigned int _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  const struct CanTp_ConfigType * CanTp_CfgPtr.149_30;
  const struct CanTp_ConfigType * CanTp_CfgPtr.150_31;
  long unsigned int _32;
  short unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  sizetype _36;
  const struct CanTp_RxNSduConfigType * _37;
  short unsigned int _38;
  long unsigned int _39;
  const struct CanTp_ConfigType * CanTp_CfgPtr.151_40;
  const struct CanTp_ConfigType * CanTp_CfgPtr.152_41;
  long unsigned int _42;
  short unsigned int _43;
  unsigned int _44;
  unsigned int _45;
  sizetype _46;
  const struct CanTp_RxNSduConfigType * _47;
  short unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  const struct CanTp_ConfigType * CanTp_CfgPtr.153_51;
  const struct CanTp_ConfigType * CanTp_CfgPtr.154_52;
  long unsigned int _53;
  short unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  sizetype _57;
  const struct CanTp_RxNSduConfigType * _58;
  unsigned char _59;
  const struct CanTp_ConfigType * CanTp_CfgPtr.155_60;
  const struct CanTp_ConfigType * CanTp_CfgPtr.156_61;
  long unsigned int _62;
  short unsigned int _63;
  unsigned int _64;
  unsigned int _65;
  sizetype _66;
  const struct CanTp_RxNSduConfigType * _67;
  short unsigned int _68;
  long unsigned int _69;
  int iftmp.148_70;
  int iftmp.148_79;
  int iftmp.148_80;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.146_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.147_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.147_2->RxNSduConfigPtr;
  _4 = ChannelPtr_74(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 26;
  _7 = _3 + _6;
  RxNSduCfgPtr_75 = CanTp_CfgPtr.146_1 + _7;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_75
  # DEBUG BEGIN_STMT
  DataLen_76 = ChannelPtr_74(D)->ReceivedSduLength;
  # DEBUG DataLen => DataLen_76
  # DEBUG BEGIN_STMT
  _8 = CanTpRxPduPtr_77(D)->SduLength;
  _9 = (short unsigned int) DataLen_76;
  if (_8 == _9)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = RxNSduCfgPtr_75->AddressingFormat;
  if (_10 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _11 = RxNSduCfgPtr_75->AddressingFormat;
  if (_11 != 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.148_79 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.148_80 = 0;

  <bb 7> :
  # iftmp.148_70 = PHI <iftmp.148_79(5), iftmp.148_80(6)>
  StartPosition_CF_N_PCI_81 = (const uint8) iftmp.148_70;
  # DEBUG StartPosition_CF_N_PCI => StartPosition_CF_N_PCI_81
  # DEBUG BEGIN_STMT
  _12 = CanTpRxPduPtr_77(D)->SduDataPtr;
  _13 = (sizetype) StartPosition_CF_N_PCI_81;
  _14 = _13 + 1;
  NSduDataPtr_82 = _12 + _14;
  # DEBUG NSduDataPtr => NSduDataPtr_82
  # DEBUG BEGIN_STMT
  _15 = DataLen_76 - StartPosition_CF_N_PCI_81;
  DataLength_83 = _15 + 255;
  # DEBUG DataLength => DataLength_83
  # DEBUG BEGIN_STMT
  _16 = ChannelPtr_74(D)->SequenceNumber;
  _17 = _16;
  _18 = _17 + 1;
  ChannelPtr_74(D)->SequenceNumber = _18;
  # DEBUG BEGIN_STMT
  _19 = ChannelPtr_74(D)->SequenceNumber;
  _20 = _19 & 15;
  ChannelPtr_74(D)->SequenceNumber = _20;
  # DEBUG BEGIN_STMT
  Ret_CopyRxData_87 = CanTp_RxProcessData (ChannelPtr_74(D), NSduDataPtr_82, DataLength_83);
  # DEBUG Ret_CopyRxData => Ret_CopyRxData_87
  # DEBUG BEGIN_STMT
  if (Ret_CopyRxData_87 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _21 = ChannelPtr_74(D)->ProcessedLength;
  _22 = (short unsigned int) DataLength_83;
  _23 = _21 + _22;
  ChannelPtr_74(D)->ProcessedLength = _23;
  # DEBUG BEGIN_STMT
  _24 = ChannelPtr_74(D)->BlockSize;
  if (_24 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ChannelPtr_74(D)->ProcessedBlockFrames = 15;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _25 = ChannelPtr_74(D)->ProcessedBlockFrames;
  _26 = _25;
  _27 = _26 + 1;
  ChannelPtr_74(D)->ProcessedBlockFrames = _27;

  <bb 11> :
  # DEBUG BEGIN_STMT
  _28 = ChannelPtr_74(D)->ProcessedBlockFrames;
  _29 = ChannelPtr_74(D)->BlockSize;
  if (_28 == _29)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_74(D)->ProcessedBlockFrames = 0;
  # DEBUG BEGIN_STMT
  ContinueWithNextBlock_96 = CanTp_VerifyBlockSize (ChannelPtr_74(D));
  # DEBUG ContinueWithNextBlock => ContinueWithNextBlock_96
  # DEBUG BEGIN_STMT
  if (ContinueWithNextBlock_96 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_74(D), 4);
  goto <bb 18>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.149_30 = CanTp_CfgPtr;
  CanTp_CfgPtr.150_31 = CanTp_CfgPtr;
  _32 = CanTp_CfgPtr.150_31->RxNSduConfigPtr;
  _33 = ChannelPtr_74(D)->NSduId;
  _34 = (unsigned int) _33;
  _35 = _34 * 26;
  _36 = _32 + _35;
  _37 = CanTp_CfgPtr.149_30 + _36;
  _38 = _37->N_Br;
  _39 = (long unsigned int) _38;
  CanTp_CfgPtr.151_40 = CanTp_CfgPtr;
  CanTp_CfgPtr.152_41 = CanTp_CfgPtr;
  _42 = CanTp_CfgPtr.152_41->RxNSduConfigPtr;
  _43 = ChannelPtr_74(D)->NSduId;
  _44 = (unsigned int) _43;
  _45 = _44 * 26;
  _46 = _42 + _45;
  _47 = CanTp_CfgPtr.151_40 + _46;
  _48 = _47->N_Ar;
  _49 = (long unsigned int) _48;
  _50 = _39 + _49;
  ChannelPtr_74(D)->Ticks = _50;
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.153_51 = CanTp_CfgPtr;
  CanTp_CfgPtr.154_52 = CanTp_CfgPtr;
  _53 = CanTp_CfgPtr.154_52->RxNSduConfigPtr;
  _54 = ChannelPtr_74(D)->NSduId;
  _55 = (unsigned int) _54;
  _56 = _55 * 26;
  _57 = _53 + _56;
  _58 = CanTp_CfgPtr.153_51 + _57;
  _59 = _58->WftMax;
  ChannelPtr_74(D)->WftCounter = _59;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_74(D)->State = 66;
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_74(D));
  goto <bb 18>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.155_60 = CanTp_CfgPtr;
  CanTp_CfgPtr.156_61 = CanTp_CfgPtr;
  _62 = CanTp_CfgPtr.156_61->RxNSduConfigPtr;
  _63 = ChannelPtr_74(D)->NSduId;
  _64 = (unsigned int) _63;
  _65 = _64 * 26;
  _66 = _62 + _65;
  _67 = CanTp_CfgPtr.155_60 + _66;
  _68 = _67->N_Cr;
  _69 = (long unsigned int) _68;
  ChannelPtr_74(D)->Ticks = _69;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_74(D)->State = 194;
  goto <bb 18>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_74(D), 1, 1);
  goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 18> :
  return;

}


CanTp_ProcessReceivedCF (const struct PduInfoType * CanTpRxPduPtr, struct CanTp_ChannelType * ChannelPtr)
{
  const uint8 SingleFrameLength;
  const uint8 DataLen;
  const PduLengthType Delta;
  const uint8 StartPosition_CF_N_PCI;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  unsigned char _1;
  unsigned char _2;
  const struct CanTp_ConfigType * CanTp_CfgPtr.140_3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.141_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  unsigned int _13;
  uint8 * _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  unsigned int _18;
  unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  unsigned char _22;
  short unsigned int _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  int iftmp.142_27;
  int iftmp.142_32;
  int iftmp.142_33;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_30(D)->State;
  if (_1 == 194)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _2 = ChannelPtr_30(D)->State;
  if (_2 == 84)
    goto <bb 4>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.140_3 = CanTp_CfgPtr;
  CanTp_CfgPtr.141_4 = CanTp_CfgPtr;
  _5 = CanTp_CfgPtr.141_4->RxNSduConfigPtr;
  _6 = ChannelPtr_30(D)->NSduId;
  _7 = (unsigned int) _6;
  _8 = _7 * 26;
  _9 = _5 + _8;
  RxNSduCfgPtr_31 = CanTp_CfgPtr.140_3 + _9;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_31
  # DEBUG BEGIN_STMT
  _10 = RxNSduCfgPtr_31->AddressingFormat;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _11 = RxNSduCfgPtr_31->AddressingFormat;
  if (_11 != 3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.142_32 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.142_33 = 0;

  <bb 8> :
  # iftmp.142_27 = PHI <iftmp.142_32(6), iftmp.142_33(7)>
  StartPosition_CF_N_PCI_34 = (const uint8) iftmp.142_27;
  # DEBUG StartPosition_CF_N_PCI => StartPosition_CF_N_PCI_34
  # DEBUG BEGIN_STMT
  _12 = ChannelPtr_30(D)->SequenceNumber;
  _13 = (unsigned int) _12;
  _14 = CanTpRxPduPtr_35(D)->SduDataPtr;
  _15 = (sizetype) StartPosition_CF_N_PCI_34;
  _16 = _14 + _15;
  _17 = *_16;
  _18 = (unsigned int) _17;
  _19 = _18 & 15;
  if (_13 != _19)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_30(D), 1, 5);
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _20 = ChannelPtr_30(D)->TotalLength;
  _21 = ChannelPtr_30(D)->ProcessedLength;
  Delta_36 = _20 - _21;
  # DEBUG Delta => Delta_36
  # DEBUG BEGIN_STMT
  DataLen_37 = ChannelPtr_30(D)->ReceivedSduLength;
  # DEBUG DataLen => DataLen_37
  # DEBUG BEGIN_STMT
  _22 = DataLen_37 - StartPosition_CF_N_PCI_34;
  SingleFrameLength_38 = _22 + 255;
  # DEBUG SingleFrameLength => SingleFrameLength_38
  # DEBUG BEGIN_STMT
  _23 = (short unsigned int) SingleFrameLength_38;
  if (Delta_36 <= _23)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _24 = ChannelPtr_30(D)->ConnectionFlags;
  _25 = _24 | 4;
  ChannelPtr_30(D)->ConnectionFlags = _25;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = (unsigned char) Delta_36;
  CanTp_ProcessReceivedLastCF (CanTpRxPduPtr_35(D), ChannelPtr_30(D), _26);
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  CanTp_ProcessReceivedIntermediateCF (CanTpRxPduPtr_35(D), ChannelPtr_30(D));

  <bb 13> :
  return;

}


CanTp_ProcessReceivedFF (const struct PduInfoType * CanTpRxPduPtr, struct CanTp_ChannelType * ChannelPtr)
{
  Std_ReturnType BSCalc_Ok;
  BufReq_ReturnType Ret_ReqRxBuffer;
  uint8 * const NSduDataPtr;
  const uint8 DataLength_FF;
  Std_ReturnType Ret;
  const uint8 StartPosition_FF_N_PCI_Length;
  const PduLengthType PduLenghTypeMax;
  const PduLengthType PduLenghTypeMaxMask;
  uint32 MessageLength_BigData;
  uint8 MaxUnSegMsgLength;
  uint8 NPciSize_SF;
  const uint8 StartPosition_FF_N_PCI;
  uint8 FirstFrame_NPCI_Size;
  uint16 MessageLength;
  boolean ValidFirstFrame;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  const struct CanTp_ConfigType * CanTp_CfgPtr.136_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.137_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _8;
  unsigned char _9;
  short unsigned int _10;
  short unsigned int _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  uint8 * _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  uint8 * _22;
  sizetype _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  short unsigned int _27;
  short unsigned int _28;
  int _29;
  unsigned char _30;
  uint8 * _31;
  sizetype _32;
  uint8 * _33;
  unsigned char _34;
  long unsigned int _35;
  long unsigned int _36;
  uint8 * _37;
  sizetype _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;
  long unsigned int _42;
  long unsigned int _43;
  uint8 * _44;
  sizetype _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;
  long unsigned int _49;
  long unsigned int _50;
  uint8 * _51;
  sizetype _52;
  sizetype _53;
  uint8 * _54;
  unsigned char _55;
  long unsigned int _56;
  long unsigned int _57;
  short unsigned int _58;
  short unsigned int _59;
  short unsigned int _60;
  short unsigned int _61;
  unsigned char _62;
  unsigned char _63;
  uint8 * _64;
  int _65;
  int _66;
  int _67;
  sizetype _68;
  unsigned char _69;
  short unsigned int _70;
  long unsigned int _71;
  short unsigned int _72;
  long unsigned int _73;
  long unsigned int _74;
  unsigned char _75;
  short unsigned int _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  short unsigned int _80;
  uint8 * _81;
  uint8[64] * _82;
  long unsigned int _83;
  unsigned char _84;
  unsigned char _85;
  unsigned char _86;
  int iftmp.138_92;
  int iftmp.139_93;
  int iftmp.138_101;
  int iftmp.138_102;
  int iftmp.139_107;
  int iftmp.139_108;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.136_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.137_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.137_2->RxNSduConfigPtr;
  _4 = ChannelPtr_98(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 26;
  _7 = _3 + _6;
  RxNSduCfgPtr_99 = CanTp_CfgPtr.136_1 + _7;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_99
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  FirstFrame_NPCI_Size_100 = 2;
  # DEBUG FirstFrame_NPCI_Size => FirstFrame_NPCI_Size_100
  # DEBUG BEGIN_STMT
  _8 = RxNSduCfgPtr_99->AddressingFormat;
  if (_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _9 = RxNSduCfgPtr_99->AddressingFormat;
  if (_9 != 3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.138_101 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.138_102 = 0;

  <bb 6> :
  # iftmp.138_92 = PHI <iftmp.138_101(4), iftmp.138_102(5)>
  StartPosition_FF_N_PCI_103 = (const uint8) iftmp.138_92;
  # DEBUG StartPosition_FF_N_PCI => StartPosition_FF_N_PCI_103
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = CanTpRxPduPtr_104(D)->SduLength;
  if (_10 > 8)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NPciSize_SF_106 = 2;
  # DEBUG NPciSize_SF => NPciSize_SF_106
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NPciSize_SF_105 = 1;
  # DEBUG NPciSize_SF => NPciSize_SF_105

  <bb 9> :
  # NPciSize_SF_91 = PHI <NPciSize_SF_106(7), NPciSize_SF_105(8)>
  # DEBUG NPciSize_SF => NPciSize_SF_91
  # DEBUG BEGIN_STMT
  _11 = CanTpRxPduPtr_104(D)->SduLength;
  _12 = (unsigned char) _11;
  _13 = _12 - NPciSize_SF_91;
  _14 = RxNSduCfgPtr_99->AddressingFormat;
  if (_14 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _15 = RxNSduCfgPtr_99->AddressingFormat;
  if (_15 != 3)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.139_107 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.139_108 = 0;

  <bb 13> :
  # iftmp.139_93 = PHI <iftmp.139_107(11), iftmp.139_108(12)>
  _16 = (unsigned char) iftmp.139_93;
  MaxUnSegMsgLength_109 = _13 - _16;
  # DEBUG MaxUnSegMsgLength => MaxUnSegMsgLength_109
  # DEBUG BEGIN_STMT
  _17 = CanTpRxPduPtr_104(D)->SduDataPtr;
  _18 = (sizetype) StartPosition_FF_N_PCI_103;
  _19 = _17 + _18;
  _20 = *_19;
  _21 = (short unsigned int) _20;
  MessageLength_110 = _21 & 15;
  # DEBUG MessageLength => MessageLength_110
  # DEBUG BEGIN_STMT
  MessageLength_111 = MessageLength_110 << 8;
  # DEBUG MessageLength => MessageLength_111
  # DEBUG BEGIN_STMT
  _22 = CanTpRxPduPtr_104(D)->SduDataPtr;
  _23 = (sizetype) StartPosition_FF_N_PCI_103;
  _24 = _23 + 1;
  _25 = _22 + _24;
  _26 = *_25;
  _27 = (short unsigned int) _26;
  MessageLength_112 = MessageLength_111 | _27;
  # DEBUG MessageLength => MessageLength_112
  # DEBUG BEGIN_STMT
  _28 = CanTpRxPduPtr_104(D)->SduLength;
  _29 = (int) _28;
  switch (_29) <default: <L30> [INV], case 8: <L11> [INV], case 12: <L11> [INV], case 16: <L11> [INV], case 20: <L11> [INV], case 24: <L11> [INV], case 32: <L11> [INV], case 48: <L11> [INV], case 64: <L11> [INV]>

  <bb 14> :
<L11>:
  # DEBUG BEGIN_STMT
  _30 = RxNSduCfgPtr_99->Tatype;
  if (_30 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  ValidFirstFrame_127 = 0;
  # DEBUG ValidFirstFrame => ValidFirstFrame_127
  goto <bb 21>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  if (MessageLength_112 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  MessageLength_BigData_115 = 0;
  # DEBUG MessageLength_BigData => MessageLength_BigData_115
  # DEBUG BEGIN_STMT
  PduLenghTypeMaxMask_116 = 0;
  # DEBUG PduLenghTypeMaxMask => PduLenghTypeMaxMask_116
  # DEBUG BEGIN_STMT
  PduLenghTypeMax_117 = 65535;
  # DEBUG PduLenghTypeMax => PduLenghTypeMax_117
  # DEBUG BEGIN_STMT
  StartPosition_FF_N_PCI_Length_118 = StartPosition_FF_N_PCI_103 + 2;
  # DEBUG StartPosition_FF_N_PCI_Length => StartPosition_FF_N_PCI_Length_118
  # DEBUG BEGIN_STMT
  _31 = CanTpRxPduPtr_104(D)->SduDataPtr;
  _32 = (sizetype) StartPosition_FF_N_PCI_Length_118;
  _33 = _31 + _32;
  _34 = *_33;
  _35 = (long unsigned int) _34;
  _36 = _35 << 24;
  MessageLength_BigData_119 = MessageLength_BigData_115 | _36;
  # DEBUG MessageLength_BigData => MessageLength_BigData_119
  # DEBUG BEGIN_STMT
  _37 = CanTpRxPduPtr_104(D)->SduDataPtr;
  _38 = (sizetype) StartPosition_FF_N_PCI_Length_118;
  _39 = _38 + 1;
  _40 = _37 + _39;
  _41 = *_40;
  _42 = (long unsigned int) _41;
  _43 = _42 << 16;
  MessageLength_BigData_120 = MessageLength_BigData_119 | _43;
  # DEBUG MessageLength_BigData => MessageLength_BigData_120
  # DEBUG BEGIN_STMT
  _44 = CanTpRxPduPtr_104(D)->SduDataPtr;
  _45 = (sizetype) StartPosition_FF_N_PCI_Length_118;
  _46 = _45 + 2;
  _47 = _44 + _46;
  _48 = *_47;
  _49 = (long unsigned int) _48;
  _50 = _49 << 8;
  MessageLength_BigData_121 = MessageLength_BigData_120 | _50;
  # DEBUG MessageLength_BigData => MessageLength_BigData_121
  # DEBUG BEGIN_STMT
  _51 = CanTpRxPduPtr_104(D)->SduDataPtr;
  _52 = (sizetype) StartPosition_FF_N_PCI_Length_118;
  _53 = _52 + 3;
  _54 = _51 + _53;
  _55 = *_54;
  _56 = (long unsigned int) _55;
  MessageLength_BigData_122 = MessageLength_BigData_121 | _56;
  # DEBUG MessageLength_BigData => MessageLength_BigData_122
  # DEBUG BEGIN_STMT
  _57 = MessageLength_BigData_122 + 4294963200;
  if (_57 <= 61439)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _58 = (short unsigned int) MessageLength_BigData_122;
  ChannelPtr_98(D)->TotalLength = _58;
  # DEBUG BEGIN_STMT
  FirstFrame_NPCI_Size_125 = 6;
  # DEBUG FirstFrame_NPCI_Size => FirstFrame_NPCI_Size_125
  # DEBUG BEGIN_STMT
  ValidFirstFrame_126 = 1;
  # DEBUG ValidFirstFrame => ValidFirstFrame_126
  goto <bb 21>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  ValidFirstFrame_123 = 0;
  # DEBUG ValidFirstFrame => ValidFirstFrame_123
  goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  ChannelPtr_98(D)->TotalLength = MessageLength_112;
  # DEBUG BEGIN_STMT
  ValidFirstFrame_114 = 1;
  # DEBUG ValidFirstFrame => ValidFirstFrame_114

  <bb 21> :
  # ValidFirstFrame_87 = PHI <ValidFirstFrame_127(15), ValidFirstFrame_123(19), ValidFirstFrame_114(20), ValidFirstFrame_126(18)>
  # FirstFrame_NPCI_Size_89 = PHI <FirstFrame_NPCI_Size_100(15), FirstFrame_NPCI_Size_100(19), FirstFrame_NPCI_Size_100(20), FirstFrame_NPCI_Size_125(18)>
  # DEBUG FirstFrame_NPCI_Size => FirstFrame_NPCI_Size_89
  # DEBUG ValidFirstFrame => ValidFirstFrame_87
  # DEBUG BEGIN_STMT
  _59 = ChannelPtr_98(D)->TotalLength;
  _60 = (short unsigned int) MaxUnSegMsgLength_109;
  if (_59 <= _60)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  ValidFirstFrame_128 = 0;
  # DEBUG ValidFirstFrame => ValidFirstFrame_128
  goto <bb 24>; [INV]

  <bb 23> :
<L30>:
  # DEBUG BEGIN_STMT
  ValidFirstFrame_129 = 0;
  # DEBUG ValidFirstFrame => ValidFirstFrame_129
  # DEBUG BEGIN_STMT

  <bb 24> :
  # ValidFirstFrame_88 = PHI <ValidFirstFrame_128(22), ValidFirstFrame_129(23), ValidFirstFrame_87(21)>
  # FirstFrame_NPCI_Size_90 = PHI <FirstFrame_NPCI_Size_89(22), FirstFrame_NPCI_Size_100(23), FirstFrame_NPCI_Size_89(21)>
  # DEBUG FirstFrame_NPCI_Size => FirstFrame_NPCI_Size_90
  # DEBUG ValidFirstFrame => ValidFirstFrame_88
  # DEBUG BEGIN_STMT
  if (ValidFirstFrame_88 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _61 = CanTpRxPduPtr_104(D)->SduLength;
  _62 = (unsigned char) _61;
  _63 = _62 - StartPosition_FF_N_PCI_103;
  DataLength_FF_133 = _63 - FirstFrame_NPCI_Size_90;
  # DEBUG DataLength_FF => DataLength_FF_133
  # DEBUG BEGIN_STMT
  _64 = CanTpRxPduPtr_104(D)->SduDataPtr;
  _65 = (int) StartPosition_FF_N_PCI_103;
  _66 = (int) FirstFrame_NPCI_Size_90;
  _67 = _65 + _66;
  _68 = (sizetype) _67;
  NSduDataPtr_134 = _64 + _68;
  # DEBUG NSduDataPtr => NSduDataPtr_134
  # DEBUG BEGIN_STMT
  ChannelPtr_98(D)->ProcessedLength = 0;
  # DEBUG BEGIN_STMT
  _69 = RxNSduCfgPtr_99->WftMax;
  ChannelPtr_98(D)->WftCounter = _69;
  # DEBUG BEGIN_STMT
  _70 = RxNSduCfgPtr_99->N_Br;
  _71 = (long unsigned int) _70;
  _72 = RxNSduCfgPtr_99->N_Ar;
  _73 = (long unsigned int) _72;
  _74 = _71 + _73;
  ChannelPtr_98(D)->Ticks = _74;
  # DEBUG BEGIN_STMT
  _75 = RxNSduCfgPtr_99->BS;
  ChannelPtr_98(D)->BlockSize = _75;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_98(D)->State = 65;
  # DEBUG BEGIN_STMT
  _76 = CanTpRxPduPtr_104(D)->SduLength;
  _77 = (unsigned char) _76;
  ChannelPtr_98(D)->ReceivedSduLength = _77;
  # DEBUG BEGIN_STMT
  Ret_142 = CanTp_ProcessStartOfReception (ChannelPtr_98(D));
  # DEBUG Ret => Ret_142
  # DEBUG BEGIN_STMT
  if (Ret_142 == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _78 = ChannelPtr_98(D)->ConnectionFlags;
  _79 = _78 | 2;
  ChannelPtr_98(D)->ConnectionFlags = _79;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_145 = CanTp_ProcessStartOfReceptionData (ChannelPtr_98(D), NSduDataPtr_134, DataLength_FF_133);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_145
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_145) <default: <L39> [INV], case 0: <L34> [INV], case 2: <L38> [INV]>

  <bb 27> :
<L34>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _80 = (short unsigned int) DataLength_FF_133;
  ChannelPtr_98(D)->ProcessedLength = _80;
  # DEBUG BEGIN_STMT
  _81 = &ChannelPtr_98(D)->BlockSize;
  BSCalc_Ok_152 = CanTp_CalculateBlockSize (ChannelPtr_98(D), _81);
  # DEBUG BSCalc_Ok => BSCalc_Ok_152
  # DEBUG BEGIN_STMT
  if (BSCalc_Ok_152 == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_98(D), 4);
  goto <bb 35>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_98(D));
  goto <bb 35>; [INV]

  <bb 30> :
<L38>:
  # DEBUG BEGIN_STMT
  _82 = &ChannelPtr_98(D)->CanIfData;
  _83 = (long unsigned int) DataLength_FF_133;
  TS_MemCpy32 (_82, NSduDataPtr_134, _83);
  # DEBUG BEGIN_STMT
  ChannelPtr_98(D)->CanIfDLC = DataLength_FF_133;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _84 = ChannelPtr_98(D)->ConnectionFlags;
  _85 = _84 | 2;
  ChannelPtr_98(D)->ConnectionFlags = _85;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_98(D));
  # DEBUG BEGIN_STMT
  goto <bb 35>; [INV]

  <bb 31> :
<L39>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_98(D), 1, 1);
  # DEBUG BEGIN_STMT
  goto <bb 35>; [INV]

  <bb 32> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_98(D), 0, 1);
  # DEBUG BEGIN_STMT
  _86 = RxNSduCfgPtr_99->Tatype;
  if (_86 == 1)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 144);
  goto <bb 35>; [INV]

  <bb 34> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 35> :
  return;

}


CanTp_ProcessReceivedSF (const struct PduInfoType * CanTpRxPduPtr, struct CanTp_ChannelType * ChannelPtr)
{
  BufReq_ReturnType Ret_ReqRxBuffer;
  uint8 * const NSduDataPtr;
  Std_ReturnType Ret;
  boolean ValidFrameLength;
  uint8 NPciHeaderSize;
  uint8 DataLength;
  const uint8 StartPosition_SF_N_PCI;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  const struct CanTp_ConfigType * CanTp_CfgPtr.131_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.132_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _8;
  unsigned char _9;
  short unsigned int _10;
  uint8 * _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  unsigned int _15;
  short unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  short unsigned int _19;
  unsigned int _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  uint8 * _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned int _28;
  unsigned int _29;
  uint8 * _30;
  sizetype _31;
  sizetype _32;
  uint8 * _33;
  unsigned int _34;
  short unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  short unsigned int _39;
  unsigned int _40;
  unsigned int _41;
  short unsigned int _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  uint8 * _46;
  int _47;
  int _48;
  int _49;
  sizetype _50;
  short unsigned int _51;
  short unsigned int _52;
  long unsigned int _53;
  uint8[64] * _54;
  long unsigned int _55;
  unsigned char _56;
  unsigned char _57;
  int iftmp.133_62;
  int iftmp.133_68;
  int iftmp.133_69;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.131_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.132_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.132_2->RxNSduConfigPtr;
  _4 = ChannelPtr_66(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 26;
  _7 = _3 + _6;
  RxNSduCfgPtr_67 = CanTp_CfgPtr.131_1 + _7;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_67
  # DEBUG BEGIN_STMT
  _8 = RxNSduCfgPtr_67->AddressingFormat;
  if (_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _9 = RxNSduCfgPtr_67->AddressingFormat;
  if (_9 != 3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.133_68 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.133_69 = 0;

  <bb 6> :
  # iftmp.133_62 = PHI <iftmp.133_68(4), iftmp.133_69(5)>
  StartPosition_SF_N_PCI_70 = (const uint8) iftmp.133_62;
  # DEBUG StartPosition_SF_N_PCI => StartPosition_SF_N_PCI_70
  # DEBUG BEGIN_STMT
  DataLength_71 = 0;
  # DEBUG DataLength => DataLength_71
  # DEBUG BEGIN_STMT
  NPciHeaderSize_72 = 0;
  # DEBUG NPciHeaderSize => NPciHeaderSize_72
  # DEBUG BEGIN_STMT
  ValidFrameLength_73 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_73
  # DEBUG BEGIN_STMT
  _10 = CanTpRxPduPtr_74(D)->SduLength;
  if (_10 <= 8)
    goto <bb 7>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _11 = CanTpRxPduPtr_74(D)->SduDataPtr;
  _12 = (sizetype) StartPosition_SF_N_PCI_70;
  _13 = _11 + _12;
  _14 = *_13;
  DataLength_83 = _14 & 15;
  # DEBUG DataLength => DataLength_83
  # DEBUG BEGIN_STMT
  NPciHeaderSize_84 = 1;
  # DEBUG NPciHeaderSize => NPciHeaderSize_84
  # DEBUG BEGIN_STMT
  if (DataLength_83 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_90 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_90
  goto <bb 30>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (DataLength_83 <= 7)
    goto <bb 10>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (StartPosition_SF_N_PCI_70 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _15 = (unsigned int) DataLength_83;
  _16 = CanTpRxPduPtr_74(D)->SduLength;
  _17 = (unsigned int) _16;
  _18 = _17 + 4294967295;
  if (_15 <= _18)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_89 = 1;
  # DEBUG ValidFrameLength => ValidFrameLength_89
  goto <bb 30>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_88 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_88
  goto <bb 30>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _19 = CanTpRxPduPtr_74(D)->SduLength;
  if (_19 > 2)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _20 = (unsigned int) DataLength_83;
  _21 = CanTpRxPduPtr_74(D)->SduLength;
  _22 = (unsigned int) _21;
  _23 = _22 + 4294967294;
  if (_20 <= _23)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_86 = 1;
  # DEBUG ValidFrameLength => ValidFrameLength_86
  goto <bb 30>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_87 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_87
  goto <bb 30>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_85 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_85
  goto <bb 30>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _24 = CanTpRxPduPtr_74(D)->SduDataPtr;
  _25 = (sizetype) StartPosition_SF_N_PCI_70;
  _26 = _24 + _25;
  _27 = *_26;
  _28 = (unsigned int) _27;
  _29 = _28 & 15;
  if (_29 == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _30 = CanTpRxPduPtr_74(D)->SduDataPtr;
  _31 = (sizetype) StartPosition_SF_N_PCI_70;
  _32 = _31 + 1;
  _33 = _30 + _32;
  DataLength_76 = *_33;
  # DEBUG DataLength => DataLength_76
  # DEBUG BEGIN_STMT
  NPciHeaderSize_77 = 2;
  # DEBUG NPciHeaderSize => NPciHeaderSize_77
  # DEBUG BEGIN_STMT
  if (DataLength_76 == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_82 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_82
  goto <bb 30>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  if (StartPosition_SF_N_PCI_70 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  _34 = (unsigned int) DataLength_76;
  _35 = CanTpRxPduPtr_74(D)->SduLength;
  _36 = (unsigned int) _35;
  _37 = _36 + 4294967294;
  if (_34 <= _37)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_81 = 1;
  # DEBUG ValidFrameLength => ValidFrameLength_81
  goto <bb 30>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_80 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_80
  goto <bb 30>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  _38 = (unsigned int) DataLength_76;
  _39 = CanTpRxPduPtr_74(D)->SduLength;
  _40 = (unsigned int) _39;
  _41 = _40 + 4294967293;
  if (_38 <= _41)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_79 = 1;
  # DEBUG ValidFrameLength => ValidFrameLength_79
  goto <bb 30>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_78 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_78
  goto <bb 30>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_75 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_75

  <bb 30> :
  # DataLength_58 = PHI <DataLength_83(16), DataLength_76(25), DataLength_71(29), DataLength_83(8), DataLength_83(17), DataLength_83(12), DataLength_83(13), DataLength_83(18), DataLength_76(21), DataLength_76(24), DataLength_76(28), DataLength_76(27)>
  # NPciHeaderSize_59 = PHI <NPciHeaderSize_84(16), NPciHeaderSize_77(25), NPciHeaderSize_72(29), NPciHeaderSize_84(8), NPciHeaderSize_84(17), NPciHeaderSize_84(12), NPciHeaderSize_84(13), NPciHeaderSize_84(18), NPciHeaderSize_77(21), NPciHeaderSize_77(24), NPciHeaderSize_77(28), NPciHeaderSize_77(27)>
  # ValidFrameLength_60 = PHI <ValidFrameLength_86(16), ValidFrameLength_80(25), ValidFrameLength_75(29), ValidFrameLength_90(8), ValidFrameLength_87(17), ValidFrameLength_89(12), ValidFrameLength_88(13), ValidFrameLength_85(18), ValidFrameLength_82(21), ValidFrameLength_81(24), ValidFrameLength_78(28), ValidFrameLength_79(27)>
  # DEBUG ValidFrameLength => ValidFrameLength_60
  # DEBUG NPciHeaderSize => NPciHeaderSize_59
  # DEBUG DataLength => DataLength_58
  # DEBUG BEGIN_STMT
  if (ValidFrameLength_60 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 31> :
  # DEBUG BEGIN_STMT
  _42 = CanTpRxPduPtr_74(D)->SduLength;
  _43 = RxNSduCfgPtr_67->PaddingActivation;
  _44 = RxNSduCfgPtr_67->NPduLength;
  _45 = CanTp_CheckNPduLength (_42, _43, _44);
  if (_45 == 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_93 = 0;
  # DEBUG ValidFrameLength => ValidFrameLength_93
  goto <bb 34>; [INV]

  <bb 33> :
  # DEBUG BEGIN_STMT
  ValidFrameLength_92 = 1;
  # DEBUG ValidFrameLength => ValidFrameLength_92

  <bb 34> :
  # ValidFrameLength_61 = PHI <ValidFrameLength_60(30), ValidFrameLength_93(32), ValidFrameLength_92(33)>
  # DEBUG ValidFrameLength => ValidFrameLength_61
  # DEBUG BEGIN_STMT
  if (ValidFrameLength_61 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 35> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _46 = CanTpRxPduPtr_74(D)->SduDataPtr;
  _47 = (int) StartPosition_SF_N_PCI_70;
  _48 = (int) NPciHeaderSize_59;
  _49 = _47 + _48;
  _50 = (sizetype) _49;
  NSduDataPtr_96 = _46 + _50;
  # DEBUG NSduDataPtr => NSduDataPtr_96
  # DEBUG BEGIN_STMT
  _51 = (short unsigned int) DataLength_58;
  ChannelPtr_66(D)->TotalLength = _51;
  # DEBUG BEGIN_STMT
  _52 = RxNSduCfgPtr_67->N_Br;
  _53 = (long unsigned int) _52;
  ChannelPtr_66(D)->Ticks = _53;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_66(D)->State = 64;
  # DEBUG BEGIN_STMT
  Ret_101 = CanTp_ProcessStartOfReception (ChannelPtr_66(D));
  # DEBUG Ret => Ret_101
  # DEBUG BEGIN_STMT
  if (Ret_101 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 36> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_103 = CanTp_ProcessStartOfReceptionData (ChannelPtr_66(D), NSduDataPtr_96, DataLength_58);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_103
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_103) <default: <L47> [INV], case 0: <L45> [INV], case 2: <L46> [INV]>

  <bb 37> :
<L45>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_66(D), 1, 0);
  # DEBUG BEGIN_STMT
  goto <bb 41>; [INV]

  <bb 38> :
<L46>:
  # DEBUG BEGIN_STMT
  _54 = &ChannelPtr_66(D)->CanIfData;
  _55 = (long unsigned int) DataLength_58;
  TS_MemCpy32 (_54, NSduDataPtr_96, _55);
  # DEBUG BEGIN_STMT
  ChannelPtr_66(D)->CanIfDLC = DataLength_58;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _56 = ChannelPtr_66(D)->ConnectionFlags;
  _57 = _56 | 2;
  ChannelPtr_66(D)->ConnectionFlags = _57;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 41>; [INV]

  <bb 39> :
<L47>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_66(D), 1, 1);
  # DEBUG BEGIN_STMT
  goto <bb 41>; [INV]

  <bb 40> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_66(D), 0, 1);
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 41> :
  return;

}


CanTp_FindNSduId (PduIdType CanTpRxPduId, const uint8 * CanDataPtr, PduIdType * NSduId, uint8 * FrameType)
{
  uint8 N_SA_AE;
  const uint8 FirstNPCIByte;
  const uint8 AddressingFormat;
  uint8 SearchDirection;
  boolean FoundFlag;
  const struct CanTp_RxNPduTableType * RxNPduTableEntry;
  const struct CanTp_ConfigType * CanTp_CfgPtr.104_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.105_2;
  long unsigned int _3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.106_4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.107_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const CanTp_RxNPduLookupEntryType * _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  sizetype _14;
  unsigned char _15;
  unsigned char _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  unsigned int _20;
  unsigned int _21;
  unsigned char _22;
  unsigned char _23;
  short unsigned int _24;
  sizetype _25;
  const uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  short unsigned int _29;
  const struct CanTp_ConfigType * CanTp_CfgPtr.109_30;
  const struct CanTp_ConfigType * CanTp_CfgPtr.110_31;
  long unsigned int _32;
  short unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  sizetype _36;
  int iftmp.108_41;
  int iftmp.108_49;
  int iftmp.108_50;
  boolean _64;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.104_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.105_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.105_2->RxNPduTablePtr;
  CanTp_CfgPtr.106_4 = CanTp_CfgPtr;
  CanTp_CfgPtr.107_5 = CanTp_CfgPtr;
  _6 = CanTp_CfgPtr.107_5->RxNPduLookupTablePtr;
  _7 = (unsigned int) CanTpRxPduId_46(D);
  _8 = _7 * 2;
  _9 = _6 + _8;
  _10 = CanTp_CfgPtr.106_4 + _9;
  _11 = *_10;
  _12 = (unsigned int) _11;
  _13 = _12 * 8;
  _14 = _3 + _13;
  RxNPduTableEntry_47 = CanTp_CfgPtr.104_1 + _14;
  # DEBUG RxNPduTableEntry => RxNPduTableEntry_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  AddressingFormat_48 = RxNPduTableEntry_47->AddressingFormat;
  # DEBUG AddressingFormat => AddressingFormat_48
  # DEBUG BEGIN_STMT
  _15 = RxNPduTableEntry_47->AddressingFormat;
  if (_15 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _16 = RxNPduTableEntry_47->AddressingFormat;
  if (_16 != 3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.108_49 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.108_50 = 0;

  <bb 6> :
  # iftmp.108_41 = PHI <iftmp.108_49(4), iftmp.108_50(5)>
  FirstNPCIByte_51 = (const uint8) iftmp.108_41;
  # DEBUG FirstNPCIByte => FirstNPCIByte_51
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  FoundFlag_52 = 0;
  # DEBUG FoundFlag => FoundFlag_52
  # DEBUG BEGIN_STMT
  _17 = (sizetype) FirstNPCIByte_51;
  _18 = CanDataPtr_53(D) + _17;
  _19 = *_18;
  _20 = (unsigned int) _19;
  _21 = _20 & 240;
  if (_21 == 48)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  SearchDirection_55 = 0;
  # DEBUG SearchDirection => SearchDirection_55
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  SearchDirection_54 = 1;
  # DEBUG SearchDirection => SearchDirection_54

  <bb 9> :
  # RxNPduTableEntry_37 = PHI <RxNPduTableEntry_47(7), RxNPduTableEntry_47(8), RxNPduTableEntry_62(14)>
  # FoundFlag_38 = PHI <FoundFlag_52(7), FoundFlag_52(8), FoundFlag_39(14)>
  # SearchDirection_40 = PHI <SearchDirection_55(7), SearchDirection_54(8), SearchDirection_40(14)>
  # DEBUG SearchDirection => SearchDirection_40
  # DEBUG FoundFlag => FoundFlag_38
  # DEBUG RxNPduTableEntry => RxNPduTableEntry_37
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = RxNPduTableEntry_37->Direction;
  if (SearchDirection_40 == _22)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  N_SA_AE_56 = RxNPduTableEntry_37->N_SA_AE;
  # DEBUG N_SA_AE => N_SA_AE_56
  # DEBUG BEGIN_STMT
  if (AddressingFormat_48 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _23 = *CanDataPtr_53(D);
  if (N_SA_AE_56 == _23)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  FoundFlag_57 = 1;
  # DEBUG FoundFlag => FoundFlag_57
  # DEBUG BEGIN_STMT
  _24 = RxNPduTableEntry_37->Index;
  *NSduId_58(D) = _24;
  # DEBUG BEGIN_STMT
  _25 = (sizetype) FirstNPCIByte_51;
  _26 = CanDataPtr_53(D) + _25;
  _27 = *_26;
  _28 = _27 & 240;
  *FrameType_60(D) = _28;

  <bb 13> :
  # FoundFlag_39 = PHI <FoundFlag_38(9), FoundFlag_38(11), FoundFlag_57(12)>
  # DEBUG FoundFlag => FoundFlag_39
  # DEBUG BEGIN_STMT
  _29 = RxNPduTableEntry_37->Next;
  if (_29 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.109_30 = CanTp_CfgPtr;
  CanTp_CfgPtr.110_31 = CanTp_CfgPtr;
  _32 = CanTp_CfgPtr.110_31->RxNPduTablePtr;
  _33 = RxNPduTableEntry_37->Next;
  _34 = (unsigned int) _33;
  _35 = _34 * 8;
  _36 = _32 + _35;
  RxNPduTableEntry_62 = CanTp_CfgPtr.109_30 + _36;
  # DEBUG RxNPduTableEntry => RxNPduTableEntry_62
  # DEBUG BEGIN_STMT
  if (FoundFlag_39 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (AddressingFormat_48 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  if (FoundFlag_39 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 64);

  <bb 18> :
  # DEBUG BEGIN_STMT
  _64 = FoundFlag_39;
  return _64;

}


CanTp_RxChannelCleanup (struct CanTp_ChannelType * ChannelPtr)
{
  unsigned char _1;
  int _2;
  int _3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.134_4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.135_5;
  long unsigned int _6;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const struct CanTp_RxNSduConfigType * _11;
  unsigned char _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_15(D)->State;
  _2 = (int) _1;
  _3 = _2 & 96;
  switch (_3) <default: <L8> [INV], case 64: <L2> [INV]>

  <bb 3> :
<L2>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.134_4 = CanTp_CfgPtr;
  CanTp_CfgPtr.135_5 = CanTp_CfgPtr;
  _6 = CanTp_CfgPtr.135_5->RxNSduConfigPtr;
  _7 = ChannelPtr_15(D)->NSduId;
  _8 = (unsigned int) _7;
  _9 = _8 * 26;
  _10 = _6 + _9;
  _11 = CanTp_CfgPtr.134_4 + _10;
  _12 = _11->ChannelMode;
  if (_12 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_15(D), 1, 1);
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_15(D), 1, 7);

  <bb 6> :
<L8>:
  return;

}


CanTp_ProcessRxFrame (struct CanTp_ChannelType * ChannelPtr, const struct PduInfoType * CanTpRxPduPtr, PduIdType NSduId, uint8 FrameType)
{
  int _1;
  unsigned char _2;
  unsigned char CanTp_NonIdleChannelCounter.129_3;
  unsigned char _4;
  unsigned char _5;
  unsigned char CanTp_NonIdleChannelCounter.130_6;
  unsigned char _7;
  short unsigned int _8;
  unsigned char _9;
  unsigned int _10;
  unsigned int _11;
  short unsigned int _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) FrameType_14(D);
  switch (_1) <default: <L16> [INV], case 0: <L0> [INV], case 16: <L3> [INV], case 32: <L6> [INV], case 48: <L11> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  CanTp_RxChannelCleanup (ChannelPtr_16(D));
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_16(D)->State;
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->NSduId = NSduId_17(D);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.129_3 = CanTp_NonIdleChannelCounter;
  _4 = CanTp_NonIdleChannelCounter.129_3 + 1;
  CanTp_NonIdleChannelCounter = _4;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_ProcessReceivedSF (CanTpRxPduPtr_18(D), ChannelPtr_16(D));
  goto <bb 12>; [INV]

  <bb 5> :
<L3>:
  # DEBUG BEGIN_STMT
  CanTp_RxChannelCleanup (ChannelPtr_16(D));
  # DEBUG BEGIN_STMT
  _5 = ChannelPtr_16(D)->State;
  if (_5 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ChannelPtr_16(D)->NSduId = NSduId_17(D);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.130_6 = CanTp_NonIdleChannelCounter;
  _7 = CanTp_NonIdleChannelCounter.130_6 + 1;
  CanTp_NonIdleChannelCounter = _7;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_ProcessReceivedFF (CanTpRxPduPtr_18(D), ChannelPtr_16(D));
  goto <bb 12>; [INV]

  <bb 7> :
<L6>:
  # DEBUG BEGIN_STMT
  _8 = ChannelPtr_16(D)->NSduId;
  if (NSduId_17(D) == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  _9 = ChannelPtr_16(D)->State;
  _10 = (unsigned int) _9;
  _11 = _10 & 96;
  if (_11 == 64)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  CanTp_ProcessReceivedCF (CanTpRxPduPtr_18(D), ChannelPtr_16(D));
  goto <bb 12>; [INV]

  <bb 10> :
<L11>:
  # DEBUG BEGIN_STMT
  _12 = ChannelPtr_16(D)->NSduId;
  if (NSduId_17(D) == _12)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  CanTp_ProcessReceivedFC (CanTpRxPduPtr_18(D), ChannelPtr_16(D));

  <bb 12> :
<L16>:
  return;

}


CanTp_PostponeRxFrame (struct CanTp_ChannelType * ChannelPtr, const struct PduInfoType * CanTpRxPduPtr, PduIdType NSduId, uint8 FrameType)
{
  uint8[64] * _1;
  uint8 * _2;
  short unsigned int _3;
  long unsigned int _4;
  unsigned char _5;
  unsigned char _6;
  short unsigned int _7;
  unsigned char _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = &ChannelPtr_9(D)->PostRxIndData;
  _2 = CanTpRxPduPtr_11(D)->SduDataPtr;
  _3 = CanTpRxPduPtr_11(D)->SduLength;
  _4 = (long unsigned int) _3;
  TS_MemCpy32 (_1, _2, _4);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = ChannelPtr_9(D)->PostFlag;
  _6 = _5 | 1;
  ChannelPtr_9(D)->PostFlag = _6;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_9(D)->PostRxIndNSduId = NSduId_14(D);
  # DEBUG BEGIN_STMT
  _7 = CanTpRxPduPtr_11(D)->SduLength;
  _8 = (unsigned char) _7;
  ChannelPtr_9(D)->PostRxIndLength = _8;
  # DEBUG BEGIN_STMT
  ChannelPtr_9(D)->PostRxIndFrameType = FrameType_17(D);
  return;

}


CanTp_PostRxIndication (struct CanTp_ChannelType * ChannelPtr)
{
  boolean PendingFrame;
  uint8_least Loop;
  uint8 FrameType;
  PduIdType NSduId;
  uint8 NPduData[64];
  struct PduInfoType CanTpNPdu;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  unsigned char _5;
  long unsigned int _6;
  unsigned char _7;
  short unsigned int _8;
  unsigned char _9;
  unsigned char _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NPduData = "\x00";
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PendingFrame_20 = 0;
  # DEBUG PendingFrame => PendingFrame_20
  # DEBUG BEGIN_STMT
  NSduId_21 = 0;
  # DEBUG NSduId => NSduId_21
  # DEBUG BEGIN_STMT
  FrameType_22 = 0;
  # DEBUG FrameType => FrameType_22
  # DEBUG BEGIN_STMT
  CanTpNPdu.SduDataPtr = 0B;
  # DEBUG BEGIN_STMT
  CanTpNPdu.SduLength = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_26(D)->PostFlag;
  _2 = (unsigned int) _1;
  _3 = _2 & 1;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Loop_27 = 0;
  # DEBUG Loop => Loop_27
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _4 = ChannelPtr_26(D)->PostRxIndData[Loop_13];
  NPduData[Loop_13] = _4;
  # DEBUG BEGIN_STMT
  Loop_35 = Loop_13 + 1;
  # DEBUG Loop => Loop_35

  <bb 5> :
  # Loop_13 = PHI <Loop_27(3), Loop_35(4)>
  # DEBUG Loop => Loop_13
  # DEBUG BEGIN_STMT
  _5 = ChannelPtr_26(D)->PostRxIndLength;
  _6 = (long unsigned int) _5;
  if (Loop_13 < _6)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  CanTpNPdu.SduDataPtr = &NPduData[0];
  # DEBUG BEGIN_STMT
  _7 = ChannelPtr_26(D)->PostRxIndLength;
  _8 = (short unsigned int) _7;
  CanTpNPdu.SduLength = _8;
  # DEBUG BEGIN_STMT
  NSduId_30 = ChannelPtr_26(D)->PostRxIndNSduId;
  # DEBUG NSduId => NSduId_30
  # DEBUG BEGIN_STMT
  FrameType_31 = ChannelPtr_26(D)->PostRxIndFrameType;
  # DEBUG FrameType => FrameType_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = ChannelPtr_26(D)->PostFlag;
  _10 = _9 & 254;
  ChannelPtr_26(D)->PostFlag = _10;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PendingFrame_33 = 1;
  # DEBUG PendingFrame => PendingFrame_33

  <bb 7> :
  # NSduId_11 = PHI <NSduId_21(2), NSduId_30(6)>
  # FrameType_12 = PHI <FrameType_22(2), FrameType_31(6)>
  # PendingFrame_14 = PHI <PendingFrame_20(2), PendingFrame_33(6)>
  # DEBUG PendingFrame => PendingFrame_14
  # DEBUG FrameType => FrameType_12
  # DEBUG NSduId => NSduId_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PendingFrame_14 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_26(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_ProcessRxFrame (ChannelPtr_26(D), &CanTpNPdu, NSduId_11, FrameType_12);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_26(D)->ChannelLockFlag = 0;

  <bb 9> :
  # DEBUG BEGIN_STMT
  CanTpNPdu ={v} {CLOBBER};
  NPduData ={v} {CLOBBER};
  return;

}


CanTp_RxIndication (PduIdType CanTpRxPduId, struct PduInfoType * CanTpRxPduPtr)
{
  boolean OverwrittenCF;
  boolean IgnoreMsgFlag;
  const uint8 * SduDataPtr;
  const uint8 AddressingFormat;
  Std_ReturnType Result;
  CanTp_ChType Channel;
  boolean FCValidLength;
  PduLengthType NPduMaxLength;
  boolean RxProcessFlag;
  const struct CanTp_RxNPduTableType * RxNPduTableEntry;
  uint8 FrameType;
  PduIdType NSduId;
  struct CanTp_ChannelType * ChannelPtr;
  unsigned char _1;
  uint8 * _2;
  const struct CanTp_ConfigType * CanTp_CfgPtr.73_3;
  short unsigned int _4;
  short unsigned int _5;
  uint8 * _6;
  unsigned char _7;
  const struct CanTp_ConfigType * CanTp_CfgPtr.74_8;
  const struct CanTp_ConfigType * CanTp_CfgPtr.75_9;
  long unsigned int _10;
  const struct CanTp_ConfigType * CanTp_CfgPtr.76_11;
  const struct CanTp_ConfigType * CanTp_CfgPtr.77_12;
  long unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  sizetype _16;
  const CanTp_RxNPduLookupEntryType * _17;
  short unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  sizetype _21;
  unsigned char FrameType.78_22;
  const struct CanTp_ConfigType * CanTp_CfgPtr.79_23;
  const struct CanTp_ConfigType * CanTp_CfgPtr.80_24;
  long unsigned int _25;
  short unsigned int NSduId.81_26;
  unsigned int _27;
  unsigned int _28;
  sizetype _29;
  const struct CanTp_TxNSduConfigType * _30;
  const struct CanTp_ConfigType * CanTp_CfgPtr.82_31;
  const struct CanTp_ConfigType * CanTp_CfgPtr.83_32;
  long unsigned int _33;
  short unsigned int NSduId.84_34;
  unsigned int _35;
  unsigned int _36;
  sizetype _37;
  const struct CanTp_RxNSduConfigType * _38;
  int _39;
  unsigned char FrameType.85_40;
  short unsigned int NSduId.86_41;
  short unsigned int _42;
  const struct CanTp_ConfigType * CanTp_CfgPtr.87_43;
  const struct CanTp_ConfigType * CanTp_CfgPtr.88_44;
  long unsigned int _45;
  short unsigned int NSduId.89_46;
  unsigned int _47;
  unsigned int _48;
  sizetype _49;
  const struct CanTp_RxNSduConfigType * _50;
  unsigned char _51;
  unsigned char FrameType.90_52;
  unsigned char _53;
  unsigned char _54;
  short unsigned int _55;
  unsigned char FrameType.91_56;
  unsigned char FrameType.92_57;
  short unsigned int _58;
  short unsigned int NSduId.93_59;
  unsigned char _60;
  short unsigned int _61;
  unsigned char FrameType.94_62;
  unsigned char _63;
  unsigned char FrameType.95_64;
  unsigned char FrameType.96_65;
  unsigned char FrameType.97_66;
  unsigned char _67;
  unsigned int _68;
  unsigned int _69;
  unsigned char FrameType.98_70;
  unsigned char _71;
  unsigned int _72;
  unsigned int _73;
  unsigned char FrameType.99_74;
  unsigned char _75;
  unsigned int _76;
  unsigned int _77;
  short unsigned int NSduId.100_78;
  unsigned char FrameType.101_79;
  short unsigned int NSduId.102_80;
  unsigned char FrameType.103_81;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 32);
  goto <bb 44>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (CanTpRxPduPtr_93(D) == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _2 = CanTpRxPduPtr_93(D)->SduDataPtr;
  if (_2 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 3);
  goto <bb 44>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.73_3 = CanTp_CfgPtr;
  _4 = CanTp_CfgPtr.73_3->NumberRxNPdus;
  if (CanTpRxPduId_94(D) >= _4)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 64);
  goto <bb 44>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _5 = CanTpRxPduPtr_93(D)->SduLength;
  if (_5 <= 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);
  goto <bb 44>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  NSduId = 0;
  # DEBUG BEGIN_STMT
  FrameType = 0;
  # DEBUG BEGIN_STMT
  _6 = CanTpRxPduPtr_93(D)->SduDataPtr;
  _7 = CanTp_FindNSduId (CanTpRxPduId_94(D), _6, &NSduId, &FrameType);
  if (_7 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.74_8 = CanTp_CfgPtr;
  CanTp_CfgPtr.75_9 = CanTp_CfgPtr;
  _10 = CanTp_CfgPtr.75_9->RxNPduTablePtr;
  CanTp_CfgPtr.76_11 = CanTp_CfgPtr;
  CanTp_CfgPtr.77_12 = CanTp_CfgPtr;
  _13 = CanTp_CfgPtr.77_12->RxNPduLookupTablePtr;
  _14 = (unsigned int) CanTpRxPduId_94(D);
  _15 = _14 * 2;
  _16 = _13 + _15;
  _17 = CanTp_CfgPtr.76_11 + _16;
  _18 = *_17;
  _19 = (unsigned int) _18;
  _20 = _19 * 8;
  _21 = _10 + _20;
  RxNPduTableEntry_98 = CanTp_CfgPtr.74_8 + _21;
  # DEBUG RxNPduTableEntry => RxNPduTableEntry_98
  # DEBUG BEGIN_STMT
  RxProcessFlag_99 = 0;
  # DEBUG RxProcessFlag => RxProcessFlag_99
  # DEBUG BEGIN_STMT
  NPduMaxLength_100 = 8;
  # DEBUG NPduMaxLength => NPduMaxLength_100
  # DEBUG BEGIN_STMT
  FCValidLength_101 = 0;
  # DEBUG FCValidLength => FCValidLength_101
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Result_102 = 1;
  # DEBUG Result => Result_102
  # DEBUG BEGIN_STMT
  FrameType.78_22 = FrameType;
  if (FrameType.78_22 == 48)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.79_23 = CanTp_CfgPtr;
  CanTp_CfgPtr.80_24 = CanTp_CfgPtr;
  _25 = CanTp_CfgPtr.80_24->TxNSduConfigPtr;
  NSduId.81_26 = NSduId;
  _27 = (unsigned int) NSduId.81_26;
  _28 = _27 * 24;
  _29 = _25 + _28;
  _30 = CanTp_CfgPtr.79_23 + _29;
  Channel_104 = _30->Channel;
  # DEBUG Channel => Channel_104
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.82_31 = CanTp_CfgPtr;
  CanTp_CfgPtr.83_32 = CanTp_CfgPtr;
  _33 = CanTp_CfgPtr.83_32->RxNSduConfigPtr;
  NSduId.84_34 = NSduId;
  _35 = (unsigned int) NSduId.84_34;
  _36 = _35 * 26;
  _37 = _33 + _36;
  _38 = CanTp_CfgPtr.82_31 + _37;
  Channel_103 = _38->Channel;
  # DEBUG Channel => Channel_103

  <bb 15> :
  # Channel_85 = PHI <Channel_104(13), Channel_103(14)>
  # DEBUG Channel => Channel_85
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _39 = (int) Channel_85;
  ChannelPtr_105 = &CanTp_Channel[_39];
  # DEBUG ChannelPtr => ChannelPtr_105
  # DEBUG BEGIN_STMT
  FrameType.85_40 = FrameType;
  if (FrameType.85_40 == 48)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  AddressingFormat_107 = RxNPduTableEntry_98->AddressingFormat;
  # DEBUG AddressingFormat => AddressingFormat_107
  # DEBUG BEGIN_STMT
  NSduId.86_41 = NSduId;
  _42 = CanTpRxPduPtr_93(D)->SduLength;
  FCValidLength_109 = CanTp_ValidateFCLength (NSduId.86_41, _42, AddressingFormat_107);
  # DEBUG FCValidLength => FCValidLength_109
  goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.87_43 = CanTp_CfgPtr;
  CanTp_CfgPtr.88_44 = CanTp_CfgPtr;
  _45 = CanTp_CfgPtr.88_44->RxNSduConfigPtr;
  NSduId.89_46 = NSduId;
  _47 = (unsigned int) NSduId.89_46;
  _48 = _47 * 26;
  _49 = _45 + _48;
  _50 = CanTp_CfgPtr.87_43 + _49;
  _51 = _50->NPduLength;
  NPduMaxLength_106 = (PduLengthType) _51;
  # DEBUG NPduMaxLength => NPduMaxLength_106

  <bb 18> :
  # NPduMaxLength_83 = PHI <NPduMaxLength_100(16), NPduMaxLength_106(17)>
  # FCValidLength_84 = PHI <FCValidLength_109(16), FCValidLength_101(17)>
  # DEBUG FCValidLength => FCValidLength_84
  # DEBUG NPduMaxLength => NPduMaxLength_83
  # DEBUG BEGIN_STMT
  FrameType.90_52 = FrameType;
  if (FrameType.90_52 == 16)
    goto <bb 19>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 19> :
  _53 = RxNPduTableEntry_98->AddressingFormat;
  _54 = _53 + 255;
  if (_54 <= 1)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  _55 = CanTpRxPduPtr_93(D)->SduLength;
  if (_55 <= 2)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);
  goto <bb 44>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  FrameType.91_56 = FrameType;
  if (FrameType.91_56 == 48)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  if (FCValidLength_84 == 1)
    goto <bb 26>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  FrameType.92_57 = FrameType;
  if (FrameType.92_57 != 48)
    goto <bb 25>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 25> :
  _58 = CanTpRxPduPtr_93(D)->SduLength;
  if (NPduMaxLength_83 >= _58)
    goto <bb 26>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  SduDataPtr_112 = CanTpRxPduPtr_93(D)->SduDataPtr;
  # DEBUG SduDataPtr => SduDataPtr_112
  # DEBUG BEGIN_STMT
  NSduId.93_59 = NSduId;
  _60 = *SduDataPtr_112;
  _61 = (short unsigned int) _60;
  FrameType.94_62 = FrameType;
  IgnoreMsgFlag_114 = CanTp_ValidateNAI (ChannelPtr_105, NSduId.93_59, _61, FrameType.94_62);
  # DEBUG IgnoreMsgFlag => IgnoreMsgFlag_114
  # DEBUG BEGIN_STMT
  if (IgnoreMsgFlag_114 == 0)
    goto <bb 27>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 27> :
  # DEBUG BEGIN_STMT
  OverwrittenCF_115 = 0;
  # DEBUG OverwrittenCF => OverwrittenCF_115
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _63 = ChannelPtr_105->ChannelLockFlag;
  if (_63 == 0)
    goto <bb 34>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  FrameType.95_64 = FrameType;
  if (FrameType.95_64 != 48)
    goto <bb 29>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 29> :
  FrameType.96_65 = FrameType;
  if (FrameType.96_65 != 32)
    goto <bb 30>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 30> :
  FrameType.97_66 = FrameType;
  if (FrameType.97_66 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  _67 = ChannelPtr_105->ConnectionFlags;
  _68 = (unsigned int) _67;
  _69 = _68 & 4;
  if (_69 == 0)
    goto <bb 32>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 32> :
  FrameType.98_70 = FrameType;
  if (FrameType.98_70 != 16)
    goto <bb 34>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  _71 = ChannelPtr_105->ConnectionFlags;
  _72 = (unsigned int) _71;
  _73 = _72 & 4;
  if (_73 == 0)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_105->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RxProcessFlag_120 = 1;
  # DEBUG RxProcessFlag => RxProcessFlag_120
  goto <bb 39>; [INV]

  <bb 35> :
  # DEBUG BEGIN_STMT
  FrameType.99_74 = FrameType;
  if (FrameType.99_74 == 32)
    goto <bb 36>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 36> :
  _75 = ChannelPtr_105->PostFlag;
  _76 = (unsigned int) _75;
  _77 = _76 & 1;
  if (_77 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  # DEBUG BEGIN_STMT
  OverwrittenCF_117 = 1;
  # DEBUG OverwrittenCF => OverwrittenCF_117

  <bb 38> :
  # OverwrittenCF_86 = PHI <OverwrittenCF_115(35), OverwrittenCF_115(36), OverwrittenCF_117(37)>
  # DEBUG OverwrittenCF => OverwrittenCF_86
  # DEBUG BEGIN_STMT
  NSduId.100_78 = NSduId;
  FrameType.101_79 = FrameType;
  CanTp_PostponeRxFrame (ChannelPtr_105, CanTpRxPduPtr_93(D), NSduId.100_78, FrameType.101_79);

  <bb 39> :
  # RxProcessFlag_82 = PHI <RxProcessFlag_120(34), RxProcessFlag_99(38)>
  # OverwrittenCF_87 = PHI <OverwrittenCF_115(34), OverwrittenCF_86(38)>
  # DEBUG OverwrittenCF => OverwrittenCF_87
  # DEBUG RxProcessFlag => RxProcessFlag_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (OverwrittenCF_87 == 1)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 4);

  <bb 41> :
  # DEBUG BEGIN_STMT
  if (RxProcessFlag_82 == 1)
    goto <bb 42>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 42> :
  # DEBUG BEGIN_STMT
  NSduId.102_80 = NSduId;
  FrameType.103_81 = FrameType;
  CanTp_ProcessRxFrame (ChannelPtr_105, CanTpRxPduPtr_93(D), NSduId.102_80, FrameType.103_81);
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_105);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_105->ChannelLockFlag = 0;
  goto <bb 44>; [INV]

  <bb 43> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 66, 128);

  <bb 44> :
  # DEBUG BEGIN_STMT
  NSduId ={v} {CLOBBER};
  FrameType ={v} {CLOBBER};
  return;

}


CanTp_TryToSendFC (struct CanTp_ChannelType * ChannelPtr, uint8 Type)
{
  struct CanTp_ChannelType * ChPtr;
  CanTp_ChStateType ChanState;
  boolean Ret_Postponed;
  CanTp_TxChannelType Tx_ChannelID;
  const struct CanTp_ConfigType * CanTp_CfgPtr.71_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.72_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanTp_RxNSduConfigType * _8;
  int _9;
  unsigned int _10;
  unsigned int _11;
  int _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Tx_ChannelID_15 = 255;
  # DEBUG Tx_ChannelID => Tx_ChannelID_15
  # DEBUG BEGIN_STMT
  Ret_Postponed_16 = 0;
  # DEBUG Ret_Postponed => Ret_Postponed_16
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.71_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.72_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.72_2->RxNSduConfigPtr;
  _4 = ChannelPtr_18(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 26;
  _7 = _3 + _6;
  _8 = CanTp_CfgPtr.71_1 + _7;
  Tx_ChannelID_19 = _8->Tx_Channel;
  # DEBUG Tx_ChannelID => Tx_ChannelID_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Ret_Postponed_20 = 0;
  # DEBUG Ret_Postponed => Ret_Postponed_20
  # DEBUG BEGIN_STMT
  if (Tx_ChannelID_19 != 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _9 = (int) Tx_ChannelID_19;
  ChPtr_21 = &CanTp_Channel[_9];
  # DEBUG ChPtr => ChPtr_21
  # DEBUG BEGIN_STMT
  ChanState_22 = ChPtr_21->State;
  # DEBUG ChanState => ChanState_22
  # DEBUG BEGIN_STMT
  _10 = (unsigned int) ChanState_22;
  _11 = _10 & 152;
  if (_11 == 16)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Ret_Postponed_23 = 1;
  # DEBUG Ret_Postponed => Ret_Postponed_23

  <bb 5> :
  # Ret_Postponed_13 = PHI <Ret_Postponed_20(2), Ret_Postponed_20(3), Ret_Postponed_23(4)>
  # DEBUG Ret_Postponed => Ret_Postponed_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = (int) Type_24(D);
  switch (_12) <default: <L12> [INV], case 4: <L4> [INV], case 6: <L8> [INV]>

  <bb 6> :
<L4>:
  # DEBUG BEGIN_STMT
  if (Ret_Postponed_13 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_18(D)->State = 204;
  goto <bb 15>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_18(D)->State = 76;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (ChannelPtr_18(D), 48);
  goto <bb 15>; [INV]

  <bb 9> :
<L8>:
  # DEBUG BEGIN_STMT
  if (Ret_Postponed_13 == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_18(D)->State = 206;
  goto <bb 15>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_18(D)->State = 78;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (ChannelPtr_18(D), 49);
  goto <bb 15>; [INV]

  <bb 12> :
<L12>:
  # DEBUG BEGIN_STMT
  ChannelPtr_18(D)->ActualBufferSize = 0;
  # DEBUG BEGIN_STMT
  if (Ret_Postponed_13 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_18(D)->State = 205;
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_18(D)->State = 77;
  # DEBUG BEGIN_STMT
  CanTp_PrepareFC (ChannelPtr_18(D), 50);

  <bb 15> :
  return;

}


CanTp_RxStateHandling (struct CanTp_ChannelType * ChannelPtr)
{
  boolean ContinueWithNextBlock;
  BufReq_ReturnType Ret_ReqRxBuffer;
  Std_ReturnType BSCalc_Ok;
  BufReq_ReturnType Ret_ReqRxBuffer;
  BufReq_ReturnType Ret_ReqRxBuffer;
  unsigned char _1;
  int _2;
  uint8[64] * _3;
  unsigned char _4;
  uint8[64] * _5;
  unsigned char _6;
  short unsigned int _7;
  unsigned char _8;
  short unsigned int _9;
  short unsigned int _10;
  uint8 * _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_17(D)->State;
  _2 = (int) _1;
  switch (_2) <default: <L28> [INV], case 64: <L0> [INV], case 65: <L5> [INV], case 66: <L13> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = &ChannelPtr_17(D)->CanIfData;
  _4 = ChannelPtr_17(D)->CanIfDLC;
  Ret_ReqRxBuffer_42 = CanTp_ProcessStartOfReceptionData (ChannelPtr_17(D), _3, _4);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_42
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_42) <default: <L3> [INV], case 0: <L1> [INV], case 2: <L27> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_17(D), 1, 0);
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 5> :
<L3>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_17(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 6> :
<L27>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 21>; [INV]

  <bb 7> :
<L5>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = &ChannelPtr_17(D)->CanIfData;
  _6 = ChannelPtr_17(D)->CanIfDLC;
  Ret_ReqRxBuffer_30 = CanTp_ProcessStartOfReceptionData (ChannelPtr_17(D), _5, _6);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_30
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_30) <default: <L11> [INV], case 0: <L6> [INV], case 2: <L10> [INV]>

  <bb 8> :
<L6>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = ChannelPtr_17(D)->ProcessedLength;
  _8 = ChannelPtr_17(D)->CanIfDLC;
  _9 = (short unsigned int) _8;
  _10 = _7 + _9;
  ChannelPtr_17(D)->ProcessedLength = _10;
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->CanIfDLC = 0;
  # DEBUG BEGIN_STMT
  _11 = &ChannelPtr_17(D)->BlockSize;
  BSCalc_Ok_35 = CanTp_CalculateBlockSize (ChannelPtr_17(D), _11);
  # DEBUG BSCalc_Ok => BSCalc_Ok_35
  # DEBUG BEGIN_STMT
  if (BSCalc_Ok_35 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_17(D), 4);
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_17(D));
  goto <bb 13>; [INV]

  <bb 11> :
<L10>:
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_17(D));
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 12> :
<L11>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_17(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 13> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 21>; [INV]

  <bb 14> :
<L13>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_20 = CanTp_RxProcessData (ChannelPtr_17(D), 0B, 0);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_20
  # DEBUG BEGIN_STMT
  switch (Ret_ReqRxBuffer_20) <default: <L19> [INV], case 0: <L14> [INV], case 2: <L18> [INV]>

  <bb 15> :
<L14>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ContinueWithNextBlock_23 = CanTp_VerifyBlockSize (ChannelPtr_17(D));
  # DEBUG ContinueWithNextBlock => ContinueWithNextBlock_23
  # DEBUG BEGIN_STMT
  if (ContinueWithNextBlock_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_17(D), 4);
  goto <bb 20>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_17(D));
  goto <bb 20>; [INV]

  <bb 18> :
<L18>:
  # DEBUG BEGIN_STMT
  CanTp_CheckAndHandleWaitFrameTimeOut (ChannelPtr_17(D));
  # DEBUG BEGIN_STMT
  goto <bb 20>; [INV]

  <bb 19> :
<L19>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_17(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 20> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT

  <bb 21> :
<L28>:
  return;

}


CanTp_RxProcessData (struct CanTp_ChannelType * ChannelPtr, uint8 * NPduDataPtr, uint8 NSduDataLength)
{
  struct PduInfoType PduInfo;
  PduLengthType UL_BufferSize;
  BufReq_ReturnType Ret_CopyRxData;
  short unsigned int _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.68_2;
  const struct CanTp_ConfigType * CanTp_CfgPtr.69_3;
  long unsigned int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  sizetype _8;
  const struct CanTp_RxNSduConfigType * _9;
  short unsigned int _10;
  short unsigned int UL_BufferSize.70_11;
  BufReq_ReturnType _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) NSduDataLength_13(D);
  PduInfo.SduLength = _1;
  # DEBUG BEGIN_STMT
  PduInfo.SduDataPtr = NPduDataPtr_16(D);
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.68_2 = CanTp_CfgPtr;
  CanTp_CfgPtr.69_3 = CanTp_CfgPtr;
  _4 = CanTp_CfgPtr.69_3->RxNSduConfigPtr;
  _5 = ChannelPtr_18(D)->NSduId;
  _6 = (unsigned int) _5;
  _7 = _6 * 26;
  _8 = _4 + _7;
  _9 = CanTp_CfgPtr.68_2 + _8;
  _10 = _9->IPduId;
  Ret_CopyRxData_20 = PduR_CanTpCopyRxData (_10, &PduInfo, &UL_BufferSize);
  # DEBUG Ret_CopyRxData => Ret_CopyRxData_20
  # DEBUG BEGIN_STMT
  if (Ret_CopyRxData_20 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  UL_BufferSize.70_11 = UL_BufferSize;
  ChannelPtr_18(D)->ActualBufferSize = UL_BufferSize.70_11;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ChannelPtr_18(D)->ActualBufferSize = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  _23 = Ret_CopyRxData_20;
  UL_BufferSize ={v} {CLOBBER};
  PduInfo ={v} {CLOBBER};
  return _23;

}


CanTp_ProcessStartOfReceptionData (struct CanTp_ChannelType * ChannelPtr, uint8 * NPduDataPtr, uint8 NSduDataLength)
{
  BufReq_ReturnType Ret_ReqRxBuffer;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  BufReq_ReturnType _21;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (NSduDataLength_9(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_20 = CanTp_RxProcessData (ChannelPtr_11(D), 0B, 0);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_20
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_11(D)->ActualBufferSize;
  _2 = (short unsigned int) NSduDataLength_9(D);
  if (_1 < _2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_14 = CanTp_RxProcessData (ChannelPtr_11(D), 0B, 0);
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_14
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_12 = 0;
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_12

  <bb 7> :
  # Ret_ReqRxBuffer_5 = PHI <Ret_ReqRxBuffer_14(5), Ret_ReqRxBuffer_12(6)>
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_5
  # DEBUG BEGIN_STMT
  if (Ret_ReqRxBuffer_5 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_11(D)->ActualBufferSize;
  _4 = (short unsigned int) NSduDataLength_9(D);
  if (_3 >= _4)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_18 = CanTp_RxProcessData (ChannelPtr_11(D), NPduDataPtr_16(D), NSduDataLength_9(D));
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_18
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Ret_ReqRxBuffer_15 = 2;
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_15

  <bb 11> :
  # Ret_ReqRxBuffer_6 = PHI <Ret_ReqRxBuffer_20(3), Ret_ReqRxBuffer_5(7), Ret_ReqRxBuffer_18(9), Ret_ReqRxBuffer_15(10)>
  # DEBUG Ret_ReqRxBuffer => Ret_ReqRxBuffer_6
  # DEBUG BEGIN_STMT
  _21 = Ret_ReqRxBuffer_6;
  return _21;

}


CanTp_ProcessStartOfReception (struct CanTp_ChannelType * ChannelPtr)
{
  BufReq_ReturnType Ret_StartOfReception;
  Std_ReturnType Ret;
  const struct CanTp_ConfigType * CanTp_CfgPtr.66_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.67_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const struct CanTp_RxNSduConfigType * _8;
  short unsigned int _9;
  short unsigned int _10;
  PduLengthType * _11;
  unsigned char _12;
  Std_ReturnType _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.66_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.67_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.67_2->RxNSduConfigPtr;
  _4 = ChannelPtr_17(D)->NSduId;
  _5 = (unsigned int) _4;
  _6 = _5 * 26;
  _7 = _3 + _6;
  _8 = CanTp_CfgPtr.66_1 + _7;
  _9 = _8->IPduId;
  _10 = ChannelPtr_17(D)->TotalLength;
  _11 = &ChannelPtr_17(D)->ActualBufferSize;
  Ret_StartOfReception_19 = PduR_CanTpStartOfReception (_9, _10, _11);
  # DEBUG Ret_StartOfReception => Ret_StartOfReception_19
  # DEBUG BEGIN_STMT
  switch (Ret_StartOfReception_19) <default: <L7> [INV], case 0: <L0> [INV], case 1: <L1> [INV], case 2: <L6> [INV], case 3: <L2> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Ret_27 = 0;
  # DEBUG Ret => Ret_27
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_17(D), 0, 1);
  # DEBUG BEGIN_STMT
  Ret_26 = 1;
  # DEBUG Ret => Ret_26
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  _12 = ChannelPtr_17(D)->State;
  if (_12 == 65)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_17(D), 5);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_17(D), 0, 1);

  <bb 8> :
  # DEBUG BEGIN_STMT
  Ret_22 = 1;
  # DEBUG Ret => Ret_22
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  ChannelPtr_17(D)->ActualBufferSize = 0;
  # DEBUG BEGIN_STMT
  Ret_24 = 0;
  # DEBUG Ret => Ret_24
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_17(D), 1, 1);
  # DEBUG BEGIN_STMT
  Ret_29 = 1;
  # DEBUG Ret => Ret_29
  # DEBUG BEGIN_STMT

  <bb 11> :
  # Ret_13 = PHI <Ret_27(3), Ret_26(4), Ret_22(8), Ret_24(9), Ret_29(10)>
  # DEBUG Ret => Ret_13
  # DEBUG BEGIN_STMT
  _30 = Ret_13;
  return _30;

}


CanTp_PreparePadding (struct CanTp_ChannelType * ChannelPtr, uint8 Padding, uint8 CanIdType, struct PduInfoType * FCBufferPtr)
{
  uint8 PaddingByte;
  PduLengthType FrameLength;
  PduLengthType NPduSize;
  uint8_least Idx;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned char _5;
  unsigned char _6;
  uint8 * _7;
  uint8 * _8;
  long unsigned int _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PaddingByte_17 = 0;
  # DEBUG PaddingByte => PaddingByte_17
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_18(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  FrameLength_23 = FCBufferPtr_18(D)->SduLength;
  # DEBUG FrameLength => FrameLength_23
  # DEBUG BEGIN_STMT
  NPduSize_24 = FCBufferPtr_18(D)->SduLength;
  # DEBUG NPduSize => NPduSize_24
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_20(D)->CanIfDLC;
  FrameLength_21 = (PduLengthType) _1;
  # DEBUG FrameLength => FrameLength_21
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_20(D)->CanIfDLC;
  NPduSize_22 = (PduLengthType) _2;
  # DEBUG NPduSize => NPduSize_22

  <bb 5> :
  # NPduSize_11 = PHI <NPduSize_24(3), NPduSize_22(4)>
  # FrameLength_13 = PHI <FrameLength_23(3), FrameLength_21(4)>
  # DEBUG FrameLength => FrameLength_13
  # DEBUG NPduSize => NPduSize_11
  # DEBUG BEGIN_STMT
  _3 = CanIdType_25(D) + 254;
  if (_3 <= 1)
    goto <bb 6>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  PaddingByte_28 = 0;
  # DEBUG PaddingByte => PaddingByte_28
  # DEBUG BEGIN_STMT
  if (Padding_26(D) == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NPduSize_37 = 64;
  # DEBUG NPduSize => NPduSize_37
  goto <bb 26>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (FrameLength_13 <= 8)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (Padding_26(D) == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  NPduSize_36 = 8;
  # DEBUG NPduSize => NPduSize_36
  goto <bb 26>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (FrameLength_13 <= 12)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  NPduSize_35 = 12;
  # DEBUG NPduSize => NPduSize_35
  goto <bb 26>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (FrameLength_13 <= 16)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  NPduSize_34 = 16;
  # DEBUG NPduSize => NPduSize_34
  goto <bb 26>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (FrameLength_13 <= 20)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  NPduSize_33 = 20;
  # DEBUG NPduSize => NPduSize_33
  goto <bb 26>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  if (FrameLength_13 <= 24)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  NPduSize_32 = 24;
  # DEBUG NPduSize => NPduSize_32
  goto <bb 26>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  if (FrameLength_13 <= 32)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  NPduSize_31 = 32;
  # DEBUG NPduSize => NPduSize_31
  goto <bb 26>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  if (FrameLength_13 <= 48)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  NPduSize_30 = 48;
  # DEBUG NPduSize => NPduSize_30
  goto <bb 26>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  NPduSize_29 = 64;
  # DEBUG NPduSize => NPduSize_29
  goto <bb 26>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  if (Padding_26(D) != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  NPduSize_27 = 8;
  # DEBUG NPduSize => NPduSize_27

  <bb 26> :
  # NPduSize_12 = PHI <NPduSize_36(10), NPduSize_11(24), NPduSize_27(25), NPduSize_37(7), NPduSize_11(9), NPduSize_29(23), NPduSize_30(22), NPduSize_31(20), NPduSize_32(18), NPduSize_33(16), NPduSize_34(14), NPduSize_35(12)>
  # PaddingByte_14 = PHI <PaddingByte_28(10), PaddingByte_17(24), PaddingByte_17(25), PaddingByte_28(7), PaddingByte_28(9), PaddingByte_28(23), PaddingByte_28(22), PaddingByte_28(20), PaddingByte_28(18), PaddingByte_28(16), PaddingByte_28(14), PaddingByte_28(12)>
  # DEBUG PaddingByte => PaddingByte_14
  # DEBUG NPduSize => NPduSize_12
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_18(D) != 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  # DEBUG BEGIN_STMT
  _4 = FCBufferPtr_18(D)->SduLength;
  Idx_40 = (uint8_least) _4;
  # DEBUG Idx => Idx_40
  # DEBUG BEGIN_STMT
  FCBufferPtr_18(D)->SduLength = NPduSize_12;
  goto <bb 33>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  _5 = ChannelPtr_20(D)->CanIfDLC;
  Idx_38 = (uint8_least) _5;
  # DEBUG Idx => Idx_38
  # DEBUG BEGIN_STMT
  _6 = (unsigned char) NPduSize_12;
  ChannelPtr_20(D)->CanIfDLC = _6;
  goto <bb 33>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  if (FCBufferPtr_18(D) != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  # DEBUG BEGIN_STMT
  _7 = FCBufferPtr_18(D)->SduDataPtr;
  _8 = _7 + Idx_10;
  *_8 = PaddingByte_14;
  goto <bb 32>; [INV]

  <bb 31> :
  # DEBUG BEGIN_STMT
  ChannelPtr_20(D)->CanIfData[Idx_10] = PaddingByte_14;

  <bb 32> :
  # DEBUG BEGIN_STMT
  Idx_44 = Idx_10 + 1;
  # DEBUG Idx => Idx_44

  <bb 33> :
  # Idx_10 = PHI <Idx_38(28), Idx_44(32), Idx_40(27)>
  # DEBUG Idx => Idx_10
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) NPduSize_12;
  if (Idx_10 < _9)
    goto <bb 29>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  return;

}


CanTp_PreparexF (struct CanTp_ChannelType * ChannelPtr)
{
  const uint16 TotalLength;
  const uint32 TotalLength;
  uint8 NPduLength;
  uint8 DataIndex;
  const PduIdType NSduId;
  const struct CanTp_ConfigType * CanTp_CfgPtr.51_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.52_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct CanTp_TxNSduConfigType * _7;
  unsigned char _8;
  const struct CanTp_ConfigType * CanTp_CfgPtr.53_9;
  const struct CanTp_ConfigType * CanTp_CfgPtr.54_10;
  long unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  sizetype _14;
  const struct CanTp_TxNSduConfigType * _15;
  int _16;
  unsigned char _17;
  unsigned char _18;
  int _19;
  short unsigned int _20;
  unsigned char _21;
  unsigned char _22;
  int _23;
  unsigned char DataIndex.55_24;
  short unsigned int _25;
  int _26;
  unsigned char _27;
  short unsigned int _28;
  unsigned char _29;
  int _30;
  unsigned char _31;
  unsigned char DataIndex.56_32;
  short unsigned int _33;
  short unsigned int _34;
  int _35;
  unsigned char DataIndex.57_36;
  int _37;
  unsigned char DataIndex.58_38;
  long unsigned int _39;
  int _40;
  unsigned char _41;
  unsigned char DataIndex.59_42;
  long unsigned int _43;
  int _44;
  unsigned char _45;
  unsigned char DataIndex.60_46;
  long unsigned int _47;
  int _48;
  unsigned char _49;
  unsigned char DataIndex.61_50;
  int _51;
  unsigned char _52;
  unsigned char DataIndex.62_53;
  short unsigned int _54;
  unsigned char _55;
  int _56;
  unsigned char _57;
  unsigned char DataIndex.63_58;
  int _59;
  unsigned char _60;
  unsigned char DataIndex.64_61;
  unsigned char _62;
  int _63;
  unsigned char _64;
  unsigned char DataIndex.65_65;
  unsigned char _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NSduId_84 = ChannelPtr_83(D)->NSduId;
  # DEBUG NSduId => NSduId_84
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  DataIndex_85 = 0;
  # DEBUG DataIndex => DataIndex_85
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.51_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.52_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.52_2->TxNSduConfigPtr;
  _4 = (unsigned int) NSduId_84;
  _5 = _4 * 24;
  _6 = _3 + _5;
  _7 = CanTp_CfgPtr.51_1 + _6;
  _8 = _7->AddressingFormat;
  if (_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.53_9 = CanTp_CfgPtr;
  CanTp_CfgPtr.54_10 = CanTp_CfgPtr;
  _11 = CanTp_CfgPtr.54_10->TxNSduConfigPtr;
  _12 = (unsigned int) NSduId_84;
  _13 = _12 * 24;
  _14 = _11 + _13;
  _15 = CanTp_CfgPtr.53_9 + _14;
  _16 = (int) DataIndex_85;
  _17 = _15->N_TA_AE;
  ChannelPtr_83(D)->CanIfData[_16] = _17;
  # DEBUG BEGIN_STMT
  DataIndex_87 = 1;
  # DEBUG DataIndex => DataIndex_87

  <bb 4> :
  # DataIndex_74 = PHI <DataIndex_85(2), DataIndex_87(3)>
  # DEBUG DataIndex => DataIndex_74
  # DEBUG BEGIN_STMT
  _18 = ChannelPtr_83(D)->State;
  _19 = (int) _18;
  switch (_19) <default: <L13> [INV], case 96: <L2> [INV], case 97: <L6> [INV], case 98: <L10> [INV]>

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  _20 = ChannelPtr_83(D)->TotalLength;
  _21 = (unsigned char) _20;
  _22 = DataIndex_74 + _21;
  NPduLength_113 = _22 + 1;
  # DEBUG NPduLength => NPduLength_113
  # DEBUG BEGIN_STMT
  if (NPduLength_113 > 8)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _23 = (int) DataIndex_74;
  ChannelPtr_83(D)->CanIfData[_23] = 0;
  # DEBUG BEGIN_STMT
  DataIndex.55_24 = DataIndex_74;
  DataIndex_116 = DataIndex.55_24 + 1;
  # DEBUG DataIndex => DataIndex_116
  # DEBUG BEGIN_STMT
  _25 = ChannelPtr_83(D)->TotalLength;
  _26 = (int) DataIndex_116;
  _27 = (unsigned char) _25;
  ChannelPtr_83(D)->CanIfData[_26] = _27;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _28 = ChannelPtr_83(D)->TotalLength;
  _29 = (unsigned char) _28;
  _30 = (int) DataIndex_74;
  _31 = _29 & 15;
  ChannelPtr_83(D)->CanIfData[_30] = _31;

  <bb 8> :
  # DataIndex_75 = PHI <DataIndex_116(6), DataIndex_74(7)>
  # DEBUG DataIndex => DataIndex_75
  # DEBUG BEGIN_STMT
  DataIndex.56_32 = DataIndex_75;
  DataIndex_118 = DataIndex.56_32 + 1;
  # DEBUG DataIndex => DataIndex_118
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  _33 = ChannelPtr_83(D)->TotalLength;
  if (_33 > 4095)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _34 = ChannelPtr_83(D)->TotalLength;
  TotalLength_98 = (const uint32) _34;
  # DEBUG TotalLength => TotalLength_98
  # DEBUG BEGIN_STMT
  _35 = (int) DataIndex_74;
  ChannelPtr_83(D)->CanIfData[_35] = 16;
  # DEBUG BEGIN_STMT
  DataIndex.57_36 = DataIndex_74;
  DataIndex_100 = DataIndex.57_36 + 1;
  # DEBUG DataIndex => DataIndex_100
  # DEBUG BEGIN_STMT
  _37 = (int) DataIndex_100;
  ChannelPtr_83(D)->CanIfData[_37] = 0;
  # DEBUG BEGIN_STMT
  DataIndex.58_38 = DataIndex_100;
  DataIndex_102 = DataIndex.58_38 + 1;
  # DEBUG DataIndex => DataIndex_102
  # DEBUG BEGIN_STMT
  _39 = TotalLength_98 >> 24;
  _40 = (int) DataIndex_102;
  _41 = (unsigned char) _39;
  ChannelPtr_83(D)->CanIfData[_40] = _41;
  # DEBUG BEGIN_STMT
  DataIndex.59_42 = DataIndex_102;
  DataIndex_104 = DataIndex.59_42 + 1;
  # DEBUG DataIndex => DataIndex_104
  # DEBUG BEGIN_STMT
  _43 = TotalLength_98 >> 16;
  _44 = (int) DataIndex_104;
  _45 = (unsigned char) _43;
  ChannelPtr_83(D)->CanIfData[_44] = _45;
  # DEBUG BEGIN_STMT
  DataIndex.60_46 = DataIndex_104;
  DataIndex_106 = DataIndex.60_46 + 1;
  # DEBUG DataIndex => DataIndex_106
  # DEBUG BEGIN_STMT
  _47 = TotalLength_98 >> 8;
  _48 = (int) DataIndex_106;
  _49 = (unsigned char) _47;
  ChannelPtr_83(D)->CanIfData[_48] = _49;
  # DEBUG BEGIN_STMT
  DataIndex.61_50 = DataIndex_106;
  DataIndex_108 = DataIndex.61_50 + 1;
  # DEBUG DataIndex => DataIndex_108
  # DEBUG BEGIN_STMT
  _51 = (int) DataIndex_108;
  _52 = (unsigned char) TotalLength_98;
  ChannelPtr_83(D)->CanIfData[_51] = _52;
  # DEBUG BEGIN_STMT
  DataIndex.62_53 = DataIndex_108;
  DataIndex_110 = DataIndex.62_53 + 1;
  # DEBUG DataIndex => DataIndex_110
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  TotalLength_93 = ChannelPtr_83(D)->TotalLength;
  # DEBUG TotalLength => TotalLength_93
  # DEBUG BEGIN_STMT
  _54 = TotalLength_93 >> 8;
  _55 = (unsigned char) _54;
  _56 = (int) DataIndex_74;
  _57 = _55 | 16;
  ChannelPtr_83(D)->CanIfData[_56] = _57;
  # DEBUG BEGIN_STMT
  DataIndex.63_58 = DataIndex_74;
  DataIndex_95 = DataIndex.63_58 + 1;
  # DEBUG DataIndex => DataIndex_95
  # DEBUG BEGIN_STMT
  _59 = (int) DataIndex_95;
  _60 = (unsigned char) TotalLength_93;
  ChannelPtr_83(D)->CanIfData[_59] = _60;
  # DEBUG BEGIN_STMT
  DataIndex.64_61 = DataIndex_95;
  DataIndex_97 = DataIndex.64_61 + 1;
  # DEBUG DataIndex => DataIndex_97

  <bb 12> :
  # DataIndex_76 = PHI <DataIndex_110(10), DataIndex_97(11)>
  # DEBUG DataIndex => DataIndex_76
  # DEBUG BEGIN_STMT
  ChannelPtr_83(D)->ProcessedBlockFrames = 1;
  # DEBUG BEGIN_STMT
  ChannelPtr_83(D)->BlockSize = 1;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 13> :
<L10>:
  # DEBUG BEGIN_STMT
  _62 = ChannelPtr_83(D)->SequenceNumber;
  _63 = (int) DataIndex_74;
  _64 = _62 | 32;
  ChannelPtr_83(D)->CanIfData[_63] = _64;
  # DEBUG BEGIN_STMT
  DataIndex.65_65 = DataIndex_74;
  DataIndex_89 = DataIndex.65_65 + 1;
  # DEBUG DataIndex => DataIndex_89
  # DEBUG BEGIN_STMT
  _66 = ChannelPtr_83(D)->SequenceNumber;
  _67 = _66;
  _68 = _67 + 1;
  ChannelPtr_83(D)->SequenceNumber = _68;
  # DEBUG BEGIN_STMT
  _69 = ChannelPtr_83(D)->SequenceNumber;
  _70 = _69 & 15;
  ChannelPtr_83(D)->SequenceNumber = _70;
  # DEBUG BEGIN_STMT
  _71 = ChannelPtr_83(D)->ProcessedBlockFrames;
  _72 = _71;
  _73 = _72 + 1;
  ChannelPtr_83(D)->ProcessedBlockFrames = _73;
  # DEBUG BEGIN_STMT

  <bb 14> :
  # DataIndex_77 = PHI <DataIndex_118(8), DataIndex_76(12), DataIndex_89(13), DataIndex_74(4)>
<L13>:
  # DEBUG DataIndex => DataIndex_77
  # DEBUG BEGIN_STMT
  ChannelPtr_83(D)->CanIfDLC = DataIndex_77;
  return;

}


CanTp_CheckAndHandleWaitFrameTimeOut (struct CanTp_ChannelType * ChannelPtr)
{
  unsigned char _1;
  long unsigned int _2;
  const struct CanTp_ConfigType * CanTp_CfgPtr.49_3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.50_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct CanTp_RxNSduConfigType * _10;
  short unsigned int _11;
  long unsigned int _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_15(D)->WftCounter;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_15(D)->Ticks;
  CanTp_CfgPtr.49_3 = CanTp_CfgPtr;
  CanTp_CfgPtr.50_4 = CanTp_CfgPtr;
  _5 = CanTp_CfgPtr.50_4->RxNSduConfigPtr;
  _6 = ChannelPtr_15(D)->NSduId;
  _7 = (unsigned int) _6;
  _8 = _7 * 26;
  _9 = _5 + _8;
  _10 = CanTp_CfgPtr.49_3 + _9;
  _11 = _10->N_Ar;
  _12 = (long unsigned int) _11;
  if (_2 <= _12)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_TryToSendFC (ChannelPtr_15(D), 6);

  <bb 5> :
  return;

}


CanTp_VerifyBlockSize (struct CanTp_ChannelType * ChannelPtr)
{
  uint8 ActualBlockSize;
  Std_ReturnType BSCalc_Ok;
  const PduLengthType RemainingBytes;
  boolean Ret_BS_Ok;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  unsigned char ActualBlockSize.48_5;
  boolean _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_10(D)->TotalLength;
  _2 = ChannelPtr_10(D)->ProcessedLength;
  RemainingBytes_11 = _1 - _2;
  # DEBUG RemainingBytes => RemainingBytes_11
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_10(D)->ActualBufferSize;
  if (RemainingBytes_11 <= _3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Ret_BS_Ok_18 = 1;
  # DEBUG Ret_BS_Ok => Ret_BS_Ok_18
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BSCalc_Ok_13 = CanTp_CalculateBlockSize (ChannelPtr_10(D), &ActualBlockSize);
  # DEBUG BSCalc_Ok => BSCalc_Ok_13
  # DEBUG BEGIN_STMT
  if (BSCalc_Ok_13 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = ChannelPtr_10(D)->BlockSize;
  ActualBlockSize.48_5 = ActualBlockSize;
  if (_4 <= ActualBlockSize.48_5)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Ret_BS_Ok_16 = 1;
  # DEBUG Ret_BS_Ok => Ret_BS_Ok_16
  goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Ret_BS_Ok_15 = 0;
  # DEBUG Ret_BS_Ok => Ret_BS_Ok_15
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Ret_BS_Ok_14 = 0;
  # DEBUG Ret_BS_Ok => Ret_BS_Ok_14

  <bb 9> :
  # Ret_BS_Ok_6 = PHI <Ret_BS_Ok_15(7), Ret_BS_Ok_14(8), Ret_BS_Ok_16(6)>
  # DEBUG Ret_BS_Ok => Ret_BS_Ok_6
  ActualBlockSize ={v} {CLOBBER};

  <bb 10> :
  # Ret_BS_Ok_7 = PHI <Ret_BS_Ok_18(3), Ret_BS_Ok_6(9)>
  # DEBUG Ret_BS_Ok => Ret_BS_Ok_7
  # DEBUG BEGIN_STMT
  _19 = Ret_BS_Ok_7;
  return _19;

}


CanTp_CalculateBlockSize (struct CanTp_ChannelType * ChannelPtr, uint8 * BlockSizePtr)
{
  const uint8 NSduMaxSize;
  const struct CanTp_RxNSduConfigType * const RxNSduCfgPtr;
  Std_ReturnType Ret_BSCalc;
  PduLengthType BlockSizeTmp;
  const PduLengthType RemainingBytes;
  const PduIdType NSduId;
  short unsigned int _1;
  short unsigned int _2;
  const struct CanTp_ConfigType * CanTp_CfgPtr.35_3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.36_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct CanTp_ConfigType * CanTp_CfgPtr.37_10;
  const struct CanTp_ConfigType * CanTp_CfgPtr.38_11;
  long unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  sizetype _15;
  const struct CanTp_RxNSduConfigType * _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  short unsigned int _22;
  const struct CanTp_ConfigType * CanTp_CfgPtr.40_23;
  const struct CanTp_ConfigType * CanTp_CfgPtr.41_24;
  long unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  sizetype _28;
  const struct CanTp_RxNSduConfigType * _29;
  unsigned char _30;
  short unsigned int _31;
  int _32;
  int _33;
  int _34;
  const struct CanTp_ConfigType * CanTp_CfgPtr.42_35;
  const struct CanTp_ConfigType * CanTp_CfgPtr.43_36;
  long unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  sizetype _40;
  const struct CanTp_RxNSduConfigType * _41;
  unsigned char _42;
  short unsigned int _43;
  const struct CanTp_ConfigType * CanTp_CfgPtr.44_44;
  const struct CanTp_ConfigType * CanTp_CfgPtr.45_45;
  long unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  sizetype _49;
  const struct CanTp_RxNSduConfigType * _50;
  unsigned char _51;
  const struct CanTp_ConfigType * CanTp_CfgPtr.46_52;
  const struct CanTp_ConfigType * CanTp_CfgPtr.47_53;
  long unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  sizetype _57;
  const struct CanTp_RxNSduConfigType * _58;
  unsigned char _59;
  unsigned char _60;
  int iftmp.39_64;
  int iftmp.39_70;
  int iftmp.39_71;
  Std_ReturnType _82;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NSduId_67 = ChannelPtr_66(D)->NSduId;
  # DEBUG NSduId => NSduId_67
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_66(D)->TotalLength;
  _2 = ChannelPtr_66(D)->ProcessedLength;
  RemainingBytes_68 = _1 - _2;
  # DEBUG RemainingBytes => RemainingBytes_68
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.35_3 = CanTp_CfgPtr;
  CanTp_CfgPtr.36_4 = CanTp_CfgPtr;
  _5 = CanTp_CfgPtr.36_4->RxNSduConfigPtr;
  _6 = ChannelPtr_66(D)->NSduId;
  _7 = (unsigned int) _6;
  _8 = _7 * 26;
  _9 = _5 + _8;
  RxNSduCfgPtr_69 = CanTp_CfgPtr.35_3 + _9;
  # DEBUG RxNSduCfgPtr => RxNSduCfgPtr_69
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.37_10 = CanTp_CfgPtr;
  CanTp_CfgPtr.38_11 = CanTp_CfgPtr;
  _12 = CanTp_CfgPtr.38_11->RxNSduConfigPtr;
  _13 = (unsigned int) NSduId_67;
  _14 = _13 * 26;
  _15 = _12 + _14;
  _16 = CanTp_CfgPtr.37_10 + _15;
  _17 = _16->NPduLength;
  _18 = RxNSduCfgPtr_69->AddressingFormat;
  if (_18 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _19 = RxNSduCfgPtr_69->AddressingFormat;
  if (_19 != 3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.39_70 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.39_71 = 0;

  <bb 6> :
  # iftmp.39_64 = PHI <iftmp.39_70(4), iftmp.39_71(5)>
  _20 = (unsigned char) iftmp.39_64;
  _21 = _17 - _20;
  NSduMaxSize_72 = _21 + 255;
  # DEBUG NSduMaxSize => NSduMaxSize_72
  # DEBUG BEGIN_STMT
  _22 = ChannelPtr_66(D)->ActualBufferSize;
  if (RemainingBytes_68 <= _22)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.40_23 = CanTp_CfgPtr;
  CanTp_CfgPtr.41_24 = CanTp_CfgPtr;
  _25 = CanTp_CfgPtr.41_24->RxNSduConfigPtr;
  _26 = (unsigned int) NSduId_67;
  _27 = _26 * 26;
  _28 = _25 + _27;
  _29 = CanTp_CfgPtr.40_23 + _28;
  _30 = _29->BS;
  BlockSizeTmp_78 = (PduLengthType) _30;
  # DEBUG BlockSizeTmp => BlockSizeTmp_78
  # DEBUG BEGIN_STMT
  Ret_BSCalc_79 = 0;
  # DEBUG Ret_BSCalc => Ret_BSCalc_79
  goto <bb 15>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _31 = ChannelPtr_66(D)->ActualBufferSize;
  _32 = (int) _31;
  _33 = (int) NSduMaxSize_72;
  _34 = _32 / _33;
  BlockSizeTmp_73 = (PduLengthType) _34;
  # DEBUG BlockSizeTmp => BlockSizeTmp_73
  # DEBUG BEGIN_STMT
  if (BlockSizeTmp_73 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Ret_BSCalc_75 = 0;
  # DEBUG Ret_BSCalc => Ret_BSCalc_75
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.42_35 = CanTp_CfgPtr;
  CanTp_CfgPtr.43_36 = CanTp_CfgPtr;
  _37 = CanTp_CfgPtr.43_36->RxNSduConfigPtr;
  _38 = (unsigned int) NSduId_67;
  _39 = _38 * 26;
  _40 = _37 + _39;
  _41 = CanTp_CfgPtr.42_35 + _40;
  _42 = _41->BS;
  _43 = (short unsigned int) _42;
  if (BlockSizeTmp_73 > _43)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  CanTp_CfgPtr.44_44 = CanTp_CfgPtr;
  CanTp_CfgPtr.45_45 = CanTp_CfgPtr;
  _46 = CanTp_CfgPtr.45_45->RxNSduConfigPtr;
  _47 = (unsigned int) NSduId_67;
  _48 = _47 * 26;
  _49 = _46 + _48;
  _50 = CanTp_CfgPtr.44_44 + _49;
  _51 = _50->BS;
  if (_51 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.46_52 = CanTp_CfgPtr;
  CanTp_CfgPtr.47_53 = CanTp_CfgPtr;
  _54 = CanTp_CfgPtr.47_53->RxNSduConfigPtr;
  _55 = (unsigned int) NSduId_67;
  _56 = _55 * 26;
  _57 = _54 + _56;
  _58 = CanTp_CfgPtr.46_52 + _57;
  _59 = _58->BS;
  BlockSizeTmp_76 = (PduLengthType) _59;
  # DEBUG BlockSizeTmp => BlockSizeTmp_76

  <bb 12> :
  # BlockSizeTmp_61 = PHI <BlockSizeTmp_73(9), BlockSizeTmp_73(10), BlockSizeTmp_76(11)>
  # DEBUG BlockSizeTmp => BlockSizeTmp_61
  # DEBUG BEGIN_STMT
  if (BlockSizeTmp_61 > 254)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  BlockSizeTmp_77 = 255;
  # DEBUG BlockSizeTmp => BlockSizeTmp_77
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  Ret_BSCalc_74 = 1;
  # DEBUG Ret_BSCalc => Ret_BSCalc_74

  <bb 15> :
  # BlockSizeTmp_62 = PHI <BlockSizeTmp_78(7), BlockSizeTmp_77(13), BlockSizeTmp_73(14), BlockSizeTmp_61(12)>
  # Ret_BSCalc_63 = PHI <Ret_BSCalc_79(7), Ret_BSCalc_75(13), Ret_BSCalc_74(14), Ret_BSCalc_75(12)>
  # DEBUG Ret_BSCalc => Ret_BSCalc_63
  # DEBUG BlockSizeTmp => BlockSizeTmp_62
  # DEBUG BEGIN_STMT
  _60 = (unsigned char) BlockSizeTmp_62;
  *BlockSizePtr_80(D) = _60;
  # DEBUG BEGIN_STMT
  _82 = Ret_BSCalc_63;
  return _82;

}


CanTp_PrepareFC (struct CanTp_ChannelType * ChannelPtr, uint8 FcNPCI_Header)
{
  struct PduInfoType Local_Buffer;
  uint8 FC_Data[64];
  uint8 DataIndex;
  const PduIdType NSduId;
  const struct CanTp_ConfigType * CanTp_CfgPtr.20_1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.21_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct CanTp_RxNSduConfigType * _7;
  unsigned char _8;
  const struct CanTp_ConfigType * CanTp_CfgPtr.22_9;
  const struct CanTp_ConfigType * CanTp_CfgPtr.23_10;
  long unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  sizetype _14;
  const struct CanTp_RxNSduConfigType * _15;
  unsigned char _16;
  int _17;
  unsigned char DataIndex.24_18;
  int _19;
  unsigned char _20;
  unsigned char DataIndex.25_21;
  const struct CanTp_ConfigType * CanTp_CfgPtr.26_22;
  const struct CanTp_ConfigType * CanTp_CfgPtr.27_23;
  long unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  sizetype _27;
  const struct CanTp_RxNSduConfigType * _28;
  int _29;
  unsigned char _30;
  unsigned char DataIndex.28_31;
  short unsigned int _32;
  const struct CanTp_ConfigType * CanTp_CfgPtr.29_33;
  const struct CanTp_ConfigType * CanTp_CfgPtr.30_34;
  long unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  sizetype _38;
  const struct CanTp_RxNSduConfigType * _39;
  unsigned char _40;
  const struct CanTp_ConfigType * CanTp_CfgPtr.31_41;
  const struct CanTp_ConfigType * CanTp_CfgPtr.32_42;
  long unsigned int _43;
  unsigned int _44;
  unsigned int _45;
  sizetype _46;
  const struct CanTp_RxNSduConfigType * _47;
  unsigned char _48;
  const struct CanTp_ConfigType * CanTp_CfgPtr.33_49;
  const struct CanTp_ConfigType * CanTp_CfgPtr.34_50;
  long unsigned int _51;
  unsigned int _52;
  unsigned int _53;
  sizetype _54;
  const struct CanTp_RxNSduConfigType * _55;
  short unsigned int _56;
  long unsigned int _57;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NSduId_62 = ChannelPtr_61(D)->NSduId;
  # DEBUG NSduId => NSduId_62
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.20_1 = CanTp_CfgPtr;
  CanTp_CfgPtr.21_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.21_2->RxNSduConfigPtr;
  _4 = (unsigned int) NSduId_62;
  _5 = _4 * 26;
  _6 = _3 + _5;
  _7 = CanTp_CfgPtr.20_1 + _6;
  _8 = _7->AddressingFormat;
  if (_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.22_9 = CanTp_CfgPtr;
  CanTp_CfgPtr.23_10 = CanTp_CfgPtr;
  _11 = CanTp_CfgPtr.23_10->RxNSduConfigPtr;
  _12 = (unsigned int) NSduId_62;
  _13 = _12 * 26;
  _14 = _11 + _13;
  _15 = CanTp_CfgPtr.22_9 + _14;
  _16 = _15->N_TA_AE;
  FC_Data[0] = _16;
  # DEBUG BEGIN_STMT
  DataIndex_65 = 1;
  # DEBUG DataIndex => DataIndex_65
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  DataIndex_63 = 0;
  # DEBUG DataIndex => DataIndex_63

  <bb 5> :
  # DataIndex_58 = PHI <DataIndex_65(3), DataIndex_63(4)>
  # DEBUG DataIndex => DataIndex_58
  # DEBUG BEGIN_STMT
  _17 = (int) DataIndex_58;
  FC_Data[_17] = FcNPCI_Header_66(D);
  # DEBUG BEGIN_STMT
  DataIndex.24_18 = DataIndex_58;
  DataIndex_68 = DataIndex.24_18 + 1;
  # DEBUG DataIndex => DataIndex_68
  # DEBUG BEGIN_STMT
  _19 = (int) DataIndex_68;
  _20 = ChannelPtr_61(D)->BlockSize;
  FC_Data[_19] = _20;
  # DEBUG BEGIN_STMT
  DataIndex.25_21 = DataIndex_68;
  DataIndex_70 = DataIndex.25_21 + 1;
  # DEBUG DataIndex => DataIndex_70
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.26_22 = CanTp_CfgPtr;
  CanTp_CfgPtr.27_23 = CanTp_CfgPtr;
  _24 = CanTp_CfgPtr.27_23->RxNSduConfigPtr;
  _25 = (unsigned int) NSduId_62;
  _26 = _25 * 26;
  _27 = _24 + _26;
  _28 = CanTp_CfgPtr.26_22 + _27;
  _29 = (int) DataIndex_70;
  _30 = _28->STmin;
  FC_Data[_29] = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  DataIndex.28_31 = DataIndex_70;
  DataIndex_72 = DataIndex.28_31 + 1;
  # DEBUG DataIndex => DataIndex_72
  # DEBUG BEGIN_STMT
  _32 = (short unsigned int) DataIndex_72;
  Local_Buffer.SduLength = _32;
  # DEBUG BEGIN_STMT
  Local_Buffer.SduDataPtr = &FC_Data[0];
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.29_33 = CanTp_CfgPtr;
  CanTp_CfgPtr.30_34 = CanTp_CfgPtr;
  _35 = CanTp_CfgPtr.30_34->RxNSduConfigPtr;
  _36 = (unsigned int) NSduId_62;
  _37 = _36 * 26;
  _38 = _35 + _37;
  _39 = CanTp_CfgPtr.29_33 + _38;
  _40 = _39->PaddingActivation;
  CanTp_CfgPtr.31_41 = CanTp_CfgPtr;
  CanTp_CfgPtr.32_42 = CanTp_CfgPtr;
  _43 = CanTp_CfgPtr.32_42->RxNSduConfigPtr;
  _44 = (unsigned int) NSduId_62;
  _45 = _44 * 26;
  _46 = _43 + _45;
  _47 = CanTp_CfgPtr.31_41 + _46;
  _48 = _47->FcCanIdType;
  CanTp_PreparePadding (ChannelPtr_61(D), _40, _48, &Local_Buffer);
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.33_49 = CanTp_CfgPtr;
  CanTp_CfgPtr.34_50 = CanTp_CfgPtr;
  _51 = CanTp_CfgPtr.34_50->RxNSduConfigPtr;
  _52 = (unsigned int) NSduId_62;
  _53 = _52 * 26;
  _54 = _51 + _53;
  _55 = CanTp_CfgPtr.33_49 + _54;
  _56 = _55->N_Ar;
  _57 = (long unsigned int) _56;
  ChannelPtr_61(D)->Ticks = _57;
  # DEBUG BEGIN_STMT
  CanTp_TransmitFrame (ChannelPtr_61(D), &Local_Buffer);
  FC_Data ={v} {CLOBBER};
  Local_Buffer ={v} {CLOBBER};
  return;

}


CanTp_StallHandling (struct CanTp_ChannelType * ChannelPtr)
{
  Std_ReturnType RetVal;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  Std_ReturnType _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_7 = 1;
  # DEBUG RetVal => RetVal_7
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_9(D)->ChannelLockFlag;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_9(D)->PostTicks;
  _3 = _2;
  _4 = _3 + 1;
  ChannelPtr_9(D)->PostTicks = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal_10 = 0;
  # DEBUG RetVal => RetVal_10

  <bb 5> :
  # RetVal_5 = PHI <RetVal_7(3), RetVal_10(4)>
  # DEBUG RetVal => RetVal_5
  # DEBUG BEGIN_STMT
  _12 = RetVal_5;
  return _12;

}


CanTp_ChannelHandling (CanTp_ChType Channel)
{
  Std_ReturnType RetVal;
  struct CanTp_ChannelType * ChannelPtr;
  int _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  unsigned char _6;
  unsigned int _7;
  unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RetVal_13 = 1;
  # DEBUG RetVal => RetVal_13
  # DEBUG BEGIN_STMT
  _1 = (int) Channel_14(D);
  ChannelPtr_15 = &CanTp_Channel[_1];
  # DEBUG ChannelPtr => ChannelPtr_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = ChannelPtr_15->State;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal_19 = CanTp_StallHandling (ChannelPtr_15);
  # DEBUG RetVal => RetVal_19

  <bb 4> :
  # RetVal_9 = PHI <RetVal_13(2), RetVal_19(3)>
  # DEBUG RetVal => RetVal_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (RetVal_9 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_15->Ticks;
  if (_3 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_15->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TimeoutHandling (ChannelPtr_15);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_15->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _4 = ChannelPtr_15->Ticks;
  _5 = _4 + 4294967295;
  ChannelPtr_15->Ticks = _5;
  # DEBUG BEGIN_STMT
  _6 = ChannelPtr_15->State;
  _7 = (unsigned int) _6;
  _8 = _7 & 96;
  if (_8 == 64)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  CanTp_RxStateHandling (ChannelPtr_15);
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_15->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_TxStateHandling (ChannelPtr_15, 0);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_15->ChannelLockFlag = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_15);

  <bb 11> :
  return;

}


CanTp_TimeoutHandling (struct CanTp_ChannelType * ChannelPtr)
{
  CanTp_ChType Rx_ChannelID;
  CanTp_TxChannelType Tx_ChannelID;
  unsigned char _1;
  int _2;
  const struct CanTp_ConfigType * CanTp_CfgPtr.16_3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.17_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct CanTp_RxNSduConfigType * _10;
  const struct CanTp_ConfigType * CanTp_CfgPtr.18_11;
  const struct CanTp_ConfigType * CanTp_CfgPtr.19_12;
  long unsigned int _13;
  short unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  const struct CanTp_TxNSduConfigType * _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Tx_ChannelID_20 = 255;
  # DEBUG Tx_ChannelID => Tx_ChannelID_20
  # DEBUG BEGIN_STMT
  Rx_ChannelID_21 = 255;
  # DEBUG Rx_ChannelID => Rx_ChannelID_21
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_23(D)->State;
  _2 = (int) _1;
  switch (_2) <default: <L17> [INV], case 64: <L2> [INV], case 65 ... 66: <L0> [INV], case 84 ... 86: <L3> [INV], case 112 ... 114: <L7> [INV], case 194: <L6> [INV], case 204 ... 206: <L10> [INV], case 228: <L16> [INV], case 232 ... 234: <L10> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_23(D), 1, 8);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 4> :
<L2>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_23(D), 1, 1);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 5> :
<L3>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.16_3 = CanTp_CfgPtr;
  CanTp_CfgPtr.17_4 = CanTp_CfgPtr;
  _5 = CanTp_CfgPtr.17_4->RxNSduConfigPtr;
  _6 = ChannelPtr_23(D)->NSduId;
  _7 = (unsigned int) _6;
  _8 = _7 * 26;
  _9 = _5 + _8;
  _10 = CanTp_CfgPtr.16_3 + _9;
  Tx_ChannelID_30 = _10->Tx_Channel;
  # DEBUG Tx_ChannelID => Tx_ChannelID_30
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_23(D), 1, 2);
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFrame (Tx_ChannelID_30);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 6> :
<L6>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_23(D), 1, 4);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 7> :
<L7>:
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.18_11 = CanTp_CfgPtr;
  CanTp_CfgPtr.19_12 = CanTp_CfgPtr;
  _13 = CanTp_CfgPtr.19_12->TxNSduConfigPtr;
  _14 = ChannelPtr_23(D)->NSduId;
  _15 = (unsigned int) _14;
  _16 = _15 * 24;
  _17 = _13 + _16;
  _18 = CanTp_CfgPtr.18_11 + _17;
  Rx_ChannelID_27 = _18->Rx_Channel;
  # DEBUG Rx_ChannelID => Rx_ChannelID_27
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_23(D), 1, 2);
  # DEBUG BEGIN_STMT
  CanTp_TransmitPostponedFlowControl (Rx_ChannelID_27);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 8> :
<L10>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_23(D), 1, 2);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 9> :
<L16>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_23(D), 1, 3);
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 10> :
<L17>:
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_23(D), 1, 1);
  # DEBUG BEGIN_STMT

  <bb 11> :
  return;

}


CanTp_MainFunction ()
{
  uint32 MfCounterTicks;
  CanTp_ChType No_of_nonIdleChannels;
  CanTp_ChType Channel;
  struct CanTp_ChannelType * ChannelPtr;
  unsigned char _1;
  int _2;
  unsigned char Channel.12_3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.13_4;
  unsigned char _5;
  const struct CanTp_ConfigType * CanTp_CfgPtr.14_6;
  unsigned char Channel.15_7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  No_of_nonIdleChannels_14 = 0;
  # DEBUG No_of_nonIdleChannels => No_of_nonIdleChannels_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  No_of_nonIdleChannels_17 = CanTp_NonIdleChannelCounter;
  # DEBUG No_of_nonIdleChannels => No_of_nonIdleChannels_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  if (No_of_nonIdleChannels_17 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Channel_19 = 0;
  # DEBUG Channel => Channel_19
  goto <bb 9>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (int) Channel_8;
  ChannelPtr_23 = &CanTp_Channel[_2];
  # DEBUG ChannelPtr => ChannelPtr_23
  # DEBUG BEGIN_STMT
  MfCounterTicks_24 = ChannelPtr_23->MfCounterTicks;
  # DEBUG MfCounterTicks => MfCounterTicks_24
  # DEBUG BEGIN_STMT
  if (MfCounterTicks_24 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  MfCounterTicks_25 = MfCounterTicks_24 + 4294967295;
  # DEBUG MfCounterTicks => MfCounterTicks_25
  # DEBUG BEGIN_STMT
  ChannelPtr_23->MfCounterTicks = MfCounterTicks_25;
  # DEBUG BEGIN_STMT
  if (MfCounterTicks_25 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  CanTp_STminCallback (Channel_8);

  <bb 8> :
  # DEBUG BEGIN_STMT
  Channel.12_3 = Channel_8;
  Channel_28 = Channel.12_3 + 1;
  # DEBUG Channel => Channel_28

  <bb 9> :
  # Channel_8 = PHI <Channel_19(4), Channel_28(8)>
  # DEBUG Channel => Channel_8
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.13_4 = CanTp_CfgPtr;
  _5 = CanTp_CfgPtr.13_4->NumberOfTxChannels;
  if (Channel_8 < _5)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.14_6 = CanTp_CfgPtr;
  Channel_20 = CanTp_CfgPtr.14_6->NumberOfChannels;
  # DEBUG Channel => Channel_20

  <bb 11> :
  # Channel_9 = PHI <Channel_20(10), Channel_21(11)>
  # DEBUG Channel => Channel_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Channel.15_7 = Channel_9;
  Channel_21 = Channel.15_7 + 255;
  # DEBUG Channel => Channel_21
  # DEBUG BEGIN_STMT
  CanTp_ChannelHandling (Channel_21);
  # DEBUG BEGIN_STMT
  if (Channel_21 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  return;

}


CanTp_CancelTransmit (PduIdType CanTpTxSduId)
{
  struct CanTp_ChannelType * ChannelPtr;
  Std_ReturnType IsChannelAvailable;
  boolean ChannelLockSuccess;
  CanTp_TxChannelType Channel;
  Std_ReturnType ret_result;
  unsigned char _1;
  const struct CanTp_ConfigType * CanTp_CfgPtr.7_2;
  short unsigned int _3;
  const struct CanTp_ConfigType * CanTp_CfgPtr.8_4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.9_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct CanTp_TxNSduConfigType * _10;
  unsigned char _11;
  const struct CanTp_ConfigType * CanTp_CfgPtr.10_12;
  const struct CanTp_ConfigType * CanTp_CfgPtr.11_13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  const struct CanTp_TxNSduConfigType * _18;
  int _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned char _22;
  int _23;
  Std_ReturnType _57;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ret_result_33 = 1;
  # DEBUG ret_result => ret_result_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanTp_InitVars.State;
  if (_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 8, 32);
  goto <bb 21>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.7_2 = CanTp_CfgPtr;
  _3 = CanTp_CfgPtr.7_2->NumberTxNSdus;
  if (CanTpTxSduId_35(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 8, 2);
  goto <bb 21>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.8_4 = CanTp_CfgPtr;
  CanTp_CfgPtr.9_5 = CanTp_CfgPtr;
  _6 = CanTp_CfgPtr.9_5->TxNSduConfigPtr;
  _7 = (unsigned int) CanTpTxSduId_35(D);
  _8 = _7 * 24;
  _9 = _6 + _8;
  _10 = CanTp_CfgPtr.8_4 + _9;
  _11 = _10->CanTpTc;
  if (_11 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IsChannelAvailable_36 = 1;
  # DEBUG IsChannelAvailable => IsChannelAvailable_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.10_12 = CanTp_CfgPtr;
  CanTp_CfgPtr.11_13 = CanTp_CfgPtr;
  _14 = CanTp_CfgPtr.11_13->TxNSduConfigPtr;
  _15 = (unsigned int) CanTpTxSduId_35(D);
  _16 = _15 * 24;
  _17 = _14 + _16;
  _18 = CanTp_CfgPtr.10_12 + _17;
  Channel_37 = _18->Channel;
  # DEBUG Channel => Channel_37
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _19 = (int) Channel_37;
  ChannelPtr_38 = &CanTp_Channel[_19];
  # DEBUG ChannelPtr => ChannelPtr_38
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = ChannelPtr_38->ChannelLockFlag;
  if (_20 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ChannelLockSuccess_42 = 0;
  # DEBUG ChannelLockSuccess => ChannelLockSuccess_42
  # DEBUG BEGIN_STMT
  ret_result_43 = 1;
  # DEBUG ret_result => ret_result_43
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_38->ChannelLockFlag = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelLockSuccess_41 = 1;
  # DEBUG ChannelLockSuccess => ChannelLockSuccess_41

  <bb 10> :
  # ret_result_24 = PHI <ret_result_43(8), ret_result_33(9)>
  # ChannelLockSuccess_28 = PHI <ChannelLockSuccess_42(8), ChannelLockSuccess_41(9)>
  # DEBUG ChannelLockSuccess => ChannelLockSuccess_28
  # DEBUG ret_result => ret_result_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ChannelLockSuccess_28 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _21 = ChannelPtr_38->NSduId;
  if (CanTpTxSduId_35(D) == _21)
    goto <bb 12>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _22 = ChannelPtr_38->State;
  _23 = (int) _22;
  switch (_23) <default: <L22> [INV], case 96: <L10> [INV], case 97 ... 98: <L12> [INV], case 106: <L12> [INV], case 112 ... 114: <L18> [INV], case 122: <L12> [INV], case 228: <L18> [INV], case 232: <L10> [INV], case 233 ... 234: <L12> [INV]>

  <bb 13> :
<L10>:
  # DEBUG BEGIN_STMT
  ret_result_49 = 1;
  # DEBUG ret_result => ret_result_49
  # DEBUG BEGIN_STMT
  goto <bb 17>; [INV]

  <bb 14> :
<L12>:
  # DEBUG BEGIN_STMT
  ret_result_48 = 0;
  # DEBUG ret_result => ret_result_48
  # DEBUG BEGIN_STMT
  goto <bb 17>; [INV]

  <bb 15> :
<L18>:
  # DEBUG BEGIN_STMT
  ret_result_47 = 1;
  # DEBUG ret_result => ret_result_47
  # DEBUG BEGIN_STMT
  goto <bb 17>; [INV]

  <bb 16> :
<L22>:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 8, 160);
  # DEBUG BEGIN_STMT
  ret_result_51 = 1;
  # DEBUG ret_result => ret_result_51
  # DEBUG BEGIN_STMT

  <bb 17> :
  # ret_result_25 = PHI <ret_result_49(13), ret_result_48(14), ret_result_47(15), ret_result_51(16)>
  # DEBUG ret_result => ret_result_25
  # DEBUG BEGIN_STMT
  if (ret_result_25 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_38, 1, 1);
  goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 8, 160);
  # DEBUG BEGIN_STMT
  ret_result_46 = 1;
  # DEBUG ret_result => ret_result_46

  <bb 20> :
  # ret_result_26 = PHI <ret_result_25(18), ret_result_46(19), ret_result_25(17)>
  # DEBUG ret_result => ret_result_26
  # DEBUG BEGIN_STMT
  CanTp_HandlePostponedFlags (ChannelPtr_38);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_38->ChannelLockFlag = 0;

  <bb 21> :
  # ret_result_27 = PHI <ret_result_33(3), ret_result_33(5), ret_result_33(6), ret_result_24(10), ret_result_26(20)>
  # DEBUG ret_result => ret_result_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _57 = ret_result_27;
  return _57;

}


CanTp_InitChannelPtr (struct CanTp_ChannelType * ChannelPtr)
{
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char CanTp_NonIdleChannelCounter.5_5;
  unsigned char CanTp_NonIdleChannelCounter.6_6;
  unsigned char _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->State = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->NSduId = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->TotalLength = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->ActualBufferSize = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->ProcessedLength = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->BlockSize = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->ProcessedBlockFrames = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->SequenceNumber = 1;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->TempLength = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->WftCounter = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->Ticks = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->PostTicks = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ChannelPtr_10(D)->PostFlag;
  _2 = _1 & 253;
  ChannelPtr_10(D)->PostFlag = _2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = ChannelPtr_10(D)->PostFlag;
  _4 = _3 & 251;
  ChannelPtr_10(D)->PostFlag = _4;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->StMin = 255;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->MfCounterTicks = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->CanIfDLC = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->ConnectionFlags = 0;
  # DEBUG BEGIN_STMT
  ChannelPtr_10(D)->ReceivedSduLength = 0;
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.5_5 = CanTp_NonIdleChannelCounter;
  if (CanTp_NonIdleChannelCounter.5_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter.6_6 = CanTp_NonIdleChannelCounter;
  _7 = CanTp_NonIdleChannelCounter.6_6 + 255;
  CanTp_NonIdleChannelCounter = _7;

  <bb 4> :
  return;

}


CanTp_Init (const struct CanTp_ConfigType * CfgPtr)
{
  boolean StopChannel;
  boolean ChannelInitFlag;
  CanTp_ChType Channel;
  struct CanTp_ChannelType * ChannelPtr;
  const struct CanTp_ConfigType * LocalConfigPtr;
  unsigned char _1;
  unsigned char _2;
  int _3;
  unsigned char Channel.1_4;
  const struct CanTp_ConfigType * CanTp_CfgPtr.2_5;
  unsigned char _6;
  int _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char Channel.3_10;
  const struct CanTp_ConfigType * CanTp_CfgPtr.4_11;
  unsigned char _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  LocalConfigPtr_24 = CfgPtr_23(D);
  # DEBUG LocalConfigPtr => LocalConfigPtr_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (LocalConfigPtr_24 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 1, 3);
  goto <bb 18>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = CanTp_IsValidConfig (LocalConfigPtr_24);
  if (_1 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (35, 0, 1, 1);
  goto <bb 18>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelInitFlag_27 = 0;
  # DEBUG ChannelInitFlag => ChannelInitFlag_27
  # DEBUG BEGIN_STMT
  StopChannel_28 = 0;
  # DEBUG StopChannel => StopChannel_28
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr = LocalConfigPtr_24;
  # DEBUG BEGIN_STMT
  _2 = CanTp_InitVars.State;
  if (_2 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  StopChannel_33 = 1;
  # DEBUG StopChannel => StopChannel_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_InitVars.State = 0;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  CanTp_NonIdleChannelCounter = 0;
  # DEBUG BEGIN_STMT
  ChannelInitFlag_32 = 1;
  # DEBUG ChannelInitFlag => ChannelInitFlag_32

  <bb 9> :
  # ChannelInitFlag_15 = PHI <ChannelInitFlag_27(7), ChannelInitFlag_32(8)>
  # StopChannel_16 = PHI <StopChannel_33(7), StopChannel_28(8)>
  # DEBUG StopChannel => StopChannel_16
  # DEBUG ChannelInitFlag => ChannelInitFlag_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanTp_SCHM_CANTP_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (StopChannel_16 == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Channel_36 = 0;
  # DEBUG Channel => Channel_36
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _3 = (int) Channel_13;
  ChannelPtr_37 = &CanTp_Channel[_3];
  # DEBUG ChannelPtr => ChannelPtr_37
  # DEBUG BEGIN_STMT
  CanTp_StopChannel (ChannelPtr_37, 1, 1);
  # DEBUG BEGIN_STMT
  Channel.1_4 = Channel_13;
  Channel_39 = Channel.1_4 + 1;
  # DEBUG Channel => Channel_39

  <bb 12> :
  # Channel_13 = PHI <Channel_36(10), Channel_39(11)>
  # DEBUG Channel => Channel_13
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.2_5 = CanTp_CfgPtr;
  _6 = CanTp_CfgPtr.2_5->NumberOfChannels;
  if (Channel_13 < _6)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (ChannelInitFlag_15 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  Channel_40 = 0;
  # DEBUG Channel => Channel_40
  goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _7 = (int) Channel_14;
  ChannelPtr_41 = &CanTp_Channel[_7];
  # DEBUG ChannelPtr => ChannelPtr_41
  # DEBUG BEGIN_STMT
  CanTp_InitChannelPtr (ChannelPtr_41);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = ChannelPtr_41->PostFlag;
  _9 = _8 & 254;
  ChannelPtr_41->PostFlag = _9;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPtr_41->ChannelLockFlag = 0;
  # DEBUG BEGIN_STMT
  Channel.3_10 = Channel_14;
  Channel_45 = Channel.3_10 + 1;
  # DEBUG Channel => Channel_45

  <bb 16> :
  # Channel_14 = PHI <Channel_40(14), Channel_45(15)>
  # DEBUG Channel => Channel_14
  # DEBUG BEGIN_STMT
  CanTp_CfgPtr.4_11 = CanTp_CfgPtr;
  _12 = CanTp_CfgPtr.4_11->NumberOfChannels;
  if (Channel_14 < _12)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanTp_InitVars.State = 1;

  <bb 18> :
  # DEBUG BEGIN_STMT
  return;

}


CanTp_IsValidConfig (const void * voidConfigPtr)
{
  const struct CanTp_ConfigType * ConfigPtr;
  Std_ReturnType RetVal;
  long unsigned int _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int CanTp_LcfgSignature.0_5;
  long unsigned int _6;
  Std_ReturnType _15;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_9 = 1;
  # DEBUG RetVal => RetVal_9
  # DEBUG BEGIN_STMT
  ConfigPtr_11 = voidConfigPtr_10(D);
  # DEBUG ConfigPtr => ConfigPtr_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ConfigPtr_11 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = ConfigPtr_11->PlatformSignature;
  _2 = TS_PlatformSigIsValid (_1);
  if (_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = ConfigPtr_11->CfgSignature;
  if (_3 == 294722855)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = ConfigPtr_11->LcfgSignature;
  CanTp_LcfgSignature.0_5 = CanTp_LcfgSignature;
  if (_4 == CanTp_LcfgSignature.0_5)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _6 = ConfigPtr_11->PublicInfoSignature;
  if (_6 == 1190142462)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  RetVal_14 = 0;
  # DEBUG RetVal => RetVal_14

  <bb 8> :
  # RetVal_7 = PHI <RetVal_9(2), RetVal_9(3), RetVal_9(4), RetVal_9(5), RetVal_9(6), RetVal_14(7)>
  # DEBUG RetVal => RetVal_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = RetVal_7;
  return _15;

}


