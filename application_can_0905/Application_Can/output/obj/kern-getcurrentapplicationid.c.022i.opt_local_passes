__attribute__((target ("general-regs-only")))
OS_KernGetCurrentApplicationId ()
{
  os_applicationid_t a;
  unsigned char _1;
  const os_callermask_t * OS_permittedContext.2_2;
  const os_callermask_t * _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  const os_callermask_t * OS_permittedContext.3_7;
  const os_callermask_t * _8;
  short unsigned int _9;
  unsigned char _10;
  int _11;
  int _12;
  short unsigned int _13;
  short unsigned int _14;
  const os_callermask_t * OS_permittedContext.4_15;
  const os_callermask_t * _16;
  short unsigned int _17;
  unsigned char _18;
  int _19;
  int _20;
  short unsigned int _21;
  short unsigned int _22;
  unsigned int OS_configMode.5_23;
  unsigned int _24;
  unsigned char OS_iecMode.6_25;
  unsigned char _26;
  const struct os_task_t * _27;
  struct os_taskdynamic_t * _28;
  short unsigned int _29;
  short unsigned int _30;
  short unsigned int _31;
  short unsigned int _32;
  unsigned int OS_configMode.7_33;
  unsigned int _34;
  _Bool iftmp.0_36;
  int iftmp.1_37;
  _Bool iftmp.0_41;
  int iftmp.1_42;
  int iftmp.1_43;
  _Bool iftmp.0_44;
  os_applicationid_t _49;

  <bb 2> :
  # DEBUG BEGIN_STMT
  a_39 = 255;
  # DEBUG a => a_39
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.inFunction;
  if (_1 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.2_2 = OS_permittedContext;
  _3 = OS_permittedContext.2_2 + 108;
  _4 = *_3;
  _5 = (unsigned int) _4;
  _6 = _5 & 1024;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.3_7 = OS_permittedContext;
  _8 = OS_permittedContext.3_7 + 108;
  _9 = *_8;
  _10 = OS_kernelData.errorStatus.calledFrom;
  _11 = (int) _10;
  _12 = 1 << _11;
  _13 = (short unsigned int) _12;
  _14 = _9 & _13;
  if (_14 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1_42 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1_43 = 0;

  <bb 7> :
  # iftmp.1_37 = PHI <iftmp.1_42(5), iftmp.1_43(6)>
  iftmp.0_44 = iftmp.1_37 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.4_15 = OS_permittedContext;
  _16 = OS_permittedContext.4_15 + 108;
  _17 = *_16;
  _18 = OS_kernelData.inFunction;
  _19 = (int) _18;
  _20 = 1 << _19;
  _21 = (short unsigned int) _20;
  _22 = _17 & _21;
  iftmp.0_41 = _22 == 0;

  <bb 9> :
  # iftmp.0_36 = PHI <iftmp.0_44(7), iftmp.0_41(8)>
  if (iftmp.0_36 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  OS_configMode.5_23 = OS_configMode;
  _24 = OS_configMode.5_23 & 1024;
  if (_24 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_GetCurrentApplicationId, 12, 0B);
  goto <bb 19>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_iecMode.6_25 = OS_iecMode;
  if (OS_iecMode.6_25 > 1)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  _26 = OS_kernelData.inFunction;
  if (_26 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _27 = OS_kernelData.taskCurrent;
  _28 = _27->dynamic;
  _29 = BIT_FIELD_REF <MEM[(void *)_28], 16, 160>;
  _30 = _29;
  if (_30 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  _31 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _32 = _31;
  if (_32 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_configMode.7_33 = OS_configMode;
  _34 = OS_configMode.7_33 & 1024;
  if (_34 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_GetCurrentApplicationId, 55, 0B);
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  a_47 = OS_DoGetCurrentApplicationId ();
  # DEBUG a => a_47

  <bb 19> :
  # a_35 = PHI <a_39(11), a_39(17), a_47(18), a_39(10), a_39(16)>
  # DEBUG a => a_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _49 = a_35;
  return _49;

}


