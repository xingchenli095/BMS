
Marking local functions:


Marking externally visible functions: OS_WrapAlarmCallback


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_svc_HookHandler/6 (OS_svc_HookHandler) @06c39900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_WrapAlarmCallback/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/5 (OS_Error) @06c59e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_WrapAlarmCallback/0 
  Calls: 
OS_alarmCallback/4 (OS_alarmCallback) @06c397e0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_WrapAlarmCallback/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CORTEXM_IntSetDisablingLevel/3 (OS_CORTEXM_IntSetDisablingLevel) @06c59c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_WrapAlarmCallback/0 OS_WrapAlarmCallback/0 
  Calls: 
OS_kernDisableLevel/2 (OS_kernDisableLevel) @06c39750
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_WrapAlarmCallback/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06c39708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_WrapAlarmCallback/0 (addr)OS_WrapAlarmCallback/0 (read)OS_WrapAlarmCallback/0 (write)OS_WrapAlarmCallback/0 (read)OS_WrapAlarmCallback/0 (read)OS_WrapAlarmCallback/0 (write)OS_WrapAlarmCallback/0 (read)OS_WrapAlarmCallback/0 (write)OS_WrapAlarmCallback/0 (write)OS_WrapAlarmCallback/0 (write)
  Availability: not_available
  Varpool flags:
OS_WrapAlarmCallback/0 (OS_WrapAlarmCallback) @06c59a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernDisableLevel/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_alarmCallback/4 (read)OS_kernelData/1 (read)OS_svc_HookHandler/6 (addr)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_CORTEXM_IntSetDisablingLevel/3 OS_Error/5 OS_CORTEXM_IntSetDisablingLevel/3 
   Indirect call
__attribute__((target ("general-regs-only")))
OS_WrapAlarmCallback (const struct os_alarm_t * a)
{
  struct os_kerneldata_t * const kernel_data;
  os_oldlevel_t saveOldSuspendAll;
  os_uint8_t saveNestSuspendAll;
  os_uint8_t saveInFunction;
  os_intstatus_t is;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  saveInFunction = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 4;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_1 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.0_1);
  # DEBUG BEGIN_STMT
  saveNestSuspendAll = OS_kernelData.nestSuspendAll;
  # DEBUG BEGIN_STMT
  saveOldSuspendAll = OS_kernelData.oldSuspendAll;
  # DEBUG BEGIN_STMT
  OS_kernelData.nestSuspendAll = 0;
  # DEBUG BEGIN_STMT
  _2 = a->object;
  _3 = OS_alarmCallback[_2];
  _3 ();
  # DEBUG BEGIN_STMT
  _4 = OS_kernelData.nestSuspendAll;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_HookHandler, 55, 0B);

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_kernelData.nestSuspendAll = saveNestSuspendAll;
  # DEBUG BEGIN_STMT
  OS_kernelData.oldSuspendAll = saveOldSuspendAll;
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = saveInFunction;
  return;

}


