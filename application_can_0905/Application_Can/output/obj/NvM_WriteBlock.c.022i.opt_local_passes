NvM_FillInternalBuffer ()
{
  uint8 * DataAddress;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.27_1;
  long unsigned int _2;
  long unsigned int _3;
  short unsigned int NvM_GlobalWorkingStatus.28_4;
  unsigned int _5;
  unsigned int _6;
  uint8 * _7;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.29_8;
  short unsigned int _9;
  long unsigned int _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  DataAddress_14 = NvM_GetDataAddress ();
  # DEBUG DataAddress => DataAddress_14
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.27_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.27_1->blockDesc;
  _3 = _2 & 8192;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  NvM_GlobalWorkingStatus.28_4 = NvM_GlobalWorkingStatus;
  _5 = (unsigned int) NvM_GlobalWorkingStatus.28_4;
  _6 = _5 & 4096;
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _7 = NvM_GetUserRamBlockAddress ();
  NvM_CurrentBlockDescriptorPtr.29_8 = NvM_CurrentBlockDescriptorPtr;
  _9 = NvM_CurrentBlockDescriptorPtr.29_8->nvBlockLength;
  _10 = (long unsigned int) _9;
  TS_MemCpy32 (DataAddress_14, _7, _10);

  <bb 5> :
  return;

}


NvM_WriteBlock_MemIfReadBlock ()
{
  const MemIf_StatusType Status;
  uint16 Length;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.71_1;
  long unsigned int _2;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.72_3;
  short unsigned int _4;
  short unsigned int _5;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.73_6;
  long unsigned int _7;
  unsigned char _8;
  short unsigned int _9;
  short unsigned int NvM_GlobalBlockNumber.74_10;
  int _11;
  unsigned char _12;
  unsigned int _13;
  unsigned int _14;
  short unsigned int _15;
  uint8 * _16;
  unsigned char _17;
  unsigned char NvM_GlobalCallLevel.75_18;
  int _19;
  unsigned char NvM_GlobalCallLevel.76_20;
  int _21;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.71_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.71_1->blockDesc;
  NvM_CurrentBlockDescriptorPtr.72_3 = NvM_CurrentBlockDescriptorPtr;
  _4 = NvM_CurrentBlockDescriptorPtr.72_3->nvBlockLength;
  _5 = NvM_GetBlockLength (_2, _4);
  NvM_CurrentBlockDescriptorPtr.73_6 = NvM_CurrentBlockDescriptorPtr;
  _7 = NvM_CurrentBlockDescriptorPtr.73_6->blockDesc;
  _8 = NvM_GetBlockCRCLength (_7);
  _9 = (short unsigned int) _8;
  Length_26 = _5 + _9;
  # DEBUG Length => Length_26
  # DEBUG BEGIN_STMT
  Status_28 = Fee_GetStatus ();
  # DEBUG Status => Status_28
  # DEBUG BEGIN_STMT
  if (Status_28 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.74_10 = NvM_GlobalBlockNumber;
  _11 = (int) NvM_GlobalBlockNumber.74_10;
  _12 = NvM_AdminBlockTable[_11].NvMExtendedStatus;
  _13 = (unsigned int) _12;
  _14 = _13 & 16;
  if (_14 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _15 = NvM_GetMergedBlockNumber ();
  _16 = NvM_GetBufferAddress ();
  _17 = Fee_Read (_15, 0, _16, Length_26);
  if (_17 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.75_18 = NvM_GlobalCallLevel;
  _19 = (int) NvM_GlobalCallLevel.75_18;
  NvM_CurrentFunctionPtr[_19] = NvM_WriteBlock_ProcessRedundantBlock_State1;
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 0;
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.76_20 = NvM_GlobalCallLevel;
  _21 = (int) NvM_GlobalCallLevel.76_20;
  NvM_CurrentFunctionPtr[_21] = NvM_WriteBlock_MemIfReadBlock;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 2;

  <bb 8> :
  return;

}


NvM_WriteBlock_RedundantBlockError ()
{
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.10_1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;
  unsigned char _7;
  short unsigned int NvM_GlobalGenericStatus.11_8;
  short unsigned int _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  short unsigned int NvM_GlobalBlockNumber.13_13;
  int _14;
  unsigned char _15;
  short unsigned int NvM_GlobalBlockNumber.14_16;
  int _17;
  uint8 iftmp.12_18;
  uint8 iftmp.12_23;
  uint8 iftmp.12_24;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.10_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.10_1->blockDesc;
  _3 = _2 >> 7;
  _4 = (unsigned char) _3;
  _5 = (unsigned int) _4;
  _6 = _5 & 3;
  if (_6 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _7 = NvM_AdminBlockTable[0].NvMValid;
  if (_7 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.11_8 = NvM_GlobalGenericStatus;
  _9 = NvM_GlobalGenericStatus.11_8 & 65279;
  NvM_GlobalGenericStatus = _9;
  # DEBUG BEGIN_STMT
  _10 = NvM_AdminBlockTable[0].NvMValid;
  _11 = _10;
  _12 = _11 + 1;
  NvM_AdminBlockTable[0].NvMValid = _12;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.13_13 = NvM_GlobalBlockNumber;
  _14 = (int) NvM_GlobalBlockNumber.13_13;
  _15 = NvM_AdminBlockTable[_14].NvMDatasetBlockIndex;
  if (_15 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.12_24 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.12_23 = 0;

  <bb 7> :
  # iftmp.12_18 = PHI <iftmp.12_24(5), iftmp.12_23(6)>
  NvM_GlobalBlockNumber.14_16 = NvM_GlobalBlockNumber;
  _17 = (int) NvM_GlobalBlockNumber.14_16;
  NvM_AdminBlockTable[_17].NvMDatasetBlockIndex = iftmp.12_18;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();
  return;

}


NvM_WriteBlock_ProcessRedundantBlock_State1 ()
{
  MemIf_JobResultType Result;
  short unsigned int NvM_GlobalBlockNumber.78_1;
  int _2;
  unsigned char _3;
  short unsigned int NvM_GlobalBlockNumber.79_4;
  int _5;
  unsigned char NvM_GlobalCallLevel.80_6;
  int _7;
  short unsigned int NvM_GlobalBlockNumber.81_8;
  int _9;
  unsigned char _10;
  short unsigned int NvM_GlobalBlockNumber.82_11;
  int _12;
  unsigned char _13;
  uint8 iftmp.77_14;
  uint8 iftmp.77_22;
  uint8 iftmp.77_23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_16 = 1;
  # DEBUG Result => Result_16
  # DEBUG BEGIN_STMT
  Result_19 = Fee_GetJobResult ();
  # DEBUG Result => Result_19
  # DEBUG BEGIN_STMT
  if (Result_19 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 2;
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Result_19 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.78_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.78_1;
  _3 = NvM_AdminBlockTable[_2].NvMDatasetBlockIndex;
  if (_3 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.77_23 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.77_22 = 0;

  <bb 8> :
  # iftmp.77_14 = PHI <iftmp.77_23(6), iftmp.77_22(7)>
  NvM_GlobalBlockNumber.79_4 = NvM_GlobalBlockNumber;
  _5 = (int) NvM_GlobalBlockNumber.79_4;
  NvM_AdminBlockTable[_5].NvMDatasetBlockIndex = iftmp.77_14;
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.80_6 = NvM_GlobalCallLevel;
  _7 = (int) NvM_GlobalCallLevel.80_6;
  NvM_CurrentFunctionPtr[_7] = NvM_WriteBlock_Async_State3;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 0;
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();

  <bb 10> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.81_8 = NvM_GlobalBlockNumber;
  _9 = (int) NvM_GlobalBlockNumber.81_8;
  _10 = NvM_AdminBlockTable[_9].NvMExtendedStatus;
  NvM_GlobalBlockNumber.82_11 = NvM_GlobalBlockNumber;
  _12 = (int) NvM_GlobalBlockNumber.82_11;
  _13 = _10 & 239;
  NvM_AdminBlockTable[_12].NvMExtendedStatus = _13;
  return;

}


NvM_WriteBlock_ProcessRedundantBlock (void (*NvM_CurrentFunctionPtrType) (void) NextState)
{
  boolean writeBoth;
  unsigned char NvM_GlobalCallLevel.47_1;
  int _2;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.48_3;
  long unsigned int _4;
  long unsigned int _5;
  unsigned char _6;
  unsigned int _7;
  unsigned int _8;
  short unsigned int NvM_GlobalWorkingStatus.49_9;
  unsigned int _10;
  unsigned int _11;
  short unsigned int NvM_GlobalBlockNumber.50_12;
  int _13;
  unsigned char _14;
  unsigned int _15;
  unsigned int _16;
  short unsigned int NvM_GlobalBlockNumber.51_17;
  int _18;
  short unsigned int NvM_GlobalBlockNumber.52_19;
  int _20;
  short unsigned int NvM_GlobalWorkingStatus.53_21;
  unsigned int _22;
  unsigned int _23;
  unsigned char NvM_CurrentServiceId.54_24;
  unsigned char NvM_CurrentServiceId.55_25;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.56_26;
  long unsigned int _27;
  long unsigned int _28;
  unsigned char NvM_GlobalCallLevel.57_29;
  unsigned char NvM_GlobalCallLevel.58_30;
  unsigned char _31;
  unsigned char NvM_GlobalCallLevel.59_32;
  int _33;
  short unsigned int NvM_GlobalGenericStatus.60_34;
  short unsigned int _35;
  short unsigned int NvM_GlobalWorkingStatus.61_36;
  unsigned int _37;
  unsigned int _38;
  short unsigned int NvM_GlobalBlockNumber.62_39;
  int _40;
  unsigned char _41;
  unsigned int _42;
  unsigned int _43;
  short unsigned int NvM_GlobalGenericStatus.63_44;
  short unsigned int _45;
  short unsigned int NvM_GlobalBlockNumber.65_46;
  int _47;
  unsigned char _48;
  short unsigned int NvM_GlobalBlockNumber.66_49;
  int _50;
  short unsigned int NvM_GlobalBlockNumber.67_51;
  int _52;
  unsigned char _53;
  unsigned int _54;
  unsigned int _55;
  short unsigned int NvM_GlobalBlockNumber.68_56;
  int _57;
  short unsigned int NvM_GlobalBlockNumber.69_58;
  int _59;
  unsigned char _60;
  short unsigned int NvM_GlobalBlockNumber.70_61;
  int _62;
  unsigned char _63;
  uint8 iftmp.64_65;
  uint8 iftmp.64_82;
  uint8 iftmp.64_83;

  <bb 2> :
  # DEBUG BEGIN_STMT
  writeBoth_70 = 0;
  # DEBUG writeBoth => writeBoth_70
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.47_1 = NvM_GlobalCallLevel;
  _2 = (int) NvM_GlobalCallLevel.47_1;
  NvM_CurrentFunctionPtr[_2] = NextState_72(D);
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.48_3 = NvM_CurrentBlockDescriptorPtr;
  _4 = NvM_CurrentBlockDescriptorPtr.48_3->blockDesc;
  _5 = _4 >> 7;
  _6 = (unsigned char) _5;
  _7 = (unsigned int) _6;
  _8 = _7 & 3;
  if (_8 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_AdminBlockTable[0].NvMValid = 0;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.49_9 = NvM_GlobalWorkingStatus;
  _10 = (unsigned int) NvM_GlobalWorkingStatus.49_9;
  _11 = _10 & 128;
  if (_11 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  NvM_GlobalBlockNumber.50_12 = NvM_GlobalBlockNumber;
  _13 = (int) NvM_GlobalBlockNumber.50_12;
  _14 = NvM_AdminBlockTable[_13].NvMExtendedStatus;
  _15 = (unsigned int) _14;
  _16 = _15 & 4;
  if (_16 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.51_17 = NvM_GlobalBlockNumber;
  _18 = (int) NvM_GlobalBlockNumber.51_17;
  NvM_AdminBlockTable[_18].NvMDatasetBlockIndex = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.52_19 = NvM_GlobalBlockNumber;
  _20 = (int) NvM_GlobalBlockNumber.52_19;
  NvM_AdminBlockTable[_20].NvMDatasetBlockIndex = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.53_21 = NvM_GlobalWorkingStatus;
  _22 = (unsigned int) NvM_GlobalWorkingStatus.53_21;
  _23 = _22 & 1;
  if (_23 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  NvM_CurrentServiceId.54_24 = NvM_CurrentServiceId;
  if (NvM_CurrentServiceId.54_24 == 7)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  NvM_CurrentServiceId.55_25 = NvM_CurrentServiceId;
  if (NvM_CurrentServiceId.55_25 == 23)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  NvM_CurrentBlockDescriptorPtr.56_26 = NvM_CurrentBlockDescriptorPtr;
  _27 = NvM_CurrentBlockDescriptorPtr.56_26->blockDesc;
  _28 = _27 & 4194304;
  if (_28 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.57_29 = NvM_GlobalCallLevel;
  NvM_GlobalCallLevel.58_30 = NvM_GlobalCallLevel.57_29;
  _31 = NvM_GlobalCallLevel.58_30 + 1;
  NvM_GlobalCallLevel = _31;
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.59_32 = NvM_GlobalCallLevel;
  _33 = (int) NvM_GlobalCallLevel.59_32;
  NvM_CurrentFunctionPtr[_33] = NextState_72(D);
  # DEBUG BEGIN_STMT
  writeBoth_79 = 1;
  # DEBUG writeBoth => writeBoth_79
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.60_34 = NvM_GlobalGenericStatus;
  _35 = NvM_GlobalGenericStatus.60_34 | 256;
  NvM_GlobalGenericStatus = _35;

  <bb 12> :
  # writeBoth_64 = PHI <writeBoth_70(10), writeBoth_79(11)>
  # DEBUG writeBoth => writeBoth_64
  # DEBUG BEGIN_STMT
  if (writeBoth_64 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 13> :
  NvM_GlobalWorkingStatus.61_36 = NvM_GlobalWorkingStatus;
  _37 = (unsigned int) NvM_GlobalWorkingStatus.61_36;
  _38 = _37 & 128;
  if (_38 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  NvM_GlobalBlockNumber.62_39 = NvM_GlobalBlockNumber;
  _40 = (int) NvM_GlobalBlockNumber.62_39;
  _41 = NvM_AdminBlockTable[_40].NvMExtendedStatus;
  _42 = (unsigned int) _41;
  _43 = _42 & 8;
  if (_43 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.63_44 = NvM_GlobalGenericStatus;
  _45 = NvM_GlobalGenericStatus.63_44 | 256;
  NvM_GlobalGenericStatus = _45;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.65_46 = NvM_GlobalBlockNumber;
  _47 = (int) NvM_GlobalBlockNumber.65_46;
  _48 = NvM_AdminBlockTable[_47].NvMDatasetBlockIndex;
  if (_48 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.64_83 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.64_82 = 0;

  <bb 18> :
  # iftmp.64_65 = PHI <iftmp.64_83(16), iftmp.64_82(17)>
  NvM_GlobalBlockNumber.66_49 = NvM_GlobalBlockNumber;
  _50 = (int) NvM_GlobalBlockNumber.66_49;
  NvM_AdminBlockTable[_50].NvMDatasetBlockIndex = iftmp.64_65;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.67_51 = NvM_GlobalBlockNumber;
  _52 = (int) NvM_GlobalBlockNumber.67_51;
  _53 = NvM_AdminBlockTable[_52].NvMExtendedStatus;
  _54 = (unsigned int) _53;
  _55 = _54 & 8;
  if (_55 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.68_56 = NvM_GlobalBlockNumber;
  _57 = (int) NvM_GlobalBlockNumber.68_56;
  NvM_AdminBlockTable[_57].NvMDatasetBlockIndex = 1;

  <bb 20> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.69_58 = NvM_GlobalBlockNumber;
  _59 = (int) NvM_GlobalBlockNumber.69_58;
  _60 = NvM_AdminBlockTable[_59].NvMExtendedStatus;
  NvM_GlobalBlockNumber.70_61 = NvM_GlobalBlockNumber;
  _62 = (int) NvM_GlobalBlockNumber.70_61;
  _63 = _60 | 16;
  NvM_AdminBlockTable[_62].NvMExtendedStatus = _63;
  # DEBUG BEGIN_STMT
  NvM_WriteBlock_MemIfReadBlock ();

  <bb 21> :
  return;

}


NvM_WriteBlock_ProcessJobRes ()
{
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.38_1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;
  short unsigned int NvM_GlobalBlockNumber.40_7;
  int _8;
  unsigned char _9;
  short unsigned int NvM_GlobalBlockNumber.41_10;
  int _11;
  short unsigned int NvM_GlobalBlockNumber.42_12;
  int _13;
  unsigned char _14;
  short unsigned int NvM_GlobalBlockNumber.43_15;
  int _16;
  unsigned char _17;
  short unsigned int NvM_GlobalGenericStatus.44_18;
  short unsigned int _19;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.45_20;
  long unsigned int _21;
  long unsigned int _22;
  uint8 * _23;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.46_24;
  long unsigned int _25;
  uint8 iftmp.39_26;
  uint8 iftmp.39_31;
  uint8 iftmp.39_32;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 0;
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.38_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.38_1->blockDesc;
  _3 = _2 >> 7;
  _4 = (unsigned char) _3;
  _5 = (unsigned int) _4;
  _6 = _5 & 3;
  if (_6 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.40_7 = NvM_GlobalBlockNumber;
  _8 = (int) NvM_GlobalBlockNumber.40_7;
  _9 = NvM_AdminBlockTable[_8].NvMDatasetBlockIndex;
  if (_9 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.39_32 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.39_31 = 0;

  <bb 6> :
  # iftmp.39_26 = PHI <iftmp.39_32(4), iftmp.39_31(5)>
  NvM_GlobalBlockNumber.41_10 = NvM_GlobalBlockNumber;
  _11 = (int) NvM_GlobalBlockNumber.41_10;
  NvM_AdminBlockTable[_11].NvMDatasetBlockIndex = iftmp.39_26;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.42_12 = NvM_GlobalBlockNumber;
  _13 = (int) NvM_GlobalBlockNumber.42_12;
  _14 = NvM_AdminBlockTable[_13].NvMExtendedStatus;
  NvM_GlobalBlockNumber.43_15 = NvM_GlobalBlockNumber;
  _16 = (int) NvM_GlobalBlockNumber.43_15;
  _17 = _14 & 247;
  NvM_AdminBlockTable[_16].NvMExtendedStatus = _17;
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.44_18 = NvM_GlobalGenericStatus;
  _19 = NvM_GlobalGenericStatus.44_18 & 65279;
  NvM_GlobalGenericStatus = _19;
  # DEBUG BEGIN_STMT
  NvM_WriteRetryCount = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.45_20 = NvM_CurrentBlockDescriptorPtr;
  _21 = NvM_CurrentBlockDescriptorPtr.45_20->blockDesc;
  _22 = _21 & 8;
  if (_22 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _23 = NvM_GetStoredRamCRCAddress ();
  NvM_CurrentBlockDescriptorPtr.46_24 = NvM_CurrentBlockDescriptorPtr;
  _25 = NvM_CurrentBlockDescriptorPtr.46_24->blockDesc;
  NvM_CopyCrc (_23, &NvM_CalcCrc_CalcBuffer, _25);

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockUnchanged ();
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();
  return;

}


NvM_WriteBlock_ProcessJobRes_Async_State ()
{
  const MemIf_JobResultType Result;
  short unsigned int NvM_GlobalGenericStatus.37_1;
  short unsigned int _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result_6 = Fee_GetJobResult ();
  # DEBUG Result => Result_6
  # DEBUG BEGIN_STMT
  if (Result_6 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_WriteBlock_ProcessJobRes ();
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Result_6 == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.37_1 = NvM_GlobalGenericStatus;
  _2 = NvM_GlobalGenericStatus.37_1 & 65279;
  NvM_GlobalGenericStatus = _2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 6;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel = 0;
  # DEBUG BEGIN_STMT
  NvM_ResetRedundantBlockDataIndex ();
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Result_6 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 2;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvM_WriteBlock_Async_Error ();

  <bb 9> :
  return;

}


NvM_WriteBlock_Async_State3 ()
{
  unsigned char NvM_CurrentServiceId.30_1;
  short unsigned int NvM_GlobalGenericStatus.31_2;
  unsigned int _3;
  unsigned int _4;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.32_5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  unsigned int _9;
  unsigned int _10;
  short unsigned int NvM_GlobalGenericStatus.33_11;
  unsigned int _12;
  unsigned int _13;
  short unsigned int NvM_GlobalGenericStatus.34_14;
  short unsigned int _15;
  unsigned char _16;
  short unsigned int _17;
  uint8 * _18;
  unsigned char _19;
  unsigned char NvM_GlobalCallLevel.35_20;
  int _21;
  unsigned char NvM_GlobalCallLevel.36_22;
  int _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId.30_1 = NvM_CurrentServiceId;
  if (NvM_CurrentServiceId.30_1 == 13)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  NvM_GlobalGenericStatus.31_2 = NvM_GlobalGenericStatus;
  _3 = (unsigned int) NvM_GlobalGenericStatus.31_2;
  _4 = _3 & 2;
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  NvM_CurrentBlockDescriptorPtr.32_5 = NvM_CurrentBlockDescriptorPtr;
  _6 = NvM_CurrentBlockDescriptorPtr.32_5->blockDesc;
  _7 = _6 >> 7;
  _8 = (unsigned char) _7;
  _9 = (unsigned int) _8;
  _10 = _9 & 3;
  if (_10 != 1)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  NvM_GlobalGenericStatus.33_11 = NvM_GlobalGenericStatus;
  _12 = (unsigned int) NvM_GlobalGenericStatus.33_11;
  _13 = _12 & 256;
  if (_13 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.34_14 = NvM_GlobalGenericStatus;
  _15 = NvM_GlobalGenericStatus.34_14 | 128;
  NvM_GlobalGenericStatus = _15;
  goto <bb 12>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _16 = Fee_GetStatus ();
  if (_16 != 2)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _17 = NvM_GetMergedBlockNumber ();
  _18 = NvM_GetBufferAddress ();
  _19 = Fee_Write (_17, _18);
  if (_19 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.35_20 = NvM_GlobalCallLevel;
  _21 = (int) NvM_GlobalCallLevel.35_20;
  NvM_CurrentFunctionPtr[_21] = NvM_WriteBlock_ProcessJobRes_Async_State;
  goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.36_22 = NvM_GlobalCallLevel;
  _23 = (int) NvM_GlobalCallLevel.36_22;
  NvM_CurrentFunctionPtr[_23] = NvM_WriteBlock_Async_Error;
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 2;

  <bb 12> :
  return;

}


NvM_WriteBlock_Async_State2 ()
{
  Std_ReturnType ReturnVal;
  uint8 * BufferAddr;
  short unsigned int NvM_GlobalWorkingStatus.21_1;
  unsigned int _2;
  unsigned int _3;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.22_4;
  Std_ReturnType (*<Taeb>) (void *) _5;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.23_6;
  long unsigned int _7;
  long unsigned int _8;
  short unsigned int NvM_GlobalWorkingStatus.24_9;
  unsigned int _10;
  unsigned int _11;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.25_12;
  long unsigned int _13;
  unsigned char _14;
  unsigned int _15;
  unsigned int _16;
  unsigned char NvM_GlobalCallLevel.26_17;
  int _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  BufferAddr_25 = NvM_GetDataAddress ();
  # DEBUG BufferAddr => BufferAddr_25
  # DEBUG BEGIN_STMT
  ReturnVal_26 = 0;
  # DEBUG ReturnVal => ReturnVal_26
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.21_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.21_1;
  _3 = _2 & 4096;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.22_4 = NvM_CurrentBlockDescriptorPtr;
  _5 = NvM_CurrentBlockDescriptorPtr.22_4->writeRamToNvCallback;
  ReturnVal_28 = NvM_MirrorCopy (0B, _5, BufferAddr_25);
  # DEBUG ReturnVal => ReturnVal_28

  <bb 4> :
  # ReturnVal_19 = PHI <ReturnVal_26(2), ReturnVal_28(3)>
  # DEBUG ReturnVal => ReturnVal_19
  # DEBUG BEGIN_STMT
  if (ReturnVal_19 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockValid ();
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.23_6 = NvM_CurrentBlockDescriptorPtr;
  _7 = NvM_CurrentBlockDescriptorPtr.23_6->blockDesc;
  _8 = _7 & 8192;
  if (_8 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  NvM_GlobalWorkingStatus.24_9 = NvM_GlobalWorkingStatus;
  _10 = (unsigned int) NvM_GlobalWorkingStatus.24_9;
  _11 = _10 & 4096;
  if (_11 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_FillInternalBuffer ();

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.25_12 = NvM_CurrentBlockDescriptorPtr;
  _13 = NvM_CurrentBlockDescriptorPtr.25_12->blockDesc;
  _14 = (unsigned char) _13;
  _15 = (unsigned int) _14;
  _16 = _15 & 7;
  if (_16 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.26_17 = NvM_GlobalCallLevel;
  _18 = (int) NvM_GlobalCallLevel.26_17;
  NvM_CurrentFunctionPtr[_18] = NvM_WriteBlock_Async_CopyCrc;
  # DEBUG BEGIN_STMT
  NvM_CalculateCrc (BufferAddr_25);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  NvM_WriteBlock_ProcessRedundantBlock (NvM_WriteBlock_Async_State3);

  <bb 11> :
  return;

}


NvM_WriteBlock_Async_State1 ()
{
  uint8 * TempUserRamAddress;
  short unsigned int NvM_GlobalWorkingStatus.15_1;
  unsigned int _2;
  unsigned int _3;
  unsigned char NvM_GlobalCallLevel.16_4;
  int _5;
  short unsigned int NvM_GlobalBlockNumber.17_6;
  unsigned char NvM_GlobalCallLevel.18_7;
  unsigned char NvM_GlobalCallLevel.19_8;
  unsigned char _9;
  unsigned char NvM_GlobalCallLevel.20_10;
  int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_MirrorRetryCount = 0;
  # DEBUG BEGIN_STMT
  TempUserRamAddress_16 = NvM_GetUserRamBlockAddress ();
  # DEBUG TempUserRamAddress => TempUserRamAddress_16
  # DEBUG BEGIN_STMT
  if (TempUserRamAddress_16 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.15_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.15_1;
  _3 = _2 & 512;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_WriteRetryCount = 1;
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.16_4 = NvM_GlobalCallLevel;
  _5 = (int) NvM_GlobalCallLevel.16_4;
  NvM_CurrentFunctionPtr[_5] = NvM_WriteBlock_Async_State2;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.17_6 = NvM_GlobalBlockNumber;
  if (NvM_GlobalBlockNumber.17_6 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.18_7 = NvM_GlobalCallLevel;
  NvM_GlobalCallLevel.19_8 = NvM_GlobalCallLevel.18_7;
  _9 = NvM_GlobalCallLevel.19_8 + 1;
  NvM_GlobalCallLevel = _9;
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.20_10 = NvM_GlobalCallLevel;
  _11 = (int) NvM_GlobalCallLevel.20_10;
  NvM_CurrentFunctionPtr[_11] = NvM_RestoreBlockDefaults_AscSt0;

  <bb 5> :
  return;

}


NvM_WriteBlock_Async_Error ()
{
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.5_1;
  unsigned char _2;
  unsigned char NvM_WriteRetryCount.6_3;
  unsigned char NvM_WriteRetryCount.7_4;
  unsigned char NvM_WriteRetryCount.8_5;
  unsigned char _6;
  unsigned char NvM_GlobalCallLevel.9_7;
  int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.5_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.5_1->writeRetryLimit;
  NvM_WriteRetryCount.6_3 = NvM_WriteRetryCount;
  if (_2 > NvM_WriteRetryCount.6_3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_WriteRetryCount.7_4 = NvM_WriteRetryCount;
  NvM_WriteRetryCount.8_5 = NvM_WriteRetryCount.7_4;
  _6 = NvM_WriteRetryCount.8_5 + 1;
  NvM_WriteRetryCount = _6;
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.9_7 = NvM_GlobalCallLevel;
  _8 = (int) NvM_GlobalCallLevel.9_7;
  NvM_CurrentFunctionPtr[_8] = NvM_WriteBlock_Async_State3;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_WriteRetryCount = 1;
  # DEBUG BEGIN_STMT
  NvM_WriteBlock_RedundantBlockError ();

  <bb 5> :
  return;

}


NvM_WriteBlock_Async_CopyCrc ()
{
  uint8 * _1;
  const struct NvM_BlockDescriptorType * NvM_CurrentBlockDescriptorPtr.4_2;
  long unsigned int _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = NvM_CalcCrc_GetBlockCrcAddress ();
  NvM_CurrentBlockDescriptorPtr.4_2 = NvM_CurrentBlockDescriptorPtr;
  _3 = NvM_CurrentBlockDescriptorPtr.4_2->blockDesc;
  NvM_CopyCrc (_1, &NvM_CalcCrc_CalcBuffer, _3);
  # DEBUG BEGIN_STMT
  NvM_WriteBlock_ProcessRedundantBlock (NvM_WriteBlock_Async_State3);
  return;

}


NvM_WritePRAMBlock_Async ()
{
  short unsigned int NvM_GlobalBlockNumber.2_1;
  int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  short unsigned int NvM_GlobalWorkingStatus.3_6;
  unsigned int _7;
  unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId = 23;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.2_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.2_1;
  _3 = NvM_AdminBlockTable[_2].NvMExtendedStatus;
  _4 = (unsigned int) _3;
  _5 = _4 & 2;
  if (_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_RemoveElement ();

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.3_6 = NvM_GlobalWorkingStatus;
  _7 = (unsigned int) NvM_GlobalWorkingStatus.3_6;
  _8 = _7 & 4096;
  if (_8 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockValid ();

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_WriteBlock_Async_State1 ();
  return;

}


NvM_WriteBlock_Async ()
{
  short unsigned int NvM_GlobalBlockNumber.0_1;
  int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  short unsigned int NvM_GlobalWorkingStatus.1_6;
  unsigned int _7;
  unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId = 7;
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.0_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.0_1;
  _3 = NvM_AdminBlockTable[_2].NvMExtendedStatus;
  _4 = (unsigned int) _3;
  _5 = _4 & 2;
  if (_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_RemoveElement ();

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.1_6 = NvM_GlobalWorkingStatus;
  _7 = (unsigned int) NvM_GlobalWorkingStatus.1_6;
  _8 = _7 & 4096;
  if (_8 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_SetPermanentRamBlockValid ();

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_WriteBlock_Async_State1 ();
  return;

}


NvM_ASR42_WritePRAMBlock (NvM_ASR42_BlockIdType BlockId)
{
  boolean ReportWriteOnceUnknown;
  Std_ReturnType Result;
  uint16 BlockIndex;
  unsigned char _1;
  unsigned char _2;
  int _3;
  short unsigned int _4;
  int _5;
  int _6;
  int _7;
  unsigned char _8;
  int _9;
  Std_ReturnType _29;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Result_15 = 1;
  # DEBUG Result => Result_15
  # DEBUG BEGIN_STMT
  ReportWriteOnceUnknown_16 = 0;
  # DEBUG ReportWriteOnceUnknown => ReportWriteOnceUnknown_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BlockIndex_20 = NvM_CheckCondWritePRAMBlock (BlockId_18(D));
  # DEBUG BlockIndex => BlockIndex_20
  # DEBUG BEGIN_STMT
  if (BlockIndex_20 != 9)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = NvM_CheckWriteProtection (BlockIndex_20);
  if (_1 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = NvM_CheckDataSetRomBlock (BlockIndex_20);
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = (int) BlockIndex_20;
  _4 = NvM_AdminBlockTable[_3].NvMDynStatus;
  _5 = (int) _4;
  _6 = _5 & 8;
  if (_6 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = (int) BlockIndex_20;
  _8 = NvM_AdminBlockTable[_7].NvMResult;
  if (_8 != 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Result_25 = NvM_Queue_InsertStandard (BlockIndex_20, 0B, NvM_WritePRAMBlock_Async);
  # DEBUG Result => Result_25

  <bb 8> :
  # Result_10 = PHI <Result_15(3), Result_15(4), Result_15(5), Result_25(7), Result_15(6)>
  # DEBUG Result => Result_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Result_10 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _9 = (int) BlockIndex_20;
  NvM_AdminBlockTable[_9].NvMCurrentServiceId = 23;

  <bb 10> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ReportWriteOnceUnknown_16 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 26);

  <bb 12> :
  # Result_11 = PHI <Result_15(2), Result_10(10), Result_10(11)>
  # DEBUG Result => Result_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = Result_11;
  return _29;

}


NvM_ASR40_WriteBlock (NvM_ASR40_BlockIdType BlockId, const void * NvM_SrcPtr)
{
  boolean ReportWriteOnceUnknown;
  Std_ReturnType Result;
  uint16 BlockIndex;
  unsigned char _1;
  unsigned char _2;
  int _3;
  short unsigned int _4;
  int _5;
  int _6;
  int _7;
  unsigned char _8;
  int _9;
  Std_ReturnType _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Result_15 = 1;
  # DEBUG Result => Result_15
  # DEBUG BEGIN_STMT
  ReportWriteOnceUnknown_16 = 0;
  # DEBUG ReportWriteOnceUnknown => ReportWriteOnceUnknown_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BlockIndex_21 = NvM_CheckCondWriteBlock (BlockId_18(D), NvM_SrcPtr_19(D));
  # DEBUG BlockIndex => BlockIndex_21
  # DEBUG BEGIN_STMT
  if (BlockIndex_21 != 9)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = NvM_CheckWriteProtection (BlockIndex_21);
  if (_1 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = NvM_CheckDataSetRomBlock (BlockIndex_21);
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _3 = (int) BlockIndex_21;
  _4 = NvM_AdminBlockTable[_3].NvMDynStatus;
  _5 = (int) _4;
  _6 = _5 & 8;
  if (_6 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = (int) BlockIndex_21;
  _8 = NvM_AdminBlockTable[_7].NvMResult;
  if (_8 != 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Result_26 = NvM_Queue_InsertStandard (BlockIndex_21, NvM_SrcPtr_19(D), NvM_WriteBlock_Async);
  # DEBUG Result => Result_26

  <bb 8> :
  # Result_10 = PHI <Result_15(3), Result_15(4), Result_15(5), Result_26(7), Result_15(6)>
  # DEBUG Result => Result_10
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Result_10 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _9 = (int) BlockIndex_21;
  NvM_AdminBlockTable[_9].NvMCurrentServiceId = 7;

  <bb 10> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ReportWriteOnceUnknown_16 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 26);

  <bb 12> :
  # Result_11 = PHI <Result_15(2), Result_10(10), Result_10(11)>
  # DEBUG Result => Result_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _30 = Result_11;
  return _30;

}


