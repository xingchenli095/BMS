IPA function summary for OS_GetCount/0 inlinable
  global time:     15.050000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 96] changed)
    size:3.000000, time:2.100000,  executed if:(op0[ref offset: 96] != 0B)
    size:0.500000, time:0.175000,  executed if:(op0[ref offset: 96] != 0B) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 96] != 0B) && (not inlined)
    size:0.500000, time:0.175000,  executed if:(op0[ref offset: 96] != 0B),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 96] != 0B)
  calls:
    indirect call loop depth: 0 freq:0.35 size: 4 time: 16predicate: (op0[ref offset: 96] != 0B)


Flattening functions:
Overall time estimate: 15.050000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in OS_GetCount/0.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 15.050000 weighted by profile: 0.000000

Why inlining failed?
IPA function summary for OS_GetCount/0 inlinable
  global time:     15.050000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 224] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 224] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 96] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 96] changed)
    size:3.000000, time:2.100000,  executed if:(op0[ref offset: 96] != 0B)
    size:0.500000, time:0.175000,  executed if:(op0[ref offset: 96] != 0B) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 96] != 0B) && (not inlined)
    size:0.500000, time:0.175000,  executed if:(op0[ref offset: 96] != 0B),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 96] != 0B)
  calls:
    indirect call loop depth: 0 freq:0.35 size: 4 time: 16predicate: (op0[ref offset: 96] != 0B)

Symbol table:

OS_GetCount/0 (OS_GetCount) @06c59c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(375809638 (estimated locally),0.35 per call)  of param:0 loaded from aggregate passed by reference at offset 32 (vptr maybe changed)

;; Function OS_GetCount (OS_GetCount, funcdef_no=0, decl_uid=6443, cgraph_uid=1, symbol_order=0)

__attribute__((target ("general-regs-only")))
OS_GetCount (const struct os_counter_t * cs)
{
  struct os_counterdynamic_t * cd;
  os_tick_t count;
  const struct os_hwt_t * _1;
  unsigned char _2;
  void (*<T540>) (const struct os_counter_t *) _3;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  cd_7 = cs_6(D)->dynamic;
  # DEBUG cd => cd_7
  # DEBUG BEGIN_STMT
  _1 = cs_6(D)->hwt;
  if (_1 != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 3> [local count: 751619277]:
  # DEBUG BEGIN_STMT
  _2 = cd_7->lock;
  if (_2 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 375809638]:
  # DEBUG BEGIN_STMT
  _3 = cs_6(D)->updFunc;
  _3 (cs_6(D));

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  count_9 = cd_7->current;
  # DEBUG count => count_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return count_9;

}


