__attribute__((target ("general-regs-only")))
OS_ErrorMinimalParam (os_serviceid_t sid, os_result_t e, os_paramtype_t * p)
{
  os_int_t i;
  os_intstatus_t is;
  os_uint8_t oldInFunction;
  struct os_kerneldata_t * const kernel_data;
  os_result_t D.7423;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.errorHookNesting;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_2 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.0_2);
  # DEBUG BEGIN_STMT
  OS_kernelData.errorHookNesting = 1;
  # DEBUG BEGIN_STMT
  oldInFunction = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 10;
  # DEBUG BEGIN_STMT
  OS_kernelData.errorStatus.result = e;
  # DEBUG BEGIN_STMT
  OS_kernelData.errorStatus.action = 1;
  # DEBUG BEGIN_STMT
  OS_kernelData.errorStatus.calledFrom = oldInFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.errorStatus.serviceId = sid;
  # DEBUG BEGIN_STMT
  OS_kernelData.errorStatus.errorCondition = 0;
  # DEBUG BEGIN_STMT
  if (p != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  i.1_3 = (unsigned int) i;
  _4 = i.1_3 * 4;
  _5 = p + _4;
  _6 = *_5;
  OS_kernelData.errorStatus.parameter[i] = _6;
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (i <= 2)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ErrorHook (e);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = oldInFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.errorHookNesting = 0;
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);

  <bb 8> :
  # DEBUG BEGIN_STMT
  D.7423 = e;
  return D.7423;

}


