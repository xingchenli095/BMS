__attribute__((target ("general-regs-only")))
OS_StopTaskExecTiming (const struct os_task_t * tp)
{
  os_tick_t used;
  struct os_taskaccounting_t * acc;
  struct os_kerneldata_t * const kernel_data;
  const struct os_hwt_t * _1;
  const struct os_hwtdrv_t * _2;
  void (*<T521>) (const struct os_hwt_t *) _3;
  const struct os_hwt_t * _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_12 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_12
  # DEBUG BEGIN_STMT
  acc_15 = tp_14(D)->accounting;
  # DEBUG acc => acc_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (acc_15 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = OS_executionTimer[0];
  _2 = _1->driver;
  _3 = _2->hwtStop;
  _4 = OS_executionTimer[0];
  _3 (_4);
  # DEBUG BEGIN_STMT
  used_18 = OS_GetTimeUsed ();
  # DEBUG used => used_18
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.accounting.etUsed;
  _6 = used_18 + _5;
  OS_kernelData.accounting.etUsed = _6;
  # DEBUG BEGIN_STMT
  _7 = OS_kernelData.accounting.etUsed;
  _8 = acc_15->etMax;
  if (_7 > _8)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _9 = OS_kernelData.accounting.etUsed;
  acc_15->etMax = _9;

  <bb 5> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.inFunction = 255;

  <bb 6> :
  return;

}


