
Marking local functions:


Marking externally visible functions: OS_IsScheduleWorthwhile


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_kernelData/2 (OS_kernelData) @06c3ae58
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_IsScheduleWorthwhile/0 (read)
  Availability: not_available
  Varpool flags:
OS_taskActivations/1 (OS_taskActivations) @06c3ae10
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_IsScheduleWorthwhile/0 (addr)OS_IsScheduleWorthwhile/0 (addr)
  Availability: not_available
  Varpool flags:
OS_IsScheduleWorthwhile/0 (OS_IsScheduleWorthwhile) @06c8ee00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_taskActivations/1 (addr)OS_kernelData/2 (read)OS_taskActivations/1 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
__attribute__((target ("general-regs-only")))
OS_IsScheduleWorthwhile ()
{
  const os_tasklink_t next;
  const os_tasklink_t link;
  struct os_taskdynamic_t * const td;
  const struct os_task_t * const current_task;
  os_tasklink_t * const taskActivations;
  os_boolean_t answer;
  os_boolean_t D.7653;

  <bb 2> :
  # DEBUG BEGIN_STMT
  answer = 1;
  # DEBUG BEGIN_STMT
  taskActivations = &OS_taskActivations;
  # DEBUG BEGIN_STMT
  current_task = OS_kernelData.taskCurrent;
  # DEBUG BEGIN_STMT
  if (current_task != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  td = current_task->dynamic;
  # DEBUG BEGIN_STMT
  _1 = current_task->linkBase;
  _2 = td->cAct;
  _3 = (short unsigned int) _2;
  link = _1 + _3;
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) link;
  _5 = _4 * 2;
  _6 = &OS_taskActivations + _5;
  next = *_6;
  # DEBUG BEGIN_STMT
  _7 = next != 0;
  answer = (os_boolean_t) _7;

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.7653 = answer;
  return D.7653;

}


