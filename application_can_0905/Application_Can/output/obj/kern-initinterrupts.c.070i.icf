Parsed function:OS_InitInterrupts
Dump after hash based groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Dump after WPA based types groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Init called for 0 items (0.00%).
Dump after full equality comparison of groups
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Congruence classes: 1 (unique hash values: 1), with total: 1 items
Class size histogram [num of members]: number of classe number of classess
[1]: 1 classes



Item count: 1
Congruent classes before: 1, after: 1
Average class size before: 1.00, after: 1.00
Average non-singular class size: 0.00, count: 0
Equal symbols: 0
Fraction of visited symbols: 0.00%

__attribute__((target ("general-regs-only")))
OS_InitInterrupts ()
{
  struct os_isrdynamic_t * const isrd;
  const struct os_isr_t * const isr;
  os_isrid_t i;
  const struct os_isr_t * OS_isrTableBase.0_1;
  unsigned int _2;
  unsigned int _3;
  const struct os_archisr_t * _4;
  unsigned char _5;
  signed char _6;
  short unsigned int OS_nInterrupts.2_7;

  <bb 2> [local count: 118111600]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG myCoreId => 0
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 7>; [100.00%]

  <bb 3> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  OS_isrTableBase.0_1 = OS_isrTableBase;
  _2 = (unsigned int) i_8;
  _3 = _2 * 68;
  isr_12 = OS_isrTableBase.0_1 + _3;
  # DEBUG isr => isr_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  isrd_13 = isr_12->dynamic;
  # DEBUG isrd => isrd_13
  # DEBUG BEGIN_STMT
  _4 = &isr_12->arch;
  OS_CORTEXM_IntSetupIsr (_4);
  # DEBUG BEGIN_STMT
  _5 = isr_12->flags;
  _6 = (signed char) _5;
  if (_6 < 0)
    goto <bb 4>; [25.50%]
  else
    goto <bb 5>; [74.50%]

  <bb 4> [local count: 243685707]:
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntEnableIsr (_4);
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 711944516]:
  # DEBUG BEGIN_STMT
  isrd_13->statusflags = 32;

  <bb 6> [local count: 955630223]:
  # DEBUG BEGIN_STMT
  i_17 = i_8 + 1;
  # DEBUG i => i_17

  <bb 7> [local count: 1073741824]:
  # i_8 = PHI <0(2), i_17(6)>
  # DEBUG i => i_8
  # DEBUG BEGIN_STMT
  OS_nInterrupts.2_7 = OS_nInterrupts;
  if (OS_nInterrupts.2_7 > i_8)
    goto <bb 3>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111601]:
  return;

}


