
Marking local functions: ComM_PNCWakeUpIndication_ChannelHandle ComM_PNCWakeUpIndication_PncHandle ComM_ProcessPncComSignals ComM_RequestComModeChannel_Helper ComM_RequestComModePNC_Helper


Marking externally visible functions: ComM_IsValidConfig ComM_PncMainFunction ComM_EB_GetPncRequestedComMode ComM_BitArrayIsBitSet ComM_BitArrayClear ComM_BitArraySet ComM_EvaluatePnc ComM_EB_SetRequestedComMode ComM_EB_GetUserRequestedComMode ComM_BusSM_ModeIndication ComM_CommunicationAllowed ComM_EcuM_PNCWakeUpIndication ComM_EcuM_WakeUpIndication ComM_DCM_InactiveDiagnostic ComM_DCM_ActiveDiagnostic ComM_BusSM_BusSleepMode ComM_Nm_RestartIndication ComM_Nm_BusSleepMode ComM_Nm_PrepareBusSleepMode ComM_Nm_NetworkMode ComM_Nm_NetworkStartIndication ComM_ASR40_GetCurrentPNCComMode ComM_ASR40_GetCurrentComMode ComM_ASR40_GetRequestedComMode ComM_ASR40_GetMaxComMode ComM_ASR40_RequestComMode ComM_GetStatus ComM_GetState ComM_DeInit ComM_Init


Marking externally visible variables: ComM_RteNotificationDoActFkp ComM_ConfigPtr ComM_InitStatus ComM_RteNotificationSuccessful ComM_RxEiraSignalStatus ComM_RxEira ComM_TxEiraEraActive ComM_PNCMode ComM_PNCRequestedComMode ComM_UserRequestedComMode ComM_ChanState ComM_ChannelMode ComM_PassiveStartupStatus ComM_RequestedComMode ComM_Communication_Allowed ComM_DcmActiveStatus


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

ComM_LcfgSignature/71 (ComM_LcfgSignature) @06e63870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ComM_IsValidConfig/50 (read)
  Availability: not_available
  Varpool flags: read-only
TS_PlatformSigIsValid/70 (TS_PlatformSigIsValid) @06e660e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_IsValidConfig/50 
  Calls: 
ComM_PncRxEiraMask/69 (ComM_PncRxEiraMask) @06e633f0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ComM_ProcessPncComSignals/48 (read)
  Availability: not_available
  Varpool flags: read-only
Com_ReceiveSignal/68 (Com_ReceiveSignal) @06e52e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_ProcessPncComSignals/48 
  Calls: 
ComM_HsmMainInst/67 (ComM_HsmMainInst) @06e52a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_PncMainFunction/49 
  Calls: 
ComM_RxComSignalEiraCfg/66 (ComM_RxComSignalEiraCfg) @06e5a948
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ComM_PncMainFunction/49 (addr)
  Availability: not_available
  Varpool flags: read-only
ComM_PncID/65 (ComM_PncID) @06e4a900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ComM_EcuM_PNCWakeUpIndication/38 (read)ComM_EB_GetPncRequestedComMode/47 (read)ComM_ProcessPncComSignals/48 (read)ComM_ProcessPncComSignals/48 (read)
  Availability: not_available
  Varpool flags: read-only
ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0/64 (ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0) @04d709a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_ProcessPncComSignals/48 ComM_PncMainFunction/49 ComM_EvaluatePnc/43 ComM_CommunicationAllowed/39 ComM_CommunicationAllowed/39 ComM_DCM_InactiveDiagnostic/36 ComM_DCM_ActiveDiagnostic/35 
  Calls: 
ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0/63 (ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0) @04d708c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_ProcessPncComSignals/48 ComM_PncMainFunction/49 ComM_EvaluatePnc/43 ComM_CommunicationAllowed/39 ComM_CommunicationAllowed/39 ComM_DCM_InactiveDiagnostic/36 ComM_DCM_ActiveDiagnostic/35 
  Calls: 
CanSM_GetCurrentComMode/62 (CanSM_GetCurrentComMode) @06dd70e0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: ComM_ASR40_GetCurrentComMode/27 (addr)
  Availability: not_available
  Function flags: optimize_size
  Called by: 
  Calls: 
ComM_HsmEmitInst/61 (ComM_HsmEmitInst) @06dd7a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_ProcessPncComSignals/48 ComM_ProcessPncComSignals/48 ComM_ProcessPncComSignals/48 ComM_ProcessPncComSignals/48 ComM_EvaluatePnc/43 ComM_EvaluatePnc/43 ComM_BusSM_ModeIndication/40 ComM_CommunicationAllowed/39 ComM_PNCWakeUpIndication_ChannelHandle/52 ComM_PNCWakeUpIndication_PncHandle/51 ComM_EcuM_WakeUpIndication/37 ComM_DCM_InactiveDiagnostic/36 ComM_DCM_ActiveDiagnostic/35 ComM_Nm_RestartIndication/33 ComM_Nm_BusSleepMode/32 ComM_Nm_PrepareBusSleepMode/31 ComM_Nm_NetworkMode/30 ComM_Nm_NetworkStartIndication/29 ComM_RequestComModeChannel_Helper/23 
  Calls: 
ComM_EvaluateChannel/60 (ComM_EvaluateChannel) @06dd78c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_RequestComModeChannel_Helper/23 
  Calls: 
ComM_RteNotificationDoAction/59 (ComM_RteNotificationDoAction) @06dd71c0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: ComM_Init/18 (addr)
  Availability: not_available
  Function flags: optimize_size
  Called by: 
  Calls: 
ComM_RteModeUser/58 (ComM_RteModeUser) @06dd3948
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ComM_Init/18 (write)
  Availability: not_available
  Varpool flags:
ComM_HsmScComMPnc/57 (ComM_HsmScComMPnc) @06dd3870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ComM_Init/18 (addr)ComM_PNCWakeUpIndication_PncHandle/51 (addr)ComM_EvaluatePnc/43 (addr)ComM_EvaluatePnc/43 (addr)ComM_PncMainFunction/49 (read)ComM_PncMainFunction/49 (addr)ComM_ProcessPncComSignals/48 (addr)ComM_ProcessPncComSignals/48 (addr)ComM_ProcessPncComSignals/48 (addr)ComM_ProcessPncComSignals/48 (addr)
  Availability: not_available
  Varpool flags: read-only
ComM_HsmScComM/56 (ComM_HsmScComM) @06dd37e0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ComM_Init/18 (addr)ComM_RequestComModeChannel_Helper/23 (addr)ComM_Nm_NetworkStartIndication/29 (addr)ComM_Nm_NetworkMode/30 (addr)ComM_Nm_PrepareBusSleepMode/31 (addr)ComM_Nm_BusSleepMode/32 (addr)ComM_Nm_RestartIndication/33 (addr)ComM_DCM_ActiveDiagnostic/35 (addr)ComM_DCM_InactiveDiagnostic/36 (addr)ComM_EcuM_WakeUpIndication/37 (addr)ComM_PNCWakeUpIndication_ChannelHandle/52 (addr)ComM_CommunicationAllowed/39 (addr)ComM_BusSM_ModeIndication/40 (addr)
  Availability: not_available
  Varpool flags: read-only
ComM_HsmInit/55 (ComM_HsmInit) @06dd7000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_Init/18 ComM_Init/18 
  Calls: 
TS_MemSet32/54 (TS_MemSet32) @06dccee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_ProcessPncComSignals/48 ComM_Init/18 ComM_Init/18 ComM_Init/18 
  Calls: 
Det_ASR40_ReportError/53 (Det_ASR40_ReportError) @06dcce00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: ComM_BusSM_ModeIndication/40 ComM_BusSM_ModeIndication/40 ComM_CommunicationAllowed/39 ComM_CommunicationAllowed/39 ComM_EcuM_PNCWakeUpIndication/38 ComM_EcuM_PNCWakeUpIndication/38 ComM_EcuM_WakeUpIndication/37 ComM_EcuM_WakeUpIndication/37 ComM_DCM_InactiveDiagnostic/36 ComM_DCM_InactiveDiagnostic/36 ComM_DCM_ActiveDiagnostic/35 ComM_DCM_ActiveDiagnostic/35 ComM_BusSM_BusSleepMode/34 ComM_BusSM_BusSleepMode/34 ComM_Nm_RestartIndication/33 ComM_Nm_RestartIndication/33 ComM_Nm_BusSleepMode/32 ComM_Nm_BusSleepMode/32 ComM_Nm_PrepareBusSleepMode/31 ComM_Nm_PrepareBusSleepMode/31 ComM_Nm_NetworkMode/30 ComM_Nm_NetworkMode/30 ComM_Nm_NetworkStartIndication/29 ComM_Nm_NetworkStartIndication/29 ComM_ASR40_GetCurrentPNCComMode/28 ComM_ASR40_GetCurrentPNCComMode/28 ComM_ASR40_GetCurrentPNCComMode/28 ComM_ASR40_GetCurrentComMode/27 ComM_ASR40_GetCurrentComMode/27 ComM_ASR40_GetRequestedComMode/26 ComM_ASR40_GetRequestedComMode/26 ComM_ASR40_GetMaxComMode/25 ComM_ASR40_GetMaxComMode/25 ComM_ASR40_RequestComMode/24 ComM_ASR40_RequestComMode/24 ComM_ASR40_RequestComMode/24 ComM_GetStatus/21 ComM_GetState/20 ComM_GetState/20 ComM_DeInit/19 ComM_Init/18 ComM_Init/18 
  Calls: 
ComM_PNCWakeUpIndication_ChannelHandle/52 (ComM_PNCWakeUpIndication_ChannelHandle) @06dccc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_DcmActiveStatus/1 (read)ComM_RequestedComMode/3 (read)ComM_PassiveStartupStatus/4 (write)ComM_HsmScComM/56 (addr)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: ComM_EcuM_PNCWakeUpIndication/38 
  Calls: ComM_HsmEmitInst/61 
ComM_PNCWakeUpIndication_PncHandle/51 (ComM_PNCWakeUpIndication_PncHandle) @06dcc8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: ComM_HsmScComMPnc/57 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: ComM_EcuM_PNCWakeUpIndication/38 
  Calls: ComM_HsmEmitInst/61 
ComM_IsValidConfig/50 (ComM_IsValidConfig) @06dcc620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_LcfgSignature/71 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: ComM_Init/18 
  Calls: TS_PlatformSigIsValid/70 
ComM_PncMainFunction/49 (ComM_PncMainFunction) @06dcc460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComMPncMainfunctionRunning/17 (read)ComMPncMainfunctionRunning/17 (write)ComM_RxEiraSignalStatus/12 (addr)ComM_RxComSignalEiraCfg/66 (addr)ComM_RxEira/11 (addr)ComM_HsmScComMPnc/57 (read)ComM_HsmScComMPnc/57 (addr)ComMPncMainfunctionRunning/17 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmMainInst/67 ComM_ProcessPncComSignals/48 ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0/64 ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0/63 
ComM_ProcessPncComSignals/48 (ComM_ProcessPncComSignals) @06dcc2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: ComM_PncRxEiraMask/69 (read)ComM_PncID/65 (read)ComM_PncID/65 (read)ComM_HsmScComMPnc/57 (addr)ComM_HsmScComMPnc/57 (addr)ComM_HsmScComMPnc/57 (addr)ComM_HsmScComMPnc/57 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: ComM_PncMainFunction/49 
  Calls: ComM_HsmEmitInst/61 ComM_HsmEmitInst/61 ComM_HsmEmitInst/61 ComM_HsmEmitInst/61 Com_ReceiveSignal/68 ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0/64 ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0/63 TS_MemSet32/54 
ComM_EB_GetPncRequestedComMode/47 (ComM_EB_GetPncRequestedComMode) @06dc7d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_PncID/65 (read)ComM_PNCRequestedComMode/8 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
ComM_BitArrayIsBitSet/46 (ComM_BitArrayIsBitSet) @06dc7a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
ComM_BitArrayClear/45 (ComM_BitArrayClear) @06dc78c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
ComM_BitArraySet/44 (ComM_BitArraySet) @06dc7700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
ComM_EvaluatePnc/43 (ComM_EvaluatePnc) @06dc7540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_UserRequestedComMode/7 (read)ComM_UserRequestedComMode/7 (read)ComM_HsmScComMPnc/57 (addr)ComM_HsmScComMPnc/57 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: ComM_RequestComModePNC_Helper/22 
  Calls: ComM_HsmEmitInst/61 ComM_HsmEmitInst/61 ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0/64 ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0/63 
ComM_EB_SetRequestedComMode/42 (ComM_EB_SetRequestedComMode) @06dc70e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_RequestedComMode/3 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
ComM_EB_GetUserRequestedComMode/41 (ComM_EB_GetUserRequestedComMode) @06d9eee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_UserRequestedComMode/7 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
ComM_BusSM_ModeIndication/40 (ComM_BusSM_ModeIndication) @06d9ed20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_ChannelMode/5 (write)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_CommunicationAllowed/39 (ComM_CommunicationAllowed) @06d9ea80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_Communication_Allowed/2 (write)ComM_Communication_Allowed/2 (write)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0/64 ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0/63 ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0/64 ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0/63 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_EcuM_PNCWakeUpIndication/38 (ComM_EcuM_PNCWakeUpIndication) @06d9e7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_PncID/65 (read)ComM_InitStatus/14 (read)ComM_ConfigPtr/15 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_PNCWakeUpIndication_ChannelHandle/52 ComM_PNCWakeUpIndication_PncHandle/51 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_EcuM_WakeUpIndication/37 (ComM_EcuM_WakeUpIndication) @06d9e620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_DcmActiveStatus/1 (read)ComM_RequestedComMode/3 (read)ComM_PassiveStartupStatus/4 (write)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_DCM_InactiveDiagnostic/36 (ComM_DCM_InactiveDiagnostic) @06d9e380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_DcmActiveStatus/1 (write)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0/64 ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0/63 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_DCM_ActiveDiagnostic/35 (ComM_DCM_ActiveDiagnostic) @06d9e0e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_DcmActiveStatus/1 (write)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0/64 ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0/63 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_BusSM_BusSleepMode/34 (ComM_BusSM_BusSleepMode) @06d97e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_Nm_RestartIndication/33 (ComM_Nm_RestartIndication) @06d97b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_DcmActiveStatus/1 (read)ComM_RequestedComMode/3 (read)ComM_PassiveStartupStatus/4 (write)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_Nm_BusSleepMode/32 (ComM_Nm_BusSleepMode) @06d978c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_Nm_PrepareBusSleepMode/31 (ComM_Nm_PrepareBusSleepMode) @06d97620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_Nm_NetworkMode/30 (ComM_Nm_NetworkMode) @06d97380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_Nm_NetworkStartIndication/29 (ComM_Nm_NetworkStartIndication) @06d970e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_DcmActiveStatus/1 (read)ComM_RequestedComMode/3 (read)ComM_PassiveStartupStatus/4 (write)ComM_HsmScComM/56 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_HsmEmitInst/61 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_ASR40_GetCurrentPNCComMode/28 (ComM_ASR40_GetCurrentPNCComMode) @06d89e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_PNCMode/9 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_ASR40_GetCurrentComMode/27 (ComM_ASR40_GetCurrentComMode) @06d89b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)CanSM_GetCurrentComMode/62 (addr)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
   Indirect call
ComM_ASR40_GetRequestedComMode/26 (ComM_ASR40_GetRequestedComMode) @06d897e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_UserRequestedComMode/7 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_ASR40_GetMaxComMode/25 (ComM_ASR40_GetMaxComMode) @06d89620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ChanState/6 (read)ComM_Communication_Allowed/2 (read)ComM_ChanState/6 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_ASR40_RequestComMode/24 (ComM_ASR40_RequestComMode) @06d89380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_UserRequestedComMode/7 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: ComM_RequestComModeChannel_Helper/23 ComM_RequestComModePNC_Helper/22 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_RequestComModeChannel_Helper/23 (ComM_RequestComModeChannel_Helper) @06d891c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_UserRequestedComMode/7 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_HsmScComM/56 (addr)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: ComM_ASR40_RequestComMode/24 
  Calls: ComM_HsmEmitInst/61 ComM_EvaluateChannel/60 
ComM_RequestComModePNC_Helper/22 (ComM_RequestComModePNC_Helper) @06d36e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)ComM_ConfigPtr/15 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: ComM_ASR40_RequestComMode/24 
  Calls: ComM_EvaluatePnc/43 
ComM_GetStatus/21 (ComM_GetStatus) @06d36b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/53 
ComM_GetState/20 (ComM_GetState) @06d369a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_ChanState/6 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/53 Det_ASR40_ReportError/53 
ComM_DeInit/19 (ComM_DeInit) @06d367e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_InitStatus/14 (read)ComM_ChanState/6 (read)ComM_InitStatus/14 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/53 
ComM_Init/18 (ComM_Init) @06d36620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: ComM_ConfigPtr/15 (write)ComM_RequestedComMode/3 (write)ComM_ChanState/6 (write)ComM_ChannelMode/5 (write)ComM_UserRequestedComMode/7 (addr)ComM_HsmScComM/56 (addr)ComM_Communication_Allowed/2 (write)ComM_DcmActiveStatus/1 (write)ComM_PassiveStartupStatus/4 (write)ComM_ConfigPtr/15 (read)ComM_HsmScComMPnc/57 (addr)ComM_RxEira/11 (write)ComM_TxEiraEraActive/10 (write)ComM_RxEiraSignalStatus/12 (write)ComM_PNCRequestedComMode/8 (addr)ComM_PNCMode/9 (addr)ComMPncMainfunctionRunning/17 (write)ComM_RteNotificationSuccessful/13 (write)ComM_RteModeUser/58 (write)ComM_RteNotificationDoActFkp/16 (write)ComM_RteNotificationDoAction/59 (addr)ComM_InitStatus/14 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: TS_MemSet32/54 TS_MemSet32/54 ComM_HsmInit/55 ComM_HsmInit/55 TS_MemSet32/54 Det_ASR40_ReportError/53 ComM_IsValidConfig/50 Det_ASR40_ReportError/53 
ComMPncMainfunctionRunning/17 (ComMPncMainfunctionRunning) @06d353f0
  Type: variable definition analyzed
  Visibility: force_output prevailing_def_ironly
  References: 
  Referring: ComM_Init/18 (write)ComM_PncMainFunction/49 (read)ComM_PncMainFunction/49 (write)ComM_PncMainFunction/49 (write)
  Availability: available
  Varpool flags:
ComM_RteNotificationDoActFkp/16 (ComM_RteNotificationDoActFkp) @06d353a8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)
  Availability: available
  Varpool flags:
ComM_ConfigPtr/15 (ComM_ConfigPtr) @06d35360
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_Init/18 (read)ComM_RequestComModePNC_Helper/22 (read)ComM_RequestComModePNC_Helper/22 (read)ComM_RequestComModePNC_Helper/22 (read)ComM_RequestComModePNC_Helper/22 (read)ComM_RequestComModePNC_Helper/22 (read)ComM_RequestComModePNC_Helper/22 (read)ComM_RequestComModeChannel_Helper/23 (read)ComM_RequestComModeChannel_Helper/23 (read)ComM_RequestComModeChannel_Helper/23 (read)ComM_RequestComModeChannel_Helper/23 (read)ComM_RequestComModeChannel_Helper/23 (read)ComM_RequestComModeChannel_Helper/23 (read)ComM_RequestComModeChannel_Helper/23 (read)ComM_ASR40_GetMaxComMode/25 (read)ComM_ASR40_GetMaxComMode/25 (read)ComM_ASR40_GetMaxComMode/25 (read)ComM_ASR40_GetMaxComMode/25 (read)ComM_ASR40_GetMaxComMode/25 (read)ComM_ASR40_GetCurrentComMode/27 (read)ComM_ASR40_GetCurrentComMode/27 (read)ComM_ASR40_GetCurrentComMode/27 (read)ComM_ASR40_GetCurrentComMode/27 (read)ComM_ASR40_GetCurrentComMode/27 (read)ComM_ASR40_GetCurrentPNCComMode/28 (read)ComM_ASR40_GetCurrentPNCComMode/28 (read)ComM_ASR40_GetCurrentPNCComMode/28 (read)ComM_ASR40_GetCurrentPNCComMode/28 (read)ComM_ASR40_GetCurrentPNCComMode/28 (read)ComM_EcuM_PNCWakeUpIndication/38 (read)ComM_PNCWakeUpIndication_ChannelHandle/52 (read)ComM_PNCWakeUpIndication_ChannelHandle/52 (read)ComM_PNCWakeUpIndication_ChannelHandle/52 (read)ComM_PNCWakeUpIndication_ChannelHandle/52 (read)ComM_PNCWakeUpIndication_ChannelHandle/52 (read)ComM_EvaluatePnc/43 (read)ComM_EvaluatePnc/43 (read)ComM_EvaluatePnc/43 (read)ComM_EvaluatePnc/43 (read)ComM_EvaluatePnc/43 (read)ComM_EB_GetPncRequestedComMode/47 (read)ComM_EB_GetPncRequestedComMode/47 (read)ComM_EB_GetPncRequestedComMode/47 (read)
  Availability: available
  Varpool flags:
ComM_InitStatus/14 (ComM_InitStatus) @06d35318
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_DeInit/19 (read)ComM_DeInit/19 (write)ComM_GetState/20 (read)ComM_GetStatus/21 (read)ComM_ASR40_RequestComMode/24 (read)ComM_ASR40_GetMaxComMode/25 (read)ComM_ASR40_GetRequestedComMode/26 (read)ComM_ASR40_GetCurrentComMode/27 (read)ComM_ASR40_GetCurrentPNCComMode/28 (read)ComM_Nm_NetworkStartIndication/29 (read)ComM_Nm_NetworkMode/30 (read)ComM_Nm_PrepareBusSleepMode/31 (read)ComM_Nm_BusSleepMode/32 (read)ComM_Nm_RestartIndication/33 (read)ComM_BusSM_BusSleepMode/34 (read)ComM_DCM_ActiveDiagnostic/35 (read)ComM_DCM_InactiveDiagnostic/36 (read)ComM_EcuM_WakeUpIndication/37 (read)ComM_EcuM_PNCWakeUpIndication/38 (read)ComM_CommunicationAllowed/39 (read)ComM_BusSM_ModeIndication/40 (read)
  Availability: available
  Varpool flags: initialized
ComM_RteNotificationSuccessful/13 (ComM_RteNotificationSuccessful) @06d352d0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)
  Availability: available
  Varpool flags:
ComM_RxEiraSignalStatus/12 (ComM_RxEiraSignalStatus) @06d35288
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_PncMainFunction/49 (addr)
  Availability: available
  Varpool flags:
ComM_RxEira/11 (ComM_RxEira) @06d35240
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_PncMainFunction/49 (addr)
  Availability: available
  Varpool flags:
ComM_TxEiraEraActive/10 (ComM_TxEiraEraActive) @06d351f8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)
  Availability: available
  Varpool flags:
ComM_PNCMode/9 (ComM_PNCMode) @06d351b0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (addr)ComM_ASR40_GetCurrentPNCComMode/28 (read)
  Availability: available
  Varpool flags:
ComM_PNCRequestedComMode/8 (ComM_PNCRequestedComMode) @06d35168
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (addr)ComM_EB_GetPncRequestedComMode/47 (read)
  Availability: available
  Varpool flags:
ComM_UserRequestedComMode/7 (ComM_UserRequestedComMode) @06d35120
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (addr)ComM_ASR40_RequestComMode/24 (write)ComM_RequestComModeChannel_Helper/23 (read)ComM_ASR40_GetRequestedComMode/26 (read)ComM_EB_GetUserRequestedComMode/41 (read)ComM_EvaluatePnc/43 (read)ComM_EvaluatePnc/43 (read)
  Availability: available
  Varpool flags:
ComM_ChanState/6 (ComM_ChanState) @06d350d8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_DeInit/19 (read)ComM_GetState/20 (read)ComM_ASR40_GetMaxComMode/25 (read)ComM_ASR40_GetMaxComMode/25 (read)
  Availability: available
  Varpool flags:
ComM_ChannelMode/5 (ComM_ChannelMode) @06d35090
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_BusSM_ModeIndication/40 (write)
  Availability: available
  Varpool flags:
ComM_PassiveStartupStatus/4 (ComM_PassiveStartupStatus) @06d35048
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_Nm_NetworkStartIndication/29 (write)ComM_Nm_RestartIndication/33 (write)ComM_EcuM_WakeUpIndication/37 (write)ComM_PNCWakeUpIndication_ChannelHandle/52 (write)
  Availability: available
  Varpool flags:
ComM_RequestedComMode/3 (ComM_RequestedComMode) @06d35000
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_Nm_NetworkStartIndication/29 (read)ComM_Nm_RestartIndication/33 (read)ComM_EcuM_WakeUpIndication/37 (read)ComM_PNCWakeUpIndication_ChannelHandle/52 (read)ComM_EB_SetRequestedComMode/42 (write)
  Availability: available
  Varpool flags:
ComM_Communication_Allowed/2 (ComM_Communication_Allowed) @06ceef78
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_ASR40_GetMaxComMode/25 (read)ComM_CommunicationAllowed/39 (write)ComM_CommunicationAllowed/39 (write)
  Availability: available
  Varpool flags:
ComM_DcmActiveStatus/1 (ComM_DcmActiveStatus) @06ceef30
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: ComM_Init/18 (write)ComM_Nm_NetworkStartIndication/29 (read)ComM_Nm_RestartIndication/33 (read)ComM_DCM_ActiveDiagnostic/35 (write)ComM_DCM_InactiveDiagnostic/36 (write)ComM_EcuM_WakeUpIndication/37 (read)ComM_PNCWakeUpIndication_ChannelHandle/52 (read)
  Availability: available
  Varpool flags:
ComM_PNCWakeUpIndication_ChannelHandle (PNCHandleType pncIdx)
{
  const uint8 Channel;
  uint8 chIdx;
  boolean PassiveStartupStatus;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PassiveStartupStatus = 0;
  # DEBUG BEGIN_STMT
  chIdx = 0;
  # DEBUG BEGIN_STMT
  chIdx = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.51_1 = ComM_ConfigPtr;
  ComM_ConfigPtr.52_2 = ComM_ConfigPtr;
  _3 = ComM_ConfigPtr.52_2->pChannelsOfAllPnc;
  ComM_ConfigPtr.53_4 = ComM_ConfigPtr;
  _5 = (int) pncIdx;
  _6 = ComM_ConfigPtr.53_4->NumChannelsOfAllPnc[_5];
  _7 = (int) _6;
  _8 = (int) chIdx;
  _9 = _7 + _8;
  _10 = (sizetype) _9;
  _11 = _3 + _10;
  _12 = ComM_ConfigPtr.51_1 + _11;
  Channel = *_12;
  # DEBUG BEGIN_STMT
  _13 = (int) Channel;
  PassiveStartupStatus = ComM_DcmActiveStatus[_13];
  # DEBUG BEGIN_STMT
  _14 = (int) Channel;
  _15 = ComM_RequestedComMode[_14];
  if (_15 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  if (PassiveStartupStatus == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _16 = (int) Channel;
  ComM_PassiveStartupStatus[_16] = 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  _17 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _17, 6);
  # DEBUG BEGIN_STMT
  chIdx.54_18 = chIdx;
  chIdx = chIdx.54_18 + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.55_19 = ComM_ConfigPtr;
  _20 = (unsigned int) pncIdx;
  _21 = _20 + 1;
  _22 = ComM_ConfigPtr.55_19->NumChannelsOfAllPnc[_21];
  _23 = (unsigned char) _22;
  ComM_ConfigPtr.56_24 = ComM_ConfigPtr;
  _25 = (int) pncIdx;
  _26 = ComM_ConfigPtr.56_24->NumChannelsOfAllPnc[_25];
  _27 = (unsigned char) _26;
  _28 = _23 - _27;
  if (chIdx < _28)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


ComM_PNCWakeUpIndication_PncHandle (PNCHandleType pncIdx)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, pncIdx, 4);
  # DEBUG BEGIN_STMT
  return;

}


ComM_IsValidConfig (const void * voidConfigPtr)
{
  const struct ComM_ConfigType * ConfigPtr;
  Std_ReturnType result;
  Std_ReturnType D.7342;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  ConfigPtr = voidConfigPtr;
  # DEBUG BEGIN_STMT
  if (ConfigPtr != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = ConfigPtr->PlatformSignature;
  _2 = TS_PlatformSigIsValid (_1);
  if (_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = ConfigPtr->CfgSignature;
  if (_3 == 4283348280)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = ConfigPtr->LcfgSignature;
  ComM_LcfgSignature.73_5 = ComM_LcfgSignature;
  if (_4 == ComM_LcfgSignature.73_5)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _6 = ConfigPtr->PublicInfoSignature;
  if (_6 == 1499283658)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  result = 0;

  <bb 8> :
  # DEBUG BEGIN_STMT
  D.7342 = result;
  return D.7342;

}


ComM_PncMainFunction ()
{
  boolean ComMExecutePncMainFunction;
  PNCHandleType PncIdx;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComMExecutePncMainFunction = 0;
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  ComMPncMainfunctionRunning.67_1 = ComMPncMainfunctionRunning;
  if (ComMPncMainfunctionRunning.67_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComMPncMainfunctionRunning = 1;
  # DEBUG BEGIN_STMT
  ComMExecutePncMainFunction = 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ComMExecutePncMainFunction == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ComM_ProcessPncComSignals (&ComM_RxEiraSignalStatus, &ComM_RxComSignalEiraCfg, &ComM_RxEira, 0);
  # DEBUG BEGIN_STMT
  PncIdx = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = ComM_HsmScComMPnc.instances;
  _3 = (unsigned int) PncIdx;
  _4 = _3 * 4;
  _5 = _2 + _4;
  _6 = _5->evQueueFill;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_HsmMainInst (&ComM_HsmScComMPnc, PncIdx);

  <bb 8> :
  # DEBUG BEGIN_STMT
  PncIdx.68_7 = PncIdx;
  PncIdx = PncIdx.68_7 + 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (PncIdx <= 1)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ComMPncMainfunctionRunning = 0;

  <bb 11> :
  return;

}


ComM_ProcessPncComSignals (boolean * SignalStatusPtr, const struct ComM_RxSignal_Struct_Type * SignalConfigurationPtr, uint8 * SignalMergedPtr, uint8 SignalKind)
{
  uint8 EiraMask;
  Std_ReturnType retVal;
  uint8 RxEiraReceived[6];
  uint8 signalCount;
  boolean EiraStatus;
  uint8 RxEiraMerged[6];
  uint8 i;
  uint8 Index;
  PNCHandleType PncIdx;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  EiraStatus = 0;
  # DEBUG BEGIN_STMT
  signalCount = 0;
  # DEBUG BEGIN_STMT
  TS_MemSet32 (&RxEiraMerged, 0, 6);
  # DEBUG BEGIN_STMT
  signalCount = 1;
  # DEBUG BEGIN_STMT
  _1 = *SignalStatusPtr;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  *SignalStatusPtr = 0;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Index = 0;
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (unsigned int) Index;
  _3 = _2 * 2;
  _4 = SignalConfigurationPtr + _3;
  _5 = _4->ComHandleId;
  retVal = Com_ReceiveSignal (_5, &RxEiraReceived);
  # DEBUG BEGIN_STMT
  if (retVal == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  EiraStatus = 1;
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _6 = (int) i;
  _7 = RxEiraMerged[_6];
  _8 = (int) i;
  _9 = RxEiraReceived[_8];
  _10 = (int) Index;
  _11 = ComM_PncRxEiraMask[_10];
  _12 = (sizetype) i;
  _13 = _11 + _12;
  _14 = *_13;
  _15 = _9 & _14;
  _16 = (int) i;
  _17 = _7 | _15;
  RxEiraMerged[_16] = _17;
  # DEBUG BEGIN_STMT
  i.69_18 = i;
  i = i.69_18 + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (i <= 5)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  RxEiraReceived = {CLOBBER};
  # DEBUG BEGIN_STMT
  Index.70_19 = Index;
  Index = Index.70_19 + 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (Index < signalCount)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (EiraStatus == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  PncIdx = 0;
  goto <bb 22>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = (int) PncIdx;
  _21 = ComM_PncID[_20];
  _22 = _21 >> 3;
  _23 = (unsigned char) _22;
  Index = _23 + 254;
  # DEBUG BEGIN_STMT
  _24 = (int) PncIdx;
  _25 = ComM_PncID[_24];
  _26 = (unsigned int) _25;
  _27 = _26 & 7;
  _28 = 1 << _27;
  EiraMask = (uint8) _28;
  # DEBUG BEGIN_STMT
  _29 = (sizetype) Index;
  _30 = SignalMergedPtr + _29;
  _31 = *_30;
  _32 = (int) Index;
  _33 = RxEiraMerged[_32];
  _34 = _31 ^ _33;
  _35 = EiraMask & _34;
  if (_35 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (SignalKind == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, PncIdx, 3);
  goto <bb 17>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (SignalKind == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, PncIdx, 0);

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = SignalKind + 255;
  if (_36 <= 1)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _37 = (int) Index;
  _38 = RxEiraMerged[_37];
  _39 = EiraMask & _38;
  if (_39 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, PncIdx, 6);
  goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, PncIdx, 2);

  <bb 21> :
  # DEBUG BEGIN_STMT
  PncIdx.71_40 = PncIdx;
  PncIdx = PncIdx.71_40 + 1;

  <bb 22> :
  # DEBUG BEGIN_STMT
  if (PncIdx <= 1)
    goto <bb 12>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  Index = 0;
  goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  _41 = (int) Index;
  _42 = (sizetype) Index;
  _43 = SignalMergedPtr + _42;
  _44 = RxEiraMerged[_41];
  *_43 = _44;
  # DEBUG BEGIN_STMT
  Index.72_45 = Index;
  Index = Index.72_45 + 1;

  <bb 25> :
  # DEBUG BEGIN_STMT
  if (Index <= 5)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  RxEiraMerged = {CLOBBER};
  return;

}


ComM_EB_GetPncRequestedComMode (uint8 Channel, PNCHandleType PncPos)
{
  PNCHandleType PncIDIdx;
  PNCHandleType Idx;
  ComM_ASR40_ModeType reqMode;
  ComM_ASR40_ModeType D.7304;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PncIDIdx = 0;
  # DEBUG BEGIN_STMT
  Idx = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.64_1 = ComM_ConfigPtr;
  ComM_ConfigPtr.65_2 = ComM_ConfigPtr;
  _3 = ComM_ConfigPtr.65_2->pPNCsOfAllChannel;
  ComM_ConfigPtr.66_4 = ComM_ConfigPtr;
  _5 = (int) Channel;
  _6 = ComM_ConfigPtr.66_4->NumPncOfAllCh[_5];
  _7 = (int) _6;
  _8 = (int) PncPos;
  _9 = _7 + _8;
  _10 = (unsigned int) _9;
  _11 = _10 * 2;
  _12 = _3 + _11;
  _13 = ComM_ConfigPtr.64_1 + _12;
  _14 = *_13;
  _15 = (int) Idx;
  _16 = ComM_PncID[_15];
  if (_14 == _16)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  PncIDIdx = Idx;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Idx = Idx + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Idx <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _17 = (int) PncIDIdx;
  reqMode = ComM_PNCRequestedComMode[_17];
  # DEBUG BEGIN_STMT
  D.7304 = reqMode;
  return D.7304;

}


ComM_BitArrayIsBitSet (const uint8 * arr, uint16 idx)
{
  boolean RetVal;
  boolean D.7300;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = idx / 8;
  _2 = (sizetype) _1;
  _3 = arr + _2;
  _4 = *_3;
  _5 = (int) _4;
  _6 = (unsigned int) idx;
  _7 = _6 & 7;
  _8 = _5 >> _7;
  _9 = (unsigned char) _8;
  RetVal = _9 & 1;
  # DEBUG BEGIN_STMT
  D.7300 = RetVal;
  return D.7300;

}


ComM_BitArrayClear (uint8 * arr, uint16 idx)
{
  short unsigned int D.7299;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.7299 = idx / 8;
  _1 = (sizetype) D.7299;
  _2 = arr + _1;
  _3 = *_2;
  _4 = (unsigned int) idx;
  _5 = _4 & 7;
  _6 = 1 << _5;
  _7 = (unsigned char) _6;
  _8 = ~_7;
  _9 = (sizetype) D.7299;
  _10 = arr + _9;
  _11 = _3 & _8;
  *_10 = _11;
  return;

}


ComM_BitArraySet (uint8 * arr, uint16 idx)
{
  short unsigned int D.7298;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.7298 = idx / 8;
  _1 = (sizetype) D.7298;
  _2 = arr + _1;
  _3 = *_2;
  _4 = (unsigned int) idx;
  _5 = _4 & 7;
  _6 = 1 << _5;
  _7 = (unsigned char) _6;
  _8 = (sizetype) D.7298;
  _9 = arr + _8;
  _10 = _3 | _7;
  *_9 = _10;
  return;

}


ComM_EvaluatePnc (PNCHandleType Pnc, ComM_ASR40_ModeType ComMode)
{
  const uint8 UserOfPnc;
  uint8_least UserPos;
  const uint8_least NumUser;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.59_1 = ComM_ConfigPtr;
  _2 = (unsigned int) Pnc;
  _3 = _2 + 1;
  _4 = ComM_ConfigPtr.59_1->NumUsersOfAllPnc[_3];
  _5 = (unsigned char) _4;
  ComM_ConfigPtr.60_6 = ComM_ConfigPtr;
  _7 = (int) Pnc;
  _8 = ComM_ConfigPtr.60_6->NumUsersOfAllPnc[_7];
  _9 = (unsigned char) _8;
  _10 = _5 - _9;
  NumUser = (const uint8_least) _10;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  UserPos = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.61_11 = ComM_ConfigPtr;
  ComM_ConfigPtr.62_12 = ComM_ConfigPtr;
  _13 = ComM_ConfigPtr.62_12->pUsersOfAllPnc;
  ComM_ConfigPtr.63_14 = ComM_ConfigPtr;
  _15 = (int) Pnc;
  _16 = ComM_ConfigPtr.63_14->NumUsersOfAllPnc[_15];
  _17 = (long unsigned int) _16;
  _18 = UserPos + _17;
  _19 = _13 + _18;
  _20 = ComM_ConfigPtr.61_11 + _19;
  UserOfPnc = *_20;
  # DEBUG BEGIN_STMT
  _21 = (int) UserOfPnc;
  _22 = ComM_UserRequestedComMode[_21];
  if (ComMode < _22)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _23 = (int) UserOfPnc;
  ComMode = ComM_UserRequestedComMode[_23];

  <bb 5> :
  # DEBUG BEGIN_STMT
  UserPos = UserPos + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (UserPos < NumUser)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ComMode == 2)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, Pnc, 6);
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ComM_HsmEmitInst (&ComM_HsmScComMPnc, Pnc, 2);

  <bb 10> :
  return;

}


ComM_EB_SetRequestedComMode (uint8 Channel, ComM_ASR40_ModeType ComMode)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) Channel;
  ComM_RequestedComMode[_1] = ComMode;
  return;

}


ComM_EB_GetUserRequestedComMode (uint8 User)
{
  ComM_ASR40_ModeType ret;
  ComM_ASR40_ModeType D.7291;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) User;
  ret = ComM_UserRequestedComMode[_1];
  # DEBUG BEGIN_STMT
  D.7291 = ret;
  return D.7291;

}


ComM_BusSM_ModeIndication (NetworkHandleType Channel, ComM_ASR40_ModeType * ComMode)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.58_1 = ComM_InitStatus;
  if (ComM_InitStatus.58_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 51, 1);
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ComMode == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (Channel != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 51, 2);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  _3 = *ComMode;
  ComM_ChannelMode[_2] = _3;
  # DEBUG BEGIN_STMT
  _4 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _4, 0);

  <bb 8> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_CommunicationAllowed (NetworkHandleType Channel, boolean Allowed)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.57_1 = ComM_InitStatus;
  if (ComM_InitStatus.57_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 53, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 53, 2);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Allowed == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  ComM_Communication_Allowed[_2] = 1;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = (int) Channel;
  ComM_Communication_Allowed[_3] = 0;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();

  <bb 9> :
  # DEBUG BEGIN_STMT
  _4 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _4, 4);

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_EcuM_PNCWakeUpIndication (PNCHandleType PNCid)
{
  uint8 InstanceID;
  PNCHandleType PncIDIdx;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PncIDIdx = 0;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PncIDIdx = 0;
  goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) PncIDIdx;
  _2 = ComM_PncID[_1];
  if (PNCid == _2)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  PncIDIdx.48_3 = PncIDIdx;
  PncIDIdx = PncIDIdx.48_3 + 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (PncIDIdx <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ComM_InitStatus.49_4 = ComM_InitStatus;
  if (ComM_InitStatus.49_4 != 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 55, 1);
  goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (PncIDIdx > 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 55, 2);
  goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.50_5 = ComM_ConfigPtr;
  _6 = ComM_ConfigPtr.50_5->ComMPncEnabled;
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ComM_PNCWakeUpIndication_PncHandle (PncIDIdx);
  # DEBUG BEGIN_STMT
  ComM_PNCWakeUpIndication_ChannelHandle (PncIDIdx);

  <bb 12> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_EcuM_WakeUpIndication (NetworkHandleType Channel)
{
  uint8 InstanceID;
  boolean PassiveStartupStatus;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PassiveStartupStatus = 0;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.47_1 = ComM_InitStatus;
  if (ComM_InitStatus.47_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 42, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 42, 2);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  PassiveStartupStatus = ComM_DcmActiveStatus[_2];
  # DEBUG BEGIN_STMT
  _3 = (int) Channel;
  _4 = ComM_RequestedComMode[_3];
  if (_4 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (PassiveStartupStatus == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _5 = (int) Channel;
  ComM_PassiveStartupStatus[_5] = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _6, 6);

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_DCM_InactiveDiagnostic (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.46_1 = ComM_InitStatus;
  if (ComM_InitStatus.46_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 32, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 32, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  ComM_DcmActiveStatus[_2] = 0;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _3, 9);

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


ComM_DCM_ActiveDiagnostic (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.45_1 = ComM_InitStatus;
  if (ComM_InitStatus.45_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 31, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 31, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_Enter_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  ComM_DcmActiveStatus[_2] = 1;
  # DEBUG BEGIN_STMT
  ComM_Exit_SCHM_COMM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _3, 9);

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


ComM_BusSM_BusSleepMode (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.44_1 = ComM_InitStatus;
  if (ComM_InitStatus.44_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 246, 1);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 246, 2);

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_RestartIndication (NetworkHandleType Channel)
{
  boolean PassiveStartupStatus;
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  PassiveStartupStatus = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.43_1 = ComM_InitStatus;
  if (ComM_InitStatus.43_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 27, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 27, 2);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  PassiveStartupStatus = ComM_DcmActiveStatus[_2];
  # DEBUG BEGIN_STMT
  _3 = (int) Channel;
  _4 = ComM_RequestedComMode[_3];
  if (_4 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (PassiveStartupStatus == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _5 = (int) Channel;
  ComM_PassiveStartupStatus[_5] = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _6, 6);

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_BusSleepMode (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.42_1 = ComM_InitStatus;
  if (ComM_InitStatus.42_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 26, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 26, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _2, 8);

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_PrepareBusSleepMode (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.41_1 = ComM_InitStatus;
  if (ComM_InitStatus.41_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 25, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 25, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _2, 8);

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_NetworkMode (NetworkHandleType Channel)
{
  uint8 InstanceID;

  <bb 2> :
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.40_1 = ComM_InitStatus;
  if (ComM_InitStatus.40_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 24, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 24, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _2, 8);

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Nm_NetworkStartIndication (NetworkHandleType Channel)
{
  uint8 InstanceID;
  boolean PassiveStartupStatus;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PassiveStartupStatus = 0;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.39_1 = ComM_InitStatus;
  if (ComM_InitStatus.39_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 21, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Channel != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 21, 2);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  PassiveStartupStatus = ComM_DcmActiveStatus[_2];
  # DEBUG BEGIN_STMT
  _3 = (int) Channel;
  _4 = ComM_RequestedComMode[_3];
  if (_4 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (PassiveStartupStatus == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _5 = (int) Channel;
  ComM_PassiveStartupStatus[_5] = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _6 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _6, 6);

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_ASR40_GetCurrentPNCComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType * ComMode)
{
  PNCHandleType numPncs;
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7188;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.33_1 = ComM_InitStatus;
  if (ComM_InitStatus.33_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 254, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (User != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 254, 2);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (ComMode == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 254, 2);
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  numPncs = 0;
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.34_2 = ComM_ConfigPtr;
  _3 = (unsigned int) User;
  _4 = _3 + 1;
  _5 = ComM_ConfigPtr.34_2->NumPncOfAllUser[_4];
  ComM_ConfigPtr.35_6 = ComM_ConfigPtr;
  _7 = (int) User;
  _8 = ComM_ConfigPtr.35_6->NumPncOfAllUser[_7];
  numPncs = _5 - _8;
  # DEBUG BEGIN_STMT
  if (numPncs == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  RetVal = 4;
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (numPncs > 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.36_9 = ComM_ConfigPtr;
  ComM_ConfigPtr.37_10 = ComM_ConfigPtr;
  _11 = ComM_ConfigPtr.37_10->pPncOfAllUser;
  ComM_ConfigPtr.38_12 = ComM_ConfigPtr;
  _13 = (int) User;
  _14 = ComM_ConfigPtr.38_12->NumPncOfAllUser[_13];
  _15 = (unsigned int) _14;
  _16 = _15 * 2;
  _17 = _11 + _16;
  _18 = ComM_ConfigPtr.36_9 + _17;
  _19 = *_18;
  _20 = (int) _19;
  _21 = ComM_PNCMode[_20];
  *ComMode = _21;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 13> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7188 = RetVal;
  return D.7188;

}


ComM_ASR40_GetCurrentComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType * ComMode)
{
  const uint8 channel;
  ComM_ASR40_ModeType ResultComMode;
  ComM_ASR40_ModeType localComMode;
  uint8 InstanceID;
  uint8_least i;
  Std_ReturnType RetVal;
  Std_ReturnType D.7171;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.26_1 = ComM_InitStatus;
  if (ComM_InitStatus.26_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 8, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 16>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ComMode == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (User != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 8, 2);
  goto <bb 16>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ResultComMode = 2;
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.27_2 = ComM_ConfigPtr;
  ComM_ConfigPtr.28_3 = ComM_ConfigPtr;
  _4 = ComM_ConfigPtr.28_3->pChannelsOfAllUser;
  ComM_ConfigPtr.29_5 = ComM_ConfigPtr;
  _6 = (int) User;
  _7 = ComM_ConfigPtr.29_5->NumChannelsOfAllUser[_6];
  _8 = (long unsigned int) _7;
  _9 = i + _8;
  _10 = _4 + _9;
  _11 = ComM_ConfigPtr.27_2 + _10;
  channel = *_11;
  # DEBUG BEGIN_STMT
  _12 = CanSM_GetCurrentComMode;
  RetVal = _12 (channel, &localComMode);
  # DEBUG BEGIN_STMT
  if (RetVal != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  localComMode.30_13 = localComMode;
  if (ResultComMode > localComMode.30_13)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ResultComMode = localComMode;

  <bb 11> :
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 12> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.31_14 = ComM_ConfigPtr;
  _15 = (unsigned int) User;
  _16 = _15 + 1;
  _17 = ComM_ConfigPtr.31_14->NumChannelsOfAllUser[_16];
  _18 = (unsigned char) _17;
  ComM_ConfigPtr.32_19 = ComM_ConfigPtr;
  _20 = (int) User;
  _21 = ComM_ConfigPtr.32_19->NumChannelsOfAllUser[_20];
  _22 = (unsigned char) _21;
  _23 = _18 - _22;
  _24 = (long unsigned int) _23;
  if (i < _24)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  *ComMode = ResultComMode;

  <bb 15> :
  localComMode = {CLOBBER};

  <bb 16> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7171 = RetVal;
  return D.7171;

}


ComM_ASR40_GetRequestedComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType * ComMode)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7157;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.25_1 = ComM_InitStatus;
  if (ComM_InitStatus.25_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 7, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ComMode == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (User != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 7, 2);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _2 = (int) User;
  _3 = ComM_UserRequestedComMode[_2];
  *ComMode = _3;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7157 = RetVal;
  return D.7157;

}


ComM_ASR40_GetMaxComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType * ComMode)
{
  boolean WkUpInhibitionStatus;
  boolean NoComInhibitionStatus;
  ComM_StateType ComM_ChanState_local;
  uint8 InstanceID;
  boolean comAllowed;
  uint8 Channel;
  uint8_least i;
  Std_ReturnType RetVal;
  Std_ReturnType D.7148;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  comAllowed = 0;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.19_1 = ComM_InitStatus;
  if (ComM_InitStatus.19_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 6, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 20>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ComMode == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (User != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 6, 2);
  goto <bb 20>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *ComMode = 2;
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 18>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NoComInhibitionStatus = 0;
  # DEBUG BEGIN_STMT
  WkUpInhibitionStatus = 0;
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.20_2 = ComM_ConfigPtr;
  ComM_ConfigPtr.21_3 = ComM_ConfigPtr;
  _4 = ComM_ConfigPtr.21_3->pChannelsOfAllUser;
  ComM_ConfigPtr.22_5 = ComM_ConfigPtr;
  _6 = (int) User;
  _7 = ComM_ConfigPtr.22_5->NumChannelsOfAllUser[_6];
  _8 = (long unsigned int) _7;
  _9 = i + _8;
  _10 = _4 + _9;
  _11 = ComM_ConfigPtr.20_2 + _10;
  Channel = *_11;
  # DEBUG BEGIN_STMT
  _12 = (int) Channel;
  ComM_ChanState_local = ComM_ChanState[_12];
  # DEBUG BEGIN_STMT
  _13 = (int) Channel;
  comAllowed = ComM_Communication_Allowed[_13];
  # DEBUG BEGIN_STMT
  if (ComM_ChanState_local <= 1)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  if (NoComInhibitionStatus == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (WkUpInhibitionStatus == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  if (comAllowed == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  *ComMode = 0;
  # DEBUG BEGIN_STMT
  goto <bb 19>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _14 = (int) Channel;
  _15 = ComM_ChanState[_14];
  if (_15 == 4)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  if (NoComInhibitionStatus == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  if (WkUpInhibitionStatus == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  *ComMode = 1;

  <bb 17> :
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 18> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.23_16 = ComM_ConfigPtr;
  _17 = (unsigned int) User;
  _18 = _17 + 1;
  _19 = ComM_ConfigPtr.23_16->NumChannelsOfAllUser[_18];
  _20 = (unsigned char) _19;
  ComM_ConfigPtr.24_21 = ComM_ConfigPtr;
  _22 = (int) User;
  _23 = ComM_ConfigPtr.24_21->NumChannelsOfAllUser[_22];
  _24 = (unsigned char) _23;
  _25 = _20 - _24;
  _26 = (long unsigned int) _25;
  if (i < _26)
    goto <bb 8>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 20> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7148 = RetVal;
  return D.7148;

}


ComM_ASR40_RequestComMode (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType ComMode)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7118;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.4_1 = ComM_InitStatus;
  if (ComM_InitStatus.4_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 5, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (User != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 5, 2);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (ComMode != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (ComMode != 2)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 5, 2);
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _2 = (int) User;
  ComM_UserRequestedComMode[_2] = ComMode;
  # DEBUG BEGIN_STMT
  ComM_RequestComModePNC_Helper (User, ComMode);
  # DEBUG BEGIN_STMT
  RetVal = ComM_RequestComModeChannel_Helper (User);

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7118 = RetVal;
  return D.7118;

}


ComM_RequestComModeChannel_Helper (ComM_ASR40_UserHandleType User)
{
  boolean EmitEventReqStatusChanged;
  const uint8 Channel;
  uint8_least ChannelPos;
  Std_ReturnType RetVal;
  Std_ReturnType D.7129;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ChannelPos = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.12_1 = ComM_ConfigPtr;
  ComM_ConfigPtr.13_2 = ComM_ConfigPtr;
  _3 = ComM_ConfigPtr.13_2->pChannelsOfAllUser;
  ComM_ConfigPtr.14_4 = ComM_ConfigPtr;
  _5 = (int) User;
  _6 = ComM_ConfigPtr.14_4->NumChannelsOfAllUser[_5];
  _7 = (long unsigned int) _6;
  _8 = ChannelPos + _7;
  _9 = _3 + _8;
  _10 = ComM_ConfigPtr.12_1 + _9;
  Channel = *_10;
  # DEBUG BEGIN_STMT
  EmitEventReqStatusChanged = 1;
  # DEBUG BEGIN_STMT
  _11 = (int) User;
  _12 = ComM_UserRequestedComMode[_11];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_EvaluateChannel (Channel);
  # DEBUG BEGIN_STMT
  if (EmitEventReqStatusChanged == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  ComM_ConfigPtr.15_13 = ComM_ConfigPtr;
  _14 = (unsigned int) User;
  _15 = _14 + 1;
  _16 = ComM_ConfigPtr.15_13->DirectNumChannelsOfAllUser[_15];
  _17 = (unsigned char) _16;
  ComM_ConfigPtr.16_18 = ComM_ConfigPtr;
  _19 = (int) User;
  _20 = ComM_ConfigPtr.16_18->DirectNumChannelsOfAllUser[_19];
  _21 = (unsigned char) _20;
  _22 = _17 - _21;
  _23 = (long unsigned int) _22;
  if (ChannelPos < _23)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _24 = (short unsigned int) Channel;
  ComM_HsmEmitInst (&ComM_HsmScComM, _24, 9);

  <bb 6> :
  # DEBUG BEGIN_STMT
  ChannelPos = ChannelPos + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.17_25 = ComM_ConfigPtr;
  _26 = (unsigned int) User;
  _27 = _26 + 1;
  _28 = ComM_ConfigPtr.17_25->NumChannelsOfAllUser[_27];
  _29 = (unsigned char) _28;
  ComM_ConfigPtr.18_30 = ComM_ConfigPtr;
  _31 = (int) User;
  _32 = ComM_ConfigPtr.18_30->NumChannelsOfAllUser[_31];
  _33 = (unsigned char) _32;
  _34 = _29 - _33;
  _35 = (long unsigned int) _34;
  if (ChannelPos < _35)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  D.7129 = RetVal;
  return D.7129;

}


ComM_RequestComModePNC_Helper (ComM_ASR40_UserHandleType User, ComM_ASR40_ModeType ComMode)
{
  const PNCHandleType Pnc;
  PNCHandleType PncPos;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.5_1 = ComM_ConfigPtr;
  _2 = ComM_ConfigPtr.5_1->ComMPncEnabled;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  PncPos = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.6_3 = ComM_ConfigPtr;
  ComM_ConfigPtr.7_4 = ComM_ConfigPtr;
  _5 = ComM_ConfigPtr.7_4->pPncOfAllUser;
  ComM_ConfigPtr.8_6 = ComM_ConfigPtr;
  _7 = (int) User;
  _8 = ComM_ConfigPtr.8_6->NumPncOfAllUser[_7];
  _9 = (int) _8;
  _10 = (int) PncPos;
  _11 = _9 + _10;
  _12 = (unsigned int) _11;
  _13 = _12 * 2;
  _14 = _5 + _13;
  _15 = ComM_ConfigPtr.6_3 + _14;
  Pnc = *_15;
  # DEBUG BEGIN_STMT
  ComM_EvaluatePnc (Pnc, ComMode);
  # DEBUG BEGIN_STMT
  PncPos.9_16 = PncPos;
  PncPos = PncPos.9_16 + 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.10_17 = ComM_ConfigPtr;
  _18 = (unsigned int) User;
  _19 = _18 + 1;
  _20 = ComM_ConfigPtr.10_17->NumPncOfAllUser[_19];
  ComM_ConfigPtr.11_21 = ComM_ConfigPtr;
  _22 = (int) User;
  _23 = ComM_ConfigPtr.11_21->NumPncOfAllUser[_22];
  _24 = _20 - _23;
  if (PncPos < _24)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

}


ComM_GetStatus (ComM_InitStatusType * Status)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7106;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Status == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 3, 2);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ComM_InitStatus.3_1 = ComM_InitStatus;
  *Status = ComM_InitStatus.3_1;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7106 = RetVal;
  return D.7106;

}


ComM_GetState (NetworkHandleType Channel, ComM_StateType * State)
{
  uint8 InstanceID;
  Std_ReturnType RetVal;
  Std_ReturnType D.7101;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  InstanceID = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.2_1 = ComM_InitStatus;
  if (ComM_InitStatus.2_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 52, 1);
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (State == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (Channel != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, InstanceID, 52, 2);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _2 = (int) Channel;
  _3 = ComM_ChanState[_2];
  *State = _3;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7101 = RetVal;
  return D.7101;

}


ComM_DeInit ()
{
  uint8_least i;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ComM_InitStatus.1_1 = ComM_InitStatus;
  if (ComM_InitStatus.1_1 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, 0, 2, 1);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _2 = ComM_ChanState[i];
  if (_2 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (i == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (i == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ComM_InitStatus = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


ComM_Init (const struct ComM_ConfigType * ConfigPtr)
{
  const struct ComM_ConfigType * LocalConfigPtr;
  uint8_least i;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LocalConfigPtr = ConfigPtr;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (LocalConfigPtr == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, 0, 1, 2);
  goto <bb 21>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = ComM_IsValidConfig (LocalConfigPtr);
  if (_1 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (12, 0, 1, 2);
  goto <bb 21>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr = LocalConfigPtr;
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComM_RequestedComMode[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_ChanState[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_ChannelMode[i] = 0;
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (i == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  TS_MemSet32 (&ComM_UserRequestedComMode, 0, 1);
  # DEBUG BEGIN_STMT
  ComM_HsmInit (&ComM_HsmScComM);
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ComM_Communication_Allowed[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_DcmActiveStatus[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_PassiveStartupStatus[i] = 0;
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (i == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  ComM_ConfigPtr.0_2 = ComM_ConfigPtr;
  _3 = ComM_ConfigPtr.0_2->ComMPncEnabled;
  if (_3 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  ComM_HsmInit (&ComM_HsmScComMPnc);
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ComM_RxEira[i] = 0;
  # DEBUG BEGIN_STMT
  ComM_TxEiraEraActive[i] = 0;
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (i <= 5)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  ComM_RxEiraSignalStatus = 0;
  # DEBUG BEGIN_STMT
  TS_MemSet32 (&ComM_PNCRequestedComMode, 0, 2);
  # DEBUG BEGIN_STMT
  TS_MemSet32 (&ComM_PNCMode, 0, 2);

  <bb 17> :
  # DEBUG BEGIN_STMT
  ComMPncMainfunctionRunning = 0;
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  ComM_RteNotificationSuccessful[i] = 1;
  # DEBUG BEGIN_STMT
  ComM_RteModeUser[i] = 0;
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 19> :
  # DEBUG BEGIN_STMT
  if (i == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  ComM_RteNotificationDoActFkp = ComM_RteNotificationDoAction;
  # DEBUG BEGIN_STMT
  ComM_InitStatus = 1;

  <bb 21> :
  # DEBUG BEGIN_STMT
  return;

}


