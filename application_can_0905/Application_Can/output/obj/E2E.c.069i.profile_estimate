Histogram:
E2E_GetVersionInfo (struct Std_VersionInfoType * VersionInfo)
{
  uint32 i;
  uint8 * _1;

  <bb 2> [local count: 170418166]:
  # DEBUG BEGIN_STMT
  if (VersionInfo_5(D) != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 7> [local count: 119292716]:
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 954449109]:
  # DEBUG BEGIN_STMT
  _1 = VersionInfo_5(D) + i_2;
  *_1 = 0;
  # DEBUG BEGIN_STMT
  i_13 = i_2 + 1;
  # DEBUG i => i_13

  <bb 4> [local count: 1073741824]:
  # i_2 = PHI <i_13(3), 0(7)>
  # DEBUG i => i_2
  # DEBUG BEGIN_STMT
  if (i_2 != 8)
    goto <bb 3>; [88.89%]
  else
    goto <bb 5>; [11.11%]

  <bb 5> [local count: 119292717]:
  # DEBUG BEGIN_STMT
  VersionInfo_5(D)->vendorID = 1;
  # DEBUG BEGIN_STMT
  VersionInfo_5(D)->moduleID = 207;
  # DEBUG BEGIN_STMT
  VersionInfo_5(D)->sw_major_version = 2;
  # DEBUG BEGIN_STMT
  VersionInfo_5(D)->sw_minor_version = 0;
  # DEBUG BEGIN_STMT
  VersionInfo_5(D)->sw_patch_version = 18;

  <bb 6> [local count: 170418167]:
  return;

}


