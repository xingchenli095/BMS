IPA function summary for FlexCAN_GetMsgBuffIntStatusFlag.part.0/175 inlinable
  global time:     8.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 288] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 288] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 352] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 352] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 288] changed || op0[ref offset: 352] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 288] changed || op0[ref offset: 352] changed || op1 changed)
  calls:

IPA function summary for FlexCAN_Ip_ManualBusOffRecovery/122 inlinable
  global time:     70.926003
  self size:       43
  global size:     43
  min size:       30
  self stack:      4
  global stack:    4
    size:24.000000, time:19.697416
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:1.46 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:0.16 size: 3 time: 12
       op0 is compile time invariant
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20/174 function body not available
      loop depth: 0 freq:0.16 size: 1 time: 10
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20/173 function body not available
      loop depth: 0 freq:0.16 size: 1 time: 10
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for FlexCAN_Ip_GetListenOnlyMode/121 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       6
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_IsListenOnlyModeEnabled/28 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetListenOnlyMode_Privileged/120 inlinable
  global time:     51.050000
  self size:       34
  global size:     34
  min size:       32
  self stack:      0
  global stack:    0
    size:14.000000, time:11.010000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10/172 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetListenOnlyMode/7 function not considered for inlining
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 4 stack: 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10/171 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxMb15Mask_Privileged/119 inlinable
  global time:     43.505000
  self size:       30
  global size:     30
  min size:       22
  self stack:      0
  global stack:    0
    size:15.000000, time:11.385000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxMb14Mask_Privileged/118 inlinable
  global time:     43.505000
  self size:       30
  global size:     30
  min size:       22
  self stack:      0
  global stack:    0
    size:15.000000, time:11.385000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_AbortTransfer/117 inlinable
  global time:     38.724431
  self size:       36
  global size:     36
  min size:       8
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:4.000000, time:4.000000,  nonconst if:(op1 changed)
    size:10.000000, time:3.171950,  executed if:(op1 <= 63)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_AbortRxTransfer/69 function not considered for inlining
      loop depth: 0 freq:0.05 size: 3 time: 12callee size:23 stack: 0 predicate: (op1 <= 63)
    FlexCAN_AbortTxTransfer/68 function not considered for inlining
      loop depth: 0 freq:0.05 size: 4 time: 13callee size:24 stack: 4 predicate: (op1 <= 63)
    FLEXCAN_ClearMsgBuffIntCmd/170 function body not available
      loop depth: 0 freq:0.24 size: 5 time: 14 predicate: (op1 <= 63)
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetErrorInt_Privileged/116 inlinable
  global time:     768.402723
  self size:       69
  global size:     69
  min size:       16
  self stack:      0
  global stack:    0
    size:15.000000, time:734.649562
    size:3.000000, time:1.854902,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:12.000000, time:3.489999,  nonconst if:(op1 changed)
    size:2.000000, time:0.290891,  executed if:(op1 == 1)
    size:2.000000, time:0.290891,  executed if:(op1 == 0)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.24 size: 3 time: 12
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.03 size: 4 time: 13 predicate: (op1 == 1)
       op1 is compile time invariant
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:0.15 size: 3 time: 12callee size: 3 stack: 0 predicate: (op1 == 1)
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.03 size: 4 time: 13 predicate: (op1 == 0)
       op1 is compile time invariant
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:0.15 size: 3 time: 12callee size: 3 stack: 0 predicate: (op1 == 0)
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.15 size: 4 time: 13 predicate: (op1 == 3)
       op1 is compile time invariant
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.15 size: 4 time: 13 predicate: (op1 == 2)
       op1 is compile time invariant
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.15 size: 4 time: 13 predicate: (op1 == 4)
       op1 is compile time invariant
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_DisableInterrupts_Privileged/115 inlinable
  global time:     30.265719
  self size:       23
  global size:     23
  min size:       14
  self stack:      0
  global stack:    0
    size:12.000000, time:6.725319
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:0.41 size: 3 time: 12
    FlexCAN_DisableInterrupts/168 function body not available
      loop depth: 0 freq:0.41 size: 2 time: 11
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_EnableInterrupts_Privileged/114 inlinable
  global time:     27.711879
  self size:       27
  global size:     27
  min size:       16
  self stack:      0
  global stack:    0
    size:15.000000, time:7.091671
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:0.14 size: 3 time: 12
    FlexCAN_EnableInterrupts/167 function body not available
      loop depth: 0 freq:0.41 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ClearBuffStatusFlag/113 inlinable
  global time:     23.376800
  self size:       13
  global size:     13
  min size:       4
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.511200,  executed if:(op1 == 255)
  array index:(op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.49 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 != 255)
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetBuffStatusFlag/112 inlinable
  global time:     25.865600
  self size:       18
  global size:     18
  min size:       4
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:0.977600,  executed if:(op1 != 255)
    size:3.000000, time:1.533600,  executed if:(op1 == 255)
  array index:(op0 changed)
  calls:
    FlexCAN_GetBuffStatusFlag/10 function not considered for inlining
      loop depth: 0 freq:0.49 size: 4 time: 13callee size: 8 stack: 0 predicate: (op1 != 255)
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 inlinable
  global time:     51.050000
  self size:       34
  global size:     34
  min size:       32
  self stack:      0
  global stack:    0
    size:14.000000, time:11.010000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17/166 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetTxArbitrationStartDelay/41 function not considered for inlining
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 4 stack: 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17/165 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetTDCOffset_Privileged/110 inlinable
  global time:     52.287500
  self size:       43
  global size:     43
  min size:       42
  self stack:      0
  global stack:    0
    size:18.000000, time:12.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16/164 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetTDCOffset/2 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size: 6 stack: 0
    FlexCAN_SetEnhancedTDCOffset/3 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size: 6 stack: 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16/163 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetBitrateFD/109 inlinable
  global time:     44.000000
  self size:       21
  global size:     21
  min size:       20
  self stack:      0
  global stack:    0
    size:6.000000, time:6.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_GetFDTimeSegments/21 function not considered for inlining
      loop depth: 0 freq:0.50 size: 3 time: 12callee size:11 stack: 0
    FlexCAN_GetEnhancedDataTimeSegments/18 function not considered for inlining
      loop depth: 0 freq:0.50 size: 3 time: 12callee size:11 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetBitrateCbt_Privileged/108 inlinable
  global time:     55.207350
  self size:       54
  global size:     54
  min size:       44
  self stack:      0
  global stack:    0
    size:27.000000, time:18.149800
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.20 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15/162 function body not available
      loop depth: 0 freq:0.12 size: 1 time: 10
    FlexCAN_SetFDTimeSegments/12 function not considered for inlining
      loop depth: 0 freq:0.06 size: 3 time: 12callee size:15 stack: 0
    FlexCAN_SetEnhancedDataTimeSegments/17 function not considered for inlining
      loop depth: 0 freq:0.06 size: 3 time: 12callee size:16 stack: 0
    FlexCAN_SetFDEnabled/6 function not considered for inlining
      loop depth: 0 freq:0.12 size: 4 time: 13callee size: 9 stack: 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15/161 function body not available
      loop depth: 0 freq:0.12 size: 1 time: 10
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetTDCValue/107 inlinable
  global time:     20.500000
  self size:       14
  global size:     14
  min size:       4
  self stack:      0
  global stack:    0
    size:8.000000, time:6.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetTDCFail/106 inlinable
  global time:     23.000000
  self size:       19
  global size:     19
  min size:       4
  self stack:      0
  global stack:    0
    size:13.000000, time:9.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ClearTDCFail/105 inlinable
  global time:     42.000000
  self size:       19
  global size:     19
  min size:       8
  self stack:      0
  global stack:    0
    size:11.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09/160 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09/159 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetBitrate/104 inlinable
  global time:     46.010000
  self size:       27
  global size:     27
  min size:       26
  self stack:      0
  global stack:    0
    size:9.000000, time:8.010000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_GetTimeSegments/20 function not considered for inlining
      loop depth: 0 freq:0.40 size: 3 time: 12callee size:10 stack: 0
    FlexCAN_GetExtendedTimeSegments/19 function not considered for inlining
      loop depth: 0 freq:0.27 size: 3 time: 12callee size:11 stack: 0
    FlexCAN_GetEnhancedNominalTimeSegments/16 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 9 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetBitrate_Privileged/103 inlinable
  global time:     56.370818
  self size:       50
  global size:     50
  min size:       30
  self stack:      0
  global stack:    0
    size:16.000000, time:12.904800
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:2.000000, time:0.495000,  nonconst if:(op2 changed)
    size:3.000000, time:0.592218,  executed if:(op2 != 1)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.20 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14/158 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetTimeSegments/13 function not considered for inlining
      loop depth: 0 freq:0.12 size: 3 time: 12callee size:14 stack: 0 predicate: (op2 != 1)
    FlexCAN_SetExtendedTimeSegments/14 function not considered for inlining
      loop depth: 0 freq:0.08 size: 3 time: 12callee size:15 stack: 0 predicate: (op2 != 1)
    FlexCAN_SetEnhancedNominalTimeSegments/15 function not considered for inlining
      loop depth: 0 freq:0.05 size: 3 time: 12callee size:16 stack: 0 predicate: (op2 == 1)
    FlexCAN_EnhCbtEnable/24 function not considered for inlining
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 4 stack: 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14/157 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxMaskType_Privileged/102 inlinable
  global time:     51.050000
  self size:       34
  global size:     34
  min size:       32
  self stack:      0
  global stack:    0
    size:14.000000, time:11.010000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08/156 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetRxMaskType/42 function not considered for inlining
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 5 stack: 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08/155 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetStopMode_Privileged/101 inlinable
  global time:     32.960000
  self size:       15
  global size:     15
  min size:       16
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetStartMode_Privileged/100 inlinable
  global time:     50.000000
  self size:       15
  global size:     15
  min size:       14
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_ExitFreezeMode/151 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07/154 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07/153 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetStartMode_Privileged/99 inlinable
  global time:     7.000000
  self size:       8
  global size:     8
  min size:       0
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:

IPA function summary for FlexCAN_Ip_GetStopMode_Privileged/98 inlinable
  global time:     7.000000
  self size:       8
  global size:     8
  min size:       0
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:

IPA function summary for FlexCAN_Ip_MainFunctionWrite/97 inlinable
  global time:     41.257448
  self size:       58
  global size:     58
  min size:       60
  self stack:      80
  global stack:    80
    size:24.000000, time:7.540000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.08 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuffTimestamp/150 function body not available
      loop depth: 0 freq:0.08 size: 4 time: 13
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.02 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuff/143 function body not available
      loop depth: 0 freq:0.08 size: 4 time: 13
       op2 is compile time invariant
    FlexCAN_LockRxMsgBuff/142 function body not available
      loop depth: 0 freq:0.08 size: 3 time: 12
    FlexCAN_GetBuffStatusFlag/10 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size: 8 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19

IPA function summary for FlexCAN_Ip_MainFunctionBusOff_Privileged/96 inlinable
  global time:     28.650000
  self size:       23
  global size:     23
  min size:       18
  self stack:      0
  global stack:    0
    size:10.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    indirect call loop depth: 0 freq:0.35 size: 7 time: 19

IPA function summary for FlexCAN_Ip_MainFunctionRead/95 inlinable
  global time:     49.339804
  self size:       57
  global size:     57
  min size:       8
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:4.000000, time:4.000000,  nonconst if:(op1 changed)
    size:8.000000, time:4.470867,  executed if:(op1 != 255)
    size:2.000000, time:0.815466,  executed if:(op1 != 255),  nonconst if:(op1 changed) && (op1 != 255)
    size:2.000000, time:0.407733,  executed if:(op1 <= 7) && (op1 != 255),  nonconst if:(op1 changed) && (op1 <= 7) && (op1 != 255)
    size:5.000000, time:0.509666,  executed if:(op1 == 0) && (op1 <= 7) && (op1 != 255)
    size:10.000000, time:0.752321,  executed if:(op1 == 255)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_IRQHandlerRxMB/62 function not considered for inlining
      loop depth: 0 freq:0.06 size: 3 time: 12callee size:29 stack:80 predicate: (op1 != 255)
    FlexCAN_GetBuffStatusFlag/10 function not considered for inlining
      loop depth: 0 freq:0.59 size: 4 time: 13callee size: 8 stack: 0 predicate: (op1 != 255)
    FlexCAN_IRQHandlerRxFIFO/64 function not considered for inlining
      loop depth: 0 freq:0.03 size: 3 time: 12callee size:35 stack:80 predicate: (op1 == 0) && (op1 <= 7) && (op1 != 255)
       op1 is compile time invariant
    FlexCAN_IRQHandlerEnhancedRxFIFO/67 function not considered for inlining
      loop depth: 0 freq:0.01 size: 3 time: 12callee size:41 stack:80 predicate: (op1 == 255)
       op1 is compile time invariant
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:0.20 size: 3 time: 12 predicate: (op1 == 255)
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_Deinit_Privileged/94 inlinable
  global time:     36.590000
  self size:       17
  global size:     17
  min size:       18
  self stack:      0
  global stack:    0
    size:4.000000, time:3.330000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    FlexCAN_SetRegDefaultVal/48 function not considered for inlining
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:25 stack: 0
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/93 inlinable
  global time:     43.505000
  self size:       30
  global size:     30
  min size:       22
  self stack:      0
  global stack:    0
    size:15.000000, time:11.385000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxIndividualMask_Privileged/92 inlinable
  global time:     32.343363
  self size:       36
  global size:     36
  min size:       4
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.300000,  nonconst if:(op1 changed)
    size:14.000000, time:4.387663,  executed if:(op1 <= 63)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.11 size: 3 time: 12 predicate: (op1 <= 63)
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:0.42 size: 3 time: 12callee size: 3 stack: 0 predicate: (op1 <= 63)
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.11 size: 3 time: 12 predicate: (op1 <= 63)
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ExitFreezeMode_Privileged/91 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       6
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_ExitFreezeMode/151 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12

IPA function summary for FlexCAN_Ip_EnterFreezeMode_Privileged/90 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       6
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12

IPA function summary for FlexCAN_Ip_SetRxMbGlobalMask_Privileged/89 inlinable
  global time:     43.505000
  self size:       30
  global size:     30
  min size:       22
  self stack:      0
  global stack:    0
    size:15.000000, time:11.385000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SendBlocking/88 inlinable
  global time:     176.212461
  self size:       91
  global size:     91
  min size:       102
  self stack:      4
  global stack:    4
    size:34.000000, time:23.689561
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op5 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetBuffStatusFlag/10 function not considered for inlining
      loop depth: 1 freq:0.35 size: 4 time: 13callee size: 8 stack: 0
       op1 change 95.340000% of time
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:0.33 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:0.04 size: 3 time: 12
       op0 is compile time invariant
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:0.04 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    FlexCAN_GetMsgBuffRegion/136 function body not available
      loop depth: 0 freq:0.04 size: 4 time: 13
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.04 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetBuffStatusFlag/10 function not considered for inlining
      loop depth: 1 freq:3.08 size: 4 time: 13callee size: 8 stack: 0
       op0 change 32.410000% of time
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:2.92 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op0 is compile time invariant
    FlexCAN_StartSendData/60 function not considered for inlining
      loop depth: 0 freq:1.00 size: 7 time: 16callee size:32 stack:16
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for FlexCAN_Busoff_Error_IRQHandler/87 inlinable
  global time:     52.439000
  self size:       107
  global size:     107
  min size:       74
  self stack:      0
  global stack:    0
    size:66.000000, time:27.220450
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19

IPA function summary for FlexCAN_Ip_GetControllerRxErrorCounter/86 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       4
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetControllerTxErrorCounter/85 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       4
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetErrorStatus/84 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       4
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ClearErrorStatus/83 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       4
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_IRQHandler/82 inlinable
  global time:     192.578784
  self size:       90
  global size:     90
  min size:       70
  self stack:      0
  global stack:    0
    size:32.000000, time:45.704484
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
    size:4.000000, time:2.000000,  nonconst if:(op3 changed)
    size:10.000000, time:1.401814,  executed if:(op3 == 1)
  loop iterations:(op2 changed || op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 1 freq:3.76 size: 3 time: 12callee size: 5 stack: 0
       op0 change 26.560000% of time
    FlexCAN_ProcessSpuriousInterruptMB/65 function not considered for inlining
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:18 stack: 0
    FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 function not considered for inlining
      loop depth: 0 freq:0.02 size: 4 time: 13callee size:15 stack: 0 predicate: (op3 == 1)
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.04 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuffIntStatusFlag/37 function not considered for inlining
      loop depth: 0 freq:0.27 size: 4 time: 13callee size: 8 stack: 0
    FlexCAN_IRQHandlerTxMB/63 function not considered for inlining
      loop depth: 0 freq:0.05 size: 3 time: 12callee size:33 stack:80
    FlexCAN_IRQHandlerRxMB/62 function not considered for inlining
      loop depth: 0 freq:0.05 size: 3 time: 12callee size:29 stack:80
    FlexCAN_IRQHandlerRxFIFO/64 function not considered for inlining
      loop depth: 0 freq:0.03 size: 3 time: 12callee size:35 stack:80
    FlexCAN_GetMsgBuffIntStatusFlag/37 function not considered for inlining
      loop depth: 1 freq:4.46 size: 4 time: 13callee size: 8 stack: 0
       op0 change 22.400000% of time
    FlexCAN_GetMsgBuffIntStatusFlag/37 function not considered for inlining
      loop depth: 0 freq:0.53 size: 4 time: 13callee size: 8 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_CompleteRxMessageFifoData/81 inlinable
  global time:     36.840000
  self size:       34
  global size:     34
  min size:       40
  self stack:      0
  global stack:    0
    size:10.000000, time:7.990000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.33 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.33 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.33 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetTransferStatus/80 inlinable
  global time:     33.000000
  self size:       19
  global size:     19
  min size:       8
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:4.000000, time:4.000000,  nonconst if:(op1 changed)
    size:3.000000, time:1.500000,  executed if:(op1 > 63)
    size:3.000000, time:1.500000,  executed if:(op1 <= 63)
  array index:(op1 changed) && (op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ConfigRemoteResponseMb/79 inlinable
  global time:     123.853117
  self size:       67
  global size:     67
  min size:       76
  self stack:      16
  global stack:    16
    size:21.500000, time:17.108101
    size:5.500000, time:3.779400,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.21 size: 7 time: 16
       op3 is compile time invariant
    FlexCAN_SetTxMsgBuff/137 function body not available
      loop depth: 0 freq:0.64 size: 6 time: 15
       op1 is compile time invariant
    FlexCAN_GetMsgBuffRegion/136 function body not available
      loop depth: 0 freq:0.64 size: 4 time: 13
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.64 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_IsMbOutOfRange/135 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    FlexCAN_GetMbPayloadSize/134 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 inlinable
  global time:     81.100000
  self size:       40
  global size:     40
  min size:       42
  self stack:      0
  global stack:    0
    size:14.000000, time:11.010000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    FlexCAN_SetEnhancedRxFifoFilter/149 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ConfigRxFifo_Privileged/77 inlinable
  global time:     46.347500
  self size:       33
  global size:     33
  min size:       30
  self stack:      0
  global stack:    0
    size:14.000000, time:11.010000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    FlexCAN_SetRxFifoFilter/148 function body not available
      loop depth: 0 freq:0.25 size: 4 time: 13
    FlexCAN_IsFreezeMode/40 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_RxFifoBlocking/76 inlinable
  global time:     49.823600
  self size:       45
  global size:     45
  min size:       58
  self stack:      0
  global stack:    0
    size:12.000000, time:6.533600
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_ProccessLegacyRxFIFO/58 function not considered for inlining
      loop depth: 0 freq:0.16 size: 4 time: 13callee size:37 stack: 4
    FlexCAN_StartRxMessageFifoData/61 function not considered for inlining
      loop depth: 0 freq:0.49 size: 4 time: 13callee size:22 stack: 0
    FlexCAN_ProccessLegacyRxFIFO/58 function not considered for inlining
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 4
    FlexCAN_ProccessEnhancedRxFifo/57 function not considered for inlining
      loop depth: 0 freq:0.07 size: 4 time: 13callee size:27 stack: 4
    FlexCAN_StartRxMessageFifoData/61 function not considered for inlining
      loop depth: 0 freq:0.30 size: 4 time: 13callee size:22 stack: 0
    FlexCAN_StartRxMessageEnhancedFifoData/56 function not considered for inlining
      loop depth: 0 freq:0.21 size: 4 time: 13callee size:12 stack: 0
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_RxFifo/75 inlinable
  global time:     43.533600
  self size:       27
  global size:     27
  min size:       34
  self stack:      0
  global stack:    0
    size:6.000000, time:4.533600
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_StartRxMessageFifoData/61 function not considered for inlining
      loop depth: 0 freq:0.49 size: 4 time: 13callee size:22 stack: 0
    FlexCAN_StartRxMessageFifoData/61 function not considered for inlining
      loop depth: 0 freq:0.30 size: 4 time: 13callee size:22 stack: 0
    FlexCAN_StartRxMessageEnhancedFifoData/56 function not considered for inlining
      loop depth: 0 freq:0.21 size: 4 time: 13callee size:12 stack: 0
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ReceiveBlocking/74 inlinable
  global time:     140.263931
  self size:       78
  global size:     78
  min size:       38
  self stack:      4
  global stack:    4
    size:24.000000, time:32.109260
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op4 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:6.000000, time:7.510334,  nonconst if:(op3 changed)
    size:2.000000, time:0.277200,  executed if:(op3 == 0)
    size:2.000000, time:1.180060,  executed if:(op3 == 1)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.11 size: 6 time: 15 predicate: (op3 == 0)
       op3 is compile time invariant
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:2.92 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    FlexCAN_IRQHandlerRxMB/62 function not considered for inlining
      loop depth: 1 freq:0.19 size: 3 time: 12callee size:29 stack:80 predicate: (op3 == 1)
    FlexCAN_GetBuffStatusFlag/10 function not considered for inlining
      loop depth: 1 freq:0.59 size: 4 time: 13callee size: 8 stack: 0 predicate: (op3 == 1)
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op0 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 7 time: 16 predicate: (op3 == 0)
       op3 is compile time invariant
    FlexCAN_StartRxMessageBufferData/59 function not considered for inlining
      loop depth: 0 freq:1.00 size: 6 time: 15callee size:12 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for FlexCAN_Ip_Receive/73 inlinable
  global time:     36.805000
  self size:       26
  global size:     26
  min size:       16
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.000000,  nonconst if:(op3 changed)
    size:1.000000, time:0.165000,  executed if:(op3 == 0)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 7 time: 16 predicate: (op3 == 0)
       op3 is compile time invariant
    FlexCAN_StartRxMessageBufferData/59 function not considered for inlining
      loop depth: 0 freq:1.00 size: 6 time: 15callee size:12 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ConfigRxMb/72 inlinable
  global time:     87.301100
  self size:       48
  global size:     48
  min size:       56
  self stack:      16
  global stack:    16
    size:13.500000, time:10.797750
    size:4.500000, time:2.959550,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetRxMsgBuff/138 function body not available
      loop depth: 0 freq:0.64 size: 5 time: 14
       op2 is compile time invariant
    FlexCAN_SetRxMsgBuff/138 function body not available
      loop depth: 0 freq:0.64 size: 5 time: 14
       op2 is compile time invariant
    FlexCAN_SetRxMsgBuff/138 function body not available
      loop depth: 0 freq:0.64 size: 5 time: 14
       op2 is compile time invariant
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.64 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_IsMbOutOfRange/135 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_Send/71 inlinable
  global time:     49.360650
  self size:       36
  global size:     36
  min size:       42
  self stack:      0
  global stack:    0
    size:9.500000, time:5.126950
    size:3.500000, time:2.082500,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.05 size: 7 time: 16
       op3 is compile time invariant
    FlexCAN_StartSendData/60 function not considered for inlining
      loop depth: 0 freq:0.33 size: 7 time: 16callee size:32 stack:16
    FlexCAN_IsListenOnlyModeEnabled/28 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_Init_Privileged/70 inlinable
  global time:     205.540000
  self size:       49
  global size:     49
  min size:       30
  self stack:      0
  global stack:    0
    size:18.000000, time:112.452857
    size:14.000000, time:47.167143,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetOperationMode/123 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
    FlexCAN_InitBaudrate/54 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:18 stack: 0
    FlexCAN_InitController/53 function not considered for inlining
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:23 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_AbortRxTransfer/69 inlinable
  global time:     44.078168
  self size:       46
  global size:     46
  min size:       28
  self stack:      0
  global stack:    0
    size:21.000000, time:11.843480
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.022400,  nonconst if:(op1 changed)
    size:1.000000, time:0.168696,  executed if:(op1 == 0)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuffRegion/136 function body not available
      loop depth: 0 freq:0.49 size: 4 time: 13
    FLEXCAN_ClearMsgBuffIntCmd/170 function body not available
      loop depth: 0 freq:0.17 size: 5 time: 14 predicate: (op1 == 0)
       op2 is compile time invariant
    FlexCAN_GetMsgBuffRegion/136 function body not available
      loop depth: 0 freq:0.17 size: 4 time: 13
    RxFifoOcuppiedLastMsgBuff/29 function not considered for inlining
      loop depth: 0 freq:0.51 size: 3 time: 12callee size: 3 stack: 0

IPA function summary for FlexCAN_AbortTxTransfer/68 inlinable
  global time:     349.181112
  self size:       48
  global size:     48
  min size:       44
  self stack:      4
  global stack:    4
    size:23.000000, time:60.817476
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetBuffStatusFlag/10 function not considered for inlining
      loop depth: 1 freq:9.35 size: 4 time: 13callee size: 8 stack: 0
       op0 change 10.690000% of time
       op1 change 10.690000% of time
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:8.83 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    FlexCAN_GetMsgBuffRegion/136 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13

IPA function summary for FlexCAN_IRQHandlerEnhancedRxFIFO/67 inlinable
  global time:     22.587640
  self size:       82
  global size:     82
  min size:       0
  self stack:      80
  global stack:    80
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:10.000000, time:4.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.200000,  executed if:(op1 == 31),  nonconst if:(op1 changed) && (op1 == 31)
    size:4.000000, time:0.800000,  executed if:(op1 == 31)
    size:1.000000, time:0.200000,  executed if:(op1 == 30),  nonconst if:(op1 changed) && (op1 == 30)
    size:4.000000, time:0.800000,  executed if:(op1 == 30)
    size:1.000000, time:0.200000,  executed if:(op1 == 29),  nonconst if:(op1 changed) && (op1 == 29)
    size:4.000000, time:0.800000,  executed if:(op1 == 29)
    size:18.000000, time:1.572400,  executed if:(op1 == 28)
    size:1.000000, time:0.068000,  executed if:(op1 == 28),  nonconst if:(op1 changed) && (op1 == 28)
  array index:(op0 changed)
  calls:
    FlexCAN_CompleteRxMessageEnhancedFifoData/55 function not considered for inlining
      loop depth: 0 freq:0.02 size: 2 time: 11callee size:10 stack: 0 predicate: (op1 == 28)
    FlexCAN_ReadEnhancedRxFifo/145 function body not available
      loop depth: 0 freq:0.07 size: 3 time: 12 predicate: (op1 == 28)
    indirect call loop depth: 0 freq:0.14 size: 7 time: 19predicate: (op1 == 31)
    indirect call loop depth: 0 freq:0.14 size: 7 time: 19predicate: (op1 == 30)
    indirect call loop depth: 0 freq:0.14 size: 7 time: 19predicate: (op1 == 29)
    indirect call loop depth: 0 freq:0.05 size: 7 time: 19predicate: (op1 == 28)

IPA function summary for FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 inlinable
  global time:     105.998784
  self size:       30
  global size:     30
  min size:       22
  self stack:      0
  global stack:    0
    size:16.000000, time:29.611584
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_IRQHandlerEnhancedRxFIFO/67 function not considered for inlining
      loop depth: 1 freq:0.44 size: 3 time: 12callee size:41 stack:80
    FlexCAN_GetEnhancedRxFIFOIntStatusFlag/47 function not considered for inlining
      loop depth: 1 freq:1.32 size: 4 time: 13callee size: 4 stack: 0
       op0 change 75.750000% of time
    FlexCAN_GetEnhancedRxFIFOStatusFlag/45 function not considered for inlining
      loop depth: 1 freq:4.00 size: 4 time: 13callee size: 4 stack: 0
       op0 change 24.990000% of time

IPA function summary for FlexCAN_ProcessSpuriousInterruptMB/65 inlinable
  global time:     207.511985
  self size:       36
  global size:     36
  min size:       22
  self stack:      0
  global stack:    0
    size:22.000000, time:60.333569
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 1 freq:0.44 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetBuffStatusImask/11 function not considered for inlining
      loop depth: 1 freq:2.67 size: 4 time: 13callee size: 8 stack: 0
       op0 change 37.450000% of time
    FlexCAN_GetBuffStatusFlag/10 function not considered for inlining
      loop depth: 1 freq:8.09 size: 4 time: 13callee size: 8 stack: 0
       op0 change 12.350000% of time

IPA function summary for FlexCAN_IRQHandlerRxFIFO/64 inlinable
  global time:     28.692556
  self size:       70
  global size:     70
  min size:       0
  self stack:      80
  global stack:    80
    size:6.000000, time:5.300000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:8.000000, time:4.000000,  nonconst if:(op1 changed)
    size:3.000000, time:0.750000,  executed if:(op1 == 7)
    size:3.000000, time:0.750000,  executed if:(op1 == 6)
    size:12.000000, time:1.171498,  executed if:(op1 == 5)
  array index:(op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 == 7)
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 == 6)
    FlexCAN_CompleteRxMessageFifoData/81 function not considered for inlining
      loop depth: 0 freq:0.02 size: 2 time: 11callee size:17 stack: 0 predicate: (op1 == 5)
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.05 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 == 5)
    FlexCAN_ReadRxFifo/146 function body not available
      loop depth: 0 freq:0.05 size: 3 time: 12 predicate: (op1 == 5)
    indirect call loop depth: 0 freq:0.18 size: 7 time: 19predicate: (op1 == 7)
    indirect call loop depth: 0 freq:0.18 size: 7 time: 19predicate: (op1 == 6)
    indirect call loop depth: 0 freq:0.04 size: 7 time: 19predicate: (op1 == 5)

IPA function summary for FlexCAN_IRQHandlerTxMB/63 inlinable
  global time:     68.304128
  self size:       67
  global size:     67
  min size:       72
  self stack:      80
  global stack:    80
    size:28.000000, time:19.805608
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.14 size: 6 time: 15
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.33 size: 6 time: 15
       op3 is compile time invariant
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.50 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuffTimestamp/150 function body not available
      loop depth: 0 freq:0.50 size: 4 time: 13
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.10 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuff/143 function body not available
      loop depth: 0 freq:0.50 size: 4 time: 13
       op2 is compile time invariant
    FlexCAN_LockRxMsgBuff/142 function body not available
      loop depth: 0 freq:0.50 size: 3 time: 12
    indirect call loop depth: 0 freq:0.70 size: 7 time: 19

IPA function summary for FlexCAN_IRQHandlerRxMB/62 inlinable
  global time:     76.179532
  self size:       59
  global size:     59
  min size:       58
  self stack:      80
  global stack:    80
    size:27.000000, time:20.137002
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.08 size: 6 time: 15
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 6 time: 15
       op3 is compile time invariant
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuff/143 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
    FlexCAN_LockRxMsgBuff/142 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    indirect call loop depth: 0 freq:0.70 size: 7 time: 19

IPA function summary for FlexCAN_StartRxMessageFifoData/61 inlinable
  global time:     28.140750
  self size:       44
  global size:     44
  min size:       40
  self stack:      0
  global stack:    0
    size:20.000000, time:9.314500
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.11 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.11 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.11 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_StartSendData/60 inlinable
  global time:     97.411070
  self size:       65
  global size:     65
  min size:       58
  self stack:      16
  global stack:    16
    size:27.000000, time:15.644525
    size:7.000000, time:3.808802,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_SetTxMsgBuff/137 function body not available
      loop depth: 0 freq:0.37 size: 6 time: 15
       op1 is compile time invariant
       op4 is compile time invariant
    FlexCAN_GetMsgBuffRegion/136 function body not available
      loop depth: 0 freq:0.37 size: 4 time: 13
    FlexCAN_ClearMsgBuffIntStatusFlag/9 function not considered for inlining
      loop depth: 0 freq:0.37 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_IsMbOutOfRange/135 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    FlexCAN_GetMbPayloadSize/134 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_StartRxMessageBufferData/59 inlinable
  global time:     38.874860
  self size:       24
  global size:     24
  min size:       16
  self stack:      0
  global stack:    0
    size:12.000000, time:9.874860
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_IsMbOutOfRange/135 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_ProccessLegacyRxFIFO/58 inlinable
  global time:     338.159771
  self size:       74
  global size:     74
  min size:       72
  self stack:      4
  global stack:    4
    size:34.000000, time:115.926893
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:8.83 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    FlexCAN_IRQHandlerRxFIFO/64 function not considered for inlining
      loop depth: 2 freq:1.40 size: 3 time: 12callee size:35 stack:80
       op0 change 71.460000% of time
    FlexCAN_GetBuffStatusFlag/10 function not considered for inlining
      loop depth: 2 freq:4.24 size: 4 time: 13callee size: 8 stack: 0
       op0 change 23.580000% of time
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for FlexCAN_ProccessEnhancedRxFifo/57 inlinable
  global time:     361.445535
  self size:       54
  global size:     54
  min size:       36
  self stack:      4
  global stack:    4
    size:32.000000, time:122.719789
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:8.83 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    FlexCAN_IRQHandlerEnhancedRxFIFO/67 function not considered for inlining
      loop depth: 2 freq:1.87 size: 3 time: 12callee size:41 stack:80
       op0 change 53.590000% of time
    FlexCAN_GetEnhancedRxFIFOStatusFlag/45 function not considered for inlining
      loop depth: 2 freq:5.65 size: 4 time: 13callee size: 4 stack: 0
       op0 change 17.680000% of time
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for FlexCAN_StartRxMessageEnhancedFifoData/56 inlinable
  global time:     26.444428
  self size:       24
  global size:     24
  min size:       4
  self stack:      0
  global stack:    0
    size:18.000000, time:12.444428
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_CompleteRxMessageEnhancedFifoData/55 inlinable
  global time:     45.000000
  self size:       20
  global size:     20
  min size:       14
  self stack:      0
  global stack:    0
    size:9.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_InitBaudrate/54 inlinable
  global time:     41.326800
  self size:       37
  global size:     37
  min size:       36
  self stack:      0
  global stack:    0
    size:12.000000, time:7.500000
    size:7.000000, time:4.500000,  executed if:(not inlined)
  calls:
    FlexCAN_SetTimeSegments/13 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:14 stack: 0
    FlexCAN_SetFDTimeSegments/12 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:15 stack: 0
    FlexCAN_SetExtendedTimeSegments/14 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:15 stack: 0
    FlexCAN_SetEnhancedDataTimeSegments/17 function not considered for inlining
      loop depth: 0 freq:0.11 size: 3 time: 12callee size:16 stack: 0
    FlexCAN_SetEnhancedNominalTimeSegments/15 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:16 stack: 0
    FlexCAN_EnableExtCbt/25 function not considered for inlining
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 4 stack: 0

IPA function summary for FlexCAN_InitController/53 inlinable
  global time:     58.723900
  self size:       46
  global size:     46
  min size:       56
  self stack:      0
  global stack:    0
    size:9.500000, time:5.708750
    size:5.500000, time:3.233750,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 0] changed)
  calls:
    FlexCAN_InitCtroll/52 function not considered for inlining
      loop depth: 0 freq:0.35 size: 4 time: 13callee size:17 stack: 0
    FlexCAN_ResetImaskBuff/128 function body not available
      loop depth: 0 freq:0.35 size: 2 time: 11
    FlexCAN_ConfigCtrlOptions/127 function body not available
      loop depth: 0 freq:0.35 size: 3 time: 12
    FlexCAN_SetFDEnabled/6 function not considered for inlining
      loop depth: 0 freq:0.35 size: 4 time: 13callee size: 9 stack: 0
    FlexCAN_DisableMemErrorDetection/5 function not considered for inlining
      loop depth: 0 freq:0.35 size: 2 time: 11callee size: 7 stack: 0
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.35 size: 2 time: 11
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:0.35 size: 2 time: 11
    FlexCAN_Init/126 function body not available
      loop depth: 0 freq:0.71 size: 3 time: 12
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.19 size: 3 time: 12
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:0.59 size: 3 time: 12

IPA function summary for FlexCAN_InitCtroll/52 inlinable
  global time:     51.270000
  self size:       34
  global size:     34
  min size:       38
  self stack:      0
  global stack:    0
    size:4.500000, time:3.250000
    size:3.500000, time:2.250000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 224] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 224] changed)
    size:0.500000, time:0.330000,  executed if:(op1[ref offset: 224] != 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1[ref offset: 224] != 2) && (not inlined)
    size:2.500000, time:1.650000,  executed if:(op1[ref offset: 224] != 2),  nonconst if:(op0[ref offset: 0] changed) && (op1[ref offset: 224] != 2)
    size:0.500000, time:0.330000,  executed if:(op1[ref offset: 224] != 2) && (not inlined)
    size:0.500000, time:0.330000,  executed if:(op1[ref offset: 224] != 2)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.17 size: 2 time: 11
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:0.17 size: 2 time: 11
    FlexCAN_SetMaxMsgBuffNum/130 function body not available
      loop depth: 0 freq:0.50 size: 4 time: 13
    FlexCAN_SetPayloadSize/129 function body not available
      loop depth: 0 freq:0.50 size: 3 time: 12
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.50 size: 2 time: 11
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:0.50 size: 2 time: 11
    FlexCAN_InitRxFifo/51 function not considered for inlining
      loop depth: 0 freq:1.00 size: 4 time: 13callee size:12 stack: 0

IPA function summary for FlexCAN_InitRxFifo/51 inlinable
  global time:     17.744900
  self size:       25
  global size:     25
  min size:       12
  self stack:      0
  global stack:    0
    size:4.000000, time:2.500825
    size:5.000000, time:2.830825,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 64] changed)
    size:0.500000, time:0.165000,  executed if:(op1[ref offset: 64] != 0) && (not inlined),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 64] != 0) && (not inlined)
    size:0.500000, time:0.165000,  executed if:(op1[ref offset: 64] != 0),  nonconst if:(op1[ref offset: 32] changed) && (op1[ref offset: 64] != 0)
    size:2.000000, time:0.660000,  executed if:(op1[ref offset: 64] != 0)
  calls:
    FlexCAN_EnableEnhancedRxFifo/132 function body not available
      loop depth: 0 freq:0.28 size: 6 time: 15
    FlexCAN_EnableRxFifo/131 function body not available
      loop depth: 0 freq:0.33 size: 4 time: 13 predicate: (op1[ref offset: 64] != 0)

IPA function summary for FlexCAN_SetRegDefaultVal/48 inlinable
  global time:     64.020000
  self size:       50
  global size:     50
  min size:       12
  self stack:      0
  global stack:    0
    size:24.500000, time:23.010000
    size:19.500000, time:17.010000,  executed if:(not inlined)
  calls:
    FlexCAN_GetMaxMbNum/152 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12

IPA function summary for FlexCAN_GetEnhancedRxFIFOIntStatusFlag/47 inlinable
  global time:     8.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 24704] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 24704] changed)
    size:3.000000, time:3.000000,  nonconst if:(op1 changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 24704] changed || op1 changed)
  calls:

IPA function summary for FlexCAN_GetEnhancedRxFIFOStatusFlag/45 inlinable
  global time:     8.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 24736] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 24736] changed)
    size:3.000000, time:3.000000,  nonconst if:(op1 changed)
    size:2.000000, time:2.000000,  nonconst if:(op0[ref offset: 24736] changed || op1 changed)
  calls:

IPA function summary for FlexCAN_SetRxMaskType/42 inlinable
  global time:     7.000000
  self size:       11
  global size:     11
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:0.500000, time:0.250000,  executed if:(op1 != 0) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1 != 0) && (not inlined)
    size:1.500000, time:0.750000,  executed if:(op1 != 0),  nonconst if:(op0[ref offset: 0] changed) && (op1 != 0)
    size:0.500000, time:0.250000,  executed if:(op1 != 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 != 0)
    size:0.500000, time:0.250000,  executed if:(op1 == 0) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 0) && (not inlined)
    size:1.500000, time:0.750000,  executed if:(op1 == 0),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 0)
    size:0.500000, time:0.250000,  executed if:(op1 == 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 == 0)
  calls:

IPA function summary for FlexCAN_SetTxArbitrationStartDelay/41 inlinable
  global time:     8.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 416] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 416] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 416] changed || op1 changed)
  calls:

IPA function summary for FlexCAN_IsFreezeMode/40 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:

IPA function summary for FlexCAN_GetMsgBuffIntStatusFlag/37 inlinable
  global time:     10.750000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 > 31),  nonconst if:(op1 changed) && (op1 > 31)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31) && (not inlined),  nonconst if:(op0[ref offset: 320] changed) && (op1 <= 31) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31),  nonconst if:(op0[ref offset: 320] changed) && (op1 <= 31)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31) && (not inlined),  nonconst if:(op0[ref offset: 384] changed) && (op1 <= 31) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31),  nonconst if:(op0[ref offset: 384] changed) && (op1 <= 31)
    size:1.000000, time:0.500000,  executed if:(op1 <= 31),  nonconst if:(op0[ref offset: 320] changed || op0[ref offset: 384] changed) && (op1 <= 31)
    size:2.000000, time:1.000000,  executed if:(op1 <= 31),  nonconst if:(op1 changed || op0[ref offset: 320] changed || op0[ref offset: 384] changed) && (op1 <= 31)
  calls:
    FlexCAN_GetMsgBuffIntStatusFlag.part.0/175 function not considered for inlining
      loop depth: 0 freq:0.25 size: 4 time: 13callee size: 4 stack: 0 predicate: (op1 <= 63) && (op1 > 31)

IPA function summary for RxFifoOcuppiedLastMsgBuff/29 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:4.000000, time:4.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for FlexCAN_IsListenOnlyModeEnabled/28 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:

IPA function summary for FlexCAN_EnableExtCbt/25 inlinable
  global time:     8.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 640] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 640] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 640] changed || op1 changed)
  calls:

IPA function summary for FlexCAN_EnhCbtEnable/24 inlinable
  global time:     8.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 416] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 416] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 416] changed || op1 changed)
  calls:

IPA function summary for FlexCAN_GetFDTimeSegments/21 inlinable
  global time:     21.000000
  self size:       22
  global size:     22
  min size:       0
  self stack:      0
  global stack:    0
    size:2.500000, time:2.500000
    size:5.500000, time:4.500000,  executed if:(not inlined)
    size:2.500000, time:2.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 24608] changed) && (not inlined)
    size:11.500000, time:11.500000,  nonconst if:(op0[ref offset: 24608] changed)
  calls:

IPA function summary for FlexCAN_GetTimeSegments/20 inlinable
  global time:     20.000000
  self size:       21
  global size:     21
  min size:       0
  self stack:      0
  global stack:    0
    size:2.500000, time:2.500000
    size:5.500000, time:4.500000,  executed if:(not inlined)
    size:2.500000, time:2.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:10.500000, time:10.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:

IPA function summary for FlexCAN_GetExtendedTimeSegments/19 inlinable
  global time:     21.000000
  self size:       22
  global size:     22
  min size:       0
  self stack:      0
  global stack:    0
    size:2.500000, time:2.500000
    size:5.500000, time:4.500000,  executed if:(not inlined)
    size:2.500000, time:2.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 640] changed) && (not inlined)
    size:11.500000, time:11.500000,  nonconst if:(op0[ref offset: 640] changed)
  calls:

IPA function summary for FlexCAN_GetEnhancedDataTimeSegments/18 inlinable
  global time:     30.000000
  self size:       22
  global size:     22
  min size:       4
  self stack:      0
  global stack:    0
    size:11.500000, time:11.500000
    size:7.500000, time:6.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_SetEnhancedDataTimeSegments/17 inlinable
  global time:     41.000000
  self size:       33
  global size:     33
  min size:       4
  self stack:      0
  global stack:    0
    size:20.500000, time:20.500000
    size:9.500000, time:8.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_GetEnhancedNominalTimeSegments/16 inlinable
  global time:     17.000000
  self size:       18
  global size:     18
  min size:       0
  self stack:      0
  global stack:    0
    size:2.500000, time:2.500000
    size:5.500000, time:4.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 24448] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 24448] changed)
    size:1.500000, time:1.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 24480] changed) && (not inlined)
    size:6.500000, time:6.500000,  nonconst if:(op0[ref offset: 24480] changed)
  calls:

IPA function summary for FlexCAN_SetEnhancedNominalTimeSegments/15 inlinable
  global time:     41.000000
  self size:       33
  global size:     33
  min size:       4
  self stack:      0
  global stack:    0
    size:20.500000, time:20.500000
    size:9.500000, time:8.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_SetExtendedTimeSegments/14 inlinable
  global time:     38.000000
  self size:       30
  global size:     30
  min size:       4
  self stack:      0
  global stack:    0
    size:19.500000, time:19.500000
    size:7.500000, time:6.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_SetTimeSegments/13 inlinable
  global time:     37.000000
  self size:       29
  global size:     29
  min size:       4
  self stack:      0
  global stack:    0
    size:18.500000, time:18.500000
    size:7.500000, time:6.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_SetFDTimeSegments/12 inlinable
  global time:     38.000000
  self size:       30
  global size:     30
  min size:       4
  self stack:      0
  global stack:    0
    size:19.500000, time:19.500000
    size:7.500000, time:6.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_GetBuffStatusImask/11 inlinable
  global time:     8.250000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 > 31),  nonconst if:(op1 changed) && (op1 > 31)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31) && (not inlined),  nonconst if:(op0[ref offset: 288] changed) && (op1 <= 63) && (op1 > 31) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op0[ref offset: 288] changed) && (op1 <= 63) && (op1 > 31)
    size:2.000000, time:0.500000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op1 changed) && (op1 <= 63) && (op1 > 31)
    size:2.000000, time:0.500000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op1 changed || op0[ref offset: 288] changed) && (op1 <= 63) && (op1 > 31)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31) && (not inlined),  nonconst if:(op0[ref offset: 320] changed) && (op1 <= 31) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31),  nonconst if:(op0[ref offset: 320] changed) && (op1 <= 31)
    size:1.000000, time:0.500000,  executed if:(op1 <= 31),  nonconst if:(op1 changed) && (op1 <= 31)
    size:2.000000, time:1.000000,  executed if:(op1 <= 31),  nonconst if:(op1 changed || op0[ref offset: 320] changed) && (op1 <= 31)
  calls:

IPA function summary for FlexCAN_GetBuffStatusFlag/10 inlinable
  global time:     8.250000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 > 31),  nonconst if:(op1 changed) && (op1 > 31)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31) && (not inlined),  nonconst if:(op0[ref offset: 352] changed) && (op1 <= 63) && (op1 > 31) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op0[ref offset: 352] changed) && (op1 <= 63) && (op1 > 31)
    size:2.000000, time:0.500000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op1 changed) && (op1 <= 63) && (op1 > 31)
    size:2.000000, time:0.500000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op1 changed || op0[ref offset: 352] changed) && (op1 <= 63) && (op1 > 31)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31) && (not inlined),  nonconst if:(op0[ref offset: 384] changed) && (op1 <= 31) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31),  nonconst if:(op0[ref offset: 384] changed) && (op1 <= 31)
    size:1.000000, time:0.500000,  executed if:(op1 <= 31),  nonconst if:(op1 changed) && (op1 <= 31)
    size:2.000000, time:1.000000,  executed if:(op1 <= 31),  nonconst if:(op1 changed || op0[ref offset: 384] changed) && (op1 <= 31)
  calls:

IPA function summary for FlexCAN_ClearMsgBuffIntStatusFlag/9 inlinable
  global time:     7.750000
  self size:       11
  global size:     11
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:4.000000, time:4.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 > 31),  nonconst if:(op1 changed) && (op1 > 31)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31)
  calls:

IPA function summary for FlexCAN_SetListenOnlyMode/7 inlinable
  global time:     8.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 32] changed || op1 changed)
  calls:

IPA function summary for FlexCAN_SetFDEnabled/6 inlinable
  global time:     17.000000
  self size:       18
  global size:     18
  min size:       0
  self stack:      0
  global stack:    0
    size:5.500000, time:5.500000
    size:5.500000, time:4.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 0] changed || op1 changed)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
  calls:

IPA function summary for FlexCAN_DisableMemErrorDetection/5 inlinable
  global time:     13.000000
  self size:       14
  global size:     14
  min size:       0
  self stack:      0
  global stack:    0
    size:5.500000, time:5.500000
    size:6.500000, time:5.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 416] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 416] changed)
  calls:

IPA function summary for FlexCAN_SetEnhancedTDCOffset/3 inlinable
  global time:     9.000000
  self size:       12
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 24544] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 24544] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 != 0),  nonconst if:(op0[ref offset: 24544] changed) && (op1 != 0)
    size:2.000000, time:1.000000,  executed if:(op1 != 0),  nonconst if:(op2 changed) && (op1 != 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0),  nonconst if:(op0[ref offset: 24544] changed || op2 changed) && (op1 != 0)
  calls:

IPA function summary for FlexCAN_SetTDCOffset/2 inlinable
  global time:     9.000000
  self size:       12
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 24576] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op0[ref offset: 24576] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 != 0),  nonconst if:(op0[ref offset: 24576] changed) && (op1 != 0)
    size:2.000000, time:1.000000,  executed if:(op1 != 0),  nonconst if:(op2 changed) && (op1 != 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0),  nonconst if:(op0[ref offset: 24576] changed || op2 changed) && (op1 != 0)
  calls:

IPA function summary for DevAssert/0 inlinable
  global time:     5004.008492
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  executed if:(not inlined),  nonconst if:(op0 changed) && (not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:5000.008492,  executed if:(op0 == 0)
    size:1.000000, time:1.000000,  executed if:(op0 != 0) && (not inlined)
  calls:


Flattening functions:
Overall time estimate: 10945.062607 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in FlexCAN_GetMsgBuffIntStatusFlag.part.0/175.
Enqueueing calls in FlexCAN_Ip_ManualBusOffRecovery/122.
Enqueueing calls in FlexCAN_Ip_GetListenOnlyMode/121.
Enqueueing calls in FlexCAN_Ip_SetListenOnlyMode_Privileged/120.
Enqueueing calls in FlexCAN_Ip_SetRxMb15Mask_Privileged/119.
Enqueueing calls in FlexCAN_Ip_SetRxMb14Mask_Privileged/118.
Enqueueing calls in FlexCAN_Ip_AbortTransfer/117.
Enqueueing calls in FlexCAN_Ip_SetErrorInt_Privileged/116.
Enqueueing calls in FlexCAN_Ip_DisableInterrupts_Privileged/115.
Enqueueing calls in FlexCAN_Ip_EnableInterrupts_Privileged/114.
Enqueueing calls in FlexCAN_Ip_ClearBuffStatusFlag/113.
Enqueueing calls in FlexCAN_Ip_GetBuffStatusFlag/112.
Enqueueing calls in FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111.
Enqueueing calls in FlexCAN_Ip_SetTDCOffset_Privileged/110.
Enqueueing calls in FlexCAN_Ip_GetBitrateFD/109.
Enqueueing calls in FlexCAN_Ip_SetBitrateCbt_Privileged/108.
Enqueueing calls in FlexCAN_Ip_GetTDCValue/107.
Enqueueing calls in FlexCAN_Ip_GetTDCFail/106.
Enqueueing calls in FlexCAN_Ip_ClearTDCFail/105.
Enqueueing calls in FlexCAN_Ip_GetBitrate/104.
Enqueueing calls in FlexCAN_Ip_SetBitrate_Privileged/103.
Enqueueing calls in FlexCAN_Ip_SetRxMaskType_Privileged/102.
Enqueueing calls in FlexCAN_Ip_SetStopMode_Privileged/101.
Enqueueing calls in FlexCAN_Ip_SetStartMode_Privileged/100.
Enqueueing calls in FlexCAN_Ip_GetStartMode_Privileged/99.
Enqueueing calls in FlexCAN_Ip_GetStopMode_Privileged/98.
Enqueueing calls in FlexCAN_Ip_MainFunctionWrite/97.
Enqueueing calls in FlexCAN_Ip_MainFunctionBusOff_Privileged/96.
Enqueueing calls in FlexCAN_Ip_MainFunctionRead/95.
Enqueueing calls in FlexCAN_Ip_Deinit_Privileged/94.
Enqueueing calls in FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/93.
Enqueueing calls in FlexCAN_Ip_SetRxIndividualMask_Privileged/92.
Enqueueing calls in FlexCAN_Ip_ExitFreezeMode_Privileged/91.
Enqueueing calls in FlexCAN_Ip_EnterFreezeMode_Privileged/90.
Enqueueing calls in FlexCAN_Ip_SetRxMbGlobalMask_Privileged/89.
Enqueueing calls in FlexCAN_Ip_SendBlocking/88.
Enqueueing calls in FlexCAN_Busoff_Error_IRQHandler/87.
Enqueueing calls in FlexCAN_Ip_GetControllerRxErrorCounter/86.
Enqueueing calls in FlexCAN_Ip_GetControllerTxErrorCounter/85.
Enqueueing calls in FlexCAN_Ip_GetErrorStatus/84.
Enqueueing calls in FlexCAN_Ip_ClearErrorStatus/83.
Enqueueing calls in FlexCAN_IRQHandler/82.
Enqueueing calls in FlexCAN_CompleteRxMessageFifoData/81.
Enqueueing calls in FlexCAN_Ip_GetTransferStatus/80.
Enqueueing calls in FlexCAN_Ip_ConfigRemoteResponseMb/79.
Enqueueing calls in FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78.
Enqueueing calls in FlexCAN_Ip_ConfigRxFifo_Privileged/77.
Enqueueing calls in FlexCAN_Ip_RxFifoBlocking/76.
Enqueueing calls in FlexCAN_Ip_RxFifo/75.
Enqueueing calls in FlexCAN_Ip_ReceiveBlocking/74.
Enqueueing calls in FlexCAN_Ip_Receive/73.
Enqueueing calls in FlexCAN_Ip_ConfigRxMb/72.
Enqueueing calls in FlexCAN_Ip_Send/71.
Enqueueing calls in FlexCAN_Ip_Init_Privileged/70.
Enqueueing calls in FlexCAN_AbortRxTransfer/69.
Enqueueing calls in FlexCAN_AbortTxTransfer/68.
Enqueueing calls in FlexCAN_IRQHandlerEnhancedRxFIFO/67.
Enqueueing calls in FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66.
Enqueueing calls in FlexCAN_ProcessSpuriousInterruptMB/65.
Enqueueing calls in FlexCAN_IRQHandlerRxFIFO/64.
Enqueueing calls in FlexCAN_IRQHandlerTxMB/63.
Enqueueing calls in FlexCAN_IRQHandlerRxMB/62.
Enqueueing calls in FlexCAN_StartRxMessageFifoData/61.
Enqueueing calls in FlexCAN_StartSendData/60.
Enqueueing calls in FlexCAN_StartRxMessageBufferData/59.
Enqueueing calls in FlexCAN_ProccessLegacyRxFIFO/58.
Enqueueing calls in FlexCAN_ProccessEnhancedRxFifo/57.
Enqueueing calls in FlexCAN_StartRxMessageEnhancedFifoData/56.
Enqueueing calls in FlexCAN_CompleteRxMessageEnhancedFifoData/55.
Enqueueing calls in FlexCAN_InitBaudrate/54.
Enqueueing calls in FlexCAN_InitController/53.
Enqueueing calls in FlexCAN_InitCtroll/52.
Enqueueing calls in FlexCAN_InitRxFifo/51.
Enqueueing calls in FlexCAN_SetRegDefaultVal/48.
Enqueueing calls in FlexCAN_GetEnhancedRxFIFOIntStatusFlag/47.
Enqueueing calls in FlexCAN_GetEnhancedRxFIFOStatusFlag/45.
Enqueueing calls in FlexCAN_SetRxMaskType/42.
Enqueueing calls in FlexCAN_SetTxArbitrationStartDelay/41.
Enqueueing calls in FlexCAN_IsFreezeMode/40.
Enqueueing calls in FlexCAN_GetMsgBuffIntStatusFlag/37.
Enqueueing calls in RxFifoOcuppiedLastMsgBuff/29.
Enqueueing calls in FlexCAN_IsListenOnlyModeEnabled/28.
Enqueueing calls in FlexCAN_EnableExtCbt/25.
Enqueueing calls in FlexCAN_EnhCbtEnable/24.
Enqueueing calls in FlexCAN_GetFDTimeSegments/21.
Enqueueing calls in FlexCAN_GetTimeSegments/20.
Enqueueing calls in FlexCAN_GetExtendedTimeSegments/19.
Enqueueing calls in FlexCAN_GetEnhancedDataTimeSegments/18.
Enqueueing calls in FlexCAN_SetEnhancedDataTimeSegments/17.
Enqueueing calls in FlexCAN_GetEnhancedNominalTimeSegments/16.
Enqueueing calls in FlexCAN_SetEnhancedNominalTimeSegments/15.
Enqueueing calls in FlexCAN_SetExtendedTimeSegments/14.
Enqueueing calls in FlexCAN_SetTimeSegments/13.
Enqueueing calls in FlexCAN_SetFDTimeSegments/12.
Enqueueing calls in FlexCAN_GetBuffStatusImask/11.
Enqueueing calls in FlexCAN_GetBuffStatusFlag/10.
Enqueueing calls in FlexCAN_ClearMsgBuffIntStatusFlag/9.
Enqueueing calls in FlexCAN_SetListenOnlyMode/7.
Enqueueing calls in FlexCAN_SetFDEnabled/6.
Enqueueing calls in FlexCAN_DisableMemErrorDetection/5.
Enqueueing calls in FlexCAN_SetEnhancedTDCOffset/3.
Enqueueing calls in FlexCAN_SetTDCOffset/2.
Enqueueing calls in DevAssert/0.

Considering FlexCAN_IsListenOnlyModeEnabled/28 with 7 size
 to be inlined into FlexCAN_Ip_GetListenOnlyMode/121 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4672
 Estimated badness is -58.000000, frequency 1.00.

Considering FlexCAN_GetEnhancedRxFIFOStatusFlag/45 with 9 size
 to be inlined into FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:1582
 Estimated badness is -31.750100, frequency 4.00.

Considering FlexCAN_GetEnhancedRxFIFOStatusFlag/45 with 9 size
 to be inlined into FlexCAN_ProccessEnhancedRxFifo/57 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:829
 Estimated badness is -25.702496, frequency 5.65.

Considering FlexCAN_IsListenOnlyModeEnabled/28 with 7 size
 to be inlined into FlexCAN_Ip_Send/71 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:1993
 Estimated badness is -12.540541, frequency 1.00.

Considering FlexCAN_GetEnhancedRxFIFOIntStatusFlag/47 with 9 size
 to be inlined into FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:1584
 Estimated badness is -10.310025, frequency 1.32.

Considering FlexCAN_EnableExtCbt/25 with 9 size
 to be inlined into FlexCAN_InitBaudrate/54 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:496
 Estimated badness is -6.153846, frequency 1.00.

Considering RxFifoOcuppiedLastMsgBuff/29 with 7 size
 to be inlined into FlexCAN_AbortRxTransfer/69 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:1829
 Estimated badness is -4.872715, frequency 0.51.

Considering FlexCAN_GetBuffStatusImask/11 with 16 size
 to be inlined into FlexCAN_ProcessSpuriousInterruptMB/65 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:1512
 Estimated badness is -3.788866, frequency 2.67.

Considering FlexCAN_SetTxArbitrationStartDelay/41 with 9 size
 to be inlined into FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4216
 Estimated badness is -1.650000, frequency 0.25.

Considering FlexCAN_SetListenOnlyMode/7 with 9 size
 to be inlined into FlexCAN_Ip_SetListenOnlyMode_Privileged/120 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4645
 Estimated badness is -1.650000, frequency 0.25.

Considering FlexCAN_EnhCbtEnable/24 with 9 size
 to be inlined into FlexCAN_Ip_SetBitrate_Privileged/103 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:3840
 Estimated badness is -1.142308, frequency 0.25.

Considering FlexCAN_SetRxMaskType/42 with 11 size
 to be inlined into FlexCAN_Ip_SetRxMaskType_Privileged/102 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:3778
 Estimated badness is -1.070270, frequency 0.25.

Considering FlexCAN_GetFDTimeSegments/21 with 22 size
 to be inlined into FlexCAN_Ip_GetBitrateFD/109 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4107
 Estimated badness is -0.863636, frequency 0.50.

Considering FlexCAN_DisableMemErrorDetection/5 with 14 size
 to be inlined into FlexCAN_InitController/53 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:458
 Estimated badness is -0.752000, frequency 0.35.

Considering FlexCAN_GetEnhancedDataTimeSegments/18 with 22 size
 to be inlined into FlexCAN_Ip_GetBitrateFD/109 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4101
 Estimated badness is -0.747475, frequency 0.50.

Considering FlexCAN_GetEnhancedNominalTimeSegments/16 with 18 size
 to be inlined into FlexCAN_Ip_GetBitrate/104 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:3896
 Estimated badness is -0.697714, frequency 0.33.

Considering FlexCAN_GetTimeSegments/20 with 21 size
 to be inlined into FlexCAN_Ip_GetBitrate/104 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:3909
 Estimated badness is -0.649574, frequency 0.40.

Considering FlexCAN_SetFDEnabled/6 with 18 size
 to be inlined into FlexCAN_InitController/53 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:467
 Estimated badness is -0.470000, frequency 0.35.

Considering FlexCAN_GetExtendedTimeSegments/19 with 22 size
 to be inlined into FlexCAN_Ip_GetBitrate/104 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:3904
 Estimated badness is -0.399564, frequency 0.27.

Considering FlexCAN_SetEnhancedTDCOffset/3 with 12 size
 to be inlined into FlexCAN_Ip_SetTDCOffset_Privileged/110 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4156
 Estimated badness is -0.337021, frequency 0.12.

Considering FlexCAN_SetTDCOffset/2 with 12 size
 to be inlined into FlexCAN_Ip_SetTDCOffset_Privileged/110 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4162
 Estimated badness is -0.337021, frequency 0.12.

Considering FlexCAN_SetRegDefaultVal/48 with 50 size
 to be inlined into FlexCAN_Ip_Deinit_Privileged/94 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:3486
 Estimated badness is -0.221728, frequency 0.33.

Considering FlexCAN_SetFDEnabled/6 with 18 size
 to be inlined into FlexCAN_Ip_SetBitrateCbt_Privileged/108 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4051
 Estimated badness is -0.143710, frequency 0.12.

Considering FlexCAN_GetMsgBuffIntStatusFlag.part.0/175 with 9 size
 to be inlined into FlexCAN_GetMsgBuffIntStatusFlag/37 in unknown:0
 Estimated badness is -0.117647, frequency 0.25.

Considering FlexCAN_InitRxFifo/51 with 25 size
 to be inlined into FlexCAN_InitCtroll/52 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:388
 Estimated badness is -0.089773, frequency 1.00.

Considering FlexCAN_InitController/53 with 59 size
 to be inlined into FlexCAN_Ip_Init_Privileged/70 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:1908
 Estimated badness is -0.015235, frequency 1.00.

Considering FlexCAN_ProcessSpuriousInterruptMB/65 with 44 size
 to be inlined into FlexCAN_IRQHandler/82 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:2798
 Estimated badness is -0.011055, frequency 0.11.

Considering FlexCAN_InitBaudrate/54 with 39 size
 to be inlined into FlexCAN_Ip_Init_Privileged/70 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:1912
 Estimated badness is -0.009629, frequency 0.33.

Considering FlexCAN_InitCtroll/52 with 49 size
 to be inlined into FlexCAN_InitController/53 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:480
 Estimated badness is -0.006499, frequency 0.35.

Considering FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 with 33 size
 to be inlined into FlexCAN_IRQHandler/82 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:2789
 Estimated badness is -0.003915, frequency 0.02.

Considering FlexCAN_AbortTxTransfer/68 with 48 size
 to be inlined into FlexCAN_Ip_AbortTransfer/117 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4486
 Estimated badness is -0.000919, frequency 0.05.

Considering FlexCAN_ProccessEnhancedRxFifo/57 with 56 size
 to be inlined into FlexCAN_Ip_RxFifoBlocking/76 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:2340
 Estimated badness is -0.000901, frequency 0.07.

Considering FlexCAN_AbortRxTransfer/69 with 47 size
 to be inlined into FlexCAN_Ip_AbortTransfer/117 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:4491
 Estimated badness is -0.000858, frequency 0.05.

Considering FlexCAN_CompleteRxMessageEnhancedFifoData/55 with 20 size
 to be inlined into FlexCAN_IRQHandlerEnhancedRxFIFO/67 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:1646
 Estimated badness is -0.000802, frequency 0.02.

Considering FlexCAN_IRQHandlerTxMB/63 with 67 size
 to be inlined into FlexCAN_IRQHandler/82 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:2769
 Estimated badness is -0.000329, frequency 0.05.

Considering FlexCAN_CompleteRxMessageFifoData/81 with 34 size
 to be inlined into FlexCAN_IRQHandlerRxFIFO/64 in D:/eb2/plugins/McalExt_TS_T40DxM1I0R0/MCAL_Delivery/eclipse/plugins/Can_TS_T40D34M20I1R0/src/FlexCAN_Ip.c:1466
 Estimated badness is -0.000000, frequency 0.02.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 9364.513947 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :      155 calls, 68.160674 freq, 0 count
--param max-inline-insns-auto limit reached       :       14 calls, 3.623554 freq, 0 count
call is unlikely and code size would grow         :      140 calls, 116.089496 freq, 0 count
IPA function summary for FlexCAN_Ip_ManualBusOffRecovery/122 inlinable
  global time:     70.926003
  self size:       43
  global size:     43
  min size:       30
  self stack:      4
  global stack:    4
    size:24.000000, time:19.697416
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:1.46 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:0.16 size: 3 time: 12
       op0 is compile time invariant
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20/174 function body not available
      loop depth: 0 freq:0.16 size: 1 time: 10
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20/173 function body not available
      loop depth: 0 freq:0.16 size: 1 time: 10
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for FlexCAN_Ip_GetListenOnlyMode/121 inlinable
  global time:     6.500000
  self size:       7
  global size:     8
  min size:       6
  self stack:      0
  global stack:    0
    size:4.500000, time:4.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_IsListenOnlyModeEnabled/224 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for FlexCAN_Ip_SetListenOnlyMode_Privileged/120 inlinable
  global time:     49.317500
  self size:       34
  global size:     36
  min size:       58
  self stack:      0
  global stack:    0
    size:17.000000, time:11.752500
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:0.495000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10/172 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetListenOnlyMode/7 inlined
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10/171 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxMb15Mask_Privileged/119 inlinable
  global time:     43.505000
  self size:       30
  global size:     30
  min size:       22
  self stack:      0
  global stack:    0
    size:15.000000, time:11.385000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxMb14Mask_Privileged/118 inlinable
  global time:     43.505000
  self size:       30
  global size:     30
  min size:       22
  self stack:      0
  global stack:    0
    size:15.000000, time:11.385000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_AbortTransfer/117 inlinable
  global time:     56.136200
  self size:       36
  global size:     118
  min size:       24
  self stack:      0
  global stack:    4
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:4.000000, time:4.000000,  nonconst if:(op1 changed)
    size:58.000000, time:6.783468,  executed if:(op1 <= 63)
    size:2.000000, time:0.049426,  executed if:(op1 <= 63),  nonconst if:(op1 changed) && (op1 <= 63)
    size:1.000000, time:0.008155,  executed if:(op1 == 0) && (op1 <= 63)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_AbortRxTransfer/69 inlined
      loop depth: 0 freq:0.05 size: 3 time: 12callee size:23 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
        loop depth: 0 freq:0.05 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 <= 63)
      FlexCAN_GetMsgBuffRegion/136 function body not available
        loop depth: 0 freq:0.02 size: 4 time: 13 predicate: (op1 <= 63)
      FLEXCAN_ClearMsgBuffIntCmd/170 function body not available
        loop depth: 0 freq:0.01 size: 5 time: 14 predicate: (op1 == 0) && (op1 <= 63)
         op2 is compile time invariant
      FlexCAN_GetMsgBuffRegion/136 function body not available
        loop depth: 0 freq:0.01 size: 4 time: 13 predicate: (op1 <= 63)
      RxFifoOcuppiedLastMsgBuff/29 inlined
        loop depth: 0 freq:0.02 size: 3 time: 12callee size: 3 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
    FlexCAN_AbortTxTransfer/68 inlined
      loop depth: 0 freq:0.05 size: 4 time: 13callee size:24 stack: 4
      Stack frame offset 0, callee self size 4, callee size 4
      FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
        loop depth: 0 freq:0.05 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 <= 63)
      FlexCAN_GetBuffStatusFlag/10 call is unlikely and code size would grow
        loop depth: 1 freq:0.45 size: 4 time: 13callee size: 8 stack: 0 predicate: (op1 <= 63)
         op0 change 10.690000% of time
         op1 change 10.690000% of time
      OsIf_GetElapsed/141 function body not available
        loop depth: 1 freq:0.43 size: 4 time: 13 predicate: (op1 <= 63)
         op0 is compile time invariant
         op1 is compile time invariant
      OsIf_GetCounter/140 function body not available
        loop depth: 0 freq:0.05 size: 3 time: 12 predicate: (op1 <= 63)
         op0 is compile time invariant
      OsIf_MicrosToTicks/139 function body not available
        loop depth: 0 freq:0.05 size: 4 time: 13 predicate: (op1 <= 63)
         op0 is compile time invariant
         op1 is compile time invariant
      FlexCAN_GetMsgBuffRegion/136 function body not available
        loop depth: 0 freq:0.05 size: 4 time: 13 predicate: (op1 <= 63)
    FLEXCAN_ClearMsgBuffIntCmd/170 function body not available
      loop depth: 0 freq:0.24 size: 5 time: 14 predicate: (op1 <= 63)
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetErrorInt_Privileged/116 inlinable
  global time:     768.402723
  self size:       69
  global size:     69
  min size:       16
  self stack:      0
  global stack:    0
    size:15.000000, time:734.649562
    size:3.000000, time:1.854902,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:12.000000, time:3.489999,  nonconst if:(op1 changed)
    size:2.000000, time:0.290891,  executed if:(op1 == 1)
    size:2.000000, time:0.290891,  executed if:(op1 == 0)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.24 size: 3 time: 12
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.03 size: 4 time: 13 predicate: (op1 == 1)
       op1 is compile time invariant
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:0.15 size: 3 time: 12callee size: 3 stack: 0 predicate: (op1 == 1)
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.03 size: 4 time: 13 predicate: (op1 == 0)
       op1 is compile time invariant
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:0.15 size: 3 time: 12callee size: 3 stack: 0 predicate: (op1 == 0)
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.15 size: 4 time: 13 predicate: (op1 == 3)
       op1 is compile time invariant
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.15 size: 4 time: 13 predicate: (op1 == 2)
       op1 is compile time invariant
    FlexCAN_SetErrIntCmd/169 function body not available
      loop depth: 0 freq:0.15 size: 4 time: 13 predicate: (op1 == 4)
       op1 is compile time invariant
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_DisableInterrupts_Privileged/115 inlinable
  global time:     30.265719
  self size:       23
  global size:     23
  min size:       14
  self stack:      0
  global stack:    0
    size:12.000000, time:6.725319
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:0.41 size: 3 time: 12
    FlexCAN_DisableInterrupts/168 function body not available
      loop depth: 0 freq:0.41 size: 2 time: 11
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_EnableInterrupts_Privileged/114 inlinable
  global time:     27.711879
  self size:       27
  global size:     27
  min size:       16
  self stack:      0
  global stack:    0
    size:15.000000, time:7.091671
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:0.14 size: 3 time: 12
    FlexCAN_EnableInterrupts/167 function body not available
      loop depth: 0 freq:0.41 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ClearBuffStatusFlag/113 inlinable
  global time:     23.376800
  self size:       13
  global size:     13
  min size:       4
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.511200,  executed if:(op1 == 255)
  array index:(op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.49 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 != 255)
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetBuffStatusFlag/112 inlinable
  global time:     25.865600
  self size:       18
  global size:     18
  min size:       4
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:0.977600,  executed if:(op1 != 255)
    size:3.000000, time:1.533600,  executed if:(op1 == 255)
  array index:(op0 changed)
  calls:
    FlexCAN_GetBuffStatusFlag/10 call is unlikely and code size would grow
      loop depth: 0 freq:0.49 size: 4 time: 13callee size: 8 stack: 0 predicate: (op1 != 255)
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 inlinable
  global time:     49.317500
  self size:       34
  global size:     36
  min size:       58
  self stack:      0
  global stack:    0
    size:17.000000, time:11.752500
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:0.495000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17/166 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetTxArbitrationStartDelay/41 inlined
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17/165 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetTDCOffset_Privileged/110 inlinable
  global time:     50.555000
  self size:       43
  global size:     51
  min size:       102
  self stack:      0
  global stack:    0
    size:22.000000, time:12.495000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:4.000000, time:0.495000,  nonconst if:(op1 changed)
    size:4.000000, time:0.247500,  executed if:(op1 != 0)
    size:4.000000, time:0.247500,  executed if:(op1 != 0),  nonconst if:(op2 changed) && (op1 != 0)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16/164 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetTDCOffset/2 inlined
      loop depth: 0 freq:0.12 size: 4 time: 13callee size: 6 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    FlexCAN_SetEnhancedTDCOffset/3 inlined
      loop depth: 0 freq:0.12 size: 4 time: 13callee size: 6 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16/163 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetBitrateFD/109 inlinable
  global time:     50.750000
  self size:       21
  global size:     44
  min size:       46
  self stack:      0
  global stack:    0
    size:31.500000, time:18.750000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.500000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_GetFDTimeSegments/21 inlined
      loop depth: 0 freq:0.50 size: 3 time: 12callee size:11 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    FlexCAN_GetEnhancedDataTimeSegments/18 inlined
      loop depth: 0 freq:0.50 size: 3 time: 12callee size:11 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      DevAssert/0 call is unlikely and code size would grow
        loop depth: 0 freq:0.50 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetBitrateCbt_Privileged/108 inlinable
  global time:     55.083600
  self size:       54
  global size:     62
  min size:       80
  self stack:      0
  global stack:    0
    size:37.000000, time:19.387300
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:2.000000, time:0.247500,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.20 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15/162 function body not available
      loop depth: 0 freq:0.12 size: 1 time: 10
    FlexCAN_SetFDTimeSegments/12 call is unlikely and code size would grow
      loop depth: 0 freq:0.06 size: 3 time: 12callee size:15 stack: 0
    FlexCAN_SetEnhancedDataTimeSegments/17 call is unlikely and code size would grow
      loop depth: 0 freq:0.06 size: 3 time: 12callee size:16 stack: 0
    FlexCAN_SetFDEnabled/6 inlined
      loop depth: 0 freq:0.12 size: 4 time: 13callee size: 9 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15/161 function body not available
      loop depth: 0 freq:0.12 size: 1 time: 10
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetTDCValue/107 inlinable
  global time:     20.500000
  self size:       14
  global size:     14
  min size:       4
  self stack:      0
  global stack:    0
    size:8.000000, time:6.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetTDCFail/106 inlinable
  global time:     23.000000
  self size:       19
  global size:     19
  min size:       4
  self stack:      0
  global stack:    0
    size:13.000000, time:9.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ClearTDCFail/105 inlinable
  global time:     42.000000
  self size:       19
  global size:     19
  min size:       8
  self stack:      0
  global stack:    0
    size:11.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09/160 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09/159 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetBitrate/104 inlinable
  global time:     46.459700
  self size:       27
  global size:     56
  min size:       68
  self stack:      0
  global stack:    0
    size:46.500000, time:20.459700
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_GetTimeSegments/20 inlined
      loop depth: 0 freq:0.40 size: 3 time: 12callee size:10 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    FlexCAN_GetExtendedTimeSegments/19 inlined
      loop depth: 0 freq:0.27 size: 3 time: 12callee size:11 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    FlexCAN_GetEnhancedNominalTimeSegments/16 inlined
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 9 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetBitrate_Privileged/103 inlinable
  global time:     54.638318
  self size:       50
  global size:     52
  min size:       54
  self stack:      0
  global stack:    0
    size:19.000000, time:13.647300
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
    size:4.000000, time:0.990000,  nonconst if:(op2 changed)
    size:3.000000, time:0.592218,  executed if:(op2 != 1)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.20 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14/158 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetTimeSegments/13 call is unlikely and code size would grow
      loop depth: 0 freq:0.12 size: 3 time: 12callee size:14 stack: 0 predicate: (op2 != 1)
    FlexCAN_SetExtendedTimeSegments/14 call is unlikely and code size would grow
      loop depth: 0 freq:0.08 size: 3 time: 12callee size:15 stack: 0 predicate: (op2 != 1)
    FlexCAN_SetEnhancedNominalTimeSegments/15 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 3 time: 12callee size:16 stack: 0 predicate: (op2 == 1)
    FlexCAN_EnhCbtEnable/24 inlined
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14/157 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxMaskType_Privileged/102 inlinable
  global time:     49.070000
  self size:       34
  global size:     37
  min size:       58
  self stack:      0
  global stack:    0
    size:14.000000, time:11.010000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:0.495000,  nonconst if:(op1 changed)
    size:2.000000, time:0.247500,  executed if:(op1 != 0)
    size:2.000000, time:0.247500,  executed if:(op1 == 0)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08/156 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_SetRxMaskType/42 inlined
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 5 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08/155 function body not available
      loop depth: 0 freq:0.25 size: 1 time: 10
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetStopMode_Privileged/101 inlinable
  global time:     32.960000
  self size:       15
  global size:     15
  min size:       16
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetStartMode_Privileged/100 inlinable
  global time:     50.000000
  self size:       15
  global size:     15
  min size:       14
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_ExitFreezeMode/151 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07/154 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07/153 function body not available
      loop depth: 0 freq:1.00 size: 1 time: 10
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetStartMode_Privileged/99 inlinable
  global time:     7.000000
  self size:       8
  global size:     8
  min size:       0
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:

IPA function summary for FlexCAN_Ip_GetStopMode_Privileged/98 inlinable
  global time:     7.000000
  self size:       8
  global size:     8
  min size:       0
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:

IPA function summary for FlexCAN_Ip_MainFunctionWrite/97 inlinable
  global time:     41.257448
  self size:       58
  global size:     58
  min size:       60
  self stack:      80
  global stack:    80
    size:24.000000, time:7.540000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.08 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuffTimestamp/150 function body not available
      loop depth: 0 freq:0.08 size: 4 time: 13
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.02 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuff/143 function body not available
      loop depth: 0 freq:0.08 size: 4 time: 13
       op2 is compile time invariant
    FlexCAN_LockRxMsgBuff/142 function body not available
      loop depth: 0 freq:0.08 size: 3 time: 12
    FlexCAN_GetBuffStatusFlag/10 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 4 time: 13callee size: 8 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19

IPA function summary for FlexCAN_Ip_MainFunctionBusOff_Privileged/96 inlinable
  global time:     28.650000
  self size:       23
  global size:     23
  min size:       18
  self stack:      0
  global stack:    0
    size:10.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    indirect call loop depth: 0 freq:0.35 size: 7 time: 19

IPA function summary for FlexCAN_Ip_MainFunctionRead/95 inlinable
  global time:     49.339804
  self size:       57
  global size:     57
  min size:       8
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:4.000000, time:4.000000,  nonconst if:(op1 changed)
    size:8.000000, time:4.470867,  executed if:(op1 != 255)
    size:2.000000, time:0.815466,  executed if:(op1 != 255),  nonconst if:(op1 changed) && (op1 != 255)
    size:2.000000, time:0.407733,  executed if:(op1 <= 7) && (op1 != 255),  nonconst if:(op1 changed) && (op1 <= 7) && (op1 != 255)
    size:5.000000, time:0.509666,  executed if:(op1 == 0) && (op1 <= 7) && (op1 != 255)
    size:10.000000, time:0.752321,  executed if:(op1 == 255)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_IRQHandlerRxMB/62 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.06 size: 3 time: 12callee size:29 stack:80 predicate: (op1 != 255)
    FlexCAN_GetBuffStatusFlag/10 call is unlikely and code size would grow
      loop depth: 0 freq:0.59 size: 4 time: 13callee size: 8 stack: 0 predicate: (op1 != 255)
    FlexCAN_IRQHandlerRxFIFO/64 call is unlikely and code size would grow
      loop depth: 0 freq:0.03 size: 3 time: 12callee size:49 stack:80 predicate: (op1 == 0) && (op1 <= 7) && (op1 != 255)
       op1 is compile time invariant
    FlexCAN_IRQHandlerEnhancedRxFIFO/67 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.01 size: 3 time: 12callee size:48 stack:80 predicate: (op1 == 255)
       op1 is compile time invariant
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:0.20 size: 3 time: 12 predicate: (op1 == 255)
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_Deinit_Privileged/94 inlinable
  global time:     48.473300
  self size:       17
  global size:     46
  min size:       44
  self stack:      0
  global stack:    0
    size:28.500000, time:10.923300
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.33 size: 2 time: 11
    FlexCAN_SetRegDefaultVal/48 inlined
      loop depth: 0 freq:0.33 size: 2 time: 11callee size:25 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_GetMaxMbNum/152 function body not available
        loop depth: 0 freq:0.33 size: 3 time: 12
      FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
        loop depth: 0 freq:0.33 size: 3 time: 12
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/93 inlinable
  global time:     43.505000
  self size:       30
  global size:     30
  min size:       22
  self stack:      0
  global stack:    0
    size:15.000000, time:11.385000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SetRxIndividualMask_Privileged/92 inlinable
  global time:     32.343363
  self size:       36
  global size:     36
  min size:       4
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.300000,  nonconst if:(op1 changed)
    size:14.000000, time:4.387663,  executed if:(op1 <= 63)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.11 size: 3 time: 12 predicate: (op1 <= 63)
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:0.42 size: 3 time: 12callee size: 3 stack: 0 predicate: (op1 <= 63)
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.11 size: 3 time: 12 predicate: (op1 <= 63)
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ExitFreezeMode_Privileged/91 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       6
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_ExitFreezeMode/151 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12

IPA function summary for FlexCAN_Ip_EnterFreezeMode_Privileged/90 inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       6
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_EnterFreezeMode/124 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12

IPA function summary for FlexCAN_Ip_SetRxMbGlobalMask_Privileged/89 inlinable
  global time:     43.505000
  self size:       30
  global size:     30
  min size:       22
  self stack:      0
  global stack:    0
    size:15.000000, time:11.385000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.26 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_SendBlocking/88 inlinable
  global time:     176.212461
  self size:       91
  global size:     91
  min size:       102
  self stack:      4
  global stack:    4
    size:34.000000, time:23.689561
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op5 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.33 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetBuffStatusFlag/10 call is unlikely and code size would grow
      loop depth: 1 freq:0.35 size: 4 time: 13callee size: 8 stack: 0
       op1 change 95.340000% of time
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:0.33 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:0.04 size: 3 time: 12
       op0 is compile time invariant
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:0.04 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    FlexCAN_GetMsgBuffRegion/136 function body not available
      loop depth: 0 freq:0.04 size: 4 time: 13
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.04 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetBuffStatusFlag/10 call is unlikely and code size would grow
      loop depth: 1 freq:3.08 size: 4 time: 13callee size: 8 stack: 0
       op0 change 32.410000% of time
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:2.92 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op0 is compile time invariant
    FlexCAN_StartSendData/60 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:1.00 size: 7 time: 16callee size:32 stack:16
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for FlexCAN_Busoff_Error_IRQHandler/87 inlinable
  global time:     52.439000
  self size:       107
  global size:     107
  min size:       74
  self stack:      0
  global stack:    0
    size:66.000000, time:27.220450
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19
    indirect call loop depth: 0 freq:0.10 size: 7 time: 19
    indirect call loop depth: 0 freq:0.12 size: 7 time: 19

IPA function summary for FlexCAN_Ip_GetControllerRxErrorCounter/86 inlinable
  global time:     17.000000
  self size:       9
  global size:     9
  min size:       4
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetControllerTxErrorCounter/85 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       4
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetErrorStatus/84 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       4
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ClearErrorStatus/83 inlinable
  global time:     16.000000
  self size:       8
  global size:     8
  min size:       4
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_IRQHandler/82 inlinable
  global time:     215.441010
  self size:       90
  global size:     214
  min size:       364
  self stack:      0
  global stack:    80
    size:94.000000, time:54.935533
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
    size:4.000000, time:2.000000,  nonconst if:(op3 changed)
    size:37.000000, time:2.809056,  executed if:(op3 == 1)
  loop iterations:(op2 changed || op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 1 freq:3.76 size: 3 time: 12callee size: 5 stack: 0
       op0 change 26.560000% of time
    FlexCAN_ProcessSpuriousInterruptMB/65 inlined
      loop depth: 0 freq:0.11 size: 4 time: 13callee size:22 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
        loop depth: 1 freq:0.05 size: 3 time: 12callee size: 5 stack: 0
      FlexCAN_GetBuffStatusImask/11 inlined
        loop depth: 1 freq:0.29 size: 4 time: 13callee size: 8 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_GetBuffStatusFlag/10 call is unlikely and code size would grow
        loop depth: 1 freq:0.88 size: 4 time: 13callee size: 8 stack: 0
         op0 change 12.350000% of time
    FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 inlined
      loop depth: 0 freq:0.02 size: 4 time: 13callee size:16 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_IRQHandlerEnhancedRxFIFO/67 --param max-inline-insns-auto limit reached
        loop depth: 1 freq:0.01 size: 3 time: 12callee size:48 stack:80 predicate: (op3 == 1)
      FlexCAN_GetEnhancedRxFIFOIntStatusFlag/47 inlined
        loop depth: 1 freq:0.03 size: 4 time: 13callee size: 4 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_GetEnhancedRxFIFOStatusFlag/225 inlined
        loop depth: 1 freq:0.10 size: 4 time: 13callee size: 4 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.04 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuffIntStatusFlag/37 call is unlikely and code size would grow
      loop depth: 0 freq:0.27 size: 4 time: 13callee size: 8 stack: 0
    FlexCAN_IRQHandlerTxMB/63 inlined
      loop depth: 0 freq:0.05 size: 3 time: 12callee size:33 stack:80
      Stack frame offset 0, callee self size 80, callee size 80
      FlexCAN_SetMsgBuffIntCmd/133 function body not available
        loop depth: 0 freq:0.01 size: 6 time: 15
         op3 is compile time invariant
      FlexCAN_SetMsgBuffIntCmd/133 function body not available
        loop depth: 0 freq:0.02 size: 6 time: 15
         op3 is compile time invariant
      FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
        loop depth: 0 freq:0.03 size: 3 time: 12callee size: 5 stack: 0
      FlexCAN_GetMsgBuffTimestamp/150 function body not available
        loop depth: 0 freq:0.03 size: 4 time: 13
      FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
        loop depth: 0 freq:0.01 size: 3 time: 12callee size: 5 stack: 0
      FlexCAN_GetMsgBuff/143 function body not available
        loop depth: 0 freq:0.03 size: 4 time: 13
         op2 is compile time invariant
      FlexCAN_LockRxMsgBuff/142 function body not available
        loop depth: 0 freq:0.03 size: 3 time: 12
      indirect call loop depth: 0 freq:0.04 size: 7 time: 19
    FlexCAN_IRQHandlerRxMB/62 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.05 size: 3 time: 12callee size:29 stack:80
    FlexCAN_IRQHandlerRxFIFO/64 call is unlikely and code size would grow
      loop depth: 0 freq:0.03 size: 3 time: 12callee size:49 stack:80
    FlexCAN_GetMsgBuffIntStatusFlag/37 call is unlikely and code size would grow
      loop depth: 1 freq:4.46 size: 4 time: 13callee size: 8 stack: 0
       op0 change 22.400000% of time
    FlexCAN_GetMsgBuffIntStatusFlag/37 call is unlikely and code size would grow
      loop depth: 0 freq:0.53 size: 4 time: 13callee size: 8 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_GetTransferStatus/80 inlinable
  global time:     33.000000
  self size:       19
  global size:     19
  min size:       8
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:4.000000, time:4.000000,  nonconst if:(op1 changed)
    size:3.000000, time:1.500000,  executed if:(op1 > 63)
    size:3.000000, time:1.500000,  executed if:(op1 <= 63)
  array index:(op1 changed) && (op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ConfigRemoteResponseMb/79 inlinable
  global time:     123.853117
  self size:       67
  global size:     67
  min size:       76
  self stack:      16
  global stack:    16
    size:21.500000, time:17.108101
    size:5.500000, time:3.779400,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.21 size: 7 time: 16
       op3 is compile time invariant
    FlexCAN_SetTxMsgBuff/137 function body not available
      loop depth: 0 freq:0.64 size: 6 time: 15
       op1 is compile time invariant
    FlexCAN_GetMsgBuffRegion/136 function body not available
      loop depth: 0 freq:0.64 size: 4 time: 13
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.64 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_IsMbOutOfRange/135 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    FlexCAN_GetMbPayloadSize/134 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 inlinable
  global time:     81.100000
  self size:       40
  global size:     40
  min size:       42
  self stack:      0
  global stack:    0
    size:14.000000, time:11.010000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    FlexCAN_SetEnhancedRxFifoFilter/149 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ConfigRxFifo_Privileged/77 inlinable
  global time:     46.347500
  self size:       33
  global size:     33
  min size:       30
  self stack:      0
  global stack:    0
    size:14.000000, time:11.010000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_Disable/125 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    FlexCAN_SetRxFifoFilter/148 function body not available
      loop depth: 0 freq:0.25 size: 4 time: 13
    FlexCAN_IsFreezeMode/40 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
    FlexCAN_Enable/147 function body not available
      loop depth: 0 freq:0.25 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_RxFifoBlocking/76 inlinable
  global time:     70.691914
  self size:       45
  global size:     94
  min size:       136
  self stack:      0
  global stack:    4
    size:49.500000, time:17.011312
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:0.069165,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_ProccessLegacyRxFIFO/58 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.16 size: 4 time: 13callee size:37 stack: 4
    FlexCAN_StartRxMessageFifoData/61 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.49 size: 4 time: 13callee size:22 stack: 0
    FlexCAN_ProccessLegacyRxFIFO/58 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.10 size: 4 time: 13callee size:37 stack: 4
    FlexCAN_ProccessEnhancedRxFifo/57 inlined
      loop depth: 0 freq:0.07 size: 4 time: 13callee size:28 stack: 4
      Stack frame offset 0, callee self size 4, callee size 4
      OsIf_GetElapsed/141 function body not available
        loop depth: 1 freq:0.61 size: 4 time: 13
         op0 is compile time invariant
         op1 is compile time invariant
      FlexCAN_IRQHandlerEnhancedRxFIFO/67 --param max-inline-insns-auto limit reached
        loop depth: 2 freq:0.13 size: 3 time: 12callee size:48 stack:80
         op0 change 53.590000% of time
      FlexCAN_GetEnhancedRxFIFOStatusFlag/45 inlined
        loop depth: 2 freq:0.39 size: 4 time: 13callee size: 4 stack: 0
        Stack frame offset 4, callee self size 0, callee size 0
      OsIf_GetCounter/140 function body not available
        loop depth: 0 freq:0.07 size: 3 time: 12
         op0 is compile time invariant
      OsIf_MicrosToTicks/139 function body not available
        loop depth: 0 freq:0.07 size: 4 time: 13
         op1 is compile time invariant
    FlexCAN_StartRxMessageFifoData/61 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.30 size: 4 time: 13callee size:22 stack: 0
    FlexCAN_StartRxMessageEnhancedFifoData/56 call is unlikely and code size would grow
      loop depth: 0 freq:0.21 size: 4 time: 13callee size:12 stack: 0
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_RxFifo/75 inlinable
  global time:     43.533600
  self size:       27
  global size:     27
  min size:       34
  self stack:      0
  global stack:    0
    size:6.000000, time:4.533600
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_StartRxMessageFifoData/61 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.49 size: 4 time: 13callee size:22 stack: 0
    FlexCAN_StartRxMessageFifoData/61 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.30 size: 4 time: 13callee size:22 stack: 0
    FlexCAN_StartRxMessageEnhancedFifoData/56 call is unlikely and code size would grow
      loop depth: 0 freq:0.21 size: 4 time: 13callee size:12 stack: 0
    FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ReceiveBlocking/74 inlinable
  global time:     140.263931
  self size:       78
  global size:     78
  min size:       38
  self stack:      4
  global stack:    4
    size:24.000000, time:32.109260
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op4 changed)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:6.000000, time:7.510334,  nonconst if:(op3 changed)
    size:2.000000, time:0.277200,  executed if:(op3 == 0)
    size:2.000000, time:1.180060,  executed if:(op3 == 1)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.11 size: 6 time: 15 predicate: (op3 == 0)
       op3 is compile time invariant
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:2.92 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    FlexCAN_IRQHandlerRxMB/62 --param max-inline-insns-auto limit reached
      loop depth: 1 freq:0.19 size: 3 time: 12callee size:29 stack:80 predicate: (op3 == 1)
    FlexCAN_GetBuffStatusFlag/10 call is unlikely and code size would grow
      loop depth: 1 freq:0.59 size: 4 time: 13callee size: 8 stack: 0 predicate: (op3 == 1)
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
       op0 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 7 time: 16 predicate: (op3 == 0)
       op3 is compile time invariant
    FlexCAN_StartRxMessageBufferData/59 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 6 time: 15callee size:12 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for FlexCAN_Ip_Receive/73 inlinable
  global time:     36.805000
  self size:       26
  global size:     26
  min size:       16
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.000000,  nonconst if:(op3 changed)
    size:1.000000, time:0.165000,  executed if:(op3 == 0)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 7 time: 16 predicate: (op3 == 0)
       op3 is compile time invariant
    FlexCAN_StartRxMessageBufferData/59 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 6 time: 15callee size:12 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_ConfigRxMb/72 inlinable
  global time:     87.301100
  self size:       48
  global size:     48
  min size:       56
  self stack:      16
  global stack:    16
    size:13.500000, time:10.797750
    size:4.500000, time:2.959550,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetRxMsgBuff/138 function body not available
      loop depth: 0 freq:0.64 size: 5 time: 14
       op2 is compile time invariant
    FlexCAN_SetRxMsgBuff/138 function body not available
      loop depth: 0 freq:0.64 size: 5 time: 14
       op2 is compile time invariant
    FlexCAN_SetRxMsgBuff/138 function body not available
      loop depth: 0 freq:0.64 size: 5 time: 14
       op2 is compile time invariant
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.64 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_IsMbOutOfRange/135 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_Send/71 inlinable
  global time:     40.860650
  self size:       36
  global size:     37
  min size:       78
  self stack:      0
  global stack:    0
    size:13.000000, time:8.626950
    size:3.500000, time:2.082500,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.05 size: 7 time: 16
       op3 is compile time invariant
    FlexCAN_StartSendData/60 --param max-inline-insns-auto limit reached
      loop depth: 0 freq:0.33 size: 7 time: 16callee size:32 stack:16
    FlexCAN_IsListenOnlyModeEnabled/28 inlined
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 3 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_Ip_Init_Privileged/70 inlinable
  global time:     263.378943
  self size:       49
  global size:     166
  min size:       312
  self stack:      0
  global stack:    0
    size:85.000000, time:136.262535
    size:14.000000, time:47.167143,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetOperationMode/123 function body not available
      loop depth: 0 freq:0.33 size: 3 time: 12
    FlexCAN_InitBaudrate/54 inlined
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:19 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_SetTimeSegments/13 call is unlikely and code size would grow
        loop depth: 0 freq:0.11 size: 3 time: 12callee size:14 stack: 0
      FlexCAN_SetFDTimeSegments/12 call is unlikely and code size would grow
        loop depth: 0 freq:0.11 size: 3 time: 12callee size:15 stack: 0
      FlexCAN_SetExtendedTimeSegments/14 call is unlikely and code size would grow
        loop depth: 0 freq:0.11 size: 3 time: 12callee size:15 stack: 0
      FlexCAN_SetEnhancedDataTimeSegments/17 call is unlikely and code size would grow
        loop depth: 0 freq:0.04 size: 3 time: 12callee size:16 stack: 0
      FlexCAN_SetEnhancedNominalTimeSegments/15 call is unlikely and code size would grow
        loop depth: 0 freq:0.11 size: 3 time: 12callee size:16 stack: 0
      FlexCAN_EnableExtCbt/25 inlined
        loop depth: 0 freq:0.33 size: 3 time: 12callee size: 4 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
    FlexCAN_InitController/53 inlined
      loop depth: 0 freq:1.00 size: 5 time: 14callee size:29 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_InitCtroll/52 inlined
        loop depth: 0 freq:0.35 size: 4 time: 13callee size:24 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
        FlexCAN_Disable/125 function body not available
          loop depth: 0 freq:0.06 size: 2 time: 11
        FlexCAN_EnterFreezeMode/124 function body not available
          loop depth: 0 freq:0.06 size: 2 time: 11
        FlexCAN_SetMaxMsgBuffNum/130 function body not available
          loop depth: 0 freq:0.18 size: 4 time: 13
        FlexCAN_SetPayloadSize/129 function body not available
          loop depth: 0 freq:0.18 size: 3 time: 12
        FlexCAN_Disable/125 function body not available
          loop depth: 0 freq:0.18 size: 2 time: 11
        FlexCAN_EnterFreezeMode/124 function body not available
          loop depth: 0 freq:0.18 size: 2 time: 11
        FlexCAN_InitRxFifo/51 inlined
          loop depth: 0 freq:0.35 size: 4 time: 13callee size:12 stack: 0
          Stack frame offset 0, callee self size 0, callee size 0
          FlexCAN_EnableEnhancedRxFifo/132 function body not available
            loop depth: 0 freq:0.10 size: 6 time: 15
          FlexCAN_EnableRxFifo/131 function body not available
            loop depth: 0 freq:0.12 size: 4 time: 13
      FlexCAN_ResetImaskBuff/128 function body not available
        loop depth: 0 freq:0.35 size: 2 time: 11
      FlexCAN_ConfigCtrlOptions/127 function body not available
        loop depth: 0 freq:0.35 size: 3 time: 12
      FlexCAN_SetFDEnabled/226 inlined
        loop depth: 0 freq:0.35 size: 4 time: 13callee size: 9 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_DisableMemErrorDetection/5 inlined
        loop depth: 0 freq:0.35 size: 2 time: 11callee size: 7 stack: 0
        Stack frame offset 0, callee self size 0, callee size 0
      FlexCAN_Disable/125 function body not available
        loop depth: 0 freq:0.35 size: 2 time: 11
      FlexCAN_EnterFreezeMode/124 function body not available
        loop depth: 0 freq:0.35 size: 2 time: 11
      FlexCAN_Init/126 function body not available
        loop depth: 0 freq:0.70 size: 3 time: 12
      FlexCAN_Disable/125 function body not available
        loop depth: 0 freq:0.19 size: 3 time: 12
      FlexCAN_EnterFreezeMode/124 function body not available
        loop depth: 0 freq:0.59 size: 3 time: 12
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_IRQHandlerEnhancedRxFIFO/67 inlinable
  global time:     23.305720
  self size:       82
  global size:     97
  min size:       2
  self stack:      80
  global stack:    80
  estimated growth:99
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:10.000000, time:4.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.200000,  executed if:(op1 == 31),  nonconst if:(op1 changed) && (op1 == 31)
    size:4.000000, time:0.800000,  executed if:(op1 == 31)
    size:1.000000, time:0.200000,  executed if:(op1 == 30),  nonconst if:(op1 changed) && (op1 == 30)
    size:4.000000, time:0.800000,  executed if:(op1 == 30)
    size:1.000000, time:0.200000,  executed if:(op1 == 29),  nonconst if:(op1 changed) && (op1 == 29)
    size:4.000000, time:0.800000,  executed if:(op1 == 29)
    size:27.000000, time:1.751920,  executed if:(op1 == 28)
    size:1.000000, time:0.068000,  executed if:(op1 == 28),  nonconst if:(op1 changed) && (op1 == 28)
    size:1.000000, time:0.022440,  executed if:(op1 == 28),  nonconst if:(op0 changed) && (op1 == 28)
  array index:(op0 changed)
  calls:
    FlexCAN_CompleteRxMessageEnhancedFifoData/55 inlined
      loop depth: 0 freq:0.02 size: 2 time: 11callee size:10 stack: 0
      Stack frame offset 80, callee self size 0, callee size 0
      DevAssert/0 call is unlikely and code size would grow
        loop depth: 0 freq:0.02 size: 2 time: 11callee size: 3 stack: 0 predicate: (op1 == 28)
      FlexCAN_IsEnhancedRxFifoAvailable/144 function body not available
        loop depth: 0 freq:0.02 size: 3 time: 12 predicate: (op1 == 28)
      DevAssert/0 call is unlikely and code size would grow
        loop depth: 0 freq:0.02 size: 2 time: 11callee size: 3 stack: 0 predicate: (op1 == 28)
    FlexCAN_ReadEnhancedRxFifo/145 function body not available
      loop depth: 0 freq:0.07 size: 3 time: 12 predicate: (op1 == 28)
    indirect call loop depth: 0 freq:0.14 size: 7 time: 19predicate: (op1 == 31)
    indirect call loop depth: 0 freq:0.14 size: 7 time: 19predicate: (op1 == 30)
    indirect call loop depth: 0 freq:0.14 size: 7 time: 19predicate: (op1 == 29)
    indirect call loop depth: 0 freq:0.05 size: 7 time: 19predicate: (op1 == 28)

IPA function summary for FlexCAN_IRQHandlerRxFIFO/64 inlinable
  global time:     29.090636
  self size:       70
  global size:     99
  min size:       6
  self stack:      80
  global stack:    80
  estimated growth:88
    size:6.000000, time:5.300000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:8.000000, time:4.000000,  nonconst if:(op1 changed)
    size:3.000000, time:0.750000,  executed if:(op1 == 7)
    size:3.000000, time:0.750000,  executed if:(op1 == 6)
    size:22.000000, time:1.304915,  executed if:(op1 == 5)
    size:1.000000, time:0.016698,  executed if:(op1 == 5),  nonconst if:(op0 changed) && (op1 == 5)
  array index:(op0 changed)
  calls:
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 == 7)
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.25 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 == 6)
    FlexCAN_CompleteRxMessageFifoData/81 inlined
      loop depth: 0 freq:0.02 size: 2 time: 11callee size:17 stack: 0
      Stack frame offset 80, callee self size 0, callee size 0
      FlexCAN_SetMsgBuffIntCmd/133 function body not available
        loop depth: 0 freq:0.01 size: 6 time: 15 predicate: (op1 == 5)
         op2 is compile time invariant
         op3 is compile time invariant
      FlexCAN_SetMsgBuffIntCmd/133 function body not available
        loop depth: 0 freq:0.01 size: 6 time: 15 predicate: (op1 == 5)
         op2 is compile time invariant
         op3 is compile time invariant
      FlexCAN_SetMsgBuffIntCmd/133 function body not available
        loop depth: 0 freq:0.01 size: 6 time: 15 predicate: (op1 == 5)
         op2 is compile time invariant
         op3 is compile time invariant
      DevAssert/0 call is unlikely and code size would grow
        loop depth: 0 freq:0.02 size: 2 time: 11callee size: 3 stack: 0 predicate: (op1 == 5)
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.05 size: 3 time: 12callee size: 5 stack: 0 predicate: (op1 == 5)
    FlexCAN_ReadRxFifo/146 function body not available
      loop depth: 0 freq:0.05 size: 3 time: 12 predicate: (op1 == 5)
    indirect call loop depth: 0 freq:0.18 size: 7 time: 19predicate: (op1 == 7)
    indirect call loop depth: 0 freq:0.18 size: 7 time: 19predicate: (op1 == 6)
    indirect call loop depth: 0 freq:0.04 size: 7 time: 19predicate: (op1 == 5)

IPA function summary for FlexCAN_IRQHandlerRxMB/62 inlinable
  global time:     76.179532
  self size:       59
  global size:     59
  min size:       27
  self stack:      80
  global stack:    80
  estimated growth:100
    size:27.000000, time:20.137002
    size:3.000000, time:2.000000,  executed if:(not inlined)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.08 size: 6 time: 15
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 6 time: 15
       op3 is compile time invariant
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_GetMsgBuff/143 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
    FlexCAN_LockRxMsgBuff/142 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
    indirect call loop depth: 0 freq:0.70 size: 7 time: 19

IPA function summary for FlexCAN_StartRxMessageFifoData/61 inlinable
  global time:     28.140750
  self size:       44
  global size:     44
  min size:       20
  self stack:      0
  global stack:    0
  estimated growth:104
    size:20.000000, time:9.314500
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.11 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.11 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.11 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_StartSendData/60 inlinable
  global time:     97.411070
  self size:       65
  global size:     65
  min size:       27
  self stack:      16
  global stack:    16
  estimated growth:37
    size:27.000000, time:15.644525
    size:7.000000, time:3.808802,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_SetTxMsgBuff/137 function body not available
      loop depth: 0 freq:0.37 size: 6 time: 15
       op1 is compile time invariant
       op4 is compile time invariant
    FlexCAN_GetMsgBuffRegion/136 function body not available
      loop depth: 0 freq:0.37 size: 4 time: 13
    FlexCAN_ClearMsgBuffIntStatusFlag/9 call is unlikely and code size would grow
      loop depth: 0 freq:0.37 size: 3 time: 12callee size: 5 stack: 0
    FlexCAN_IsMbOutOfRange/135 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    FlexCAN_GetMbPayloadSize/134 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_StartRxMessageBufferData/59 inlinable
  global time:     38.874860
  self size:       24
  global size:     24
  min size:       12
  self stack:      0
  global stack:    0
  estimated growth:6
    size:12.000000, time:9.874860
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op1 changed) && (op0 changed)
  calls:
    FlexCAN_IsMbOutOfRange/135 function body not available
      loop depth: 0 freq:1.00 size: 6 time: 15
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_ProccessLegacyRxFIFO/58 inlinable
  global time:     338.159771
  self size:       74
  global size:     74
  min size:       34
  self stack:      4
  global stack:    4
  estimated growth:60
    size:34.000000, time:115.926893
    size:3.000000, time:1.999800,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  array index:(op0 changed)
  calls:
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    FlexCAN_SetMsgBuffIntCmd/133 function body not available
      loop depth: 0 freq:0.17 size: 6 time: 15
       op2 is compile time invariant
       op3 is compile time invariant
    OsIf_GetElapsed/141 function body not available
      loop depth: 1 freq:8.83 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    FlexCAN_IRQHandlerRxFIFO/64 call is unlikely and code size would grow
      loop depth: 2 freq:1.40 size: 3 time: 12callee size:49 stack:80
       op0 change 71.460000% of time
    FlexCAN_GetBuffStatusFlag/10 call is unlikely and code size would grow
      loop depth: 2 freq:4.24 size: 4 time: 13callee size: 8 stack: 0
       op0 change 23.580000% of time
    OsIf_GetCounter/140 function body not available
      loop depth: 0 freq:1.00 size: 3 time: 12
       op0 is compile time invariant
    OsIf_MicrosToTicks/139 function body not available
      loop depth: 0 freq:1.00 size: 4 time: 13
       op1 is compile time invariant

IPA function summary for FlexCAN_StartRxMessageEnhancedFifoData/56 inlinable
  global time:     26.444428
  self size:       24
  global size:     24
  min size:       18
  self stack:      0
  global stack:    0
  estimated growth:10
    size:18.000000, time:12.444428
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  array index:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_IsFreezeMode/40 inlinable
  global time:     6.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:6
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:

IPA function summary for FlexCAN_GetMsgBuffIntStatusFlag/37 inlinable
  global time:     8.750000
  self size:       16
  global size:     17
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:8
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 > 31),  nonconst if:(op1 changed) && (op1 > 31)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31) && (not inlined),  nonconst if:(op0[ref offset: 320] changed) && (op1 <= 31) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31),  nonconst if:(op0[ref offset: 320] changed) && (op1 <= 31)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31) && (not inlined),  nonconst if:(op0[ref offset: 384] changed) && (op1 <= 31) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31),  nonconst if:(op0[ref offset: 384] changed) && (op1 <= 31)
    size:1.000000, time:0.500000,  executed if:(op1 <= 31),  nonconst if:(op0[ref offset: 320] changed || op0[ref offset: 384] changed) && (op1 <= 31)
    size:2.000000, time:1.000000,  executed if:(op1 <= 31),  nonconst if:(op1 changed || op0[ref offset: 320] changed || op0[ref offset: 384] changed) && (op1 <= 31)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op0[ref offset: 288] changed) && (op1 <= 63) && (op1 > 31)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op0[ref offset: 352] changed) && (op1 <= 63) && (op1 > 31)
    size:1.000000, time:0.250000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op0[ref offset: 288] changed || op0[ref offset: 352] changed) && (op1 <= 63) && (op1 > 31)
    size:1.000000, time:0.250000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op1 changed) && (op1 <= 63) && (op1 > 31)
    size:2.000000, time:0.500000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op1 changed || op0[ref offset: 288] changed || op0[ref offset: 352] changed) && (op1 <= 63) && (op1 > 31)
  calls:
    FlexCAN_GetMsgBuffIntStatusFlag.part.0/175 inlined
      loop depth: 0 freq:0.25 size: 4 time: 13callee size: 4 stack: 0
      Stack frame offset 0, callee self size 0, callee size 0

IPA function summary for FlexCAN_SetEnhancedDataTimeSegments/17 inlinable
  global time:     41.000000
  self size:       33
  global size:     33
  min size:       21
  self stack:      0
  global stack:    0
  estimated growth:9
    size:20.500000, time:20.500000
    size:9.500000, time:8.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_SetEnhancedNominalTimeSegments/15 inlinable
  global time:     41.000000
  self size:       33
  global size:     33
  min size:       21
  self stack:      0
  global stack:    0
  estimated growth:9
    size:20.500000, time:20.500000
    size:9.500000, time:8.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_SetExtendedTimeSegments/14 inlinable
  global time:     38.000000
  self size:       30
  global size:     30
  min size:       20
  self stack:      0
  global stack:    0
  estimated growth:10
    size:19.500000, time:19.500000
    size:7.500000, time:6.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_SetTimeSegments/13 inlinable
  global time:     37.000000
  self size:       29
  global size:     29
  min size:       19
  self stack:      0
  global stack:    0
  estimated growth:9
    size:18.500000, time:18.500000
    size:7.500000, time:6.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_SetFDTimeSegments/12 inlinable
  global time:     38.000000
  self size:       30
  global size:     30
  min size:       20
  self stack:      0
  global stack:    0
  estimated growth:10
    size:19.500000, time:19.500000
    size:7.500000, time:6.500000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

IPA function summary for FlexCAN_GetBuffStatusFlag/10 inlinable
  global time:     8.250000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:56
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 > 31),  nonconst if:(op1 changed) && (op1 > 31)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31) && (not inlined),  nonconst if:(op0[ref offset: 352] changed) && (op1 <= 63) && (op1 > 31) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op0[ref offset: 352] changed) && (op1 <= 63) && (op1 > 31)
    size:2.000000, time:0.500000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op1 changed) && (op1 <= 63) && (op1 > 31)
    size:2.000000, time:0.500000,  executed if:(op1 <= 63) && (op1 > 31),  nonconst if:(op1 changed || op0[ref offset: 352] changed) && (op1 <= 63) && (op1 > 31)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31) && (not inlined),  nonconst if:(op0[ref offset: 384] changed) && (op1 <= 31) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31),  nonconst if:(op0[ref offset: 384] changed) && (op1 <= 31)
    size:1.000000, time:0.500000,  executed if:(op1 <= 31),  nonconst if:(op1 changed) && (op1 <= 31)
    size:2.000000, time:1.000000,  executed if:(op1 <= 31),  nonconst if:(op1 changed || op0[ref offset: 384] changed) && (op1 <= 31)
  calls:

IPA function summary for FlexCAN_ClearMsgBuffIntStatusFlag/9 inlinable
  global time:     7.750000
  self size:       11
  global size:     11
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:65
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:4.000000, time:4.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 > 31),  nonconst if:(op1 changed) && (op1 > 31)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31) && (not inlined)
    size:0.500000, time:0.125000,  executed if:(op1 <= 63) && (op1 > 31)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1 <= 31)
  calls:

IPA function summary for DevAssert/0 inlinable
  global time:     5004.008492
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:72
    size:0.000000, time:0.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  executed if:(not inlined),  nonconst if:(op0 changed) && (not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:5000.008492,  executed if:(op0 == 0)
    size:1.000000, time:1.000000,  executed if:(op0 != 0) && (not inlined)
  calls:

Symbol table:

FlexCAN_SetFDEnabled/226 (FlexCAN_SetFDEnabled) @07ecac40
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 6
  References: 
  Referring: 
  Function FlexCAN_SetFDEnabled/226 is inline copy in FlexCAN_Ip_Init_Privileged/70
  Clone of FlexCAN_SetFDEnabled/6
  Availability: local
  Function flags: count:17663053 (estimated locally) body local optimize_size
  Called by: FlexCAN_InitController/53 (inlined) (17663053 (estimated locally),0.35 per call) 
  Calls: 
FlexCAN_GetEnhancedRxFIFOStatusFlag/225 (FlexCAN_GetEnhancedRxFIFOStatusFlag) @07ecae00
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 45
  References: 
  Referring: 
  Function FlexCAN_GetEnhancedRxFIFOStatusFlag/225 is inline copy in FlexCAN_IRQHandler/82
  Clone of FlexCAN_GetEnhancedRxFIFOStatusFlag/45
  Availability: local
  Function flags: count:21135808 (estimated locally) body local optimize_size
  Called by: FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 (inlined) (21135808 (estimated locally),0.10 per call) 
  Calls: 
FlexCAN_IsListenOnlyModeEnabled/224 (FlexCAN_IsListenOnlyModeEnabled) @07eaf1c0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 28
  References: 
  Referring: 
  Function FlexCAN_IsListenOnlyModeEnabled/224 is inline copy in FlexCAN_Ip_GetListenOnlyMode/121
  Clone of FlexCAN_IsListenOnlyModeEnabled/28
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetListenOnlyMode/121 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_GetMsgBuffIntStatusFlag.part.0/175 (FlexCAN_GetMsgBuffIntStatusFlag.part.0) @07ec1d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function FlexCAN_GetMsgBuffIntStatusFlag.part.0/175 is inline copy in FlexCAN_GetMsgBuffIntStatusFlag/37
  Availability: local
  Function flags: count:268435457 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: FlexCAN_GetMsgBuffIntStatusFlag/37 (inlined) (268435457 (estimated locally),0.25 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20/174 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20) @080577e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/122 (114863532 (estimated locally),0.16 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20/173 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20) @08057700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/122 (114863532 (estimated locally),0.16 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10/172 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10) @08057380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/120 (265751101 (estimated locally),0.25 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10/171 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10) @080572a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/120 (265751101 (estimated locally),0.25 per call) 
  Calls: 
FLEXCAN_ClearMsgBuffIntCmd/170 (FLEXCAN_ClearMsgBuffIntCmd) @08041c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_AbortTransfer/117 (256463234 (estimated locally),0.24 per call) FlexCAN_AbortRxTransfer/69 (8756699 (estimated locally),0.01 per call) 
  Calls: 
FlexCAN_SetErrIntCmd/169 (FlexCAN_SetErrIntCmd) @08041a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetErrorInt_Privileged/116 (43465 (estimated locally),0.03 per call) FlexCAN_Ip_SetErrorInt_Privileged/116 (43465 (estimated locally),0.03 per call) FlexCAN_Ip_SetErrorInt_Privileged/116 (214748 (estimated locally),0.15 per call) FlexCAN_Ip_SetErrorInt_Privileged/116 (214748 (estimated locally),0.15 per call) FlexCAN_Ip_SetErrorInt_Privileged/116 (214748 (estimated locally),0.15 per call) 
  Calls: 
FlexCAN_DisableInterrupts/168 (FlexCAN_DisableInterrupts) @080417e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_DisableInterrupts_Privileged/115 (445388109 (estimated locally),0.41 per call) 
  Calls: 
FlexCAN_EnableInterrupts/167 (FlexCAN_EnableInterrupts) @08041620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_EnableInterrupts_Privileged/114 (445388109 (estimated locally),0.41 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17/166 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17) @080411c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 (265751101 (estimated locally),0.25 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17/165 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17) @080410e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 (265751101 (estimated locally),0.25 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16/164 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16) @08031d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetTDCOffset_Privileged/110 (265751101 (estimated locally),0.25 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16/163 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16) @08031c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetTDCOffset_Privileged/110 (265751101 (estimated locally),0.25 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15/162 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15) @08031700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetBitrateCbt_Privileged/108 (132875550 (estimated locally),0.12 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15/161 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15) @08031620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetBitrateCbt_Privileged/108 (132875550 (estimated locally),0.12 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09/160 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09) @080311c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ClearTDCFail/105 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09/159 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09) @080310e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ClearTDCFail/105 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14/158 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14) @080228c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/103 (265751102 (estimated locally),0.25 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14/157 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14) @080227e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/103 (265751101 (estimated locally),0.25 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08/156 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08) @08022460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetRxMaskType_Privileged/102 (265751101 (estimated locally),0.25 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08/155 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08) @08022380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetRxMaskType_Privileged/102 (265751101 (estimated locally),0.25 per call) 
  Calls: 
SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07/154 (SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07) @080220e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetStartMode_Privileged/100 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07/153 (SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07) @08022000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetStartMode_Privileged/100 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_GetMaxMbNum/152 (FlexCAN_GetMaxMbNum) @080098c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_SetRegDefaultVal/48 (354334802 (estimated locally),0.33 per call) 
  Calls: 
FlexCAN_ExitFreezeMode/151 (FlexCAN_ExitFreezeMode) @080092a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetStartMode_Privileged/100 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ExitFreezeMode_Privileged/91 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_GetMsgBuffTimestamp/150 (FlexCAN_GetMsgBuffTimestamp) @07fed1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_MainFunctionWrite/97 (91268055 (estimated locally),0.08 per call) FlexCAN_IRQHandlerTxMB/63 (5812094 (estimated locally),0.03 per call) 
  Calls: 
FlexCAN_SetEnhancedRxFifoFilter/149 (FlexCAN_SetEnhancedRxFifoFilter) @07fd4b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (265751101 (estimated locally),0.25 per call) 
  Calls: 
FlexCAN_SetRxFifoFilter/148 (FlexCAN_SetRxFifoFilter) @07fd48c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRxFifo_Privileged/77 (265751101 (estimated locally),0.25 per call) 
  Calls: 
FlexCAN_Enable/147 (FlexCAN_Enable) @07fd47e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/120 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_SetRxMb15Mask_Privileged/119 (273804165 (estimated locally),0.26 per call) FlexCAN_Ip_SetRxMb14Mask_Privileged/118 (273804165 (estimated locally),0.26 per call) FlexCAN_Ip_SetErrorInt_Privileged/116 (376503 (estimated locally),0.26 per call) FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_SetTDCOffset_Privileged/110 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_SetBitrateCbt_Privileged/108 (273804165 (estimated locally),0.26 per call) FlexCAN_Ip_SetBitrate_Privileged/103 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_SetRxMaskType_Privileged/102 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/93 (273804165 (estimated locally),0.26 per call) FlexCAN_Ip_SetRxIndividualMask_Privileged/92 (115682260 (estimated locally),0.11 per call) FlexCAN_Ip_SetRxMbGlobalMask_Privileged/89 (273804165 (estimated locally),0.26 per call) FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_ConfigRxFifo_Privileged/77 (273804165 (estimated locally),0.25 per call) 
  Calls: 
FlexCAN_ReadRxFifo/146 (FlexCAN_ReadRxFifo) @07fd4540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_IRQHandlerRxFIFO/64 (54331336 (estimated locally),0.05 per call) 
  Calls: 
FlexCAN_ReadEnhancedRxFifo/145 (FlexCAN_ReadEnhancedRxFifo) @07fd4000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_IRQHandlerEnhancedRxFIFO/67 (73014444 (estimated locally),0.07 per call) 
  Calls: 
FlexCAN_IsEnhancedRxFifoAvailable/144 (FlexCAN_IsEnhancedRxFifoAvailable) @07fbc620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_DisableInterrupts_Privileged/115 (445388109 (estimated locally),0.41 per call) FlexCAN_Ip_EnableInterrupts_Privileged/114 (146978076 (estimated locally),0.14 per call) FlexCAN_Ip_MainFunctionRead/95 (217325345 (estimated locally),0.20 per call) FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_RxFifoBlocking/76 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_RxFifo/75 (1073741824 (estimated locally),1.00 per call) FlexCAN_SetRegDefaultVal/48 (354334802 (estimated locally),0.33 per call) FlexCAN_CompleteRxMessageEnhancedFifoData/55 (24094767 (estimated locally),0.02 per call) 
  Calls: 
FlexCAN_GetMsgBuff/143 (FlexCAN_GetMsgBuff) @07fbc380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_MainFunctionWrite/97 (91268055 (estimated locally),0.08 per call) FlexCAN_IRQHandlerTxMB/63 (5812094 (estimated locally),0.03 per call) FlexCAN_IRQHandlerRxMB/62 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_LockRxMsgBuff/142 (FlexCAN_LockRxMsgBuff) @07fbc2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_MainFunctionWrite/97 (91268055 (estimated locally),0.08 per call) FlexCAN_IRQHandlerTxMB/63 (5812094 (estimated locally),0.03 per call) FlexCAN_IRQHandlerRxMB/62 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
OsIf_GetElapsed/141 (OsIf_GetElapsed) @07fbc000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/122 (1014686025 (estimated locally),1.46 per call) FlexCAN_Ip_SendBlocking/88 (113847772 (estimated locally),0.33 per call) FlexCAN_Ip_SendBlocking/88 (1014686025 (estimated locally),2.92 per call) FlexCAN_Ip_ReceiveBlocking/74 (1014686025 (estimated locally),2.92 per call) FlexCAN_ProccessLegacyRxFIFO/58 (1014686025 (estimated locally),8.83 per call) FlexCAN_ProccessEnhancedRxFifo/57 (656051640 (estimated locally),0.61 per call) FlexCAN_AbortTxTransfer/68 (458548354 (estimated locally),0.43 per call) 
  Calls: 
OsIf_GetCounter/140 (OsIf_GetCounter) @07fa9ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/122 (114863532 (estimated locally),0.16 per call) FlexCAN_Ip_SendBlocking/88 (12887688 (estimated locally),0.04 per call) FlexCAN_Ip_SendBlocking/88 (114863532 (estimated locally),0.33 per call) FlexCAN_Ip_ReceiveBlocking/74 (114863534 (estimated locally),0.33 per call) FlexCAN_ProccessLegacyRxFIFO/58 (114863532 (estimated locally),1.00 per call) FlexCAN_ProccessEnhancedRxFifo/57 (74265740 (estimated locally),0.07 per call) FlexCAN_AbortTxTransfer/68 (51908159 (estimated locally),0.05 per call) 
  Calls: 
OsIf_MicrosToTicks/139 (OsIf_MicrosToTicks) @07fa9e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/122 (696142619 (estimated locally),1.00 per call) FlexCAN_Ip_SendBlocking/88 (12887688 (estimated locally),0.04 per call) FlexCAN_Ip_SendBlocking/88 (348071309 (estimated locally),1.00 per call) FlexCAN_Ip_ReceiveBlocking/74 (348071315 (estimated locally),1.00 per call) FlexCAN_ProccessLegacyRxFIFO/58 (114863532 (estimated locally),1.00 per call) FlexCAN_ProccessEnhancedRxFifo/57 (74265740 (estimated locally),0.07 per call) FlexCAN_AbortTxTransfer/68 (51908159 (estimated locally),0.05 per call) 
  Calls: 
FlexCAN_SetRxMsgBuff/138 (FlexCAN_SetRxMsgBuff) @07fa99a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRxMb/72 (686872646 (estimated locally),0.64 per call) FlexCAN_Ip_ConfigRxMb/72 (686872646 (estimated locally),0.64 per call) FlexCAN_Ip_ConfigRxMb/72 (686872646 (estimated locally),0.64 per call) 
  Calls: 
FlexCAN_SetTxMsgBuff/137 (FlexCAN_SetTxMsgBuff) @07fa9700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRemoteResponseMb/79 (686872646 (estimated locally),0.64 per call) FlexCAN_StartSendData/60 (401518840 (estimated locally),0.37 per call) 
  Calls: 
FlexCAN_GetMsgBuffRegion/136 (FlexCAN_GetMsgBuffRegion) @07fa9620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SendBlocking/88 (12887688 (estimated locally),0.04 per call) FlexCAN_Ip_ConfigRemoteResponseMb/79 (686872646 (estimated locally),0.64 per call) FlexCAN_AbortRxTransfer/69 (25372708 (estimated locally),0.02 per call) FlexCAN_AbortRxTransfer/69 (8756699 (estimated locally),0.01 per call) FlexCAN_AbortTxTransfer/68 (51908159 (estimated locally),0.05 per call) FlexCAN_StartSendData/60 (401518840 (estimated locally),0.37 per call) 
  Calls: 
FlexCAN_IsMbOutOfRange/135 (FlexCAN_IsMbOutOfRange) @07fa9540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRemoteResponseMb/79 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigRxMb/72 (1073741824 (estimated locally),1.00 per call) FlexCAN_StartSendData/60 (1073741824 (estimated locally),1.00 per call) FlexCAN_StartRxMessageBufferData/59 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_GetMbPayloadSize/134 (FlexCAN_GetMbPayloadSize) @07fa9460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRemoteResponseMb/79 (1073741824 (estimated locally),1.00 per call) FlexCAN_StartSendData/60 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_SetMsgBuffIntCmd/133 (FlexCAN_SetMsgBuffIntCmd) @07fa91c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_ConfigRemoteResponseMb/79 (226667973 (estimated locally),0.21 per call) FlexCAN_Ip_ReceiveBlocking/74 (39053601 (estimated locally),0.11 per call) FlexCAN_Ip_ReceiveBlocking/74 (57431767 (estimated locally),0.17 per call) FlexCAN_Ip_Receive/73 (177167401 (estimated locally),0.17 per call) FlexCAN_Ip_Send/71 (58465242 (estimated locally),0.05 per call) FlexCAN_IRQHandlerTxMB/63 (1576333 (estimated locally),0.01 per call) FlexCAN_IRQHandlerTxMB/63 (3835982 (estimated locally),0.02 per call) FlexCAN_ProccessLegacyRxFIFO/58 (19089400 (estimated locally),0.17 per call) FlexCAN_ProccessLegacyRxFIFO/58 (19089400 (estimated locally),0.17 per call) FlexCAN_ProccessLegacyRxFIFO/58 (19089400 (estimated locally),0.17 per call) FlexCAN_IRQHandlerRxMB/62 (90733332 (estimated locally),0.08 per call) FlexCAN_IRQHandlerRxMB/62 (177167401 (estimated locally),0.17 per call) FlexCAN_CompleteRxMessageFifoData/81 (5916683 (estimated locally),0.01 per call) FlexCAN_CompleteRxMessageFifoData/81 (5916683 (estimated locally),0.01 per call) FlexCAN_CompleteRxMessageFifoData/81 (5916683 (estimated locally),0.01 per call) FlexCAN_StartRxMessageFifoData/61 (115158811 (estimated locally),0.11 per call) FlexCAN_StartRxMessageFifoData/61 (115158811 (estimated locally),0.11 per call) FlexCAN_StartRxMessageFifoData/61 (115158811 (estimated locally),0.11 per call) 
  Calls: 
FlexCAN_EnableEnhancedRxFifo/132 (FlexCAN_EnableEnhancedRxFifo) @07f999a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitRxFifo/51 (4867054 (estimated locally),0.10 per call) 
  Calls: 
FlexCAN_EnableRxFifo/131 (FlexCAN_EnableRxFifo) @07f998c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitRxFifo/51 (5828807 (estimated locally),0.12 per call) 
  Calls: 
FlexCAN_SetMaxMsgBuffNum/130 (FlexCAN_SetMaxMsgBuffNum) @07f99620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitCtroll/52 (8831527 (estimated locally),0.18 per call) 
  Calls: 
FlexCAN_SetPayloadSize/129 (FlexCAN_SetPayloadSize) @07f99540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitCtroll/52 (8831527 (estimated locally),0.18 per call) 
  Calls: 
FlexCAN_ResetImaskBuff/128 (FlexCAN_ResetImaskBuff) @07f990e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitController/53 (17663053 (estimated locally),0.35 per call) 
  Calls: 
FlexCAN_ConfigCtrlOptions/127 (FlexCAN_ConfigCtrlOptions) @07f99000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitController/53 (17663053 (estimated locally),0.35 per call) 
  Calls: 
FlexCAN_Init/126 (FlexCAN_Init) @07f8dee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_InitController/53 (35326106 (estimated locally),0.70 per call) 
  Calls: 
FlexCAN_Disable/125 (FlexCAN_Disable) @07f8de00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/120 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_SetRxMb15Mask_Privileged/119 (273804165 (estimated locally),0.26 per call) FlexCAN_Ip_SetRxMb14Mask_Privileged/118 (273804165 (estimated locally),0.26 per call) FlexCAN_Ip_SetErrorInt_Privileged/116 (349188 (estimated locally),0.24 per call) FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_SetTDCOffset_Privileged/110 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_SetBitrateCbt_Privileged/108 (217325345 (estimated locally),0.20 per call) FlexCAN_Ip_SetBitrate_Privileged/103 (217325345 (estimated locally),0.20 per call) FlexCAN_Ip_SetRxMaskType_Privileged/102 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_SetStopMode_Privileged/101 (354334802 (estimated locally),0.33 per call) FlexCAN_Ip_Deinit_Privileged/94 (354334802 (estimated locally),0.33 per call) FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/93 (273804165 (estimated locally),0.26 per call) FlexCAN_Ip_SetRxIndividualMask_Privileged/92 (115682260 (estimated locally),0.11 per call) FlexCAN_Ip_SetRxMbGlobalMask_Privileged/89 (273804165 (estimated locally),0.26 per call) FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (273804165 (estimated locally),0.25 per call) FlexCAN_Ip_ConfigRxFifo_Privileged/77 (273804165 (estimated locally),0.25 per call) FlexCAN_InitController/53 (17663053 (estimated locally),0.35 per call) FlexCAN_InitController/53 (9756018 (estimated locally),0.19 per call) FlexCAN_InitCtroll/52 (2914404 (estimated locally),0.06 per call) FlexCAN_InitCtroll/52 (8831527 (estimated locally),0.18 per call) 
  Calls: 
FlexCAN_EnterFreezeMode/124 (FlexCAN_EnterFreezeMode) @07f8dd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_SetStopMode_Privileged/101 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_Deinit_Privileged/94 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_EnterFreezeMode_Privileged/90 (1073741824 (estimated locally),1.00 per call) FlexCAN_InitController/53 (17663053 (estimated locally),0.35 per call) FlexCAN_InitController/53 (29563692 (estimated locally),0.59 per call) FlexCAN_InitCtroll/52 (2914404 (estimated locally),0.06 per call) FlexCAN_InitCtroll/52 (8831527 (estimated locally),0.18 per call) 
  Calls: 
FlexCAN_SetOperationMode/123 (FlexCAN_SetOperationMode) @07f8da80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: FlexCAN_Ip_Init_Privileged/70 (16535624 (estimated locally),0.33 per call) 
  Calls: 
FlexCAN_Ip_ManualBusOffRecovery/122 (FlexCAN_Ip_ManualBusOffRecovery) @07f8d8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:696142619 (estimated locally) body optimize_size
  Called by: 
  Calls: OsIf_GetElapsed/141 (1014686025 (estimated locally),1.46 per call) OsIf_GetCounter/140 (114863532 (estimated locally),0.16 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20/174 (114863532 (estimated locally),0.16 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20/173 (114863532 (estimated locally),0.16 per call) DevAssert/0 (696142619 (estimated locally),1.00 per call) OsIf_MicrosToTicks/139 (696142619 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetListenOnlyMode/121 (FlexCAN_Ip_GetListenOnlyMode) @07f8d700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_IsListenOnlyModeEnabled/224 (inlined) (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetListenOnlyMode_Privileged/120 (FlexCAN_Ip_SetListenOnlyMode_Privileged) @07f8d540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.25 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10/172 (265751101 (estimated locally),0.25 per call) FlexCAN_SetListenOnlyMode/7 (inlined) (265751101 (estimated locally),0.25 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10/171 (265751101 (estimated locally),0.25 per call) FlexCAN_IsFreezeMode/40 (1073741824 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.25 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetRxMb15Mask_Privileged/119 (FlexCAN_Ip_SetRxMb15Mask_Privileged) @07f8d380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.26 per call) FlexCAN_IsFreezeMode/40 (1073741823 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.26 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetRxMb14Mask_Privileged/118 (FlexCAN_Ip_SetRxMb14Mask_Privileged) @07f8d1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.26 per call) FlexCAN_IsFreezeMode/40 (1073741823 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.26 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) 
FlexCAN_Ip_AbortTransfer/117 (FlexCAN_Ip_AbortTransfer) @07f8d000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_AbortRxTransfer/69 (inlined) (51908159 (estimated locally),0.05 per call) FlexCAN_AbortTxTransfer/68 (inlined) (51908159 (estimated locally),0.05 per call) FLEXCAN_ClearMsgBuffIntCmd/170 (256463234 (estimated locally),0.24 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetErrorInt_Privileged/116 (FlexCAN_Ip_SetErrorInt_Privileged) @07f82e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1476482 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (349188 (estimated locally),0.24 per call) FlexCAN_SetErrIntCmd/169 (43465 (estimated locally),0.03 per call) FlexCAN_IsFreezeMode/40 (214748 (estimated locally),0.15 per call) FlexCAN_SetErrIntCmd/169 (43465 (estimated locally),0.03 per call) FlexCAN_IsFreezeMode/40 (214748 (estimated locally),0.15 per call) FlexCAN_SetErrIntCmd/169 (214748 (estimated locally),0.15 per call) FlexCAN_SetErrIntCmd/169 (214748 (estimated locally),0.15 per call) FlexCAN_SetErrIntCmd/169 (214748 (estimated locally),0.15 per call) FlexCAN_Enable/147 (376503 (estimated locally),0.26 per call) DevAssert/0 (1476482 (estimated locally),1.00 per call) 
FlexCAN_Ip_DisableInterrupts_Privileged/115 (FlexCAN_Ip_DisableInterrupts_Privileged) @07f82c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_IsEnhancedRxFifoAvailable/144 (445388109 (estimated locally),0.41 per call) FlexCAN_DisableInterrupts/168 (445388109 (estimated locally),0.41 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_EnableInterrupts_Privileged/114 (FlexCAN_Ip_EnableInterrupts_Privileged) @07f82a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_IsEnhancedRxFifoAvailable/144 (146978076 (estimated locally),0.14 per call) FlexCAN_EnableInterrupts/167 (445388109 (estimated locally),0.41 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_ClearBuffStatusFlag/113 (FlexCAN_Ip_ClearBuffStatusFlag) @07f828c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/9 (524845004 (estimated locally),0.49 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetBuffStatusFlag/112 (FlexCAN_Ip_GetBuffStatusFlag) @07f82700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_GetBuffStatusFlag/10 (524845004 (estimated locally),0.49 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 (FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged) @07f82540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.25 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17/166 (265751101 (estimated locally),0.25 per call) FlexCAN_SetTxArbitrationStartDelay/41 (inlined) (265751101 (estimated locally),0.25 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17/165 (265751101 (estimated locally),0.25 per call) FlexCAN_IsFreezeMode/40 (1073741824 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.25 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetTDCOffset_Privileged/110 (FlexCAN_Ip_SetTDCOffset_Privileged) @07f82380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.25 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16/164 (265751101 (estimated locally),0.25 per call) FlexCAN_SetTDCOffset/2 (inlined) (132875551 (estimated locally),0.12 per call) FlexCAN_SetEnhancedTDCOffset/3 (inlined) (132875551 (estimated locally),0.12 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16/163 (265751101 (estimated locally),0.25 per call) FlexCAN_IsFreezeMode/40 (1073741824 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.25 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetBitrateFD/109 (FlexCAN_Ip_GetBitrateFD) @07f821c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_GetFDTimeSegments/21 (inlined) (536870913 (estimated locally),0.50 per call) FlexCAN_GetEnhancedDataTimeSegments/18 (inlined) (536870913 (estimated locally),0.50 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetBitrateCbt_Privileged/108 (FlexCAN_Ip_SetBitrateCbt_Privileged) @07f82000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (217325345 (estimated locally),0.20 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15/162 (132875550 (estimated locally),0.12 per call) FlexCAN_SetFDTimeSegments/12 (66437775 (estimated locally),0.06 per call) FlexCAN_SetEnhancedDataTimeSegments/17 (66437775 (estimated locally),0.06 per call) FlexCAN_SetFDEnabled/6 (inlined) (132875550 (estimated locally),0.12 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15/161 (132875550 (estimated locally),0.12 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.26 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetTDCValue/107 (FlexCAN_Ip_GetTDCValue) @07f78e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetTDCFail/106 (FlexCAN_Ip_GetTDCFail) @07f78c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_ClearTDCFail/105 (FlexCAN_Ip_ClearTDCFail) @07f78a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09/160 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09/159 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetBitrate/104 (FlexCAN_Ip_GetBitrate) @07f788c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_GetTimeSegments/20 (inlined) (424450143 (estimated locally),0.40 per call) FlexCAN_GetExtendedTimeSegments/19 (inlined) (294956879 (estimated locally),0.27 per call) FlexCAN_GetEnhancedNominalTimeSegments/16 (inlined) (354334802 (estimated locally),0.33 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetBitrate_Privileged/103 (FlexCAN_Ip_SetBitrate_Privileged) @07f78700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (217325345 (estimated locally),0.20 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14/158 (265751102 (estimated locally),0.25 per call) FlexCAN_SetTimeSegments/13 (125058216 (estimated locally),0.12 per call) FlexCAN_SetExtendedTimeSegments/14 (86904862 (estimated locally),0.08 per call) FlexCAN_SetEnhancedNominalTimeSegments/15 (53788023 (estimated locally),0.05 per call) FlexCAN_EnhCbtEnable/24 (inlined) (265751101 (estimated locally),0.25 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14/157 (265751101 (estimated locally),0.25 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.25 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetRxMaskType_Privileged/102 (FlexCAN_Ip_SetRxMaskType_Privileged) @07f78540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.25 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08/156 (265751101 (estimated locally),0.25 per call) FlexCAN_SetRxMaskType/42 (inlined) (265751101 (estimated locally),0.25 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08/155 (265751101 (estimated locally),0.25 per call) FlexCAN_IsFreezeMode/40 (1073741824 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.25 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetStopMode_Privileged/101 (FlexCAN_Ip_SetStopMode_Privileged) @07f78380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (354334802 (estimated locally),0.33 per call) FlexCAN_EnterFreezeMode/124 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetStartMode_Privileged/100 (FlexCAN_Ip_SetStartMode_Privileged) @07f781c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ExitFreezeMode/151 (1073741824 (estimated locally),1.00 per call) SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07/154 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07/153 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetStartMode_Privileged/99 (FlexCAN_Ip_GetStartMode_Privileged) @07f78000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_GetStopMode_Privileged/98 (FlexCAN_Ip_GetStopMode_Privileged) @07f6fe00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
FlexCAN_Ip_MainFunctionWrite/97 (FlexCAN_Ip_MainFunctionWrite) @07f6fc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/9 (91268055 (estimated locally),0.08 per call) FlexCAN_GetMsgBuffTimestamp/150 (91268055 (estimated locally),0.08 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (18472654 (estimated locally),0.02 per call) FlexCAN_GetMsgBuff/143 (91268055 (estimated locally),0.08 per call) FlexCAN_LockRxMsgBuff/142 (91268055 (estimated locally),0.08 per call) FlexCAN_GetBuffStatusFlag/10 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
   Indirect call(127775277 (estimated locally),0.12 per call) 
FlexCAN_Ip_MainFunctionBusOff_Privileged/96 (FlexCAN_Ip_MainFunctionBusOff_Privileged) @07f6fa80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
   Indirect call(375809639 (estimated locally),0.35 per call) 
FlexCAN_Ip_MainFunctionRead/95 (FlexCAN_Ip_MainFunctionRead) @07f6f8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_IRQHandlerRxMB/62 (64516662 (estimated locally),0.06 per call) FlexCAN_GetBuffStatusFlag/10 (637516427 (estimated locally),0.59 per call) FlexCAN_IRQHandlerRxFIFO/64 (36118509 (estimated locally),0.03 per call) FlexCAN_IRQHandlerEnhancedRxFIFO/67 (9997401 (estimated locally),0.01 per call) FlexCAN_IsEnhancedRxFifoAvailable/144 (217325345 (estimated locally),0.20 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) 
FlexCAN_Ip_Deinit_Privileged/94 (FlexCAN_Ip_Deinit_Privileged) @07f6f700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (354334802 (estimated locally),0.33 per call) FlexCAN_SetRegDefaultVal/48 (inlined) (354334802 (estimated locally),0.33 per call) FlexCAN_EnterFreezeMode/124 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/93 (FlexCAN_Ip_SetRxFifoGlobalMask_Privileged) @07f6f540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.26 per call) FlexCAN_IsFreezeMode/40 (1073741823 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.26 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetRxIndividualMask_Privileged/92 (FlexCAN_Ip_SetRxIndividualMask_Privileged) @07f6f380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (115682260 (estimated locally),0.11 per call) FlexCAN_IsFreezeMode/40 (453655920 (estimated locally),0.42 per call) FlexCAN_Enable/147 (115682260 (estimated locally),0.11 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) 
FlexCAN_Ip_ExitFreezeMode_Privileged/91 (FlexCAN_Ip_ExitFreezeMode_Privileged) @07f6f1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ExitFreezeMode/151 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_EnterFreezeMode_Privileged/90 (FlexCAN_Ip_EnterFreezeMode_Privileged) @07f6f000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_EnterFreezeMode/124 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_SetRxMbGlobalMask_Privileged/89 (FlexCAN_Ip_SetRxMbGlobalMask_Privileged) @07f64e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.26 per call) FlexCAN_IsFreezeMode/40 (1073741823 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.26 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) 
FlexCAN_Ip_SendBlocking/88 (FlexCAN_Ip_SendBlocking) @07f64c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:348071309 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/9 (114863532 (estimated locally),0.33 per call) FlexCAN_GetBuffStatusFlag/10 (120473832 (estimated locally),0.35 per call) OsIf_GetElapsed/141 (113847772 (estimated locally),0.33 per call) OsIf_GetCounter/140 (12887688 (estimated locally),0.04 per call) OsIf_MicrosToTicks/139 (12887688 (estimated locally),0.04 per call) FlexCAN_GetMsgBuffRegion/136 (12887688 (estimated locally),0.04 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (12887688 (estimated locally),0.04 per call) FlexCAN_GetBuffStatusFlag/10 (1073741824 (estimated locally),3.08 per call) OsIf_GetElapsed/141 (1014686025 (estimated locally),2.92 per call) OsIf_GetCounter/140 (114863532 (estimated locally),0.33 per call) FlexCAN_StartSendData/60 (348071309 (estimated locally),1.00 per call) DevAssert/0 (348071309 (estimated locally),1.00 per call) DevAssert/0 (348071309 (estimated locally),1.00 per call) OsIf_MicrosToTicks/139 (348071309 (estimated locally),1.00 per call) 
FlexCAN_Busoff_Error_IRQHandler/87 (FlexCAN_Busoff_Error_IRQHandler) @07f64a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
   Indirect call(131533373 (estimated locally),0.12 per call) 
   Indirect call(131533373 (estimated locally),0.12 per call) 
   Indirect call(131533373 (estimated locally),0.12 per call) 
   Indirect call(107857366 (estimated locally),0.10 per call) 
   Indirect call(131533373 (estimated locally),0.12 per call) 
FlexCAN_Ip_GetControllerRxErrorCounter/86 (FlexCAN_Ip_GetControllerRxErrorCounter) @07f648c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetControllerTxErrorCounter/85 (FlexCAN_Ip_GetControllerTxErrorCounter) @07f64700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_GetErrorStatus/84 (FlexCAN_Ip_GetErrorStatus) @07f64540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_ClearErrorStatus/83 (FlexCAN_Ip_ClearErrorStatus) @07f64380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_IRQHandler/82 (FlexCAN_IRQHandler) @07f641c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:214818650 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/9 (808727776 (estimated locally),3.76 per call) FlexCAN_ProcessSpuriousInterruptMB/65 (inlined) (23248379 (estimated locally),0.11 per call) FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 (inlined) (5283952 (estimated locally),0.02 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (9476241 (estimated locally),0.04 per call) FlexCAN_GetMsgBuffIntStatusFlag/37 (57431766 (estimated locally),0.27 per call) FlexCAN_IRQHandlerTxMB/63 (inlined) (11624189 (estimated locally),0.05 per call) FlexCAN_IRQHandlerRxMB/62 (10319955 (estimated locally),0.05 per call) FlexCAN_IRQHandlerRxFIFO/64 (6443844 (estimated locally),0.03 per call) FlexCAN_GetMsgBuffIntStatusFlag/37 (958878294 (estimated locally),4.46 per call) FlexCAN_GetMsgBuffIntStatusFlag/37 (114863532 (estimated locally),0.53 per call) DevAssert/0 (214818650 (estimated locally),1.00 per call) DevAssert/0 (214818650 (estimated locally),1.00 per call) 
FlexCAN_CompleteRxMessageFifoData/81 (FlexCAN_CompleteRxMessageFifoData) @07f64000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Function FlexCAN_CompleteRxMessageFifoData/81 is inline copy in FlexCAN_IRQHandlerRxFIFO/64
  Availability: local
  Function flags: count:17929341 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandlerRxFIFO/64 (inlined) (17929341 (estimated locally),0.02 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/133 (5916683 (estimated locally),0.01 per call) FlexCAN_SetMsgBuffIntCmd/133 (5916683 (estimated locally),0.01 per call) FlexCAN_SetMsgBuffIntCmd/133 (5916683 (estimated locally),0.01 per call) DevAssert/0 (17929341 (estimated locally),0.02 per call) 
FlexCAN_Ip_GetTransferStatus/80 (FlexCAN_Ip_GetTransferStatus) @07f54e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_ConfigRemoteResponseMb/79 (FlexCAN_Ip_ConfigRemoteResponseMb) @07f54c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetMsgBuffIntCmd/133 (226667973 (estimated locally),0.21 per call) FlexCAN_SetTxMsgBuff/137 (686872646 (estimated locally),0.64 per call) FlexCAN_GetMsgBuffRegion/136 (686872646 (estimated locally),0.64 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (686872646 (estimated locally),0.64 per call) FlexCAN_IsMbOutOfRange/135 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) FlexCAN_GetMbPayloadSize/134 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged) @07f54a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.25 per call) FlexCAN_SetEnhancedRxFifoFilter/149 (265751101 (estimated locally),0.25 per call) FlexCAN_IsFreezeMode/40 (1073741824 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.25 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) FlexCAN_IsEnhancedRxFifoAvailable/144 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_ConfigRxFifo_Privileged/77 (FlexCAN_Ip_ConfigRxFifo_Privileged) @07f548c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_Disable/125 (273804165 (estimated locally),0.25 per call) FlexCAN_SetRxFifoFilter/148 (265751101 (estimated locally),0.25 per call) FlexCAN_IsFreezeMode/40 (1073741824 (estimated locally),1.00 per call) FlexCAN_Enable/147 (273804165 (estimated locally),0.25 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_RxFifoBlocking/76 (FlexCAN_Ip_RxFifoBlocking) @07f54700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_ProccessLegacyRxFIFO/58 (173198851 (estimated locally),0.16 per call) FlexCAN_StartRxMessageFifoData/61 (524845004 (estimated locally),0.49 per call) FlexCAN_ProccessLegacyRxFIFO/58 (106870211 (estimated locally),0.10 per call) FlexCAN_ProccessEnhancedRxFifo/57 (inlined) (74265740 (estimated locally),0.07 per call) FlexCAN_StartRxMessageFifoData/61 (323849124 (estimated locally),0.30 per call) FlexCAN_StartRxMessageEnhancedFifoData/56 (225047696 (estimated locally),0.21 per call) FlexCAN_IsEnhancedRxFifoAvailable/144 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_RxFifo/75 (FlexCAN_Ip_RxFifo) @07f54540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_StartRxMessageFifoData/61 (524845004 (estimated locally),0.49 per call) FlexCAN_StartRxMessageFifoData/61 (323849124 (estimated locally),0.30 per call) FlexCAN_StartRxMessageEnhancedFifoData/56 (225047696 (estimated locally),0.21 per call) FlexCAN_IsEnhancedRxFifoAvailable/144 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_ReceiveBlocking/74 (FlexCAN_Ip_ReceiveBlocking) @07f54380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxState/50 (read)Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: available
  Function flags: count:348071315 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetMsgBuffIntCmd/133 (39053601 (estimated locally),0.11 per call) OsIf_GetElapsed/141 (1014686025 (estimated locally),2.92 per call) FlexCAN_IRQHandlerRxMB/62 (67772909 (estimated locally),0.19 per call) FlexCAN_GetBuffStatusFlag/10 (205372451 (estimated locally),0.59 per call) OsIf_GetCounter/140 (114863534 (estimated locally),0.33 per call) FlexCAN_SetMsgBuffIntCmd/133 (57431767 (estimated locally),0.17 per call) FlexCAN_StartRxMessageBufferData/59 (348071315 (estimated locally),1.00 per call) DevAssert/0 (348071315 (estimated locally),1.00 per call) OsIf_MicrosToTicks/139 (348071315 (estimated locally),1.00 per call) 
FlexCAN_Ip_Receive/73 (FlexCAN_Ip_Receive) @07f541c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetMsgBuffIntCmd/133 (177167401 (estimated locally),0.17 per call) FlexCAN_StartRxMessageBufferData/59 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_ConfigRxMb/72 (FlexCAN_Ip_ConfigRxMb) @07f54000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetRxMsgBuff/138 (686872646 (estimated locally),0.64 per call) FlexCAN_SetRxMsgBuff/138 (686872646 (estimated locally),0.64 per call) FlexCAN_SetRxMsgBuff/138 (686872646 (estimated locally),0.64 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (686872646 (estimated locally),0.64 per call) FlexCAN_IsMbOutOfRange/135 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_Send/71 (FlexCAN_Ip_Send) @07f46e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetMsgBuffIntCmd/133 (58465242 (estimated locally),0.05 per call) FlexCAN_StartSendData/60 (354334802 (estimated locally),0.33 per call) FlexCAN_IsListenOnlyModeEnabled/28 (inlined) (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_Ip_Init_Privileged/70 (FlexCAN_Ip_Init_Privileged) @07f46c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (write)
  Referring: 
  Availability: available
  Function flags: count:50107952 (estimated locally) body optimize_size
  Called by: 
  Calls: FlexCAN_SetOperationMode/123 (16535624 (estimated locally),0.33 per call) FlexCAN_InitBaudrate/54 (inlined) (16535624 (estimated locally),0.33 per call) FlexCAN_InitController/53 (inlined) (50107952 (estimated locally),1.00 per call) DevAssert/0 (50107952 (estimated locally),1.00 per call) DevAssert/0 (50107952 (estimated locally),1.00 per call) 
FlexCAN_AbortRxTransfer/69 (FlexCAN_AbortRxTransfer) @07f46a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Function FlexCAN_AbortRxTransfer/69 is inline copy in FlexCAN_Ip_AbortTransfer/117
  Availability: local
  Function flags: count:51908159 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_AbortTransfer/117 (inlined) (51908159 (estimated locally),0.05 per call) 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/9 (51908159 (estimated locally),0.05 per call) FlexCAN_GetMsgBuffRegion/136 (25372708 (estimated locally),0.02 per call) FLEXCAN_ClearMsgBuffIntCmd/170 (8756699 (estimated locally),0.01 per call) FlexCAN_GetMsgBuffRegion/136 (8756699 (estimated locally),0.01 per call) RxFifoOcuppiedLastMsgBuff/29 (inlined) (26535451 (estimated locally),0.02 per call) 
FlexCAN_AbortTxTransfer/68 (FlexCAN_AbortTxTransfer) @07f468c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Function FlexCAN_AbortTxTransfer/68 is inline copy in FlexCAN_Ip_AbortTransfer/117
  Availability: local
  Function flags: count:51908159 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_AbortTransfer/117 (inlined) (51908159 (estimated locally),0.05 per call) 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/9 (51908159 (estimated locally),0.05 per call) FlexCAN_GetBuffStatusFlag/10 (485236353 (estimated locally),0.45 per call) OsIf_GetElapsed/141 (458548354 (estimated locally),0.43 per call) OsIf_GetCounter/140 (51908159 (estimated locally),0.05 per call) OsIf_MicrosToTicks/139 (51908159 (estimated locally),0.05 per call) FlexCAN_GetMsgBuffRegion/136 (51908159 (estimated locally),0.05 per call) 
FlexCAN_IRQHandlerEnhancedRxFIFO/67 (FlexCAN_IRQHandlerEnhancedRxFIFO) @07f46700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_MainFunctionRead/95 (9997401 (estimated locally),0.01 per call) FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 (2301690 (estimated locally),0.01 per call) FlexCAN_ProccessEnhancedRxFifo/57 (138558107 (estimated locally),0.13 per call) 
  Calls: FlexCAN_CompleteRxMessageEnhancedFifoData/55 (inlined) (24094767 (estimated locally),0.02 per call) FlexCAN_ReadEnhancedRxFifo/145 (73014444 (estimated locally),0.07 per call) 
   Indirect call(150323855 (estimated locally),0.14 per call) 
   Indirect call(150323855 (estimated locally),0.14 per call) 
   Indirect call(150323855 (estimated locally),0.14 per call) 
   Indirect call(51110111 (estimated locally),0.05 per call) 
FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 (FlexCAN_ProcessIRQHandlerEnhancedRxFIFO) @07f46540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Function FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 is inline copy in FlexCAN_IRQHandler/82
  Availability: local
  Function flags: count:5283952 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandler/82 (inlined) (5283952 (estimated locally),0.02 per call) 
  Calls: FlexCAN_IRQHandlerEnhancedRxFIFO/67 (2301690 (estimated locally),0.01 per call) FlexCAN_GetEnhancedRxFIFOIntStatusFlag/47 (inlined) (6974817 (estimated locally),0.03 per call) FlexCAN_GetEnhancedRxFIFOStatusFlag/225 (inlined) (21135808 (estimated locally),0.10 per call) 
FlexCAN_ProcessSpuriousInterruptMB/65 (FlexCAN_ProcessSpuriousInterruptMB) @07f46380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Function FlexCAN_ProcessSpuriousInterruptMB/65 is inline copy in FlexCAN_IRQHandler/82
  Availability: local
  Function flags: count:23248379 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandler/82 (inlined) (23248379 (estimated locally),0.11 per call) 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/9 (10242073 (estimated locally),0.05 per call) FlexCAN_GetBuffStatusImask/11 (inlined) (62073171 (estimated locally),0.29 per call) FlexCAN_GetBuffStatusFlag/10 (188100519 (estimated locally),0.88 per call) 
FlexCAN_IRQHandlerRxFIFO/64 (FlexCAN_IRQHandlerRxFIFO) @07f461c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741823 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_MainFunctionRead/95 (36118509 (estimated locally),0.03 per call) FlexCAN_IRQHandler/82 (6443844 (estimated locally),0.03 per call) FlexCAN_ProccessLegacyRxFIFO/58 (160726266 (estimated locally),1.40 per call) 
  Calls: FlexCAN_ClearMsgBuffIntStatusFlag/9 (268435456 (estimated locally),0.25 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (268435456 (estimated locally),0.25 per call) FlexCAN_CompleteRxMessageFifoData/81 (inlined) (17929341 (estimated locally),0.02 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (54331336 (estimated locally),0.05 per call) FlexCAN_ReadRxFifo/146 (54331336 (estimated locally),0.05 per call) 
   Indirect call(187904819 (estimated locally),0.18 per call) 
   Indirect call(187904819 (estimated locally),0.18 per call) 
   Indirect call(38031935 (estimated locally),0.04 per call) 
FlexCAN_IRQHandlerTxMB/63 (FlexCAN_IRQHandlerTxMB) @07f46000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Function FlexCAN_IRQHandlerTxMB/63 is inline copy in FlexCAN_IRQHandler/82
  Availability: local
  Function flags: count:11624189 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandler/82 (inlined) (11624189 (estimated locally),0.05 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/133 (1576333 (estimated locally),0.01 per call) FlexCAN_SetMsgBuffIntCmd/133 (3835982 (estimated locally),0.02 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (5812094 (estimated locally),0.03 per call) FlexCAN_GetMsgBuffTimestamp/150 (5812094 (estimated locally),0.03 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (1176368 (estimated locally),0.01 per call) FlexCAN_GetMsgBuff/143 (5812094 (estimated locally),0.03 per call) FlexCAN_LockRxMsgBuff/142 (5812094 (estimated locally),0.03 per call) 
   Indirect call(8136932 (estimated locally),0.04 per call) 
FlexCAN_IRQHandlerRxMB/62 (FlexCAN_IRQHandlerRxMB) @07f34e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_MainFunctionRead/95 (64516662 (estimated locally),0.06 per call) FlexCAN_IRQHandler/82 (10319955 (estimated locally),0.05 per call) FlexCAN_Ip_ReceiveBlocking/74 (67772909 (estimated locally),0.19 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/133 (90733332 (estimated locally),0.08 per call) FlexCAN_SetMsgBuffIntCmd/133 (177167401 (estimated locally),0.17 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (1073741824 (estimated locally),1.00 per call) FlexCAN_GetMsgBuff/143 (1073741824 (estimated locally),1.00 per call) FlexCAN_LockRxMsgBuff/142 (1073741824 (estimated locally),1.00 per call) 
   Indirect call(751619278 (estimated locally),0.70 per call) 
FlexCAN_StartRxMessageFifoData/61 (FlexCAN_StartRxMessageFifoData) @07f34c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_RxFifoBlocking/76 (524845004 (estimated locally),0.49 per call) FlexCAN_Ip_RxFifoBlocking/76 (323849124 (estimated locally),0.30 per call) FlexCAN_Ip_RxFifo/75 (524845004 (estimated locally),0.49 per call) FlexCAN_Ip_RxFifo/75 (323849124 (estimated locally),0.30 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/133 (115158811 (estimated locally),0.11 per call) FlexCAN_SetMsgBuffIntCmd/133 (115158811 (estimated locally),0.11 per call) FlexCAN_SetMsgBuffIntCmd/133 (115158811 (estimated locally),0.11 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_StartSendData/60 (FlexCAN_StartSendData) @07f34a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxState/50 (read)Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SendBlocking/88 (348071309 (estimated locally),1.00 per call) FlexCAN_Ip_Send/71 (354334802 (estimated locally),0.33 per call) 
  Calls: FlexCAN_SetTxMsgBuff/137 (401518840 (estimated locally),0.37 per call) FlexCAN_GetMsgBuffRegion/136 (401518840 (estimated locally),0.37 per call) FlexCAN_ClearMsgBuffIntStatusFlag/9 (401518840 (estimated locally),0.37 per call) FlexCAN_IsMbOutOfRange/135 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) FlexCAN_GetMbPayloadSize/134 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_StartRxMessageBufferData/59 (FlexCAN_StartRxMessageBufferData) @07f348c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_ReceiveBlocking/74 (348071315 (estimated locally),1.00 per call) FlexCAN_Ip_Receive/73 (1073741824 (estimated locally),1.00 per call) 
  Calls: FlexCAN_IsMbOutOfRange/135 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_ProccessLegacyRxFIFO/58 (FlexCAN_ProccessLegacyRxFIFO) @07f34700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxState/50 (read)Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Availability: local
  Function flags: count:114863532 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_RxFifoBlocking/76 (173198851 (estimated locally),0.16 per call) FlexCAN_Ip_RxFifoBlocking/76 (106870211 (estimated locally),0.10 per call) 
  Calls: FlexCAN_SetMsgBuffIntCmd/133 (19089400 (estimated locally),0.17 per call) FlexCAN_SetMsgBuffIntCmd/133 (19089400 (estimated locally),0.17 per call) FlexCAN_SetMsgBuffIntCmd/133 (19089400 (estimated locally),0.17 per call) OsIf_GetElapsed/141 (1014686025 (estimated locally),8.83 per call) FlexCAN_IRQHandlerRxFIFO/64 (160726266 (estimated locally),1.40 per call) FlexCAN_GetBuffStatusFlag/10 (487049291 (estimated locally),4.24 per call) OsIf_GetCounter/140 (114863532 (estimated locally),1.00 per call) OsIf_MicrosToTicks/139 (114863532 (estimated locally),1.00 per call) 
FlexCAN_ProccessEnhancedRxFifo/57 (FlexCAN_ProccessEnhancedRxFifo) @07f34540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxState/50 (read)Flexcan_Ip_apxBase/49 (read)
  Referring: 
  Function FlexCAN_ProccessEnhancedRxFifo/57 is inline copy in FlexCAN_Ip_RxFifoBlocking/76
  Availability: local
  Function flags: count:74265740 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_RxFifoBlocking/76 (inlined) (74265740 (estimated locally),0.07 per call) 
  Calls: OsIf_GetElapsed/141 (656051640 (estimated locally),0.61 per call) FlexCAN_IRQHandlerEnhancedRxFIFO/67 (138558107 (estimated locally),0.13 per call) FlexCAN_GetEnhancedRxFIFOStatusFlag/45 (inlined) (419873051 (estimated locally),0.39 per call) OsIf_GetCounter/140 (74265740 (estimated locally),0.07 per call) OsIf_MicrosToTicks/139 (74265740 (estimated locally),0.07 per call) 
FlexCAN_StartRxMessageEnhancedFifoData/56 (FlexCAN_StartRxMessageEnhancedFifoData) @07f34380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_RxFifoBlocking/76 (225047696 (estimated locally),0.21 per call) FlexCAN_Ip_RxFifo/75 (225047696 (estimated locally),0.21 per call) 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_CompleteRxMessageEnhancedFifoData/55 (FlexCAN_CompleteRxMessageEnhancedFifoData) @07f341c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Flexcan_Ip_apxBase/49 (read)Flexcan_Ip_apxState/50 (read)
  Referring: 
  Function FlexCAN_CompleteRxMessageEnhancedFifoData/55 is inline copy in FlexCAN_IRQHandlerEnhancedRxFIFO/67
  Availability: local
  Function flags: count:24094767 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandlerEnhancedRxFIFO/67 (inlined) (24094767 (estimated locally),0.02 per call) 
  Calls: DevAssert/0 (24094767 (estimated locally),0.02 per call) FlexCAN_IsEnhancedRxFifoAvailable/144 (24094767 (estimated locally),0.02 per call) DevAssert/0 (24094767 (estimated locally),0.02 per call) 
FlexCAN_InitBaudrate/54 (FlexCAN_InitBaudrate) @07f34000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_InitBaudrate/54 is inline copy in FlexCAN_Ip_Init_Privileged/70
  Availability: local
  Function flags: count:16535624 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_Init_Privileged/70 (inlined) (16535624 (estimated locally),0.33 per call) 
  Calls: FlexCAN_SetTimeSegments/13 (5539434 (estimated locally),0.11 per call) FlexCAN_SetFDTimeSegments/12 (5539434 (estimated locally),0.11 per call) FlexCAN_SetExtendedTimeSegments/14 (5539434 (estimated locally),0.11 per call) FlexCAN_SetEnhancedDataTimeSegments/17 (1800729 (estimated locally),0.04 per call) FlexCAN_SetEnhancedNominalTimeSegments/15 (5456756 (estimated locally),0.11 per call) FlexCAN_EnableExtCbt/25 (inlined) (16535624 (estimated locally),0.33 per call) 
FlexCAN_InitController/53 (FlexCAN_InitController) @07f23e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_InitController/53 is inline copy in FlexCAN_Ip_Init_Privileged/70
  Availability: local
  Function flags: count:50107952 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_Init_Privileged/70 (inlined) (50107952 (estimated locally),1.00 per call) 
  Calls: FlexCAN_InitCtroll/52 (inlined) (17663053 (estimated locally),0.35 per call) FlexCAN_ResetImaskBuff/128 (17663053 (estimated locally),0.35 per call) FlexCAN_ConfigCtrlOptions/127 (17663053 (estimated locally),0.35 per call) FlexCAN_SetFDEnabled/226 (inlined) (17663053 (estimated locally),0.35 per call) FlexCAN_DisableMemErrorDetection/5 (inlined) (17663053 (estimated locally),0.35 per call) FlexCAN_Disable/125 (17663053 (estimated locally),0.35 per call) FlexCAN_EnterFreezeMode/124 (17663053 (estimated locally),0.35 per call) FlexCAN_Init/126 (35326106 (estimated locally),0.70 per call) FlexCAN_Disable/125 (9756018 (estimated locally),0.19 per call) FlexCAN_EnterFreezeMode/124 (29563692 (estimated locally),0.59 per call) 
FlexCAN_InitCtroll/52 (FlexCAN_InitCtroll) @07f23c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_InitCtroll/52 is inline copy in FlexCAN_Ip_Init_Privileged/70
  Availability: local
  Function flags: count:17663053 (estimated locally) body local optimize_size
  Called by: FlexCAN_InitController/53 (inlined) (17663053 (estimated locally),0.35 per call) 
  Calls: FlexCAN_Disable/125 (2914404 (estimated locally),0.06 per call) FlexCAN_EnterFreezeMode/124 (2914404 (estimated locally),0.06 per call) FlexCAN_SetMaxMsgBuffNum/130 (8831527 (estimated locally),0.18 per call) FlexCAN_SetPayloadSize/129 (8831527 (estimated locally),0.18 per call) FlexCAN_Disable/125 (8831527 (estimated locally),0.18 per call) FlexCAN_EnterFreezeMode/124 (8831527 (estimated locally),0.18 per call) FlexCAN_InitRxFifo/51 (inlined) (17663053 (estimated locally),0.35 per call) 
FlexCAN_InitRxFifo/51 (FlexCAN_InitRxFifo) @07f23a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_InitRxFifo/51 is inline copy in FlexCAN_Ip_Init_Privileged/70
  Availability: local
  Function flags: count:17663053 (estimated locally) body local optimize_size
  Called by: FlexCAN_InitCtroll/52 (inlined) (17663053 (estimated locally),0.35 per call) 
  Calls: FlexCAN_EnableEnhancedRxFifo/132 (4867054 (estimated locally),0.10 per call) FlexCAN_EnableRxFifo/131 (5828807 (estimated locally),0.12 per call) 
Flexcan_Ip_apxState/50 (Flexcan_Ip_apxState) @07f05870
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: FlexCAN_IRQHandlerTxMB/63 (read)FlexCAN_AbortRxTransfer/69 (read)FlexCAN_CompleteRxMessageFifoData/81 (read)FlexCAN_Ip_Init_Privileged/70 (write)FlexCAN_Ip_Send/71 (read)FlexCAN_StartRxMessageFifoData/61 (read)FlexCAN_Ip_ConfigRxMb/72 (read)FlexCAN_StartSendData/60 (read)FlexCAN_ProccessLegacyRxFIFO/58 (read)FlexCAN_StartRxMessageEnhancedFifoData/56 (read)FlexCAN_CompleteRxMessageEnhancedFifoData/55 (read)FlexCAN_IRQHandlerRxMB/62 (read)FlexCAN_AbortTxTransfer/68 (read)FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 (read)FlexCAN_ProccessEnhancedRxFifo/57 (read)FlexCAN_ProcessSpuriousInterruptMB/65 (read)FlexCAN_Ip_Receive/73 (read)FlexCAN_Ip_ReceiveBlocking/74 (read)FlexCAN_Ip_ConfigRemoteResponseMb/79 (read)FlexCAN_IRQHandlerRxFIFO/64 (read)FlexCAN_IRQHandlerEnhancedRxFIFO/67 (read)FlexCAN_Ip_DisableInterrupts_Privileged/115 (read)FlexCAN_Ip_GetTransferStatus/80 (read)FlexCAN_IRQHandler/82 (read)FlexCAN_Busoff_Error_IRQHandler/87 (read)FlexCAN_Ip_SendBlocking/88 (read)FlexCAN_Ip_Deinit_Privileged/94 (write)FlexCAN_Ip_MainFunctionRead/95 (read)FlexCAN_Ip_MainFunctionBusOff_Privileged/96 (read)FlexCAN_Ip_MainFunctionWrite/97 (read)FlexCAN_Ip_EnableInterrupts_Privileged/114 (read)FlexCAN_StartRxMessageBufferData/59 (read)FlexCAN_Ip_AbortTransfer/117 (read)
  Availability: available
  Varpool flags:
Flexcan_Ip_apxBase/49 (Flexcan_Ip_apxBase) @07f05828
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: FlexCAN_IRQHandlerTxMB/63 (read)FlexCAN_AbortRxTransfer/69 (read)FlexCAN_CompleteRxMessageFifoData/81 (read)FlexCAN_Ip_Init_Privileged/70 (read)FlexCAN_Ip_Send/71 (read)FlexCAN_StartRxMessageFifoData/61 (read)FlexCAN_Ip_ConfigRxMb/72 (read)FlexCAN_StartSendData/60 (read)FlexCAN_Ip_Receive/73 (read)FlexCAN_Ip_SetListenOnlyMode_Privileged/120 (read)FlexCAN_StartRxMessageEnhancedFifoData/56 (read)FlexCAN_Ip_ReceiveBlocking/74 (read)FlexCAN_CompleteRxMessageEnhancedFifoData/55 (read)FlexCAN_IRQHandlerRxMB/62 (read)FlexCAN_AbortTxTransfer/68 (read)FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 (read)FlexCAN_ProccessEnhancedRxFifo/57 (read)FlexCAN_ProcessSpuriousInterruptMB/65 (read)FlexCAN_Ip_RxFifo/75 (read)FlexCAN_Ip_RxFifoBlocking/76 (read)FlexCAN_Ip_ConfigRxFifo_Privileged/77 (read)FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (read)FlexCAN_IRQHandlerRxFIFO/64 (read)FlexCAN_IRQHandlerEnhancedRxFIFO/67 (read)FlexCAN_Ip_GetListenOnlyMode/121 (read)FlexCAN_Ip_ConfigRemoteResponseMb/79 (read)FlexCAN_IRQHandler/82 (read)FlexCAN_Ip_ClearErrorStatus/83 (read)FlexCAN_Ip_GetErrorStatus/84 (read)FlexCAN_Ip_GetControllerTxErrorCounter/85 (read)FlexCAN_Ip_GetControllerRxErrorCounter/86 (read)FlexCAN_Busoff_Error_IRQHandler/87 (read)FlexCAN_Ip_SendBlocking/88 (read)FlexCAN_Ip_SetRxMbGlobalMask_Privileged/89 (read)FlexCAN_Ip_EnterFreezeMode_Privileged/90 (read)FlexCAN_Ip_ExitFreezeMode_Privileged/91 (read)FlexCAN_Ip_SetRxIndividualMask_Privileged/92 (read)FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/93 (read)FlexCAN_Ip_Deinit_Privileged/94 (read)FlexCAN_Ip_MainFunctionRead/95 (read)FlexCAN_Ip_MainFunctionBusOff_Privileged/96 (read)FlexCAN_Ip_MainFunctionWrite/97 (read)FlexCAN_Ip_GetStopMode_Privileged/98 (read)FlexCAN_Ip_GetStartMode_Privileged/99 (read)FlexCAN_Ip_SetStartMode_Privileged/100 (read)FlexCAN_Ip_SetStopMode_Privileged/101 (read)FlexCAN_Ip_SetRxMaskType_Privileged/102 (read)FlexCAN_Ip_SetBitrate_Privileged/103 (read)FlexCAN_Ip_GetBitrate/104 (read)FlexCAN_Ip_ClearTDCFail/105 (read)FlexCAN_Ip_GetTDCFail/106 (read)FlexCAN_Ip_GetTDCValue/107 (read)FlexCAN_Ip_SetBitrateCbt_Privileged/108 (read)FlexCAN_Ip_GetBitrateFD/109 (read)FlexCAN_Ip_SetTDCOffset_Privileged/110 (read)FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 (read)FlexCAN_Ip_GetBuffStatusFlag/112 (read)FlexCAN_Ip_ClearBuffStatusFlag/113 (read)FlexCAN_Ip_EnableInterrupts_Privileged/114 (read)FlexCAN_Ip_DisableInterrupts_Privileged/115 (read)FlexCAN_StartRxMessageBufferData/59 (read)FlexCAN_ProccessLegacyRxFIFO/58 (read)FlexCAN_Ip_SetErrorInt_Privileged/116 (read)FlexCAN_Ip_AbortTransfer/117 (read)FlexCAN_Ip_SetRxMb14Mask_Privileged/118 (read)FlexCAN_Ip_SetRxMb15Mask_Privileged/119 (read)FlexCAN_Ip_ManualBusOffRecovery/122 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
FlexCAN_SetRegDefaultVal/48 (FlexCAN_SetRegDefaultVal) @07ef28c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_SetRegDefaultVal/48 is inline copy in FlexCAN_Ip_Deinit_Privileged/94
  Availability: local
  Function flags: count:354334802 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_Deinit_Privileged/94 (inlined) (354334802 (estimated locally),0.33 per call) 
  Calls: FlexCAN_GetMaxMbNum/152 (354334802 (estimated locally),0.33 per call) FlexCAN_IsEnhancedRxFifoAvailable/144 (354334802 (estimated locally),0.33 per call) 
FlexCAN_GetEnhancedRxFIFOIntStatusFlag/47 (FlexCAN_GetEnhancedRxFIFOIntStatusFlag) @07ef2380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_GetEnhancedRxFIFOIntStatusFlag/47 is inline copy in FlexCAN_IRQHandler/82
  Availability: local
  Function flags: count:6974817 (estimated locally) body local optimize_size
  Called by: FlexCAN_ProcessIRQHandlerEnhancedRxFIFO/66 (inlined) (6974817 (estimated locally),0.03 per call) 
  Calls: 
FlexCAN_GetEnhancedRxFIFOStatusFlag/45 (FlexCAN_GetEnhancedRxFIFOStatusFlag) @07ef2000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 225
  References: 
  Referring: 
  Function FlexCAN_GetEnhancedRxFIFOStatusFlag/45 is inline copy in FlexCAN_Ip_RxFifoBlocking/76
  Availability: local
  Function flags: count:419873051 (estimated locally) body local optimize_size
  Called by: FlexCAN_ProccessEnhancedRxFifo/57 (inlined) (419873051 (estimated locally),0.39 per call) 
  Calls: 
FlexCAN_SetRxMaskType/42 (FlexCAN_SetRxMaskType) @07ecaa80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_SetRxMaskType/42 is inline copy in FlexCAN_Ip_SetRxMaskType_Privileged/102
  Availability: local
  Function flags: count:265751101 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetRxMaskType_Privileged/102 (inlined) (265751101 (estimated locally),0.25 per call) 
  Calls: 
FlexCAN_SetTxArbitrationStartDelay/41 (FlexCAN_SetTxArbitrationStartDelay) @07eca700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_SetTxArbitrationStartDelay/41 is inline copy in FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111
  Availability: local
  Function flags: count:265751101 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 (inlined) (265751101 (estimated locally),0.25 per call) 
  Calls: 
FlexCAN_IsFreezeMode/40 (FlexCAN_IsFreezeMode) @07eca460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/120 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxMb15Mask_Privileged/119 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxMb14Mask_Privileged/118 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_SetErrorInt_Privileged/116 (214748 (estimated locally),0.15 per call) FlexCAN_Ip_SetErrorInt_Privileged/116 (214748 (estimated locally),0.15 per call) FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetTDCOffset_Privileged/110 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxMaskType_Privileged/102 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/93 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxIndividualMask_Privileged/92 (453655920 (estimated locally),0.42 per call) FlexCAN_Ip_SetRxMbGlobalMask_Privileged/89 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigRxFifo_Privileged/77 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_GetMsgBuffIntStatusFlag/37 (FlexCAN_GetMsgBuffIntStatusFlag) @07ec7ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_IRQHandler/82 (57431766 (estimated locally),0.27 per call) FlexCAN_IRQHandler/82 (958878294 (estimated locally),4.46 per call) FlexCAN_IRQHandler/82 (114863532 (estimated locally),0.53 per call) 
  Calls: FlexCAN_GetMsgBuffIntStatusFlag.part.0/175 (inlined) (268435457 (estimated locally),0.25 per call) 
RxFifoOcuppiedLastMsgBuff/29 (RxFifoOcuppiedLastMsgBuff) @07ec1a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function RxFifoOcuppiedLastMsgBuff/29 is inline copy in FlexCAN_Ip_AbortTransfer/117
  Availability: local
  Function flags: count:26535451 (estimated locally) body local optimize_size
  Called by: FlexCAN_AbortRxTransfer/69 (inlined) (26535451 (estimated locally),0.02 per call) 
  Calls: 
FlexCAN_IsListenOnlyModeEnabled/28 (FlexCAN_IsListenOnlyModeEnabled) @07ec18c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 224
  References: 
  Referring: 
  Function FlexCAN_IsListenOnlyModeEnabled/28 is inline copy in FlexCAN_Ip_Send/71
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_Send/71 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
FlexCAN_EnableExtCbt/25 (FlexCAN_EnableExtCbt) @07ec12a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_EnableExtCbt/25 is inline copy in FlexCAN_Ip_Init_Privileged/70
  Availability: local
  Function flags: count:16535624 (estimated locally) body local optimize_size
  Called by: FlexCAN_InitBaudrate/54 (inlined) (16535624 (estimated locally),0.33 per call) 
  Calls: 
FlexCAN_EnhCbtEnable/24 (FlexCAN_EnhCbtEnable) @07ec1000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_EnhCbtEnable/24 is inline copy in FlexCAN_Ip_SetBitrate_Privileged/103
  Availability: local
  Function flags: count:265751101 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/103 (inlined) (265751101 (estimated locally),0.25 per call) 
  Calls: 
FlexCAN_GetFDTimeSegments/21 (FlexCAN_GetFDTimeSegments) @07ebd9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_GetFDTimeSegments/21 is inline copy in FlexCAN_Ip_GetBitrateFD/109
  Availability: local
  Function flags: count:536870913 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBitrateFD/109 (inlined) (536870913 (estimated locally),0.50 per call) 
  Calls: 
FlexCAN_GetTimeSegments/20 (FlexCAN_GetTimeSegments) @07ebd7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_GetTimeSegments/20 is inline copy in FlexCAN_Ip_GetBitrate/104
  Availability: local
  Function flags: count:424450143 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBitrate/104 (inlined) (424450143 (estimated locally),0.40 per call) 
  Calls: 
FlexCAN_GetExtendedTimeSegments/19 (FlexCAN_GetExtendedTimeSegments) @07ebd620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_GetExtendedTimeSegments/19 is inline copy in FlexCAN_Ip_GetBitrate/104
  Availability: local
  Function flags: count:294956879 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBitrate/104 (inlined) (294956879 (estimated locally),0.27 per call) 
  Calls: 
FlexCAN_GetEnhancedDataTimeSegments/18 (FlexCAN_GetEnhancedDataTimeSegments) @07ebd460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_GetEnhancedDataTimeSegments/18 is inline copy in FlexCAN_Ip_GetBitrateFD/109
  Availability: local
  Function flags: count:536870913 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBitrateFD/109 (inlined) (536870913 (estimated locally),0.50 per call) 
  Calls: DevAssert/0 (536870913 (estimated locally),0.50 per call) 
FlexCAN_SetEnhancedDataTimeSegments/17 (FlexCAN_SetEnhancedDataTimeSegments) @07ebd2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrateCbt_Privileged/108 (66437775 (estimated locally),0.06 per call) FlexCAN_InitBaudrate/54 (1800729 (estimated locally),0.04 per call) 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_GetEnhancedNominalTimeSegments/16 (FlexCAN_GetEnhancedNominalTimeSegments) @07eb7e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_GetEnhancedNominalTimeSegments/16 is inline copy in FlexCAN_Ip_GetBitrate/104
  Availability: local
  Function flags: count:354334802 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBitrate/104 (inlined) (354334802 (estimated locally),0.33 per call) 
  Calls: 
FlexCAN_SetEnhancedNominalTimeSegments/15 (FlexCAN_SetEnhancedNominalTimeSegments) @07eb7c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/103 (53788023 (estimated locally),0.05 per call) FlexCAN_InitBaudrate/54 (5456756 (estimated locally),0.11 per call) 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_SetExtendedTimeSegments/14 (FlexCAN_SetExtendedTimeSegments) @07eb77e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/103 (86904862 (estimated locally),0.08 per call) FlexCAN_InitBaudrate/54 (5539434 (estimated locally),0.11 per call) 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_SetTimeSegments/13 (FlexCAN_SetTimeSegments) @07eb71c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrate_Privileged/103 (125058216 (estimated locally),0.12 per call) FlexCAN_InitBaudrate/54 (5539434 (estimated locally),0.11 per call) 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_SetFDTimeSegments/12 (FlexCAN_SetFDTimeSegments) @07eb2b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrateCbt_Privileged/108 (66437775 (estimated locally),0.06 per call) FlexCAN_InitBaudrate/54 (5539434 (estimated locally),0.11 per call) 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
FlexCAN_GetBuffStatusImask/11 (FlexCAN_GetBuffStatusImask) @07eb2540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_GetBuffStatusImask/11 is inline copy in FlexCAN_IRQHandler/82
  Availability: local
  Function flags: count:62073171 (estimated locally) body local optimize_size
  Called by: FlexCAN_ProcessSpuriousInterruptMB/65 (inlined) (62073171 (estimated locally),0.29 per call) 
  Calls: 
FlexCAN_GetBuffStatusFlag/10 (FlexCAN_GetBuffStatusFlag) @07eb2380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_GetBuffStatusFlag/112 (524845004 (estimated locally),0.49 per call) FlexCAN_Ip_MainFunctionWrite/97 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_MainFunctionRead/95 (637516427 (estimated locally),0.59 per call) FlexCAN_Ip_SendBlocking/88 (120473832 (estimated locally),0.35 per call) FlexCAN_Ip_SendBlocking/88 (1073741824 (estimated locally),3.08 per call) FlexCAN_Ip_ReceiveBlocking/74 (205372451 (estimated locally),0.59 per call) FlexCAN_ProccessLegacyRxFIFO/58 (487049291 (estimated locally),4.24 per call) FlexCAN_AbortTxTransfer/68 (485236353 (estimated locally),0.45 per call) FlexCAN_ProcessSpuriousInterruptMB/65 (188100519 (estimated locally),0.88 per call) 
  Calls: 
FlexCAN_ClearMsgBuffIntStatusFlag/9 (FlexCAN_ClearMsgBuffIntStatusFlag) @07eb21c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_ClearBuffStatusFlag/113 (524845004 (estimated locally),0.49 per call) FlexCAN_Ip_MainFunctionWrite/97 (91268055 (estimated locally),0.08 per call) FlexCAN_Ip_MainFunctionWrite/97 (18472654 (estimated locally),0.02 per call) FlexCAN_Ip_SendBlocking/88 (114863532 (estimated locally),0.33 per call) FlexCAN_Ip_SendBlocking/88 (12887688 (estimated locally),0.04 per call) FlexCAN_IRQHandler/82 (808727776 (estimated locally),3.76 per call) FlexCAN_IRQHandler/82 (9476241 (estimated locally),0.04 per call) FlexCAN_Ip_ConfigRemoteResponseMb/79 (686872646 (estimated locally),0.64 per call) FlexCAN_Ip_ConfigRxMb/72 (686872646 (estimated locally),0.64 per call) FlexCAN_AbortRxTransfer/69 (51908159 (estimated locally),0.05 per call) FlexCAN_IRQHandlerTxMB/63 (5812094 (estimated locally),0.03 per call) FlexCAN_IRQHandlerTxMB/63 (1176368 (estimated locally),0.01 per call) FlexCAN_IRQHandlerRxFIFO/64 (268435456 (estimated locally),0.25 per call) FlexCAN_IRQHandlerRxFIFO/64 (268435456 (estimated locally),0.25 per call) FlexCAN_IRQHandlerRxFIFO/64 (54331336 (estimated locally),0.05 per call) FlexCAN_IRQHandlerRxMB/62 (1073741824 (estimated locally),1.00 per call) FlexCAN_AbortTxTransfer/68 (51908159 (estimated locally),0.05 per call) FlexCAN_StartSendData/60 (401518840 (estimated locally),0.37 per call) FlexCAN_ProcessSpuriousInterruptMB/65 (10242073 (estimated locally),0.05 per call) 
  Calls: 
FlexCAN_SetListenOnlyMode/7 (FlexCAN_SetListenOnlyMode) @07eafe00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_SetListenOnlyMode/7 is inline copy in FlexCAN_Ip_SetListenOnlyMode_Privileged/120
  Availability: local
  Function flags: count:265751101 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetListenOnlyMode_Privileged/120 (inlined) (265751101 (estimated locally),0.25 per call) 
  Calls: 
FlexCAN_SetFDEnabled/6 (FlexCAN_SetFDEnabled) @07eafb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 226
  References: 
  Referring: 
  Function FlexCAN_SetFDEnabled/6 is inline copy in FlexCAN_Ip_SetBitrateCbt_Privileged/108
  Availability: local
  Function flags: count:132875550 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetBitrateCbt_Privileged/108 (inlined) (132875550 (estimated locally),0.12 per call) 
  Calls: 
FlexCAN_DisableMemErrorDetection/5 (FlexCAN_DisableMemErrorDetection) @07eaf7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_DisableMemErrorDetection/5 is inline copy in FlexCAN_Ip_Init_Privileged/70
  Availability: local
  Function flags: count:17663053 (estimated locally) body local optimize_size
  Called by: FlexCAN_InitController/53 (inlined) (17663053 (estimated locally),0.35 per call) 
  Calls: 
FlexCAN_SetEnhancedTDCOffset/3 (FlexCAN_SetEnhancedTDCOffset) @07eaf000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_SetEnhancedTDCOffset/3 is inline copy in FlexCAN_Ip_SetTDCOffset_Privileged/110
  Availability: local
  Function flags: count:132875551 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetTDCOffset_Privileged/110 (inlined) (132875551 (estimated locally),0.12 per call) 
  Calls: 
FlexCAN_SetTDCOffset/2 (FlexCAN_SetTDCOffset) @07ea4d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function FlexCAN_SetTDCOffset/2 is inline copy in FlexCAN_Ip_SetTDCOffset_Privileged/110
  Availability: local
  Function flags: count:132875551 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_SetTDCOffset_Privileged/110 (inlined) (132875551 (estimated locally),0.12 per call) 
  Calls: 
DevAssert/0 (DevAssert) @07e5fc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:214748 (estimated locally) body local optimize_size
  Called by: FlexCAN_Ip_ManualBusOffRecovery/122 (696142619 (estimated locally),1.00 per call) FlexCAN_Ip_SetListenOnlyMode_Privileged/120 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxMb15Mask_Privileged/119 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxMb14Mask_Privileged/118 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_AbortTransfer/117 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_AbortTransfer/117 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_SetErrorInt_Privileged/116 (1476482 (estimated locally),1.00 per call) FlexCAN_Ip_DisableInterrupts_Privileged/115 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_EnableInterrupts_Privileged/114 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ClearBuffStatusFlag/113 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetBuffStatusFlag/112 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged/111 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetTDCOffset_Privileged/110 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetBitrateFD/109 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetBitrateFD/109 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetBitrateCbt_Privileged/108 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_SetBitrateCbt_Privileged/108 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_GetTDCValue/107 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetTDCFail/106 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ClearTDCFail/105 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetBitrate/104 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetBitrate/104 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetBitrate_Privileged/103 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetBitrate_Privileged/103 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxMaskType_Privileged/102 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetStopMode_Privileged/101 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetStartMode_Privileged/100 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_MainFunctionWrite/97 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_MainFunctionBusOff_Privileged/96 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_MainFunctionRead/95 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_MainFunctionRead/95 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_Deinit_Privileged/94 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxFifoGlobalMask_Privileged/93 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxIndividualMask_Privileged/92 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_SetRxMbGlobalMask_Privileged/89 (1073741823 (estimated locally),1.00 per call) FlexCAN_Ip_SendBlocking/88 (348071309 (estimated locally),1.00 per call) FlexCAN_Ip_SendBlocking/88 (348071309 (estimated locally),1.00 per call) FlexCAN_Busoff_Error_IRQHandler/87 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetControllerRxErrorCounter/86 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetControllerTxErrorCounter/85 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetErrorStatus/84 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ClearErrorStatus/83 (1073741824 (estimated locally),1.00 per call) FlexCAN_IRQHandler/82 (214818650 (estimated locally),1.00 per call) FlexCAN_IRQHandler/82 (214818650 (estimated locally),1.00 per call) FlexCAN_Ip_GetTransferStatus/80 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_GetTransferStatus/80 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigRemoteResponseMb/79 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigRemoteResponseMb/79 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigRemoteResponseMb/79 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigRemoteResponseMb/79 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged/78 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigRxFifo_Privileged/77 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_RxFifoBlocking/76 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_RxFifo/75 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ReceiveBlocking/74 (348071315 (estimated locally),1.00 per call) FlexCAN_Ip_Receive/73 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigRxMb/72 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_ConfigRxMb/72 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_Send/71 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_Send/71 (1073741824 (estimated locally),1.00 per call) FlexCAN_Ip_Init_Privileged/70 (50107952 (estimated locally),1.00 per call) FlexCAN_Ip_Init_Privileged/70 (50107952 (estimated locally),1.00 per call) FlexCAN_CompleteRxMessageEnhancedFifoData/55 (24094767 (estimated locally),0.02 per call) FlexCAN_CompleteRxMessageEnhancedFifoData/55 (24094767 (estimated locally),0.02 per call) FlexCAN_StartSendData/60 (1073741824 (estimated locally),1.00 per call) FlexCAN_StartSendData/60 (1073741824 (estimated locally),1.00 per call) FlexCAN_StartSendData/60 (1073741824 (estimated locally),1.00 per call) FlexCAN_StartRxMessageBufferData/59 (1073741824 (estimated locally),1.00 per call) FlexCAN_CompleteRxMessageFifoData/81 (17929341 (estimated locally),0.02 per call) FlexCAN_StartRxMessageFifoData/61 (1073741824 (estimated locally),1.00 per call) FlexCAN_StartRxMessageEnhancedFifoData/56 (1073741824 (estimated locally),1.00 per call) FlexCAN_GetEnhancedDataTimeSegments/18 (536870913 (estimated locally),0.50 per call) FlexCAN_SetEnhancedDataTimeSegments/17 (1073741824 (estimated locally),1.00 per call) FlexCAN_SetEnhancedNominalTimeSegments/15 (1073741824 (estimated locally),1.00 per call) FlexCAN_SetExtendedTimeSegments/14 (1073741824 (estimated locally),1.00 per call) FlexCAN_SetTimeSegments/13 (1073741824 (estimated locally),1.00 per call) FlexCAN_SetFDTimeSegments/12 (1073741824 (estimated locally),1.00 per call) 
  Calls: 

;; Function DevAssert (DevAssert, funcdef_no=0, decl_uid=11549, cgraph_uid=1, symbol_order=0)

DevAssert (volatile boolean x)
{
  unsigned char x.0_1;

  <bb 2> [local count: 214748]:
  # DEBUG BEGIN_STMT
  x.0_1 ={v} x;
  if (x.0_1 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 107374]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("BKPT #0");
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 107374]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function FlexCAN_ClearMsgBuffIntStatusFlag (FlexCAN_ClearMsgBuffIntStatusFlag, funcdef_no=9, decl_uid=11695, cgraph_uid=10, symbol_order=9)

FlexCAN_ClearMsgBuffIntStatusFlag (struct FLEXCAN_Type * base, uint32 msgBuffIdx)
{
  uint32 flag;
  long unsigned int _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = msgBuffIdx_3(D) & 31;
  flag_4 = 1 << _1;
  # DEBUG flag => flag_4
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_3(D) <= 31)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  base_6(D)->IFLAG1 ={v} flag_4;
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_3(D) <= 63)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  base_6(D)->IFLAG2 ={v} flag_4;

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function FlexCAN_GetBuffStatusFlag (FlexCAN_GetBuffStatusFlag, funcdef_no=10, decl_uid=11700, cgraph_uid=11, symbol_order=10)

FlexCAN_GetBuffStatusFlag (const struct FLEXCAN_Type * base, uint32 msgBuffIdx)
{
  uint32 flag;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  uint8 _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG flag => 0
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_10(D) <= 31)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_12(D)->IFLAG1;
  _2 = msgBuffIdx_10(D);
  _3 = 1 << _2;
  _4 = _1 & _3;
  flag_14 = _4 >> _2;
  # DEBUG flag => flag_14
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_10(D) <= 63)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  _5 ={v} base_12(D)->IFLAG2;
  _6 = msgBuffIdx_10(D) & 31;
  _7 = 1 << _6;
  _8 = _5 & _7;
  flag_13 = _8 >> _6;
  # DEBUG flag => flag_13

  <bb 6> [local count: 1073741824]:
  # flag_9 = PHI <flag_14(3), 0(4), flag_13(5)>
  # DEBUG flag => flag_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = (uint8) flag_9;
  return _15;

}



;; Function FlexCAN_SetFDTimeSegments (FlexCAN_SetFDTimeSegments, funcdef_no=12, decl_uid=11710, cgraph_uid=13, symbol_order=12)

FlexCAN_SetFDTimeSegments (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  _Bool _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = timeSeg_25(D) != 0B;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 ={v} base_28(D)->FDCBT;
  _4 = _3 & 3221783320;
  base_28(D)->FDCBT ={v} _4;
  # DEBUG BEGIN_STMT
  _5 ={v} base_28(D)->FDCBT;
  _6 = timeSeg_25(D)->propSeg;
  _7 = _6 << 10;
  _8 = _7 & 31744;
  _9 = timeSeg_25(D)->phaseSeg2;
  _10 = _9 & 7;
  _11 = _8 | _10;
  _12 = timeSeg_25(D)->phaseSeg1;
  _13 = _12 << 5;
  _14 = _13 & 255;
  _15 = _11 | _14;
  _16 = timeSeg_25(D)->preDivider;
  _17 = _16 << 20;
  _18 = _17 & 1072693248;
  _19 = _15 | _18;
  _20 = timeSeg_25(D)->rJumpwidth;
  _21 = _20 << 16;
  _22 = _21 & 458752;
  _23 = _19 | _22;
  _24 = _5 | _23;
  base_28(D)->FDCBT ={v} _24;
  return;

}



;; Function FlexCAN_SetTimeSegments (FlexCAN_SetTimeSegments, funcdef_no=13, decl_uid=11714, cgraph_uid=14, symbol_order=13)

FlexCAN_SetTimeSegments (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  _Bool _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = timeSeg_24(D) != 0B;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 ={v} base_27(D)->CTRL1;
  _4 = _3 & 65528;
  base_27(D)->CTRL1 ={v} _4;
  # DEBUG BEGIN_STMT
  _5 ={v} base_27(D)->CTRL1;
  _6 = timeSeg_24(D)->propSeg;
  _7 = _6 & 7;
  _8 = timeSeg_24(D)->phaseSeg2;
  _9 = _8 << 16;
  _10 = _9 & 458752;
  _11 = _7 | _10;
  _12 = timeSeg_24(D)->phaseSeg1;
  _13 = _12 << 19;
  _14 = _13 & 3670016;
  _15 = _11 | _14;
  _16 = timeSeg_24(D)->preDivider;
  _17 = _16 << 24;
  _18 = _15 | _17;
  _19 = timeSeg_24(D)->rJumpwidth;
  _20 = _19 << 22;
  _21 = _20 & 12582912;
  _22 = _18 | _21;
  _23 = _5 | _22;
  base_27(D)->CTRL1 ={v} _23;
  return;

}



;; Function FlexCAN_SetExtendedTimeSegments (FlexCAN_SetExtendedTimeSegments, funcdef_no=14, decl_uid=11718, cgraph_uid=15, symbol_order=14)

FlexCAN_SetExtendedTimeSegments (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  _Bool _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = timeSeg_25(D) != 0B;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 ={v} base_28(D)->CBT;
  _4 = _3 & 2147483648;
  base_28(D)->CBT ={v} _4;
  # DEBUG BEGIN_STMT
  _5 ={v} base_28(D)->CBT;
  _6 = timeSeg_25(D)->propSeg;
  _7 = _6 << 10;
  _8 = _7 & 65535;
  _9 = timeSeg_25(D)->phaseSeg2;
  _10 = _9 & 31;
  _11 = _8 | _10;
  _12 = timeSeg_25(D)->phaseSeg1;
  _13 = _12 << 5;
  _14 = _13 & 992;
  _15 = _11 | _14;
  _16 = timeSeg_25(D)->preDivider;
  _17 = _16 << 21;
  _18 = _17 & 2145386496;
  _19 = _15 | _18;
  _20 = timeSeg_25(D)->rJumpwidth;
  _21 = _20 << 16;
  _22 = _21 & 2031616;
  _23 = _19 | _22;
  _24 = _5 | _23;
  base_28(D)->CBT ={v} _24;
  return;

}



;; Function FlexCAN_SetEnhancedNominalTimeSegments (FlexCAN_SetEnhancedNominalTimeSegments, funcdef_no=15, decl_uid=11722, cgraph_uid=16, symbol_order=15)

FlexCAN_SetEnhancedNominalTimeSegments (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  _Bool _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = timeSeg_26(D) != 0B;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 ={v} base_29(D)->ENCBT;
  _4 = _3 & 3761770240;
  base_29(D)->ENCBT ={v} _4;
  # DEBUG BEGIN_STMT
  _5 ={v} base_29(D)->ENCBT;
  _6 = timeSeg_26(D)->phaseSeg1;
  _7 = timeSeg_26(D)->propSeg;
  _8 = _6 + _7;
  _9 = _8 + 1;
  _10 = _9 & 255;
  _11 = timeSeg_26(D)->phaseSeg2;
  _12 = _11 << 12;
  _13 = _12 & 520192;
  _14 = _10 | _13;
  _15 = timeSeg_26(D)->rJumpwidth;
  _16 = _15 << 22;
  _17 = _16 & 532676608;
  _18 = _14 | _17;
  _19 = _5 | _18;
  base_29(D)->ENCBT ={v} _19;
  # DEBUG BEGIN_STMT
  _20 ={v} base_29(D)->EPRS;
  _21 = _20 & 4294966272;
  base_29(D)->EPRS ={v} _21;
  # DEBUG BEGIN_STMT
  _22 ={v} base_29(D)->EPRS;
  _23 = timeSeg_26(D)->preDivider;
  _24 = _23 & 1023;
  _25 = _22 | _24;
  base_29(D)->EPRS ={v} _25;
  return;

}



;; Function FlexCAN_SetEnhancedDataTimeSegments (FlexCAN_SetEnhancedDataTimeSegments, funcdef_no=17, decl_uid=11730, cgraph_uid=18, symbol_order=17)

FlexCAN_SetEnhancedDataTimeSegments (struct FLEXCAN_Type * base, const struct Flexcan_Ip_TimeSegmentType * timeSeg)
{
  _Bool _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = timeSeg_26(D) != 0B;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 ={v} base_29(D)->EDCBT;
  _4 = _3 & 4231991264;
  base_29(D)->EDCBT ={v} _4;
  # DEBUG BEGIN_STMT
  _5 ={v} base_29(D)->EDCBT;
  _6 = timeSeg_26(D)->phaseSeg1;
  _7 = timeSeg_26(D)->propSeg;
  _8 = _6 + _7;
  _9 = _8 & 31;
  _10 = timeSeg_26(D)->phaseSeg2;
  _11 = _10 << 12;
  _12 = _11 & 65535;
  _13 = _9 | _12;
  _14 = timeSeg_26(D)->rJumpwidth;
  _15 = _14 << 22;
  _16 = _15 & 62914560;
  _17 = _13 | _16;
  _18 = _5 | _17;
  base_29(D)->EDCBT ={v} _18;
  # DEBUG BEGIN_STMT
  _19 ={v} base_29(D)->EPRS;
  _20 = _19 & 4227923967;
  base_29(D)->EPRS ={v} _20;
  # DEBUG BEGIN_STMT
  _21 ={v} base_29(D)->EPRS;
  _22 = timeSeg_26(D)->preDivider;
  _23 = _22 << 16;
  _24 = _23 & 67043328;
  _25 = _21 | _24;
  base_29(D)->EPRS ={v} _25;
  return;

}



;; Function FlexCAN_IsFreezeMode (FlexCAN_IsFreezeMode, funcdef_no=40, decl_uid=11827, cgraph_uid=41, symbol_order=40)

FlexCAN_IsFreezeMode (const struct FLEXCAN_Type * base)
{
  long unsigned int _1;
  long unsigned int _2;
  boolean iftmp.8_3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} base_5(D)->MCR;
  _2 = _1 & 16777216;
  if (_2 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.8_3 = PHI <1(2), 0(3)>
  return iftmp.8_3;

}



;; Function FlexCAN_StartRxMessageEnhancedFifoData (FlexCAN_StartRxMessageEnhancedFifoData, funcdef_no=54, decl_uid=12308, cgraph_uid=55, symbol_order=56)

FlexCAN_StartRxMessageEnhancedFifoData (uint8 instance, struct Flexcan_Ip_MsgBuffType * data)
{
  Flexcan_Ip_StatusType eResult;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  unsigned char _3;
  <unnamed type> _4;
  <unnamed type> _5;
  unsigned char _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_10(D);
  base_12 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_12
  # DEBUG BEGIN_STMT
  state_13 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_13
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _2 = instance_10(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 ={v} state_13->enhancedFifoOutput.state;
  if (_4 == 1)
    goto <bb 8>; [21.72%]
  else
    goto <bb 3>; [78.28%]

  <bb 3> [local count: 840525101]:
  # DEBUG BEGIN_STMT
  state_13->enhancedFifoOutput.state ={v} 1;
  # DEBUG BEGIN_STMT
  state_13->enhancedFifoOutput.pMBmessage = data_16(D);
  # DEBUG BEGIN_STMT
  _5 = state_13->transferType;
  if (_5 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 4> [local count: 420262550]:
  # DEBUG BEGIN_STMT
  state_13->enhancedFifoOutput.isPolling = 0;
  # DEBUG BEGIN_STMT
  _6 = state_13->isIntActive;
  if (_6 == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 142889267]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_12
  # DEBUG enable => 1
  # DEBUG INLINE_ENTRY FlexCAN_SetEnhancedRxFifoIntAll
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base_12->ERFIER ={v} 4026531840;

  <bb 6> [local count: 840525101]:
  # DEBUG base => NULL
  # DEBUG enable => NULL
  # DEBUG BEGIN_STMT
  if (_5 == 1)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [local count: 285778534]:
  # DEBUG BEGIN_STMT
  state_13->enhancedFifoOutput.isPolling = 1;

  <bb 8> [local count: 1073741824]:
  # eResult_7 = PHI <2(2), 0(6), 0(7)>
  # DEBUG eResult => eResult_7
  # DEBUG BEGIN_STMT
  return eResult_7;

}



;; Function FlexCAN_StartRxMessageFifoData (FlexCAN_StartRxMessageFifoData, funcdef_no=59, decl_uid=12273, cgraph_uid=60, symbol_order=61)

FlexCAN_StartRxMessageFifoData (uint8 instance, struct Flexcan_Ip_MsgBuffType * data)
{
  Flexcan_Ip_StatusType eResult;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  _Bool _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  <unnamed type> _5;
  <unnamed type> _6;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG base => 0B
  # DEBUG BEGIN_STMT
  # DEBUG state => 0B
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _1 = instance_13(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) instance_13(D);
  base_16 = Flexcan_Ip_apxBase[_3];
  # DEBUG base => base_16
  # DEBUG BEGIN_STMT
  state_17 = Flexcan_Ip_apxState[_3];
  # DEBUG state => state_17
  # DEBUG BEGIN_STMT
  _4 = state_17->bIsLegacyFifoEn;
  if (_4 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _5 ={v} state_17->mbs[0].state;
  if (_5 != 0)
    goto <bb 8>; [35.00%]
  else
    goto <bb 4>; [65.00%]

  <bb 4> [local count: 348966093]:
  # DEBUG BEGIN_STMT
  state_17->mbs[0].state ={v} 1;
  # DEBUG BEGIN_STMT
  _6 = state_17->transferType;
  if (_6 == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 118648472]:
  # DEBUG BEGIN_STMT
  state_17->mbs[0].isPolling = 1;

  <bb 6> [local count: 348966093]:
  # DEBUG BEGIN_STMT
  state_17->mbs[0].pMBmessage = data_20(D);
  # DEBUG BEGIN_STMT
  if (_6 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 115158811]:
  # DEBUG BEGIN_STMT
  state_17->mbs[0].isPolling = 0;
  # DEBUG BEGIN_STMT
  _7 = state_17->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_16, instance_13(D), 6, 1, _7);
  # DEBUG BEGIN_STMT
  _8 = state_17->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_16, instance_13(D), 7, 1, _8);
  # DEBUG BEGIN_STMT
  _9 = state_17->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_16, instance_13(D), 5, 1, _9);

  <bb 8> [local count: 1073741824]:
  # eResult_10 = PHI <1(2), 2(3), 0(6), 0(7)>
  # DEBUG eResult => eResult_10
  # DEBUG BEGIN_STMT
  return eResult_10;

}



;; Function FlexCAN_StartRxMessageBufferData (FlexCAN_StartRxMessageBufferData, funcdef_no=57, decl_uid=12264, cgraph_uid=58, symbol_order=59)

FlexCAN_StartRxMessageBufferData (uint8 instance, uint8 mb_idx, struct Flexcan_Ip_MsgBuffType * data, boolean isPolling)
{
  struct Flexcan_Ip_StateType * state;
  const struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  unsigned char _3;
  unsigned char _4;
  long unsigned int _5;
  unsigned char _6;
  int _7;
  <unnamed type> _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_11(D);
  base_13 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_13
  # DEBUG BEGIN_STMT
  state_14 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_14
  # DEBUG BEGIN_STMT
  _2 = instance_11(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = state_14->bIsLegacyFifoEn;
  _5 = state_14->u32MaxMbNum;
  _6 = FlexCAN_IsMbOutOfRange (base_13, mb_idx_16(D), _4, _5);
  if (_6 == 1)
    goto <bb 5>; [21.72%]
  else
    goto <bb 3>; [78.28%]

  <bb 3> [local count: 840525101]:
  # DEBUG BEGIN_STMT
  _7 = (int) mb_idx_16(D);
  _8 ={v} state_14->mbs[_7].state;
  if (_8 != 0)
    goto <bb 5>; [35.00%]
  else
    goto <bb 4>; [65.00%]

  <bb 4> [local count: 546341316]:
  # DEBUG BEGIN_STMT
  state_14->mbs[_7].state ={v} 1;
  # DEBUG BEGIN_STMT
  state_14->mbs[_7].pMBmessage = data_19(D);
  # DEBUG BEGIN_STMT
  state_14->mbs[_7].isPolling = isPolling_21(D);

  <bb 5> [local count: 1073741824]:
  # result_9 = PHI <4(2), 2(3), 0(4)>
  # DEBUG result => result_9
  # DEBUG BEGIN_STMT
  return result_9;

}



;; Function FlexCAN_StartSendData (FlexCAN_StartSendData, funcdef_no=58, decl_uid=12270, cgraph_uid=59, symbol_order=60)

FlexCAN_StartSendData (uint8 Flexcan_Ip_u8Instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * tx_info, uint32 msg_id, const uint8 * mb_data)
{
  volatile uint32 * pMbAddr;
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_StateType * state;
  struct Flexcan_Ip_MsbuffCodeStatusType cs;
  Flexcan_Ip_StatusType eResult;
  int _1;
  _Bool _2;
  unsigned char _3;
  _Bool _4;
  unsigned char _5;
  long unsigned int _6;
  unsigned char _7;
  long unsigned int _8;
  unsigned char _9;
  _Bool _10;
  unsigned char _11;
  unsigned char _12;
  long unsigned int _13;
  unsigned char _14;
  int _15;
  <unnamed type> _16;
  unsigned char _17;
  unsigned char _18;
  long unsigned int _19;
  <unnamed type> _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) Flexcan_Ip_u8Instance_27(D);
  state_29 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_29
  # DEBUG BEGIN_STMT
  base_30 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_30
  # DEBUG BEGIN_STMT
  # DEBUG pMbAddr => 0B
  # DEBUG BEGIN_STMT
  _2 = Flexcan_Ip_u8Instance_27(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = tx_info_32(D) != 0B;
  _5 = (unsigned char) _4;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  _6 = tx_info_32(D)->data_length;
  _7 = (unsigned char) _6;
  _8 = (long unsigned int) mb_idx_34(D);
  _9 = FlexCAN_GetMbPayloadSize (base_30, _8);
  _10 = _7 <= _9;
  _11 = (unsigned char) _10;
  DevAssert (_11);
  # DEBUG BEGIN_STMT
  _12 = state_29->bIsLegacyFifoEn;
  _13 = state_29->u32MaxMbNum;
  _14 = FlexCAN_IsMbOutOfRange (base_30, mb_idx_34(D), _12, _13);
  if (_14 == 1)
    goto <bb 8>; [21.72%]
  else
    goto <bb 3>; [78.28%]

  <bb 3> [local count: 840525101]:
  # DEBUG BEGIN_STMT
  _15 = (int) mb_idx_34(D);
  _16 ={v} state_29->mbs[_15].state;
  if (_16 != 0)
    goto <bb 8>; [52.23%]
  else
    goto <bb 4>; [47.77%]

  <bb 4> [local count: 401518840]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_30, _8);
  # DEBUG BEGIN_STMT
  state_29->mbs[_15].state ={v} 2;
  # DEBUG BEGIN_STMT
  state_29->mbs[_15].time_stamp = 0;
  # DEBUG BEGIN_STMT
  _17 = tx_info_32(D)->is_polling;
  state_29->mbs[_15].isPolling = _17;
  # DEBUG BEGIN_STMT
  _18 = tx_info_32(D)->is_remote;
  state_29->mbs[_15].isRemote = _18;
  # DEBUG BEGIN_STMT
  _19 = tx_info_32(D)->data_length;
  cs.dataLen = _19;
  # DEBUG BEGIN_STMT
  _20 = tx_info_32(D)->msg_id_type;
  cs.msgIdType = _20;
  # DEBUG BEGIN_STMT
  _21 = tx_info_32(D)->fd_enable;
  cs.fd_enable = _21;
  # DEBUG BEGIN_STMT
  _22 = tx_info_32(D)->fd_padding;
  cs.fd_padding = _22;
  # DEBUG BEGIN_STMT
  _23 = tx_info_32(D)->enable_brs;
  cs.enable_brs = _23;
  # DEBUG BEGIN_STMT
  if (_18 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 200759420]:
  # DEBUG BEGIN_STMT
  cs.code = 28;
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 200759420]:
  # DEBUG BEGIN_STMT
  cs.code = 12;

  <bb 7> [local count: 401518840]:
  # DEBUG BEGIN_STMT
  pMbAddr_51 = FlexCAN_GetMsgBuffRegion (base_30, _8);
  # DEBUG pMbAddr => pMbAddr_51
  # DEBUG BEGIN_STMT
  FlexCAN_SetTxMsgBuff (pMbAddr_51, &cs, msg_id_52(D), mb_data_53(D), 0);

  <bb 8> [local count: 1073741824]:
  # eResult_24 = PHI <4(2), 2(3), 0(7)>
  # DEBUG eResult => eResult_24
  # DEBUG BEGIN_STMT
  cs ={v} {CLOBBER};
  return eResult_24;

}



;; Function FlexCAN_IRQHandlerRxMB (FlexCAN_IRQHandlerRxMB, funcdef_no=60, decl_uid=12279, cgraph_uid=61, symbol_order=62)

FlexCAN_IRQHandlerRxMB (uint8 instance, uint32 mb_idx)
{
  boolean bCurrentIntStat;
  struct Flexcan_Ip_MsgBuffType data;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  struct Flexcan_Ip_MsgBuffType * _2;
  struct Flexcan_Ip_MsgBuffType * _3;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _4;
  <unnamed type> _5;
  unsigned char _6;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;
  long unsigned int vol.6_29;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_13(D);
  base_15 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_15
  # DEBUG BEGIN_STMT
  state_16 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG bCurrentIntStat => 0
  # DEBUG BEGIN_STMT
  _2 = state_16->mbs[mb_idx_17(D)].pMBmessage;
  if (_2 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122547]:
  # DEBUG BEGIN_STMT
  state_16->mbs[mb_idx_17(D)].pMBmessage = &data;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  FlexCAN_LockRxMsgBuff (base_15, mb_idx_17(D));
  # DEBUG BEGIN_STMT
  _3 = state_16->mbs[mb_idx_17(D)].pMBmessage;
  FlexCAN_GetMsgBuff (base_15, mb_idx_17(D), _3);
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_15, mb_idx_17(D));
  # DEBUG BEGIN_STMT
  # DEBUG base => base_15
  # DEBUG INLINE_ENTRY FlexCAN_UnlockRxMsgBuff
  # DEBUG BEGIN_STMT
  vol.6_29 ={v} MEM[(const struct FLEXCAN_Type *)base_15].TIMER;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  state_16->mbs[mb_idx_17(D)].state ={v} 0;
  # DEBUG BEGIN_STMT
  bCurrentIntStat_23 = state_16->mbs[mb_idx_17(D)].isPolling;
  # DEBUG bCurrentIntStat => bCurrentIntStat_23
  # DEBUG BEGIN_STMT
  _4 = state_16->callback;
  if (_4 != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 5> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  _4 (instance_13(D), 0, mb_idx_17(D), state_16);

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _5 ={v} state_16->mbs[mb_idx_17(D)].state;
  if (_5 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 7> [local count: 536870913]:
  _6 = state_16->mbs[mb_idx_17(D)].isPolling;
  if (_6 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 8> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  state_16->mbs[mb_idx_17(D)].isPolling = 1;
  # DEBUG BEGIN_STMT
  _7 = state_16->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_15, instance_13(D), mb_idx_17(D), 0, _7);
  goto <bb 12>; [100.00%]

  <bb 9> [local count: 896574424]:
  # DEBUG BEGIN_STMT
  if (bCurrentIntStat_23 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 10> [local count: 448287212]:
  _8 = state_16->mbs[mb_idx_17(D)].isPolling;
  if (_8 == 1)
    goto <bb 11>; [20.24%]
  else
    goto <bb 12>; [79.76%]

  <bb 11> [local count: 90733332]:
  # DEBUG BEGIN_STMT
  _9 = state_16->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_15, instance_13(D), mb_idx_17(D), 0, _9);

  <bb 12> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  data ={v} {CLOBBER};
  return;

}



;; Function FlexCAN_IRQHandlerEnhancedRxFIFO (FlexCAN_IRQHandlerEnhancedRxFIFO, funcdef_no=65, decl_uid=12300, cgraph_uid=66, symbol_order=67)


Symbols to be put in SSA form
{ D.13855 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 21
Number of blocks to update: 20 ( 95%)


Removing basic block 9
Removing basic block 17
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 18 3 12 14 16 }
;; 3 succs { 4 18 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 18 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 18 }
;; 12 succs { 13 18 }
;; 13 succs { 18 }
;; 14 succs { 15 18 }
;; 15 succs { 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 1 }
FlexCAN_IRQHandlerEnhancedRxFIFO (uint8 instance, uint32 intType)
{
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_StateType * state;
  struct Flexcan_Ip_MsgBuffType data;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  <unnamed type> _2;
  struct Flexcan_Ip_MsgBuffType * _3;
  struct Flexcan_Ip_MsgBuffType * _4;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _5;
  <unnamed type> _6;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _7;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _8;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _9;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  int _37;
  _Bool _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_13(D);
  base_15 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_15
  # DEBUG BEGIN_STMT
  state_16 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  switch (intType_17(D)) <default: <L20> [20.00%], case 28: <L0> [20.00%], case 29: <L21> [20.00%], case 30: <L22> [20.00%], case 31: <L23> [20.00%]>

  <bb 3> [local count: 214748365]:
<L0>:
  # DEBUG BEGIN_STMT
  _2 ={v} state_16->enhancedFifoOutput.state;
  if (_2 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 18>; [66.00%]

  <bb 4> [local count: 73014444]:
  # DEBUG BEGIN_STMT
  _3 = state_16->enhancedFifoOutput.pMBmessage;
  if (_3 == 0B)
    goto <bb 5>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 5> [local count: 21904333]:
  # DEBUG BEGIN_STMT
  state_16->enhancedFifoOutput.pMBmessage = &data;

  <bb 6> [local count: 73014444]:
  # DEBUG BEGIN_STMT
  _4 = state_16->enhancedFifoOutput.pMBmessage;
  FlexCAN_ReadEnhancedRxFifo (base_15, _4);
  # DEBUG BEGIN_STMT
  # DEBUG base => base_15
  # DEBUG intFlag => intType_17(D)
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  _27 = 1 << intType_17(D);
  base_15->ERFSR ={v} _27;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => base_15
  # DEBUG intFlag => 29
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  base_15->ERFSR ={v} 536870912;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => base_15
  # DEBUG intFlag => 30
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  base_15->ERFSR ={v} 1073741824;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG BEGIN_STMT
  state_16->enhancedFifoOutput.state ={v} 0;
  # DEBUG BEGIN_STMT
  _5 = state_16->callback;
  if (_5 != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 7> [local count: 51110111]:
  # DEBUG BEGIN_STMT
  _5 (instance_13(D), 5, 255, state_16);

  <bb 8> [local count: 73014444]:
  # DEBUG BEGIN_STMT
  _6 ={v} state_16->enhancedFifoOutput.state;
  if (_6 == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 18>; [67.00%]

  <bb 9> [local count: 24094767]:
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_13(D)
  # DEBUG INLINE_ENTRY FlexCAN_CompleteRxMessageEnhancedFifoData
  # DEBUG BEGIN_STMT
  _37 = (int) instance_13(D);
  base_38 = Flexcan_Ip_apxBase[_37];
  # DEBUG base => base_38
  # DEBUG BEGIN_STMT
  state_39 = Flexcan_Ip_apxState[_37];
  # DEBUG state => state_39
  # DEBUG BEGIN_STMT
  _40 = instance_13(D) <= 3;
  _41 = (unsigned char) _40;
  DevAssert (_41);
  # DEBUG BEGIN_STMT
  _42 = FlexCAN_IsEnhancedRxFifoAvailable (base_38);
  DevAssert (_42);
  # DEBUG BEGIN_STMT
  _43 = state_39->enhancedFifoOutput.isPolling;
  if (_43 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 12047383]:
  # DEBUG BEGIN_STMT
  state_39->enhancedFifoOutput.isPolling = 1;
  # DEBUG BEGIN_STMT
  # DEBUG base => base_38
  # DEBUG enable => 0
  # DEBUG INLINE_ENTRY FlexCAN_SetEnhancedRxFifoIntAll
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base_38->ERFIER ={v} 0;

  <bb 11> [local count: 24094767]:
  # DEBUG base => NULL
  # DEBUG enable => NULL
  # DEBUG BEGIN_STMT
  state_39->enhancedFifoOutput.pMBmessage = 0B;
  # DEBUG BEGIN_STMT
  state_39->enhancedFifoOutput.state ={v} 0;
  goto <bb 18>; [100.00%]

  <bb 12> [local count: 214748365]:
<L21>:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_15
  # DEBUG intFlag => intType_17(D)
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  _28 = 1 << intType_17(D);
  base_15->ERFSR ={v} _28;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG BEGIN_STMT
  _7 = state_16->callback;
  if (_7 != 0B)
    goto <bb 13>; [70.00%]
  else
    goto <bb 18>; [30.00%]

  <bb 13> [local count: 150323855]:
  # DEBUG BEGIN_STMT
  _7 (instance_13(D), 6, 255, state_16);
  goto <bb 18>; [100.00%]

  <bb 14> [local count: 214748365]:
<L22>:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_15
  # DEBUG intFlag => intType_17(D)
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  _29 = 1 << intType_17(D);
  base_15->ERFSR ={v} _29;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG BEGIN_STMT
  _8 = state_16->callback;
  if (_8 != 0B)
    goto <bb 15>; [70.00%]
  else
    goto <bb 18>; [30.00%]

  <bb 15> [local count: 150323855]:
  # DEBUG BEGIN_STMT
  _8 (instance_13(D), 7, 255, state_16);
  goto <bb 18>; [100.00%]

  <bb 16> [local count: 214748365]:
<L23>:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_15
  # DEBUG intFlag => intType_17(D)
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  _30 = 1 << intType_17(D);
  base_15->ERFSR ={v} _30;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG BEGIN_STMT
  _9 = state_16->callback;
  if (_9 != 0B)
    goto <bb 17>; [70.00%]
  else
    goto <bb 18>; [30.00%]

  <bb 17> [local count: 150323855]:
  # DEBUG BEGIN_STMT
  _9 (instance_13(D), 8, 255, state_16);

  <bb 18> [local count: 1073741824]:
<L20>:
  # DEBUG instance => NULL
  # DEBUG state => NULL
  # DEBUG base => NULL
  data ={v} {CLOBBER};
  return;

}



;; Function FlexCAN_IRQHandlerRxFIFO (FlexCAN_IRQHandlerRxFIFO, funcdef_no=62, decl_uid=12285, cgraph_uid=63, symbol_order=64)


Symbols to be put in SSA form
{ D.13858 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 19
Number of blocks to update: 18 ( 95%)


Merging blocks 9 and 16
Removing basic block 15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 16 5 12 14 }
;; 5 succs { 6 16 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 16 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 16 }
;; 12 succs { 13 16 }
;; 13 succs { 16 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 1 }
FlexCAN_IRQHandlerRxFIFO (uint8 instance, uint32 mb_idx)
{
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_StateType * state;
  struct Flexcan_Ip_MsgBuffType data;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  struct Flexcan_Ip_MsgBuffType * _2;
  <unnamed type> _3;
  struct Flexcan_Ip_MsgBuffType * _4;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _5;
  <unnamed type> _6;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _7;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _8;
  int _29;
  _Bool _32;
  unsigned char _33;
  <unnamed type> _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_12(D);
  base_14 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_14
  # DEBUG BEGIN_STMT
  state_15 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = state_15->mbs[0].pMBmessage;
  if (_2 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122547]:
  # DEBUG BEGIN_STMT
  state_15->mbs[0].pMBmessage = &data;

  <bb 4> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  switch (mb_idx_17(D)) <default: <L17> [25.00%], case 5: <L2> [25.00%], case 6: <L9> [25.00%], case 7: <L12> [25.00%]>

  <bb 5> [local count: 268435456]:
<L2>:
  # DEBUG BEGIN_STMT
  _3 ={v} state_15->mbs[0].state;
  if (_3 == 1)
    goto <bb 6>; [20.24%]
  else
    goto <bb 16>; [79.76%]

  <bb 6> [local count: 54331336]:
  # DEBUG BEGIN_STMT
  _4 = state_15->mbs[0].pMBmessage;
  FlexCAN_ReadRxFifo (base_14, _4);
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_14, mb_idx_17(D));
  # DEBUG BEGIN_STMT
  state_15->mbs[0].state ={v} 0;
  # DEBUG BEGIN_STMT
  _5 = state_15->callback;
  if (_5 != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 7> [local count: 38031935]:
  # DEBUG BEGIN_STMT
  _5 (instance_12(D), 1, 0, state_15);

  <bb 8> [local count: 54331336]:
  # DEBUG BEGIN_STMT
  _6 ={v} state_15->mbs[0].state;
  if (_6 == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 9> [local count: 17929341]:
  # DEBUG BEGIN_STMT
  state_15->mbs[0].isPolling = 1;
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_12(D)
  # DEBUG INLINE_ENTRY FlexCAN_CompleteRxMessageFifoData
  # DEBUG BEGIN_STMT
  _29 = (int) instance_12(D);
  base_30 = Flexcan_Ip_apxBase[_29];
  # DEBUG base => base_30
  # DEBUG BEGIN_STMT
  state_31 = Flexcan_Ip_apxState[_29];
  # DEBUG state => state_31
  # DEBUG BEGIN_STMT
  _32 = instance_12(D) <= 3;
  _33 = (unsigned char) _32;
  DevAssert (_33);
  # DEBUG BEGIN_STMT
  _34 = state_31->transferType;
  if (_34 == 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 10> [local count: 5916683]:
  # DEBUG BEGIN_STMT
  _35 = state_31->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_30, instance_12(D), 5, 0, _35);
  # DEBUG BEGIN_STMT
  _36 = state_31->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_30, instance_12(D), 6, 0, _36);
  # DEBUG BEGIN_STMT
  _37 = state_31->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_30, instance_12(D), 7, 0, _37);

  <bb 11> [local count: 17929341]:
  # DEBUG BEGIN_STMT
  state_31->mbs[0].pMBmessage = 0B;
  # DEBUG BEGIN_STMT
  state_31->mbs[0].state ={v} 0;
  goto <bb 16>; [100.00%]

  <bb 12> [local count: 268435456]:
<L9>:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_14, mb_idx_17(D));
  # DEBUG BEGIN_STMT
  _7 = state_15->callback;
  if (_7 != 0B)
    goto <bb 13>; [70.00%]
  else
    goto <bb 16>; [30.00%]

  <bb 13> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  _7 (instance_12(D), 2, 0, state_15);
  goto <bb 16>; [100.00%]

  <bb 14> [local count: 268435456]:
<L12>:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_14, mb_idx_17(D));
  # DEBUG BEGIN_STMT
  _8 = state_15->callback;
  if (_8 != 0B)
    goto <bb 15>; [70.00%]
  else
    goto <bb 16>; [30.00%]

  <bb 15> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  _8 (instance_12(D), 3, 0, state_15);

  <bb 16> [local count: 1073741824]:
<L17>:
  # DEBUG instance => NULL
  # DEBUG state => NULL
  # DEBUG base => NULL
  data ={v} {CLOBBER};
  return;

}



;; Function FlexCAN_ProccessLegacyRxFIFO (FlexCAN_ProccessLegacyRxFIFO, funcdef_no=56, decl_uid=12276, cgraph_uid=57, symbol_order=58)

FlexCAN_ProccessLegacyRxFIFO (uint8 u8Instance, uint32 u32TimeoutMs)
{
  uint32 u32intType;
  uint32 mS2Ticks;
  uint32 timeElapsed;
  uint32 timeStart;
  struct FLEXCAN_Type * pBase;
  struct Flexcan_Ip_StateType * pState;
  Flexcan_Ip_StatusType eResult;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  <unnamed type> _4;
  unsigned char _5;
  <unnamed type> _6;
  <unnamed type> _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;
  <unnamed type> _11;
  long unsigned int _37;

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _1 = (int) u8Instance_23(D);
  pState_25 = Flexcan_Ip_apxState[_1];
  # DEBUG pState => pState_25
  # DEBUG BEGIN_STMT
  pBase_26 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_26
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  _2 = u32TimeoutMs_28(D) * 1000;
  mS2Ticks_30 = OsIf_MicrosToTicks (_2, 0);
  # DEBUG mS2Ticks => mS2Ticks_30
  # DEBUG BEGIN_STMT
  # DEBUG u32intType => 0
  # DEBUG BEGIN_STMT
  _3 = OsIf_GetCounter (0);
  timeStart = _3;
  # DEBUG BEGIN_STMT
  goto <bb 9>; [100.00%]

  <bb 3> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _4 = pState_25->transferType;
  if (_4 == 1)
    goto <bb 17>; [16.00%]
  else
    goto <bb 8>; [84.00%]

  <bb 17> [local count: 162349764]:
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 487049291]:
  # DEBUG BEGIN_STMT
  _5 = FlexCAN_GetBuffStatusFlag (pBase_26, u32intType_15);
  if (_5 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 160726266]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxFIFO (u8Instance_23(D), u32intType_15);

  <bb 6> [local count: 487049291]:
  # DEBUG BEGIN_STMT
  u32intType_35 = u32intType_15 + 4294967295;
  # DEBUG u32intType => u32intType_35

  <bb 7> [local count: 649399056]:
  # u32intType_15 = PHI <u32intType_35(6), 7(17)>
  # DEBUG u32intType => u32intType_15
  # DEBUG BEGIN_STMT
  if (u32intType_15 > 4)
    goto <bb 4>; [75.00%]
  else
    goto <bb 8>; [25.00%]

  <bb 8> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _37 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_38 = timeElapsed_14 + _37;
  # DEBUG timeElapsed => timeElapsed_38
  # DEBUG BEGIN_STMT
  if (mS2Ticks_30 <= timeElapsed_38)
    goto <bb 10>; [5.50%]
  else
    goto <bb 18>; [94.50%]

  <bb 18> [local count: 958878293]:

  <bb 9> [local count: 1073741824]:
  # timeElapsed_14 = PHI <0(2), timeElapsed_38(18)>
  # DEBUG timeElapsed => timeElapsed_14
  # DEBUG BEGIN_STMT
  _6 ={v} pState_25->mbs[0].state;
  if (_6 == 1)
    goto <bb 3>; [94.50%]
  else
    goto <bb 10>; [5.50%]

  <bb 10> [local count: 114863532]:
  # eResult_12 = PHI <3(8), 0(9)>
  # DEBUG eResult => eResult_12
  # DEBUG BEGIN_STMT
  if (eResult_12 == 3)
    goto <bb 11>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 11> [local count: 39053601]:
  _7 = pState_25->transferType;
  if (_7 != 1)
    goto <bb 12>; [48.88%]
  else
    goto <bb 13>; [51.12%]

  <bb 12> [local count: 19089400]:
  # DEBUG BEGIN_STMT
  _8 = pState_25->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_26, u8Instance_23(D), 5, 0, _8);
  # DEBUG BEGIN_STMT
  _9 = pState_25->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_26, u8Instance_23(D), 6, 0, _9);
  # DEBUG BEGIN_STMT
  _10 = pState_25->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_26, u8Instance_23(D), 7, 0, _10);

  <bb 13> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  _11 ={v} pState_25->mbs[0].state;
  switch (_11) <default: <L18> [33.33%], case 0: <L22> [33.33%], case 1: <L16> [33.33%]>

  <bb 14> [local count: 38284015]:
<L16>:
  # DEBUG BEGIN_STMT
  pState_25->mbs[0].state ={v} 0;
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 38284015]:
<L18>:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 1
  # DEBUG BEGIN_STMT

  <bb 16> [local count: 114852045]:
  # eResult_13 = PHI <eResult_12(14), 0(13), 1(15)>
<L22>:
  # DEBUG eResult => eResult_13
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  return eResult_13;

}



;; Function FlexCAN_GetMsgBuffIntStatusFlag (FlexCAN_GetMsgBuffIntStatusFlag, funcdef_no=37, decl_uid=11813, cgraph_uid=38, symbol_order=37)


Symbols to be put in SSA form
{ D.13831 D.14218 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 11
Number of blocks to update: 10 ( 91%)


Removing basic block 5
Removing basic block 8
Merging blocks 9 and 10
Merging blocks 9 and 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
FlexCAN_GetMsgBuffIntStatusFlag (const struct FLEXCAN_Type * base, uint32 msgBuffIdx)
{
  uint32 mask;
  uint8 flag;
  uint8 D.14218;
  uint32 mask;
  uint8 flag;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  unsigned char _5;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  unsigned char _20;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG flag => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_8(D) <= 31)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  mask_11 ={v} base_10(D)->IMASK1;
  # DEBUG mask => mask_11
  # DEBUG BEGIN_STMT
  _1 ={v} base_10(D)->IFLAG1;
  _2 = _1 & mask_11;
  _3 = msgBuffIdx_8(D);
  _4 = _2 >> _3;
  _5 = (unsigned char) _4;
  flag_12 = _5 & 1;
  # DEBUG flag => flag_12
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_8(D) <= 63)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 268435456]:
  # DEBUG base => base_10(D)
  # DEBUG msgBuffIdx => msgBuffIdx_8(D)
  # DEBUG INLINE_ENTRY FlexCAN_GetMsgBuffIntStatusFlag
  # DEBUG BEGIN_STMT
  mask_15 ={v} base_10(D)->IMASK2;
  # DEBUG mask => mask_15
  # DEBUG BEGIN_STMT
  _16 ={v} base_10(D)->IFLAG2;
  _17 = mask_15 & _16;
  _18 = msgBuffIdx_8(D) & 31;
  _19 = _17 >> _18;
  _20 = (unsigned char) _19;
  flag_21 = _20 & 1;
  # DEBUG flag => flag_21
  # DEBUG flag => flag_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = flag_21;
  # DEBUG base => NULL
  # DEBUG msgBuffIdx => NULL
  # DEBUG flag => NULL
  # DEBUG mask => NULL
  flag_13 = _23;

  <bb 6> [local count: 1073741824]:
  # flag_6 = PHI <flag_12(3), 0(4), flag_13(5)>
  # DEBUG flag => flag_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return flag_6;

}



;; Function FlexCAN_Ip_Init_Privileged (FlexCAN_Ip_Init_Privileged, funcdef_no=68, decl_uid=11386, cgraph_uid=69, symbol_order=70)


Symbols to be put in SSA form
{ D.13863 D.14226 D.14232 D.14240 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 51
Number of blocks to update: 50 ( 98%)


Merging blocks 2 and 9
Removing basic block 3
Removing basic block 15
Merging blocks 16 and 8
Merging blocks 20 and 34
Merging blocks 24 and 17
Merging blocks 30 and 25
Merging blocks 32 and 31
Merging blocks 38 and 33
Merging blocks 40 and 48
Merging blocks 46 and 39
Merging blocks 50 and 47
Merging blocks 30 and 18
Merging blocks 32 and 26
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;;
;; Loop 1
;;  header 34, latch 33
;;  depth 1, outer 0
;;  nodes: 34 33
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 23 }
;; 6 succs { 7 8 }
;; 7 succs { 23 }
;; 8 succs { 10 9 }
;; 9 succs { 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 36 }
;; 24 succs { 26 25 }
;; 25 succs { 26 }
;; 26 succs { 27 29 }
;; 27 succs { 28 32 }
;; 28 succs { 32 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 33 35 }
;; 35 succs { 36 }
;; 36 succs { 1 }
FlexCAN_Ip_Init_Privileged (uint8 Flexcan_Ip_u8Instance, struct Flexcan_Ip_StateType * Flexcan_Ip_pState, const struct Flexcan_Ip_ConfigType * Flexcan_Ip_pData)
{
  Flexcan_Ip_StatusType eResult;
  Flexcan_Ip_StatusType D.14240;
  Flexcan_Ip_StatusType eResult;
  Flexcan_Ip_StatusType D.14232;
  Flexcan_Ip_StatusType eResult;
  Flexcan_Ip_StatusType D.14226;
  uint32 i;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType eResult;
  int _1;
  _Bool _2;
  unsigned char _3;
  _Bool _4;
  unsigned char _5;
  <unnamed type> _6;
  <unnamed type> _7;
  void (*<Tb98>) (uint8, Flexcan_Ip_EventType, uint32, const struct Flexcan_Ip_StateType *) _8;
  void (*<Tb98>) (uint8, Flexcan_Ip_EventType, uint32, const struct Flexcan_Ip_StateType *) _9;
  unsigned char _10;
  unsigned char _11;
  long unsigned int _12;
  long unsigned int _44;
  signed int _45;
  long unsigned int _49;
  long unsigned int _50;
  unsigned char _52;
  unsigned char _53;
  long unsigned int _54;
  <unnamed type> _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  const struct Flexcan_Ip_PayloadSizeType * _62;
  long unsigned int _63;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int iftmp.1_68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int iftmp.2_72;
  long unsigned int _73;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _81;
  unsigned char _82;
  <unnamed type> _83;
  unsigned char _85;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _88;
  unsigned char _92;
  unsigned char _93;
  long unsigned int _94;
  long unsigned int _95;
  const struct Flexcan_Ip_TimeSegmentType * _96;
  unsigned char _97;
  const struct Flexcan_Ip_TimeSegmentType * _98;
  long unsigned int _99;
  long unsigned int _100;
  unsigned char _101;
  const struct Flexcan_Ip_TimeSegmentType * _102;
  const struct Flexcan_Ip_TimeSegmentType * _103;
  const struct Flexcan_Ip_TimeSegmentType * _104;
  long unsigned int _105;
  long unsigned int _106;
  long unsigned int iftmp.4_107;
  long unsigned int _108;

  <bb 2> [local count: 50107952]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _1 = (int) Flexcan_Ip_u8Instance_16(D);
  pBase_18 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_18
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Flexcan_Ip_u8Instance_16(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = Flexcan_Ip_pData_20(D) != 0B;
  _5 = (unsigned char) _4;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  # DEBUG Instance => Flexcan_Ip_u8Instance_16(D)
  # DEBUG pBase => pBase_18
  # DEBUG Flexcan_Ip_pData => Flexcan_Ip_pData_20(D)
  # DEBUG INLINE_ENTRY FlexCAN_InitController
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_18
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _44 ={v} MEM[(const struct FLEXCAN_Type *)pBase_18].MCR;
  _45 = (signed int) _44;
  # DEBUG pBase => NULL
  if (_45 >= 0)
    goto <bb 3>; [59.00%]
  else
    goto <bb 6>; [41.00%]

  <bb 3> [local count: 29563691]:
  # DEBUG BEGIN_STMT
  eResult_46 = FlexCAN_EnterFreezeMode (pBase_18);
  # DEBUG eResult => eResult_46
  # DEBUG BEGIN_STMT
  if (eResult_46 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 9756018]:
  # DEBUG BEGIN_STMT
  eResult_47 = FlexCAN_Disable (pBase_18);
  # DEBUG eResult => eResult_47

  <bb 5> [local count: 29563691]:
  # eResult_48 = PHI <eResult_46(3), eResult_47(4)>
  # DEBUG eResult => eResult_48
  # DEBUG BEGIN_STMT
  if (eResult_48 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 6> [local count: 35326106]:
  # DEBUG eResult => NULL
  # DEBUG BEGIN_STMT
  _49 ={v} pBase_18->MCR;
  _50 = _49 & 2147483647;
  pBase_18->MCR ={v} _50;
  # DEBUG BEGIN_STMT
  eResult_51 = FlexCAN_Init (pBase_18);
  # DEBUG eResult => eResult_51
  # DEBUG BEGIN_STMT
  if (eResult_51 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 17663053]:
  # DEBUG BEGIN_STMT
  FlexCAN_EnterFreezeMode (pBase_18);
  # DEBUG BEGIN_STMT
  FlexCAN_Disable (pBase_18);
  goto <bb 23>; [100.00%]

  <bb 8> [local count: 17663053]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_18
  # DEBUG INLINE_ENTRY FlexCAN_DisableMemErrorDetection
  # DEBUG BEGIN_STMT
  _76 ={v} pBase_18->CTRL2;
  _77 = _76 | 536870912;
  pBase_18->CTRL2 ={v} _77;
  # DEBUG BEGIN_STMT
  pBase_18->MECR ={v} 0;
  # DEBUG BEGIN_STMT
  pBase_18->MECR ={v} 0;
  # DEBUG BEGIN_STMT
  _78 ={v} pBase_18->MECR;
  _79 = _78 | 256;
  pBase_18->MECR ={v} _79;
  # DEBUG BEGIN_STMT
  _80 ={v} pBase_18->CTRL2;
  _81 = _80 & 3758096383;
  pBase_18->CTRL2 ={v} _81;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  _52 = Flexcan_Ip_pData_20(D)->fd_enable;
  _53 = Flexcan_Ip_pData_20(D)->bitRateSwitch;
  # DEBUG base => pBase_18
  # DEBUG enableFD => _52
  # DEBUG enableBRS => _53
  # DEBUG INLINE_ENTRY FlexCAN_SetFDEnabled
  # DEBUG BEGIN_STMT
  _66 ={v} pBase_18->MCR;
  _67 = _66 & 4294965247;
  if (_52 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 8831526]:

  <bb 10> [local count: 17663053]:
  # iftmp.1_68 = PHI <2048(8), 0(9)>
  _69 = _67 | iftmp.1_68;
  pBase_18->MCR ={v} _69;
  # DEBUG BEGIN_STMT
  _70 ={v} pBase_18->FDCTRL;
  _71 = _70 & 2147483647;
  if (_53 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 8831526]:

  <bb 12> [local count: 17663053]:
  # iftmp.2_72 = PHI <2147483648(10), 0(11)>
  _73 = _71 | iftmp.2_72;
  pBase_18->FDCTRL ={v} _73;
  # DEBUG BEGIN_STMT
  _74 ={v} pBase_18->FDCTRL;
  _75 = _74 & 4294926591;
  pBase_18->FDCTRL ={v} _75;
  # DEBUG base => NULL
  # DEBUG enableFD => NULL
  # DEBUG enableBRS => NULL
  # DEBUG BEGIN_STMT
  _54 = Flexcan_Ip_pData_20(D)->ctrlOptions;
  FlexCAN_ConfigCtrlOptions (pBase_18, _54);
  # DEBUG BEGIN_STMT
  FlexCAN_ResetImaskBuff (Flexcan_Ip_u8Instance_16(D));
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_18
  # DEBUG Flexcan_Ip_pData => Flexcan_Ip_pData_20(D)
  # DEBUG INLINE_ENTRY FlexCAN_InitCtroll
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _57 = Flexcan_Ip_pData_20(D)->flexcanMode;
  if (_57 != 2)
    goto <bb 13>; [66.00%]
  else
    goto <bb 14>; [34.00%]

  <bb 13> [local count: 11657615]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_18
  # DEBUG enable => 0
  # DEBUG INLINE_ENTRY FlexCAN_SetSelfReception
  # DEBUG BEGIN_STMT
  _58 ={v} pBase_18->MCR;
  _59 = _58 & 4294836223;
  _60 = _59 | 131072;
  pBase_18->MCR ={v} _60;

  <bb 14> [local count: 17663053]:
  # DEBUG base => NULL
  # DEBUG enable => NULL
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_18
  # DEBUG Flexcan_Ip_pData => Flexcan_Ip_pData_20(D)
  # DEBUG INLINE_ENTRY FlexCAN_InitRxFifo
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _82 = Flexcan_Ip_pData_20(D)->is_rx_fifo_needed;
  if (_82 != 0)
    goto <bb 15>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 15> [local count: 5828807]:
  # DEBUG BEGIN_STMT
  _83 = Flexcan_Ip_pData_20(D)->num_id_filters;
  eResult_84 = FlexCAN_EnableRxFifo (pBase_18, _83);
  # DEBUG eResult => eResult_84
  # DEBUG BEGIN_STMT
  if (eResult_84 == 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 16> [local count: 14748649]:
  # eResult_91 = PHI <0(14), eResult_84(15)>
  # DEBUG eResult => NULL
  _85 = Flexcan_Ip_pData_20(D)->is_enhanced_rx_fifo_needed;
  if (_85 != 0)
    goto <bb 17>; [33.00%]
  else
    goto <bb 18>; [67.00%]

  <bb 17> [local count: 4867054]:
  # DEBUG BEGIN_STMT
  _86 = Flexcan_Ip_pData_20(D)->num_enhanced_std_id_filters;
  _87 = Flexcan_Ip_pData_20(D)->num_enhanced_ext_id_filters;
  _88 = Flexcan_Ip_pData_20(D)->num_enhanced_watermark;
  eResult_89 = FlexCAN_EnableEnhancedRxFifo (pBase_18, _86, _87, _88);
  # DEBUG eResult => eResult_89

  <bb 18> [local count: 17663053]:
  # eResult_90 = PHI <eResult_84(15), eResult_91(16), eResult_89(17)>
  # DEBUG eResult => eResult_90
  # DEBUG BEGIN_STMT
  _134 = eResult_90;
  # DEBUG pBase => NULL
  # DEBUG Flexcan_Ip_pData => NULL
  # DEBUG eResult => NULL
  eResult_61 = _134;
  # DEBUG eResult => eResult_61
  # DEBUG BEGIN_STMT
  if (eResult_61 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 19> [local count: 8831526]:
  # DEBUG BEGIN_STMT
  FlexCAN_EnterFreezeMode (pBase_18);
  # DEBUG BEGIN_STMT
  FlexCAN_Disable (pBase_18);
  goto <bb 22>; [100.00%]

  <bb 20> [local count: 8831526]:
  # DEBUG BEGIN_STMT
  _62 = &Flexcan_Ip_pData_20(D)->payload;
  FlexCAN_SetPayloadSize (pBase_18, _62);
  # DEBUG BEGIN_STMT
  _63 = Flexcan_Ip_pData_20(D)->max_num_mb;
  eResult_64 = FlexCAN_SetMaxMsgBuffNum (pBase_18, _63);
  # DEBUG eResult => eResult_64
  # DEBUG BEGIN_STMT
  if (eResult_64 != 0)
    goto <bb 21>; [33.00%]
  else
    goto <bb 22>; [67.00%]

  <bb 21> [local count: 2914404]:
  # DEBUG BEGIN_STMT
  FlexCAN_EnterFreezeMode (pBase_18);
  # DEBUG BEGIN_STMT
  FlexCAN_Disable (pBase_18);

  <bb 22> [local count: 17663053]:
  # eResult_65 = PHI <eResult_61(19), eResult_64(20), eResult_64(21)>
  # DEBUG eResult => eResult_65
  # DEBUG BEGIN_STMT
  _141 = eResult_65;
  # DEBUG pBase => NULL
  # DEBUG Flexcan_Ip_pData => NULL
  # DEBUG eResult => NULL
  eResult_55 = _141;
  # DEBUG eResult => eResult_55

  <bb 23> [local count: 50107952]:
  # eResult_56 = PHI <eResult_48(5), eResult_51(7), eResult_55(22)>
  # DEBUG eResult => eResult_56
  # DEBUG BEGIN_STMT
  _144 = eResult_56;
  # DEBUG Instance => NULL
  # DEBUG pBase => NULL
  # DEBUG Flexcan_Ip_pData => NULL
  # DEBUG eResult => NULL
  eResult_23 = _144;
  # DEBUG eResult => eResult_23
  # DEBUG BEGIN_STMT
  if (eResult_23 == 0)
    goto <bb 24>; [33.00%]
  else
    goto <bb 36>; [67.00%]

  <bb 24> [local count: 16535624]:
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_18
  # DEBUG Flexcan_Ip_pData => Flexcan_Ip_pData_20(D)
  # DEBUG INLINE_ENTRY FlexCAN_InitBaudrate
  # DEBUG BEGIN_STMT
  _92 = Flexcan_Ip_pData_20(D)->fd_enable;
  # DEBUG base => pBase_18
  # DEBUG enableCBT => _92
  # DEBUG INLINE_ENTRY FlexCAN_EnableExtCbt
  # DEBUG BEGIN_STMT
  _105 ={v} pBase_18->CBT;
  _106 = _105 & 2147483647;
  if (_92 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 25> [local count: 8267812]:

  <bb 26> [local count: 16535624]:
  # iftmp.4_107 = PHI <2147483648(24), 0(25)>
  _108 = _106 | iftmp.4_107;
  pBase_18->CBT ={v} _108;
  # DEBUG base => NULL
  # DEBUG enableCBT => NULL
  # DEBUG BEGIN_STMT
  _93 = Flexcan_Ip_pData_20(D)->enhCbtEnable;
  if (_93 != 0)
    goto <bb 27>; [33.00%]
  else
    goto <bb 29>; [67.00%]

  <bb 27> [local count: 5456756]:
  # DEBUG BEGIN_STMT
  _94 ={v} pBase_18->CTRL2;
  _95 = _94 | 8192;
  pBase_18->CTRL2 ={v} _95;
  # DEBUG BEGIN_STMT
  _96 = &Flexcan_Ip_pData_20(D)->bitrate;
  FlexCAN_SetEnhancedNominalTimeSegments (pBase_18, _96);
  # DEBUG BEGIN_STMT
  _97 = Flexcan_Ip_pData_20(D)->fd_enable;
  if (_97 != 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 32>; [67.00%]

  <bb 28> [local count: 1800729]:
  # DEBUG BEGIN_STMT
  _98 = &Flexcan_Ip_pData_20(D)->bitrate_cbt;
  FlexCAN_SetEnhancedDataTimeSegments (pBase_18, _98);
  goto <bb 32>; [100.00%]

  <bb 29> [local count: 11078868]:
  # DEBUG BEGIN_STMT
  _99 ={v} pBase_18->CTRL2;
  _100 = _99 & 4294959103;
  pBase_18->CTRL2 ={v} _100;
  # DEBUG BEGIN_STMT
  _101 = Flexcan_Ip_pData_20(D)->fd_enable;
  if (_101 != 0)
    goto <bb 30>; [50.00%]
  else
    goto <bb 31>; [50.00%]

  <bb 30> [local count: 5539434]:
  # DEBUG BEGIN_STMT
  _102 = &Flexcan_Ip_pData_20(D)->bitrate;
  FlexCAN_SetExtendedTimeSegments (pBase_18, _102);
  # DEBUG BEGIN_STMT
  _103 = &Flexcan_Ip_pData_20(D)->bitrate_cbt;
  FlexCAN_SetFDTimeSegments (pBase_18, _103);
  goto <bb 32>; [100.00%]

  <bb 31> [local count: 5539434]:
  # DEBUG BEGIN_STMT
  _104 = &Flexcan_Ip_pData_20(D)->bitrate;
  FlexCAN_SetTimeSegments (pBase_18, _104);

  <bb 32> [local count: 16535624]:
  # DEBUG pBase => NULL
  # DEBUG Flexcan_Ip_pData => NULL
  # DEBUG BEGIN_STMT
  _6 = Flexcan_Ip_pData_20(D)->flexcanMode;
  FlexCAN_SetOperationMode (pBase_18, _6);
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 34>; [100.00%]

  <bb 33> [local count: 1057206200]:
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_26(D)->mbs[i_13].isPolling = 1;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_26(D)->mbs[i_13].pMBmessage = 0B;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_26(D)->mbs[i_13].state ={v} 0;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_26(D)->mbs[i_13].time_stamp = 0;
  # DEBUG BEGIN_STMT
  i_43 = i_13 + 1;
  # DEBUG i => i_43

  <bb 34> [local count: 1073741824]:
  # i_13 = PHI <0(32), i_43(33)>
  # DEBUG i => i_13
  # DEBUG BEGIN_STMT
  if (i_13 != 64)
    goto <bb 33>; [98.46%]
  else
    goto <bb 35>; [1.54%]

  <bb 35> [local count: 16535624]:
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_26(D)->enhancedFifoOutput.isPolling = 1;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_26(D)->enhancedFifoOutput.state ={v} 0;
  # DEBUG BEGIN_STMT
  _7 = Flexcan_Ip_pData_20(D)->transfer_type;
  Flexcan_Ip_pState_26(D)->transferType = _7;
  # DEBUG BEGIN_STMT
  _8 = Flexcan_Ip_pData_20(D)->Callback;
  Flexcan_Ip_pState_26(D)->callback = _8;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_26(D)->callbackParam = 0B;
  # DEBUG BEGIN_STMT
  _9 = Flexcan_Ip_pData_20(D)->ErrorCallback;
  Flexcan_Ip_pState_26(D)->error_callback = _9;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_26(D)->errorCallbackParam = 0B;
  # DEBUG BEGIN_STMT
  _10 = Flexcan_Ip_pData_20(D)->is_rx_fifo_needed;
  Flexcan_Ip_pState_26(D)->bIsLegacyFifoEn = _10;
  # DEBUG BEGIN_STMT
  _11 = Flexcan_Ip_pData_20(D)->is_enhanced_rx_fifo_needed;
  Flexcan_Ip_pState_26(D)->bIsEnhancedFifoEn = _11;
  # DEBUG BEGIN_STMT
  _12 = Flexcan_Ip_pData_20(D)->max_num_mb;
  Flexcan_Ip_pState_26(D)->u32MaxMbNum = _12;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_pState_26(D)->isIntActive = 1;
  # DEBUG BEGIN_STMT
  Flexcan_Ip_apxState[_1] = Flexcan_Ip_pState_26(D);

  <bb 36> [local count: 50107952]:
  # DEBUG BEGIN_STMT
  return eResult_23;

}



;; Function FlexCAN_Ip_Send (FlexCAN_Ip_Send, funcdef_no=69, decl_uid=11461, cgraph_uid=70, symbol_order=71)


Symbols to be put in SSA form
{ D.13864 D.14254 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 11
Number of blocks to update: 10 ( 91%)


Merging blocks 2 and 8
Merging blocks 10 and 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
FlexCAN_Ip_Send (uint8 instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * tx_info, uint32 msg_id, const uint8 * mb_data)
{
  boolean D.14254;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  unsigned char _3;
  _Bool _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _7;
  long unsigned int _8;
  unsigned char _9;
  long unsigned int _27;
  long unsigned int _28;
  unsigned char iftmp.5_29;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 1
  # DEBUG BEGIN_STMT
  _1 = (int) instance_12(D);
  base_14 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_14
  # DEBUG BEGIN_STMT
  state_15 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_15
  # DEBUG BEGIN_STMT
  _2 = instance_12(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = tx_info_17(D) != 0B;
  _5 = (unsigned char) _4;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  # DEBUG base => base_14
  # DEBUG INLINE_ENTRY FlexCAN_IsListenOnlyModeEnabled
  # DEBUG BEGIN_STMT
  _27 ={v} MEM[(const struct FLEXCAN_Type *)base_14].CTRL1;
  _28 = _27 & 8;
  if (_28 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.5_29 = PHI <1(2), 0(3)>
  _30 = iftmp.5_29;
  # DEBUG base => NULL
  _6 = _30;
  if (_6 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 5> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  result_24 = FlexCAN_StartSendData (instance_12(D), mb_idx_20(D), tx_info_17(D), msg_id_21(D), mb_data_22(D));
  # DEBUG result => result_24
  # DEBUG BEGIN_STMT
  if (result_24 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 177167401]:
  _7 = tx_info_17(D)->is_polling;
  if (_7 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 58465242]:
  # DEBUG BEGIN_STMT
  _8 = (long unsigned int) mb_idx_20(D);
  _9 = state_15->isIntActive;
  result_26 = FlexCAN_SetMsgBuffIntCmd (base_14, instance_12(D), _8, 1, _9);
  # DEBUG result => result_26

  <bb 8> [local count: 1073741824]:
  # result_10 = PHI <1(4), result_24(5), 0(6), result_26(7)>
  # DEBUG result => result_10
  # DEBUG BEGIN_STMT
  return result_10;

}



;; Function FlexCAN_Ip_ConfigRxMb (FlexCAN_Ip_ConfigRxMb, funcdef_no=70, decl_uid=11485, cgraph_uid=71, symbol_order=72)

FlexCAN_Ip_ConfigRxMb (uint8 instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * rx_info, uint32 msg_id)
{
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_MsbuffCodeStatusType cs;
  Flexcan_Ip_StatusType eResult;
  int _1;
  _Bool _2;
  unsigned char _3;
  _Bool _4;
  unsigned char _5;
  unsigned char _6;
  long unsigned int _7;
  unsigned char _8;
  long unsigned int _9;
  long unsigned int _10;
  <unnamed type> _11;
  unsigned char _12;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instance_15(D);
  base_17 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_17
  # DEBUG BEGIN_STMT
  state_18 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_18
  # DEBUG BEGIN_STMT
  _2 = instance_15(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = rx_info_20(D) != 0B;
  _5 = (unsigned char) _4;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  _6 = state_18->bIsLegacyFifoEn;
  _7 = state_18->u32MaxMbNum;
  _8 = FlexCAN_IsMbOutOfRange (base_17, mb_idx_22(D), _6, _7);
  if (_8 == 1)
    goto <bb 4>; [36.03%]
  else
    goto <bb 3>; [63.97%]

  <bb 3> [local count: 686872646]:
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) mb_idx_22(D);
  FlexCAN_ClearMsgBuffIntStatusFlag (base_17, _9);
  # DEBUG BEGIN_STMT
  _10 = rx_info_20(D)->data_length;
  cs.dataLen = _10;
  # DEBUG BEGIN_STMT
  _11 = rx_info_20(D)->msg_id_type;
  cs.msgIdType = _11;
  # DEBUG BEGIN_STMT
  _12 = rx_info_20(D)->fd_enable;
  cs.fd_enable = _12;
  # DEBUG BEGIN_STMT
  cs.code = 15;
  # DEBUG BEGIN_STMT
  FlexCAN_SetRxMsgBuff (base_17, _9, &cs, msg_id_29(D));
  # DEBUG BEGIN_STMT
  cs.code = 0;
  # DEBUG BEGIN_STMT
  FlexCAN_SetRxMsgBuff (base_17, _9, &cs, msg_id_29(D));
  # DEBUG BEGIN_STMT
  cs.code = 4;
  # DEBUG BEGIN_STMT
  FlexCAN_SetRxMsgBuff (base_17, _9, &cs, msg_id_29(D));

  <bb 4> [local count: 1073741824]:
  # eResult_13 = PHI <4(2), 0(3)>
  # DEBUG eResult => eResult_13
  # DEBUG BEGIN_STMT
  cs ={v} {CLOBBER};
  return eResult_13;

}



;; Function FlexCAN_Ip_Receive (FlexCAN_Ip_Receive, funcdef_no=71, decl_uid=11473, cgraph_uid=72, symbol_order=73)

FlexCAN_Ip_Receive (uint8 instance, uint8 mb_idx, struct Flexcan_Ip_MsgBuffType * data, boolean isPolling)
{
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  unsigned char _3;
  long unsigned int _4;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instance_8(D);
  base_10 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_10
  # DEBUG BEGIN_STMT
  state_11 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_11
  # DEBUG BEGIN_STMT
  _2 = instance_8(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  result_17 = FlexCAN_StartRxMessageBufferData (instance_8(D), mb_idx_13(D), data_14(D), isPolling_15(D));
  # DEBUG result => result_17
  # DEBUG BEGIN_STMT
  if (result_17 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 536870913]:
  if (isPolling_15(D) == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  _4 = (long unsigned int) mb_idx_13(D);
  _5 = state_11->isIntActive;
  result_19 = FlexCAN_SetMsgBuffIntCmd (base_10, instance_8(D), _4, 1, _5);
  # DEBUG result => result_19

  <bb 5> [local count: 1073741824]:
  # result_6 = PHI <result_17(2), 0(3), result_19(4)>
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  return result_6;

}



;; Function FlexCAN_Ip_ReceiveBlocking (FlexCAN_Ip_ReceiveBlocking, funcdef_no=72, decl_uid=11532, cgraph_uid=73, symbol_order=74)

FlexCAN_Ip_ReceiveBlocking (uint8 instance, uint8 mb_idx, struct Flexcan_Ip_MsgBuffType * data, boolean isPolling, uint32 u32TimeoutMs)
{
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_StateType * state;
  uint32 mS2Ticks;
  uint32 timeElapsed;
  uint32 timeStart;
  Flexcan_Ip_StatusType result;
  long unsigned int _1;
  _Bool _2;
  unsigned char _3;
  int _4;
  long unsigned int _5;
  unsigned char _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char _9;
  int _10;
  <unnamed type> _11;
  long unsigned int _12;
  unsigned char _13;
  int _14;
  <unnamed type> _15;
  long unsigned int _47;

  <bb 2> [local count: 348071315]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  _1 = u32TimeoutMs_28(D) * 1000;
  mS2Ticks_30 = OsIf_MicrosToTicks (_1, 0);
  # DEBUG mS2Ticks => mS2Ticks_30
  # DEBUG BEGIN_STMT
  _2 = instance_31(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = (int) instance_31(D);
  state_33 = Flexcan_Ip_apxState[_4];
  # DEBUG state => state_33
  # DEBUG BEGIN_STMT
  base_34 = Flexcan_Ip_apxBase[_4];
  # DEBUG base => base_34
  # DEBUG BEGIN_STMT
  result_39 = FlexCAN_StartRxMessageBufferData (instance_31(D), mb_idx_35(D), data_36(D), isPolling_37(D));
  # DEBUG result => result_39
  # DEBUG BEGIN_STMT
  if (result_39 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 174035658]:
  if (isPolling_37(D) == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 57431767]:
  # DEBUG BEGIN_STMT
  _5 = (long unsigned int) mb_idx_35(D);
  _6 = state_33->isIntActive;
  result_41 = FlexCAN_SetMsgBuffIntCmd (base_34, instance_31(D), _5, 1, _6);
  # DEBUG result => result_41

  <bb 5> [local count: 348071315]:
  # result_16 = PHI <result_39(2), 0(3), result_41(4)>
  # DEBUG result => result_16
  # DEBUG BEGIN_STMT
  if (result_16 == 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 12>; [67.00%]

  <bb 6> [local count: 114863534]:
  # DEBUG BEGIN_STMT
  _7 = OsIf_GetCounter (0);
  timeStart = _7;
  # DEBUG BEGIN_STMT
  goto <bb 11>; [100.00%]

  <bb 7> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  if (isPolling_37(D) == 1)
    goto <bb 8>; [20.24%]
  else
    goto <bb 10>; [79.76%]

  <bb 8> [local count: 205372451]:
  # DEBUG BEGIN_STMT
  _8 = (long unsigned int) mb_idx_35(D);
  _9 = FlexCAN_GetBuffStatusFlag (base_34, _8);
  if (_9 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 67772909]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxMB (instance_31(D), _8);

  <bb 10> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _47 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_48 = timeElapsed_19 + _47;
  # DEBUG timeElapsed => timeElapsed_48
  # DEBUG BEGIN_STMT
  if (mS2Ticks_30 <= timeElapsed_48)
    goto <bb 12>; [5.50%]
  else
    goto <bb 20>; [94.50%]

  <bb 20> [local count: 958878293]:

  <bb 11> [local count: 1073741824]:
  # timeElapsed_19 = PHI <0(6), timeElapsed_48(20)>
  # DEBUG timeElapsed => timeElapsed_19
  # DEBUG BEGIN_STMT
  _10 = (int) mb_idx_35(D);
  _11 ={v} state_33->mbs[_10].state;
  if (_11 == 1)
    goto <bb 7>; [94.50%]
  else
    goto <bb 12>; [5.50%]

  <bb 12> [local count: 348071313]:
  # result_17 = PHI <result_16(5), 3(10), 0(11)>
  # DEBUG result => result_17
  # DEBUG BEGIN_STMT
  if (result_17 == 3)
    goto <bb 13>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 13> [local count: 118344246]:
  if (isPolling_37(D) == 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 14> [local count: 39053601]:
  # DEBUG BEGIN_STMT
  _12 = (long unsigned int) mb_idx_35(D);
  _13 = state_33->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (base_34, instance_31(D), _12, 0, _13);

  <bb 15> [local count: 348071313]:
  # DEBUG BEGIN_STMT
  if (result_17 != 4)
    goto <bb 16>; [66.00%]
  else
    goto <bb 19>; [34.00%]

  <bb 16> [local count: 229727067]:
  if (result_17 != 2)
    goto <bb 17>; [66.00%]
  else
    goto <bb 19>; [34.00%]

  <bb 17> [local count: 151619864]:
  # DEBUG BEGIN_STMT
  _14 = (int) mb_idx_35(D);
  _15 ={v} state_33->mbs[_14].state;
  if (_15 == 0)
    goto <bb 19>; [65.00%]
  else
    goto <bb 18>; [35.00%]

  <bb 18> [local count: 53066952]:
  # DEBUG BEGIN_STMT
  state_33->mbs[_14].state ={v} 0;
  # DEBUG BEGIN_STMT
  # DEBUG result => 3

  <bb 19> [local count: 348071314]:
  # result_18 = PHI <result_17(15), result_17(16), 0(17), 3(18)>
  # DEBUG result => result_18
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  return result_18;

}



;; Function FlexCAN_Ip_RxFifo (FlexCAN_Ip_RxFifo, funcdef_no=73, decl_uid=11476, cgraph_uid=74, symbol_order=75)

FlexCAN_Ip_RxFifo (uint8 instance, struct Flexcan_Ip_MsgBuffType * data)
{
  const struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  long unsigned int _19;
  signed int _20;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  _1 = instance_7(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) instance_7(D);
  base_10 = Flexcan_Ip_apxBase[_3];
  # DEBUG base => base_10
  # DEBUG BEGIN_STMT
  _4 = FlexCAN_IsEnhancedRxFifoAvailable (base_10);
  if (_4 == 1)
    goto <bb 3>; [51.12%]
  else
    goto <bb 6>; [48.88%]

  <bb 3> [local count: 548896821]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_10
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhancedRxFifoEnabled
  # DEBUG BEGIN_STMT
  _19 ={v} base_10->ERFCR;
  _20 = (signed int) _19;
  if (_20 < 0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]

  <bb 4> [local count: 225047696]:
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  result_18 = FlexCAN_StartRxMessageEnhancedFifoData (instance_7(D), data_12(D));
  # DEBUG result => result_18
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 323849124]:
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  result_16 = FlexCAN_StartRxMessageFifoData (instance_7(D), data_12(D));
  # DEBUG result => result_16
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  result_14 = FlexCAN_StartRxMessageFifoData (instance_7(D), data_12(D));
  # DEBUG result => result_14

  <bb 7> [local count: 1073741824]:
  # result_5 = PHI <result_16(5), result_14(6), result_18(4)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_RxFifoBlocking (FlexCAN_Ip_RxFifoBlocking, funcdef_no=74, decl_uid=11480, cgraph_uid=75, symbol_order=76)


Symbols to be put in SSA form
{ D.13869 D.14276 D.14282 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 31
Number of blocks to update: 30 ( 97%)


Removing basic block 6
Removing basic block 15
Removing basic block 20
Merging blocks 28 and 11
Merging blocks 30 and 29
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 7 12 8 11 9 10
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 2, outer 1
;;  nodes: 12 11 9 10
;; 2 succs { 3 23 }
;; 3 succs { 4 5 }
;; 4 succs { 6 25 }
;; 5 succs { 22 25 }
;; 6 succs { 14 }
;; 7 succs { 8 13 }
;; 8 succs { 12 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 9 13 }
;; 13 succs { 15 14 }
;; 14 succs { 7 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 20 21 19 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 25 }
;; 22 succs { 25 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 1 }
FlexCAN_Ip_RxFifoBlocking (uint8 instance, struct Flexcan_Ip_MsgBuffType * data, uint32 timeout)
{
  uint8 D.14282;
  Flexcan_Ip_StatusType eResult;
  struct Flexcan_Ip_StateType * pState;
  struct FLEXCAN_Type * pBase;
  uint32 timeStart;
  uint32 timeElapsed;
  uint32 mS2Ticks;
  uint32 u32intType;
  Flexcan_Ip_StatusType D.14276;
  const struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  unsigned char _3;
  unsigned char _4;
  long unsigned int _26;
  signed int _27;
  int _28;
  long unsigned int _31;
  long unsigned int _33;
  <unnamed type> _34;
  unsigned char _36;
  long unsigned int _38;
  <unnamed type> _41;
  <unnamed type> _43;
  <unnamed type> _44;
  long unsigned int _46;
  long unsigned int _47;
  int _48;
  int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  unsigned char _53;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_7(D);
  base_9 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_9
  # DEBUG BEGIN_STMT
  _2 = instance_7(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = FlexCAN_IsEnhancedRxFifoAvailable (base_9);
  if (_4 == 1)
    goto <bb 3>; [51.12%]
  else
    goto <bb 23>; [48.88%]

  <bb 3> [local count: 548896821]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_9
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhancedRxFifoEnabled
  # DEBUG BEGIN_STMT
  _26 ={v} base_9->ERFCR;
  _27 = (signed int) _26;
  if (_27 < 0)
    goto <bb 4>; [41.00%]
  else
    goto <bb 5>; [59.00%]

  <bb 4> [local count: 225047696]:
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  result_23 = FlexCAN_StartRxMessageEnhancedFifoData (instance_7(D), data_12(D));
  # DEBUG result => result_23
  # DEBUG BEGIN_STMT
  if (result_23 == 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 25>; [67.00%]

  <bb 5> [local count: 323849124]:
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  result_19 = FlexCAN_StartRxMessageFifoData (instance_7(D), data_12(D));
  # DEBUG result => result_19
  # DEBUG BEGIN_STMT
  if (result_19 == 0)
    goto <bb 22>; [33.00%]
  else
    goto <bb 25>; [67.00%]

  <bb 6> [local count: 74265740]:
  # DEBUG BEGIN_STMT
  # DEBUG u8Instance => instance_7(D)
  # DEBUG u32TimeoutMs => timeout_15(D)
  # DEBUG INLINE_ENTRY FlexCAN_ProccessEnhancedRxFifo
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 0
  # DEBUG BEGIN_STMT
  _28 = (int) instance_7(D);
  pState_29 = Flexcan_Ip_apxState[_28];
  # DEBUG pState => pState_29
  # DEBUG BEGIN_STMT
  pBase_30 = Flexcan_Ip_apxBase[_28];
  # DEBUG pBase => pBase_30
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  _31 = timeout_15(D) * 1000;
  mS2Ticks_32 = OsIf_MicrosToTicks (_31, 0);
  # DEBUG mS2Ticks => mS2Ticks_32
  # DEBUG BEGIN_STMT
  # DEBUG u32intType => 0
  # DEBUG BEGIN_STMT
  _33 = OsIf_GetCounter (0);
  timeStart = _33;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [100.00%]

  <bb 7> [local count: 656051637]:
  # DEBUG BEGIN_STMT
  _34 = pState_29->transferType;
  if (_34 == 1)
    goto <bb 8>; [16.00%]
  else
    goto <bb 13>; [84.00%]

  <bb 8> [local count: 104968262]:
  goto <bb 12>; [100.00%]

  <bb 9> [local count: 419873049]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_30
  # DEBUG intFlag => u32intType_35
  # DEBUG INLINE_ENTRY FlexCAN_GetEnhancedRxFIFOStatusFlag
  # DEBUG BEGIN_STMT
  _46 ={v} MEM[(const struct FLEXCAN_Type *)pBase_30].ERFSR;
  _47 = u32intType_35;
  _48 = (int) _47;
  _49 = _48 & 31;
  _50 = 1 << _49;
  _51 = _46 & _50;
  _52 = _51 >> _49;
  _53 = (unsigned char) _52;
  _65 = _53;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  _36 = _65;
  if (_36 != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 10> [local count: 138558106]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerEnhancedRxFIFO (instance_7(D), u32intType_35);

  <bb 11> [local count: 419873049]:
  # DEBUG BEGIN_STMT
  u32intType_37 = u32intType_35 + 4294967295;
  # DEBUG u32intType => u32intType_37

  <bb 12> [local count: 524841311]:
  # u32intType_35 = PHI <31(8), u32intType_37(11)>
  # DEBUG u32intType => u32intType_35
  # DEBUG BEGIN_STMT
  if (u32intType_35 > 27)
    goto <bb 9>; [80.00%]
  else
    goto <bb 13>; [20.00%]

  <bb 13> [local count: 656051637]:
  # DEBUG BEGIN_STMT
  _38 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_40 = _38 + timeElapsed_39;
  # DEBUG timeElapsed => timeElapsed_40
  # DEBUG BEGIN_STMT
  if (mS2Ticks_32 <= timeElapsed_40)
    goto <bb 15>; [5.50%]
  else
    goto <bb 14>; [94.50%]

  <bb 14> [local count: 694234536]:
  # timeElapsed_39 = PHI <0(6), timeElapsed_40(13)>
  # DEBUG timeElapsed => timeElapsed_39
  # DEBUG BEGIN_STMT
  _41 ={v} pState_29->enhancedFifoOutput.state;
  if (_41 == 1)
    goto <bb 7>; [94.50%]
  else
    goto <bb 15>; [5.50%]

  <bb 15> [local count: 74265739]:
  # eResult_42 = PHI <3(13), 0(14)>
  # DEBUG eResult => eResult_42
  # DEBUG BEGIN_STMT
  if (eResult_42 == 3)
    goto <bb 16>; [34.00%]
  else
    goto <bb 18>; [66.00%]

  <bb 16> [local count: 25250351]:
  _43 = pState_29->transferType;
  if (_43 != 1)
    goto <bb 17>; [66.00%]
  else
    goto <bb 18>; [34.00%]

  <bb 17> [local count: 16665232]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_30
  # DEBUG enable => 0
  # DEBUG INLINE_ENTRY FlexCAN_SetEnhancedRxFifoIntAll
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pBase_30->ERFIER ={v} 0;

  <bb 18> [local count: 74265739]:
  # DEBUG base => NULL
  # DEBUG enable => NULL
  # DEBUG BEGIN_STMT
  _44 ={v} pState_29->enhancedFifoOutput.state;
  switch (_44) <default: <L14> [33.33%], case 0: <L15> [33.33%], case 1: <L13> [33.33%]>

  <bb 19> [local count: 24752771]:
<L13>:
  # DEBUG BEGIN_STMT
  pState_29->enhancedFifoOutput.state ={v} 0;
  # DEBUG BEGIN_STMT
  goto <bb 21>; [100.00%]

  <bb 20> [local count: 24752771]:
<L14>:
  # DEBUG BEGIN_STMT
  # DEBUG eResult => 1
  # DEBUG BEGIN_STMT

  <bb 21> [local count: 74258313]:
  # eResult_45 = PHI <0(18), eResult_42(19), 1(20)>
<L15>:
  # DEBUG eResult => eResult_45
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  _71 = eResult_45;
  # DEBUG u8Instance => NULL
  # DEBUG u32TimeoutMs => NULL
  # DEBUG u32intType => NULL
  # DEBUG mS2Ticks => NULL
  # DEBUG timeElapsed => NULL
  # DEBUG timeStart => NULL
  # DEBUG pBase => NULL
  # DEBUG pState => NULL
  # DEBUG eResult => NULL
  result_25 = _71;
  # DEBUG result => result_25
  goto <bb 25>; [100.00%]

  <bb 22> [local count: 106870211]:
  # DEBUG BEGIN_STMT
  result_21 = FlexCAN_ProccessLegacyRxFIFO (instance_7(D), timeout_15(D));
  # DEBUG result => result_21
  goto <bb 25>; [100.00%]

  <bb 23> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  result_14 = FlexCAN_StartRxMessageFifoData (instance_7(D), data_12(D));
  # DEBUG result => result_14
  # DEBUG BEGIN_STMT
  if (result_14 == 0)
    goto <bb 24>; [33.00%]
  else
    goto <bb 25>; [67.00%]

  <bb 24> [local count: 173198851]:
  # DEBUG BEGIN_STMT
  result_17 = FlexCAN_ProccessLegacyRxFIFO (instance_7(D), timeout_15(D));
  # DEBUG result => result_17

  <bb 25> [local count: 1073734397]:
  # result_5 = PHI <result_19(5), result_14(23), result_17(24), result_25(21), result_23(4), result_21(22)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_ConfigRxFifo_Privileged (FlexCAN_Ip_ConfigRxFifo_Privileged, funcdef_no=75, decl_uid=11390, cgraph_uid=76, symbol_order=77)

FlexCAN_Ip_ConfigRxFifo_Privileged (uint8 instance, Flexcan_Ip_RxFifoIdElementFormatType id_format, const struct Flexcan_Ip_IdTableType * id_filter_table)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _23;
  signed int _24;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_9(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_9(D);
  pBase_13 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_13
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _23 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _24 = (signed int) _23;
  # DEBUG pBase => NULL
  # DEBUG D#1 => _24 < 0
  # DEBUG disabled => (boolean) D#1
  # DEBUG BEGIN_STMT
  if (_24 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_13);
  # DEBUG result => result_15

  <bb 4> [local count: 1073741824]:
  # result_4 = PHI <0(2), result_15(3)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  freeze_17 = FlexCAN_IsFreezeMode (pBase_13);
  # DEBUG freeze => freeze_17
  # DEBUG BEGIN_STMT
  if (freeze_17 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  if (result_4 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306369]:
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  if (result_4 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 265751101]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetRxFifoFilter (pBase_13, id_format_18(D), id_filter_table_19(D));

  <bb 8> [local count: 1073741824]:
  # result_12 = PHI <result_4(6), 0(7), 1(5)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_24 < 0)
    goto <bb 9>; [25.50%]
  else
    goto <bb 11>; [74.50%]

  <bb 9> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_22 = FlexCAN_Disable (pBase_13);
  # DEBUG status => status_22
  # DEBUG BEGIN_STMT
  if (status_22 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_22

  <bb 11> [local count: 1073741823]:
  # result_5 = PHI <result_12(8), result_12(9), status_22(10)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged (FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged, funcdef_no=76, decl_uid=11393, cgraph_uid=77, symbol_order=78)

FlexCAN_Ip_ConfigEnhancedRxFifo_Privileged (uint8 instance, const struct Flexcan_Ip_EnhancedIdTableType * id_filter_table)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  unsigned char _3;
  unsigned char _4;
  _Bool _5;
  unsigned char _6;
  long unsigned int _28;
  signed int _29;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_13(D);
  pBase_15 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_15
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_15
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _28 ={v} MEM[(const struct FLEXCAN_Type *)pBase_15].MCR;
  _29 = (signed int) _28;
  # DEBUG pBase => NULL
  # DEBUG D#2 => _29 < 0
  # DEBUG disabled => (boolean) D#2
  # DEBUG BEGIN_STMT
  _2 = instance_13(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = FlexCAN_IsEnhancedRxFifoAvailable (pBase_15);
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  _5 = id_filter_table_19(D) != 0B;
  _6 = (unsigned char) _5;
  DevAssert (_6);
  # DEBUG BEGIN_STMT
  if (_29 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_22 = FlexCAN_Enable (pBase_15);
  # DEBUG result => result_22

  <bb 4> [local count: 1073741824]:
  # result_7 = PHI <0(2), result_22(3)>
  # DEBUG result => result_7
  # DEBUG BEGIN_STMT
  freeze_24 = FlexCAN_IsFreezeMode (pBase_15);
  # DEBUG freeze => freeze_24
  # DEBUG BEGIN_STMT
  if (freeze_24 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  if (result_7 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306369]:
  # DEBUG result => result_7
  # DEBUG BEGIN_STMT
  if (result_7 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 265751101]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetEnhancedRxFifoFilter (pBase_15, id_filter_table_19(D));

  <bb 8> [local count: 1073741824]:
  # result_12 = PHI <result_7(6), 0(7), 1(5)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_29 < 0)
    goto <bb 9>; [25.50%]
  else
    goto <bb 11>; [74.50%]

  <bb 9> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_27 = FlexCAN_Disable (pBase_15);
  # DEBUG status => status_27
  # DEBUG BEGIN_STMT
  if (status_27 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_27

  <bb 11> [local count: 1073741823]:
  # result_8 = PHI <result_12(8), result_12(9), status_27(10)>
  # DEBUG result => result_8
  # DEBUG BEGIN_STMT
  return result_8;

}



;; Function FlexCAN_Ip_ConfigRemoteResponseMb (FlexCAN_Ip_ConfigRemoteResponseMb, funcdef_no=77, decl_uid=11538, cgraph_uid=78, symbol_order=79)

FlexCAN_Ip_ConfigRemoteResponseMb (uint8 instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * tx_info, uint32 msg_id, const uint8 * mb_data)
{
  volatile uint32 * pMbAddr;
  const struct Flexcan_Ip_StateType * const state;
  struct FLEXCAN_Type * pBase;
  struct Flexcan_Ip_MsbuffCodeStatusType cs;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  unsigned char _3;
  _Bool _4;
  unsigned char _5;
  long unsigned int _6;
  long unsigned int _7;
  _Bool _8;
  unsigned char _9;
  long unsigned int _10;
  unsigned char _11;
  long unsigned int _12;
  unsigned char _13;
  _Bool _14;
  unsigned char _15;
  unsigned char _16;
  long unsigned int _17;
  unsigned char _18;
  long unsigned int _19;
  <unnamed type> _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instance_26(D);
  pBase_28 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_28
  # DEBUG BEGIN_STMT
  state_29 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_29
  # DEBUG BEGIN_STMT
  # DEBUG pMbAddr => 0B
  # DEBUG BEGIN_STMT
  _2 = instance_26(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = tx_info_31(D) != 0B;
  _5 = (unsigned char) _4;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  _6 ={v} pBase_28->CTRL2;
  _7 = _6 & 131072;
  _8 = _7 == 0;
  _9 = (unsigned char) _8;
  DevAssert (_9);
  # DEBUG BEGIN_STMT
  _10 = tx_info_31(D)->data_length;
  _11 = (unsigned char) _10;
  _12 = (long unsigned int) mb_idx_34(D);
  _13 = FlexCAN_GetMbPayloadSize (pBase_28, _12);
  _14 = _11 <= _13;
  _15 = (unsigned char) _14;
  DevAssert (_15);
  # DEBUG BEGIN_STMT
  _16 = state_29->bIsLegacyFifoEn;
  _17 = state_29->u32MaxMbNum;
  _18 = FlexCAN_IsMbOutOfRange (pBase_28, mb_idx_34(D), _16, _17);
  if (_18 == 1)
    goto <bb 5>; [36.03%]
  else
    goto <bb 3>; [63.97%]

  <bb 3> [local count: 686872646]:
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _19 = tx_info_31(D)->data_length;
  cs.dataLen = _19;
  # DEBUG BEGIN_STMT
  _20 = tx_info_31(D)->msg_id_type;
  cs.msgIdType = _20;
  # DEBUG BEGIN_STMT
  cs.code = 10;
  # DEBUG BEGIN_STMT
  cs.fd_enable = 0;
  # DEBUG BEGIN_STMT
  cs.enable_brs = 0;
  # DEBUG BEGIN_STMT
  cs.fd_padding = 0;
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_28, _12);
  # DEBUG BEGIN_STMT
  pMbAddr_46 = FlexCAN_GetMsgBuffRegion (pBase_28, _12);
  # DEBUG pMbAddr => pMbAddr_46
  # DEBUG BEGIN_STMT
  _21 = tx_info_31(D)->is_remote;
  FlexCAN_SetTxMsgBuff (pMbAddr_46, &cs, msg_id_47(D), mb_data_48(D), _21);
  # DEBUG BEGIN_STMT
  _22 = tx_info_31(D)->is_polling;
  if (_22 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 226667973]:
  # DEBUG BEGIN_STMT
  _23 = state_29->isIntActive;
  result_51 = FlexCAN_SetMsgBuffIntCmd (pBase_28, instance_26(D), _12, 1, _23);
  # DEBUG result => result_51

  <bb 5> [local count: 1073741824]:
  # result_24 = PHI <4(2), 0(3), result_51(4)>
  # DEBUG result => result_24
  # DEBUG BEGIN_STMT
  cs ={v} {CLOBBER};
  return result_24;

}



;; Function FlexCAN_Ip_GetTransferStatus (FlexCAN_Ip_GetTransferStatus, funcdef_no=78, decl_uid=11494, cgraph_uid=79, symbol_order=80)

FlexCAN_Ip_GetTransferStatus (uint8 instance, uint8 mb_idx)
{
  Flexcan_Ip_StatusType status;
  const struct Flexcan_Ip_StateType * state;
  int _1;
  _Bool _2;
  unsigned char _3;
  unsigned char _4;
  _Bool _5;
  unsigned char _6;
  int _7;
  <unnamed type> _8;
  <unnamed type> _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_11(D);
  state_13 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_13
  # DEBUG BEGIN_STMT
  # DEBUG status => 1
  # DEBUG BEGIN_STMT
  _2 = instance_11(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = mb_idx_15(D) + 192;
  _5 = _4 > 190;
  _6 = (unsigned char) _5;
  DevAssert (_6);
  # DEBUG BEGIN_STMT
  if (mb_idx_15(D) <= 63)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _7 = (int) mb_idx_15(D);
  _8 ={v} state_13->mbs[_7].state;
  if (_8 == 0)
    goto <bb 7>; [65.00%]
  else
    goto <bb 4>; [35.00%]

  <bb 4> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  # DEBUG status => 2
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _9 ={v} state_13->enhancedFifoOutput.state;
  if (_9 == 0)
    goto <bb 7>; [65.00%]
  else
    goto <bb 6>; [35.00%]

  <bb 6> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  # DEBUG status => 2

  <bb 7> [local count: 1073741824]:
  # status_10 = PHI <2(4), 0(5), 2(6), 0(3)>
  # DEBUG status => status_10
  # DEBUG BEGIN_STMT
  return status_10;

}



;; Function FlexCAN_IRQHandler (FlexCAN_IRQHandler, funcdef_no=80, decl_uid=11545, cgraph_uid=81, symbol_order=82)


Symbols to be put in SSA form
{ D.13874 D.14315 D.14318 D.14321 D.14332 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 76
Number of blocks to update: 75 ( 99%)


Removing basic block 14
Removing basic block 21
Removing basic block 23
Removing basic block 29
Removing basic block 30
Removing basic block 44
Removing basic block 45
Merging blocks 52 and 42
Merging blocks 54 and 53
Merging blocks 56 and 55
Removing basic block 57
Removing basic block 60
Removing basic block 69
Merging blocks 75 and 70
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
;;
;; Loop 4
;;  header 56, latch 55
;;  depth 1, outer 0
;;  nodes: 56 55 43 48 52 53 54 49 50 51 45 46 47 44
;;
;; Loop 3
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 32 34 35 36 37 33
;;
;; Loop 2
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 6
;;
;; Loop 1
;;  header 58, latch 57
;;  depth 1, outer 0
;;  nodes: 58 57
;; 2 succs { 3 58 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 4 7 }
;; 7 succs { 8 28 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 13 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 25 }
;; 14 succs { 15 17 }
;; 15 succs { 16 18 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 24 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 41 }
;; 29 succs { 30 41 }
;; 30 succs { 31 41 }
;; 31 succs { 39 }
;; 32 succs { 33 38 }
;; 33 succs { 34 35 }
;; 34 succs { 38 }
;; 35 succs { 36 38 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 }
;; 39 succs { 32 40 }
;; 40 succs { 41 }
;; 41 succs { 42 61 }
;; 42 succs { 56 }
;; 43 succs { 44 55 }
;; 44 succs { 45 46 }
;; 45 succs { 48 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 55 }
;; 49 succs { 50 52 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 53 55 }
;; 53 succs { 54 55 }
;; 54 succs { 55 }
;; 55 succs { 56 }
;; 56 succs { 43 61 }
;; 57 succs { 58 }
;; 58 succs { 57 59 }
;; 59 succs { 60 61 }
;; 60 succs { 61 }
;; 61 succs { 1 }
FlexCAN_IRQHandler (uint8 instance, uint32 startMbIdx, uint32 endMbIdx, boolean bEnhancedFifoExisted)
{
  uint32 u32Imask;
  uint8 D.14332;
  struct FLEXCAN_Type * base;
  struct Flexcan_Ip_StateType * state;
  uint32 mb_idx;
  uint32 u32MbHandle;
  uint8 D.14321;
  uint8 D.14318;
  struct FLEXCAN_Type * base;
  const struct Flexcan_Ip_StateType * state;
  uint32 u32intType;
  boolean bIsSpuriousInt;
  boolean D.14315;
  struct FLEXCAN_Type * pBase;
  struct Flexcan_Ip_StateType * pState;
  struct Flexcan_Ip_MsgBuffType mb;
  uint32 mb_idx;
  boolean bIsSpuriousInt;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  uint32 flag_reg;
  uint32 u32MbHandle;
  int _1;
  _Bool _3;
  unsigned char _4;
  _Bool _5;
  unsigned char _6;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;
  <unnamed type> _10;
  <unnamed type> _11;
  unsigned char _12;
  <unnamed type> _13;
  <unnamed type> _14;
  long unsigned int _53;
  signed int _54;
  int _59;
  unsigned char _62;
  long unsigned int vol.6_63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int vol.6_69;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _70;
  <unnamed type> _71;
  unsigned char _72;
  unsigned char _73;
  unsigned char _74;
  int _75;
  unsigned char _79;
  unsigned char _80;
  unsigned char _82;
  long unsigned int _83;
  long unsigned int _87;
  long unsigned int _88;
  int _89;
  int _90;
  long unsigned int _91;
  long unsigned int _92;
  long unsigned int _93;
  unsigned char _94;
  long unsigned int _95;
  long unsigned int _96;
  int _97;
  int _98;
  long unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  unsigned char _102;
  int _103;
  unsigned char _107;
  unsigned char _108;
  unsigned char _109;
  unsigned char _111;
  <unnamed type> _112;
  long unsigned int _114;
  long unsigned int _115;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _119;
  long unsigned int _120;
  long unsigned int _121;
  long unsigned int _122;
  unsigned char _125;

  <bb 2> [local count: 214818650]:
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => 0
  # DEBUG BEGIN_STMT
  # DEBUG flag_reg => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_28(D);
  base_30 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_30
  # DEBUG BEGIN_STMT
  state_31 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_31
  # DEBUG BEGIN_STMT
  # DEBUG bIsSpuriousInt => 1
  # DEBUG BEGIN_STMT
  # DEBUG mb_idx => endMbIdx_32(D)
  # DEBUG BEGIN_STMT
  _3 = instance_28(D) <= 3;
  _4 = (unsigned char) _3;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  _5 = endMbIdx_32(D) <= 63;
  _6 = (unsigned char) _5;
  DevAssert (_6);
  # DEBUG BEGIN_STMT
  if (state_31 != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 58>; [46.53%]

  <bb 3> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  _7 = FlexCAN_GetMsgBuffIntStatusFlag (base_30, endMbIdx_32(D));
  flag_reg_40 = (uint32) _7;
  # DEBUG flag_reg => flag_reg_40
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 958878294]:
  # DEBUG BEGIN_STMT
  mb_idx_41 = mb_idx_19 + 4294967295;
  # DEBUG mb_idx => mb_idx_41
  # DEBUG BEGIN_STMT
  _8 = FlexCAN_GetMsgBuffIntStatusFlag (base_30, mb_idx_41);
  flag_reg_43 = (uint32) _8;
  # DEBUG flag_reg => flag_reg_43

  <bb 5> [local count: 1073741824]:
  # flag_reg_16 = PHI <flag_reg_40(3), flag_reg_43(4)>
  # mb_idx_19 = PHI <endMbIdx_32(D)(3), mb_idx_41(4)>
  # DEBUG mb_idx => mb_idx_19
  # DEBUG flag_reg => flag_reg_16
  # DEBUG BEGIN_STMT
  if (flag_reg_16 == 0)
    goto <bb 6>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 6> [local count: 1014686025]:
  if (mb_idx_19 > startMbIdx_35(D))
    goto <bb 4>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 7> [local count: 114863532]:
  # flag_reg_2 = PHI <flag_reg_16(5), 0(6)>
  # mb_idx_44 = PHI <mb_idx_19(5), mb_idx_19(6)>
  # DEBUG BEGIN_STMT
  if (flag_reg_2 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 8> [local count: 57431766]:
  # DEBUG BEGIN_STMT
  # DEBUG bIsSpuriousInt => 0
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => mb_idx_44
  # DEBUG BEGIN_STMT
  _9 = state_31->bIsLegacyFifoEn;
  if (_9 == 1)
    goto <bb 9>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 9> [local count: 19526800]:
  if (mb_idx_44 <= 7)
    goto <bb 10>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 10> [local count: 6443844]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxFIFO (instance_28(D), mb_idx_44);
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => 0
  goto <bb 13>; [100.00%]

  <bb 11> [local count: 50987922]:
  # DEBUG BEGIN_STMT
  _10 ={v} state_31->mbs[mb_idx_44].state;
  if (_10 == 1)
    goto <bb 12>; [20.24%]
  else
    goto <bb 13>; [79.76%]

  <bb 12> [local count: 10319955]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxMB (instance_28(D), mb_idx_44);

  <bb 13> [local count: 57431766]:
  # u32MbHandle_15 = PHI <0(10), mb_idx_44(11), mb_idx_44(12)>
  # DEBUG u32MbHandle => u32MbHandle_15
  # DEBUG BEGIN_STMT
  _11 ={v} state_31->mbs[u32MbHandle_15].state;
  if (_11 == 2)
    goto <bb 14>; [20.24%]
  else
    goto <bb 25>; [79.76%]

  <bb 14> [local count: 11624189]:
  # DEBUG BEGIN_STMT
  # DEBUG u8Instance => instance_28(D)
  # DEBUG u32MbIdx => mb_idx_44
  # DEBUG INLINE_ENTRY FlexCAN_IRQHandlerTxMB
  # DEBUG BEGIN_STMT
  _59 = (int) instance_28(D);
  pBase_60 = Flexcan_Ip_apxBase[_59];
  # DEBUG pBase => pBase_60
  # DEBUG BEGIN_STMT
  pState_61 = Flexcan_Ip_apxState[_59];
  # DEBUG pState => pState_61
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _62 = pState_61->mbs[mb_idx_44].isRemote;
  if (_62 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 15> [local count: 5812095]:
  # DEBUG BEGIN_STMT
  FlexCAN_LockRxMsgBuff (pBase_60, mb_idx_44);
  # DEBUG BEGIN_STMT
  FlexCAN_GetMsgBuff (pBase_60, mb_idx_44, &mb);
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_60
  # DEBUG INLINE_ENTRY FlexCAN_UnlockRxMsgBuff
  # DEBUG BEGIN_STMT
  vol.6_63 ={v} MEM[(const struct FLEXCAN_Type *)pBase_60].TIMER;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  _64 = mb.time_stamp;
  pState_61->mbs[mb_idx_44].time_stamp = _64;
  # DEBUG BEGIN_STMT
  _65 = mb.cs;
  _66 = _65 >> 24;
  _67 = _66 & 15;
  if (_67 == 4)
    goto <bb 16>; [20.24%]
  else
    goto <bb 18>; [79.76%]

  <bb 16> [local count: 1176368]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_60, mb_idx_44);
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 5812095]:
  # DEBUG BEGIN_STMT
  _68 = FlexCAN_GetMsgBuffTimestamp (pBase_60, mb_idx_44);
  pState_61->mbs[mb_idx_44].time_stamp = _68;
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_60
  # DEBUG INLINE_ENTRY FlexCAN_UnlockRxMsgBuff
  # DEBUG BEGIN_STMT
  vol.6_69 ={v} MEM[(const struct FLEXCAN_Type *)pBase_60].TIMER;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_60, mb_idx_44);

  <bb 18> [local count: 11624189]:
  # DEBUG BEGIN_STMT
  pState_61->mbs[mb_idx_44].state ={v} 0;
  # DEBUG BEGIN_STMT
  _70 = pState_61->callback;
  if (_70 != 0B)
    goto <bb 19>; [70.00%]
  else
    goto <bb 20>; [30.00%]

  <bb 19> [local count: 8136933]:
  # DEBUG BEGIN_STMT
  _70 (instance_28(D), 4, mb_idx_44, pState_61);

  <bb 20> [local count: 11624189]:
  # DEBUG BEGIN_STMT
  _71 ={v} pState_61->mbs[mb_idx_44].state;
  if (_71 == 0)
    goto <bb 21>; [33.00%]
  else
    goto <bb 22>; [67.00%]

  <bb 21> [local count: 3835983]:
  # DEBUG BEGIN_STMT
  pState_61->mbs[mb_idx_44].isPolling = 1;
  # DEBUG BEGIN_STMT
  _72 = pState_61->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_60, instance_28(D), mb_idx_44, 0, _72);
  goto <bb 24>; [100.00%]

  <bb 22> [local count: 7788207]:
  # DEBUG BEGIN_STMT
  _73 = pState_61->mbs[mb_idx_44].isPolling;
  if (_73 == 1)
    goto <bb 23>; [20.24%]
  else
    goto <bb 24>; [79.76%]

  <bb 23> [local count: 1576333]:
  # DEBUG BEGIN_STMT
  _74 = pState_61->isIntActive;
  FlexCAN_SetMsgBuffIntCmd (pBase_60, instance_28(D), mb_idx_44, 0, _74);

  <bb 24> [local count: 11624189]:
  # DEBUG BEGIN_STMT
  mb ={v} {CLOBBER};

  <bb 25> [local count: 57431766]:
  # DEBUG u8Instance => NULL
  # DEBUG u32MbIdx => NULL
  # DEBUG pState => NULL
  # DEBUG pBase => NULL
  # DEBUG BEGIN_STMT
  _12 = FlexCAN_GetMsgBuffIntStatusFlag (base_30, mb_idx_44);
  if (_12 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 26> [local count: 28715883]:
  # DEBUG BEGIN_STMT
  _13 ={v} state_31->mbs[u32MbHandle_15].state;
  if (_13 == 0)
    goto <bb 27>; [33.00%]
  else
    goto <bb 28>; [67.00%]

  <bb 27> [local count: 9476241]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_30, mb_idx_44);

  <bb 28> [local count: 114863532]:
  # bIsSpuriousInt_17 = PHI <1(7), 0(25), 0(26), 0(27)>
  # DEBUG bIsSpuriousInt => bIsSpuriousInt_17
  # DEBUG BEGIN_STMT
  if (bEnhancedFifoExisted_36(D) == 1)
    goto <bb 29>; [34.00%]
  else
    goto <bb 41>; [66.00%]

  <bb 29> [local count: 39053601]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_30
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhancedRxFifoEnabled
  # DEBUG BEGIN_STMT
  _53 ={v} MEM[(const struct FLEXCAN_Type *)base_30].ERFCR;
  _54 = (signed int) _53;
  if (_54 < 0)
    goto <bb 30>; [41.00%]
  else
    goto <bb 41>; [59.00%]

  <bb 30> [local count: 16011976]:
  # DEBUG base => NULL
  _14 = state_31->transferType;
  if (_14 == 0)
    goto <bb 31>; [33.00%]
  else
    goto <bb 41>; [67.00%]

  <bb 31> [local count: 5283952]:
  # DEBUG BEGIN_STMT
  # DEBUG u8Instance => instance_28(D)
  # DEBUG bIsSpuriousIntPrevious => bIsSpuriousInt_17
  # DEBUG INLINE_ENTRY FlexCAN_ProcessIRQHandlerEnhancedRxFIFO
  # DEBUG BEGIN_STMT
  _75 = (int) instance_28(D);
  base_76 = Flexcan_Ip_apxBase[_75];
  # DEBUG base => base_76
  # DEBUG BEGIN_STMT
  state_77 = Flexcan_Ip_apxState[_75];
  # DEBUG state => state_77
  # DEBUG BEGIN_STMT
  # DEBUG u32intType => 0
  # DEBUG BEGIN_STMT
  # DEBUG bIsSpuriousInt => bIsSpuriousInt_17
  # DEBUG BEGIN_STMT
  # DEBUG u32intType => 31
  goto <bb 39>; [100.00%]

  <bb 32> [local count: 21135809]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_76
  # DEBUG intFlag => u32intType_78
  # DEBUG INLINE_ENTRY FlexCAN_GetEnhancedRxFIFOStatusFlag
  # DEBUG BEGIN_STMT
  _87 ={v} MEM[(const struct FLEXCAN_Type *)base_76].ERFSR;
  _88 = u32intType_78;
  _89 = (int) _88;
  _90 = _89 & 31;
  _91 = 1 << _90;
  _92 = _87 & _91;
  _93 = _92 >> _90;
  _94 = (unsigned char) _93;
  _147 = _94;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  _79 = _147;
  if (_79 != 0)
    goto <bb 33>; [33.00%]
  else
    goto <bb 38>; [67.00%]

  <bb 33> [local count: 6974817]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_76
  # DEBUG intFlag => u32intType_78
  # DEBUG INLINE_ENTRY FlexCAN_GetEnhancedRxFIFOIntStatusFlag
  # DEBUG BEGIN_STMT
  _95 ={v} MEM[(const struct FLEXCAN_Type *)base_76].ERFIER;
  _96 = u32intType_78;
  _97 = (int) _96;
  _98 = _97 & 31;
  _99 = 1 << _98;
  _100 = _95 & _99;
  _101 = _100 >> _98;
  _102 = (unsigned char) _101;
  _148 = _102;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  _80 = _148;
  if (_80 != 0)
    goto <bb 34>; [33.00%]
  else
    goto <bb 35>; [67.00%]

  <bb 34> [local count: 2301690]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerEnhancedRxFIFO (instance_28(D), u32intType_78);
  # DEBUG BEGIN_STMT
  # DEBUG bIsSpuriousInt => 0
  goto <bb 38>; [100.00%]

  <bb 35> [local count: 4673127]:
  # DEBUG BEGIN_STMT
  if (bIsSpuriousInt_81 == 1)
    goto <bb 36>; [34.00%]
  else
    goto <bb 38>; [66.00%]

  <bb 36> [local count: 1588863]:
  _82 = state_77->enhancedFifoOutput.isPolling;
  if (_82 == 0)
    goto <bb 37>; [50.00%]
  else
    goto <bb 38>; [50.00%]

  <bb 37> [local count: 794432]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_76
  # DEBUG intFlag => u32intType_78
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  _83 = 1 << u32intType_78;
  base_76->ERFSR ={v} _83;

  <bb 38> [local count: 21135809]:
  # bIsSpuriousInt_86 = PHI <bIsSpuriousInt_81(32), 0(34), bIsSpuriousInt_81(35), 1(36), 1(37)>
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG bIsSpuriousInt => bIsSpuriousInt_86
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  u32intType_84 = u32intType_78 + 4294967295;
  # DEBUG u32intType => u32intType_84

  <bb 39> [local count: 26419761]:
  # u32intType_78 = PHI <31(31), u32intType_84(38)>
  # bIsSpuriousInt_81 = PHI <bIsSpuriousInt_17(31), bIsSpuriousInt_86(38)>
  # DEBUG bIsSpuriousInt => bIsSpuriousInt_81
  # DEBUG u32intType => u32intType_78
  # DEBUG BEGIN_STMT
  if (u32intType_78 > 27)
    goto <bb 32>; [80.00%]
  else
    goto <bb 40>; [20.00%]

  <bb 40> [local count: 5283952]:
  # bIsSpuriousInt_85 = PHI <bIsSpuriousInt_81(39)>
  # DEBUG BEGIN_STMT
  _146 = bIsSpuriousInt_85;
  # DEBUG u8Instance => NULL
  # DEBUG bIsSpuriousIntPrevious => NULL
  # DEBUG bIsSpuriousInt => NULL
  # DEBUG u32intType => NULL
  # DEBUG state => NULL
  # DEBUG base => NULL
  bIsSpuriousInt_51 = _146;
  # DEBUG bIsSpuriousInt => bIsSpuriousInt_51

  <bb 41> [local count: 114863532]:
  # bIsSpuriousInt_18 = PHI <bIsSpuriousInt_17(28), bIsSpuriousInt_17(29), bIsSpuriousInt_17(30), bIsSpuriousInt_51(40)>
  # DEBUG base => NULL
  # DEBUG bIsSpuriousInt => bIsSpuriousInt_18
  # DEBUG BEGIN_STMT
  if (bIsSpuriousInt_18 == 1)
    goto <bb 42>; [20.24%]
  else
    goto <bb 61>; [79.76%]

  <bb 42> [local count: 23248379]:
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_28(D)
  # DEBUG startMbIdx => startMbIdx_35(D)
  # DEBUG endMbIdx => endMbIdx_32(D)
  # DEBUG INLINE_ENTRY FlexCAN_ProcessSpuriousInterruptMB
  # DEBUG BEGIN_STMT
  _103 = (int) instance_28(D);
  base_104 = Flexcan_Ip_apxBase[_103];
  # DEBUG base => base_104
  # DEBUG BEGIN_STMT
  state_105 = Flexcan_Ip_apxState[_103];
  # DEBUG state => state_105
  # DEBUG BEGIN_STMT
  # DEBUG mb_idx => 0
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => 0
  # DEBUG BEGIN_STMT
  # DEBUG mb_idx => startMbIdx_35(D)
  goto <bb 56>; [100.00%]

  <bb 43> [local count: 188100518]:
  # DEBUG BEGIN_STMT
  _107 = FlexCAN_GetBuffStatusFlag (base_104, mb_idx_106);
  if (_107 != 0)
    goto <bb 44>; [33.00%]
  else
    goto <bb 55>; [67.00%]

  <bb 44> [local count: 62073171]:
  # DEBUG base => base_104
  # DEBUG msgBuffIdx => mb_idx_106
  # DEBUG INLINE_ENTRY FlexCAN_GetBuffStatusImask
  # DEBUG BEGIN_STMT
  # DEBUG u32Imask => 0
  # DEBUG BEGIN_STMT
  if (mb_idx_106 <= 31)
    goto <bb 45>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 45> [local count: 31036585]:
  # DEBUG BEGIN_STMT
  _114 ={v} MEM[(const struct FLEXCAN_Type *)base_104].IMASK1;
  _115 = mb_idx_106;
  _116 = 1 << _115;
  _117 = _114 & _116;
  u32Imask_118 = _117 >> _115;
  # DEBUG u32Imask => u32Imask_118
  goto <bb 48>; [100.00%]

  <bb 46> [local count: 31036585]:
  # DEBUG BEGIN_STMT
  if (mb_idx_106 <= 63)
    goto <bb 47>; [50.00%]
  else
    goto <bb 48>; [50.00%]

  <bb 47> [local count: 15518293]:
  # DEBUG BEGIN_STMT
  _119 ={v} MEM[(const struct FLEXCAN_Type *)base_104].IMASK2;
  _120 = mb_idx_106 & 31;
  _121 = 1 << _120;
  _122 = _119 & _121;
  u32Imask_123 = _122 >> _120;
  # DEBUG u32Imask => u32Imask_123

  <bb 48> [local count: 62073171]:
  # u32Imask_124 = PHI <u32Imask_118(45), 0(46), u32Imask_123(47)>
  # DEBUG u32Imask => u32Imask_124
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _125 = (unsigned char) u32Imask_124;
  _152 = _125;
  # DEBUG base => NULL
  # DEBUG msgBuffIdx => NULL
  # DEBUG u32Imask => NULL
  _108 = _152;
  if (_108 == 0)
    goto <bb 49>; [50.00%]
  else
    goto <bb 55>; [50.00%]

  <bb 49> [local count: 31036585]:
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => mb_idx_106
  # DEBUG BEGIN_STMT
  _109 = state_105->bIsLegacyFifoEn;
  if (_109 == 1)
    goto <bb 50>; [34.00%]
  else
    goto <bb 52>; [66.00%]

  <bb 50> [local count: 10552439]:
  if (mb_idx_106 <= 7)
    goto <bb 51>; [50.00%]
  else
    goto <bb 52>; [50.00%]

  <bb 51> [local count: 5276220]:
  # DEBUG BEGIN_STMT
  # DEBUG u32MbHandle => 0

  <bb 52> [local count: 31036585]:
  # u32MbHandle_110 = PHI <mb_idx_106(49), mb_idx_106(50), 0(51)>
  # DEBUG u32MbHandle => u32MbHandle_110
  # DEBUG BEGIN_STMT
  _111 = state_105->mbs[u32MbHandle_110].isPolling;
  if (_111 == 0)
    goto <bb 53>; [33.00%]
  else
    goto <bb 55>; [67.00%]

  <bb 53> [local count: 10242073]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_104, mb_idx_106);
  # DEBUG BEGIN_STMT
  _112 ={v} state_105->mbs[u32MbHandle_110].state;
  if (_112 == 2)
    goto <bb 54>; [34.00%]
  else
    goto <bb 55>; [66.00%]

  <bb 54> [local count: 3482305]:
  # DEBUG BEGIN_STMT
  state_105->mbs[u32MbHandle_110].state ={v} 0;
  # DEBUG BEGIN_STMT
  state_105->mbs[u32MbHandle_110].isPolling = 1;

  <bb 55> [local count: 188100518]:
  # DEBUG BEGIN_STMT
  mb_idx_113 = mb_idx_106 + 1;
  # DEBUG mb_idx => mb_idx_113

  <bb 56> [local count: 211348896]:
  # mb_idx_106 = PHI <startMbIdx_35(D)(42), mb_idx_113(55)>
  # DEBUG mb_idx => mb_idx_106
  # DEBUG BEGIN_STMT
  if (endMbIdx_32(D) >= mb_idx_106)
    goto <bb 43>; [89.00%]
  else
    goto <bb 61>; [11.00%]

  <bb 57> [local count: 808727776]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_30, mb_idx_20);
  # DEBUG BEGIN_STMT
  mb_idx_38 = mb_idx_20 + 1;
  # DEBUG mb_idx => mb_idx_38

  <bb 58> [local count: 908682895]:
  # mb_idx_20 = PHI <mb_idx_38(57), startMbIdx_35(D)(2)>
  # DEBUG mb_idx => mb_idx_20
  # DEBUG BEGIN_STMT
  if (mb_idx_20 <= endMbIdx_32(D))
    goto <bb 57>; [89.00%]
  else
    goto <bb 59>; [11.00%]

  <bb 59> [local count: 99955118]:
  # DEBUG BEGIN_STMT
  if (bEnhancedFifoExisted_36(D) == 1)
    goto <bb 60>; [34.00%]
  else
    goto <bb 61>; [66.00%]

  <bb 60> [local count: 33984740]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_30
  # DEBUG intFlag => 28
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  base_30->ERFSR ={v} 268435456;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => base_30
  # DEBUG intFlag => 29
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  base_30->ERFSR ={v} 536870912;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => base_30
  # DEBUG intFlag => 30
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  base_30->ERFSR ={v} 1073741824;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => base_30
  # DEBUG intFlag => 31
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  base_30->ERFSR ={v} 2147483648;

  <bb 61> [local count: 214818650]:
  # DEBUG instance => NULL
  # DEBUG startMbIdx => NULL
  # DEBUG endMbIdx => NULL
  # DEBUG u32MbHandle => NULL
  # DEBUG mb_idx => NULL
  # DEBUG state => NULL
  # DEBUG base => NULL
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  return;

}



;; Function FlexCAN_Ip_ClearErrorStatus (FlexCAN_Ip_ClearErrorStatus, funcdef_no=81, decl_uid=11503, cgraph_uid=82, symbol_order=83)

FlexCAN_Ip_ClearErrorStatus (uint8 instance, uint32 error)
{
  struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  unsigned char _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_4(D);
  base_6 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_6
  # DEBUG BEGIN_STMT
  _2 = instance_4(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  base_6->ESR1 ={v} error_8(D);
  return;

}



;; Function FlexCAN_Ip_GetErrorStatus (FlexCAN_Ip_GetErrorStatus, funcdef_no=82, decl_uid=11496, cgraph_uid=83, symbol_order=84)

FlexCAN_Ip_GetErrorStatus (uint8 instance)
{
  const struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  unsigned char _3;
  uint32 _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_4(D);
  base_6 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_6
  # DEBUG BEGIN_STMT
  _2 = instance_4(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _8 ={v} base_6->ESR1;
  return _8;

}



;; Function FlexCAN_Ip_GetControllerTxErrorCounter (FlexCAN_Ip_GetControllerTxErrorCounter, funcdef_no=83, decl_uid=11498, cgraph_uid=84, symbol_order=85)

FlexCAN_Ip_GetControllerTxErrorCounter (uint8 instance)
{
  const struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  unsigned char _3;
  long unsigned int _4;
  uint8 _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_5(D);
  base_7 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_7
  # DEBUG BEGIN_STMT
  _2 = instance_5(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 ={v} base_7->ECR;
  _9 = (uint8) _4;
  return _9;

}



;; Function FlexCAN_Ip_GetControllerRxErrorCounter (FlexCAN_Ip_GetControllerRxErrorCounter, funcdef_no=84, decl_uid=11500, cgraph_uid=85, symbol_order=86)

FlexCAN_Ip_GetControllerRxErrorCounter (uint8 instance)
{
  const struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  uint8 _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_6(D);
  base_8 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_8
  # DEBUG BEGIN_STMT
  _2 = instance_6(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 ={v} base_8->ECR;
  _5 = _4 >> 8;
  _10 = (uint8) _5;
  return _10;

}



;; Function FlexCAN_Busoff_Error_IRQHandler (FlexCAN_Busoff_Error_IRQHandler, funcdef_no=85, decl_uid=11547, cgraph_uid=86, symbol_order=87)

FlexCAN_Busoff_Error_IRQHandler (uint8 instance)
{
  boolean isSpuriousInt;
  uint32 u32ErrStatus;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * pBase;
  int _1;
  _Bool _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _7;
  long unsigned int _8;
  long unsigned int _9;
  signed int _10;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _23;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_37(D);
  pBase_39 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_39
  # DEBUG BEGIN_STMT
  state_40 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_40
  # DEBUG BEGIN_STMT
  # DEBUG u32ErrStatus => 0
  # DEBUG BEGIN_STMT
  # DEBUG isSpuriousInt => 1
  # DEBUG BEGIN_STMT
  _2 = instance_37(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  if (state_40 != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 24>; [30.00%]

  <bb 3> [local count: 751619278]:
  # DEBUG BEGIN_STMT
  u32ErrStatus_42 ={v} pBase_39->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_42
  # DEBUG BEGIN_STMT
  _4 = u32ErrStatus_42 & 2;
  if (_4 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [local count: 375809639]:
  _5 ={v} pBase_39->CTRL1;
  _6 = _5 & 16384;
  if (_6 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  pBase_39->ESR1 ={v} 2;
  # DEBUG BEGIN_STMT
  _7 = state_40->error_callback;
  if (_7 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 6> [local count: 131533373]:
  # DEBUG BEGIN_STMT
  _7 (instance_37(D), 9, u32ErrStatus_42, state_40);
  # DEBUG BEGIN_STMT
  u32ErrStatus_45 ={v} pBase_39->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_45

  <bb 7> [local count: 751619278]:
  # u32ErrStatus_24 = PHI <u32ErrStatus_42(3), u32ErrStatus_42(4), u32ErrStatus_45(6), u32ErrStatus_42(5)>
  # isSpuriousInt_28 = PHI <1(3), 1(4), 0(6), 0(5)>
  # DEBUG isSpuriousInt => isSpuriousInt_28
  # DEBUG u32ErrStatus => u32ErrStatus_24
  # DEBUG BEGIN_STMT
  _8 = u32ErrStatus_24 & 1048576;
  if (_8 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 8> [local count: 375809639]:
  _9 ={v} pBase_39->CTRL2;
  _10 = (signed int) _9;
  if (_10 < 0)
    goto <bb 9>; [41.00%]
  else
    goto <bb 11>; [59.00%]

  <bb 9> [local count: 154081952]:
  # DEBUG BEGIN_STMT
  pBase_39->ESR1 ={v} 1048576;
  # DEBUG BEGIN_STMT
  _11 = state_40->error_callback;
  if (_11 != 0B)
    goto <bb 10>; [70.00%]
  else
    goto <bb 11>; [30.00%]

  <bb 10> [local count: 107857366]:
  # DEBUG BEGIN_STMT
  _11 (instance_37(D), 10, u32ErrStatus_24, state_40);
  # DEBUG BEGIN_STMT
  u32ErrStatus_48 ={v} pBase_39->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_48

  <bb 11> [local count: 751619278]:
  # u32ErrStatus_25 = PHI <u32ErrStatus_24(7), u32ErrStatus_24(8), u32ErrStatus_48(10), u32ErrStatus_24(9)>
  # isSpuriousInt_29 = PHI <isSpuriousInt_28(7), isSpuriousInt_28(8), 0(10), 0(9)>
  # DEBUG isSpuriousInt => isSpuriousInt_29
  # DEBUG u32ErrStatus => u32ErrStatus_25
  # DEBUG BEGIN_STMT
  _12 = u32ErrStatus_25 & 131072;
  if (_12 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 12> [local count: 375809639]:
  _13 ={v} pBase_39->CTRL1;
  _14 = _13 & 2048;
  if (_14 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 13> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  pBase_39->ESR1 ={v} 131072;
  # DEBUG BEGIN_STMT
  _15 = state_40->error_callback;
  if (_15 != 0B)
    goto <bb 14>; [70.00%]
  else
    goto <bb 15>; [30.00%]

  <bb 14> [local count: 131533373]:
  # DEBUG BEGIN_STMT
  _15 (instance_37(D), 13, u32ErrStatus_25, state_40);
  # DEBUG BEGIN_STMT
  u32ErrStatus_51 ={v} pBase_39->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_51

  <bb 15> [local count: 751619278]:
  # u32ErrStatus_26 = PHI <u32ErrStatus_25(11), u32ErrStatus_25(12), u32ErrStatus_51(14), u32ErrStatus_25(13)>
  # isSpuriousInt_30 = PHI <isSpuriousInt_29(11), isSpuriousInt_29(12), 0(14), 0(13)>
  # DEBUG isSpuriousInt => isSpuriousInt_30
  # DEBUG u32ErrStatus => u32ErrStatus_26
  # DEBUG BEGIN_STMT
  _16 = u32ErrStatus_26 & 65536;
  if (_16 != 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 16> [local count: 375809639]:
  _17 ={v} pBase_39->CTRL1;
  _18 = _17 & 1024;
  if (_18 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 17> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  pBase_39->ESR1 ={v} 65536;
  # DEBUG BEGIN_STMT
  _19 = state_40->error_callback;
  if (_19 != 0B)
    goto <bb 18>; [70.00%]
  else
    goto <bb 19>; [30.00%]

  <bb 18> [local count: 131533373]:
  # DEBUG BEGIN_STMT
  _19 (instance_37(D), 12, u32ErrStatus_26, state_40);
  # DEBUG BEGIN_STMT
  u32ErrStatus_55 ={v} pBase_39->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_55

  <bb 19> [local count: 751619278]:
  # u32ErrStatus_27 = PHI <u32ErrStatus_26(15), u32ErrStatus_26(16), u32ErrStatus_55(18), u32ErrStatus_26(17)>
  # isSpuriousInt_31 = PHI <isSpuriousInt_30(15), isSpuriousInt_30(16), 0(18), 0(17)>
  # DEBUG isSpuriousInt => isSpuriousInt_31
  # DEBUG u32ErrStatus => u32ErrStatus_27
  # DEBUG BEGIN_STMT
  _20 = u32ErrStatus_27 & 4;
  if (_20 != 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 20> [local count: 375809639]:
  _21 ={v} pBase_39->CTRL1;
  _22 = _21 & 32768;
  if (_22 != 0)
    goto <bb 21>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 21> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  pBase_39->ESR1 ={v} 4;
  # DEBUG BEGIN_STMT
  _23 = state_40->error_callback;
  if (_23 != 0B)
    goto <bb 22>; [70.00%]
  else
    goto <bb 25>; [30.00%]

  <bb 22> [local count: 131533373]:
  # DEBUG BEGIN_STMT
  _23 (instance_37(D), 11, u32ErrStatus_27, state_40);
  goto <bb 25>; [100.00%]

  <bb 23> [local count: 563714459]:
  # DEBUG isSpuriousInt => isSpuriousInt_31
  # DEBUG BEGIN_STMT
  if (isSpuriousInt_31 == 1)
    goto <bb 24>; [34.00%]
  else
    goto <bb 25>; [66.00%]

  <bb 24> [local count: 513785463]:
  # DEBUG isSpuriousInt => NULL
  # DEBUG BEGIN_STMT
  pBase_39->ESR1 ={v} 3866630;

  <bb 25> [local count: 1073741824]:
  # DEBUG isSpuriousInt => NULL
  return;

}



;; Function FlexCAN_Ip_SendBlocking (FlexCAN_Ip_SendBlocking, funcdef_no=86, decl_uid=11468, cgraph_uid=87, symbol_order=88)

FlexCAN_Ip_SendBlocking (uint8 instance, uint8 mb_idx, const struct Flexcan_Ip_DataInfoType * tx_info, uint32 msg_id, const uint8 * mb_data, uint32 timeout_ms)
{
  volatile uint32 * flexcan_mb;
  uint32 flexcan_mb_config;
  uint32 uS2Ticks;
  uint32 mS2Ticks;
  uint32 timeElapsed;
  uint32 timeStart;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType result;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  _Bool _4;
  unsigned char _5;
  _Bool _6;
  unsigned char _7;
  long unsigned int _8;
  long unsigned int _9;
  unsigned char _10;
  int _11;
  <unnamed type> _12;
  long unsigned int _13;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  int _17;
  long unsigned int _50;
  long unsigned int _65;

  <bb 2> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) instance_30(D);
  base_32 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_32
  # DEBUG BEGIN_STMT
  state_33 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_33
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  _3 = timeout_ms_35(D) * 1000;
  mS2Ticks_37 = OsIf_MicrosToTicks (_3, 0);
  # DEBUG mS2Ticks => mS2Ticks_37
  # DEBUG BEGIN_STMT
  # DEBUG uS2Ticks => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb => 0B
  # DEBUG BEGIN_STMT
  _4 = instance_30(D) <= 3;
  _5 = (unsigned char) _4;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  _6 = tx_info_39(D) != 0B;
  _7 = (unsigned char) _6;
  DevAssert (_7);
  # DEBUG BEGIN_STMT
  result_45 = FlexCAN_StartSendData (instance_30(D), mb_idx_41(D), tx_info_39(D), msg_id_42(D), mb_data_43(D));
  # DEBUG result => result_45
  # DEBUG BEGIN_STMT
  if (result_45 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 3> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  _8 = OsIf_GetCounter (0);
  timeStart = _8;
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _50 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_51 = timeElapsed_22 + _50;
  # DEBUG timeElapsed => timeElapsed_51
  # DEBUG BEGIN_STMT
  if (mS2Ticks_37 <= timeElapsed_51)
    goto <bb 6>; [5.50%]
  else
    goto <bb 18>; [94.50%]

  <bb 18> [local count: 958878292]:

  <bb 5> [local count: 1073741824]:
  # timeElapsed_22 = PHI <0(3), timeElapsed_51(18)>
  # DEBUG timeElapsed => timeElapsed_22
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) mb_idx_41(D);
  _10 = FlexCAN_GetBuffStatusFlag (base_32, _9);
  if (_10 != 1)
    goto <bb 4>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 6> [local count: 114863532]:
  # result_18 = PHI <3(4), 0(5)>
  # _2 = PHI <_9(4), _9(5)>
  # DEBUG result => result_18
  # DEBUG BEGIN_STMT
  if (result_18 == 3)
    goto <bb 7>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 7> [local count: 39053601]:
  _11 = (int) mb_idx_41(D);
  _12 ={v} state_33->mbs[_11].state;
  if (_12 != 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 8> [local count: 12887688]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_32, _2);
  # DEBUG BEGIN_STMT
  flexcan_mb_54 = FlexCAN_GetMsgBuffRegion (base_32, _2);
  # DEBUG flexcan_mb => flexcan_mb_54
  # DEBUG BEGIN_STMT
  flexcan_mb_config_55 ={v} *flexcan_mb_54;
  # DEBUG flexcan_mb_config => flexcan_mb_config_55
  # DEBUG BEGIN_STMT
  flexcan_mb_config_56 = flexcan_mb_config_55 & 4043309055;
  # DEBUG flexcan_mb_config => flexcan_mb_config_56
  # DEBUG BEGIN_STMT
  flexcan_mb_config_57 = flexcan_mb_config_56 | 150994944;
  # DEBUG flexcan_mb_config => flexcan_mb_config_57
  # DEBUG BEGIN_STMT
  *flexcan_mb_54 ={v} flexcan_mb_config_57;
  # DEBUG BEGIN_STMT
  uS2Ticks_60 = OsIf_MicrosToTicks (1000000, 0);
  # DEBUG uS2Ticks => uS2Ticks_60
  # DEBUG BEGIN_STMT
  _13 = OsIf_GetCounter (0);
  timeStart = _13;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 113847772]:
  # DEBUG BEGIN_STMT
  _65 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_66 = timeElapsed_23 + _65;
  # DEBUG timeElapsed => timeElapsed_66
  # DEBUG BEGIN_STMT
  if (uS2Ticks_60 <= timeElapsed_66)
    goto <bb 11>; [5.50%]
  else
    goto <bb 17>; [94.50%]

  <bb 17> [local count: 107586144]:

  <bb 10> [local count: 120473832]:
  # timeElapsed_23 = PHI <0(8), timeElapsed_66(17)>
  # DEBUG timeElapsed => timeElapsed_23
  # DEBUG BEGIN_STMT
  _14 = FlexCAN_GetBuffStatusFlag (base_32, _2);
  if (_14 == 0)
    goto <bb 9>; [94.50%]
  else
    goto <bb 11>; [5.50%]

  <bb 11> [local count: 12887688]:
  # DEBUG result => 3
  # DEBUG BEGIN_STMT
  flexcan_mb_config_67 ={v} *flexcan_mb_54;
  # DEBUG flexcan_mb_config => flexcan_mb_config_67
  # DEBUG BEGIN_STMT
  _15 = flexcan_mb_config_67 >> 24;
  _16 = _15 & 15;
  if (_16 == 8)
    goto <bb 12>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 12> [local count: 4381814]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0

  <bb 13> [local count: 12887688]:
  # result_19 = PHI <3(11), 0(12)>
  # DEBUG result => result_19
  # DEBUG BEGIN_STMT
  if (_16 == 9)
    goto <bb 14>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 14> [local count: 4381814]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 3

  <bb 15> [local count: 114863532]:
  # result_20 = PHI <result_18(6), 3(7), result_19(13), 3(14)>
  # DEBUG result => result_20
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_32, _2);
  # DEBUG BEGIN_STMT
  _17 = (int) mb_idx_41(D);
  state_33->mbs[_17].state ={v} 0;

  <bb 16> [local count: 348071309]:
  # result_21 = PHI <result_45(2), result_20(15)>
  # DEBUG result => result_21
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  return result_21;

}



;; Function FlexCAN_Ip_SetRxMbGlobalMask_Privileged (FlexCAN_Ip_SetRxMbGlobalMask_Privileged, funcdef_no=87, decl_uid=11428, cgraph_uid=88, symbol_order=89)

FlexCAN_Ip_SetRxMbGlobalMask_Privileged (uint8 instance, uint32 mask)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  unsigned char _3;
  long unsigned int _21;
  signed int _22;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_10(D);
  pBase_12 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_12
  # DEBUG BEGIN_STMT
  # DEBUG freeze => 0
  # DEBUG BEGIN_STMT
  _2 = instance_10(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_12
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _21 ={v} MEM[(const struct FLEXCAN_Type *)pBase_12].MCR;
  _22 = (signed int) _21;
  # DEBUG pBase => NULL
  # DEBUG D#3 => _22 < 0
  # DEBUG disabled => (boolean) D#3
  # DEBUG BEGIN_STMT
  if (_22 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_12);
  # DEBUG result => result_15

  <bb 4> [local count: 1073741823]:
  # result_4 = PHI <0(2), result_15(3)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  freeze_17 = FlexCAN_IsFreezeMode (pBase_12);
  # DEBUG freeze => freeze_17
  # DEBUG BEGIN_STMT
  if (freeze_17 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870911]:
  if (result_4 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306368]:
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  if (result_4 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 402653184]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_12
  # DEBUG Mask => mask_18(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetRxMsgBuffGlobalMask
  # DEBUG BEGIN_STMT
  pBase_12->RXMGMASK ={v} mask_18(D);

  <bb 8> [local count: 1073741823]:
  # result_9 = PHI <result_4(6), 0(7), 1(5)>
  # DEBUG result => NULL
  # DEBUG base => NULL
  # DEBUG Mask => NULL
  # DEBUG BEGIN_STMT
  if (_22 < 0)
    goto <bb 9>; [25.50%]
  else
    goto <bb 11>; [74.50%]

  <bb 9> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_20 = FlexCAN_Disable (pBase_12);
  # DEBUG status => status_20
  # DEBUG BEGIN_STMT
  if (status_20 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_20

  <bb 11> [local count: 1073741824]:
  # result_5 = PHI <result_9(8), result_9(9), status_20(10)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_EnterFreezeMode_Privileged (FlexCAN_Ip_EnterFreezeMode_Privileged, funcdef_no=88, decl_uid=11401, cgraph_uid=89, symbol_order=90)

FlexCAN_Ip_EnterFreezeMode_Privileged (uint8 instance)
{
  struct FLEXCAN_Type * base;
  int _1;
  Flexcan_Ip_StatusType _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_2(D);
  base_4 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_4
  # DEBUG BEGIN_STMT
  _6 = FlexCAN_EnterFreezeMode (base_4);
  return _6;

}



;; Function FlexCAN_Ip_ExitFreezeMode_Privileged (FlexCAN_Ip_ExitFreezeMode_Privileged, funcdef_no=89, decl_uid=11403, cgraph_uid=90, symbol_order=91)

FlexCAN_Ip_ExitFreezeMode_Privileged (uint8 instance)
{
  struct FLEXCAN_Type * base;
  int _1;
  Flexcan_Ip_StatusType _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_2(D);
  base_4 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_4
  # DEBUG BEGIN_STMT
  _6 = FlexCAN_ExitFreezeMode (base_4);
  return _6;

}



;; Function FlexCAN_Ip_SetRxIndividualMask_Privileged (FlexCAN_Ip_SetRxIndividualMask_Privileged, funcdef_no=90, decl_uid=11425, cgraph_uid=91, symbol_order=92)

FlexCAN_Ip_SetRxIndividualMask_Privileged (uint8 instance, uint8 mb_idx, uint32 mask)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  int _1;
  _Bool _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _25;
  signed int _26;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_13(D);
  pBase_15 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_15
  # DEBUG BEGIN_STMT
  # DEBUG freeze => 0
  # DEBUG BEGIN_STMT
  _2 = instance_13(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = (long unsigned int) mb_idx_17(D);
  _5 ={v} pBase_15->MCR;
  _6 = _5 & 127;
  if (_4 > _6)
    goto <bb 13>; [35.00%]
  else
    goto <bb 3>; [65.00%]

  <bb 3> [local count: 697932185]:
  if (mb_idx_17(D) > 63)
    goto <bb 13>; [35.00%]
  else
    goto <bb 4>; [65.00%]

  <bb 4> [local count: 453655920]:
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_15
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _25 ={v} MEM[(const struct FLEXCAN_Type *)pBase_15].MCR;
  _26 = (signed int) _25;
  # DEBUG pBase => NULL
  # DEBUG D#4 => _26 < 0
  # DEBUG disabled => (boolean) D#4
  # DEBUG BEGIN_STMT
  if (_26 < 0)
    goto <bb 5>; [25.50%]
  else
    goto <bb 6>; [74.50%]

  <bb 5> [local count: 115682260]:
  # DEBUG BEGIN_STMT
  result_19 = FlexCAN_Enable (pBase_15);
  # DEBUG result => result_19

  <bb 6> [local count: 453655920]:
  # result_7 = PHI <0(4), result_19(5)>
  # DEBUG result => result_7
  # DEBUG BEGIN_STMT
  freeze_21 = FlexCAN_IsFreezeMode (pBase_15);
  # DEBUG freeze => freeze_21
  # DEBUG BEGIN_STMT
  if (freeze_21 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 226827960]:
  if (result_7 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 340241940]:
  # DEBUG result => result_7
  # DEBUG BEGIN_STMT
  if (result_7 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 170120970]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_15
  # DEBUG msgBuffIdx => _4
  # DEBUG mask => mask_22(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetRxIndividualMask
  # DEBUG BEGIN_STMT
  pBase_15->RXIMR[_4] ={v} mask_22(D);

  <bb 10> [local count: 453655920]:
  # result_12 = PHI <result_7(8), 0(9), 1(7)>
  # DEBUG result => NULL
  # DEBUG base => NULL
  # DEBUG msgBuffIdx => NULL
  # DEBUG mask => NULL
  # DEBUG BEGIN_STMT
  if (_26 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 115682260]:
  # DEBUG BEGIN_STMT
  status_24 = FlexCAN_Disable (pBase_15);
  # DEBUG status => status_24
  # DEBUG BEGIN_STMT
  if (status_24 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 57841130]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_24

  <bb 13> [local count: 1073741824]:
  # result_8 = PHI <4(3), result_12(10), result_12(11), status_24(12), 4(2)>
  # DEBUG result => result_8
  # DEBUG BEGIN_STMT
  return result_8;

}



;; Function FlexCAN_Ip_SetRxFifoGlobalMask_Privileged (FlexCAN_Ip_SetRxFifoGlobalMask_Privileged, funcdef_no=91, decl_uid=11406, cgraph_uid=92, symbol_order=93)

FlexCAN_Ip_SetRxFifoGlobalMask_Privileged (uint8 instance, uint32 mask)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _21;
  signed int _22;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = instance_9(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_9(D);
  pBase_13 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_13
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _21 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _22 = (signed int) _21;
  # DEBUG pBase => NULL
  # DEBUG D#5 => _22 < 0
  # DEBUG disabled => (boolean) D#5
  # DEBUG BEGIN_STMT
  if (_22 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_13);
  # DEBUG result => result_15

  <bb 4> [local count: 1073741823]:
  # result_4 = PHI <0(2), result_15(3)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  freeze_17 = FlexCAN_IsFreezeMode (pBase_13);
  # DEBUG freeze => freeze_17
  # DEBUG BEGIN_STMT
  if (freeze_17 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870911]:
  if (result_4 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306368]:
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  if (result_4 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 402653184]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_13
  # DEBUG Mask => mask_18(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetRxFifoGlobalMask
  # DEBUG BEGIN_STMT
  pBase_13->RXFGMASK ={v} mask_18(D);

  <bb 8> [local count: 1073741823]:
  # result_12 = PHI <result_4(6), 0(7), 1(5)>
  # DEBUG result => NULL
  # DEBUG base => NULL
  # DEBUG Mask => NULL
  # DEBUG BEGIN_STMT
  if (_22 < 0)
    goto <bb 9>; [25.50%]
  else
    goto <bb 11>; [74.50%]

  <bb 9> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_20 = FlexCAN_Disable (pBase_13);
  # DEBUG status => status_20
  # DEBUG BEGIN_STMT
  if (status_20 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_20

  <bb 11> [local count: 1073741824]:
  # result_5 = PHI <result_12(8), result_12(9), status_20(10)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_Deinit_Privileged (FlexCAN_Ip_Deinit_Privileged, funcdef_no=92, decl_uid=11408, cgraph_uid=93, symbol_order=94)


Symbols to be put in SSA form
{ D.13886 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 11
Number of blocks to update: 10 ( 91%)


Removing basic block 3
Merging blocks 10 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 8 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
FlexCAN_Ip_Deinit_Privileged (uint8 instance)
{
  Flexcan_Ip_StatusType result;
  struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  unsigned char _3;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_5(D);
  base_7 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_7
  # DEBUG BEGIN_STMT
  # DEBUG result => 1
  # DEBUG BEGIN_STMT
  _2 = instance_5(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  result_10 = FlexCAN_EnterFreezeMode (base_7);
  # DEBUG result => result_10
  # DEBUG BEGIN_STMT
  if (result_10 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_7
  # DEBUG INLINE_ENTRY FlexCAN_SetRegDefaultVal
  # DEBUG BEGIN_STMT
  _14 = FlexCAN_IsEnhancedRxFifoAvailable (base_7);
  if (_14 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 4> [local count: 120473833]:
  # DEBUG BEGIN_STMT
  base_7->ERFSR ={v} 4160749568;
  # DEBUG BEGIN_STMT
  base_7->ERFIER ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->ERFCR ={v} 0;

  <bb 5> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  base_7->FDCBT ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->FDCTRL ={v} 2147500288;
  # DEBUG BEGIN_STMT
  base_7->ERRSR ={v} 851981;
  # DEBUG BEGIN_STMT
  base_7->ERRIPPR ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->ERRIDPR ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->ERRIAR ={v} 0;
  # DEBUG BEGIN_STMT
  _15 ={v} base_7->CTRL2;
  _16 = _15 | 536870912;
  base_7->CTRL2 ={v} _16;
  # DEBUG BEGIN_STMT
  _17 ={v} base_7->MECR;
  _18 = _17 & 2147483647;
  base_7->MECR ={v} _18;
  # DEBUG BEGIN_STMT
  base_7->MECR ={v} 786560;
  # DEBUG BEGIN_STMT
  _19 ={v} base_7->MECR;
  _20 = _19 | 2147483648;
  base_7->MECR ={v} _20;
  # DEBUG BEGIN_STMT
  _21 ={v} base_7->CTRL2;
  _22 = _21 & 3758096383;
  base_7->CTRL2 ={v} _22;
  # DEBUG BEGIN_STMT
  _23 = FlexCAN_GetMaxMbNum (base_7);
  if (_23 > 32)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  base_7->IFLAG2 ={v} 4294967295;
  # DEBUG BEGIN_STMT
  base_7->IMASK2 ={v} 0;

  <bb 7> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  base_7->IFLAG1 ={v} 4294967295;
  # DEBUG BEGIN_STMT
  base_7->IMASK1 ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->CBT ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->CTRL2 ={v} 1048576;
  # DEBUG BEGIN_STMT
  base_7->ESR1 ={v} 241670;
  # DEBUG BEGIN_STMT
  base_7->ECR ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->TIMER ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->CTRL1 ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->EPRS ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->ENCBT ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->EDCBT ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->ETDC ={v} 0;
  # DEBUG BEGIN_STMT
  base_7->MCR ={v} 3633315855;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  FlexCAN_Disable (base_7);
  # DEBUG BEGIN_STMT
  Flexcan_Ip_apxState[_1] = 0B;

  <bb 8> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return result_10;

}



;; Function FlexCAN_Ip_MainFunctionRead (FlexCAN_Ip_MainFunctionRead, funcdef_no=93, decl_uid=11488, cgraph_uid=94, symbol_order=95)

FlexCAN_Ip_MainFunctionRead (uint8 instance, uint8 mb_idx)
{
  uint32 flag;
  const struct Flexcan_Ip_StateType * state;
  const struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  unsigned char _3;
  unsigned char _4;
  _Bool _5;
  unsigned char _6;
  unsigned char _7;
  unsigned char _8;
  long unsigned int _9;
  unsigned char _10;
  int _11;
  <unnamed type> _12;
  long unsigned int _26;
  signed int _27;
  long unsigned int _28;
  long unsigned int _29;
  unsigned char _30;
  long unsigned int _31;
  long unsigned int _33;
  long unsigned int _34;
  unsigned char _35;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_14(D);
  base_16 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_16
  # DEBUG BEGIN_STMT
  state_17 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_17
  # DEBUG BEGIN_STMT
  _2 = instance_14(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = mb_idx_19(D) + 192;
  _5 = _4 > 190;
  _6 = (unsigned char) _5;
  DevAssert (_6);
  # DEBUG BEGIN_STMT
  if (mb_idx_19(D) == 255)
    goto <bb 3>; [20.24%]
  else
    goto <bb 7>; [79.76%]

  <bb 3> [local count: 217325345]:
  # DEBUG BEGIN_STMT
  _7 = FlexCAN_IsEnhancedRxFifoAvailable (base_16);
  if (_7 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 4> [local count: 73890617]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_16
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhancedRxFifoEnabled
  # DEBUG BEGIN_STMT
  _26 ={v} base_16->ERFCR;
  _27 = (signed int) _26;
  if (_27 < 0)
    goto <bb 5>; [41.00%]
  else
    goto <bb 15>; [59.00%]

  <bb 5> [local count: 30295153]:
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => base_16
  # DEBUG intFlag => 28
  # DEBUG INLINE_ENTRY FlexCAN_GetEnhancedRxFIFOStatusFlag
  # DEBUG BEGIN_STMT
  _28 ={v} base_16->ERFSR;
  _33 = _28 >> 28;
  _29 = _33 & 1;
  _30 = (unsigned char) _29;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  if (_30 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 6> [local count: 9997401]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerEnhancedRxFIFO (instance_14(D), 28);
  goto <bb 15>; [100.00%]

  <bb 7> [local count: 856416478]:
  # DEBUG BEGIN_STMT
  _8 = state_17->bIsLegacyFifoEn;
  if (_8 == 1)
    goto <bb 8>; [51.12%]
  else
    goto <bb 12>; [48.88%]

  <bb 8> [local count: 437800103]:
  if (mb_idx_19(D) <= 7)
    goto <bb 9>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 9> [local count: 218900052]:
  # DEBUG BEGIN_STMT
  if (mb_idx_19(D) == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 10> [local count: 109450026]:
  # DEBUG BEGIN_STMT
  # DEBUG base => base_16
  # DEBUG msgBuffIdx => 5
  # DEBUG INLINE_ENTRY FlexCAN_GetBuffStatusFlag
  # DEBUG BEGIN_STMT
  # DEBUG flag => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 ={v} base_16->IFLAG1;
  _34 = _31 >> 5;
  flag_32 = _34 & 1;
  # DEBUG flag => flag_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _35 = (unsigned char) flag_32;
  # DEBUG base => NULL
  # DEBUG msgBuffIdx => NULL
  # DEBUG flag => NULL
  if (_35 != 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 11> [local count: 36118509]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxFIFO (instance_14(D), 5);
  goto <bb 15>; [100.00%]

  <bb 12> [local count: 637516427]:
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) mb_idx_19(D);
  _10 = FlexCAN_GetBuffStatusFlag (base_16, _9);
  if (_10 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 13> [local count: 318758213]:
  # DEBUG BEGIN_STMT
  _11 = (int) mb_idx_19(D);
  _12 ={v} state_17->mbs[_11].state;
  if (_12 == 1)
    goto <bb 14>; [20.24%]
  else
    goto <bb 15>; [79.76%]

  <bb 14> [local count: 64516662]:
  # DEBUG BEGIN_STMT
  FlexCAN_IRQHandlerRxMB (instance_14(D), _9);

  <bb 15> [local count: 1073741824]:
  # DEBUG base => NULL
  return;

}



;; Function FlexCAN_Ip_MainFunctionBusOff_Privileged (FlexCAN_Ip_MainFunctionBusOff_Privileged, funcdef_no=94, decl_uid=11395, cgraph_uid=95, symbol_order=96)

FlexCAN_Ip_MainFunctionBusOff_Privileged (uint8 instance)
{
  uint32 u32ErrStatus;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  Flexcan_Ip_StatusType eRetVal;
  int _1;
  _Bool _2;
  unsigned char _3;
  long unsigned int _4;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG eRetVal => 1
  # DEBUG BEGIN_STMT
  _1 = (int) instance_9(D);
  base_11 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_11
  # DEBUG BEGIN_STMT
  state_12 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_12
  # DEBUG BEGIN_STMT
  # DEBUG u32ErrStatus => 0
  # DEBUG BEGIN_STMT
  _2 = instance_9(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  u32ErrStatus_14 ={v} base_11->ESR1;
  # DEBUG u32ErrStatus => u32ErrStatus_14
  # DEBUG BEGIN_STMT
  _4 = u32ErrStatus_14 & 4;
  if (_4 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _5 = state_12->error_callback;
  if (_5 != 0B)
    goto <bb 4>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 4> [local count: 375809639]:
  # DEBUG BEGIN_STMT
  _5 (instance_9(D), 11, u32ErrStatus_14, state_12);

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  base_11->ESR1 ={v} 4;
  # DEBUG BEGIN_STMT
  # DEBUG eRetVal => 0

  <bb 6> [local count: 1073741824]:
  # eRetVal_6 = PHI <1(2), 0(5)>
  # DEBUG eRetVal => eRetVal_6
  # DEBUG BEGIN_STMT
  return eRetVal_6;

}



;; Function FlexCAN_Ip_MainFunctionWrite (FlexCAN_Ip_MainFunctionWrite, funcdef_no=95, decl_uid=11491, cgraph_uid=96, symbol_order=97)

FlexCAN_Ip_MainFunctionWrite (uint8 instance, uint8 mb_idx)
{
  struct Flexcan_Ip_MsgBuffType mb;
  struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * base;
  int _1;
  _Bool _2;
  unsigned char _3;
  long unsigned int _4;
  unsigned char _5;
  int _6;
  <unnamed type> _7;
  unsigned char _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  void (*<Tb92>) (uint8, Flexcan_Ip_EventType, uint32, const struct FlexCANState *) _14;
  long unsigned int vol.6_35;
  long unsigned int vol.6_36;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_18(D);
  base_20 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_20
  # DEBUG BEGIN_STMT
  state_21 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_21
  # DEBUG BEGIN_STMT
  _2 = instance_18(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = (long unsigned int) mb_idx_23(D);
  _5 = FlexCAN_GetBuffStatusFlag (base_20, _4);
  if (_5 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 = (int) mb_idx_23(D);
  _7 ={v} state_21->mbs[_6].state;
  if (_7 == 2)
    goto <bb 4>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 4> [local count: 182536110]:
  # DEBUG BEGIN_STMT
  _8 = state_21->mbs[_6].isRemote;
  if (_8 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 91268055]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  FlexCAN_LockRxMsgBuff (base_20, _4);
  # DEBUG BEGIN_STMT
  FlexCAN_GetMsgBuff (base_20, _4, &mb);
  # DEBUG BEGIN_STMT
  # DEBUG base => base_20
  # DEBUG INLINE_ENTRY FlexCAN_UnlockRxMsgBuff
  # DEBUG BEGIN_STMT
  vol.6_35 ={v} MEM[(const struct FLEXCAN_Type *)base_20].TIMER;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  _9 = mb.time_stamp;
  state_21->mbs[_6].time_stamp = _9;
  # DEBUG BEGIN_STMT
  _10 = mb.cs;
  _11 = _10 >> 24;
  _12 = _11 & 15;
  if (_12 == 4)
    goto <bb 6>; [20.24%]
  else
    goto <bb 7>; [79.76%]

  <bb 6> [local count: 18472654]:
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_20, _4);

  <bb 7> [local count: 91268055]:
  mb ={v} {CLOBBER};
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 91268055]:
  # DEBUG BEGIN_STMT
  _13 = FlexCAN_GetMsgBuffTimestamp (base_20, _4);
  state_21->mbs[_6].time_stamp = _13;
  # DEBUG BEGIN_STMT
  # DEBUG base => base_20
  # DEBUG INLINE_ENTRY FlexCAN_UnlockRxMsgBuff
  # DEBUG BEGIN_STMT
  vol.6_36 ={v} MEM[(const struct FLEXCAN_Type *)base_20].TIMER;
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (base_20, _4);

  <bb 9> [local count: 182536110]:
  # DEBUG BEGIN_STMT
  state_21->mbs[_6].state ={v} 0;
  # DEBUG BEGIN_STMT
  _14 = state_21->callback;
  if (_14 != 0B)
    goto <bb 10>; [70.00%]
  else
    goto <bb 11>; [30.00%]

  <bb 10> [local count: 127775277]:
  # DEBUG BEGIN_STMT
  _14 (instance_18(D), 4, _4, state_21);

  <bb 11> [local count: 1073741824]:
  return;

}



;; Function FlexCAN_Ip_GetStopMode_Privileged (FlexCAN_Ip_GetStopMode_Privileged, funcdef_no=96, decl_uid=11397, cgraph_uid=97, symbol_order=98)

FlexCAN_Ip_GetStopMode_Privileged (uint8 instance)
{
  const struct FLEXCAN_Type * base;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  boolean iftmp.9_4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_5(D);
  base_7 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_7
  # DEBUG BEGIN_STMT
  _2 ={v} base_7->MCR;
  _3 = _2 & 1048576;
  if (_3 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.9_4 = PHI <1(2), 0(3)>
  return iftmp.9_4;

}



;; Function FlexCAN_Ip_GetStartMode_Privileged (FlexCAN_Ip_GetStartMode_Privileged, funcdef_no=97, decl_uid=11399, cgraph_uid=98, symbol_order=99)

FlexCAN_Ip_GetStartMode_Privileged (uint8 instance)
{
  const struct FLEXCAN_Type * base;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  boolean iftmp.10_4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_5(D);
  base_7 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_7
  # DEBUG BEGIN_STMT
  _2 ={v} base_7->MCR;
  _3 = _2 & 17825792;
  if (_3 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.10_4 = PHI <1(2), 0(3)>
  return iftmp.10_4;

}



;; Function FlexCAN_Ip_SetStartMode_Privileged (FlexCAN_Ip_SetStartMode_Privileged, funcdef_no=98, decl_uid=11410, cgraph_uid=99, symbol_order=100)

FlexCAN_Ip_SetStartMode_Privileged (uint8 instance)
{
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  Flexcan_Ip_StatusType _14;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_6(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) instance_6(D);
  pBase_9 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_9
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_07 ();
  # DEBUG BEGIN_STMT
  _4 ={v} pBase_9->MCR;
  _5 = _4 & 2147483647;
  pBase_9->MCR ={v} _5;
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_07 ();
  # DEBUG BEGIN_STMT
  _14 = FlexCAN_ExitFreezeMode (pBase_9);
  return _14;

}



;; Function FlexCAN_Ip_SetStopMode_Privileged (FlexCAN_Ip_SetStopMode_Privileged, funcdef_no=99, decl_uid=11412, cgraph_uid=100, symbol_order=101)

FlexCAN_Ip_SetStopMode_Privileged (uint8 instance)
{
  Flexcan_Ip_StatusType status;
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  unsigned char _2;
  int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_6(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) instance_6(D);
  pBase_9 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  status_11 = FlexCAN_EnterFreezeMode (pBase_9);
  # DEBUG status => status_11
  # DEBUG BEGIN_STMT
  if (status_11 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  status_13 = FlexCAN_Disable (pBase_9);
  # DEBUG status => status_13

  <bb 4> [local count: 1073741824]:
  # status_4 = PHI <status_11(2), status_13(3)>
  # DEBUG status => status_4
  # DEBUG BEGIN_STMT
  return status_4;

}



;; Function FlexCAN_Ip_SetRxMaskType_Privileged (FlexCAN_Ip_SetRxMaskType_Privileged, funcdef_no=100, decl_uid=11415, cgraph_uid=101, symbol_order=102)


Symbols to be put in SSA form
{ D.13894 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 17
Number of blocks to update: 16 ( 94%)


Merging blocks 7 and 13
Merging blocks 16 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 11 6 }
;; 6 succs { 7 11 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
FlexCAN_Ip_SetRxMaskType_Privileged (uint8 instance, Flexcan_Ip_RxMaskType type)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _24;
  signed int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_9(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_9(D);
  pBase_13 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_13
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _24 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _25 = (signed int) _24;
  # DEBUG pBase => NULL
  # DEBUG D#6 => _25 < 0
  # DEBUG disabled => (boolean) D#6
  # DEBUG BEGIN_STMT
  if (_25 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_13);
  # DEBUG result => result_15

  <bb 4> [local count: 1073741824]:
  # result_4 = PHI <0(2), result_15(3)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  freeze_17 = FlexCAN_IsFreezeMode (pBase_13);
  # DEBUG freeze => freeze_17
  # DEBUG BEGIN_STMT
  if (freeze_17 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  if (result_4 == 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306369]:
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  if (result_4 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 7> [local count: 265751101]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_08 ();
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_13
  # DEBUG type => type_19(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetRxMaskType
  # DEBUG BEGIN_STMT
  if (type_19(D) == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 132875551]:
  # DEBUG BEGIN_STMT
  _26 ={v} pBase_13->MCR;
  _27 = _26 & 4294901759;
  pBase_13->MCR ={v} _27;
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 132875551]:
  # DEBUG BEGIN_STMT
  _28 ={v} pBase_13->MCR;
  _29 = _28 | 65536;
  pBase_13->MCR ={v} _29;

  <bb 10> [local count: 265751101]:
  # DEBUG base => NULL
  # DEBUG type => NULL
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_08 ();

  <bb 11> [local count: 1073741824]:
  # result_12 = PHI <result_4(6), 0(10), 1(5)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_25 < 0)
    goto <bb 12>; [25.50%]
  else
    goto <bb 14>; [74.50%]

  <bb 12> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_23 = FlexCAN_Disable (pBase_13);
  # DEBUG status => status_23
  # DEBUG BEGIN_STMT
  if (status_23 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_23

  <bb 14> [local count: 1073741823]:
  # result_5 = PHI <result_12(11), result_12(12), status_23(13)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_SetBitrate_Privileged (FlexCAN_Ip_SetBitrate_Privileged, funcdef_no=101, decl_uid=11432, cgraph_uid=102, symbol_order=103)


Symbols to be put in SSA form
{ D.13895 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 21
Number of blocks to update: 20 ( 95%)


Merging blocks 7 and 18
Merging blocks 20 and 17
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 15 6 }
;; 6 succs { 7 15 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 14 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 1 }
FlexCAN_Ip_SetBitrate_Privileged (uint8 instance, const struct Flexcan_Ip_TimeSegmentType * bitrate, boolean enhExt)
{
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  _Bool _3;
  unsigned char _4;
  int _5;
  long unsigned int _6;
  signed int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _34;
  signed int _35;
  unsigned char iftmp.11_36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int iftmp.13_39;
  long unsigned int _40;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_16(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = bitrate_19(D) != 0B;
  _4 = (unsigned char) _3;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _5 = (int) instance_16(D);
  pBase_21 = Flexcan_Ip_apxBase[_5];
  # DEBUG pBase => pBase_21
  # DEBUG BEGIN_STMT
  _6 ={v} pBase_21->MCR;
  _7 = (signed int) _6;
  if (_7 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG disabled => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  result_23 = FlexCAN_Enable (pBase_21);
  # DEBUG result => result_23

  <bb 4> [local count: 1073741824]:
  # result_10 = PHI <0(2), result_23(3)>
  # iftmp.11_36 = PHI <0(2), 1(3)>
  # DEBUG disabled => NULL
  # DEBUG result => result_10
  # DEBUG BEGIN_STMT
  _8 ={v} pBase_21->MCR;
  _9 = _8 & 16777216;
  if (_9 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG freeze => 0
  # DEBUG BEGIN_STMT
  if (result_10 == 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306369]:
  # DEBUG freeze => NULL
  # DEBUG result => result_10
  # DEBUG BEGIN_STMT
  if (result_10 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 7> [local count: 265751101]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_14 ();
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_21
  # DEBUG enableCBT => enhExt_25(D)
  # DEBUG INLINE_ENTRY FlexCAN_EnhCbtEnable
  # DEBUG BEGIN_STMT
  _37 ={v} pBase_21->CTRL2;
  _38 = _37 & 4294959103;
  if (enhExt_25(D) != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 132875551]:

  <bb 9> [local count: 265751101]:
  # iftmp.13_39 = PHI <8192(7), 0(8)>
  _40 = _38 | iftmp.13_39;
  pBase_21->CTRL2 ={v} _40;
  # DEBUG base => NULL
  # DEBUG enableCBT => NULL
  # DEBUG BEGIN_STMT
  if (enhExt_25(D) == 1)
    goto <bb 10>; [20.24%]
  else
    goto <bb 11>; [79.76%]

  <bb 10> [local count: 53788023]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetEnhancedNominalTimeSegments (pBase_21, bitrate_19(D));
  goto <bb 14>; [100.00%]

  <bb 11> [local count: 211963079]:
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_21
  # DEBUG INLINE_ENTRY FlexCAN_IsExCbtEnabled
  # DEBUG BEGIN_STMT
  _34 ={v} MEM[(const struct FLEXCAN_Type *)pBase_21].CBT;
  _35 = (signed int) _34;
  # DEBUG pBase => NULL
  if (_35 < 0)
    goto <bb 12>; [41.00%]
  else
    goto <bb 13>; [59.00%]

  <bb 12> [local count: 86904862]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetExtendedTimeSegments (pBase_21, bitrate_19(D));
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 125058216]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetTimeSegments (pBase_21, bitrate_19(D));

  <bb 14> [local count: 265751102]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_14 ();

  <bb 15> [local count: 1073741824]:
  # result_27 = PHI <result_10(6), 0(14), 1(5)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (iftmp.11_36 == 1)
    goto <bb 16>; [20.24%]
  else
    goto <bb 18>; [79.76%]

  <bb 16> [local count: 217325345]:
  # DEBUG BEGIN_STMT
  status_33 = FlexCAN_Disable (pBase_21);
  # DEBUG status => status_33
  # DEBUG BEGIN_STMT
  if (status_33 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [local count: 108662673]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_33

  <bb 18> [local count: 1073741824]:
  # result_11 = PHI <result_27(15), result_27(16), status_33(17)>
  # DEBUG result => result_11
  # DEBUG BEGIN_STMT
  return result_11;

}



;; Function FlexCAN_Ip_GetBitrate (FlexCAN_Ip_GetBitrate, funcdef_no=102, decl_uid=11506, cgraph_uid=103, symbol_order=104)


Symbols to be put in SSA form
{ D.13896 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


Removing basic block 3
Removing basic block 5
Removing basic block 6
Removing basic block 8
Removing basic block 10
Removing basic block 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
FlexCAN_Ip_GetBitrate (uint8 instance, struct Flexcan_Ip_TimeSegmentType * bitrate)
{
  const struct FLEXCAN_Type * pBase;
  _Bool _1;
  unsigned char _2;
  _Bool _3;
  unsigned char _4;
  int _5;
  long unsigned int _16;
  long unsigned int _17;
  _Bool _18;
  unsigned char _19;
  long unsigned int _20;
  signed int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_7(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = bitrate_10(D) != 0B;
  _4 = (unsigned char) _3;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  _5 = (int) instance_7(D);
  pBase_12 = Flexcan_Ip_apxBase[_5];
  # DEBUG pBase => pBase_12
  # DEBUG BEGIN_STMT
  # DEBUG enhCbt => 0
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_12
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhCbtEnabled
  # DEBUG BEGIN_STMT
  _16 ={v} pBase_12->CTRL2;
  _17 = _16 & 8192;
  _18 = _17 != 0;
  _19 = (unsigned char) _18;
  # DEBUG pBase => NULL
  # DEBUG enhCbt => _19
  # DEBUG BEGIN_STMT
  if (_17 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_12
  # DEBUG timeSeg => bitrate_10(D)
  # DEBUG INLINE_ENTRY FlexCAN_GetEnhancedNominalTimeSegments
  # DEBUG BEGIN_STMT
  bitrate_10(D)->propSeg = 0;
  # DEBUG BEGIN_STMT
  _22 ={v} pBase_12->EPRS;
  _23 = _22 & 1023;
  bitrate_10(D)->preDivider = _23;
  # DEBUG BEGIN_STMT
  _24 ={v} pBase_12->ENCBT;
  _25 = _24 & 255;
  bitrate_10(D)->phaseSeg1 = _25;
  # DEBUG BEGIN_STMT
  _26 ={v} pBase_12->ENCBT;
  _27 = _26 >> 12;
  _28 = _27 & 127;
  bitrate_10(D)->phaseSeg2 = _28;
  # DEBUG BEGIN_STMT
  _29 ={v} pBase_12->ENCBT;
  _30 = _29 >> 22;
  _31 = _30 & 127;
  bitrate_10(D)->rJumpwidth = _31;
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_12
  # DEBUG INLINE_ENTRY FlexCAN_IsExCbtEnabled
  # DEBUG BEGIN_STMT
  _20 ={v} pBase_12->CBT;
  _21 = (signed int) _20;
  # DEBUG pBase => NULL
  if (_21 < 0)
    goto <bb 5>; [41.00%]
  else
    goto <bb 6>; [59.00%]

  <bb 5> [local count: 294956879]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_12
  # DEBUG timeSeg => bitrate_10(D)
  # DEBUG INLINE_ENTRY FlexCAN_GetExtendedTimeSegments
  # DEBUG BEGIN_STMT
  _32 ={v} pBase_12->CBT;
  _33 = _32 >> 21;
  _34 = _33 & 1023;
  bitrate_10(D)->preDivider = _34;
  # DEBUG BEGIN_STMT
  _35 ={v} pBase_12->CBT;
  _36 = _35 >> 10;
  _37 = _36 & 63;
  bitrate_10(D)->propSeg = _37;
  # DEBUG BEGIN_STMT
  _38 ={v} pBase_12->CBT;
  _39 = _38 >> 5;
  _40 = _39 & 31;
  bitrate_10(D)->phaseSeg1 = _40;
  # DEBUG BEGIN_STMT
  _41 ={v} pBase_12->CBT;
  _42 = _41 & 31;
  bitrate_10(D)->phaseSeg2 = _42;
  # DEBUG BEGIN_STMT
  _43 ={v} pBase_12->CBT;
  _44 = _43 >> 16;
  _45 = _44 & 31;
  bitrate_10(D)->rJumpwidth = _45;
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 424450143]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_12
  # DEBUG timeSeg => bitrate_10(D)
  # DEBUG INLINE_ENTRY FlexCAN_GetTimeSegments
  # DEBUG BEGIN_STMT
  _46 ={v} pBase_12->CTRL1;
  _47 = _46 >> 24;
  bitrate_10(D)->preDivider = _47;
  # DEBUG BEGIN_STMT
  _48 ={v} pBase_12->CTRL1;
  _49 = _48 & 7;
  bitrate_10(D)->propSeg = _49;
  # DEBUG BEGIN_STMT
  _50 ={v} pBase_12->CTRL1;
  _51 = _50 >> 19;
  _52 = _51 & 7;
  bitrate_10(D)->phaseSeg1 = _52;
  # DEBUG BEGIN_STMT
  _53 ={v} pBase_12->CTRL1;
  _54 = _53 >> 16;
  _55 = _54 & 7;
  bitrate_10(D)->phaseSeg2 = _55;
  # DEBUG BEGIN_STMT
  _56 ={v} pBase_12->CTRL1;
  _57 = _56 >> 22;
  _58 = _57 & 3;
  bitrate_10(D)->rJumpwidth = _58;

  <bb 7> [local count: 1073741824]:
  # DEBUG base => NULL
  # DEBUG timeSeg => NULL
  # DEBUG base => NULL
  # DEBUG timeSeg => NULL
  # DEBUG base => NULL
  # DEBUG timeSeg => NULL
  # DEBUG BEGIN_STMT
  return _19;

}



;; Function FlexCAN_Ip_ClearTDCFail (FlexCAN_Ip_ClearTDCFail, funcdef_no=103, decl_uid=11508, cgraph_uid=104, symbol_order=105)

FlexCAN_Ip_ClearTDCFail (uint8 u8Instance)
{
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _17;
  long unsigned int _18;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = u8Instance_9(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) u8Instance_9(D);
  pBase_12 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_12
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_09 ();
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_12
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhCbtEnabled
  # DEBUG BEGIN_STMT
  _17 ={v} MEM[(const struct FLEXCAN_Type *)pBase_12].CTRL2;
  _18 = _17 & 8192;
  # DEBUG pBase => NULL
  if (_18 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _4 ={v} pBase_12->ETDC;
  _5 = _4 | 32768;
  pBase_12->ETDC ={v} _5;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 ={v} pBase_12->FDCTRL;
  _7 = _6 | 16384;
  pBase_12->FDCTRL ={v} _7;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_09 ();
  return;

}



;; Function FlexCAN_Ip_GetTDCFail (FlexCAN_Ip_GetTDCFail, funcdef_no=104, decl_uid=11510, cgraph_uid=105, symbol_order=106)

FlexCAN_Ip_GetTDCFail (uint8 u8Instance)
{
  const struct FLEXCAN_Type * pBase;
  boolean value;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _13;
  long unsigned int _14;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG value => 0
  # DEBUG BEGIN_STMT
  _1 = u8Instance_9(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) u8Instance_9(D);
  pBase_12 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_12
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_12
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhCbtEnabled
  # DEBUG BEGIN_STMT
  _13 ={v} pBase_12->CTRL2;
  _14 = _13 & 8192;
  # DEBUG pBase => NULL
  if (_14 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _4 ={v} pBase_12->ETDC;
  _5 = _4 & 32768;
  if (_5 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 268435456]:
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 ={v} pBase_12->FDCTRL;
  _7 = _6 & 16384;
  if (_7 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 268435456]:

  <bb 7> [local count: 1073741824]:
  # value_8 = PHI <0(4), 0(6), 1(5), 1(3)>
  # DEBUG value => value_8
  # DEBUG BEGIN_STMT
  return value_8;

}



;; Function FlexCAN_Ip_GetTDCValue (FlexCAN_Ip_GetTDCValue, funcdef_no=105, decl_uid=11512, cgraph_uid=106, symbol_order=107)

FlexCAN_Ip_GetTDCValue (uint8 u8Instance)
{
  const struct FLEXCAN_Type * pBase;
  uint8 value;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  unsigned char _6;
  long unsigned int _14;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG value => 0
  # DEBUG BEGIN_STMT
  _1 = u8Instance_8(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) u8Instance_8(D);
  pBase_11 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhCbtEnabled
  # DEBUG BEGIN_STMT
  _14 ={v} pBase_11->CTRL2;
  _15 = _14 & 8192;
  # DEBUG pBase => NULL
  if (_15 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _4 ={v} pBase_11->ETDC;
  value_13 = (uint8) _4;
  # DEBUG value => value_13
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _5 ={v} pBase_11->FDCTRL;
  _6 = (unsigned char) _5;
  value_12 = _6 & 63;
  # DEBUG value => value_12

  <bb 5> [local count: 1073741824]:
  # value_7 = PHI <value_13(3), value_12(4)>
  # DEBUG value => value_7
  # DEBUG BEGIN_STMT
  return value_7;

}



;; Function FlexCAN_Ip_SetBitrateCbt_Privileged (FlexCAN_Ip_SetBitrateCbt_Privileged, funcdef_no=106, decl_uid=11436, cgraph_uid=107, symbol_order=108)


Symbols to be put in SSA form
{ D.13900 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 24
Number of blocks to update: 23 ( 96%)


Merging blocks 10 and 19
Merging blocks 23 and 18
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 18 7 }
;; 7 succs { 8 9 }
;; 8 succs { 18 9 }
;; 9 succs { 10 18 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 14 13 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 19 21 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 1 }
FlexCAN_Ip_SetBitrateCbt_Privileged (uint8 instance, const struct Flexcan_Ip_TimeSegmentType * bitrate, boolean bitRateSwitch)
{
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  _Bool _3;
  unsigned char _4;
  int _5;
  long unsigned int _6;
  signed int _7;
  long unsigned int _8;
  long unsigned int _9;
  boolean iftmp.17_12;
  unsigned char iftmp.16_26;
  long unsigned int _35;
  long unsigned int _36;
  _Bool _37;
  unsigned char _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int iftmp.1_43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int iftmp.2_47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = instance_17(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = bitrate_20(D) != 0B;
  _4 = (unsigned char) _3;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _5 = (int) instance_17(D);
  pBase_22 = Flexcan_Ip_apxBase[_5];
  # DEBUG pBase => pBase_22
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_22
  # DEBUG INLINE_ENTRY FlexCAN_IsFDEnabled
  # DEBUG BEGIN_STMT
  _35 ={v} MEM[(const struct FLEXCAN_Type *)pBase_22].MCR;
  _36 = _35 & 2048;
  _37 = _36 != 0;
  _38 = (unsigned char) _37;
  # DEBUG base => NULL
  # DEBUG fd_enable => _38
  # DEBUG BEGIN_STMT
  _6 ={v} pBase_22->MCR;
  _7 = (signed int) _6;
  if (_7 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG disabled => 1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  result_24 = FlexCAN_Enable (pBase_22);
  # DEBUG result => result_24

  <bb 4> [local count: 1073741823]:
  # result_10 = PHI <0(2), result_24(3)>
  # iftmp.16_26 = PHI <0(2), 1(3)>
  # DEBUG disabled => NULL
  # DEBUG result => result_10
  # DEBUG BEGIN_STMT
  _8 ={v} pBase_22->MCR;
  _9 = _8 & 16777216;
  if (_9 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 536870911]:

  <bb 6> [local count: 1073741823]:
  # iftmp.17_12 = PHI <1(4), 0(5)>
  # DEBUG freeze => iftmp.17_12
  # DEBUG BEGIN_STMT
  if (_36 == 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 536870911]:
  if (iftmp.17_12 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 268435456]:
  if (result_10 == 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 402653184]:
  # DEBUG result => result_10
  # DEBUG BEGIN_STMT
  if (result_10 == 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 18>; [67.00%]

  <bb 10> [local count: 132875550]:
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_22
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhCbtEnabled
  # DEBUG BEGIN_STMT
  _39 ={v} MEM[(const struct FLEXCAN_Type *)pBase_22].CTRL2;
  _40 = _39 & 8192;
  # DEBUG D#7 => _40 != 0
  # DEBUG pBase => NULL
  # DEBUG enhCbt => (unsigned char) D#7
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_15 ();
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_22
  # DEBUG enableFD => _38
  # DEBUG enableBRS => bitRateSwitch_28(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetFDEnabled
  # DEBUG BEGIN_STMT
  _41 ={v} pBase_22->MCR;
  _42 = _41 & 4294965247;
  if (_38 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 66437775]:

  <bb 12> [local count: 132875550]:
  # iftmp.1_43 = PHI <2048(10), 0(11)>
  _44 = _42 | iftmp.1_43;
  pBase_22->MCR ={v} _44;
  # DEBUG BEGIN_STMT
  _45 ={v} pBase_22->FDCTRL;
  _46 = _45 & 2147483647;
  if (bitRateSwitch_28(D) != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [local count: 66437775]:

  <bb 14> [local count: 132875550]:
  # iftmp.2_47 = PHI <2147483648(12), 0(13)>
  _48 = _46 | iftmp.2_47;
  pBase_22->FDCTRL ={v} _48;
  # DEBUG BEGIN_STMT
  _49 ={v} pBase_22->FDCTRL;
  _50 = _49 & 4294926591;
  pBase_22->FDCTRL ={v} _50;
  # DEBUG base => NULL
  # DEBUG enableFD => NULL
  # DEBUG enableBRS => NULL
  # DEBUG BEGIN_STMT
  if (_40 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [local count: 66437775]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetEnhancedDataTimeSegments (pBase_22, bitrate_20(D));
  goto <bb 17>; [100.00%]

  <bb 16> [local count: 66437775]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetFDTimeSegments (pBase_22, bitrate_20(D));

  <bb 17> [local count: 132875550]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_15 ();

  <bb 18> [local count: 1073741823]:
  # result_25 = PHI <result_10(9), 0(17), 1(6), 1(8)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (iftmp.16_26 == 1)
    goto <bb 19>; [20.24%]
  else
    goto <bb 21>; [79.76%]

  <bb 19> [local count: 217325345]:
  # DEBUG BEGIN_STMT
  status_34 = FlexCAN_Disable (pBase_22);
  # DEBUG status => status_34
  # DEBUG BEGIN_STMT
  if (status_34 != 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 20> [local count: 108662672]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_34

  <bb 21> [local count: 1073741824]:
  # result_11 = PHI <result_25(18), result_25(19), status_34(20)>
  # DEBUG result => result_11
  # DEBUG BEGIN_STMT
  return result_11;

}



;; Function FlexCAN_Ip_GetBitrateFD (FlexCAN_Ip_GetBitrateFD, funcdef_no=107, decl_uid=11515, cgraph_uid=108, symbol_order=109)


Symbols to be put in SSA form
{ D.13901 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 4
Removing basic block 6
Removing basic block 8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
FlexCAN_Ip_GetBitrateFD (uint8 instance, struct Flexcan_Ip_TimeSegmentType * bitrate)
{
  const struct FLEXCAN_Type * pBase;
  _Bool _1;
  unsigned char _2;
  _Bool _3;
  unsigned char _4;
  int _5;
  long unsigned int _15;
  long unsigned int _16;
  _Bool _17;
  unsigned char _18;
  _Bool _19;
  unsigned char _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_7(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = bitrate_10(D) != 0B;
  _4 = (unsigned char) _3;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  _5 = (int) instance_7(D);
  pBase_12 = Flexcan_Ip_apxBase[_5];
  # DEBUG pBase => pBase_12
  # DEBUG BEGIN_STMT
  # DEBUG enhCbt => 0
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_12
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhCbtEnabled
  # DEBUG BEGIN_STMT
  _15 ={v} pBase_12->CTRL2;
  _16 = _15 & 8192;
  _17 = _16 != 0;
  _18 = (unsigned char) _17;
  # DEBUG pBase => NULL
  # DEBUG enhCbt => _18
  # DEBUG BEGIN_STMT
  if (_16 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_12
  # DEBUG timeSeg => bitrate_10(D)
  # DEBUG INLINE_ENTRY FlexCAN_GetEnhancedDataTimeSegments
  # DEBUG BEGIN_STMT
  _19 = bitrate_10(D) != 0B;
  _20 = (unsigned char) _19;
  DevAssert (_20);
  # DEBUG BEGIN_STMT
  bitrate_10(D)->propSeg = 0;
  # DEBUG BEGIN_STMT
  _21 ={v} pBase_12->EDCBT;
  _22 = _21 & 31;
  bitrate_10(D)->phaseSeg1 = _22;
  # DEBUG BEGIN_STMT
  _23 ={v} pBase_12->EDCBT;
  _24 = _23 >> 12;
  _25 = _24 & 15;
  bitrate_10(D)->phaseSeg2 = _25;
  # DEBUG BEGIN_STMT
  _26 ={v} pBase_12->EDCBT;
  _27 = _26 >> 22;
  _28 = _27 & 15;
  bitrate_10(D)->rJumpwidth = _28;
  # DEBUG BEGIN_STMT
  _29 ={v} pBase_12->EPRS;
  _30 = _29 >> 16;
  _31 = _30 & 1023;
  bitrate_10(D)->preDivider = _31;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_12
  # DEBUG timeSeg => bitrate_10(D)
  # DEBUG INLINE_ENTRY FlexCAN_GetFDTimeSegments
  # DEBUG BEGIN_STMT
  _32 ={v} pBase_12->FDCBT;
  _33 = _32 >> 20;
  _34 = _33 & 1023;
  bitrate_10(D)->preDivider = _34;
  # DEBUG BEGIN_STMT
  _35 ={v} pBase_12->FDCBT;
  _36 = _35 >> 10;
  _37 = _36 & 31;
  bitrate_10(D)->propSeg = _37;
  # DEBUG BEGIN_STMT
  _38 ={v} pBase_12->FDCBT;
  _39 = _38 >> 5;
  _40 = _39 & 7;
  bitrate_10(D)->phaseSeg1 = _40;
  # DEBUG BEGIN_STMT
  _41 ={v} pBase_12->FDCBT;
  _42 = _41 & 7;
  bitrate_10(D)->phaseSeg2 = _42;
  # DEBUG BEGIN_STMT
  _43 ={v} pBase_12->FDCBT;
  _44 = _43 >> 16;
  _45 = _44 & 7;
  bitrate_10(D)->rJumpwidth = _45;

  <bb 5> [local count: 1073741824]:
  # DEBUG base => NULL
  # DEBUG timeSeg => NULL
  # DEBUG base => NULL
  # DEBUG timeSeg => NULL
  # DEBUG BEGIN_STMT
  return _18;

}



;; Function FlexCAN_Ip_SetTDCOffset_Privileged (FlexCAN_Ip_SetTDCOffset_Privileged, funcdef_no=108, decl_uid=11443, cgraph_uid=109, symbol_order=110)


Symbols to be put in SSA form
{ D.13902 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 23
Number of blocks to update: 22 ( 96%)


Removing basic block 8
Removing basic block 9
Removing basic block 15
Removing basic block 19
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 15 6 }
;; 6 succs { 7 15 }
;; 7 succs { 8 11 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 14 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 1 }
FlexCAN_Ip_SetTDCOffset_Privileged (uint8 instance, boolean enable, uint8 offset)
{
  uint32 tmp;
  uint32 tmp;
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _29;
  signed int _30;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_12(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_12(D);
  pBase_16 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_16
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_16
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _29 ={v} MEM[(const struct FLEXCAN_Type *)pBase_16].MCR;
  _30 = (signed int) _29;
  # DEBUG pBase => NULL
  # DEBUG D#8 => _30 < 0
  # DEBUG disabled => (boolean) D#8
  # DEBUG BEGIN_STMT
  if (_30 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_18 = FlexCAN_Enable (pBase_16);
  # DEBUG result => result_18

  <bb 4> [local count: 1073741824]:
  # result_6 = PHI <0(2), result_18(3)>
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  freeze_20 = FlexCAN_IsFreezeMode (pBase_16);
  # DEBUG freeze => freeze_20
  # DEBUG BEGIN_STMT
  if (freeze_20 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  if (result_6 == 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306369]:
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  if (result_6 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 7> [local count: 265751101]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_16 ();
  # DEBUG BEGIN_STMT
  _4 ={v} pBase_16->CTRL2;
  _5 = _4 & 8192;
  if (_5 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 8> [local count: 132875551]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_16
  # DEBUG enable => enable_22(D)
  # DEBUG offset => offset_23(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetEnhancedTDCOffset
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  tmp_31 ={v} pBase_16->ETDC;
  # DEBUG tmp => tmp_31
  # DEBUG BEGIN_STMT
  tmp_32 = tmp_31 & 2139160575;
  # DEBUG tmp => tmp_32
  # DEBUG BEGIN_STMT
  if (enable_22(D) != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 66437775]:
  # DEBUG BEGIN_STMT
  tmp_33 = tmp_32 | 2147483648;
  # DEBUG tmp => tmp_33
  # DEBUG BEGIN_STMT
  _34 = (long unsigned int) offset_23(D);
  _35 = _34 << 16;
  _36 = _35 & 8323072;
  tmp_37 = tmp_33 | _36;
  # DEBUG tmp => tmp_37

  <bb 10> [local count: 132875551]:
  # tmp_38 = PHI <tmp_32(8), tmp_37(9)>
  # DEBUG tmp => tmp_38
  # DEBUG BEGIN_STMT
  pBase_16->ETDC ={v} tmp_38;
  goto <bb 14>; [100.00%]

  <bb 11> [local count: 132875551]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_16
  # DEBUG enable => enable_22(D)
  # DEBUG offset => offset_23(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetTDCOffset
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  tmp_39 ={v} pBase_16->FDCTRL;
  # DEBUG tmp => tmp_39
  # DEBUG BEGIN_STMT
  tmp_40 = tmp_39 & 4294926591;
  # DEBUG tmp => tmp_40
  # DEBUG BEGIN_STMT
  if (enable_22(D) != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 66437775]:
  # DEBUG BEGIN_STMT
  tmp_41 = tmp_40 | 32768;
  # DEBUG tmp => tmp_41
  # DEBUG BEGIN_STMT
  _42 = (long unsigned int) offset_23(D);
  _43 = _42 << 8;
  _44 = _43 & 7936;
  tmp_45 = tmp_41 | _44;
  # DEBUG tmp => tmp_45

  <bb 13> [local count: 132875551]:
  # tmp_46 = PHI <tmp_40(11), tmp_45(12)>
  # DEBUG tmp => tmp_46
  # DEBUG BEGIN_STMT
  pBase_16->FDCTRL ={v} tmp_46;

  <bb 14> [local count: 265751101]:
  # DEBUG base => NULL
  # DEBUG enable => NULL
  # DEBUG offset => NULL
  # DEBUG tmp => NULL
  # DEBUG base => NULL
  # DEBUG enable => NULL
  # DEBUG offset => NULL
  # DEBUG tmp => NULL
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_16 ();

  <bb 15> [local count: 1073741824]:
  # result_15 = PHI <result_6(6), 0(14), 1(5)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_30 < 0)
    goto <bb 16>; [25.50%]
  else
    goto <bb 18>; [74.50%]

  <bb 16> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_28 = FlexCAN_Disable (pBase_16);
  # DEBUG status => status_28
  # DEBUG BEGIN_STMT
  if (status_28 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_28

  <bb 18> [local count: 1073741823]:
  # result_7 = PHI <result_15(15), result_15(16), status_28(17)>
  # DEBUG result => result_7
  # DEBUG BEGIN_STMT
  return result_7;

}



;; Function FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged (FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged, funcdef_no=109, decl_uid=11439, cgraph_uid=110, symbol_order=111)


Symbols to be put in SSA form
{ D.13903 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


Merging blocks 7 and 13
Merging blocks 7 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 8 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
FlexCAN_Ip_SetTxArbitrationStartDelay_Privileged (uint8 instance, uint8 value)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _24;
  signed int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_9(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_9(D);
  pBase_13 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_13
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _24 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _25 = (signed int) _24;
  # DEBUG pBase => NULL
  # DEBUG D#9 => _25 < 0
  # DEBUG disabled => (boolean) D#9
  # DEBUG BEGIN_STMT
  if (_25 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_13);
  # DEBUG result => result_15

  <bb 4> [local count: 1073741824]:
  # result_4 = PHI <0(2), result_15(3)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  freeze_17 = FlexCAN_IsFreezeMode (pBase_13);
  # DEBUG freeze => freeze_17
  # DEBUG BEGIN_STMT
  if (freeze_17 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  if (result_4 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306369]:
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  if (result_4 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 265751101]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_17 ();
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_13
  # DEBUG tasd => value_19(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetTxArbitrationStartDelay
  # DEBUG BEGIN_STMT
  _26 ={v} pBase_13->CTRL2;
  _27 = _26 & 4278714367;
  _28 = (long unsigned int) value_19(D);
  _29 = _28 << 19;
  _30 = _29 & 16252928;
  _31 = _27 | _30;
  pBase_13->CTRL2 ={v} _31;
  # DEBUG base => NULL
  # DEBUG tasd => NULL
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_17 ();

  <bb 8> [local count: 1073741824]:
  # result_12 = PHI <result_4(6), 0(7), 1(5)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_25 < 0)
    goto <bb 9>; [25.50%]
  else
    goto <bb 11>; [74.50%]

  <bb 9> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_23 = FlexCAN_Disable (pBase_13);
  # DEBUG status => status_23
  # DEBUG BEGIN_STMT
  if (status_23 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_23

  <bb 11> [local count: 1073741823]:
  # result_5 = PHI <result_12(8), result_12(9), status_23(10)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_GetBuffStatusFlag (FlexCAN_Ip_GetBuffStatusFlag, funcdef_no=110, decl_uid=11518, cgraph_uid=111, symbol_order=112)

FlexCAN_Ip_GetBuffStatusFlag (uint8 instance, uint8 msgBuffIdx)
{
  const struct FLEXCAN_Type * pBase;
  boolean returnResult;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;
  unsigned char _5;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  unsigned char _17;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG returnResult => 1
  # DEBUG BEGIN_STMT
  _1 = instance_8(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) instance_8(D);
  pBase_11 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_12(D) == 255)
    goto <bb 3>; [51.12%]
  else
    goto <bb 4>; [48.88%]

  <bb 3> [local count: 548896821]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG intFlag => 30
  # DEBUG INLINE_ENTRY FlexCAN_GetEnhancedRxFIFOStatusFlag
  # DEBUG BEGIN_STMT
  _15 ={v} pBase_11->ERFSR;
  _14 = _15 >> 30;
  _16 = _14 & 1;
  _17 = (unsigned char) _16;
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  _4 = (long unsigned int) msgBuffIdx_12(D);
  _5 = FlexCAN_GetBuffStatusFlag (pBase_11, _4);
  if (_5 == 1)
    goto <bb 6>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 5> [local count: 346397702]:

  <bb 6> [local count: 1073741823]:
  # returnResult_6 = PHI <_17(3), 0(5), 1(4)>
  # DEBUG returnResult => returnResult_6
  # DEBUG BEGIN_STMT
  return returnResult_6;

}



;; Function FlexCAN_Ip_ClearBuffStatusFlag (FlexCAN_Ip_ClearBuffStatusFlag, funcdef_no=111, decl_uid=11521, cgraph_uid=112, symbol_order=113)

FlexCAN_Ip_ClearBuffStatusFlag (uint8 instance, uint8 msgBuffIdx)
{
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_6(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) instance_6(D);
  pBase_9 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_9
  # DEBUG BEGIN_STMT
  if (msgBuffIdx_10(D) == 255)
    goto <bb 3>; [51.12%]
  else
    goto <bb 4>; [48.88%]

  <bb 3> [local count: 548896821]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_9
  # DEBUG intFlag => 30
  # DEBUG INLINE_ENTRY FlexCAN_ClearEnhancedRxFifoIntStatusFlag
  # DEBUG BEGIN_STMT
  pBase_9->ERFSR ={v} 1073741824;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  _4 = (long unsigned int) msgBuffIdx_10(D);
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_9, _4);

  <bb 5> [local count: 1073741824]:
  # DEBUG base => NULL
  # DEBUG intFlag => NULL
  return;

}



;; Function FlexCAN_Ip_EnableInterrupts_Privileged (FlexCAN_Ip_EnableInterrupts_Privileged, funcdef_no=112, decl_uid=11445, cgraph_uid=113, symbol_order=114)

FlexCAN_Ip_EnableInterrupts_Privileged (uint8 u8Instance)
{
  struct Flexcan_Ip_StateType * state;
  Flexcan_Ip_StatusType result;
  struct FLEXCAN_Type * pBase;
  int _1;
  _Bool _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  long unsigned int _17;
  signed int _18;
  long unsigned int _19;
  signed int _20;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) u8Instance_9(D);
  pBase_11 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_11
  # DEBUG BEGIN_STMT
  # DEBUG result => 1
  # DEBUG BEGIN_STMT
  state_12 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_12
  # DEBUG BEGIN_STMT
  _2 = u8Instance_9(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _17 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].MCR;
  _18 = (signed int) _17;
  # DEBUG pBase => NULL
  if (_18 >= 0)
    goto <bb 3>; [41.48%]
  else
    goto <bb 8>; [58.52%]

  <bb 3> [local count: 445388109]:
  # DEBUG BEGIN_STMT
  FlexCAN_EnableInterrupts (pBase_11, u8Instance_9(D));
  # DEBUG BEGIN_STMT
  _4 = state_12->enhancedFifoOutput.isPolling;
  if (_4 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 4> [local count: 146978076]:
  _5 = FlexCAN_IsEnhancedRxFifoAvailable (pBase_11);
  if (_5 == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 5> [local count: 49972546]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhancedRxFifoEnabled
  # DEBUG BEGIN_STMT
  _19 ={v} MEM[(const struct FLEXCAN_Type *)pBase_11].ERFCR;
  _20 = (signed int) _19;
  if (_20 < 0)
    goto <bb 6>; [41.00%]
  else
    goto <bb 7>; [59.00%]

  <bb 6> [local count: 20488744]:
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_11
  # DEBUG enable => 1
  # DEBUG INLINE_ENTRY FlexCAN_SetEnhancedRxFifoIntAll
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pBase_11->ERFIER ={v} 4026531840;

  <bb 7> [local count: 445388109]:
  # DEBUG base => NULL
  # DEBUG base => NULL
  # DEBUG enable => NULL
  # DEBUG BEGIN_STMT
  state_12->isIntActive = 1;
  # DEBUG BEGIN_STMT
  # DEBUG result => 0

  <bb 8> [local count: 1073741824]:
  # result_6 = PHI <1(2), 0(7)>
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  return result_6;

}



;; Function FlexCAN_Ip_DisableInterrupts_Privileged (FlexCAN_Ip_DisableInterrupts_Privileged, funcdef_no=113, decl_uid=11447, cgraph_uid=114, symbol_order=115)

FlexCAN_Ip_DisableInterrupts_Privileged (uint8 u8Instance)
{
  struct Flexcan_Ip_StateType * state;
  Flexcan_Ip_StatusType result;
  struct FLEXCAN_Type * pBase;
  int _1;
  _Bool _2;
  unsigned char _3;
  unsigned char _4;
  long unsigned int _16;
  signed int _17;
  long unsigned int _18;
  signed int _19;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) u8Instance_8(D);
  pBase_10 = Flexcan_Ip_apxBase[_1];
  # DEBUG pBase => pBase_10
  # DEBUG BEGIN_STMT
  # DEBUG result => 1
  # DEBUG BEGIN_STMT
  state_11 = Flexcan_Ip_apxState[_1];
  # DEBUG state => state_11
  # DEBUG BEGIN_STMT
  _2 = u8Instance_8(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_10
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _16 ={v} MEM[(const struct FLEXCAN_Type *)pBase_10].MCR;
  _17 = (signed int) _16;
  # DEBUG pBase => NULL
  if (_17 >= 0)
    goto <bb 3>; [41.48%]
  else
    goto <bb 7>; [58.52%]

  <bb 3> [local count: 445388109]:
  # DEBUG BEGIN_STMT
  FlexCAN_DisableInterrupts (pBase_10);
  # DEBUG BEGIN_STMT
  _4 = FlexCAN_IsEnhancedRxFifoAvailable (pBase_10);
  if (_4 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 4> [local count: 151431957]:
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_10
  # DEBUG INLINE_ENTRY FlexCAN_IsEnhancedRxFifoEnabled
  # DEBUG BEGIN_STMT
  _18 ={v} MEM[(const struct FLEXCAN_Type *)pBase_10].ERFCR;
  _19 = (signed int) _18;
  if (_19 < 0)
    goto <bb 5>; [41.00%]
  else
    goto <bb 6>; [59.00%]

  <bb 5> [local count: 62087102]:
  # DEBUG base => NULL
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_10
  # DEBUG enable => 0
  # DEBUG INLINE_ENTRY FlexCAN_SetEnhancedRxFifoIntAll
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pBase_10->ERFIER ={v} 0;

  <bb 6> [local count: 445388109]:
  # DEBUG base => NULL
  # DEBUG base => NULL
  # DEBUG enable => NULL
  # DEBUG BEGIN_STMT
  state_11->isIntActive = 0;
  # DEBUG BEGIN_STMT
  # DEBUG result => 0

  <bb 7> [local count: 1073741824]:
  # result_5 = PHI <1(2), 0(6)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_SetErrorInt_Privileged (FlexCAN_Ip_SetErrorInt_Privileged, funcdef_no=114, decl_uid=11451, cgraph_uid=115, symbol_order=116)

FlexCAN_Ip_SetErrorInt_Privileged (uint8 u8Instance, Flexcan_Ip_ErrorIntType type, boolean enable)
{
  volatile boolean x;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  unsigned char _5;
  long unsigned int _29;
  signed int _30;
  unsigned char x.0_31;

  <bb 2> [local count: 1476482]:
  # DEBUG BEGIN_STMT
  _1 = u8Instance_10(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) u8Instance_10(D);
  pBase_13 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_13
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _29 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _30 = (signed int) _29;
  # DEBUG pBase => NULL
  # DEBUG D#10 => _30 < 0
  # DEBUG disabled => (boolean) D#10
  # DEBUG BEGIN_STMT
  if (_30 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 376503]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_13);
  # DEBUG result => result_15
  # DEBUG BEGIN_STMT
  if (result_15 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 4> [local count: 1288230]:
  # result_23 = PHI <result_15(3), 0(2)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  switch (type_16(D)) <default: <L14> [16.67%], case 0: <L6> [16.67%], case 1: <L10> [16.67%], case 2: <L4> [16.67%], case 3: <L5> [16.67%], case 4: <L3> [16.67%]>

  <bb 5> [local count: 214748]:
<L3>:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_13, 32768, enable_17(D));
  # DEBUG BEGIN_STMT
  goto <bb 14>; [100.00%]

  <bb 6> [local count: 214748]:
<L4>:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_13, 16384, enable_17(D));
  # DEBUG BEGIN_STMT
  goto <bb 14>; [100.00%]

  <bb 7> [local count: 214748]:
<L5>:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_13, 16385, enable_17(D));
  # DEBUG BEGIN_STMT
  goto <bb 14>; [100.00%]

  <bb 8> [local count: 214748]:
<L6>:
  # DEBUG BEGIN_STMT
  _4 = FlexCAN_IsFreezeMode (pBase_13);
  if (_4 != 1)
    goto <bb 14>; [79.76%]
  else
    goto <bb 9>; [20.24%]

  <bb 9> [local count: 43465]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_13, 1024, enable_17(D));
  goto <bb 14>; [100.00%]

  <bb 10> [local count: 214748]:
<L10>:
  # DEBUG BEGIN_STMT
  _5 = FlexCAN_IsFreezeMode (pBase_13);
  if (_5 != 1)
    goto <bb 14>; [79.76%]
  else
    goto <bb 11>; [20.24%]

  <bb 11> [local count: 43465]:
  # DEBUG BEGIN_STMT
  FlexCAN_SetErrIntCmd (pBase_13, 2048, enable_17(D));
  goto <bb 14>; [100.00%]

  <bb 12> [local count: 214748]:
<L14>:
  # DEBUG BEGIN_STMT
  x ={v} 0;
  # DEBUG x => x
  # DEBUG INLINE_ENTRY DevAssert
  # DEBUG BEGIN_STMT
  x.0_31 ={v} x;
  if (x.0_31 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 18> [local count: 107374]:

  <bb 13> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("BKPT #0");
  # DEBUG BEGIN_STMT

  <bb 19> [local count: 1073741824]:
  goto <bb 13>; [100.00%]

  <bb 14> [local count: 1369365]:
  # result_6 = PHI <result_15(3), result_23(5), result_23(6), result_23(7), result_23(9), result_23(11), result_23(12), 1(8), 1(10)>
  # DEBUG x => NULL
  # DEBUG result => result_6
  # DEBUG BEGIN_STMT
  if (_30 < 0)
    goto <bb 15>; [25.50%]
  else
    goto <bb 17>; [74.50%]

  <bb 15> [local count: 349188]:
  # DEBUG BEGIN_STMT
  status_28 = FlexCAN_Disable (pBase_13);
  # DEBUG status => status_28
  # DEBUG BEGIN_STMT
  if (status_28 != 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 16> [local count: 174594]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_28

  <bb 17> [local count: 1369365]:
  # result_7 = PHI <result_6(14), result_6(15), status_28(16)>
  # DEBUG result => result_7
  # DEBUG BEGIN_STMT
  return result_7;

}



;; Function FlexCAN_Ip_AbortTransfer (FlexCAN_Ip_AbortTransfer, funcdef_no=115, decl_uid=11524, cgraph_uid=116, symbol_order=117)


Symbols to be put in SSA form
{ D.13909 D.14464 D.14474 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 30
Number of blocks to update: 29 ( 97%)


Removing basic block 5
Removing basic block 7
Removing basic block 12
Merging blocks 19 and 9
Removing basic block 20
Merging blocks 22 and 29
Merging blocks 22 and 28
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 3 22 }
;; 3 succs { 22 4 }
;; 4 succs { 5 14 }
;; 5 succs { 7 }
;; 6 succs { 8 7 }
;; 7 succs { 6 8 }
;; 8 succs { 9 13 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 15 22 }
;; 15 succs { 16 20 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 21 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 1 }
FlexCAN_Ip_AbortTransfer (uint8 u8Instance, uint8 mb_idx)
{
  uint32 D.14474;
  struct FLEXCAN_Type * pBase;
  struct Flexcan_Ip_StateType * state;
  uint32 val1;
  uint32 val2;
  uint32 flexcan_mb_config;
  volatile uint32 * flexcan_mb;
  struct FLEXCAN_Type * pBase;
  struct Flexcan_Ip_StateType * state;
  Flexcan_Ip_StatusType result;
  uint32 timeStart;
  uint32 timeElapsed;
  uint32 flexcan_mb_config;
  uint32 uS2Ticks;
  volatile uint32 * flexcan_mb;
  Flexcan_Ip_StatusType D.14464;
  Flexcan_Ip_StatusType result;
  const struct Flexcan_Ip_StateType * state;
  struct FLEXCAN_Type * pBase;
  _Bool _1;
  unsigned char _2;
  unsigned char _3;
  _Bool _4;
  unsigned char _5;
  int _6;
  int _7;
  <unnamed type> _8;
  long unsigned int _9;
  unsigned char _10;
  <unnamed type> _11;
  <unnamed type> _12;
  int _28;
  long unsigned int _31;
  long unsigned int _37;
  long unsigned int _38;
  unsigned char _41;
  long unsigned int _44;
  long unsigned int _45;
  int _46;
  int _49;
  int _52;
  unsigned char _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _58;
  unsigned char _63;
  long unsigned int _64;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _72;
  long unsigned int _73;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = u8Instance_17(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = mb_idx_20(D) + 192;
  _4 = _3 > 190;
  _5 = (unsigned char) _4;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  _6 = (int) u8Instance_17(D);
  pBase_22 = Flexcan_Ip_apxBase[_6];
  # DEBUG pBase => pBase_22
  # DEBUG BEGIN_STMT
  state_23 = Flexcan_Ip_apxState[_6];
  # DEBUG state => state_23
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  if (mb_idx_20(D) <= 63)
    goto <bb 3>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 3> [local count: 536870911]:
  # DEBUG BEGIN_STMT
  _7 = (int) mb_idx_20(D);
  _8 ={v} state_23->mbs[_7].state;
  if (_8 == 0)
    goto <bb 22>; [52.23%]
  else
    goto <bb 4>; [47.77%]

  <bb 4> [local count: 256463234]:
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) mb_idx_20(D);
  _10 = state_23->isIntActive;
  FLEXCAN_ClearMsgBuffIntCmd (pBase_22, u8Instance_17(D), _9, _10);
  # DEBUG BEGIN_STMT
  _11 ={v} state_23->mbs[_7].state;
  if (_11 == 2)
    goto <bb 5>; [20.24%]
  else
    goto <bb 14>; [79.76%]

  <bb 5> [local count: 51908159]:
  # DEBUG BEGIN_STMT
  # DEBUG u8Instance => u8Instance_17(D)
  # DEBUG mb_idx => mb_idx_20(D)
  # DEBUG INLINE_ENTRY FlexCAN_AbortTxTransfer
  # DEBUG BEGIN_STMT
  _28 = (int) u8Instance_17(D);
  pBase_29 = Flexcan_Ip_apxBase[_28];
  # DEBUG pBase => pBase_29
  # DEBUG BEGIN_STMT
  state_30 = Flexcan_Ip_apxState[_28];
  # DEBUG state => state_30
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => 0
  # DEBUG BEGIN_STMT
  # DEBUG uS2Ticks => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb => 0B
  # DEBUG BEGIN_STMT
  _31 = (long unsigned int) mb_idx_20(D);
  flexcan_mb_32 = FlexCAN_GetMsgBuffRegion (pBase_29, _31);
  # DEBUG flexcan_mb => flexcan_mb_32
  # DEBUG BEGIN_STMT
  flexcan_mb_config_33 ={v} *flexcan_mb_32;
  # DEBUG flexcan_mb_config => flexcan_mb_config_33
  # DEBUG BEGIN_STMT
  flexcan_mb_config_34 = flexcan_mb_config_33 & 4043309055;
  # DEBUG flexcan_mb_config => flexcan_mb_config_34
  # DEBUG BEGIN_STMT
  flexcan_mb_config_35 = flexcan_mb_config_34 | 150994944;
  # DEBUG flexcan_mb_config => flexcan_mb_config_35
  # DEBUG BEGIN_STMT
  *flexcan_mb_32 ={v} flexcan_mb_config_35;
  # DEBUG BEGIN_STMT
  uS2Ticks_36 = OsIf_MicrosToTicks (1000000, 0);
  # DEBUG uS2Ticks => uS2Ticks_36
  # DEBUG BEGIN_STMT
  _37 = OsIf_GetCounter (0);
  timeStart = _37;
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 458548349]:
  # DEBUG BEGIN_STMT
  _38 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_40 = _38 + timeElapsed_39;
  # DEBUG timeElapsed => timeElapsed_40
  # DEBUG BEGIN_STMT
  if (uS2Ticks_36 <= timeElapsed_40)
    goto <bb 8>; [5.50%]
  else
    goto <bb 7>; [94.50%]

  <bb 7> [local count: 485236348]:
  # timeElapsed_39 = PHI <0(5), timeElapsed_40(6)>
  # DEBUG timeElapsed => timeElapsed_39
  # DEBUG BEGIN_STMT
  _41 = FlexCAN_GetBuffStatusFlag (pBase_29, _31);
  if (_41 == 0)
    goto <bb 6>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 8> [local count: 51908158]:
  # result_42 = PHI <3(6), 0(7)>
  # DEBUG result => result_42
  # DEBUG BEGIN_STMT
  if (result_42 != 3)
    goto <bb 9>; [66.00%]
  else
    goto <bb 13>; [34.00%]

  <bb 9> [local count: 34259385]:
  # DEBUG BEGIN_STMT
  flexcan_mb_config_43 ={v} *flexcan_mb_32;
  # DEBUG flexcan_mb_config => flexcan_mb_config_43
  # DEBUG BEGIN_STMT
  _44 = flexcan_mb_config_43 >> 24;
  _45 = _44 & 15;
  if (_45 == 8)
    goto <bb 10>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 10> [local count: 11648191]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 5

  <bb 11> [local count: 34259385]:
  # result_48 = PHI <result_42(9), 5(10)>
  # DEBUG result => result_48
  # DEBUG BEGIN_STMT
  if (_45 == 9)
    goto <bb 12>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 12> [local count: 11648191]:
  # DEBUG BEGIN_STMT
  # DEBUG result => 0

  <bb 13> [local count: 51908158]:
  # result_47 = PHI <result_42(8), result_48(11), 0(12)>
  # DEBUG result => result_47
  # DEBUG BEGIN_STMT
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_29, _31);
  # DEBUG BEGIN_STMT
  _46 = (int) mb_idx_20(D);
  state_30->mbs[_46].state ={v} 0;
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  _89 = result_47;
  # DEBUG u8Instance => NULL
  # DEBUG mb_idx => NULL
  # DEBUG flexcan_mb => NULL
  # DEBUG uS2Ticks => NULL
  # DEBUG flexcan_mb_config => NULL
  # DEBUG timeElapsed => NULL
  # DEBUG timeStart => NULL
  # DEBUG result => NULL
  # DEBUG state => NULL
  # DEBUG pBase => NULL
  result_26 = _89;
  # DEBUG result => result_26

  <bb 14> [local count: 256463234]:
  # result_13 = PHI <0(4), result_26(13)>
  # DEBUG result => result_13
  # DEBUG BEGIN_STMT
  _12 ={v} state_23->mbs[_7].state;
  if (_12 == 1)
    goto <bb 15>; [20.24%]
  else
    goto <bb 22>; [79.76%]

  <bb 15> [local count: 51908159]:
  # DEBUG BEGIN_STMT
  # DEBUG u8Instance => u8Instance_17(D)
  # DEBUG mb_idx => mb_idx_20(D)
  # DEBUG INLINE_ENTRY FlexCAN_AbortRxTransfer
  # DEBUG BEGIN_STMT
  _49 = (int) u8Instance_17(D);
  pBase_50 = Flexcan_Ip_apxBase[_49];
  # DEBUG pBase => pBase_50
  # DEBUG BEGIN_STMT
  state_51 = Flexcan_Ip_apxState[_49];
  # DEBUG state => state_51
  # DEBUG BEGIN_STMT
  # DEBUG val1 => 0
  # DEBUG BEGIN_STMT
  # DEBUG val2 => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => 0
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb => 0B
  # DEBUG BEGIN_STMT
  _52 = (int) mb_idx_20(D);
  state_51->mbs[_52].state ={v} 0;
  # DEBUG BEGIN_STMT
  _53 = state_51->bIsLegacyFifoEn;
  if (_53 == 1)
    goto <bb 16>; [51.12%]
  else
    goto <bb 20>; [48.88%]

  <bb 16> [local count: 26535451]:
  # DEBUG BEGIN_STMT
  _54 ={v} pBase_50->CTRL2;
  _55 = _54 >> 24;
  val1_56 = _55 & 15;
  # DEBUG val1 => val1_56
  # DEBUG BEGIN_STMT
  # DEBUG x => val1_56
  # DEBUG INLINE_ENTRY RxFifoOcuppiedLastMsgBuff
  # DEBUG BEGIN_STMT
  _70 = val1_56 + 1;
  _71 = _70 * 8;
  _72 = _71 >> 2;
  _73 = _72 + 5;
  _94 = _73;
  # DEBUG x => NULL
  val2_57 = _94;
  # DEBUG val2 => val2_57
  # DEBUG BEGIN_STMT
  _58 = (long unsigned int) mb_idx_20(D);
  if (val2_57 < _58)
    goto <bb 17>; [33.00%]
  else
    goto <bb 18>; [67.00%]

  <bb 17> [local count: 8756699]:
  # DEBUG BEGIN_STMT
  flexcan_mb_59 = FlexCAN_GetMsgBuffRegion (pBase_50, _58);
  # DEBUG flexcan_mb => flexcan_mb_59
  # DEBUG BEGIN_STMT
  flexcan_mb_config_60 ={v} *flexcan_mb_59;
  # DEBUG flexcan_mb_config => flexcan_mb_config_60
  # DEBUG BEGIN_STMT
  flexcan_mb_config_61 = flexcan_mb_config_60 & 4043309055;
  # DEBUG flexcan_mb_config => flexcan_mb_config_61
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => flexcan_mb_config_61
  # DEBUG BEGIN_STMT
  *flexcan_mb_59 ={v} flexcan_mb_config_61;
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => flexcan_mb_config_61
  # DEBUG BEGIN_STMT
  flexcan_mb_config_62 = flexcan_mb_config_61 | 67108864;
  # DEBUG flexcan_mb_config => flexcan_mb_config_62
  # DEBUG BEGIN_STMT
  *flexcan_mb_59 ={v} flexcan_mb_config_62;

  <bb 18> [local count: 26535451]:
  # DEBUG BEGIN_STMT
  if (mb_idx_20(D) == 0)
    goto <bb 19>; [33.00%]
  else
    goto <bb 21>; [67.00%]

  <bb 19> [local count: 8756699]:
  # DEBUG BEGIN_STMT
  _63 = state_51->isIntActive;
  FLEXCAN_ClearMsgBuffIntCmd (pBase_50, u8Instance_17(D), 5, _63);
  goto <bb 21>; [100.00%]

  <bb 20> [local count: 25372708]:
  # DEBUG BEGIN_STMT
  _64 = (long unsigned int) mb_idx_20(D);
  flexcan_mb_65 = FlexCAN_GetMsgBuffRegion (pBase_50, _64);
  # DEBUG flexcan_mb => flexcan_mb_65
  # DEBUG BEGIN_STMT
  flexcan_mb_config_66 ={v} *flexcan_mb_65;
  # DEBUG flexcan_mb_config => flexcan_mb_config_66
  # DEBUG BEGIN_STMT
  flexcan_mb_config_67 = flexcan_mb_config_66 & 4043309055;
  # DEBUG flexcan_mb_config => flexcan_mb_config_67
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => flexcan_mb_config_67
  # DEBUG BEGIN_STMT
  *flexcan_mb_65 ={v} flexcan_mb_config_67;
  # DEBUG BEGIN_STMT
  # DEBUG flexcan_mb_config => flexcan_mb_config_67
  # DEBUG BEGIN_STMT
  flexcan_mb_config_68 = flexcan_mb_config_67 | 67108864;
  # DEBUG flexcan_mb_config => flexcan_mb_config_68
  # DEBUG BEGIN_STMT
  *flexcan_mb_65 ={v} flexcan_mb_config_68;

  <bb 21> [local count: 51908159]:
  # DEBUG BEGIN_STMT
  _69 = (long unsigned int) mb_idx_20(D);
  FlexCAN_ClearMsgBuffIntStatusFlag (pBase_50, _69);

  <bb 22> [local count: 1073741824]:
  # result_14 = PHI <0(2), 5(3), result_13(14), result_13(21)>
  # DEBUG u8Instance => NULL
  # DEBUG mb_idx => NULL
  # DEBUG flexcan_mb => NULL
  # DEBUG flexcan_mb_config => NULL
  # DEBUG val2 => NULL
  # DEBUG val1 => NULL
  # DEBUG state => NULL
  # DEBUG pBase => NULL
  # DEBUG result => result_14
  # DEBUG BEGIN_STMT
  return result_14;

}



;; Function FlexCAN_Ip_SetRxMb14Mask_Privileged (FlexCAN_Ip_SetRxMb14Mask_Privileged, funcdef_no=116, decl_uid=11418, cgraph_uid=117, symbol_order=118)

FlexCAN_Ip_SetRxMb14Mask_Privileged (uint8 instance, uint32 mask)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _22;
  signed int _23;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = instance_9(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_9(D);
  pBase_13 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_13
  # DEBUG BEGIN_STMT
  # DEBUG freeze => 0
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _22 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _23 = (signed int) _22;
  # DEBUG pBase => NULL
  # DEBUG D#11 => _23 < 0
  # DEBUG disabled => (boolean) D#11
  # DEBUG BEGIN_STMT
  if (_23 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_13);
  # DEBUG result => result_15

  <bb 4> [local count: 1073741823]:
  # result_4 = PHI <0(2), result_15(3)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  freeze_17 = FlexCAN_IsFreezeMode (pBase_13);
  # DEBUG freeze => freeze_17
  # DEBUG BEGIN_STMT
  if (freeze_17 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870911]:
  if (result_4 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306368]:
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  if (result_4 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 402653184]:
  # DEBUG BEGIN_STMT
  pBase_13->RX14MASK ={v} mask_18(D);

  <bb 8> [local count: 1073741823]:
  # result_12 = PHI <result_4(6), 0(7), 1(5)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_23 < 0)
    goto <bb 9>; [25.50%]
  else
    goto <bb 11>; [74.50%]

  <bb 9> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_21 = FlexCAN_Disable (pBase_13);
  # DEBUG status => status_21
  # DEBUG BEGIN_STMT
  if (status_21 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_21

  <bb 11> [local count: 1073741824]:
  # result_5 = PHI <result_12(8), result_12(9), status_21(10)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_SetRxMb15Mask_Privileged (FlexCAN_Ip_SetRxMb15Mask_Privileged, funcdef_no=117, decl_uid=11421, cgraph_uid=118, symbol_order=119)

FlexCAN_Ip_SetRxMb15Mask_Privileged (uint8 instance, uint32 mask)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _22;
  signed int _23;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  _1 = instance_9(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_9(D);
  pBase_13 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_13
  # DEBUG BEGIN_STMT
  # DEBUG freeze => 0
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _22 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _23 = (signed int) _22;
  # DEBUG pBase => NULL
  # DEBUG D#12 => _23 < 0
  # DEBUG disabled => (boolean) D#12
  # DEBUG BEGIN_STMT
  if (_23 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_13);
  # DEBUG result => result_15

  <bb 4> [local count: 1073741823]:
  # result_4 = PHI <0(2), result_15(3)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  freeze_17 = FlexCAN_IsFreezeMode (pBase_13);
  # DEBUG freeze => freeze_17
  # DEBUG BEGIN_STMT
  if (freeze_17 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870911]:
  if (result_4 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306368]:
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  if (result_4 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 402653184]:
  # DEBUG BEGIN_STMT
  pBase_13->RX15MASK ={v} mask_18(D);

  <bb 8> [local count: 1073741823]:
  # result_12 = PHI <result_4(6), 0(7), 1(5)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_23 < 0)
    goto <bb 9>; [25.50%]
  else
    goto <bb 11>; [74.50%]

  <bb 9> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_21 = FlexCAN_Disable (pBase_13);
  # DEBUG status => status_21
  # DEBUG BEGIN_STMT
  if (status_21 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_21

  <bb 11> [local count: 1073741824]:
  # result_5 = PHI <result_12(8), result_12(9), status_21(10)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_SetListenOnlyMode_Privileged (FlexCAN_Ip_SetListenOnlyMode_Privileged, funcdef_no=118, decl_uid=11454, cgraph_uid=119, symbol_order=120)


Symbols to be put in SSA form
{ D.13912 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 16
Number of blocks to update: 15 ( 94%)


Merging blocks 7 and 13
Merging blocks 15 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 10 6 }
;; 6 succs { 7 10 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 11 13 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 1 }
FlexCAN_Ip_SetListenOnlyMode_Privileged (uint8 instance, const boolean enable)
{
  boolean freeze;
  struct FLEXCAN_Type * pBase;
  Flexcan_Ip_StatusType status;
  Flexcan_Ip_StatusType result;
  _Bool _1;
  unsigned char _2;
  int _3;
  long unsigned int _24;
  signed int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int iftmp.20_28;
  long unsigned int _29;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = instance_9(D) <= 3;
  _2 = (unsigned char) _1;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  # DEBUG result => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 0
  # DEBUG BEGIN_STMT
  _3 = (int) instance_9(D);
  pBase_13 = Flexcan_Ip_apxBase[_3];
  # DEBUG pBase => pBase_13
  # DEBUG BEGIN_STMT
  # DEBUG pBase => pBase_13
  # DEBUG INLINE_ENTRY FlexCAN_IsEnabled
  # DEBUG BEGIN_STMT
  _24 ={v} MEM[(const struct FLEXCAN_Type *)pBase_13].MCR;
  _25 = (signed int) _24;
  # DEBUG pBase => NULL
  # DEBUG D#13 => _25 < 0
  # DEBUG disabled => (boolean) D#13
  # DEBUG BEGIN_STMT
  if (_25 < 0)
    goto <bb 3>; [25.50%]
  else
    goto <bb 4>; [74.50%]

  <bb 3> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  result_15 = FlexCAN_Enable (pBase_13);
  # DEBUG result => result_15

  <bb 4> [local count: 1073741824]:
  # result_4 = PHI <0(2), result_15(3)>
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  freeze_17 = FlexCAN_IsFreezeMode (pBase_13);
  # DEBUG freeze => freeze_17
  # DEBUG BEGIN_STMT
  if (freeze_17 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  if (result_4 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 6> [local count: 805306369]:
  # DEBUG result => result_4
  # DEBUG BEGIN_STMT
  if (result_4 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 7> [local count: 265751101]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_10 ();
  # DEBUG BEGIN_STMT
  # DEBUG base => pBase_13
  # DEBUG enableListenOnly => enable_19(D)
  # DEBUG INLINE_ENTRY FlexCAN_SetListenOnlyMode
  # DEBUG BEGIN_STMT
  _26 ={v} pBase_13->CTRL1;
  _27 = _26 & 4294967287;
  if (enable_19(D) != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 8> [local count: 132875551]:

  <bb 9> [local count: 265751101]:
  # iftmp.20_28 = PHI <8(7), 0(8)>
  _29 = _27 | iftmp.20_28;
  pBase_13->CTRL1 ={v} _29;
  # DEBUG base => NULL
  # DEBUG enableListenOnly => NULL
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_10 ();

  <bb 10> [local count: 1073741824]:
  # result_12 = PHI <result_4(6), 0(9), 1(5)>
  # DEBUG result => NULL
  # DEBUG BEGIN_STMT
  if (_25 < 0)
    goto <bb 11>; [25.50%]
  else
    goto <bb 13>; [74.50%]

  <bb 11> [local count: 273804165]:
  # DEBUG BEGIN_STMT
  status_23 = FlexCAN_Disable (pBase_13);
  # DEBUG status => status_23
  # DEBUG BEGIN_STMT
  if (status_23 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 136902082]:
  # DEBUG BEGIN_STMT
  # DEBUG result => status_23

  <bb 13> [local count: 1073741823]:
  # result_5 = PHI <result_12(10), result_12(11), status_23(12)>
  # DEBUG result => result_5
  # DEBUG BEGIN_STMT
  return result_5;

}



;; Function FlexCAN_Ip_GetListenOnlyMode (FlexCAN_Ip_GetListenOnlyMode, funcdef_no=119, decl_uid=11526, cgraph_uid=120, symbol_order=121)


Symbols to be put in SSA form
{ D.13913 D.14486 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 7
Number of blocks to update: 6 ( 86%)


Merging blocks 2 and 4
Merging blocks 6 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
FlexCAN_Ip_GetListenOnlyMode (uint8 instance)
{
  boolean D.14486;
  const struct FLEXCAN_Type * base;
  int _1;
  boolean _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char iftmp.5_9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_2(D);
  base_4 = Flexcan_Ip_apxBase[_1];
  # DEBUG base => base_4
  # DEBUG BEGIN_STMT
  # DEBUG base => base_4
  # DEBUG INLINE_ENTRY FlexCAN_IsListenOnlyModeEnabled
  # DEBUG BEGIN_STMT
  _7 ={v} base_4->CTRL1;
  _8 = _7 & 8;
  if (_8 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.5_9 = PHI <1(2), 0(3)>
  _10 = iftmp.5_9;
  # DEBUG base => NULL
  _6 = _10;
  return _6;

}



;; Function FlexCAN_Ip_ManualBusOffRecovery (FlexCAN_Ip_ManualBusOffRecovery, funcdef_no=120, decl_uid=11540, cgraph_uid=121, symbol_order=122)

FlexCAN_Ip_ManualBusOffRecovery (uint8 Instance)
{
  Flexcan_Ip_StatusType RetVal;
  uint32 uS2Ticks;
  uint32 timeElapsed;
  uint32 timeStart;
  struct FLEXCAN_Type * Base;
  int _1;
  _Bool _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _33;

  <bb 2> [local count: 696142619]:
  # DEBUG BEGIN_STMT
  _1 = (int) Instance_19(D);
  Base_21 = Flexcan_Ip_apxBase[_1];
  # DEBUG Base => Base_21
  # DEBUG BEGIN_STMT
  timeStart = 0;
  # DEBUG BEGIN_STMT
  # DEBUG timeElapsed => 0
  # DEBUG BEGIN_STMT
  uS2Ticks_24 = OsIf_MicrosToTicks (1000000, 0);
  # DEBUG uS2Ticks => uS2Ticks_24
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 1
  # DEBUG BEGIN_STMT
  _2 = Instance_19(D) <= 3;
  _3 = (unsigned char) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 ={v} Base_21->CTRL1;
  _5 = _4 & 64;
  if (_5 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 3> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  # DEBUG RetVal => 0
  # DEBUG BEGIN_STMT
  _6 ={v} Base_21->ESR1;
  _7 = _6 & 32;
  if (_7 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 4> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Can_CAN_EXCLUSIVE_AREA_20 ();
  # DEBUG BEGIN_STMT
  _8 ={v} Base_21->CTRL1;
  _9 = _8 & 4294967231;
  Base_21->CTRL1 ={v} _9;
  # DEBUG BEGIN_STMT
  _10 ={v} Base_21->CTRL1;
  _11 = _10 | 64;
  Base_21->CTRL1 ={v} _11;
  # DEBUG BEGIN_STMT
  SchM_Exit_Can_CAN_EXCLUSIVE_AREA_20 ();
  # DEBUG BEGIN_STMT
  _12 = OsIf_GetCounter (0);
  timeStart = _12;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 1014686025]:
  # DEBUG BEGIN_STMT
  _33 = OsIf_GetElapsed (&timeStart, 0);
  timeElapsed_34 = timeElapsed_15 + _33;
  # DEBUG timeElapsed => timeElapsed_34
  # DEBUG BEGIN_STMT
  if (uS2Ticks_24 <= timeElapsed_34)
    goto <bb 7>; [5.50%]
  else
    goto <bb 8>; [94.50%]

  <bb 8> [local count: 958878292]:

  <bb 6> [local count: 1073741824]:
  # timeElapsed_15 = PHI <0(4), timeElapsed_34(8)>
  # DEBUG timeElapsed => timeElapsed_15
  # DEBUG BEGIN_STMT
  _13 ={v} Base_21->ESR1;
  _14 = _13 & 32;
  if (_14 != 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 7> [local count: 696142619]:
  # RetVal_16 = PHI <1(2), 0(3), 3(5), 0(6)>
  # DEBUG RetVal => RetVal_16
  # DEBUG BEGIN_STMT
  timeStart ={v} {CLOBBER};
  return RetVal_16;

}


