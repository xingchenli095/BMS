
Marking local functions:


Marking externally visible functions: OS_CORTEXM_IntDisableUnknownInterrupt OS_IntDisableConditionalX OS_IntDisableConditional OS_CORTEXM_IntSetDisablingLevel OS_CORTEXM_IntClearIsr OS_CORTEXM_IntDisableIsr OS_CORTEXM_IntEnableIsr OS_CORTEXM_IntSetupIsr


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_Panic/9 (OS_Panic) @06cd0620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_CORTEXM_IntDisableUnknownInterrupt/7 
  Calls: 
OS_kernDisableLevel/8 (OS_kernDisableLevel) @06cd30d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_IntDisableConditional/5 (read)OS_IntDisableConditional/5 (read)OS_IntDisableConditionalX/6 (read)OS_IntDisableConditionalX/6 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CORTEXM_IntDisableUnknownInterrupt/7 (OS_CORTEXM_IntDisableUnknownInterrupt) @06c3ae00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Panic/9 
OS_IntDisableConditionalX/6 (OS_IntDisableConditionalX) @06c3ab60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernDisableLevel/8 (read)OS_kernDisableLevel/8 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
OS_IntDisableConditional/5 (OS_IntDisableConditional) @06c3a9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernDisableLevel/8 (read)OS_kernDisableLevel/8 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_CORTEXM_IntSetDisablingLevel/4 
OS_CORTEXM_IntSetDisablingLevel/4 (OS_CORTEXM_IntSetDisablingLevel) @06c3a7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: OS_IntDisableConditional/5 
  Calls: 
OS_CORTEXM_IntClearIsr/3 (OS_CORTEXM_IntClearIsr) @06c3a620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
OS_CORTEXM_IntDisableIsr/2 (OS_CORTEXM_IntDisableIsr) @06c3a460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
OS_CORTEXM_IntEnableIsr/1 (OS_CORTEXM_IntEnableIsr) @06c3a2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
OS_CORTEXM_IntSetupIsr/0 (OS_CORTEXM_IntSetupIsr) @06c3a0e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntDisableUnknownInterrupt ()
{
  register os_uint32_t OS_CurIpsr;
  os_uint32_t curSource;
  os_uint32_t D.7457;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, ipsr" : "result" "=r" OS_CurIpsr);
  # DEBUG BEGIN_STMT
  D.7457 = OS_CurIpsr + 4294967280;
  curSource = D.7457;
  # DEBUG BEGIN_STMT
  if (curSource <= 239)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = curSource & 31;
  _2 = 3758153984B;
  _3 = curSource >> 5;
  _4 = _3 & 15;
  _5 = 1 << _1;
  _2->icer[_4] = _5;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_Panic (15);

  <bb 5> :
  return;

}


__attribute__((target ("general-regs-only")))
OS_IntDisableConditionalX ()
{
  register os_uint32_t newBasepri;
  register os_uint32_t OS_CurBasepri;
  os_oldlevel_t prevDisablingLevel;
  os_oldlevel_t D.7472;
  short unsigned int D.7450;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, basepri" : "result" "=r" OS_CurBasepri);
  # DEBUG BEGIN_STMT
  _1 = OS_CurBasepri >> 4;
  D.7450 = (short unsigned int) _1;
  prevDisablingLevel = D.7450;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.2_2 = OS_kernDisableLevel;
  if (prevDisablingLevel > OS_kernDisableLevel.2_2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (prevDisablingLevel == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.3_3 = OS_kernDisableLevel;
  _4 = (int) OS_kernDisableLevel.3_3;
  _5 = _4 << 4;
  newBasepri = (os_uint32_t) _5;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("msr basepri, %0" :  : "input" "r" newBasepri);

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7472 = prevDisablingLevel;
  return D.7472;

}


__attribute__((target ("general-regs-only")))
OS_IntDisableConditional ()
{
  register os_uint32_t OS_CurBasepri;
  os_oldlevel_t prevDisablingLevel;
  os_oldlevel_t D.7467;
  short unsigned int D.7444;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, basepri" : "result" "=r" OS_CurBasepri);
  # DEBUG BEGIN_STMT
  _1 = OS_CurBasepri >> 4;
  D.7444 = (short unsigned int) _1;
  prevDisablingLevel = D.7444;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_2 = OS_kernDisableLevel;
  if (prevDisablingLevel > OS_kernDisableLevel.0_2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (prevDisablingLevel == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.1_3 = OS_kernDisableLevel;
  prevDisablingLevel = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.1_3);

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.7467 = prevDisablingLevel;
  return D.7467;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntSetDisablingLevel (os_oldlevel_t level)
{
  register os_uint32_t newPrimask;
  register os_uint32_t newBasepri;
  register os_uint32_t OS_CurBasepri;
  register os_uint32_t OS_DIRQResult;
  const os_oldlevel_t prevDisablingLevel;
  const os_intstatus_t old_state;
  os_oldlevel_t D.7462;
  short unsigned int D.7436;
  os_uint32_t D.7433;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, primask" : "result" "=r" OS_DIRQResult);
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("cpsid	i");
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7433 = OS_DIRQResult;
  old_state = (const os_intstatus_t) D.7433;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("mrs	%0, basepri" : "result" "=r" OS_CurBasepri);
  # DEBUG BEGIN_STMT
  _1 = OS_CurBasepri >> 4;
  D.7436 = (short unsigned int) _1;
  prevDisablingLevel = D.7436;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (int) level;
  _3 = _2 << 4;
  newBasepri = (os_uint32_t) _3;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("msr basepri, %0" :  : "input" "r" newBasepri);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  newPrimask = (os_uint32_t) old_state;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("msr primask, %0" :  : "input" "r" newPrimask);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7462 = prevDisablingLevel;
  return D.7462;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntClearIsr (const struct os_archisr_t * isr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = isr->source;
  _2 = (unsigned int) _1;
  _3 = _2 & 31;
  _4 = 3758153984B;
  _5 = isr->source;
  _6 = _5 >> 5;
  _7 = (unsigned int) _6;
  _8 = _7 & 15;
  _9 = 1 << _3;
  _4->icpr[_8] = _9;
  return;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntDisableIsr (const struct os_archisr_t * isr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = isr->source;
  _2 = (unsigned int) _1;
  _3 = _2 & 31;
  _4 = 3758153984B;
  _5 = isr->source;
  _6 = _5 >> 5;
  _7 = (unsigned int) _6;
  _8 = _7 & 15;
  _9 = 1 << _3;
  _4->icer[_8] = _9;
  return;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntEnableIsr (const struct os_archisr_t * isr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = isr->source;
  _2 = (unsigned int) _1;
  _3 = _2 & 31;
  _4 = 3758153984B;
  _5 = isr->source;
  _6 = _5 >> 5;
  _7 = (unsigned int) _6;
  _8 = _7 & 15;
  _9 = 1 << _3;
  _4->iser[_8] = _9;
  return;

}


__attribute__((target ("general-regs-only")))
OS_CORTEXM_IntSetupIsr (const struct os_archisr_t * isr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = isr->priority;
  _2 = (unsigned char) _1;
  _3 = 3758153984B;
  _4 = isr->source;
  _5 = (int) _4;
  _6 = _2 << 4;
  _3->ipr[_5] = _6;
  return;

}


