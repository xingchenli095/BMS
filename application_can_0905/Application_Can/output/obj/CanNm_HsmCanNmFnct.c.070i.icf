Parsed function:CanNm_RmsTimerStart.part.0
Parsed function:CanNm_MsgCycleTimerStart.part.0
Parsed function:CanNm_HandleRxIndicationCommon.part.0
Parsed function:CanNm_HandleTransmit
Parsed function:CanNm_HandleComControl
Parsed function:CanNm_HandleTxConfirmation
Parsed function:CanNm_HandleRxIndicationCommon
Parsed function:CanNm_MsgCycleTimerStart
Parsed function:CanNm_RmsTimerStart
Parsed function:CanNm_InitIntVar
Parsed function:CanNm_HsmCanNmSfPrepareBusSleepModeAction3
Parsed function:CanNm_HsmCanNmSfPrepareBusSleepModeGuard2
Parsed function:CanNm_HsmCanNmSfPrepareBusSleepModeEntry
Parsed function:CanNm_HsmCanNmSfRepeatMessageStateGuard2
Parsed function:CanNm_HsmCanNmSfRepeatMessageStateGuard1
Parsed function:CanNm_HsmCanNmSfRepeatMessageStateExit
Parsed function:CanNm_HsmCanNmSfRepeatMessageStateEntry
Parsed function:CanNm_HsmCanNmSfNormalOperationRemoteSleepAction3
Parsed function:CanNm_HsmCanNmSfNormalOperationRemoteSleepAction2
Parsed function:CanNm_HsmCanNmSfNormalOperationRemoteSleepGuard1
Parsed function:CanNm_HsmCanNmSfNormalOperationRemoteSleepEntry
Parsed function:CanNm_HsmCanNmSfNormalOperationRemoteActivityAction4
Parsed function:CanNm_HsmCanNmSfNormalOperationRemoteActivityGuard4
Parsed function:CanNm_HsmCanNmSfNormalOperationRemoteActivityGuard2
Parsed function:CanNm_HsmCanNmSfNormalOperationRemoteActivityAction1
Parsed function:CanNm_HsmCanNmSfNormalOperationRemoteActivityEntry
Parsed function:CanNm_HsmCanNmSfNormalOperationStateEntry
Parsed function:CanNm_HsmCanNmSfSendingSubModeAction3
Parsed function:CanNm_HsmCanNmSfSendingSubModeAction2
Parsed function:CanNm_HsmCanNmSfSendingSubModeAction1
Parsed function:CanNm_HsmCanNmSfSendingSubModeExit
Parsed function:CanNm_HsmCanNmSfReadySleepRemoteSleepAction3
Parsed function:CanNm_HsmCanNmSfReadySleepRemoteSleepAction2
Parsed function:CanNm_HsmCanNmSfReadySleepRemoteSleepAction1
Parsed function:CanNm_HsmCanNmSfReadySleepRemoteSleepGuard1
Parsed function:CanNm_HsmCanNmSfReadySleepRemoteActivityAction1
Parsed function:CanNm_HsmCanNmSfReadySleepRemoteActivityGuard1
Parsed function:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry
Parsed function:CanNm_HsmCanNmSfReadySleepStateGuard1
Parsed function:CanNm_HsmCanNmSfReadySleepStateEntry
Parsed function:CanNm_HsmCanNmSfNetworkModeGuard4
Parsed function:CanNm_HsmCanNmSfNetworkModeAction3
Parsed function:CanNm_HsmCanNmSfNetworkModeAction2
Parsed function:CanNm_HsmCanNmSfNetworkModeAction1
Parsed function:CanNm_HsmCanNmSfNetworkModeEntry
Parsed function:CanNm_HsmCanNmSfBusSleepModeGuard3
Parsed function:CanNm_HsmCanNmSfBusSleepModeAction1
Parsed function:CanNm_HsmCanNmSfBusSleepModeEntry
Parsed function:CanNm_HsmCanNmSfTOPEntry
Dump after hash based groups
Congruence classes: 32 (unique hash values: 32), with total: 49 items
Class size histogram [num of members]: number of classe number of classess
[1]: 24 classes
[2]: 6 classes
[6]: 1 classes
[7]: 1 classes


Dump after WPA based types groups
Congruence classes: 32 (unique hash values: 32), with total: 49 items
Class size histogram [num of members]: number of classe number of classess
[1]: 24 classes
[2]: 6 classes
[6]: 1 classes
[7]: 1 classes


Worklist has been filled with: 9
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 35 (unique hash values: 32), with total: 49 items
Class size histogram [num of members]: number of classe number of classess
[1]: 28 classes
[2]: 5 classes
[4]: 1 classes
[7]: 1 classes


Init called for 21 items (42.86%).
Dump after full equality comparison of groups
Congruence classes: 36 (unique hash values: 32), with total: 49 items
Class size histogram [num of members]: number of classe number of classess
[1]: 30 classes
[2]: 4 classes
[4]: 1 classes
[7]: 1 classes


Worklist has been filled with: 10
Address reference subdivision created: 0 new classes.
Congruence classes: 36 (unique hash values: 32), with total: 49 items
Class size histogram [num of members]: number of classe number of classess
[1]: 30 classes
[2]: 4 classes
[4]: 1 classes
[7]: 1 classes



Item count: 49
Congruent classes before: 36, after: 36
Average class size before: 1.36, after: 1.36
Average non-singular class size: 3.17, count: 6
Equal symbols: 13
Fraction of visited symbols: 26.53%

Semantic equality hit:CanNm_HsmCanNmSfBusSleepModeGuard3->CanNm_HsmCanNmSfPrepareBusSleepModeGuard2
Assembler symbol names:CanNm_HsmCanNmSfBusSleepModeGuard3->CanNm_HsmCanNmSfPrepareBusSleepModeGuard2

Symbols to be put in SSA form
{ D.10320 D.10321 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfPrepareBusSleepModeGuard2/37
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfPrepareBusSleepModeGuard2

IPA function summary for CanNm_HsmCanNmSfPrepareBusSleepModeGuard2/37 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfBusSleepModeGuard3/3 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfNetworkModeAction2->CanNm_HsmCanNmSfReadySleepRemoteSleepAction3
Assembler symbol names:CanNm_HsmCanNmSfNetworkModeAction2->CanNm_HsmCanNmSfReadySleepRemoteSleepAction3

Symbols to be put in SSA form
{ D.10322 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfReadySleepRemoteSleepAction3/17
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfReadySleepRemoteSleepAction3

IPA function summary for CanNm_HsmCanNmSfReadySleepRemoteSleepAction3/17 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfNetworkModeAction2/6 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 2 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfNetworkModeAction2->CanNm_HsmCanNmSfNormalOperationRemoteActivityAction1
Assembler symbol names:CanNm_HsmCanNmSfNetworkModeAction2->CanNm_HsmCanNmSfNormalOperationRemoteActivityAction1

Symbols to be put in SSA form
{ D.10323 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfNormalOperationRemoteActivityAction1/24
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfNormalOperationRemoteActivityAction1

IPA function summary for CanNm_HsmCanNmSfNormalOperationRemoteActivityAction1/24 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfNetworkModeAction2/6 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 2 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfNetworkModeAction2->CanNm_HsmCanNmSfNormalOperationRemoteSleepAction3
Assembler symbol names:CanNm_HsmCanNmSfNetworkModeAction2->CanNm_HsmCanNmSfNormalOperationRemoteSleepAction3

Symbols to be put in SSA form
{ D.10324 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfNormalOperationRemoteSleepAction3/31
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfNormalOperationRemoteSleepAction3

IPA function summary for CanNm_HsmCanNmSfNormalOperationRemoteSleepAction3/31 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfNetworkModeAction2/6 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 2 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfReadySleepRemoteSleepAction2
Assembler symbol names:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfReadySleepRemoteSleepAction2

Symbols to be put in SSA form
{ D.10325 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfReadySleepRemoteSleepAction2/16
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfReadySleepRemoteSleepAction2

IPA function summary for CanNm_HsmCanNmSfReadySleepRemoteSleepAction2/16 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfReadySleepRemoteActivityEntry/11 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 1 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfNormalOperationRemoteActivityEntry
Assembler symbol names:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfNormalOperationRemoteActivityEntry

Symbols to be put in SSA form
{ D.10326 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfNormalOperationRemoteActivityEntry/23
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfNormalOperationRemoteActivityEntry

IPA function summary for CanNm_HsmCanNmSfNormalOperationRemoteActivityEntry/23 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfReadySleepRemoteActivityEntry/11 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 1 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfNormalOperationRemoteActivityAction4
Assembler symbol names:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfNormalOperationRemoteActivityAction4

Symbols to be put in SSA form
{ D.10327 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfNormalOperationRemoteActivityAction4/27
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfNormalOperationRemoteActivityAction4

IPA function summary for CanNm_HsmCanNmSfNormalOperationRemoteActivityAction4/27 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfReadySleepRemoteActivityEntry/11 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 1 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfNormalOperationRemoteSleepEntry
Assembler symbol names:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfNormalOperationRemoteSleepEntry

Symbols to be put in SSA form
{ D.10328 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfNormalOperationRemoteSleepEntry/28
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfNormalOperationRemoteSleepEntry

IPA function summary for CanNm_HsmCanNmSfNormalOperationRemoteSleepEntry/28 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfReadySleepRemoteActivityEntry/11 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 1 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfNormalOperationRemoteSleepAction2
Assembler symbol names:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfNormalOperationRemoteSleepAction2

Symbols to be put in SSA form
{ D.10329 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfNormalOperationRemoteSleepAction2/30
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfNormalOperationRemoteSleepAction2

IPA function summary for CanNm_HsmCanNmSfNormalOperationRemoteSleepAction2/30 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfReadySleepRemoteActivityEntry/11 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 1 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfPrepareBusSleepModeAction3
Assembler symbol names:CanNm_HsmCanNmSfReadySleepRemoteActivityEntry->CanNm_HsmCanNmSfPrepareBusSleepModeAction3

Symbols to be put in SSA form
{ D.10330 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfPrepareBusSleepModeAction3/38
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfPrepareBusSleepModeAction3

IPA function summary for CanNm_HsmCanNmSfPrepareBusSleepModeAction3/38 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfReadySleepRemoteActivityEntry/11 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 1 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfReadySleepRemoteActivityGuard1->CanNm_HsmCanNmSfReadySleepRemoteSleepGuard1
Assembler symbol names:CanNm_HsmCanNmSfReadySleepRemoteActivityGuard1->CanNm_HsmCanNmSfReadySleepRemoteSleepGuard1

Symbols to be put in SSA form
{ D.10331 D.10332 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfReadySleepRemoteSleepGuard1/14
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfReadySleepRemoteSleepGuard1

IPA function summary for CanNm_HsmCanNmSfReadySleepRemoteSleepGuard1/14 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfReadySleepRemoteActivityGuard1/12 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 5 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfReadySleepRemoteActivityAction1->CanNm_HsmCanNmSfReadySleepRemoteSleepAction1
Assembler symbol names:CanNm_HsmCanNmSfReadySleepRemoteActivityAction1->CanNm_HsmCanNmSfReadySleepRemoteSleepAction1

Symbols to be put in SSA form
{ D.10333 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfReadySleepRemoteSleepAction1/15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfReadySleepRemoteSleepAction1

IPA function summary for CanNm_HsmCanNmSfReadySleepRemoteSleepAction1/15 inlinable
  global time:     12.000000
  self size:       4
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfReadySleepRemoteActivityAction1/13 function not considered for inlining
      loop depth: 0 freq:1.00 size: 1 time: 10callee size: 3 stack: 0

Unified; Wrapper has been created.

Semantic equality hit:CanNm_HsmCanNmSfNormalOperationRemoteActivityGuard2->CanNm_HsmCanNmSfNormalOperationRemoteSleepGuard1
Assembler symbol names:CanNm_HsmCanNmSfNormalOperationRemoteActivityGuard2->CanNm_HsmCanNmSfNormalOperationRemoteSleepGuard1

Symbols to be put in SSA form
{ D.10334 D.10335 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)



Analyzing function: CanNm_HsmCanNmSfNormalOperationRemoteSleepGuard1/29
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: CanNm_HsmCanNmSfNormalOperationRemoteSleepGuard1

IPA function summary for CanNm_HsmCanNmSfNormalOperationRemoteSleepGuard1/29 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    CanNm_HsmCanNmSfNormalOperationRemoteActivityGuard2/25 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0

Unified; Wrapper has been created.


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
CanNm_RmsTimerStart.part.0 ()
{
  CanNm_TimeType RmsTime;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#4 s=> RmsTime
  # DEBUG RmsTime => D#4

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_HsmEmitToSelfInst (&CanNm_HsmScCanNm, 6);

  <bb 3> [local count: 1073741824]:
  return;

}


CanNm_MsgCycleTimerStart.part.0 ()
{
  CanNm_TimeType MsgCycleTimer;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#2 s=> MsgCycleTimer
  # DEBUG MsgCycleTimer => D#2

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_HsmEmitToSelfInst (&CanNm_HsmScCanNm, 3);

  <bb 3> [local count: 1073741824]:
  return;

}


CanNm_HandleRxIndicationCommon.part.0 ()
{
  short unsigned int _1;
  short unsigned int _2;

  <bb 4> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanConfig[0].CanNmTime;
  _2 = _1 + 65535;
  # DEBUG CanNmTime => _2
  # DEBUG INLINE_ENTRY CanNm_NmTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CanNmTimer = _2;

  <bb 3> [local count: 1073741824]:
  # DEBUG CanNmTime => NULL
  return;

}


CanNm_HandleTransmit ()
{
  Std_ReturnType retVal;
  struct PduInfoType pduInfo;
  unsigned char _1;
  uint8 * _2;
  const struct CanNm_ConfigType * CanNm_RootPtr.19_3;
  short unsigned int _4;
  const struct CanNm_ConfigType * CanNm_RootPtr.20_5;
  short unsigned int _6;
  short unsigned int _7;
  unsigned char _8;
  unsigned char _9;
  short unsigned int _10;
  unsigned char _11;
  unsigned char _12;
  short unsigned int _13;
  short unsigned int _14;
  short unsigned int _15;
  short unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  unsigned char _26;
  unsigned char _40;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG retVal => 1
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].MessageFlags;
  _26 = _1 & 2;
  if (_26 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  _2 = CanNm_ChanStatus[0].TxPduPtr;
  pduInfo.SduDataPtr = _2;
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.19_3 = CanNm_RootPtr;
  _4 = CanNm_RootPtr.19_3->CanNm_ChannelData[0].RxPduLength;
  pduInfo.SduLength = _4;
  # DEBUG BEGIN_STMT
  CanNm_GetPduUserData (0, &pduInfo);
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.20_5 = CanNm_RootPtr;
  _6 = CanNm_RootPtr.20_5->CanNm_ChannelData[0].TxPduId;
  retVal_32 = CanIf_Transmit (_6, &pduInfo);
  # DEBUG retVal => retVal_32
  # DEBUG BEGIN_STMT
  if (retVal_32 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 116930485]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].FirstCanIfTransmitOk = 1;
  # DEBUG BEGIN_STMT
  SchM_Enter_CanNm_SCHM_CANNM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = CanNm_ChanConfig[0].MsgTimeoutTime;
  CanNm_ChanStatus[0].TimeoutTimer = _7;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanNm_SCHM_CANNM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _8 = CanNm_ChanStatus[0].MessageFlags;
  _9 = _8 | 2;
  CanNm_ChanStatus[0].MessageFlags = _9;

  <bb 5> [local count: 1073741824]:
  # retVal_22 = PHI <1(2), retVal_32(3), 0(4)>
  # DEBUG retVal => retVal_22
  # DEBUG BEGIN_STMT
  _10 = BIT_FIELD_REF <MEM[(void *)&CanNm_ChanStatus], 16, 208>;
  if (_10 == 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 6> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _12 = CanNm_ChanStatus[0].MessageFlags;
  _40 = _12 & 8;
  if (_40 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  _13 = CanNm_ChanConfig[0].RMSTime;
  _14 = _13 + 1;
  CanNm_RmsTimerStart (_14);

  <bb 8> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG MsgCycleTimer => 1
  # DEBUG INLINE_ENTRY CanNm_MsgCycleTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].MsgCycleTimer = 1;
  # DEBUG BEGIN_STMT
  goto <bb 18>; [100.00%]

  <bb 9> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _15 = CanNm_ChanStatus[0].ImmediateNmTransmissionCounter;
  if (_15 != 0)
    goto <bb 10>; [67.00%]
  else
    goto <bb 17>; [33.00%]

  <bb 10> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  if (retVal_22 == 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 11> [local count: 179851756]:
  # DEBUG BEGIN_STMT
  _16 = _15 + 65535;
  CanNm_ChanStatus[0].ImmediateNmTransmissionCounter = _16;
  # DEBUG BEGIN_STMT
  if (_16 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 89925878]:
  # DEBUG BEGIN_STMT
  _17 = CanNm_ChanConfig[0].ImmediateNmCycleTime;
  CanNm_MsgCycleTimerStart (_17);
  goto <bb 18>; [100.00%]

  <bb 13> [local count: 89925878]:
  # DEBUG BEGIN_STMT
  _18 = CanNm_ChanConfig[0].MsgCycleTime;
  CanNm_MsgCycleTimerStart (_18);
  goto <bb 18>; [100.00%]

  <bb 14> [local count: 179851756]:
  # DEBUG BEGIN_STMT
  _19 = CanNm_ChanStatus[0].MessageFlags;
  _11 = _19 & 2;
  if (_11 == 0)
    goto <bb 15>; [67.00%]
  else
    goto <bb 16>; [33.00%]

  <bb 15> [local count: 120500676]:
  # DEBUG BEGIN_STMT
  # DEBUG MsgCycleTimer => 1
  # DEBUG INLINE_ENTRY CanNm_MsgCycleTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].MsgCycleTimer = 1;
  # DEBUG BEGIN_STMT
  goto <bb 18>; [100.00%]

  <bb 16> [local count: 59351079]:
  # DEBUG BEGIN_STMT
  _20 = CanNm_ChanConfig[0].ImmediateNmCycleTime;
  CanNm_MsgCycleTimerStart (_20);
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  _21 = CanNm_ChanConfig[0].MsgCycleTime;
  CanNm_MsgCycleTimerStart (_21);

  <bb 18> [local count: 1073741824]:
  # DEBUG MsgCycleTimer => NULL
  # DEBUG MsgCycleTimer => NULL
  pduInfo ={v} {CLOBBER};
  return;

}


CanNm_HandleComControl ()
{
  unsigned char _1;
  const struct CanNm_ConfigType * CanNm_RootPtr.4_2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  unsigned char _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _8 = _1 & 1;
  if (_8 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.4_2 = CanNm_RootPtr;
  _3 = CanNm_RootPtr.4_2->CanNm_ChannelData[0].CanNmMsgCycleOffset;
  CanNm_MsgCycleTimerStart (_3);
  # DEBUG BEGIN_STMT
  _4 = CanNm_ChanConfig[0].CanNmTime;
  # DEBUG CanNmTime => _4
  # DEBUG INLINE_ENTRY CanNm_NmTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CanNmTimer = _4;
  # DEBUG CanNmTime => NULL
  # DEBUG BEGIN_STMT
  _5 = CanNm_ChanConfig[0].RSITime;
  # DEBUG UniTimer => _5
  # DEBUG INLINE_ENTRY CanNm_UniTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].UniversalTimer = _5;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 719407023]:
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY CanNm_MsgCycleTimerStop
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].MsgCycleTimer = 0;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY CanNm_NmTimerStop
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CanNmTimer = 0;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY CanNm_UniTimerStop
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].UniversalTimer = 0;
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].ImmediateNmTransmissionCounter = 0;

  <bb 5> [local count: 1073741824]:
  # DEBUG UniTimer => NULL
  return;

}


CanNm_HandleTxConfirmation ()
{
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _6 = _1 & 1;
  if (_6 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = CanNm_ChanConfig[0].CanNmTime;
  _3 = _2 + 65535;
  # DEBUG CanNmTime => _3
  # DEBUG INLINE_ENTRY CanNm_NmTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CanNmTimer = _3;

  <bb 4> [local count: 1073741824]:
  # DEBUG CanNmTime => NULL
  # DEBUG BEGIN_STMT
  SchM_Enter_CanNm_SCHM_CANNM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].TimeoutTimer = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_CanNm_SCHM_CANNM_EXCLUSIVE_AREA_0 ();
  return;

}


CanNm_HandleRxIndicationCommon ()
{
  unsigned char _1;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _5 = _1 & 1;
  if (_5 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870912]:
  CanNm_HandleRxIndicationCommon.part.0 ();

  <bb 4> [local count: 1073741824]:
  # DEBUG CanNmTime => NULL
  return;

}


CanNm_MsgCycleTimerStart (CanNm_TimeType MsgCycleTimer)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].MsgCycleTimer = MsgCycleTimer_2(D);
  # DEBUG BEGIN_STMT
  if (MsgCycleTimer_2(D) == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334800]:
  # DEBUG D#1 => MsgCycleTimer_2(D)
  CanNm_MsgCycleTimerStart.part.0 ();

  <bb 4> [local count: 1073741824]:
  return;

}


CanNm_RmsTimerStart (CanNm_TimeType RmsTime)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].RmsTimer = RmsTime_2(D);
  # DEBUG BEGIN_STMT
  if (RmsTime_2(D) == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334800]:
  # DEBUG D#3 => RmsTime_2(D)
  CanNm_RmsTimerStart.part.0 ();

  <bb 4> [local count: 1073741824]:
  return;

}


CanNm_InitIntVar ()
{
  uint8 * _1;
  unsigned char _2;
  sizetype _3;
  uint8 * _4;
  const struct CanNm_ConfigType * CanNm_RootPtr.0_5;
  long unsigned int _6;
  uint8 * _7;
  uint8 * _8;
  const struct CanNm_ConfigType * CanNm_RootPtr.1_9;
  long unsigned int _10;
  const struct CanNm_ConfigType * CanNm_RootPtr.2_11;
  uint8 * _12;
  unsigned char _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  const struct CanNm_ConfigType * CanNm_RootPtr.3_17;
  unsigned char _18;
  uint8 * _19;
  unsigned char _20;
  sizetype _21;
  uint8 * _22;
  unsigned char _23;
  unsigned char _24;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].ChanStatus = 0;
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].MsgCycleTimer = 0;
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].TimeoutTimer = 0;
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].RmsTimer = 0;
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].TxPduPtr;
  _2 = CanNm_ChanConfig[0].UDFBPos;
  _3 = (sizetype) _2;
  _4 = _1 + _3;
  CanNm_RootPtr.0_5 = CanNm_RootPtr;
  _6 = CanNm_RootPtr.0_5->CanNm_ChannelData[0].UserDataLength;
  TS_MemSet32 (_4, 255, _6);
  # DEBUG BEGIN_STMT
  _7 = CanNm_ChanStatus[0].RxPduPtr;
  _8 = _7 + _3;
  CanNm_RootPtr.1_9 = CanNm_RootPtr;
  _10 = CanNm_RootPtr.1_9->CanNm_ChannelData[0].UserDataLength;
  TS_MemSet32 (_8, 255, _10);
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.2_11 = CanNm_RootPtr;
  _12 = CanNm_ChanStatus[0].TxPduPtr;
  _13 = CanNm_ChanConfig[0].NidPos;
  _14 = (sizetype) _13;
  _15 = _12 + _14;
  _16 = CanNm_RootPtr.2_11->CanNm_ChannelData[0].CanNmNodeId;
  *_15 = _16;
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.3_17 = CanNm_RootPtr;
  _18 = CanNm_RootPtr.3_17->CanNm_ChannelData[0].PnEnabled;
  if (_18 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  # DEBUG BEGIN_STMT
  _19 = CanNm_ChanStatus[0].TxPduPtr;
  _20 = CanNm_ChanConfig[0].CbvPos;
  _21 = (sizetype) _20;
  _22 = _19 + _21;
  _23 = *_22;
  _24 = _23 | 64;
  *_22 = _24;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].PnFilterEnabled = 0;
  return;

}


CanNm_HsmCanNmSfPrepareBusSleepModeAction3 ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfReadySleepRemoteActivityEntry (); [tail call]
  return;

}


CanNm_HsmCanNmSfPrepareBusSleepModeGuard2 ()
{
  boolean retval.74;

  <bb 2> [local count: 1073741824]:
  retval.74_2 = CanNm_HsmCanNmSfBusSleepModeGuard3 (); [tail call]
  return retval.74_2;

}


CanNm_HsmCanNmSfPrepareBusSleepModeEntry ()
{
  short unsigned int _1;
  unsigned char _2;
  uint8 * _3;
  unsigned char _4;
  sizetype _5;
  uint8 * _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Enter_CanNm_SCHM_CANNM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].ActiveWakeUp1 = 0;
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].ActiveWakeUp2 = 0;
  # DEBUG BEGIN_STMT
  SchM_Exit_CanNm_SCHM_CANNM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanConfig[0].WBSTime;
  # DEBUG UniTimer => _1
  # DEBUG INLINE_ENTRY CanNm_UniTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].UniversalTimer = _1;
  # DEBUG UniTimer => NULL
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CurState = 2;
  # DEBUG BEGIN_STMT
  _2 = CanNm_ChanConfig[0].nmChannelId;
  Nm_PrepareBusSleepMode (_2);
  # DEBUG BEGIN_STMT
  _3 = CanNm_ChanStatus[0].TxPduPtr;
  _4 = CanNm_ChanConfig[0].CbvPos;
  _5 = (sizetype) _4;
  _6 = _3 + _5;
  TS_AtomicClearBit_8 (_6, 4);
  return;

}


CanNm_HsmCanNmSfRepeatMessageStateGuard2 ()
{
  unsigned char _1;
  short unsigned int _2;
  unsigned char iftmp.18_3;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _5 = _1 & 2;
  if (_5 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  _2 = CanNm_ChanStatus[0].RmsTimer;
  if (_2 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 805306369]:

  <bb 5> [local count: 1073741824]:
  # iftmp.18_3 = PHI <1(3), 0(4)>
  # DEBUG ret => iftmp.18_3
  # DEBUG BEGIN_STMT
  return iftmp.18_3;

}


CanNm_HsmCanNmSfRepeatMessageStateGuard1 ()
{
  unsigned char _1;
  short unsigned int _2;
  unsigned char iftmp.17_3;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _5 = _1 & 2;
  if (_5 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  _2 = CanNm_ChanStatus[0].RmsTimer;
  if (_2 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 805306369]:

  <bb 5> [local count: 1073741824]:
  # iftmp.17_3 = PHI <1(3), 0(4)>
  # DEBUG ret => iftmp.17_3
  # DEBUG BEGIN_STMT
  return iftmp.17_3;

}


CanNm_HsmCanNmSfRepeatMessageStateExit ()
{
  unsigned char _1;
  unsigned char _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].ImmediateNmTransmissionCounter = 0;
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].MessageFlags;
  _2 = _1 & 247;
  CanNm_ChanStatus[0].MessageFlags = _2;
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].RmsTimer = 0;
  return;

}


CanNm_HsmCanNmSfRepeatMessageStateEntry ()
{
  unsigned char _1;
  unsigned char _2;
  short unsigned int _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _7;
  short unsigned int _8;
  const struct CanNm_ConfigType * CanNm_RootPtr.15_9;
  short unsigned int _10;
  const struct CanNm_ConfigType * CanNm_RootPtr.16_11;
  short unsigned int _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _24;
  unsigned char _29;
  unsigned char _30;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].MessageFlags;
  _2 = _1 & 253;
  CanNm_ChanStatus[0].MessageFlags = _2;
  # DEBUG BEGIN_STMT
  _3 = CanNm_ChanConfig[0].RMSTime;
  CanNm_RmsTimerStart (_3);
  # DEBUG BEGIN_STMT
  if (_3 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _4 = CanNm_ChanStatus[0].MessageFlags;
  _5 = _4 | 8;
  CanNm_ChanStatus[0].MessageFlags = _5;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CurState = 5;
  # DEBUG BEGIN_STMT
  _6 = CanNm_ChanStatus[0].ChanStatus;
  _24 = _6 & 1;
  if (_24 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _7 = CanNm_ChanStatus[0].MessageFlags;
  _29 = _7 & 1;
  if (_29 != 0)
    goto <bb 6>; [67.00%]
  else
    goto <bb 10>; [33.00%]

  <bb 6> [local count: 359703511]:
  # DEBUG BEGIN_STMT
  _30 = _6 & 2;
  if (_30 != 0)
    goto <bb 7>; [67.00%]
  else
    goto <bb 9>; [33.00%]

  <bb 7> [local count: 241001352]:
  _8 = CanNm_ChanConfig[0].ImmediateNmTransmissions;
  if (_8 != 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 8> [local count: 79530446]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].ImmediateNmTransmissionCounter = _8;
  # DEBUG BEGIN_STMT
  # DEBUG MsgCycleTimer => 0
  # DEBUG INLINE_ENTRY CanNm_MsgCycleTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].MsgCycleTimer = 0;
  # DEBUG BEGIN_STMT
  # DEBUG D#1 => 0
  CanNm_MsgCycleTimerStart.part.0 ();
  goto <bb 11>; [100.00%]

  <bb 9> [local count: 280173065]:
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.15_9 = CanNm_RootPtr;
  _10 = CanNm_RootPtr.15_9->CanNm_ChannelData[0].CanNmMsgCycleOffset;
  CanNm_MsgCycleTimerStart (_10);
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.16_11 = CanNm_RootPtr;
  _12 = CanNm_RootPtr.16_11->CanNm_ChannelData[0].CanNmMsgCycleOffset;
  CanNm_MsgCycleTimerStart (_12);

  <bb 11> [local count: 1073741824]:
  # DEBUG MsgCycleTimer => NULL
  # DEBUG BEGIN_STMT
  _13 = CanNm_ChanStatus[0].MessageFlags;
  _14 = _13 & 254;
  CanNm_ChanStatus[0].MessageFlags = _14;
  return;

}


CanNm_HsmCanNmSfNormalOperationRemoteSleepAction3 ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfNetworkModeAction2 (); [tail call]
  return;

}


CanNm_HsmCanNmSfNormalOperationRemoteSleepAction2 ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfReadySleepRemoteActivityEntry (); [tail call]
  return;

}


CanNm_HsmCanNmSfNormalOperationRemoteSleepGuard1 ()
{
  boolean retval.76;

  <bb 2> [local count: 1073741824]:
  retval.76_2 = CanNm_HsmCanNmSfNormalOperationRemoteActivityGuard2 (); [tail call]
  return retval.76_2;

}


CanNm_HsmCanNmSfNormalOperationRemoteSleepEntry ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfReadySleepRemoteActivityEntry (); [tail call]
  return;

}


CanNm_HsmCanNmSfNormalOperationRemoteActivityAction4 ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfReadySleepRemoteActivityEntry (); [tail call]
  return;

}


CanNm_HsmCanNmSfNormalOperationRemoteActivityGuard4 ()
{
  unsigned char _1;
  unsigned char _2;
  unsigned char _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _4 = _1 & 1;
  _2 = 1 - _4;
  # DEBUG ret => _2
  # DEBUG BEGIN_STMT
  return _2;

}


CanNm_HsmCanNmSfNormalOperationRemoteActivityGuard2 ()
{
  unsigned char _1;
  unsigned char iftmp.12_2;
  unsigned char _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _4 = _1 & 2;
  if (_4 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.12_2 = PHI <1(2), 0(3)>
  # DEBUG ret => iftmp.12_2
  # DEBUG BEGIN_STMT
  return iftmp.12_2;

}


CanNm_HsmCanNmSfNormalOperationRemoteActivityAction1 ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfNetworkModeAction2 (); [tail call]
  return;

}


CanNm_HsmCanNmSfNormalOperationRemoteActivityEntry ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfReadySleepRemoteActivityEntry (); [tail call]
  return;

}


CanNm_HsmCanNmSfNormalOperationStateEntry ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CurState = 4;
  return;

}


CanNm_HsmCanNmSfSendingSubModeAction3 ()
{
  short unsigned int _1;
  unsigned char _2;
  short unsigned int _3;
  unsigned char _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].CanNmTimer;
  if (_1 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = CanNm_ChanStatus[0].ChanStatus;
  _7 = _2 & 1;
  if (_7 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (31, 0, 19, 17);
  # DEBUG BEGIN_STMT
  _3 = CanNm_ChanConfig[0].CanNmTime;
  # DEBUG CanNmTime => _3
  # DEBUG INLINE_ENTRY CanNm_NmTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CanNmTimer = _3;

  <bb 5> [local count: 1073741824]:
  # DEBUG CanNmTime => NULL
  return;

}


CanNm_HsmCanNmSfSendingSubModeAction2 ()
{
  unsigned char _1;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _5 = _1 & 1;
  if (_5 == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  CanNm_HandleTransmit ();

  <bb 4> [local count: 1073741824]:
  return;

}


CanNm_HsmCanNmSfSendingSubModeAction1 ()
{
  unsigned char _1;
  const struct CanNm_ConfigType * CanNm_RootPtr.11_2;
  unsigned char _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanConfig[0].nmChannelId;
  Nm_TxTimeoutException (_1);
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.11_2 = CanNm_RootPtr;
  _3 = CanNm_RootPtr.11_2->CanNm_ChannelData[0].PnEnabled;
  if (_3 == 1)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325345]:
  # DEBUG BEGIN_STMT
  CanSM_TxTimeoutException (_1);

  <bb 4> [local count: 1073741824]:
  return;

}


CanNm_HsmCanNmSfSendingSubModeExit ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY CanNm_MsgCycleTimerStop
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].MsgCycleTimer = 0;
  return;

}


CanNm_HsmCanNmSfReadySleepRemoteSleepAction3 ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfNetworkModeAction2 (); [tail call]
  return;

}


CanNm_HsmCanNmSfReadySleepRemoteSleepAction2 ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfReadySleepRemoteActivityEntry (); [tail call]
  return;

}


CanNm_HsmCanNmSfReadySleepRemoteSleepAction1 ()
{
  <bb 2> [local count: 1073741824]:
  CanNm_HsmCanNmSfReadySleepRemoteActivityAction1 (); [tail call]
  return;

}


CanNm_HsmCanNmSfReadySleepRemoteSleepGuard1 ()
{
  boolean retval.75;

  <bb 2> [local count: 1073741824]:
  retval.75_2 = CanNm_HsmCanNmSfReadySleepRemoteActivityGuard1 (); [tail call]
  return retval.75_2;

}


CanNm_HsmCanNmSfReadySleepRemoteActivityAction1 ()
{
  const struct CanNm_ConfigType * CanNm_RootPtr.8_1;
  short unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.8_1 = CanNm_RootPtr;
  _2 = CanNm_RootPtr.8_1->CanNm_ChannelData[0].CanNmMsgCycleOffset;
  CanNm_MsgCycleTimerStart (_2);
  return;

}


CanNm_HsmCanNmSfReadySleepRemoteActivityGuard1 ()
{
  boolean ret;
  const struct CanNm_ConfigType * CanNm_RootPtr.7_1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.7_1 = CanNm_RootPtr;
  _2 = CanNm_RootPtr.7_1->CanNm_ChannelData[0].PnHandleMultipleNetworkRequests;
  if (_2 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  _3 = CanNm_ChanStatus[0].ChanStatus;
  _6 = _3 & 2;
  if (_6 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 805306369]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 0

  <bb 5> [local count: 1073741824]:
  # ret_4 = PHI <1(3), 0(4)>
  # DEBUG ret => ret_4
  # DEBUG BEGIN_STMT
  return ret_4;

}


CanNm_HsmCanNmSfReadySleepRemoteActivityEntry ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


CanNm_HsmCanNmSfReadySleepStateGuard1 ()
{
  short unsigned int _1;
  unsigned char iftmp.6_2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].CanNmTimer;
  if (_1 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.6_2 = PHI <1(2), 0(3)>
  # DEBUG ret => iftmp.6_2
  # DEBUG BEGIN_STMT
  return iftmp.6_2;

}


CanNm_HsmCanNmSfReadySleepStateEntry ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CurState = 3;
  return;

}


CanNm_HsmCanNmSfNetworkModeGuard4 ()
{
  boolean ret;
  const struct CanNm_ConfigType * CanNm_RootPtr.5_1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 0
  # DEBUG BEGIN_STMT
  CanNm_RootPtr.5_1 = CanNm_RootPtr;
  _2 = CanNm_RootPtr.5_1->CanNm_ChannelData[0].PnHandleMultipleNetworkRequests;
  if (_2 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  _3 = CanNm_ChanStatus[0].ChanStatus;
  _5 = _3 & 2;
  if (_5 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 891205715]:
  # DEBUG BEGIN_STMT
  # DEBUG ret => 0

  <bb 5> [local count: 1073741824]:
  # ret_4 = PHI <1(3), 0(4)>
  # DEBUG ret => ret_4
  # DEBUG BEGIN_STMT
  return ret_4;

}


CanNm_HsmCanNmSfNetworkModeAction3 ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_HandleTxConfirmation ();
  return;

}


CanNm_HsmCanNmSfNetworkModeAction2 ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_HandleRxIndicationCommon ();
  return;

}


CanNm_HsmCanNmSfNetworkModeAction1 ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_HandleComControl ();
  return;

}


CanNm_HsmCanNmSfNetworkModeEntry ()
{
  unsigned char _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  uint8 * _7;
  unsigned char _8;
  sizetype _9;
  uint8 * _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _16 = _1 & 1;
  if (_16 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = CanNm_ChanConfig[0].CanNmTime;
  # DEBUG CanNmTime => _2
  # DEBUG INLINE_ENTRY CanNm_NmTimerStart
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CanNmTimer = _2;

  <bb 4> [local count: 1073741824]:
  # DEBUG CanNmTime => NULL
  # DEBUG BEGIN_STMT
  _3 = CanNm_ChanConfig[0].nmChannelId;
  Nm_NetworkMode (_3);
  # DEBUG BEGIN_STMT
  _4 = CanNm_ChanStatus[0].ActiveWakeUp1;
  if (_4 == 1)
    goto <bb 5>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 5> [local count: 365072220]:
  _5 = CanNm_ChanStatus[0].CurState;
  _6 = _5 + 255;
  if (_6 <= 1)
    goto <bb 6>; [25.50%]
  else
    goto <bb 7>; [74.50%]

  <bb 6> [local count: 93093416]:
  # DEBUG BEGIN_STMT
  _7 = CanNm_ChanStatus[0].TxPduPtr;
  _8 = CanNm_ChanConfig[0].CbvPos;
  _9 = (sizetype) _8;
  _10 = _7 + _9;
  TS_AtomicSetBit_8 (_10, 4);

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].NmTimerExpired = 0;
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].FirstCanIfTransmitOk = 0;
  # DEBUG BEGIN_STMT
  _11 = CanNm_ChanStatus[0].MessageFlags;
  _12 = _11 | 1;
  CanNm_ChanStatus[0].MessageFlags = _12;
  return;

}


CanNm_HsmCanNmSfBusSleepModeGuard3 ()
{
  boolean ret;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanStatus[0].ChanStatus;
  _2 = (unsigned int) _1;
  _3 = _2 >> 1;
  _4 = (unsigned char) _3;
  ret_6 = _4 & 1;
  # DEBUG ret => ret_6
  # DEBUG BEGIN_STMT
  return ret_6;

}


CanNm_HsmCanNmSfBusSleepModeAction1 ()
{
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanConfig[0].nmChannelId;
  Nm_NetworkStartIndication (_1);
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (31, 0, 16, 4);
  return;

}


CanNm_HsmCanNmSfBusSleepModeEntry ()
{
  Nm_StateType PrevState;
  unsigned char _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  PrevState_4 = CanNm_ChanStatus[0].CurState;
  # DEBUG PrevState => PrevState_4
  # DEBUG BEGIN_STMT
  SchM_Enter_CanNm_SCHM_CANNM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].ActiveWakeUp1 = 0;
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].ActiveWakeUp2 = 0;
  # DEBUG BEGIN_STMT
  SchM_Exit_CanNm_SCHM_CANNM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CurState = 1;
  # DEBUG BEGIN_STMT
  if (PrevState_4 == 2)
    goto <bb 3>; [20.24%]
  else
    goto <bb 4>; [79.76%]

  <bb 3> [local count: 217325345]:
  # DEBUG BEGIN_STMT
  _1 = CanNm_ChanConfig[0].nmChannelId;
  Nm_BusSleepMode (_1);

  <bb 4> [local count: 1073741824]:
  return;

}


CanNm_HsmCanNmSfTOPEntry ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  CanNm_InitIntVar ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].TimeoutTimer = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY CanNm_NmTimerStop
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].CanNmTimer = 0;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY CanNm_UniTimerStop
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].UniversalTimer = 0;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY CanNm_MsgCycleTimerStop
  # DEBUG BEGIN_STMT
  CanNm_ChanStatus[0].MsgCycleTimer = 0;
  return;

}


