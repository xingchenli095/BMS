Parsed function:SWC_ModifyEcho_ModifyEcho_FD
Parsed function:SWC_ModifyEcho_ModifyEcho
Dump after hash based groups
Congruence classes: 2 (unique hash values: 2), with total: 2 items
Class size histogram [num of members]: number of classe number of classess
[1]: 2 classes


Dump after WPA based types groups
Congruence classes: 2 (unique hash values: 2), with total: 2 items
Class size histogram [num of members]: number of classe number of classess
[1]: 2 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 2 (unique hash values: 2), with total: 2 items
Class size histogram [num of members]: number of classe number of classess
[1]: 2 classes


Init called for 0 items (0.00%).
Dump after full equality comparison of groups
Congruence classes: 2 (unique hash values: 2), with total: 2 items
Class size histogram [num of members]: number of classe number of classess
[1]: 2 classes


Worklist has been filled with: 0
Address reference subdivision created: 0 new classes.
Congruence classes: 2 (unique hash values: 2), with total: 2 items
Class size histogram [num of members]: number of classe number of classess
[1]: 2 classes



Item count: 2
Congruent classes before: 2, after: 2
Average class size before: 1.00, after: 1.00
Average non-singular class size: 0.00, count: 0
Equal symbols: 0
Fraction of visited symbols: 0.00%

SWC_ModifyEcho_ModifyEcho_FD ()
{
  uint8 echoValue;
  uint8 inputValue;
  unsigned char inputValue.7_1;
  const struct Rte_CDS_SWC_ModifyEcho * Rte_Inst_SWC_ModifyEcho.8_2;
  struct Rte_DE_uint8 * _3;
  unsigned char echoValue.9_4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  inputValue = 0;
  # DEBUG BEGIN_STMT
  echoValue = 0;
  # DEBUG BEGIN_STMT
  Rte_Read_SWC_ModifyEcho_R_NewCounterIn_FD_CounterValue_FD (&inputValue);
  # DEBUG BEGIN_STMT
  inputValue.7_1 = inputValue;
  Rte_Call_SWC_ModifyEcho_R_EchoResult_FD_SetCounterAndAdd_FD (inputValue.7_1, &echoValue);
  # DEBUG BEGIN_STMT
  Rte_Inst_SWC_ModifyEcho.8_2 = Rte_Inst_SWC_ModifyEcho;
  _3 = Rte_Inst_SWC_ModifyEcho.8_2->ModifyEcho_FD_P_EchoOut_FD_CounterValue_FD;
  echoValue.9_4 = echoValue;
  _3->value = echoValue.9_4;
  inputValue ={v} {CLOBBER};
  echoValue ={v} {CLOBBER};
  return;

}


SWC_ModifyEcho_ModifyEcho ()
{
  uint8 inputValue;
  uint8 echoValue;
  unsigned char inputValue.0_1;
  const struct Rte_CDS_SWC_ModifyEcho * Rte_Inst_SWC_ModifyEcho.2_2;
  struct Rte_DE_uint8 * _3;
  unsigned char inputValue.3_4;
  const struct Rte_CDS_SWC_ModifyEcho * Rte_Inst_SWC_ModifyEcho.5_5;
  struct Rte_DE_uint8 * _6;
  unsigned char echoValue.6_7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  echoValue = 0;
  # DEBUG BEGIN_STMT
  inputValue = 0;
  # DEBUG BEGIN_STMT
  Rte_Read_SWC_ModifyEcho_R_NewCounterIn_CounterValue (&inputValue);
  # DEBUG BEGIN_STMT
  inputValue.0_1 = inputValue;
  if (inputValue.0_1 > 239)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Rte_Send_SWC_ModifyEcho_P_SpecialRequest_EventMessage (inputValue.0_1);
  # DEBUG BEGIN_STMT
  Rte_Inst_SWC_ModifyEcho.2_2 = Rte_Inst_SWC_ModifyEcho;
  _3 = Rte_Inst_SWC_ModifyEcho.2_2->ModifyEcho_P_EchoOut_CounterValue;
  inputValue.3_4 = inputValue;
  _3->value = inputValue.3_4;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Rte_Call_SWC_ModifyEcho_R_EchoResult_SetCounterAndAdd (inputValue.0_1, &echoValue);
  # DEBUG BEGIN_STMT
  Rte_Inst_SWC_ModifyEcho.5_5 = Rte_Inst_SWC_ModifyEcho;
  _6 = Rte_Inst_SWC_ModifyEcho.5_5->ModifyEcho_P_EchoOut_CounterValue;
  echoValue.6_7 = echoValue;
  _6->value = echoValue.6_7;

  <bb 5> [local count: 1073741824]:
  echoValue ={v} {CLOBBER};
  inputValue ={v} {CLOBBER};
  return;

}


