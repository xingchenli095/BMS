
Marking local functions:


Marking externally visible functions: OS_KernResumeInterrupts


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_stopIsrIntLockTimingFp/10 (OS_stopIsrIntLockTimingFp) @06d4f990
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernResumeInterrupts/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_LowerCurrentTasksPriority/9 (OS_LowerCurrentTasksPriority) @06d1f8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernResumeInterrupts/0 
  Calls: 
OS_stopTaskIntLockTimingFp/8 (OS_stopTaskIntLockTimingFp) @06d4f870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernResumeInterrupts/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CORTEXM_IntSetDisablingLevel/7 (OS_CORTEXM_IntSetDisablingLevel) @06d1f7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernResumeInterrupts/0 OS_KernResumeInterrupts/0 OS_KernResumeInterrupts/0 OS_KernResumeInterrupts/0 
  Calls: 
OS_intDisableLevelMax/6 (OS_intDisableLevelMax) @06d4f798
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernResumeInterrupts/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_ResumeInterrupts/5 (OS_svc_ResumeInterrupts) @06d4f750
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernResumeInterrupts/0 (addr)OS_KernResumeInterrupts/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/4 (OS_Error) @06d1f700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernResumeInterrupts/0 OS_KernResumeInterrupts/0 
  Calls: 
OS_configMode/3 (OS_configMode) @06d4f6c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_permittedContext/2 (OS_permittedContext) @06d4f678
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06d4f630
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernResumeInterrupts/0 (addr)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (addr)OS_KernResumeInterrupts/0 (addr)OS_KernResumeInterrupts/0 (addr)OS_KernResumeInterrupts/0 (addr)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (addr)OS_KernResumeInterrupts/0 (addr)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)OS_KernResumeInterrupts/0 (read)
  Availability: not_available
  Varpool flags:
OS_KernResumeInterrupts/0 (OS_KernResumeInterrupts) @06d1f2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (addr)OS_kernelData/1 (addr)OS_kernelData/1 (addr)OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (addr)OS_kernelData/1 (addr)OS_configMode/3 (read)OS_svc_ResumeInterrupts/5 (addr)OS_intDisableLevelMax/6 (read)OS_kernelData/1 (read)OS_stopTaskIntLockTimingFp/8 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_stopIsrIntLockTimingFp/10 (read)OS_kernelData/1 (read)OS_configMode/3 (read)OS_svc_ResumeInterrupts/5 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Error/4 OS_CORTEXM_IntSetDisablingLevel/7 OS_CORTEXM_IntSetDisablingLevel/7 OS_LowerCurrentTasksPriority/9 OS_CORTEXM_IntSetDisablingLevel/7 OS_CORTEXM_IntSetDisablingLevel/7 OS_Error/4 
   Indirect call
   Indirect call
__attribute__((target ("general-regs-only")))
OS_KernResumeInterrupts (os_intlocktype_t locktype)
{
  os_paramtype_t p[3];
  os_prio_t * pPrioBeforeSuspend;
  os_intstatus_t is;
  os_uint8_t * ncp;
  os_oldlevel_t * olp;
  struct os_taskdynamic_t * td;
  struct os_kerneldata_t * const kernel_data;
  int iftmp.1;
  _Bool iftmp.0;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  td = 0B;
  # DEBUG BEGIN_STMT
  olp = 0B;
  # DEBUG BEGIN_STMT
  ncp = 0B;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pPrioBeforeSuspend = 0B;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  p[0] = locktype;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.inFunction;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.taskCurrent;
  td = _2->dynamic;
  # DEBUG BEGIN_STMT
  if (locktype == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = td->nestSuspendAll;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  olp = &td->oldSuspendOs;
  # DEBUG BEGIN_STMT
  ncp = &td->nestSuspendOs;
  # DEBUG BEGIN_STMT
  pPrioBeforeSuspend = &td->prioBeforeSuspendOs;
  goto <bb 24>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  olp = &td->oldSuspendAll;
  # DEBUG BEGIN_STMT
  ncp = &td->nestSuspendAll;
  goto <bb 24>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _4 = OS_kernelData.inFunction;
  if (_4 == 3)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (locktype == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.nestSuspendAll;
  if (_5 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  olp = &OS_kernelData.oldSuspendOs;
  # DEBUG BEGIN_STMT
  ncp = &OS_kernelData.nestSuspendOs;
  goto <bb 24>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  olp = &OS_kernelData.oldSuspendAll;
  # DEBUG BEGIN_STMT
  ncp = &OS_kernelData.nestSuspendAll;
  goto <bb 24>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _6 = OS_kernelData.inFunction;
  if (_6 == 10)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  OS_permittedContext.2_7 = OS_permittedContext;
  _8 = OS_permittedContext.2_7 + 58;
  _9 = *_8;
  _10 = (unsigned int) _9;
  _11 = _10 & 1024;
  if (_11 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  OS_permittedContext.3_12 = OS_permittedContext;
  _13 = OS_permittedContext.3_12 + 58;
  _14 = *_13;
  _15 = OS_kernelData.errorStatus.calledFrom;
  _16 = (int) _15;
  _17 = 1 << _16;
  _18 = (short unsigned int) _17;
  _19 = _14 & _18;
  if (_19 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.1 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.1 = 0;

  <bb 17> :
  iftmp.0 = iftmp.1 != 0;
  goto <bb 19>; [INV]

  <bb 18> :
  OS_permittedContext.4_20 = OS_permittedContext;
  _21 = OS_permittedContext.4_20 + 58;
  _22 = *_21;
  _23 = OS_kernelData.inFunction;
  _24 = (int) _23;
  _25 = 1 << _24;
  _26 = (short unsigned int) _25;
  _27 = _22 & _26;
  iftmp.0 = _27 != 0;

  <bb 19> :
  if (iftmp.0 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  if (locktype != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  olp = &OS_kernelData.oldSuspendAll;
  # DEBUG BEGIN_STMT
  ncp = &OS_kernelData.nestSuspendAll;
  goto <bb 24>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  OS_configMode.5_28 = OS_configMode;
  _29 = OS_configMode.5_28 & 1024;
  if (_29 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_ResumeInterrupts, 12, &p);

  <bb 24> :
  # DEBUG BEGIN_STMT
  if (ncp != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  OS_intDisableLevelMax.6_30 = OS_intDisableLevelMax;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_intDisableLevelMax.6_30);
  # DEBUG BEGIN_STMT
  if (td != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  _31 = td->state;
  if (_31 != 5)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  goto <bb 40>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  _32 = *ncp;
  if (_32 == 1)
    goto <bb 29>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  _33 = OS_kernelData.inFunction;
  if (_33 == 1)
    goto <bb 30>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 30> :
  # DEBUG BEGIN_STMT
  OS_stopTaskIntLockTimingFp.7_34 = OS_stopTaskIntLockTimingFp;
  _35 = OS_kernelData.taskCurrent;
  OS_stopTaskIntLockTimingFp.7_34 (_35, locktype);
  # DEBUG BEGIN_STMT
  if (pPrioBeforeSuspend != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 31> :
  # DEBUG BEGIN_STMT
  _36 = *pPrioBeforeSuspend;
  OS_LowerCurrentTasksPriority (_36);
  # DEBUG BEGIN_STMT
  *pPrioBeforeSuspend = 0;
  goto <bb 34>; [INV]

  <bb 32> :
  # DEBUG BEGIN_STMT
  _37 = OS_kernelData.inFunction;
  if (_37 == 3)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  # DEBUG BEGIN_STMT
  OS_stopIsrIntLockTimingFp.8_38 = OS_stopIsrIntLockTimingFp;
  _39 = OS_kernelData.isrCurrent;
  OS_stopIsrIntLockTimingFp.8_38 (_39, locktype);

  <bb 34> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *ncp = 0;
  # DEBUG BEGIN_STMT
  _40 = *olp;
  OS_CORTEXM_IntSetDisablingLevel (_40);
  # DEBUG BEGIN_STMT
  goto <bb 40>; [INV]

  <bb 35> :
  # DEBUG BEGIN_STMT
  if (locktype != 2)
    goto <bb 36>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 36> :
  _41 = *ncp;
  if (_41 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  # DEBUG BEGIN_STMT
  _42 = *ncp;
  _43 = _42;
  _44 = _43 + 255;
  *ncp = _44;
  # DEBUG BEGIN_STMT
  goto <bb 40>; [INV]

  <bb 38> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  # DEBUG BEGIN_STMT
  OS_configMode.9_45 = OS_configMode;
  _46 = OS_configMode.9_45 & 1024;
  if (_46 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_ResumeInterrupts, 29, &p);

  <bb 40> :
  # DEBUG BEGIN_STMT
  p = {CLOBBER};
  return;

}


