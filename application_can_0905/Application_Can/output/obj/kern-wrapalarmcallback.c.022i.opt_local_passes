__attribute__((target ("general-regs-only")))
OS_WrapAlarmCallback (const struct os_alarm_t * a)
{
  struct os_kerneldata_t * const kernel_data;
  os_oldlevel_t saveOldSuspendAll;
  os_uint8_t saveNestSuspendAll;
  os_uint8_t saveInFunction;
  os_intstatus_t is;
  short unsigned int OS_kernDisableLevel.0_1;
  unsigned int _2;
  void (*<T467>) (void) _3;
  unsigned char _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  kernel_data_6 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_6
  # DEBUG BEGIN_STMT
  saveInFunction_8 = OS_kernelData.inFunction;
  # DEBUG saveInFunction => saveInFunction_8
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 4;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_1 = OS_kernDisableLevel;
  is_11 = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.0_1);
  # DEBUG is => is_11
  # DEBUG BEGIN_STMT
  saveNestSuspendAll_12 = OS_kernelData.nestSuspendAll;
  # DEBUG saveNestSuspendAll => saveNestSuspendAll_12
  # DEBUG BEGIN_STMT
  saveOldSuspendAll_13 = OS_kernelData.oldSuspendAll;
  # DEBUG saveOldSuspendAll => saveOldSuspendAll_13
  # DEBUG BEGIN_STMT
  OS_kernelData.nestSuspendAll = 0;
  # DEBUG BEGIN_STMT
  _2 = a_15(D)->object;
  _3 = OS_alarmCallback[_2];
  _3 ();
  # DEBUG BEGIN_STMT
  _4 = OS_kernelData.nestSuspendAll;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_Error (&OS_svc_HookHandler, 55, 0B);

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_kernelData.nestSuspendAll = saveNestSuspendAll_12;
  # DEBUG BEGIN_STMT
  OS_kernelData.oldSuspendAll = saveOldSuspendAll_13;
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is_11);
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = saveInFunction_8;
  return;

}


