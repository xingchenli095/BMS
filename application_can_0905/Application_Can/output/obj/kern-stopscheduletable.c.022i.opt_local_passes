__attribute__((target ("general-regs-only")))
OS_KernStopScheduleTable (os_scheduleid_t s)
{
  os_errorresult_t e;
  const struct os_schedule_t * const ss;
  const struct os_appcontext_t * const app;
  os_paramtype_t p[3];
  os_result_t r;
  unsigned int _1;
  unsigned char _2;
  const os_callermask_t * OS_permittedContext.2_3;
  const os_callermask_t * _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  const os_callermask_t * OS_permittedContext.3_8;
  const os_callermask_t * _9;
  short unsigned int _10;
  unsigned char _11;
  int _12;
  int _13;
  short unsigned int _14;
  short unsigned int _15;
  const os_callermask_t * OS_permittedContext.4_16;
  const os_callermask_t * _17;
  short unsigned int _18;
  unsigned char _19;
  int _20;
  int _21;
  short unsigned int _22;
  short unsigned int _23;
  unsigned char OS_iecMode.5_24;
  unsigned char _25;
  const struct os_task_t * _26;
  struct os_taskdynamic_t * _27;
  short unsigned int _28;
  short unsigned int _29;
  short unsigned int _30;
  short unsigned int _31;
  unsigned char OS_nSchedules.6_32;
  unsigned char _33;
  const struct os_task_t * _34;
  unsigned char _35;
  const struct os_isr_t * OS_isrTableBase.9_36;
  short unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  const struct os_isr_t * _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  const struct os_schedule_t * OS_scheduleTableBase.11_44;
  unsigned int _45;
  unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  unsigned int _49;
  _Bool iftmp.0_51;
  int iftmp.1_52;
  const struct os_appcontext_t * iftmp.7_53;
  const struct os_appcontext_t * iftmp.8_54;
  const struct os_appcontext_t * iftmp.10_55;
  _Bool iftmp.0_61;
  int iftmp.1_62;
  int iftmp.1_63;
  _Bool iftmp.0_64;
  const struct os_appcontext_t * iftmp.10_67;
  const struct os_appcontext_t * iftmp.10_68;
  const struct os_appcontext_t * iftmp.8_69;
  const struct os_appcontext_t * iftmp.8_70;
  const struct os_appcontext_t * iftmp.7_71;
  const struct os_appcontext_t * iftmp.7_72;
  os_result_t _85;

  <bb 2> :
  # DEBUG BEGIN_STMT
  r_57 = 0;
  # DEBUG r => r_57
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) s_58(D);
  p[0] = _1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.inFunction;
  if (_2 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.2_3 = OS_permittedContext;
  _4 = OS_permittedContext.2_3 + 18;
  _5 = *_4;
  _6 = (unsigned int) _5;
  _7 = _6 & 1024;
  if (_7 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.3_8 = OS_permittedContext;
  _9 = OS_permittedContext.3_8 + 18;
  _10 = *_9;
  _11 = OS_kernelData.errorStatus.calledFrom;
  _12 = (int) _11;
  _13 = 1 << _12;
  _14 = (short unsigned int) _13;
  _15 = _10 & _14;
  if (_15 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1_62 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1_63 = 0;

  <bb 7> :
  # iftmp.1_52 = PHI <iftmp.1_62(5), iftmp.1_63(6)>
  iftmp.0_64 = iftmp.1_52 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.4_16 = OS_permittedContext;
  _17 = OS_permittedContext.4_16 + 18;
  _18 = *_17;
  _19 = OS_kernelData.inFunction;
  _20 = (int) _19;
  _21 = 1 << _20;
  _22 = (short unsigned int) _21;
  _23 = _18 & _22;
  iftmp.0_61 = _23 == 0;

  <bb 9> :
  # iftmp.0_51 = PHI <iftmp.0_64(7), iftmp.0_61(8)>
  if (iftmp.0_51 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  r_84 = OS_Error (&OS_svc_StopScheduleTable, 12, &p);
  # DEBUG r => r_84
  goto <bb 34>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_iecMode.5_24 = OS_iecMode;
  if (OS_iecMode.5_24 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  _25 = OS_kernelData.inFunction;
  if (_25 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _26 = OS_kernelData.taskCurrent;
  _27 = _26->dynamic;
  _28 = BIT_FIELD_REF <MEM[(void *)_27], 16, 160>;
  _29 = _28;
  if (_29 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _30 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _31 = _30;
  if (_31 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  r_66 = OS_Error (&OS_svc_StopScheduleTable, 55, &p);
  # DEBUG r => r_66
  goto <bb 34>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_nSchedules.6_32 = OS_nSchedules;
  if (s_58(D) >= OS_nSchedules.6_32)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  r_82 = OS_Error (&OS_svc_StopScheduleTable, 40, &p);
  # DEBUG r => r_82
  goto <bb 34>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _33 = OS_kernelData.inFunction;
  if (_33 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _34 = OS_kernelData.taskCurrent;
  iftmp.7_72 = _34->app;
  goto <bb 29>; [INV]

  <bb 20> :
  _35 = OS_kernelData.inFunction;
  if (_35 == 3)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  OS_isrTableBase.9_36 = OS_isrTableBase;
  _37 = OS_kernelData.isrCurrent;
  _38 = (unsigned int) _37;
  _39 = _38 * 68;
  _40 = OS_isrTableBase.9_36 + _39;
  iftmp.8_70 = _40->app;
  goto <bb 28>; [INV]

  <bb 22> :
  _41 = OS_kernelData.inFunction;
  if (_41 == 10)
    goto <bb 25>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  _42 = OS_kernelData.inFunction;
  if (_42 == 8)
    goto <bb 25>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  _43 = OS_kernelData.inFunction;
  if (_43 == 9)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  iftmp.10_68 = OS_kernelData.hookApp;
  goto <bb 27>; [INV]

  <bb 26> :
  iftmp.10_67 = 0B;

  <bb 27> :
  # iftmp.10_55 = PHI <iftmp.10_68(25), iftmp.10_67(26)>
  iftmp.8_69 = iftmp.10_55;

  <bb 28> :
  # iftmp.8_54 = PHI <iftmp.8_70(21), iftmp.8_69(27)>
  iftmp.7_71 = iftmp.8_54;

  <bb 29> :
  # iftmp.7_53 = PHI <iftmp.7_72(19), iftmp.7_71(28)>
  app_73 = iftmp.7_53;
  # DEBUG app => app_73
  # DEBUG BEGIN_STMT
  OS_scheduleTableBase.11_44 = OS_scheduleTableBase;
  _45 = (unsigned int) s_58(D);
  _46 = _45 * 36;
  ss_74 = OS_scheduleTableBase.11_44 + _46;
  # DEBUG ss => ss_74
  # DEBUG BEGIN_STMT
  if (app_73 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 30> :
  _47 = app_73->permissionBit;
  _48 = ss_74->permissions;
  _49 = _47 & _48;
  if (_49 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  # DEBUG BEGIN_STMT
  r_76 = OS_Error (&OS_svc_StopScheduleTable, 37, &p);
  # DEBUG r => r_76
  goto <bb 34>; [INV]

  <bb 32> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  e_78 = OS_LocalStopScheduleTable (s_58(D), ss_74);
  # DEBUG e => e_78
  # DEBUG BEGIN_STMT
  if (e_78 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  # DEBUG BEGIN_STMT
  r_80 = OS_Error (&OS_svc_StopScheduleTable, e_78, &p);
  # DEBUG r => r_80

  <bb 34> :
  # r_50 = PHI <r_84(10), r_66(15), r_82(17), r_76(31), r_57(32), r_80(33)>
  # DEBUG r => r_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _85 = r_50;
  p ={v} {CLOBBER};
  return _85;

}


