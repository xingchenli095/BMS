Com_StartOfReception (PduIdType ComRxPduId, PduLengthType TpSduLength, PduLengthType * RxBufferSizePtr)
{
  BufReq_ReturnType RetVal;
  BufReq_ReturnType _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_1 = 1;
  # DEBUG RetVal => RetVal_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = RetVal_1;
  return _2;

}


Com_CopyRxData (PduIdType PduId, const struct PduInfoType * PduInfoPointer, PduLengthType * RxBufferSizePtr)
{
  BufReq_ReturnType RetVal;
  BufReq_ReturnType _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_1 = 1;
  # DEBUG RetVal => RetVal_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = RetVal_1;
  return _2;

}


Com_CopyTxData (PduIdType PduId, struct PduInfoType * PduInfoPtr, struct RetryInfoType * RetryInfoPtr, PduLengthType * TxDataCntPtr)
{
  BufReq_ReturnType RetVal;
  BufReq_ReturnType _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_1 = 1;
  # DEBUG RetVal => RetVal_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = RetVal_1;
  return _2;

}


Com_GetStatus ()
{
  Com_StatusType statusRetVal;
  unsigned char Com_InitStatus.911_1;
  int _2;
  Com_StatusType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  statusRetVal_4 = 0;
  # DEBUG statusRetVal => statusRetVal_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.911_1 = Com_InitStatus;
  _2 = (int) Com_InitStatus.911_1;
  switch (_2) <default: <L5> [INV], case 0: <L0> [INV], case 1: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  statusRetVal_7 = 0;
  # DEBUG statusRetVal => statusRetVal_7
  # DEBUG BEGIN_STMT
  goto <bb 5>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  statusRetVal_6 = 1;
  # DEBUG statusRetVal => statusRetVal_6
  # DEBUG BEGIN_STMT

  <bb 5> :
  # statusRetVal_3 = PHI <statusRetVal_7(3), statusRetVal_6(4), statusRetVal_4(2)>
<L5>:
  # DEBUG statusRetVal => statusRetVal_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = statusRetVal_3;
  return _8;

}


Com_DeInit ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_GetVersionInfo (struct Std_VersionInfoType * versionInfoPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  if (versionInfoPtr_2(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 9, 3);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->vendorID = 1;
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->moduleID = 50;
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->sw_major_version = 6;
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->sw_minor_version = 3;
  # DEBUG BEGIN_STMT
  versionInfoPtr_2(D)->sw_patch_version = 53;

  <bb 5> :
  return;

}


Com_UpdateShadowSignal (Com_SignalIdType SignalId, const void * SignalDataPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_SendSignal (SignalId_2(D), SignalDataPtr_3(D));
  # DEBUG BEGIN_STMT
  return;

}


Com_TpTxConfirmation (PduIdType PduId, NotifResultType Result)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_TxConfirmation (PduIdType ComTxPduId)
{
  const struct ComTxIPduType * IPduPtr;
  unsigned char Com_InitStatus.888_1;
  const struct Com_ConfigType * Com_gConfigPtr.889_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.890_4;
  const struct Com_ConfigType * Com_gConfigPtr.891_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.888_1 = Com_InitStatus;
  if (Com_InitStatus.888_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 64, 2);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.889_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.889_2->ComTxIPduArraySize;
  if (ComTxPduId_12(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 64, 1);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.890_4 = Com_gConfigPtr;
  Com_gConfigPtr.891_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.891_5->ComTxIPduRef;
  _7 = (unsigned int) ComTxPduId_12(D);
  _8 = _7 * 64;
  _9 = _6 + _8;
  IPduPtr_13 = Com_gConfigPtr.890_4 + _9;
  # DEBUG IPduPtr => IPduPtr_13
  # DEBUG BEGIN_STMT
  Com_EB_HlpTxConfirmation (ComTxPduId_12(D), IPduPtr_13);

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_HlpTxConfirmation (PduIdType ComTxPduId, const struct ComTxIPduType * IPduPtr)
{
  uint8 * const NTimesQueueBaseRemaining;
  ComIPduRefType NRamBufIdx;
  uint8 N;
  const ComTxIPduMinimumDelayTimeFactorType MDT;
  uint8 BitRes;
  uint8 AktTM;
  unsigned char _1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  uint8 * Com_gDataMemPtr.892_5;
  const struct Com_ConfigType * Com_gConfigPtr.893_6;
  short unsigned int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned int _14;
  unsigned int _15;
  uint8 * Com_gDataMemPtr.894_16;
  const struct Com_ConfigType * Com_gConfigPtr.895_17;
  short unsigned int _18;
  int _19;
  int _20;
  int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  int _28;
  uint8 * Com_gDataMemPtr.897_29;
  const struct Com_ConfigType * Com_gConfigPtr.898_30;
  short unsigned int _31;
  int _32;
  int _33;
  int _34;
  sizetype _35;
  uint8 * _36;
  unsigned char _37;
  unsigned char _38;
  uint8 * Com_gDataMemPtr.899_39;
  const struct Com_ConfigType * Com_gConfigPtr.900_40;
  short unsigned int _41;
  int _42;
  int _43;
  int _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned int _48;
  unsigned int _49;
  uint8 * Com_gDataMemPtr.901_50;
  const struct Com_ConfigType * Com_gConfigPtr.902_51;
  short unsigned int _52;
  sizetype _53;
  sizetype _54;
  uint8 * _55;
  unsigned char _56;
  sizetype _57;
  uint8 * _58;
  uint8 * Com_gDataMemPtr.903_59;
  const struct Com_ConfigType * Com_gConfigPtr.904_60;
  short unsigned int _61;
  int _62;
  int _63;
  int _64;
  sizetype _65;
  uint8 * _66;
  unsigned char _67;
  uint8 * Com_gDataMemPtr.905_68;
  const struct Com_ConfigType * Com_gConfigPtr.906_69;
  short unsigned int _70;
  int _71;
  int _72;
  int _73;
  sizetype _74;
  uint8 * _75;
  unsigned char _76;
  uint8 * Com_gDataMemPtr.907_77;
  const struct Com_ConfigType * Com_gConfigPtr.908_78;
  short unsigned int _79;
  int _80;
  int _81;
  int _82;
  sizetype _83;
  uint8 * _84;
  uint8 iftmp.896_85;
  uint8 iftmp.896_98;
  uint8 iftmp.896_99;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_92(D)->ComTxIPduFlags;
  _2 = _1 >> 3;
  _3 = (unsigned int) _2;
  _4 = _3 & 3;
  if (_4 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_ClearTxUpdateBits (IPduPtr_92(D));

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.892_5 = Com_gDataMemPtr;
  Com_gConfigPtr.893_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.893_6->ComTxIPduStatusBase;
  _8 = (int) _7;
  _9 = (int) ComTxPduId_94(D);
  _10 = _8 + _9;
  _11 = (sizetype) _10;
  _12 = Com_gDataMemPtr.892_5 + _11;
  _13 = *_12;
  _14 = (unsigned int) _13;
  _15 = _14 & 2;
  if (_15 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  MDT_95 = IPduPtr_92(D)->ComTxIPduMinimumDelayTimeFactorValue;
  # DEBUG MDT => MDT_95
  # DEBUG BEGIN_STMT
  Com_EB_MdtQueue (ComTxPduId_94(D), IPduPtr_92(D), MDT_95);

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.894_16 = Com_gDataMemPtr;
  Com_gConfigPtr.895_17 = Com_gConfigPtr;
  _18 = Com_gConfigPtr.895_17->ComTxIPduStatusBase;
  _19 = (int) _18;
  _20 = (int) ComTxPduId_94(D);
  _21 = _19 + _20;
  _22 = (sizetype) _21;
  _23 = Com_gDataMemPtr.894_16 + _22;
  _24 = *_23;
  _25 = _24 >> 6;
  BitRes_97 = _25 & 1;
  # DEBUG BitRes => BitRes_97
  # DEBUG BEGIN_STMT
  if (BitRes_97 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _26 = IPduPtr_92(D)->ComTxModeModes;
  iftmp.896_99 = _26 & 15;
  goto <bb 9>; [INV]

  <bb 8> :
  _27 = IPduPtr_92(D)->ComTxModeModes;
  iftmp.896_98 = _27 >> 4;

  <bb 9> :
  # iftmp.896_85 = PHI <iftmp.896_99(7), iftmp.896_98(8)>
  AktTM_100 = iftmp.896_85;
  # DEBUG AktTM => AktTM_100
  # DEBUG BEGIN_STMT
  _28 = (int) AktTM_100;
  switch (_28) <default: <L21> [INV], case 0: <L18> [INV], case 1 ... 3: <L13> [INV], case 4: <L8> [INV], case 5: <L7> [INV]>

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.897_29 = Com_gDataMemPtr;
  Com_gConfigPtr.898_30 = Com_gConfigPtr;
  _31 = Com_gConfigPtr.898_30->ComTxIPduStatusBase;
  _32 = (int) _31;
  _33 = (int) ComTxPduId_94(D);
  _34 = _32 + _33;
  _35 = (sizetype) _34;
  _36 = Com_gDataMemPtr.897_29 + _35;
  _37 = *_36;
  _38 = _37 >> 3;
  BitRes_101 = _38 & 1;
  # DEBUG BitRes => BitRes_101
  # DEBUG BEGIN_STMT
  if (BitRes_101 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
<L8>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.899_39 = Com_gDataMemPtr;
  Com_gConfigPtr.900_40 = Com_gConfigPtr;
  _41 = Com_gConfigPtr.900_40->ComTxIPduStatusBase;
  _42 = (int) _41;
  _43 = (int) ComTxPduId_94(D);
  _44 = _42 + _43;
  _45 = (sizetype) _44;
  _46 = Com_gDataMemPtr.899_39 + _45;
  _47 = *_46;
  _48 = (unsigned int) _47;
  _49 = _48 & 8;
  if (_49 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.901_50 = Com_gDataMemPtr;
  Com_gConfigPtr.902_51 = Com_gConfigPtr;
  _52 = Com_gConfigPtr.902_51->ComNTimesQueueBaseRemaining;
  _53 = (sizetype) _52;
  NTimesQueueBaseRemaining_102 = Com_gDataMemPtr.901_50 + _53;
  # DEBUG NTimesQueueBaseRemaining => NTimesQueueBaseRemaining_102
  # DEBUG BEGIN_STMT
  NRamBufIdx_103 = IPduPtr_92(D)->NTimesQueueRef;
  # DEBUG NRamBufIdx => NRamBufIdx_103
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1 ();
  # DEBUG BEGIN_STMT
  _54 = (sizetype) NRamBufIdx_103;
  _55 = NTimesQueueBaseRemaining_102 + _54;
  _56 = *_55;
  N_105 = _56 + 255;
  # DEBUG N => N_105
  # DEBUG BEGIN_STMT
  _57 = (sizetype) NRamBufIdx_103;
  _58 = NTimesQueueBaseRemaining_102 + _57;
  *_58 = N_105;
  # DEBUG BEGIN_STMT
  if (N_105 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.903_59 = Com_gDataMemPtr;
  Com_gConfigPtr.904_60 = Com_gConfigPtr;
  _61 = Com_gConfigPtr.904_60->ComTxIPduStatusBase;
  _62 = (int) _61;
  _63 = (int) ComTxPduId_94(D);
  _64 = _62 + _63;
  _65 = (sizetype) _64;
  _66 = Com_gDataMemPtr.903_59 + _65;
  _67 = *_66;
  Com_gDataMemPtr.905_68 = Com_gDataMemPtr;
  Com_gConfigPtr.906_69 = Com_gConfigPtr;
  _70 = Com_gConfigPtr.906_69->ComTxIPduStatusBase;
  _71 = (int) _70;
  _72 = (int) ComTxPduId_94(D);
  _73 = _71 + _72;
  _74 = (sizetype) _73;
  _75 = Com_gDataMemPtr.905_68 + _74;
  _76 = _67 & 247;
  *_75 = _76;

  <bb 14> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1 ();
  # DEBUG BEGIN_STMT
  if (N_105 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
<L13>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.907_77 = Com_gDataMemPtr;
  Com_gConfigPtr.908_78 = Com_gConfigPtr;
  _79 = Com_gConfigPtr.908_78->ComTxIPduStatusBase;
  _80 = (int) _79;
  _81 = (int) ComTxPduId_94(D);
  _82 = _80 + _81;
  _83 = (sizetype) _82;
  _84 = Com_gDataMemPtr.907_77 + _83;
  TS_AtomicClearBit_8 (_84, 5);
  # DEBUG BEGIN_STMT
  Com_EB_HandleTxConfirmations (IPduPtr_92(D));
  # DEBUG BEGIN_STMT
  goto <bb 17>; [INV]

  <bb 16> :
<L18>:
  # DEBUG BEGIN_STMT
  Com_EB_TxDM_TMNone (IPduPtr_92(D), ComTxPduId_94(D));
  # DEBUG BEGIN_STMT
  Com_EB_HandleTxConfirmations (IPduPtr_92(D));
  # DEBUG BEGIN_STMT

  <bb 17> :
<L21>:
  return;

}


Com_EB_HandleTxConfirmations (const struct ComTxIPduType * IPduPtr)
{
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  uint8 * Com_gDataMemPtr.909_4;
  const struct Com_ConfigType * Com_gConfigPtr.910_5;
  short unsigned int _6;
  unsigned int _7;
  short unsigned int _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  uint8 * _12;
  short unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_18(D)->ComTxIPduFlags;
  _2 = (unsigned int) _1;
  _3 = _2 & 1;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_TxConfirmations (IPduPtr_18(D));
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.909_4 = Com_gDataMemPtr;
  Com_gConfigPtr.910_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.910_5->ComCbkTxAckDeferredStatusBase;
  _7 = (unsigned int) _6;
  _8 = IPduPtr_18(D)->ComNotificationDeferredQueueRef;
  _9 = _8 / 8;
  _10 = (unsigned int) _9;
  _11 = _7 + _10;
  _12 = Com_gDataMemPtr.909_4 + _11;
  _13 = IPduPtr_18(D)->ComNotificationDeferredQueueRef;
  _14 = (long unsigned int) _13;
  _15 = _14 & 7;
  TS_AtomicSetBit_8 (_12, _15);

  <bb 5> :
  return;

}


Com_TriggerTransmit (PduIdType ComTxPduId, struct PduInfoType * PduInfoPtr)
{
  boolean (*<T5ec>) (PduIdType, struct PduInfoType *) fptr;
  struct PduInfoType PduData;
  const struct ComTxIPduType * IPduPtr;
  Std_ReturnType retval;
  unsigned char Com_InitStatus.879_1;
  uint8 * _2;
  const struct Com_ConfigType * Com_gConfigPtr.880_3;
  short unsigned int _4;
  const struct Com_ConfigType * Com_gConfigPtr.881_5;
  const struct Com_ConfigType * Com_gConfigPtr.882_6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  uint8 * Com_gDataMemPtr.883_11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  uint8 * Com_gDataMemPtr.884_15;
  const struct Com_ConfigType * Com_gConfigPtr.885_16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned int _20;
  unsigned int _21;
  ComIPduSizeType * _22;
  short unsigned int _23;
  short unsigned int _24;
  short unsigned int _25;
  int _26;
  uint8 * Com_gDataMemPtr.886_27;
  const struct Com_ConfigType * Com_gConfigPtr.887_28;
  short unsigned int _29;
  int _30;
  int _31;
  int _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;
  unsigned int _36;
  unsigned int _37;
  short unsigned int _38;
  uint8 * _39;
  uint8 * _40;
  short unsigned int _41;
  long unsigned int _42;
  unsigned char _43;
  unsigned char _44;
  unsigned int _45;
  unsigned int _46;
  Std_ReturnType _71;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_51 = 1;
  # DEBUG retval => retval_51
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PduInfoPtr_52(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 65, 3);
  goto <bb 16>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  PduInfoPtr_52(D)->SduLength = 0;
  # DEBUG BEGIN_STMT
  Com_InitStatus.879_1 = Com_InitStatus;
  if (Com_InitStatus.879_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 65, 2);
  goto <bb 16>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = PduInfoPtr_52(D)->SduDataPtr;
  if (_2 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 65, 3);
  goto <bb 16>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.880_3 = Com_gConfigPtr;
  _4 = Com_gConfigPtr.880_3->ComTxIPduArraySize;
  if (ComTxPduId_55(D) >= _4)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 65, 1);
  goto <bb 16>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.881_5 = Com_gConfigPtr;
  Com_gConfigPtr.882_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.882_6->ComTxIPduRef;
  _8 = (unsigned int) ComTxPduId_55(D);
  _9 = _8 * 64;
  _10 = _7 + _9;
  IPduPtr_56 = Com_gConfigPtr.881_5 + _10;
  # DEBUG IPduPtr => IPduPtr_56
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.883_11 = Com_gDataMemPtr;
  _12 = IPduPtr_56->ComIPduValueRef;
  _13 = (sizetype) _12;
  _14 = Com_gDataMemPtr.883_11 + _13;
  PduData.SduDataPtr = _14;
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.884_15 = Com_gDataMemPtr;
  Com_gConfigPtr.885_16 = Com_gConfigPtr;
  _17 = Com_gConfigPtr.885_16->ComTxIPduLengthBase;
  _18 = (sizetype) _17;
  _19 = Com_gDataMemPtr.884_15 + _18;
  _20 = (unsigned int) ComTxPduId_55(D);
  _21 = _20 * 2;
  _22 = _19 + _21;
  _23 = *_22;
  PduData.SduLength = _23;
  # DEBUG BEGIN_STMT
  _24 = IPduPtr_56->ComIPduTrigTxCallOutFuncPtrRef;
  if (_24 != 65535)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _25 = IPduPtr_56->ComIPduTrigTxCallOutFuncPtrRef;
  _26 = (int) _25;
  fptr_59 = Com_TxCallouts[_26];
  # DEBUG fptr => fptr_59
  # DEBUG BEGIN_STMT
  fptr_59 (ComTxPduId_55(D), &PduData);

  <bb 12> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.886_27 = Com_gDataMemPtr;
  Com_gConfigPtr.887_28 = Com_gConfigPtr;
  _29 = Com_gConfigPtr.887_28->ComTxIPduStatusBase;
  _30 = (int) _29;
  _31 = (int) ComTxPduId_55(D);
  _32 = _30 + _31;
  _33 = (sizetype) _32;
  _34 = Com_gDataMemPtr.886_27 + _33;
  _35 = *_34;
  _36 = (unsigned int) _35;
  _37 = _36 & 1;
  if (_37 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _38 = PduData.SduLength;
  PduInfoPtr_52(D)->SduLength = _38;
  # DEBUG BEGIN_STMT
  _39 = PduInfoPtr_52(D)->SduDataPtr;
  _40 = PduData.SduDataPtr;
  _41 = PduData.SduLength;
  _42 = (long unsigned int) _41;
  TS_MemCpy32 (_39, _40, _42);
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _43 = IPduPtr_56->ComTxIPduFlags;
  _44 = _43 >> 3;
  _45 = (unsigned int) _44;
  _46 = _45 & 3;
  if (_46 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  Com_EB_ClearTxUpdateBits (IPduPtr_56);

  <bb 15> :
  # DEBUG BEGIN_STMT
  retval_66 = 0;
  # DEBUG retval => retval_66

  <bb 16> :
  # retval_47 = PHI <retval_51(3), retval_51(5), retval_51(7), retval_51(9), retval_51(12), retval_66(15)>
  # DEBUG retval => retval_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _71 = retval_47;
  PduData ={v} {CLOBBER};
  return _71;

}


Com_TriggerIPDUSend (PduIdType ComTxPduId)
{
  const struct ComTxIPduType * const IPduPtr;
  unsigned char Com_InitStatus.871_1;
  const struct Com_ConfigType * Com_gConfigPtr.872_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.873_4;
  const struct Com_ConfigType * Com_gConfigPtr.874_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  uint8 * Com_gDataMemPtr.875_10;
  const struct Com_ConfigType * Com_gConfigPtr.876_11;
  short unsigned int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  unsigned int _19;
  unsigned int _20;
  uint8 * Com_gDataMemPtr.877_21;
  const struct Com_ConfigType * Com_gConfigPtr.878_22;
  short unsigned int _23;
  int _24;
  int _25;
  int _26;
  sizetype _27;
  uint8 * _28;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.871_1 = Com_InitStatus;
  if (Com_InitStatus.871_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 23, 2);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.872_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.872_2->ComTxIPduArraySize;
  if (ComTxPduId_31(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 23, 1);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.873_4 = Com_gConfigPtr;
  Com_gConfigPtr.874_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.874_5->ComTxIPduRef;
  _7 = (unsigned int) ComTxPduId_31(D);
  _8 = _7 * 64;
  _9 = _6 + _8;
  IPduPtr_32 = Com_gConfigPtr.873_4 + _9;
  # DEBUG IPduPtr => IPduPtr_32
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.875_10 = Com_gDataMemPtr;
  Com_gConfigPtr.876_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.876_11->ComTxIPduStatusBase;
  _13 = (int) _12;
  _14 = (int) ComTxPduId_31(D);
  _15 = _13 + _14;
  _16 = (sizetype) _15;
  _17 = Com_gDataMemPtr.875_10 + _16;
  _18 = *_17;
  _19 = (unsigned int) _18;
  _20 = _19 & 2;
  if (_20 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.877_21 = Com_gDataMemPtr;
  Com_gConfigPtr.878_22 = Com_gConfigPtr;
  _23 = Com_gConfigPtr.878_22->ComTxIPduStatusBase;
  _24 = (int) _23;
  _25 = (int) ComTxPduId_31(D);
  _26 = _24 + _25;
  _27 = (sizetype) _26;
  _28 = Com_gDataMemPtr.877_21 + _27;
  TS_AtomicSetBit_8 (_28, 4);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_EB_Send_Pdu (ComTxPduId_31(D), IPduPtr_32);

  <bb 9> :
  # DEBUG BEGIN_STMT
  return;

}


Com_SwitchIpduTxMode (PduIdType PduId, boolean Mode)
{
  uint8 CurrentTM;
  uint8 PduStatusByte;
  uint8 * const PduStatusFlagsPtr;
  unsigned char Com_InitStatus.862_1;
  const struct Com_ConfigType * Com_gConfigPtr.863_2;
  short unsigned int _3;
  uint8 * Com_gDataMemPtr.864_4;
  const struct Com_ConfigType * Com_gConfigPtr.865_5;
  short unsigned int _6;
  int _7;
  int _8;
  int _9;
  sizetype _10;
  unsigned char _11;
  unsigned char PduStatusByte.866_12;
  unsigned char _13;
  unsigned char PduStatusByte.867_14;
  unsigned char _15;
  unsigned char PduStatusByte.868_16;
  unsigned char _17;
  unsigned char PduStatusByte.869_18;
  unsigned char _19;
  unsigned char PduStatusByte.870_20;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.862_1 = Com_InitStatus;
  if (Com_InitStatus.862_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 39, 2);
  goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.863_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.863_2->ComTxIPduArraySize;
  if (PduId_25(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 39, 1);
  goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Mode_26(D) > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 39, 1);
  goto <bb 14>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.864_4 = Com_gDataMemPtr;
  Com_gConfigPtr.865_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.865_5->ComTxIPduStatusBase;
  _7 = (int) _6;
  _8 = (int) PduId_25(D);
  _9 = _7 + _8;
  _10 = (sizetype) _9;
  PduStatusFlagsPtr_27 = Com_gDataMemPtr.864_4 + _10;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = *PduStatusFlagsPtr_27;
  PduStatusByte = _11;
  # DEBUG BEGIN_STMT
  PduStatusByte.866_12 = PduStatusByte;
  _13 = PduStatusByte.866_12 >> 6;
  CurrentTM_30 = _13 & 1;
  # DEBUG CurrentTM => CurrentTM_30
  # DEBUG BEGIN_STMT
  if (Mode_26(D) != CurrentTM_30)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (Mode_26(D) == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  PduStatusByte.867_14 = PduStatusByte;
  _15 = PduStatusByte.867_14 | 64;
  PduStatusByte = _15;
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  PduStatusByte.868_16 = PduStatusByte;
  _17 = PduStatusByte.868_16 & 191;
  PduStatusByte = _17;

  <bb 12> :
  # DEBUG BEGIN_STMT
  PduStatusByte.869_18 = PduStatusByte;
  _19 = PduStatusByte.869_18 | 128;
  PduStatusByte = _19;
  # DEBUG BEGIN_STMT
  PduStatusByte.870_20 = PduStatusByte;
  *PduStatusFlagsPtr_27 = PduStatusByte.870_20;

  <bb 13> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  PduStatusByte ={v} {CLOBBER};

  <bb 14> :
  # DEBUG BEGIN_STMT
  return;

}


Com_ComXf_TxPrepareBuffer (uint8 * buffer, Com_SignalGroupIdType SignalGroupId, boolean Initialize)
{
  const struct ComTxIPduType * const IPduPtr;
  const ComIPduRefType PduId;
  const struct ComTxSignalGroupType * const SignalGPtr;
  uint16 length;
  const struct Com_ConfigType * Com_gConfigPtr.860_1;
  const struct Com_ConfigType * Com_gConfigPtr.861_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  uint16 _20;

  <bb 2> :
  # DEBUG BEGIN_STMT
  length_9 = 0;
  # DEBUG length => length_9
  # DEBUG BEGIN_STMT
  SignalGPtr_13 = Com_GetTxSignalGroupCfg (SignalGroupId_11(D), 255);
  # DEBUG SignalGPtr => SignalGPtr_13
  # DEBUG BEGIN_STMT
  if (SignalGPtr_13 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (Initialize_14(D) == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  PduId_15 = SignalGPtr_13->ComIPduRef;
  # DEBUG PduId => PduId_15
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.860_1 = Com_gConfigPtr;
  Com_gConfigPtr.861_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.861_2->ComTxIPduRef;
  _4 = (unsigned int) PduId_15;
  _5 = _4 * 64;
  _6 = _3 + _5;
  IPduPtr_16 = Com_gConfigPtr.860_1 + _6;
  # DEBUG IPduPtr => IPduPtr_16
  # DEBUG BEGIN_STMT
  length_19 = Com_EB_InitSGBuffer (buffer_17(D), SignalGPtr_13, IPduPtr_16);
  # DEBUG length => length_19

  <bb 5> :
  # length_7 = PHI <length_9(2), length_9(3), length_19(4)>
  # DEBUG length => length_7
  # DEBUG BEGIN_STMT
  _20 = length_7;
  return _20;

}


Com_SendSignalGroupArray (Com_SignalGroupIdType SignalGroupId, const uint8 * SignalGroupArrayPtr, uint16 SignalGroupArrayLength)
{
  uint8 retval;
  uint8 _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_1 = 128;
  # DEBUG retval => retval_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval_7 = Com_SetupTxSignalGroup_DET (SignalGroupArrayPtr_3(D), SignalGroupArrayLength_4(D), Com_EB_SendSignalGroupArray_DETCheck, SignalGroupId_5(D), 67);
  # DEBUG retval => retval_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = retval_7;
  return _8;

}


Com_SendSignalGroup (Com_SignalGroupIdType SignalGroupId)
{
  uint8 retval;
  uint8 _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_1 = 128;
  # DEBUG retval => retval_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval_5 = Com_SetupTxSignalGroup_DET (0B, 0, Com_EB_SendSignalGroup, SignalGroupId_3(D), 13);
  # DEBUG retval => retval_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = retval_5;
  return _6;

}


Com_SetupTxSignalGroup_DET (const uint8 * SGArrayPtr, uint16 SGArrayLength, uint8 (*<T68a>) (const uint8 *, uint16, const struct ComTxSignalGroupType *, ComIPduRefType, const struct ComTxIPduType *, boolean) Com_TxSignalGroupFPtr, Com_SignalGroupIdType SignalGroupId, uint8 ServiceId)
{
  const struct ComTxSignalGroupType * const SignalGPtr;
  uint8 retval;
  uint8 _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  SignalGPtr_7 = Com_GetTxSignalGroupCfg (SignalGroupId_4(D), ServiceId_5(D));
  # DEBUG SignalGPtr => SignalGPtr_7
  # DEBUG BEGIN_STMT
  if (SignalGPtr_7 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_SetupTxSignalGroup (SGArrayPtr_8(D), SGArrayLength_9(D), Com_TxSignalGroupFPtr_10(D), SignalGPtr_7, &retval, 0);

  <bb 4> :
  # DEBUG BEGIN_STMT
  _12 = retval;
  retval ={v} {CLOBBER};
  return _12;

}


Com_GetTxSignalGroupCfg (Com_SignalGroupIdType SignalGroupId, uint8 ServiceId)
{
  const struct ComTxSignalGroupType * SignalGPtr;
  unsigned char Com_InitStatus.856_1;
  const struct Com_ConfigType * Com_gConfigPtr.857_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.858_4;
  const struct Com_ConfigType * Com_gConfigPtr.859_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct ComTxSignalGroupType * _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalGPtr_12 = 0B;
  # DEBUG SignalGPtr => SignalGPtr_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.856_1 = Com_InitStatus;
  if (Com_InitStatus.856_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_16(D), 2);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.857_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.857_2->ComTxSignalGroupArraySize;
  if (SignalGroupId_14(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_16(D), 1);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.858_4 = Com_gConfigPtr;
  Com_gConfigPtr.859_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.859_5->ComTxSignalGroupRef;
  _7 = (unsigned int) SignalGroupId_14(D);
  _8 = _7 * 32;
  _9 = _6 + _8;
  SignalGPtr_15 = Com_gConfigPtr.858_4 + _9;
  # DEBUG SignalGPtr => SignalGPtr_15

  <bb 7> :
  # SignalGPtr_10 = PHI <SignalGPtr_12(3), SignalGPtr_12(5), SignalGPtr_15(6)>
  # DEBUG SignalGPtr => SignalGPtr_10
  # DEBUG BEGIN_STMT
  _19 = SignalGPtr_10;
  return _19;

}


Com_GetTxSignalCfg (Com_SignalIdType SignalId, uint8 ServiceId)
{
  const struct ComTxSignalType * SignalPtr;
  unsigned char Com_InitStatus.852_1;
  const struct Com_ConfigType * Com_gConfigPtr.853_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.854_4;
  const struct Com_ConfigType * Com_gConfigPtr.855_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct ComTxSignalType * _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalPtr_12 = 0B;
  # DEBUG SignalPtr => SignalPtr_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.852_1 = Com_InitStatus;
  if (Com_InitStatus.852_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_16(D), 2);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.853_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.853_2->ComTxSignalArraySize;
  if (SignalId_14(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_16(D), 1);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.854_4 = Com_gConfigPtr;
  Com_gConfigPtr.855_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.855_5->ComTxSignalRef;
  _7 = (unsigned int) SignalId_14(D);
  _8 = _7 * 26;
  _9 = _6 + _8;
  SignalPtr_15 = Com_gConfigPtr.854_4 + _9;
  # DEBUG SignalPtr => SignalPtr_15

  <bb 7> :
  # SignalPtr_10 = PHI <SignalPtr_12(3), SignalPtr_12(5), SignalPtr_15(6)>
  # DEBUG SignalPtr => SignalPtr_10
  # DEBUG BEGIN_STMT
  _19 = SignalPtr_10;
  return _19;

}


Com_ComXf_GetTxSGId (Com_SignalIdType GroupSignalId)
{
  const struct ComTxSignalType * const SignalPtr;
  Com_SignalGroupIdType SGId;
  Com_SignalGroupIdType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SGId_2 = 65535;
  # DEBUG SGId => SGId_2
  # DEBUG BEGIN_STMT
  SignalPtr_6 = Com_GetTxSignalCfg (GroupSignalId_4(D), 255);
  # DEBUG SignalPtr => SignalPtr_6
  # DEBUG BEGIN_STMT
  if (SignalPtr_6 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SGId_7 = SignalPtr_6->ComSignalBase.ComSignalGroupRef;
  # DEBUG SGId => SGId_7

  <bb 4> :
  # SGId_1 = PHI <SGId_2(2), SGId_7(3)>
  # DEBUG SGId => SGId_1
  # DEBUG BEGIN_STMT
  _8 = SGId_1;
  return _8;

}


Com_SendDynSignal (Com_SignalIdType SignalId, const void * SignalDataPtr, uint16 Length)
{
  struct Com_EB_WriteIntDataType IntData;
  const struct ComTxSignalType * const SignalPtr;
  uint8 RetVal;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  short unsigned int _6;
  uint8 _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_9 = 128;
  # DEBUG RetVal => RetVal_9
  # DEBUG BEGIN_STMT
  SignalPtr_13 = Com_GetTxSignalCfg (SignalId_11(D), 33);
  # DEBUG SignalPtr => SignalPtr_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalPtr_13 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (SignalDataPtr_14(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 33, 3);
  goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _1 = SignalPtr_13->ComTxSignalFlags;
  _2 = _1 >> 12;
  _3 = (unsigned char) _2;
  _4 = (unsigned int) _3;
  _5 = _4 & 15;
  if (_5 != 8)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 33, 1);
  goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _6 = SignalPtr_13->ComSignalBase.ComBitSize;
  if (Length_15(D) > _6)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 33, 1);
  # DEBUG BEGIN_STMT
  RetVal_27 = 1;
  # DEBUG RetVal => RetVal_27
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  RetVal_17 = Com_GetSendSignalRetVal (SignalPtr_13);
  # DEBUG RetVal => RetVal_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.arraySize = Length_15(D);
  # DEBUG BEGIN_STMT
  IntData.trigger = 0;
  # DEBUG BEGIN_STMT
  IntData.SendSigRetval = RetVal_17;
  # DEBUG BEGIN_STMT
  IntData.SendInMainFunctionTx = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.TMSChanged = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_EB_WriteDynSignal_ExitArea_0 (SignalDataPtr_14(D), SignalPtr_13, &IntData);
  IntData ={v} {CLOBBER};

  <bb 10> :
  # RetVal_7 = PHI <RetVal_9(2), RetVal_9(4), RetVal_9(6), RetVal_27(8), RetVal_17(9)>
  # DEBUG RetVal => RetVal_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _30 = RetVal_7;
  return _30;

}


Com_SendSignal (Com_SignalIdType SignalId, const void * SignalDataPtr)
{
  const uint16 index;
  void (*<T69f>) (const void *, uint8 *, const struct ComTxSignalType *, struct Com_EB_WriteIntDataType *) fptr;
  struct Com_EB_WriteIntDataType IntData;
  uint8 * const dataPtr;
  const struct ComTxSignalType * const SignalPtr;
  uint8 RetVal;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  short unsigned int _6;
  uint8 * Com_gDataMemPtr.851_7;
  short unsigned int _8;
  sizetype _9;
  short unsigned int _10;
  short unsigned int _11;
  int _12;
  uint8 _36;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_15 = 128;
  # DEBUG RetVal => RetVal_15
  # DEBUG BEGIN_STMT
  SignalPtr_19 = Com_GetTxSignalCfg (SignalId_17(D), 10);
  # DEBUG SignalPtr => SignalPtr_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalPtr_19 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (SignalDataPtr_20(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 10, 3);
  goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _1 = SignalPtr_19->ComTxSignalFlags;
  _2 = _1 >> 12;
  _3 = (unsigned char) _2;
  _4 = (unsigned int) _3;
  _5 = _4 & 15;
  if (_5 == 8)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 10, 1);
  goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _6 = SignalPtr_19->ComSignalBase.ComBufferRef;
  if (_6 == 65535)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 10, 1);
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.851_7 = Com_gDataMemPtr;
  _8 = SignalPtr_19->ComSignalBase.ComBufferRef;
  _9 = (sizetype) _8;
  dataPtr_21 = Com_gDataMemPtr.851_7 + _9;
  # DEBUG dataPtr => dataPtr_21
  # DEBUG BEGIN_STMT
  RetVal_23 = Com_GetSendSignalRetVal (SignalPtr_19);
  # DEBUG RetVal => RetVal_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = SignalPtr_19->ComSignalBase.ComBitSize;
  IntData.arraySize = _10;
  # DEBUG BEGIN_STMT
  IntData.trigger = 0;
  # DEBUG BEGIN_STMT
  IntData.SendSigRetval = RetVal_23;
  # DEBUG BEGIN_STMT
  IntData.SendInMainFunctionTx = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.TMSChanged = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = SignalPtr_19->ComTxSignalFlags;
  index_29 = _11 & 511;
  # DEBUG index => index_29
  # DEBUG BEGIN_STMT
  _12 = (int) index_29;
  fptr_30 = Com_WriteFuncs[_12];
  # DEBUG fptr => fptr_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_30 (SignalDataPtr_20(D), dataPtr_21, SignalPtr_19, &IntData);
  # DEBUG BEGIN_STMT
  IntData ={v} {CLOBBER};

  <bb 10> :
  # RetVal_13 = PHI <RetVal_15(2), RetVal_15(4), RetVal_15(6), RetVal_15(8), RetVal_23(9)>
  # DEBUG RetVal => RetVal_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = RetVal_13;
  return _36;

}


Com_EB_HandleRxConfirm (uint8 * IPduFlagBytePtr, const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_6(D)->ComRxIPduFlags;
  _2 = (unsigned int) _1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_9(D), 3);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_EB_NotifyReceivers (IPduPtr_6(D), PduId_7(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_TpRxIndication (PduIdType PduId, NotifResultType Result)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_RxIndication (PduIdType ComRxPduId, struct PduInfoType * PduInfoPtr)
{
  uint8 * const pdudataptr;
  uint32 pdulength;
  boolean (*<T5f4>) (PduIdType, const struct PduInfoType *) fptr;
  boolean coretval;
  uint8 * const IPduFlagBytePtr;
  const struct ComRxIPduType * IPduPtr;
  unsigned char Com_InitStatus.840_1;
  uint8 * _2;
  const struct Com_ConfigType * Com_gConfigPtr.841_3;
  short unsigned int _4;
  const struct Com_ConfigType * Com_gConfigPtr.842_5;
  const struct Com_ConfigType * Com_gConfigPtr.843_6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  uint8 * Com_gDataMemPtr.844_11;
  const struct Com_ConfigType * Com_gConfigPtr.845_12;
  short unsigned int _13;
  int _14;
  int _15;
  int _16;
  sizetype _17;
  unsigned char _18;
  unsigned int _19;
  unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  int _23;
  short unsigned int _24;
  short unsigned int _25;
  long unsigned int _26;
  short unsigned int _27;
  uint8 * Com_gDataMemPtr.846_28;
  short unsigned int _29;
  sizetype _30;
  uint8 * _31;
  uint8 * Com_gDataMemPtr.847_32;
  const struct Com_ConfigType * Com_gConfigPtr.848_33;
  short unsigned int _34;
  sizetype _35;
  uint8 * _36;
  unsigned int _37;
  unsigned int _38;
  ComIPduSizeType * _39;
  short unsigned int _40;
  short unsigned int _41;
  uint8 * Com_gDataMemPtr.849_42;
  const struct Com_ConfigType * Com_gConfigPtr.850_43;
  short unsigned int _44;
  unsigned int _45;
  short unsigned int _46;
  short unsigned int _47;
  unsigned int _48;
  unsigned int _49;
  uint8 * _50;
  short unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.840_1 = Com_InitStatus;
  if (Com_InitStatus.840_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 66, 2);
  goto <bb 19>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PduInfoPtr_60(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 66, 3);
  goto <bb 19>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = PduInfoPtr_60(D)->SduDataPtr;
  if (_2 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 66, 3);
  goto <bb 19>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.841_3 = Com_gConfigPtr;
  _4 = Com_gConfigPtr.841_3->ComRxIPduArraySize;
  if (ComRxPduId_61(D) >= _4)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 66, 1);
  goto <bb 19>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.842_5 = Com_gConfigPtr;
  Com_gConfigPtr.843_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.843_6->ComRxIPduRef;
  _8 = (unsigned int) ComRxPduId_61(D);
  _9 = _8 * 48;
  _10 = _7 + _9;
  IPduPtr_62 = Com_gConfigPtr.842_5 + _10;
  # DEBUG IPduPtr => IPduPtr_62
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.844_11 = Com_gDataMemPtr;
  Com_gConfigPtr.845_12 = Com_gConfigPtr;
  _13 = Com_gConfigPtr.845_12->ComRxIPduStatusBase;
  _14 = (int) _13;
  _15 = (int) ComRxPduId_61(D);
  _16 = _14 + _15;
  _17 = (sizetype) _16;
  IPduFlagBytePtr_63 = Com_gDataMemPtr.844_11 + _17;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_63
  # DEBUG BEGIN_STMT
  _18 = *IPduFlagBytePtr_63;
  _19 = (unsigned int) _18;
  _20 = _19 & 1;
  if (_20 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  coretval_64 = 1;
  # DEBUG coretval => coretval_64
  # DEBUG BEGIN_STMT
  _21 = IPduPtr_62->ComIPduCallOutFuncPtrRef;
  if (_21 != 65535)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _22 = IPduPtr_62->ComIPduCallOutFuncPtrRef;
  _23 = (int) _22;
  fptr_65 = Com_RxCallouts[_23];
  # DEBUG fptr => fptr_65
  # DEBUG BEGIN_STMT
  coretval_67 = fptr_65 (ComRxPduId_61(D), PduInfoPtr_60(D));
  # DEBUG coretval => coretval_67

  <bb 13> :
  # coretval_54 = PHI <coretval_64(11), coretval_67(12)>
  # DEBUG coretval => coretval_54
  # DEBUG BEGIN_STMT
  if (coretval_54 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _24 = IPduPtr_62->ComIPduSizeMax;
  pdulength_68 = (uint32) _24;
  # DEBUG pdulength => pdulength_68
  # DEBUG BEGIN_STMT
  _25 = PduInfoPtr_60(D)->SduLength;
  _26 = (long unsigned int) _25;
  if (pdulength_68 > _26)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _27 = PduInfoPtr_60(D)->SduLength;
  pdulength_69 = (uint32) _27;
  # DEBUG pdulength => pdulength_69

  <bb 16> :
  # pdulength_55 = PHI <pdulength_68(14), pdulength_69(15)>
  # DEBUG pdulength => pdulength_55
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_1 ();
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.846_28 = Com_gDataMemPtr;
  _29 = IPduPtr_62->ComIPduValueRef;
  _30 = (sizetype) _29;
  pdudataptr_71 = Com_gDataMemPtr.846_28 + _30;
  # DEBUG pdudataptr => pdudataptr_71
  # DEBUG BEGIN_STMT
  _31 = PduInfoPtr_60(D)->SduDataPtr;
  TS_MemCpy32 (pdudataptr_71, _31, pdulength_55);
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.847_32 = Com_gDataMemPtr;
  Com_gConfigPtr.848_33 = Com_gConfigPtr;
  _34 = Com_gConfigPtr.848_33->ComRxIPduLengthBase;
  _35 = (sizetype) _34;
  _36 = Com_gDataMemPtr.847_32 + _35;
  _37 = (unsigned int) ComRxPduId_61(D);
  _38 = _37 * 2;
  _39 = _36 + _38;
  _40 = (short unsigned int) pdulength_55;
  *_39 = _40;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_1 ();
  # DEBUG BEGIN_STMT
  _41 = IPduPtr_62->ComIPduSigGWFlagBit;
  if (_41 != 65535)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.849_42 = Com_gDataMemPtr;
  Com_gConfigPtr.850_43 = Com_gConfigPtr;
  _44 = Com_gConfigPtr.850_43->ComSigGWRxPduFlagBase;
  _45 = (unsigned int) _44;
  _46 = IPduPtr_62->ComIPduSigGWFlagBit;
  _47 = _46 / 8;
  _48 = (unsigned int) _47;
  _49 = _45 + _48;
  _50 = Com_gDataMemPtr.849_42 + _49;
  _51 = IPduPtr_62->ComIPduSigGWFlagBit;
  _52 = (long unsigned int) _51;
  _53 = _52 & 7;
  TS_AtomicSetBit_8 (_50, _53);

  <bb 18> :
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxConfirm (IPduFlagBytePtr_63, IPduPtr_62, ComRxPduId_61(D));

  <bb 19> :
  # DEBUG BEGIN_STMT
  return;

}


Com_ComXf_Get_RxSignalGroupSize (Com_SignalGroupIdType SignalGroupId)
{
  const struct ComRxSignalGroupType * const SignalGPtr;
  uint16 length;
  uint16 _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  length_2 = 0;
  # DEBUG length => length_2
  # DEBUG BEGIN_STMT
  SignalGPtr_6 = Com_GetRxSignalGroupCfg (SignalGroupId_4(D), 255);
  # DEBUG SignalGPtr => SignalGPtr_6
  # DEBUG BEGIN_STMT
  if (SignalGPtr_6 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  length_7 = SignalGPtr_6->ComByteSize;
  # DEBUG length => length_7

  <bb 4> :
  # length_1 = PHI <length_2(2), length_7(3)>
  # DEBUG length => length_1
  # DEBUG BEGIN_STMT
  _8 = length_1;
  return _8;

}


Com_ReceiveSignalGroupArray (Com_SignalGroupIdType SignalGroupId, uint8 * SignalGroupArrayPtr, uint16 * SignalGroupArrayLengthPtr)
{
  struct Com_RxSGArrayInfoType SGArrayInfo;
  uint8 retval;
  short unsigned int _1;
  uint8 _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_4 = 128;
  # DEBUG retval => retval_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalGroupArrayLengthPtr_5(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 68, 3);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (SignalGroupArrayPtr_6(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  *SignalGroupArrayLengthPtr_5(D) = 0;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 68, 3);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SGArrayInfo.SGArrayPtr = SignalGroupArrayPtr_6(D);
  # DEBUG BEGIN_STMT
  SGArrayInfo.outSGArrayLengthPtr = SignalGroupArrayLengthPtr_5(D);
  # DEBUG BEGIN_STMT
  _1 = *SignalGroupArrayLengthPtr_5(D);
  SGArrayInfo.inSGArrayLength = _1;
  # DEBUG BEGIN_STMT
  *SignalGroupArrayLengthPtr_5(D) = 0;
  # DEBUG BEGIN_STMT
  retval_14 = Com_SetupRxSignalGroup_DET (SignalGroupId_12(D), &SGArrayInfo, Com_CopyRxSignalGroupArray_Array, 68);
  # DEBUG retval => retval_14
  SGArrayInfo ={v} {CLOBBER};

  <bb 7> :
  # retval_2 = PHI <retval_4(3), retval_4(5), retval_14(6)>
  # DEBUG retval => retval_2
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _19 = retval_2;
  return _19;

}


Com_ReceiveSignalGroup (Com_SignalGroupIdType SignalGroupId)
{
  uint8 retval;
  uint8 _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_1 = 128;
  # DEBUG retval => retval_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval_5 = Com_SetupRxSignalGroup_DET (SignalGroupId_3(D), 0B, Com_CopyRxSignalGroupArray_Shadow, 14);
  # DEBUG retval => retval_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = retval_5;
  return _6;

}


Com_CopyRxSignalGroupArray (uint8 * SGArrayPtr, const struct ComRxSignalGroupType * SignalGPtr, const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  const uint8 * const valPtr;
  const uint8 * const valPtr;
  const boolean RxDMReplace;
  const struct Com_ConfigType * Com_gConfigPtr.604_1;
  long unsigned int _2;
  short unsigned int _3;
  sizetype _4;
  sizetype _5;
  short unsigned int _6;
  long unsigned int _7;
  uint8 * Com_gDataMemPtr.605_8;
  short unsigned int _9;
  int _10;
  short unsigned int _11;
  int _12;
  int _13;
  sizetype _14;
  short unsigned int _15;
  long unsigned int _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RxDMReplace_22 = Com_ReceiveSignalGroup_Replace (SignalGPtr_19(D), PduId_20(D));
  # DEBUG RxDMReplace => RxDMReplace_22
  # DEBUG BEGIN_STMT
  if (RxDMReplace_22 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.604_1 = Com_gConfigPtr;
  _2 = IPduPtr_23(D)->ComInitValueRef;
  _3 = SignalGPtr_19(D)->ComSignalPositionInByte;
  _4 = (sizetype) _3;
  _5 = _2 + _4;
  valPtr_29 = Com_gConfigPtr.604_1 + _5;
  # DEBUG valPtr => valPtr_29
  # DEBUG BEGIN_STMT
  _6 = SignalGPtr_19(D)->ComByteSize;
  _7 = (long unsigned int) _6;
  TS_MemCpy32 (SGArrayPtr_26(D), valPtr_29, _7);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.605_8 = Com_gDataMemPtr;
  _9 = IPduPtr_23(D)->ComIPduValueRef;
  _10 = (int) _9;
  _11 = SignalGPtr_19(D)->ComSignalPositionInByte;
  _12 = (int) _11;
  _13 = _10 + _12;
  _14 = (sizetype) _13;
  valPtr_24 = Com_gDataMemPtr.605_8 + _14;
  # DEBUG valPtr => valPtr_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _15 = SignalGPtr_19(D)->ComByteSize;
  _16 = (long unsigned int) _15;
  TS_MemCpy32 (SGArrayPtr_26(D), valPtr_24, _16);
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 5> :
  return;

}


Com_CopyRxSignalGroupArray_Shadow (uint8 * retvalPtr, struct Com_RxSGArrayInfoType * RxSGArrayInfoType, const struct ComRxSignalGroupType * SignalGPtr, const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  uint8 * const shadowBufferPtr;
  const ComRAMIdxType shadowBufferRef;
  uint8 * Com_gDataMemPtr.603_1;
  sizetype _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  shadowBufferRef_6 = SignalGPtr_5(D)->ComSignalGroupValueRef;
  # DEBUG shadowBufferRef => shadowBufferRef_6
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (shadowBufferRef_6 == 65535)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  *retvalPtr_11(D) = 128;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 14, 1);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.603_1 = Com_gDataMemPtr;
  _2 = (sizetype) shadowBufferRef_6;
  shadowBufferPtr_7 = Com_gDataMemPtr.603_1 + _2;
  # DEBUG shadowBufferPtr => shadowBufferPtr_7
  # DEBUG BEGIN_STMT
  Com_CopyRxSignalGroupArray (shadowBufferPtr_7, SignalGPtr_5(D), IPduPtr_8(D), PduId_9(D));

  <bb 5> :
  return;

}


Com_CopyRxSignalGroupArray_Array (uint8 * retvalPtr, struct Com_RxSGArrayInfoType * RxSGArrayInfoPtr, const struct ComRxSignalGroupType * SignalGPtr, const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  short unsigned int _1;
  short unsigned int _2;
  uint8 * _3;
  uint16 * _4;
  short unsigned int _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = RxSGArrayInfoPtr_8(D)->inSGArrayLength;
  _2 = SignalGPtr_9(D)->ComByteSize;
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  *retvalPtr_14(D) = 128;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 68, 1);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = RxSGArrayInfoPtr_8(D)->SGArrayPtr;
  Com_CopyRxSignalGroupArray (_3, SignalGPtr_9(D), IPduPtr_10(D), PduId_11(D));
  # DEBUG BEGIN_STMT
  _4 = RxSGArrayInfoPtr_8(D)->outSGArrayLengthPtr;
  _5 = SignalGPtr_9(D)->ComByteSize;
  *_4 = _5;

  <bb 5> :
  return;

}


Com_SetupRxSignalGroup (uint8 * retvalPtr, struct Com_RxSGArrayInfoType * RxSGArrayInfoPtr, const struct ComRxSignalGroupType * SignalGPtr, void (*<T63e>) (uint8 *, struct Com_RxSGArrayInfoType *, const struct ComRxSignalGroupType *, const struct ComRxIPduType *, ComIPduRefType) Com_RxSignalGroupFPtr)
{
  const struct ComRxIPduType * IPduPtr;
  const ComIPduRefType PduId;
  const struct Com_ConfigType * Com_gConfigPtr.612_1;
  const struct Com_ConfigType * Com_gConfigPtr.613_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  uint8 * Com_gDataMemPtr.614_7;
  const struct Com_ConfigType * Com_gConfigPtr.615_8;
  short unsigned int _9;
  int _10;
  int _11;
  int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned int _16;
  unsigned int _17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PduId_21 = SignalGPtr_20(D)->ComIPduRef;
  # DEBUG PduId => PduId_21
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.612_1 = Com_gConfigPtr;
  Com_gConfigPtr.613_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.613_2->ComRxIPduRef;
  _4 = (unsigned int) PduId_21;
  _5 = _4 * 48;
  _6 = _3 + _5;
  IPduPtr_22 = Com_gConfigPtr.612_1 + _6;
  # DEBUG IPduPtr => IPduPtr_22
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.614_7 = Com_gDataMemPtr;
  Com_gConfigPtr.615_8 = Com_gConfigPtr;
  _9 = Com_gConfigPtr.615_8->ComRxIPduStatusBase;
  _10 = (int) _9;
  _11 = (int) PduId_21;
  _12 = _10 + _11;
  _13 = (sizetype) _12;
  _14 = Com_gDataMemPtr.614_7 + _13;
  _15 = *_14;
  _16 = (unsigned int) _15;
  _17 = _16 & 1;
  if (_17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  *retvalPtr_23(D) = 0;

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_RxSignalGroupFPtr_25(D) (retvalPtr_23(D), RxSGArrayInfoPtr_26(D), SignalGPtr_20(D), IPduPtr_22, PduId_21);
  return;

}


Com_SetupRxSignalGroup_DET (Com_SignalGroupIdType SignalGroupId, struct Com_RxSGArrayInfoType * RxSGArrayInfoPtr, void (*<T63e>) (uint8 *, struct Com_RxSGArrayInfoType *, const struct ComRxSignalGroupType *, const struct ComRxIPduType *, ComIPduRefType) Com_RxSignalGroupFPtr, uint8 ServiceId)
{
  const struct ComRxSignalGroupType * const SignalGPtr;
  uint8 retval;
  uint8 _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  SignalGPtr_7 = Com_GetRxSignalGroupCfg (SignalGroupId_4(D), ServiceId_5(D));
  # DEBUG SignalGPtr => SignalGPtr_7
  # DEBUG BEGIN_STMT
  if (SignalGPtr_7 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_SetupRxSignalGroup (&retval, RxSGArrayInfoPtr_8(D), SignalGPtr_7, Com_RxSignalGroupFPtr_9(D));

  <bb 4> :
  # DEBUG BEGIN_STMT
  _11 = retval;
  retval ={v} {CLOBBER};
  return _11;

}


Com_GetRxSignalGroupCfg (Com_SignalGroupIdType SignalGroupId, uint8 ServiceId)
{
  const struct ComRxSignalGroupType * SignalGPtr;
  unsigned char Com_InitStatus.836_1;
  const struct Com_ConfigType * Com_gConfigPtr.837_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.838_4;
  const struct Com_ConfigType * Com_gConfigPtr.839_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct ComRxSignalGroupType * _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalGPtr_12 = 0B;
  # DEBUG SignalGPtr => SignalGPtr_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.836_1 = Com_InitStatus;
  if (Com_InitStatus.836_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_16(D), 2);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.837_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.837_2->ComRxSignalGroupArraySize;
  if (SignalGroupId_14(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_16(D), 1);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.838_4 = Com_gConfigPtr;
  Com_gConfigPtr.839_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.839_5->ComRxSignalGroupRef;
  _7 = (unsigned int) SignalGroupId_14(D);
  _8 = _7 * 10;
  _9 = _6 + _8;
  SignalGPtr_15 = Com_gConfigPtr.838_4 + _9;
  # DEBUG SignalGPtr => SignalGPtr_15

  <bb 7> :
  # SignalGPtr_10 = PHI <SignalGPtr_12(3), SignalGPtr_12(5), SignalGPtr_15(6)>
  # DEBUG SignalGPtr => SignalGPtr_10
  # DEBUG BEGIN_STMT
  _19 = SignalGPtr_10;
  return _19;

}


Com_ReceiveSignalGroup_Replace (const struct ComRxSignalGroupType * SignalGPtr, ComIPduRefType PduId)
{
  uint8 RxDMTout;
  const struct ComRxSignalExtType * const SignalExtPtr;
  boolean RxDMReplace;
  const struct Com_ConfigType * Com_gConfigPtr.606_1;
  const struct Com_ConfigType * Com_gConfigPtr.607_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _8;
  unsigned int _9;
  unsigned int _10;
  unsigned char _11;
  unsigned char _12;
  unsigned int _13;
  unsigned int _14;
  uint8 * Com_gDataMemPtr.608_15;
  const struct Com_ConfigType * Com_gConfigPtr.609_16;
  short unsigned int _17;
  unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  uint8 * _23;
  unsigned char _24;
  int _25;
  short unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  int _30;
  unsigned char _31;
  uint8 * Com_gDataMemPtr.610_32;
  const struct Com_ConfigType * Com_gConfigPtr.611_33;
  short unsigned int _34;
  int _35;
  int _36;
  int _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned char _41;
  boolean _52;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RxDMReplace_44 = 0;
  # DEBUG RxDMReplace => RxDMReplace_44
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.606_1 = Com_gConfigPtr;
  Com_gConfigPtr.607_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.607_2->ComRxSignalExtRef;
  _4 = SignalGPtr_46(D)->ComSignalExtRef;
  _5 = (unsigned int) _4;
  _6 = _5 * 14;
  _7 = _3 + _6;
  SignalExtPtr_47 = Com_gConfigPtr.606_1 + _7;
  # DEBUG SignalExtPtr => SignalExtPtr_47
  # DEBUG BEGIN_STMT
  _8 = SignalExtPtr_47->ComRxSignalExtFlags;
  _9 = (unsigned int) _8;
  _10 = _9 & 1;
  if (_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = SignalExtPtr_47->ComRxSignalExtFlags;
  _12 = _11 >> 2;
  _13 = (unsigned int) _12;
  _14 = _13 & 1;
  if (_14 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.608_15 = Com_gDataMemPtr;
  Com_gConfigPtr.609_16 = Com_gConfigPtr;
  _17 = Com_gConfigPtr.609_16->ComRxDMInvSignalGroupStatusQueueBase;
  _18 = (unsigned int) _17;
  _19 = SignalExtPtr_47->RxSigDMQueueRef;
  _20 = _19 / 4;
  _21 = (unsigned int) _20;
  _22 = _18 + _21;
  _23 = Com_gDataMemPtr.608_15 + _22;
  _24 = *_23;
  _25 = (int) _24;
  _26 = SignalExtPtr_47->RxSigDMQueueRef;
  _27 = (unsigned int) _26;
  _28 = _27 & 3;
  _29 = _28 * 2;
  _30 = _25 >> _29;
  _31 = (unsigned char) _30;
  RxDMTout_50 = _31 & 1;
  # DEBUG RxDMTout => RxDMTout_50
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.610_32 = Com_gDataMemPtr;
  Com_gConfigPtr.611_33 = Com_gConfigPtr;
  _34 = Com_gConfigPtr.611_33->ComRxIPduStatusBase;
  _35 = (int) _34;
  _36 = (int) PduId_48(D);
  _37 = _35 + _36;
  _38 = (sizetype) _37;
  _39 = Com_gDataMemPtr.610_32 + _38;
  _40 = *_39;
  _41 = _40 >> 2;
  RxDMTout_49 = _41 & 1;
  # DEBUG RxDMTout => RxDMTout_49

  <bb 6> :
  # RxDMTout_43 = PHI <RxDMTout_50(4), RxDMTout_49(5)>
  # DEBUG RxDMTout => RxDMTout_43
  # DEBUG BEGIN_STMT
  if (RxDMTout_43 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  RxDMReplace_51 = 1;
  # DEBUG RxDMReplace => RxDMReplace_51

  <bb 8> :
  # RxDMReplace_42 = PHI <RxDMReplace_44(2), RxDMReplace_44(6), RxDMReplace_51(7)>
  # DEBUG RxDMReplace => RxDMReplace_42
  # DEBUG BEGIN_STMT
  _52 = RxDMReplace_42;
  return _52;

}


Com_ComXf_GetRxSGId (Com_SignalIdType GroupSignalId)
{
  const struct ComRxSignalType * const SignalPtr;
  Com_SignalGroupIdType SGId;
  Com_SignalGroupIdType _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SGId_2 = 65535;
  # DEBUG SGId => SGId_2
  # DEBUG BEGIN_STMT
  SignalPtr_6 = Com_GetRxSignalCfg (GroupSignalId_4(D), 255);
  # DEBUG SignalPtr => SignalPtr_6
  # DEBUG BEGIN_STMT
  if (SignalPtr_6 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SGId_7 = SignalPtr_6->ComSignalBase.ComSignalGroupRef;
  # DEBUG SGId => SGId_7

  <bb 4> :
  # SGId_1 = PHI <SGId_2(2), SGId_7(3)>
  # DEBUG SGId => SGId_1
  # DEBUG BEGIN_STMT
  _8 = SGId_1;
  return _8;

}


Com_ReceiveDynSignal (Com_SignalIdType SignalId, void * SignalDataPtr, uint16 * LengthPtr)
{
  const struct ComRxIPduType * const IPduPtr;
  const ComIPduRefType PduId;
  const struct ComRxSignalType * const SignalPtr;
  uint8 retval;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  const struct Com_ConfigType * Com_gConfigPtr.828_6;
  const struct Com_ConfigType * Com_gConfigPtr.829_7;
  long unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  uint8 * Com_gDataMemPtr.830_12;
  const struct Com_ConfigType * Com_gConfigPtr.831_13;
  short unsigned int _14;
  int _15;
  int _16;
  int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  unsigned int _21;
  unsigned int _22;
  uint8 _40;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_25 = 128;
  # DEBUG retval => retval_25
  # DEBUG BEGIN_STMT
  SignalPtr_29 = Com_GetRxSignalCfg (SignalId_27(D), 34);
  # DEBUG SignalPtr => SignalPtr_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalPtr_29 == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (SignalDataPtr_30(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 34, 3);
  goto <bb 12>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (LengthPtr_31(D) == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 34, 3);
  goto <bb 12>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _1 = SignalPtr_29->ComSignalBase.ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  _4 = (unsigned int) _3;
  _5 = _4 & 15;
  if (_5 != 8)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 34, 1);
  goto <bb 12>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  PduId_32 = SignalPtr_29->ComIPduRef;
  # DEBUG PduId => PduId_32
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.828_6 = Com_gConfigPtr;
  Com_gConfigPtr.829_7 = Com_gConfigPtr;
  _8 = Com_gConfigPtr.829_7->ComRxIPduRef;
  _9 = (unsigned int) PduId_32;
  _10 = _9 * 48;
  _11 = _8 + _10;
  IPduPtr_33 = Com_gConfigPtr.828_6 + _11;
  # DEBUG IPduPtr => IPduPtr_33
  # DEBUG BEGIN_STMT
  retval_35 = Com_EB_ReadValue_Uint8Dyn (SignalDataPtr_30(D), LengthPtr_31(D), SignalPtr_29, IPduPtr_33, PduId_32);
  # DEBUG retval => retval_35
  # DEBUG BEGIN_STMT
  if (retval_35 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.830_12 = Com_gDataMemPtr;
  Com_gConfigPtr.831_13 = Com_gConfigPtr;
  _14 = Com_gConfigPtr.831_13->ComRxIPduStatusBase;
  _15 = (int) _14;
  _16 = (int) PduId_32;
  _17 = _15 + _16;
  _18 = (sizetype) _17;
  _19 = Com_gDataMemPtr.830_12 + _18;
  _20 = *_19;
  _21 = (unsigned int) _20;
  _22 = _21 & 1;
  if (_22 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  retval_36 = 128;
  # DEBUG retval => retval_36

  <bb 12> :
  # retval_23 = PHI <retval_25(2), retval_25(4), retval_25(6), retval_25(8), retval_35(9), retval_35(10), retval_36(11)>
  # DEBUG retval => retval_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _40 = retval_23;
  return _40;

}


Com_ReceiveSignal (Com_SignalIdType SignalId, void * SignalDataPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint8 * const dataPtr;
  const ComIPduRefType PduId;
  const struct ComRxSignalType * const SignalPtr;
  uint8 retval;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  short unsigned int _6;
  uint8 * Com_gDataMemPtr.821_7;
  short unsigned int _8;
  sizetype _9;
  uint8 * Com_gDataMemPtr.822_10;
  const struct Com_ConfigType * Com_gConfigPtr.823_11;
  short unsigned int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  unsigned int _19;
  unsigned int _20;
  short unsigned int _21;
  int _22;
  const struct ComSignalBaseType * _23;
  uint8 _41;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  SignalPtr_30 = Com_GetRxSignalCfg (SignalId_28(D), 11);
  # DEBUG SignalPtr => SignalPtr_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (SignalPtr_30 == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (SignalDataPtr_31(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 11, 3);
  goto <bb 12>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _1 = SignalPtr_30->ComSignalBase.ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  _4 = (unsigned int) _3;
  _5 = _4 & 15;
  if (_5 == 8)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 11, 1);
  goto <bb 12>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _6 = SignalPtr_30->ComSignalBase.ComBufferRef;
  if (_6 == 65535)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 11, 1);
  goto <bb 12>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  PduId_32 = SignalPtr_30->ComIPduRef;
  # DEBUG PduId => PduId_32
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.821_7 = Com_gDataMemPtr;
  _8 = SignalPtr_30->ComSignalBase.ComBufferRef;
  _9 = (sizetype) _8;
  dataPtr_33 = Com_gDataMemPtr.821_7 + _9;
  # DEBUG dataPtr => dataPtr_33
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.822_10 = Com_gDataMemPtr;
  Com_gConfigPtr.823_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.823_11->ComRxIPduStatusBase;
  _13 = (int) _12;
  _14 = (int) PduId_32;
  _15 = _13 + _14;
  _16 = (sizetype) _15;
  _17 = Com_gDataMemPtr.822_10 + _16;
  _18 = *_17;
  _19 = (unsigned int) _18;
  _20 = _19 & 1;
  if (_20 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  retval = 0;

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _21 = SignalPtr_30->ComSignalBase.ComRxSignalFlags;
  index_35 = _21 & 127;
  # DEBUG index => index_35
  # DEBUG BEGIN_STMT
  _22 = (int) index_35;
  fptr_36 = Com_ReadFuncs[_22].Read;
  # DEBUG fptr => fptr_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = &SignalPtr_30->ComSignalBase;
  fptr_36 (SignalDataPtr_31(D), dataPtr_33, _23, &retval);

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _41 = retval;
  retval ={v} {CLOBBER};
  return _41;

}


Com_GetRxSignalCfg (Com_SignalIdType SignalId, uint8 ServiceId)
{
  const struct ComRxSignalType * SignalPtr;
  unsigned char Com_InitStatus.824_1;
  const struct Com_ConfigType * Com_gConfigPtr.825_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.826_4;
  const struct Com_ConfigType * Com_gConfigPtr.827_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  const struct ComRxSignalType * _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalPtr_12 = 0B;
  # DEBUG SignalPtr => SignalPtr_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.824_1 = Com_InitStatus;
  if (Com_InitStatus.824_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_16(D), 2);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.825_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.825_2->ComRxSignalArraySize;
  if (SignalId_14(D) >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, ServiceId_16(D), 1);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.826_4 = Com_gConfigPtr;
  Com_gConfigPtr.827_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.827_5->ComRxSignalRef;
  _7 = (unsigned int) SignalId_14(D);
  _8 = _7 * 20;
  _9 = _6 + _8;
  SignalPtr_15 = Com_gConfigPtr.826_4 + _9;
  # DEBUG SignalPtr => SignalPtr_15

  <bb 7> :
  # SignalPtr_10 = PHI <SignalPtr_12(3), SignalPtr_12(5), SignalPtr_15(6)>
  # DEBUG SignalPtr => SignalPtr_10
  # DEBUG BEGIN_STMT
  _19 = SignalPtr_10;
  return _19;

}


Com_EB_Read_SignalExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint8 * const initDataPtr;
  const struct ComRxIPduType * const IPduPtr;
  const ComIPduRefType PduId;
  const boolean takeInitVal;
  const struct ComRxSignalType * const SignalPtr;
  const struct Com_ConfigType * Com_gConfigPtr.797_1;
  const struct Com_ConfigType * Com_gConfigPtr.798_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct Com_ConfigType * Com_gConfigPtr.799_7;
  long unsigned int _8;
  short unsigned int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  int _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalPtr_16 = Com_EB_ReadPropPtr_15(D);
  # DEBUG SignalPtr => SignalPtr_16
  # DEBUG BEGIN_STMT
  takeInitVal_19 = Com_EB_Read_SignalReplace (SignalPtr_16);
  # DEBUG takeInitVal => takeInitVal_19
  # DEBUG BEGIN_STMT
  if (takeInitVal_19 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  PduId_27 = SignalPtr_16->ComIPduRef;
  # DEBUG PduId => PduId_27
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.797_1 = Com_gConfigPtr;
  Com_gConfigPtr.798_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.798_2->ComRxIPduRef;
  _4 = (unsigned int) PduId_27;
  _5 = _4 * 48;
  _6 = _3 + _5;
  IPduPtr_28 = Com_gConfigPtr.797_1 + _6;
  # DEBUG IPduPtr => IPduPtr_28
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.799_7 = Com_gConfigPtr;
  _8 = IPduPtr_28->ComInitValueRef;
  initDataPtr_29 = Com_gConfigPtr.799_7 + _8;
  # DEBUG initDataPtr => initDataPtr_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = Com_EB_ReadPropPtr_15(D)->ComRxSignalFlags;
  index_30 = _9 & 55;
  # DEBUG index => index_30
  # DEBUG BEGIN_STMT
  _10 = (int) index_30;
  fptr_31 = Com_ReadFuncs[_10].Read;
  # DEBUG fptr => fptr_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_31 (SignalDataPtr_22(D), initDataPtr_29, Com_EB_ReadPropPtr_15(D), retvalPtr_24(D));
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _11 = Com_EB_ReadPropPtr_15(D)->ComFilterConf.ComFilterSignalValueRef;
  if (_11 != 65535)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_EB_Read_SignalExt_SigBuffer (SignalDataPtr_22(D), Com_EB_ReadPropPtr_15(D));
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_ReadPropPtr_15(D)->ComRxSignalFlags;
  index_20 = _12 & 63;
  # DEBUG index => index_20
  # DEBUG BEGIN_STMT
  _13 = (int) index_20;
  fptr_21 = Com_ReadFuncs[_13].Read;
  # DEBUG fptr => fptr_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_21 (SignalDataPtr_22(D), dataPtr_23(D), Com_EB_ReadPropPtr_15(D), retvalPtr_24(D));

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_SignalReplace (const struct ComRxSignalType * SignalPtr)
{
  boolean rxDMReplace;
  uint8 filterType;
  const struct ComRxSignalExtType * const SignalExtPtr;
  boolean takeInitVal;
  const struct Com_ConfigType * Com_gConfigPtr.800_1;
  const struct Com_ConfigType * Com_gConfigPtr.801_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  _Bool _8;
  short unsigned int _9;
  int iftmp.802_10;
  int iftmp.802_19;
  int iftmp.802_20;
  boolean _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  takeInitVal_11 = 0;
  # DEBUG takeInitVal => takeInitVal_11
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.800_1 = Com_gConfigPtr;
  Com_gConfigPtr.801_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.801_2->ComRxSignalExtRef;
  _4 = SignalPtr_13(D)->ComSignalExtRef;
  _5 = (unsigned int) _4;
  _6 = _5 * 14;
  _7 = _3 + _6;
  SignalExtPtr_14 = Com_gConfigPtr.800_1 + _7;
  # DEBUG SignalExtPtr => SignalExtPtr_14
  # DEBUG BEGIN_STMT
  filterType_15 = SignalPtr_13(D)->ComSignalBase.ComFilterConf.ComFilterType;
  # DEBUG filterType => filterType_15
  # DEBUG BEGIN_STMT
  _8 = filterType_15 == 0;
  takeInitVal_16 = (boolean) _8;
  # DEBUG takeInitVal => takeInitVal_16
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = SignalPtr_13(D)->ComIPduRef;
  rxDMReplace_18 = Com_EB_CheckRxSignalDM (SignalExtPtr_14, _9);
  # DEBUG rxDMReplace => rxDMReplace_18
  # DEBUG BEGIN_STMT
  if (takeInitVal_16 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (rxDMReplace_18 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.802_20 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.802_19 = 0;

  <bb 6> :
  # iftmp.802_10 = PHI <iftmp.802_20(4), iftmp.802_19(5)>
  takeInitVal_21 = (boolean) iftmp.802_10;
  # DEBUG takeInitVal => takeInitVal_21
  # DEBUG BEGIN_STMT
  _22 = takeInitVal_21;
  return _22;

}


Com_EB_Read_SignalExt_SigBuffer (void * SignalDataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr)
{
  sint32 * const bufferBaseSint32;
  sint32 * S32DataPtr;
  sint16 * const bufferBaseSint16;
  sint16 * S16DataPtr;
  sint8 * const bufferBaseSint8;
  sint8 * S8DataPtr;
  uint32 * const bufferBaseUint32;
  uint32 * U32DataPtr;
  uint16 * const bufferBaseUint16;
  uint16 * U16DataPtr;
  uint8 * const bufferBaseUint8;
  uint8 * U8DataPtr;
  uint8 * const bufferBaseBool;
  boolean * BoolDataPtr;
  const Com_TS_SignalTypeType SignalType;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  int _4;
  uint8 * Com_gDataMemPtr.807_5;
  const struct Com_ConfigType * Com_gConfigPtr.808_6;
  short unsigned int _7;
  sizetype _8;
  short unsigned int _9;
  short unsigned int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  int _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  int _18;
  unsigned char _19;
  unsigned char _20;
  uint8 * Com_gDataMemPtr.809_21;
  const struct Com_ConfigType * Com_gConfigPtr.810_22;
  short unsigned int _23;
  sizetype _24;
  short unsigned int _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  uint8 * Com_gDataMemPtr.811_29;
  const struct Com_ConfigType * Com_gConfigPtr.812_30;
  short unsigned int _31;
  sizetype _32;
  short unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  uint16 * _36;
  short unsigned int _37;
  uint8 * Com_gDataMemPtr.813_38;
  const struct Com_ConfigType * Com_gConfigPtr.814_39;
  short unsigned int _40;
  sizetype _41;
  short unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  uint32 * _45;
  long unsigned int _46;
  uint8 * Com_gDataMemPtr.815_47;
  const struct Com_ConfigType * Com_gConfigPtr.816_48;
  short unsigned int _49;
  sizetype _50;
  short unsigned int _51;
  sizetype _52;
  sint8 * _53;
  signed char _54;
  uint8 * Com_gDataMemPtr.817_55;
  const struct Com_ConfigType * Com_gConfigPtr.818_56;
  short unsigned int _57;
  sizetype _58;
  short unsigned int _59;
  unsigned int _60;
  unsigned int _61;
  sint16 * _62;
  short int _63;
  uint8 * Com_gDataMemPtr.819_64;
  const struct Com_ConfigType * Com_gConfigPtr.820_65;
  short unsigned int _66;
  sizetype _67;
  short unsigned int _68;
  unsigned int _69;
  unsigned int _70;
  sint32 * _71;
  long int _72;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_75(D)->ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  SignalType_76 = _3 & 15;
  # DEBUG SignalType => SignalType_76
  # DEBUG BEGIN_STMT
  _4 = (int) SignalType_76;
  switch (_4) <default: <L9> [INV], case 0: <L0> [INV], case 1: <L5> [INV], case 2: <L6> [INV], case 3: <L4> [INV], case 4: <L2> [INV], case 5: <L3> [INV], case 6: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  BoolDataPtr_96 = SignalDataPtr_77(D);
  # DEBUG BoolDataPtr => BoolDataPtr_96
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.807_5 = Com_gDataMemPtr;
  Com_gConfigPtr.808_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.808_6->ComBufferBaseBool;
  _8 = (sizetype) _7;
  bufferBaseBool_97 = Com_gDataMemPtr.807_5 + _8;
  # DEBUG bufferBaseBool => bufferBaseBool_97
  # DEBUG BEGIN_STMT
  _9 = Com_EB_ReadPropPtr_75(D)->ComFilterConf.ComFilterSignalValueRef;
  _10 = _9 / 8;
  _11 = (sizetype) _10;
  _12 = bufferBaseBool_97 + _11;
  _13 = *_12;
  _14 = (int) _13;
  _15 = Com_EB_ReadPropPtr_75(D)->ComFilterConf.ComFilterSignalValueRef;
  _16 = (unsigned int) _15;
  _17 = _16 & 7;
  _18 = _14 >> _17;
  _19 = (unsigned char) _18;
  _20 = _19 & 1;
  *BoolDataPtr_96 = _20;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  U8DataPtr_78 = SignalDataPtr_77(D);
  # DEBUG U8DataPtr => U8DataPtr_78
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.809_21 = Com_gDataMemPtr;
  Com_gConfigPtr.810_22 = Com_gConfigPtr;
  _23 = Com_gConfigPtr.810_22->ComBufferBaseUInt8;
  _24 = (sizetype) _23;
  bufferBaseUint8_79 = Com_gDataMemPtr.809_21 + _24;
  # DEBUG bufferBaseUint8 => bufferBaseUint8_79
  # DEBUG BEGIN_STMT
  _25 = Com_EB_ReadPropPtr_75(D)->ComFilterConf.ComFilterSignalValueRef;
  _26 = (sizetype) _25;
  _27 = bufferBaseUint8_79 + _26;
  _28 = *_27;
  *U8DataPtr_78 = _28;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  U16DataPtr_84 = SignalDataPtr_77(D);
  # DEBUG U16DataPtr => U16DataPtr_84
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.811_29 = Com_gDataMemPtr;
  Com_gConfigPtr.812_30 = Com_gConfigPtr;
  _31 = Com_gConfigPtr.812_30->ComBufferBaseUInt16;
  _32 = (sizetype) _31;
  bufferBaseUint16_85 = Com_gDataMemPtr.811_29 + _32;
  # DEBUG bufferBaseUint16 => bufferBaseUint16_85
  # DEBUG BEGIN_STMT
  _33 = Com_EB_ReadPropPtr_75(D)->ComFilterConf.ComFilterSignalValueRef;
  _34 = (unsigned int) _33;
  _35 = _34 * 2;
  _36 = bufferBaseUint16_85 + _35;
  _37 = *_36;
  *U16DataPtr_84 = _37;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  U32DataPtr_81 = SignalDataPtr_77(D);
  # DEBUG U32DataPtr => U32DataPtr_81
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.813_38 = Com_gDataMemPtr;
  Com_gConfigPtr.814_39 = Com_gConfigPtr;
  _40 = Com_gConfigPtr.814_39->ComBufferBaseUInt32;
  _41 = (sizetype) _40;
  bufferBaseUint32_82 = Com_gDataMemPtr.813_38 + _41;
  # DEBUG bufferBaseUint32 => bufferBaseUint32_82
  # DEBUG BEGIN_STMT
  _42 = Com_EB_ReadPropPtr_75(D)->ComFilterConf.ComFilterSignalValueRef;
  _43 = (unsigned int) _42;
  _44 = _43 * 4;
  _45 = bufferBaseUint32_82 + _44;
  _46 = *_45;
  *U32DataPtr_81 = _46;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  S8DataPtr_87 = SignalDataPtr_77(D);
  # DEBUG S8DataPtr => S8DataPtr_87
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.815_47 = Com_gDataMemPtr;
  Com_gConfigPtr.816_48 = Com_gConfigPtr;
  _49 = Com_gConfigPtr.816_48->ComBufferBaseSInt8;
  _50 = (sizetype) _49;
  bufferBaseSint8_88 = Com_gDataMemPtr.815_47 + _50;
  # DEBUG bufferBaseSint8 => bufferBaseSint8_88
  # DEBUG BEGIN_STMT
  _51 = Com_EB_ReadPropPtr_75(D)->ComFilterConf.ComFilterSignalValueRef;
  _52 = (sizetype) _51;
  _53 = bufferBaseSint8_88 + _52;
  _54 = *_53;
  *S8DataPtr_87 = _54;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  S16DataPtr_93 = SignalDataPtr_77(D);
  # DEBUG S16DataPtr => S16DataPtr_93
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.817_55 = Com_gDataMemPtr;
  Com_gConfigPtr.818_56 = Com_gConfigPtr;
  _57 = Com_gConfigPtr.818_56->ComBufferBaseSInt16;
  _58 = (sizetype) _57;
  bufferBaseSint16_94 = Com_gDataMemPtr.817_55 + _58;
  # DEBUG bufferBaseSint16 => bufferBaseSint16_94
  # DEBUG BEGIN_STMT
  _59 = Com_EB_ReadPropPtr_75(D)->ComFilterConf.ComFilterSignalValueRef;
  _60 = (unsigned int) _59;
  _61 = _60 * 2;
  _62 = bufferBaseSint16_94 + _61;
  _63 = *_62;
  *S16DataPtr_93 = _63;
  # DEBUG BEGIN_STMT
  goto <bb 10>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  S32DataPtr_90 = SignalDataPtr_77(D);
  # DEBUG S32DataPtr => S32DataPtr_90
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.819_64 = Com_gDataMemPtr;
  Com_gConfigPtr.820_65 = Com_gConfigPtr;
  _66 = Com_gConfigPtr.820_65->ComBufferBaseSInt32;
  _67 = (sizetype) _66;
  bufferBaseSint32_91 = Com_gDataMemPtr.819_64 + _67;
  # DEBUG bufferBaseSint32 => bufferBaseSint32_91
  # DEBUG BEGIN_STMT
  _68 = Com_EB_ReadPropPtr_75(D)->ComFilterConf.ComFilterSignalValueRef;
  _69 = (unsigned int) _68;
  _70 = _69 * 4;
  _71 = bufferBaseSint32_91 + _70;
  _72 = *_71;
  *S32DataPtr_90 = _72;
  # DEBUG BEGIN_STMT

  <bb 10> :
<L9>:
  return;

}


Com_EB_CheckRxSignalDM (const struct ComRxSignalExtType * SignalExtPtr, ComIPduRefType PduId)
{
  uint8 RxDMTout;
  boolean RxDMReplace;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  unsigned char _5;
  unsigned int _6;
  unsigned int _7;
  uint8 * Com_gDataMemPtr.803_8;
  const struct Com_ConfigType * Com_gConfigPtr.804_9;
  short unsigned int _10;
  unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  uint8 * _16;
  unsigned char _17;
  int _18;
  short unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  int _23;
  unsigned char _24;
  uint8 * Com_gDataMemPtr.805_25;
  const struct Com_ConfigType * Com_gConfigPtr.806_26;
  short unsigned int _27;
  int _28;
  int _29;
  int _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  unsigned char _34;
  boolean _44;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RxDMReplace_37 = 0;
  # DEBUG RxDMReplace => RxDMReplace_37
  # DEBUG BEGIN_STMT
  _1 = SignalExtPtr_39(D)->ComRxSignalExtFlags;
  _2 = (unsigned int) _1;
  _3 = _2 & 1;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = SignalExtPtr_39(D)->ComRxSignalExtFlags;
  _5 = _4 >> 2;
  _6 = (unsigned int) _5;
  _7 = _6 & 1;
  if (_7 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.803_8 = Com_gDataMemPtr;
  Com_gConfigPtr.804_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.804_9->ComRxTimeoutSignalStatusQueueBase;
  _11 = (unsigned int) _10;
  _12 = SignalExtPtr_39(D)->RxSigDMQueueRef;
  _13 = _12 / 4;
  _14 = (unsigned int) _13;
  _15 = _11 + _14;
  _16 = Com_gDataMemPtr.803_8 + _15;
  _17 = *_16;
  _18 = (int) _17;
  _19 = SignalExtPtr_39(D)->RxSigDMQueueRef;
  _20 = (unsigned int) _19;
  _21 = _20 & 3;
  _22 = _21 * 2;
  _23 = _18 >> _22;
  _24 = (unsigned char) _23;
  RxDMTout_42 = _24 & 1;
  # DEBUG RxDMTout => RxDMTout_42
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.805_25 = Com_gDataMemPtr;
  Com_gConfigPtr.806_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.806_26->ComRxIPduStatusBase;
  _28 = (int) _27;
  _29 = (int) PduId_40(D);
  _30 = _28 + _29;
  _31 = (sizetype) _30;
  _32 = Com_gDataMemPtr.805_25 + _31;
  _33 = *_32;
  _34 = _33 >> 2;
  RxDMTout_41 = _34 & 1;
  # DEBUG RxDMTout => RxDMTout_41

  <bb 6> :
  # RxDMTout_36 = PHI <RxDMTout_42(4), RxDMTout_41(5)>
  # DEBUG RxDMTout => RxDMTout_36
  # DEBUG BEGIN_STMT
  if (RxDMTout_36 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  RxDMReplace_43 = 1;
  # DEBUG RxDMReplace => RxDMReplace_43

  <bb 8> :
  # RxDMReplace_35 = PHI <RxDMReplace_37(2), RxDMReplace_37(6), RxDMReplace_43(7)>
  # DEBUG RxDMReplace => RxDMReplace_35
  # DEBUG BEGIN_STMT
  _44 = RxDMReplace_35;
  return _44;

}


Com_EB_ReadValue_Uint8Dyn (void * SignalDataPtr, uint16 * LengthPtr, const struct ComRxSignalType * SignalPtr, const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  const uint16 pduLength;
  const uint8 * const dataPtr;
  const uint8 * const initDataDynSigPtr;
  const uint8 * const initDataPduPtr;
  const boolean takeInitVal;
  const ComSignalDescBitType startbyte;
  ComSignalBitSizeType SigLen;
  uint8 retval;
  short unsigned int _1;
  short unsigned int _2;
  const struct Com_ConfigType * Com_gConfigPtr.832_3;
  long unsigned int _4;
  sizetype _5;
  long unsigned int _6;
  uint8 * Com_gDataMemPtr.833_7;
  short unsigned int _8;
  int _9;
  int _10;
  int _11;
  sizetype _12;
  uint8 * Com_gDataMemPtr.834_13;
  const struct Com_ConfigType * Com_gConfigPtr.835_14;
  short unsigned int _15;
  sizetype _16;
  uint8 * _17;
  unsigned int _18;
  unsigned int _19;
  ComIPduSizeType * _20;
  short unsigned int _21;
  long unsigned int _22;
  uint8 _53;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_29 = 1;
  # DEBUG retval => retval_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  startbyte_32 = SignalPtr_31(D)->ComSignalBase.ComSignalPositionInBit;
  # DEBUG startbyte => startbyte_32
  # DEBUG BEGIN_STMT
  takeInitVal_34 = Com_EB_Read_SignalReplace (SignalPtr_31(D));
  # DEBUG takeInitVal => takeInitVal_34
  # DEBUG BEGIN_STMT
  if (takeInitVal_34 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_46(D)->ComIPduInitSize;
  SigLen_47 = _1 - startbyte_32;
  # DEBUG SigLen => SigLen_47
  # DEBUG BEGIN_STMT
  _2 = *LengthPtr_41(D);
  if (SigLen_47 <= _2)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.832_3 = Com_gConfigPtr;
  _4 = IPduPtr_46(D)->ComInitValueRef;
  initDataPduPtr_48 = Com_gConfigPtr.832_3 + _4;
  # DEBUG initDataPduPtr => initDataPduPtr_48
  # DEBUG BEGIN_STMT
  _5 = (sizetype) startbyte_32;
  initDataDynSigPtr_49 = initDataPduPtr_48 + _5;
  # DEBUG initDataDynSigPtr => initDataDynSigPtr_49
  # DEBUG BEGIN_STMT
  _6 = (long unsigned int) SigLen_47;
  TS_MemCpy32 (SignalDataPtr_42(D), initDataDynSigPtr_49, _6);
  # DEBUG BEGIN_STMT
  retval_51 = 0;
  # DEBUG retval => retval_51
  goto <bb 11>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.833_7 = Com_gDataMemPtr;
  _8 = SignalPtr_31(D)->ComSignalBase.ComBufferRef;
  _9 = (int) _8;
  _10 = (int) startbyte_32;
  _11 = _9 + _10;
  _12 = (sizetype) _11;
  dataPtr_35 = Com_gDataMemPtr.833_7 + _12;
  # DEBUG dataPtr => dataPtr_35
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.834_13 = Com_gDataMemPtr;
  Com_gConfigPtr.835_14 = Com_gConfigPtr;
  _15 = Com_gConfigPtr.835_14->ComRxIPduLengthBase;
  _16 = (sizetype) _15;
  _17 = Com_gDataMemPtr.834_13 + _16;
  _18 = (unsigned int) PduId_37(D);
  _19 = _18 * 2;
  _20 = _17 + _19;
  pduLength_38 = *_20;
  # DEBUG pduLength => pduLength_38
  # DEBUG BEGIN_STMT
  if (pduLength_38 > startbyte_32)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SigLen_40 = pduLength_38 - startbyte_32;
  # DEBUG SigLen => SigLen_40
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  SigLen_39 = 0;
  # DEBUG SigLen => SigLen_39

  <bb 8> :
  # SigLen_25 = PHI <SigLen_40(6), SigLen_39(7)>
  # DEBUG SigLen => SigLen_25
  # DEBUG BEGIN_STMT
  _21 = *LengthPtr_41(D);
  if (SigLen_25 <= _21)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _22 = (long unsigned int) SigLen_25;
  TS_MemCpy32 (SignalDataPtr_42(D), dataPtr_35, _22);
  # DEBUG BEGIN_STMT
  retval_44 = 0;
  # DEBUG retval => retval_44

  <bb 10> :
  # retval_23 = PHI <retval_29(8), retval_44(9)>
  # DEBUG retval => retval_23
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 11> :
  # retval_24 = PHI <retval_51(4), retval_23(10), retval_29(3)>
  # SigLen_26 = PHI <SigLen_47(4), SigLen_25(10), SigLen_47(3)>
  # DEBUG SigLen => SigLen_26
  # DEBUG retval => retval_24
  # DEBUG BEGIN_STMT
  *LengthPtr_41(D) = SigLen_26;
  # DEBUG BEGIN_STMT
  _53 = retval_24;
  return _53;

}


Com_ReceiveShadowSignal (Com_SignalIdType SignalId, void * SignalDataPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_ReceiveSignal (SignalId_2(D), SignalDataPtr_3(D));
  # DEBUG BEGIN_STMT
  return;

}


Com_MainFunctionTx ()
{
  ComIPduRefType PduId;
  unsigned char Com_InitStatus.736_1;
  short unsigned int PduId.737_2;
  const struct Com_ConfigType * Com_gConfigPtr.738_3;
  short unsigned int _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.736_1 = Com_InitStatus;
  if (Com_InitStatus.736_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PduId_9 = 0;
  # DEBUG PduId => PduId_9
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_EB_MainFunctionTx_hlp (PduId_5);
  # DEBUG BEGIN_STMT
  PduId.737_2 = PduId_5;
  PduId_11 = PduId.737_2 + 1;
  # DEBUG PduId => PduId_11

  <bb 5> :
  # PduId_5 = PHI <PduId_9(3), PduId_11(4)>
  # DEBUG PduId => PduId_5
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.738_3 = Com_gConfigPtr;
  _4 = Com_gConfigPtr.738_3->ComTxIPduArraySize;
  if (PduId_5 < _4)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_MainFunctionTx_hlp (ComIPduRefType PduId)
{
  const boolean transmit_cyclic;
  const boolean transmit_ntimes;
  uint8 * const IPduFlagBytePtr;
  const struct ComTxIPduType * IPduPtr;
  boolean transmit;
  const struct Com_ConfigType * Com_gConfigPtr.739_1;
  const struct Com_ConfigType * Com_gConfigPtr.740_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  uint8 * Com_gDataMemPtr.741_7;
  const struct Com_ConfigType * Com_gConfigPtr.742_8;
  short unsigned int _9;
  int _10;
  int _11;
  int _12;
  sizetype _13;
  unsigned char _14;
  unsigned int _15;
  unsigned int _16;
  unsigned char _17;
  unsigned int _18;
  unsigned int _19;
  unsigned char _20;
  unsigned int _21;
  unsigned int _22;
  unsigned char _23;
  unsigned int _24;
  unsigned int _25;
  unsigned char _26;
  unsigned int _27;
  unsigned int _28;
  int iftmp.743_31;
  int iftmp.744_32;
  int iftmp.743_49;
  int iftmp.743_50;
  int iftmp.744_54;
  int iftmp.744_55;

  <bb 2> :
  # DEBUG BEGIN_STMT
  transmit_38 = 0;
  # DEBUG transmit => transmit_38
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.739_1 = Com_gConfigPtr;
  Com_gConfigPtr.740_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.740_2->ComTxIPduRef;
  _4 = (unsigned int) PduId_40(D);
  _5 = _4 * 64;
  _6 = _3 + _5;
  IPduPtr_41 = Com_gConfigPtr.739_1 + _6;
  # DEBUG IPduPtr => IPduPtr_41
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.741_7 = Com_gDataMemPtr;
  Com_gConfigPtr.742_8 = Com_gConfigPtr;
  _9 = Com_gConfigPtr.742_8->ComTxIPduStatusBase;
  _10 = (int) _9;
  _11 = (int) PduId_40(D);
  _12 = _10 + _11;
  _13 = (sizetype) _12;
  IPduFlagBytePtr_42 = Com_gDataMemPtr.741_7 + _13;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_42
  # DEBUG BEGIN_STMT
  _14 = *IPduFlagBytePtr_42;
  _15 = (unsigned int) _14;
  _16 = _15 & 2;
  if (_16 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_CheckMdtforPdu (PduId_40(D), IPduPtr_41);

  <bb 4> :
  # DEBUG BEGIN_STMT
  _17 = *IPduFlagBytePtr_42;
  _18 = (unsigned int) _17;
  _19 = _18 & 1;
  if (_19 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  transmit_45 = Com_EB_CheckTMSforPdu (PduId_40(D), IPduPtr_41);
  # DEBUG transmit => transmit_45
  # DEBUG BEGIN_STMT
  _20 = *IPduFlagBytePtr_42;
  _21 = (unsigned int) _20;
  _22 = _21 & 32;
  if (_22 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_EB_CheckTxDMforPdu (PduId_40(D), IPduPtr_41);

  <bb 7> :
  # DEBUG BEGIN_STMT
  _23 = *IPduFlagBytePtr_42;
  _24 = (unsigned int) _23;
  _25 = _24 & 8;
  if (_25 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  transmit_ntimes_48 = Com_EB_CheckNTimesSendforPdu (PduId_40(D), IPduPtr_41);
  # DEBUG transmit_ntimes => transmit_ntimes_48
  # DEBUG BEGIN_STMT
  if (transmit_45 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (transmit_ntimes_48 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.743_50 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.743_49 = 0;

  <bb 12> :
  # iftmp.743_31 = PHI <iftmp.743_50(10), iftmp.743_49(11)>
  transmit_51 = (boolean) iftmp.743_31;
  # DEBUG transmit => transmit_51

  <bb 13> :
  # transmit_29 = PHI <transmit_45(7), transmit_51(12)>
  # DEBUG transmit => transmit_29
  # DEBUG BEGIN_STMT
  _26 = *IPduFlagBytePtr_42;
  _27 = (unsigned int) _26;
  _28 = _27 & 4;
  if (_28 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  transmit_cyclic_53 = Com_EB_CheckPeriodicSendforPdu (PduId_40(D), IPduPtr_41);
  # DEBUG transmit_cyclic => transmit_cyclic_53
  # DEBUG BEGIN_STMT
  if (transmit_29 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  if (transmit_cyclic_53 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.744_55 = 1;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.744_54 = 0;

  <bb 18> :
  # iftmp.744_32 = PHI <iftmp.744_55(16), iftmp.744_54(17)>
  transmit_56 = (boolean) iftmp.744_32;
  # DEBUG transmit => transmit_56

  <bb 19> :
  # transmit_30 = PHI <transmit_29(13), transmit_56(18)>
  # DEBUG transmit => transmit_30
  # DEBUG BEGIN_STMT
  Com_EB_Handle_Send_Pdu (PduId_40(D), IPduPtr_41, IPduFlagBytePtr_42, transmit_30);

  <bb 20> :
  # DEBUG BEGIN_STMT
  Com_EB_HandleDeferredTxConfirm (IPduPtr_41);
  return;

}


Com_EB_Handle_Send_Pdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr, uint8 * IPduFlagBytePtr, boolean transmit)
{
  boolean to_transmit;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  to_transmit_10 = transmit_9(D);
  # DEBUG to_transmit => to_transmit_10
  # DEBUG BEGIN_STMT
  _1 = *IPduFlagBytePtr_12(D);
  _2 = (unsigned int) _1;
  _3 = _2 & 2;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (to_transmit_10 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_12(D), 4);
  goto <bb 9>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = *IPduFlagBytePtr_12(D);
  _5 = (unsigned int) _4;
  _6 = _5 & 16;
  if (_6 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  to_transmit_13 = 1;
  # DEBUG to_transmit => to_transmit_13

  <bb 7> :
  # to_transmit_7 = PHI <to_transmit_10(5), to_transmit_13(6)>
  # DEBUG to_transmit => to_transmit_7
  # DEBUG BEGIN_STMT
  if (to_transmit_7 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_12(D), 4);
  # DEBUG BEGIN_STMT
  Com_EB_Send_Pdu (PduId_15(D), IPduPtr_16(D));

  <bb 9> :
  return;

}


Com_EB_HandleDeferredTxConfirm (const struct ComTxIPduType * IPduPtr)
{
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  uint8 * Com_gDataMemPtr.790_4;
  const struct Com_ConfigType * Com_gConfigPtr.791_5;
  short unsigned int _6;
  unsigned int _7;
  short unsigned int _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  uint8 * _12;
  unsigned char _13;
  short unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  int _17;
  unsigned char _18;
  unsigned char _19;
  uint8 * Com_gDataMemPtr.792_20;
  const struct Com_ConfigType * Com_gConfigPtr.793_21;
  short unsigned int _22;
  short unsigned int _23;
  short unsigned int _24;
  short unsigned int _25;
  sizetype _26;
  uint8 * _27;
  short unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_33(D)->ComTxIPduFlags;
  _2 = (unsigned int) _1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.790_4 = Com_gDataMemPtr;
  Com_gConfigPtr.791_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.791_5->ComCbkTxAckDeferredStatusBase;
  _7 = (unsigned int) _6;
  _8 = IPduPtr_33(D)->ComNotificationDeferredQueueRef;
  _9 = _8 / 8;
  _10 = (unsigned int) _9;
  _11 = _7 + _10;
  _12 = Com_gDataMemPtr.790_4 + _11;
  _13 = *_12;
  _14 = IPduPtr_33(D)->ComNotificationDeferredQueueRef;
  _15 = (unsigned int) _14;
  _16 = _15 & 7;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _19 = _13 & _18;
  if (_19 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.792_20 = Com_gDataMemPtr;
  Com_gConfigPtr.793_21 = Com_gConfigPtr;
  _22 = Com_gConfigPtr.793_21->ComCbkTxAckDeferredStatusBase;
  _23 = IPduPtr_33(D)->ComNotificationDeferredQueueRef;
  _24 = _23 / 8;
  _25 = _22 + _24;
  _26 = (sizetype) _25;
  _27 = Com_gDataMemPtr.792_20 + _26;
  _28 = IPduPtr_33(D)->ComNotificationDeferredQueueRef;
  _29 = (long unsigned int) _28;
  _30 = _29 & 7;
  TS_AtomicClearBit_8 (_27, _30);
  # DEBUG BEGIN_STMT
  Com_EB_TxConfirmations (IPduPtr_33(D));

  <bb 5> :
  return;

}


Com_EB_CheckTxDMforPdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr)
{
  uint8 AktTM;
  uint8 CurrentTMS;
  Com_CbkTxTOutIdxType j;
  ComTxTimeoutFactorType * const TxTimeoutQueueValPtr;
  ComTxTimeoutFactorType * const TxTimeoutQueueBase;
  uint8 * const IPduFlagBytePtr;
  boolean timeout;
  ComTxTimeoutFactorType CompTime;
  ComTxTimeoutFactorType globalTime;
  uint8 * Com_gDataMemPtr.760_1;
  const struct Com_ConfigType * Com_gConfigPtr.761_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  uint8 * Com_gDataMemPtr.762_8;
  const struct Com_ConfigType * Com_gConfigPtr.763_9;
  short unsigned int _10;
  sizetype _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  const struct Com_ConfigType * Com_gConfigPtr.764_21;
  const struct Com_ConfigType * Com_gConfigPtr.765_22;
  long unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  sizetype _26;
  const Com_CbkTxTOutIdxType * _27;
  short unsigned int _28;
  int _29;
  void (*<T604>) (void) _30;
  short unsigned int j.766_31;
  int _32;
  short unsigned int _33;
  int _34;
  short unsigned int _35;
  int _36;
  int _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  uint8 iftmp.767_44;
  uint8 iftmp.767_65;
  uint8 iftmp.767_66;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  timeout_48 = 0;
  # DEBUG timeout => timeout_48
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.760_1 = Com_gDataMemPtr;
  Com_gConfigPtr.761_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.761_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_50(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  IPduFlagBytePtr_51 = Com_gDataMemPtr.760_1 + _7;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_51
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.762_8 = Com_gDataMemPtr;
  Com_gConfigPtr.763_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.763_9->ComTxTimeoutQueueBase;
  _11 = (sizetype) _10;
  TxTimeoutQueueBase_52 = Com_gDataMemPtr.762_8 + _11;
  # DEBUG TxTimeoutQueueBase => TxTimeoutQueueBase_52
  # DEBUG BEGIN_STMT
  _12 = IPduPtr_53(D)->TxDMQueueRef;
  _13 = (unsigned int) _12;
  _14 = _13 * 2;
  TxTimeoutQueueValPtr_54 = TxTimeoutQueueBase_52 + _14;
  # DEBUG TxTimeoutQueueValPtr => TxTimeoutQueueValPtr_54
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_56 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_56
  # DEBUG BEGIN_STMT
  CompTime_57 = *TxTimeoutQueueValPtr_54;
  # DEBUG CompTime => CompTime_57
  # DEBUG BEGIN_STMT
  if (globalTime_56 == CompTime_57)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  timeout_58 = 1;
  # DEBUG timeout => timeout_58
  # DEBUG BEGIN_STMT
  _15 = *IPduFlagBytePtr_51;
  _16 = _15 & 223;
  *IPduFlagBytePtr_51 = _16;
  # DEBUG BEGIN_STMT
  _17 = *IPduFlagBytePtr_51;
  _18 = _17 & 247;
  *IPduFlagBytePtr_51 = _18;
  # DEBUG BEGIN_STMT
  _19 = *IPduFlagBytePtr_51;
  _20 = _19 & 253;
  *IPduFlagBytePtr_51 = _20;

  <bb 4> :
  # timeout_42 = PHI <timeout_48(2), timeout_58(3)>
  # DEBUG timeout => timeout_42
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (timeout_42 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_63 = IPduPtr_53(D)->ComTxTimeoutNotificationFirst;
  # DEBUG j => j_63
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.764_21 = Com_gConfigPtr;
  Com_gConfigPtr.765_22 = Com_gConfigPtr;
  _23 = Com_gConfigPtr.765_22->ComTxTimeoutNotificationRef;
  _24 = (unsigned int) j_43;
  _25 = _24 * 2;
  _26 = _23 + _25;
  _27 = Com_gConfigPtr.764_21 + _26;
  _28 = *_27;
  _29 = (int) _28;
  _30 = Com_CbkTxTOut_Array[_29];
  _30 ();
  # DEBUG BEGIN_STMT
  j.766_31 = j_43;
  j_70 = j.766_31 + 1;
  # DEBUG j => j_70

  <bb 7> :
  # j_43 = PHI <j_63(5), j_70(6)>
  # DEBUG j => j_43
  # DEBUG BEGIN_STMT
  _32 = (int) j_43;
  _33 = IPduPtr_53(D)->ComTxTimeoutNotificationFirst;
  _34 = (int) _33;
  _35 = IPduPtr_53(D)->ComTxTimeoutNotificationNum;
  _36 = (int) _35;
  _37 = _34 + _36;
  if (_32 < _37)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = *IPduFlagBytePtr_51;
  _39 = _38 >> 6;
  CurrentTMS_64 = _39 & 1;
  # DEBUG CurrentTMS => CurrentTMS_64
  # DEBUG BEGIN_STMT
  if (CurrentTMS_64 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _40 = IPduPtr_53(D)->ComTxModeModes;
  iftmp.767_66 = _40 & 15;
  goto <bb 11>; [INV]

  <bb 10> :
  _41 = IPduPtr_53(D)->ComTxModeModes;
  iftmp.767_65 = _41 >> 4;

  <bb 11> :
  # iftmp.767_44 = PHI <iftmp.767_66(9), iftmp.767_65(10)>
  AktTM_67 = iftmp.767_44;
  # DEBUG AktTM => AktTM_67
  # DEBUG BEGIN_STMT
  if (AktTM_67 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Com_EB_TxDM_TMNone (IPduPtr_53(D), PduId_50(D));

  <bb 13> :
  return;

}


Com_EB_CheckMdtforPdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr)
{
  ComTxIPduMinimumDelayTimeFactorType * const MDTQueueValPtr;
  ComTxIPduMinimumDelayTimeFactorType * const MDTQueueBase;
  uint8 * const PduFlagPtr;
  ComTxIPduMinimumDelayTimeFactorType CompTime;
  ComTxIPduMinimumDelayTimeFactorType globalTime;
  uint8 * Com_gDataMemPtr.745_1;
  const struct Com_ConfigType * Com_gConfigPtr.746_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  uint8 * Com_gDataMemPtr.747_8;
  const struct Com_ConfigType * Com_gConfigPtr.748_9;
  short unsigned int _10;
  sizetype _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  unsigned char _15;
  unsigned char _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.745_1 = Com_gDataMemPtr;
  Com_gConfigPtr.746_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.746_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_19(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  PduFlagPtr_20 = Com_gDataMemPtr.745_1 + _7;
  # DEBUG PduFlagPtr => PduFlagPtr_20
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.747_8 = Com_gDataMemPtr;
  Com_gConfigPtr.748_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.748_9->ComMDTQueueBase;
  _11 = (sizetype) _10;
  MDTQueueBase_21 = Com_gDataMemPtr.747_8 + _11;
  # DEBUG MDTQueueBase => MDTQueueBase_21
  # DEBUG BEGIN_STMT
  _12 = IPduPtr_22(D)->MDTQueueRef;
  _13 = (unsigned int) _12;
  _14 = _13 * 2;
  MDTQueueValPtr_23 = MDTQueueBase_21 + _14;
  # DEBUG MDTQueueValPtr => MDTQueueValPtr_23
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_25 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_25
  # DEBUG BEGIN_STMT
  CompTime_26 = *MDTQueueValPtr_23;
  # DEBUG CompTime => CompTime_26
  # DEBUG BEGIN_STMT
  if (globalTime_25 == CompTime_26)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _15 = *PduFlagPtr_20;
  _16 = _15 & 253;
  *PduFlagPtr_20 = _16;

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  return;

}


Com_EB_CheckNTimesSendforPdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr)
{
  const struct ComTxModeMixedNTimesType * TMMixedNTimesPtr;
  const struct ComTxModeNTimesType * TMNTimesPtr;
  ComTxModeRepetitionPeriodFactorType * const NTimesQueueValNextTimePtr;
  ComTxModeRepetitionPeriodFactorType * const NTimesQueueBaseNextTimeBase;
  uint8 * const NTimesQueueValRemainingPtr;
  uint8 * const NTimesQueueBaseRemaining;
  boolean transmit;
  ComTxModeIdxType TMRef;
  uint8 AktTM;
  uint8 BitRes;
  uint8 N;
  ComTxModeRepetitionPeriodFactorType NPeriod;
  ComTxModeRepetitionPeriodFactorType CompTime;
  ComTxModeRepetitionPeriodFactorType globalTime;
  uint8 * Com_gDataMemPtr.768_1;
  const struct Com_ConfigType * Com_gConfigPtr.769_2;
  short unsigned int _3;
  sizetype _4;
  short unsigned int _5;
  sizetype _6;
  uint8 * Com_gDataMemPtr.770_7;
  const struct Com_ConfigType * Com_gConfigPtr.771_8;
  short unsigned int _9;
  sizetype _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  uint8 * Com_gDataMemPtr.772_14;
  const struct Com_ConfigType * Com_gConfigPtr.773_15;
  short unsigned int _16;
  int _17;
  int _18;
  int _19;
  sizetype _20;
  uint8 * _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  int _26;
  const struct Com_ConfigType * Com_gConfigPtr.776_27;
  const struct Com_ConfigType * Com_gConfigPtr.777_28;
  long unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  sizetype _32;
  const struct Com_ConfigType * Com_gConfigPtr.778_33;
  const struct Com_ConfigType * Com_gConfigPtr.779_34;
  long unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  sizetype _38;
  short unsigned int _39;
  uint8 iftmp.774_44;
  ComTxModeIdxType iftmp.775_45;
  uint8 iftmp.774_61;
  uint8 iftmp.774_62;
  ComTxModeIdxType iftmp.775_64;
  ComTxModeIdxType iftmp.775_65;
  boolean _75;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NPeriod_47 = 0;
  # DEBUG NPeriod => NPeriod_47
  # DEBUG BEGIN_STMT
  N_48 = 0;
  # DEBUG N => N_48
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  transmit_49 = 0;
  # DEBUG transmit => transmit_49
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.768_1 = Com_gDataMemPtr;
  Com_gConfigPtr.769_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.769_2->ComNTimesQueueBaseRemaining;
  _4 = (sizetype) _3;
  NTimesQueueBaseRemaining_51 = Com_gDataMemPtr.768_1 + _4;
  # DEBUG NTimesQueueBaseRemaining => NTimesQueueBaseRemaining_51
  # DEBUG BEGIN_STMT
  _5 = IPduPtr_52(D)->NTimesQueueRef;
  _6 = (sizetype) _5;
  NTimesQueueValRemainingPtr_53 = NTimesQueueBaseRemaining_51 + _6;
  # DEBUG NTimesQueueValRemainingPtr => NTimesQueueValRemainingPtr_53
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.770_7 = Com_gDataMemPtr;
  Com_gConfigPtr.771_8 = Com_gConfigPtr;
  _9 = Com_gConfigPtr.771_8->ComNTimesQueueBaseNextTime;
  _10 = (sizetype) _9;
  NTimesQueueBaseNextTimeBase_54 = Com_gDataMemPtr.770_7 + _10;
  # DEBUG NTimesQueueBaseNextTimeBase => NTimesQueueBaseNextTimeBase_54
  # DEBUG BEGIN_STMT
  _11 = IPduPtr_52(D)->NTimesQueueRef;
  _12 = (unsigned int) _11;
  _13 = _12 * 2;
  NTimesQueueValNextTimePtr_55 = NTimesQueueBaseNextTimeBase_54 + _13;
  # DEBUG NTimesQueueValNextTimePtr => NTimesQueueValNextTimePtr_55
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_57 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_57
  # DEBUG BEGIN_STMT
  CompTime_58 = *NTimesQueueValNextTimePtr_55;
  # DEBUG CompTime => CompTime_58
  # DEBUG BEGIN_STMT
  if (globalTime_57 == CompTime_58)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.772_14 = Com_gDataMemPtr;
  Com_gConfigPtr.773_15 = Com_gConfigPtr;
  _16 = Com_gConfigPtr.773_15->ComTxIPduStatusBase;
  _17 = (int) _16;
  _18 = (int) PduId_59(D);
  _19 = _17 + _18;
  _20 = (sizetype) _19;
  _21 = Com_gDataMemPtr.772_14 + _20;
  _22 = *_21;
  _23 = _22 >> 6;
  BitRes_60 = _23 & 1;
  # DEBUG BitRes => BitRes_60
  # DEBUG BEGIN_STMT
  if (BitRes_60 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _24 = IPduPtr_52(D)->ComTxModeModes;
  iftmp.774_62 = _24 & 15;
  goto <bb 6>; [INV]

  <bb 5> :
  _25 = IPduPtr_52(D)->ComTxModeModes;
  iftmp.774_61 = _25 >> 4;

  <bb 6> :
  # iftmp.774_44 = PHI <iftmp.774_62(4), iftmp.774_61(5)>
  AktTM_63 = iftmp.774_44;
  # DEBUG AktTM => AktTM_63
  # DEBUG BEGIN_STMT
  if (BitRes_60 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.775_65 = IPduPtr_52(D)->ComTxModeTrueRef;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.775_64 = IPduPtr_52(D)->ComTxModeFalseRef;

  <bb 9> :
  # iftmp.775_45 = PHI <iftmp.775_65(7), iftmp.775_64(8)>
  TMRef_66 = iftmp.775_45;
  # DEBUG TMRef => TMRef_66
  # DEBUG BEGIN_STMT
  _26 = (int) AktTM_63;
  switch (_26) <default: <L15> [INV], case 4: <L8> [INV], case 5: <L7> [INV]>

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.776_27 = Com_gConfigPtr;
  Com_gConfigPtr.777_28 = Com_gConfigPtr;
  _29 = Com_gConfigPtr.777_28->ComTxModeNTimesRef;
  _30 = (unsigned int) TMRef_66;
  _31 = _30 * 4;
  _32 = _29 + _31;
  TMNTimesPtr_67 = Com_gConfigPtr.776_27 + _32;
  # DEBUG TMNTimesPtr => TMNTimesPtr_67
  # DEBUG BEGIN_STMT
  NPeriod_68 = TMNTimesPtr_67->ComTxModeRepetitionPeriodFactor;
  # DEBUG NPeriod => NPeriod_68
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 11> :
<L8>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.778_33 = Com_gConfigPtr;
  Com_gConfigPtr.779_34 = Com_gConfigPtr;
  _35 = Com_gConfigPtr.779_34->ComTxModeMixedNTimesRef;
  _36 = (unsigned int) TMRef_66;
  _37 = _36 * 8;
  _38 = _35 + _37;
  TMMixedNTimesPtr_69 = Com_gConfigPtr.778_33 + _38;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_69
  # DEBUG BEGIN_STMT
  NPeriod_70 = TMMixedNTimesPtr_69->ComTxModeRepetitionPeriodFactor;
  # DEBUG NPeriod => NPeriod_70
  # DEBUG BEGIN_STMT

  <bb 12> :
  # NPeriod_40 = PHI <NPeriod_68(10), NPeriod_70(11), NPeriod_47(9)>
<L15>:
  # DEBUG NPeriod => NPeriod_40
  # DEBUG BEGIN_STMT
  N_71 = *NTimesQueueValRemainingPtr_53;
  # DEBUG N => N_71

  <bb 13> :
  # NPeriod_41 = PHI <NPeriod_47(2), NPeriod_40(12)>
  # N_42 = PHI <N_48(2), N_71(12)>
  # DEBUG N => N_42
  # DEBUG NPeriod => NPeriod_41
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (N_42 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  transmit_73 = 1;
  # DEBUG transmit => transmit_73
  # DEBUG BEGIN_STMT
  _39 = IPduPtr_52(D)->NTimesQueueRef;
  Com_EB_NTimesSendQueue (PduId_59(D), NPeriod_41, _39);

  <bb 15> :
  # transmit_43 = PHI <transmit_49(13), transmit_73(14)>
  # DEBUG transmit => transmit_43
  # DEBUG BEGIN_STMT
  _75 = transmit_43;
  return _75;

}


Com_EB_CheckPeriodicSendforPdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr)
{
  const struct ComTxModePeriodicType * TMPeriodicPtr;
  const struct ComTxModeMixedNTimesType * TMMixedNTimesPtr;
  uint8 * const IPduFlagBytePtr;
  Com_PeriodicSendNextDueTimeType * const PeriodicQueueValPtr;
  Com_PeriodicSendNextDueTimeType * const PeriodicQueueBase;
  uint8 QueuedTxDM;
  boolean transmit;
  ComTxModeIdxType TMRef;
  uint8 AktTM;
  uint8 BitRes;
  Com_PeriodicSendNextDueTimeType Period;
  Com_PeriodicSendNextDueTimeType CompTime;
  Com_PeriodicSendNextDueTimeType globalTime;
  uint8 * Com_gDataMemPtr.780_1;
  const struct Com_ConfigType * Com_gConfigPtr.781_2;
  short unsigned int _3;
  sizetype _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  uint8 * Com_gDataMemPtr.782_8;
  const struct Com_ConfigType * Com_gConfigPtr.783_9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  sizetype _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  int _19;
  const struct Com_ConfigType * Com_gConfigPtr.786_20;
  const struct Com_ConfigType * Com_gConfigPtr.787_21;
  long unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  sizetype _25;
  const struct Com_ConfigType * Com_gConfigPtr.788_26;
  const struct Com_ConfigType * Com_gConfigPtr.789_27;
  long unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  sizetype _31;
  unsigned char _32;
  unsigned char _33;
  unsigned int _34;
  unsigned int _35;
  unsigned char _36;
  unsigned char _37;
  short unsigned int _38;
  short unsigned int _39;
  short unsigned int _40;
  uint8 iftmp.784_46;
  ComTxModeIdxType iftmp.785_47;
  uint8 iftmp.784_63;
  uint8 iftmp.784_64;
  ComTxModeIdxType iftmp.785_66;
  ComTxModeIdxType iftmp.785_67;
  boolean _78;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Period_50 = 0;
  # DEBUG Period => Period_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  transmit_51 = 0;
  # DEBUG transmit => transmit_51
  # DEBUG BEGIN_STMT
  QueuedTxDM_52 = 1;
  # DEBUG QueuedTxDM => QueuedTxDM_52
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.780_1 = Com_gDataMemPtr;
  Com_gConfigPtr.781_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.781_2->ComPeriodicQueueBase;
  _4 = (sizetype) _3;
  PeriodicQueueBase_54 = Com_gDataMemPtr.780_1 + _4;
  # DEBUG PeriodicQueueBase => PeriodicQueueBase_54
  # DEBUG BEGIN_STMT
  _5 = IPduPtr_55(D)->PeriodicQueueRef;
  _6 = (unsigned int) _5;
  _7 = _6 * 2;
  PeriodicQueueValPtr_56 = PeriodicQueueBase_54 + _7;
  # DEBUG PeriodicQueueValPtr => PeriodicQueueValPtr_56
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.782_8 = Com_gDataMemPtr;
  Com_gConfigPtr.783_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.783_9->ComTxIPduStatusBase;
  _11 = (int) _10;
  _12 = (int) PduId_57(D);
  _13 = _11 + _12;
  _14 = (sizetype) _13;
  IPduFlagBytePtr_58 = Com_gDataMemPtr.782_8 + _14;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_58
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_60 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_60
  # DEBUG BEGIN_STMT
  CompTime_61 = *PeriodicQueueValPtr_56;
  # DEBUG CompTime => CompTime_61
  # DEBUG BEGIN_STMT
  if (globalTime_60 == CompTime_61)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _15 = *IPduFlagBytePtr_58;
  _16 = _15 >> 6;
  BitRes_62 = _16 & 1;
  # DEBUG BitRes => BitRes_62
  # DEBUG BEGIN_STMT
  if (BitRes_62 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _17 = IPduPtr_55(D)->ComTxModeModes;
  iftmp.784_64 = _17 & 15;
  goto <bb 6>; [INV]

  <bb 5> :
  _18 = IPduPtr_55(D)->ComTxModeModes;
  iftmp.784_63 = _18 >> 4;

  <bb 6> :
  # iftmp.784_46 = PHI <iftmp.784_64(4), iftmp.784_63(5)>
  AktTM_65 = iftmp.784_46;
  # DEBUG AktTM => AktTM_65
  # DEBUG BEGIN_STMT
  if (BitRes_62 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.785_67 = IPduPtr_55(D)->ComTxModeTrueRef;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.785_66 = IPduPtr_55(D)->ComTxModeFalseRef;

  <bb 9> :
  # iftmp.785_47 = PHI <iftmp.785_67(7), iftmp.785_66(8)>
  TMRef_68 = iftmp.785_47;
  # DEBUG TMRef => TMRef_68
  # DEBUG BEGIN_STMT
  _19 = (int) AktTM_65;
  switch (_19) <default: <L20> [INV], case 1: <L8> [INV], case 3: <L8> [INV], case 4: <L7> [INV]>

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.786_20 = Com_gConfigPtr;
  Com_gConfigPtr.787_21 = Com_gConfigPtr;
  _22 = Com_gConfigPtr.787_21->ComTxModeMixedNTimesRef;
  _23 = (unsigned int) TMRef_68;
  _24 = _23 * 8;
  _25 = _22 + _24;
  TMMixedNTimesPtr_69 = Com_gConfigPtr.786_20 + _25;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_69
  # DEBUG BEGIN_STMT
  Period_70 = TMMixedNTimesPtr_69->ComTxModeTimePeriodFactor;
  # DEBUG Period => Period_70
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 11> :
<L8>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.788_26 = Com_gConfigPtr;
  Com_gConfigPtr.789_27 = Com_gConfigPtr;
  _28 = Com_gConfigPtr.789_27->ComTxModePeriodicRef;
  _29 = (unsigned int) TMRef_68;
  _30 = _29 * 4;
  _31 = _28 + _30;
  TMPeriodicPtr_71 = Com_gConfigPtr.788_26 + _31;
  # DEBUG TMPeriodicPtr => TMPeriodicPtr_71
  # DEBUG BEGIN_STMT
  Period_72 = TMPeriodicPtr_71->ComTxModeTimePeriodFactor;
  # DEBUG Period => Period_72
  # DEBUG BEGIN_STMT

  <bb 12> :
  # Period_41 = PHI <Period_70(10), Period_72(11), Period_50(9)>
<L20>:
  # DEBUG Period => Period_41
  # DEBUG BEGIN_STMT
  _32 = IPduPtr_55(D)->ComTxIPduFlags;
  _33 = _32 >> 1;
  _34 = (unsigned int) _33;
  _35 = _34 & 1;
  if (_35 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _36 = *IPduFlagBytePtr_58;
  _37 = _36 >> 5;
  QueuedTxDM_73 = _37 & 1;
  # DEBUG QueuedTxDM => QueuedTxDM_73

  <bb 14> :
  # QueuedTxDM_44 = PHI <QueuedTxDM_52(12), QueuedTxDM_73(13)>
  # DEBUG QueuedTxDM => QueuedTxDM_44
  # DEBUG BEGIN_STMT
  transmit_74 = 1;
  # DEBUG transmit => transmit_74

  <bb 15> :
  # Period_42 = PHI <Period_50(2), Period_41(14)>
  # transmit_43 = PHI <transmit_51(2), transmit_74(14)>
  # QueuedTxDM_45 = PHI <QueuedTxDM_52(2), QueuedTxDM_44(14)>
  # DEBUG QueuedTxDM => QueuedTxDM_45
  # DEBUG transmit => transmit_43
  # DEBUG Period => Period_42
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (transmit_43 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _38 = IPduPtr_55(D)->PeriodicQueueRef;
  Com_EB_PeriodicSendQueue (Period_42, _38);

  <bb 17> :
  # DEBUG BEGIN_STMT
  if (QueuedTxDM_45 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _39 = IPduPtr_55(D)->ComTxTimeoutFactorValue;
  _40 = IPduPtr_55(D)->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_57(D), _39, _40);

  <bb 19> :
  # DEBUG BEGIN_STMT
  _78 = transmit_43;
  return _78;

}


Com_EB_TMSwitch (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr, boolean CurrentTM)
{
  const struct ComTxModeMixedNTimesType * TMMixedNTimesPtr;
  ComTxModeIdxType TMRef;
  const struct ComTxModePeriodicType * TMPeriodicPtr;
  ComTxModeIdxType TMRef;
  uint8 * const IPduFlagBytePtr;
  Com_PeriodicSendNextDueTimeType TimeToSendPeriodic;
  uint8 mode;
  boolean transmit;
  uint8 * Com_gDataMemPtr.751_1;
  const struct Com_ConfigType * Com_gConfigPtr.752_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  unsigned char _8;
  unsigned char _9;
  int _10;
  const struct Com_ConfigType * Com_gConfigPtr.755_11;
  const struct Com_ConfigType * Com_gConfigPtr.756_12;
  long unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  sizetype _16;
  const struct Com_ConfigType * Com_gConfigPtr.758_17;
  const struct Com_ConfigType * Com_gConfigPtr.759_18;
  long unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  short unsigned int _23;
  unsigned char _24;
  unsigned char _25;
  unsigned int _26;
  unsigned int _27;
  unsigned char _28;
  unsigned int _29;
  unsigned int _30;
  short unsigned int _31;
  short unsigned int _32;
  uint8 iftmp.753_35;
  ComTxModeIdxType iftmp.754_36;
  ComTxModeIdxType iftmp.757_37;
  uint8 iftmp.753_49;
  uint8 iftmp.753_50;
  ComTxModeIdxType iftmp.757_53;
  ComTxModeIdxType iftmp.757_54;
  ComTxModeIdxType iftmp.754_58;
  ComTxModeIdxType iftmp.754_59;
  boolean _71;

  <bb 2> :
  # DEBUG BEGIN_STMT
  transmit_42 = 0;
  # DEBUG transmit => transmit_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_43 = 0;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_43
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.751_1 = Com_gDataMemPtr;
  Com_gConfigPtr.752_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.752_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_45(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  IPduFlagBytePtr_46 = Com_gDataMemPtr.751_1 + _7;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_46
  # DEBUG BEGIN_STMT
  if (CurrentTM_47(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _8 = IPduPtr_48(D)->ComTxModeModes;
  iftmp.753_50 = _8 & 15;
  goto <bb 5>; [INV]

  <bb 4> :
  _9 = IPduPtr_48(D)->ComTxModeModes;
  iftmp.753_49 = _9 >> 4;

  <bb 5> :
  # iftmp.753_35 = PHI <iftmp.753_50(3), iftmp.753_49(4)>
  mode_51 = iftmp.753_35;
  # DEBUG mode => mode_51
  # DEBUG BEGIN_STMT
  _10 = (int) mode_51;
  switch (_10) <default: <L24> [INV], case 0: <L3> [INV], case 1: <L6> [INV], case 2: <L4> [INV], case 3: <L6> [INV], case 4: <L11> [INV], case 5: <L5> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_46, 5);

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_46, 2);
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_46, 3);
  # DEBUG BEGIN_STMT
  goto <bb 17>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_46, 2);
  # DEBUG BEGIN_STMT
  goto <bb 17>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CurrentTM_47(D) == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.754_59 = IPduPtr_48(D)->ComTxModeTrueRef;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.754_58 = IPduPtr_48(D)->ComTxModeFalseRef;

  <bb 12> :
  # iftmp.754_36 = PHI <iftmp.754_59(10), iftmp.754_58(11)>
  TMRef_60 = iftmp.754_36;
  # DEBUG TMRef => TMRef_60
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.755_11 = Com_gConfigPtr;
  Com_gConfigPtr.756_12 = Com_gConfigPtr;
  _13 = Com_gConfigPtr.756_12->ComTxModePeriodicRef;
  _14 = (unsigned int) TMRef_60;
  _15 = _14 * 4;
  _16 = _13 + _15;
  TMPeriodicPtr_61 = Com_gConfigPtr.755_11 + _16;
  # DEBUG TMPeriodicPtr => TMPeriodicPtr_61
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_62 = TMPeriodicPtr_61->ComTxModeTimePeriodFactor;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_62
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_46, 3);
  # DEBUG BEGIN_STMT
  goto <bb 17>; [INV]

  <bb 13> :
<L11>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (CurrentTM_47(D) == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.757_54 = IPduPtr_48(D)->ComTxModeTrueRef;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.757_53 = IPduPtr_48(D)->ComTxModeFalseRef;

  <bb 16> :
  # iftmp.757_37 = PHI <iftmp.757_54(14), iftmp.757_53(15)>
  TMRef_55 = iftmp.757_37;
  # DEBUG TMRef => TMRef_55
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.758_17 = Com_gConfigPtr;
  Com_gConfigPtr.759_18 = Com_gConfigPtr;
  _19 = Com_gConfigPtr.759_18->ComTxModeMixedNTimesRef;
  _20 = (unsigned int) TMRef_55;
  _21 = _20 * 8;
  _22 = _19 + _21;
  TMMixedNTimesPtr_56 = Com_gConfigPtr.758_17 + _22;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_56
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_57 = TMMixedNTimesPtr_56->ComTxModeTimePeriodFactor;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_57
  # DEBUG BEGIN_STMT

  <bb 17> :
  # TimeToSendPeriodic_34 = PHI <TimeToSendPeriodic_43(7), TimeToSendPeriodic_43(8), TimeToSendPeriodic_62(12), TimeToSendPeriodic_57(16), TimeToSendPeriodic_43(5)>
<L24>:
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_34
  # DEBUG BEGIN_STMT
  if (TimeToSendPeriodic_34 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _23 = IPduPtr_48(D)->PeriodicQueueRef;
  Com_EB_PeriodicSendQueue (TimeToSendPeriodic_34, _23);
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_46, 2);
  # DEBUG BEGIN_STMT
  _24 = IPduPtr_48(D)->ComTxIPduFlags;
  _25 = _24 >> 1;
  _26 = (unsigned int) _25;
  _27 = _26 & 1;
  if (_27 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _28 = *IPduFlagBytePtr_46;
  _29 = (unsigned int) _28;
  _30 = _29 & 32;
  if (_30 == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _31 = IPduPtr_48(D)->ComTxTimeoutFactorValue;
  _32 = IPduPtr_48(D)->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_45(D), _31, _32);

  <bb 21> :
  # DEBUG BEGIN_STMT
  transmit_70 = 1;
  # DEBUG transmit => transmit_70

  <bb 22> :
  # transmit_33 = PHI <transmit_42(17), transmit_70(21)>
  # DEBUG transmit => transmit_33
  # DEBUG BEGIN_STMT
  _71 = transmit_33;
  return _71;

}


Com_EB_CheckTMSforPdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr)
{
  uint8 * const IPduFlagBytePtr;
  boolean transmit;
  boolean newTM;
  uint8 * Com_gDataMemPtr.749_1;
  const struct Com_ConfigType * Com_gConfigPtr.750_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  unsigned char _8;
  signed char _9;
  unsigned char _10;
  unsigned char _11;
  boolean _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  transmit_14 = 0;
  # DEBUG transmit => transmit_14
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.749_1 = Com_gDataMemPtr;
  Com_gConfigPtr.750_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.750_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_16(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  IPduFlagBytePtr_17 = Com_gDataMemPtr.749_1 + _7;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_17
  # DEBUG BEGIN_STMT
  _8 = *IPduFlagBytePtr_17;
  _9 = (signed char) _8;
  if (_9 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_17, 7);
  # DEBUG BEGIN_STMT
  _10 = *IPduFlagBytePtr_17;
  _11 = _10 >> 6;
  newTM_19 = _11 & 1;
  # DEBUG newTM => newTM_19
  # DEBUG BEGIN_STMT
  transmit_22 = Com_EB_TMSwitch (PduId_16(D), IPduPtr_20(D), newTM_19);
  # DEBUG transmit => transmit_22

  <bb 4> :
  # transmit_12 = PHI <transmit_14(2), transmit_22(3)>
  # DEBUG transmit => transmit_12
  # DEBUG BEGIN_STMT
  _23 = transmit_12;
  return _23;

}


Com_MainFunctionRx ()
{
  const struct ComRxIPduType * IPduPtr;
  uint16 RxPduCount;
  uint16 i;
  unsigned char Com_InitStatus.627_1;
  short unsigned int Com_GlobalTime.628_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.629_4;
  const struct Com_ConfigType * Com_gConfigPtr.630_5;
  const struct Com_ConfigType * Com_gConfigPtr.631_6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  uint8 * Com_gDataMemPtr.632_11;
  const struct Com_ConfigType * Com_gConfigPtr.633_12;
  short unsigned int _13;
  int _14;
  int _15;
  int _16;
  sizetype _17;
  uint8 * _18;
  unsigned char _19;
  unsigned int _20;
  unsigned int _21;
  uint8 * Com_gDataMemPtr.634_22;
  const struct Com_ConfigType * Com_gConfigPtr.635_23;
  short unsigned int _24;
  int _25;
  int _26;
  int _27;
  sizetype _28;
  uint8 * _29;
  short unsigned int i.636_30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.627_1 = Com_InitStatus;
  if (Com_InitStatus.627_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_GlobalTime.628_2 = Com_GlobalTime;
  _3 = Com_GlobalTime.628_2 + 1;
  Com_GlobalTime = _3;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.629_4 = Com_gConfigPtr;
  RxPduCount_39 = Com_gConfigPtr.629_4->ComRxIPduArraySize;
  # DEBUG RxPduCount => RxPduCount_39
  # DEBUG BEGIN_STMT
  i_40 = 0;
  # DEBUG i => i_40
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.630_5 = Com_gConfigPtr;
  Com_gConfigPtr.631_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.631_6->ComRxIPduRef;
  _8 = (unsigned int) i_31;
  _9 = _8 * 48;
  _10 = _7 + _9;
  IPduPtr_44 = Com_gConfigPtr.630_5 + _10;
  # DEBUG IPduPtr => IPduPtr_44
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.632_11 = Com_gDataMemPtr;
  Com_gConfigPtr.633_12 = Com_gConfigPtr;
  _13 = Com_gConfigPtr.633_12->ComRxIPduStatusBase;
  _14 = (int) _13;
  _15 = (int) i_31;
  _16 = _14 + _15;
  _17 = (sizetype) _16;
  _18 = Com_gDataMemPtr.632_11 + _17;
  _19 = *_18;
  _20 = (unsigned int) _19;
  _21 = _20 & 8;
  if (_21 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.634_22 = Com_gDataMemPtr;
  Com_gConfigPtr.635_23 = Com_gConfigPtr;
  _24 = Com_gConfigPtr.635_23->ComRxIPduStatusBase;
  _25 = (int) _24;
  _26 = (int) i_31;
  _27 = _25 + _26;
  _28 = (sizetype) _27;
  _29 = Com_gDataMemPtr.634_22 + _28;
  TS_AtomicClearBit_8 (_29, 3);
  # DEBUG BEGIN_STMT
  Com_EB_NotifyReceivers (IPduPtr_44, i_31);

  <bb 6> :
  # DEBUG BEGIN_STMT
  i.636_30 = i_31;
  i_47 = i.636_30 + 1;
  # DEBUG i => i_47

  <bb 7> :
  # i_31 = PHI <i_40(3), i_47(6)>
  # DEBUG i => i_31
  # DEBUG BEGIN_STMT
  if (i_31 < RxPduCount_39)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_EB_CheckRxDMTable ();
  # DEBUG BEGIN_STMT
  Com_EB_CheckRxSignalDMTable ();
  # DEBUG BEGIN_STMT
  Com_EB_CheckRxSignalGroupDMTable ();

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_CheckRxSignalGroupDMTable ()
{
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalGroupType * SignalGPtr;
  const ComSignalGroupRefType AktSignalGId;
  Com_RxDMNextDueTimeType * const RxTimeoutSignalGroupQueueBase;
  boolean invokeCbks;
  ComSignalGroupRefType i;
  Com_RxDMNextDueTimeType CompTime;
  Com_RxDMNextDueTimeType globalTime;
  uint8 * Com_gDataMemPtr.722_1;
  const struct Com_ConfigType * Com_gConfigPtr.723_2;
  short unsigned int _3;
  sizetype _4;
  const struct Com_ConfigType * Com_gConfigPtr.724_5;
  const struct Com_ConfigType * Com_gConfigPtr.725_6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const ComSignalGroupRefType * _11;
  const struct Com_ConfigType * Com_gConfigPtr.726_12;
  const struct Com_ConfigType * Com_gConfigPtr.727_13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  const struct Com_ConfigType * Com_gConfigPtr.728_18;
  const struct Com_ConfigType * Com_gConfigPtr.729_19;
  long unsigned int _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  sizetype _24;
  uint8 * Com_gDataMemPtr.730_25;
  const struct Com_ConfigType * Com_gConfigPtr.731_26;
  short unsigned int _27;
  unsigned int _28;
  short unsigned int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  uint8 * _33;
  unsigned char _34;
  short unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  int _40;
  unsigned char _41;
  unsigned char _42;
  unsigned int _43;
  unsigned int _44;
  Com_RxDMNextDueTimeType * _45;
  uint8 * Com_gDataMemPtr.732_46;
  const struct Com_ConfigType * Com_gConfigPtr.733_47;
  short unsigned int _48;
  unsigned int _49;
  short unsigned int _50;
  short unsigned int _51;
  unsigned int _52;
  unsigned int _53;
  uint8 * _54;
  short unsigned int _55;
  short unsigned int _56;
  short unsigned int _57;
  long unsigned int _58;
  short unsigned int _59;
  short unsigned int _60;
  short unsigned int _61;
  int _62;
  void (*<T60c>) (void) _63;
  short unsigned int i.734_64;
  const struct Com_ConfigType * Com_gConfigPtr.735_65;
  short unsigned int _66;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  globalTime_73 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_73
  # DEBUG BEGIN_STMT
  i_74 = 0;
  # DEBUG i => i_74
  goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  invokeCbks_75 = 0;
  # DEBUG invokeCbks => invokeCbks_75
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.722_1 = Com_gDataMemPtr;
  Com_gConfigPtr.723_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.723_2->ComRxTimeoutSignalGroupQueueBase;
  _4 = (sizetype) _3;
  RxTimeoutSignalGroupQueueBase_76 = Com_gDataMemPtr.722_1 + _4;
  # DEBUG RxTimeoutSignalGroupQueueBase => RxTimeoutSignalGroupQueueBase_76
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.724_5 = Com_gConfigPtr;
  Com_gConfigPtr.725_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.725_6->ComRxTimeoutSignalGroupQueueListRef;
  _8 = (unsigned int) i_67;
  _9 = _8 * 2;
  _10 = _7 + _9;
  _11 = Com_gConfigPtr.724_5 + _10;
  AktSignalGId_77 = *_11;
  # DEBUG AktSignalGId => AktSignalGId_77
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.726_12 = Com_gConfigPtr;
  Com_gConfigPtr.727_13 = Com_gConfigPtr;
  _14 = Com_gConfigPtr.727_13->ComRxSignalGroupRef;
  _15 = (unsigned int) AktSignalGId_77;
  _16 = _15 * 10;
  _17 = _14 + _16;
  SignalGPtr_78 = Com_gConfigPtr.726_12 + _17;
  # DEBUG SignalGPtr => SignalGPtr_78
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.728_18 = Com_gConfigPtr;
  Com_gConfigPtr.729_19 = Com_gConfigPtr;
  _20 = Com_gConfigPtr.729_19->ComRxSignalExtRef;
  _21 = SignalGPtr_78->ComSignalExtRef;
  _22 = (unsigned int) _21;
  _23 = _22 * 14;
  _24 = _20 + _23;
  SignalExtPtr_79 = Com_gConfigPtr.728_18 + _24;
  # DEBUG SignalExtPtr => SignalExtPtr_79
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.730_25 = Com_gDataMemPtr;
  Com_gConfigPtr.731_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.731_26->ComRxDMInvSignalGroupStatusQueueBase;
  _28 = (unsigned int) _27;
  _29 = SignalExtPtr_79->RxSigDMQueueRef;
  _30 = _29 / 4;
  _31 = (unsigned int) _30;
  _32 = _28 + _31;
  _33 = Com_gDataMemPtr.730_25 + _32;
  _34 = *_33;
  _35 = SignalExtPtr_79->RxSigDMQueueRef;
  _36 = (unsigned int) _35;
  _37 = _36 & 3;
  _38 = _37 * 2;
  _39 = _38 + 1;
  _40 = 1 << _39;
  _41 = (unsigned char) _40;
  _42 = _34 & _41;
  if (_42 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _43 = (unsigned int) i_67;
  _44 = _43 * 2;
  _45 = RxTimeoutSignalGroupQueueBase_76 + _44;
  CompTime_81 = *_45;
  # DEBUG CompTime => CompTime_81
  # DEBUG BEGIN_STMT
  if (globalTime_73 == CompTime_81)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.732_46 = Com_gDataMemPtr;
  Com_gConfigPtr.733_47 = Com_gConfigPtr;
  _48 = Com_gConfigPtr.733_47->ComRxDMInvSignalGroupStatusQueueBase;
  _49 = (unsigned int) _48;
  _50 = SignalExtPtr_79->RxSigDMQueueRef;
  _51 = _50 / 4;
  _52 = (unsigned int) _51;
  _53 = _49 + _52;
  _54 = Com_gDataMemPtr.732_46 + _53;
  _55 = SignalExtPtr_79->RxSigDMQueueRef;
  _56 = _55 & 3;
  _57 = _56 * 2;
  _58 = (long unsigned int) _57;
  TS_AtomicSetBit_8 (_54, _58);
  # DEBUG BEGIN_STMT
  _59 = SignalExtPtr_79->ComRxTimeoutFactorValue;
  Com_EB_RxDMSignalGroupQueue (SignalGPtr_78, _59);
  # DEBUG BEGIN_STMT
  invokeCbks_84 = 1;
  # DEBUG invokeCbks => invokeCbks_84

  <bb 6> :
  # invokeCbks_68 = PHI <invokeCbks_75(3), invokeCbks_75(4), invokeCbks_84(5)>
  # DEBUG invokeCbks => invokeCbks_68
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (invokeCbks_68 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _60 = SignalExtPtr_79->ComRxTimeoutNotification;
  if (_60 != 65535)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _61 = SignalExtPtr_79->ComRxTimeoutNotification;
  _62 = (int) _61;
  _63 = Com_CbkRxTOut_Array[_62];
  _63 ();

  <bb 9> :
  # DEBUG BEGIN_STMT
  i.734_64 = i_67;
  i_87 = i.734_64 + 1;
  # DEBUG i => i_87

  <bb 10> :
  # i_67 = PHI <i_74(2), i_87(9)>
  # DEBUG i => i_67
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.735_65 = Com_gConfigPtr;
  _66 = Com_gConfigPtr.735_65->ComRxTimeoutSignalGroupQueueMax;
  if (i_67 < _66)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_CheckRxSignalDMTable ()
{
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType AktSignalId;
  Com_RxDMNextDueTimeType * const RxTimeoutSignalQueueBase;
  boolean invokeCbks;
  ComSignalRefType i;
  Com_RxDMNextDueTimeType CompTime;
  Com_RxDMNextDueTimeType globalTime;
  uint8 * Com_gDataMemPtr.708_1;
  const struct Com_ConfigType * Com_gConfigPtr.709_2;
  short unsigned int _3;
  sizetype _4;
  const struct Com_ConfigType * Com_gConfigPtr.710_5;
  const struct Com_ConfigType * Com_gConfigPtr.711_6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const ComSignalRefType * _11;
  const struct Com_ConfigType * Com_gConfigPtr.712_12;
  const struct Com_ConfigType * Com_gConfigPtr.713_13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  const struct Com_ConfigType * Com_gConfigPtr.714_18;
  const struct Com_ConfigType * Com_gConfigPtr.715_19;
  long unsigned int _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  sizetype _24;
  uint8 * Com_gDataMemPtr.716_25;
  const struct Com_ConfigType * Com_gConfigPtr.717_26;
  short unsigned int _27;
  unsigned int _28;
  short unsigned int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  uint8 * _33;
  unsigned char _34;
  short unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  int _40;
  unsigned char _41;
  unsigned char _42;
  unsigned int _43;
  unsigned int _44;
  Com_RxDMNextDueTimeType * _45;
  uint8 * Com_gDataMemPtr.718_46;
  const struct Com_ConfigType * Com_gConfigPtr.719_47;
  short unsigned int _48;
  unsigned int _49;
  short unsigned int _50;
  short unsigned int _51;
  unsigned int _52;
  unsigned int _53;
  uint8 * _54;
  short unsigned int _55;
  short unsigned int _56;
  short unsigned int _57;
  long unsigned int _58;
  short unsigned int _59;
  short unsigned int _60;
  short unsigned int _61;
  int _62;
  void (*<T60c>) (void) _63;
  short unsigned int i.720_64;
  const struct Com_ConfigType * Com_gConfigPtr.721_65;
  short unsigned int _66;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  globalTime_73 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_73
  # DEBUG BEGIN_STMT
  i_74 = 0;
  # DEBUG i => i_74
  goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  invokeCbks_75 = 0;
  # DEBUG invokeCbks => invokeCbks_75
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.708_1 = Com_gDataMemPtr;
  Com_gConfigPtr.709_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.709_2->ComRxTimeoutSignalQueueBase;
  _4 = (sizetype) _3;
  RxTimeoutSignalQueueBase_76 = Com_gDataMemPtr.708_1 + _4;
  # DEBUG RxTimeoutSignalQueueBase => RxTimeoutSignalQueueBase_76
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.710_5 = Com_gConfigPtr;
  Com_gConfigPtr.711_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.711_6->ComRxTimeoutSignalQueueListRef;
  _8 = (unsigned int) i_67;
  _9 = _8 * 2;
  _10 = _7 + _9;
  _11 = Com_gConfigPtr.710_5 + _10;
  AktSignalId_77 = *_11;
  # DEBUG AktSignalId => AktSignalId_77
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.712_12 = Com_gConfigPtr;
  Com_gConfigPtr.713_13 = Com_gConfigPtr;
  _14 = Com_gConfigPtr.713_13->ComRxSignalRef;
  _15 = (unsigned int) AktSignalId_77;
  _16 = _15 * 20;
  _17 = _14 + _16;
  SignalPtr_78 = Com_gConfigPtr.712_12 + _17;
  # DEBUG SignalPtr => SignalPtr_78
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.714_18 = Com_gConfigPtr;
  Com_gConfigPtr.715_19 = Com_gConfigPtr;
  _20 = Com_gConfigPtr.715_19->ComRxSignalExtRef;
  _21 = SignalPtr_78->ComSignalExtRef;
  _22 = (unsigned int) _21;
  _23 = _22 * 14;
  _24 = _20 + _23;
  SignalExtPtr_79 = Com_gConfigPtr.714_18 + _24;
  # DEBUG SignalExtPtr => SignalExtPtr_79
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.716_25 = Com_gDataMemPtr;
  Com_gConfigPtr.717_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.717_26->ComRxTimeoutSignalStatusQueueBase;
  _28 = (unsigned int) _27;
  _29 = SignalExtPtr_79->RxSigDMQueueRef;
  _30 = _29 / 4;
  _31 = (unsigned int) _30;
  _32 = _28 + _31;
  _33 = Com_gDataMemPtr.716_25 + _32;
  _34 = *_33;
  _35 = SignalExtPtr_79->RxSigDMQueueRef;
  _36 = (unsigned int) _35;
  _37 = _36 & 3;
  _38 = _37 * 2;
  _39 = _38 + 1;
  _40 = 1 << _39;
  _41 = (unsigned char) _40;
  _42 = _34 & _41;
  if (_42 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _43 = (unsigned int) i_67;
  _44 = _43 * 2;
  _45 = RxTimeoutSignalQueueBase_76 + _44;
  CompTime_81 = *_45;
  # DEBUG CompTime => CompTime_81
  # DEBUG BEGIN_STMT
  if (globalTime_73 == CompTime_81)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.718_46 = Com_gDataMemPtr;
  Com_gConfigPtr.719_47 = Com_gConfigPtr;
  _48 = Com_gConfigPtr.719_47->ComRxTimeoutSignalStatusQueueBase;
  _49 = (unsigned int) _48;
  _50 = SignalExtPtr_79->RxSigDMQueueRef;
  _51 = _50 / 4;
  _52 = (unsigned int) _51;
  _53 = _49 + _52;
  _54 = Com_gDataMemPtr.718_46 + _53;
  _55 = SignalExtPtr_79->RxSigDMQueueRef;
  _56 = _55 & 3;
  _57 = _56 * 2;
  _58 = (long unsigned int) _57;
  TS_AtomicSetBit_8 (_54, _58);
  # DEBUG BEGIN_STMT
  _59 = SignalExtPtr_79->ComRxTimeoutFactorValue;
  Com_EB_RxDMSignalQueue (SignalExtPtr_79, _59);
  # DEBUG BEGIN_STMT
  invokeCbks_84 = 1;
  # DEBUG invokeCbks => invokeCbks_84

  <bb 6> :
  # invokeCbks_68 = PHI <invokeCbks_75(3), invokeCbks_75(4), invokeCbks_84(5)>
  # DEBUG invokeCbks => invokeCbks_68
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (invokeCbks_68 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _60 = SignalExtPtr_79->ComRxTimeoutNotification;
  if (_60 != 65535)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _61 = SignalExtPtr_79->ComRxTimeoutNotification;
  _62 = (int) _61;
  _63 = Com_CbkRxTOut_Array[_62];
  _63 ();

  <bb 9> :
  # DEBUG BEGIN_STMT
  i.720_64 = i_67;
  i_87 = i.720_64 + 1;
  # DEBUG i => i_87

  <bb 10> :
  # i_67 = PHI <i_74(2), i_87(9)>
  # DEBUG i => i_67
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.721_65 = Com_gConfigPtr;
  _66 = Com_gConfigPtr.721_65->ComRxTimeoutSignalQueueMax;
  if (i_67 < _66)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_CheckRxDMTable ()
{
  Com_CbkRxTOutIdxType j;
  ComIPduRefType AktPduId;
  Com_RxDMNextDueTimeType * const RxTimeoutQueueBase;
  const struct ComRxIPduType * IPduPtr;
  boolean invokeCbks;
  ComIPduRefType i;
  Com_RxDMNextDueTimeType CompTime;
  Com_RxDMNextDueTimeType globalTime;
  uint8 * Com_gDataMemPtr.691_1;
  const struct Com_ConfigType * Com_gConfigPtr.692_2;
  short unsigned int _3;
  sizetype _4;
  const struct Com_ConfigType * Com_gConfigPtr.693_5;
  const struct Com_ConfigType * Com_gConfigPtr.694_6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const ComIPduRefType * _11;
  const struct Com_ConfigType * Com_gConfigPtr.695_12;
  const struct Com_ConfigType * Com_gConfigPtr.696_13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  uint8 * Com_gDataMemPtr.697_18;
  const struct Com_ConfigType * Com_gConfigPtr.698_19;
  short unsigned int _20;
  int _21;
  int _22;
  int _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  Com_RxDMNextDueTimeType * _31;
  uint8 * Com_gDataMemPtr.699_32;
  const struct Com_ConfigType * Com_gConfigPtr.700_33;
  short unsigned int _34;
  int _35;
  int _36;
  int _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  uint8 * Com_gDataMemPtr.701_41;
  const struct Com_ConfigType * Com_gConfigPtr.702_42;
  short unsigned int _43;
  int _44;
  int _45;
  int _46;
  sizetype _47;
  uint8 * _48;
  unsigned char _49;
  short unsigned int _50;
  const struct Com_ConfigType * Com_gConfigPtr.703_51;
  const struct Com_ConfigType * Com_gConfigPtr.704_52;
  long unsigned int _53;
  unsigned int _54;
  unsigned int _55;
  sizetype _56;
  const Com_CbkRxTOutIdxType * _57;
  short unsigned int _58;
  int _59;
  void (*<T60c>) (void) _60;
  short unsigned int j.705_61;
  int _62;
  short unsigned int _63;
  int _64;
  short unsigned int _65;
  int _66;
  int _67;
  short unsigned int i.706_68;
  const struct Com_ConfigType * Com_gConfigPtr.707_69;
  short unsigned int _70;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  globalTime_79 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_79
  # DEBUG BEGIN_STMT
  i_80 = 0;
  # DEBUG i => i_80
  goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  invokeCbks_81 = 0;
  # DEBUG invokeCbks => invokeCbks_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.691_1 = Com_gDataMemPtr;
  Com_gConfigPtr.692_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.692_2->ComRxTimeoutQueueBase;
  _4 = (sizetype) _3;
  RxTimeoutQueueBase_82 = Com_gDataMemPtr.691_1 + _4;
  # DEBUG RxTimeoutQueueBase => RxTimeoutQueueBase_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.693_5 = Com_gConfigPtr;
  Com_gConfigPtr.694_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.694_6->ComRxTimeoutQueueListRef;
  _8 = (unsigned int) i_71;
  _9 = _8 * 2;
  _10 = _7 + _9;
  _11 = Com_gConfigPtr.693_5 + _10;
  AktPduId_83 = *_11;
  # DEBUG AktPduId => AktPduId_83
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.695_12 = Com_gConfigPtr;
  Com_gConfigPtr.696_13 = Com_gConfigPtr;
  _14 = Com_gConfigPtr.696_13->ComRxIPduRef;
  _15 = (unsigned int) AktPduId_83;
  _16 = _15 * 48;
  _17 = _14 + _16;
  IPduPtr_84 = Com_gConfigPtr.695_12 + _17;
  # DEBUG IPduPtr => IPduPtr_84
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.697_18 = Com_gDataMemPtr;
  Com_gConfigPtr.698_19 = Com_gConfigPtr;
  _20 = Com_gConfigPtr.698_19->ComRxIPduStatusBase;
  _21 = (int) _20;
  _22 = (int) AktPduId_83;
  _23 = _21 + _22;
  _24 = (sizetype) _23;
  _25 = Com_gDataMemPtr.697_18 + _24;
  _26 = *_25;
  _27 = (unsigned int) _26;
  _28 = _27 & 2;
  if (_28 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _29 = (unsigned int) i_71;
  _30 = _29 * 2;
  _31 = RxTimeoutQueueBase_82 + _30;
  CompTime_86 = *_31;
  # DEBUG CompTime => CompTime_86
  # DEBUG BEGIN_STMT
  if (globalTime_79 == CompTime_86)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.699_32 = Com_gDataMemPtr;
  Com_gConfigPtr.700_33 = Com_gConfigPtr;
  _34 = Com_gConfigPtr.700_33->ComRxIPduStatusBase;
  _35 = (int) _34;
  _36 = (int) AktPduId_83;
  _37 = _35 + _36;
  _38 = (sizetype) _37;
  _39 = Com_gDataMemPtr.699_32 + _38;
  _40 = *_39;
  Com_gDataMemPtr.701_41 = Com_gDataMemPtr;
  Com_gConfigPtr.702_42 = Com_gConfigPtr;
  _43 = Com_gConfigPtr.702_42->ComRxIPduStatusBase;
  _44 = (int) _43;
  _45 = (int) AktPduId_83;
  _46 = _44 + _45;
  _47 = (sizetype) _46;
  _48 = Com_gDataMemPtr.701_41 + _47;
  _49 = _40 | 4;
  *_48 = _49;
  # DEBUG BEGIN_STMT
  _50 = IPduPtr_84->ComRxTimeoutFactorValue;
  Com_EB_RxDMQueue (IPduPtr_84, _50);
  # DEBUG BEGIN_STMT
  invokeCbks_89 = 1;
  # DEBUG invokeCbks => invokeCbks_89

  <bb 6> :
  # invokeCbks_72 = PHI <invokeCbks_81(3), invokeCbks_81(4), invokeCbks_89(5)>
  # DEBUG invokeCbks => invokeCbks_72
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (invokeCbks_72 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_91 = IPduPtr_84->ComRxTimeoutNotificationFirst;
  # DEBUG j => j_91
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.703_51 = Com_gConfigPtr;
  Com_gConfigPtr.704_52 = Com_gConfigPtr;
  _53 = Com_gConfigPtr.704_52->ComRxTimeoutNotificationRef;
  _54 = (unsigned int) j_73;
  _55 = _54 * 2;
  _56 = _53 + _55;
  _57 = Com_gConfigPtr.703_51 + _56;
  _58 = *_57;
  _59 = (int) _58;
  _60 = Com_CbkRxTOut_Array[_59];
  _60 ();
  # DEBUG BEGIN_STMT
  j.705_61 = j_73;
  j_93 = j.705_61 + 1;
  # DEBUG j => j_93

  <bb 9> :
  # j_73 = PHI <j_91(7), j_93(8)>
  # DEBUG j => j_73
  # DEBUG BEGIN_STMT
  _62 = (int) j_73;
  _63 = IPduPtr_84->ComRxTimeoutNotificationFirst;
  _64 = (int) _63;
  _65 = IPduPtr_84->ComRxTimeoutNotificationNum;
  _66 = (int) _65;
  _67 = _64 + _66;
  if (_62 < _67)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  i.706_68 = i_71;
  i_94 = i.706_68 + 1;
  # DEBUG i => i_94

  <bb 11> :
  # i_71 = PHI <i_80(2), i_94(10)>
  # DEBUG i => i_71
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.707_69 = Com_gConfigPtr;
  _70 = Com_gConfigPtr.707_69->ComRxTimeoutQueueMax;
  if (i_71 < _70)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  return;

}


Com_MainFunctionRouteSignals ()
{
  const struct ComRxIPduType * const IPduPtr;
  const ComIPduRefType IPduId;
  uint16 sigGWRxPduRef;
  unsigned char Com_InitStatus.523_1;
  const struct Com_ConfigType * Com_gConfigPtr.524_2;
  const struct Com_ConfigType * Com_gConfigPtr.525_3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  const ComIPduRefType * _8;
  const struct Com_ConfigType * Com_gConfigPtr.526_9;
  const struct Com_ConfigType * Com_gConfigPtr.527_10;
  long unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  sizetype _14;
  uint8 * Com_gDataMemPtr.528_15;
  const struct Com_ConfigType * Com_gConfigPtr.529_16;
  short unsigned int _17;
  unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  uint8 * _23;
  unsigned char _24;
  short unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  int _28;
  unsigned char _29;
  unsigned char _30;
  uint8 * Com_gDataMemPtr.530_31;
  const struct Com_ConfigType * Com_gConfigPtr.531_32;
  short unsigned int _33;
  unsigned int _34;
  short unsigned int _35;
  short unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  uint8 * _39;
  short unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  short unsigned int sigGWRxPduRef.532_43;
  const struct Com_ConfigType * Com_gConfigPtr.533_44;
  short unsigned int _45;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.523_1 = Com_InitStatus;
  if (Com_InitStatus.523_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  sigGWRxPduRef_51 = 0;
  # DEBUG sigGWRxPduRef => sigGWRxPduRef_51
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.524_2 = Com_gConfigPtr;
  Com_gConfigPtr.525_3 = Com_gConfigPtr;
  _4 = Com_gConfigPtr.525_3->ComSigGWRxIPduListRef;
  _5 = (unsigned int) sigGWRxPduRef_46;
  _6 = _5 * 2;
  _7 = _4 + _6;
  _8 = Com_gConfigPtr.524_2 + _7;
  IPduId_52 = *_8;
  # DEBUG IPduId => IPduId_52
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.526_9 = Com_gConfigPtr;
  Com_gConfigPtr.527_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.527_10->ComRxIPduRef;
  _12 = (unsigned int) IPduId_52;
  _13 = _12 * 48;
  _14 = _11 + _13;
  IPduPtr_53 = Com_gConfigPtr.526_9 + _14;
  # DEBUG IPduPtr => IPduPtr_53
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.528_15 = Com_gDataMemPtr;
  Com_gConfigPtr.529_16 = Com_gConfigPtr;
  _17 = Com_gConfigPtr.529_16->ComSigGWRxPduFlagBase;
  _18 = (unsigned int) _17;
  _19 = IPduPtr_53->ComIPduSigGWFlagBit;
  _20 = _19 / 8;
  _21 = (unsigned int) _20;
  _22 = _18 + _21;
  _23 = Com_gDataMemPtr.528_15 + _22;
  _24 = *_23;
  _25 = IPduPtr_53->ComIPduSigGWFlagBit;
  _26 = (unsigned int) _25;
  _27 = _26 & 7;
  _28 = 1 << _27;
  _29 = (unsigned char) _28;
  _30 = _24 & _29;
  if (_30 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.530_31 = Com_gDataMemPtr;
  Com_gConfigPtr.531_32 = Com_gConfigPtr;
  _33 = Com_gConfigPtr.531_32->ComSigGWRxPduFlagBase;
  _34 = (unsigned int) _33;
  _35 = IPduPtr_53->ComIPduSigGWFlagBit;
  _36 = _35 / 8;
  _37 = (unsigned int) _36;
  _38 = _34 + _37;
  _39 = Com_gDataMemPtr.530_31 + _38;
  _40 = IPduPtr_53->ComIPduSigGWFlagBit;
  _41 = (long unsigned int) _40;
  _42 = _41 & 7;
  TS_AtomicClearBit_8 (_39, _42);
  # DEBUG BEGIN_STMT
  Com_MainFunctionRouteSignals_Src_Generic_hlp (IPduPtr_53);

  <bb 6> :
  # DEBUG BEGIN_STMT
  sigGWRxPduRef.532_43 = sigGWRxPduRef_46;
  sigGWRxPduRef_56 = sigGWRxPduRef.532_43 + 1;
  # DEBUG sigGWRxPduRef => sigGWRxPduRef_56

  <bb 7> :
  # sigGWRxPduRef_46 = PHI <sigGWRxPduRef_51(3), sigGWRxPduRef_56(6)>
  # DEBUG sigGWRxPduRef => sigGWRxPduRef_46
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.533_44 = Com_gConfigPtr;
  _45 = Com_gConfigPtr.533_44->ComSigGWRxIPduArraySize;
  if (sigGWRxPduRef_46 < _45)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  return;

}


Com_MainFunctionRouteSignals_Src_Generic_hlp (const struct ComRxIPduType * const SrcIPduPtr)
{
  const struct ComGWSourceType * const GWSourcePtr;
  ComGWSourceRefType sigGWSourceRef;
  boolean routeGroupSignals;
  const struct Com_ConfigType * Com_gConfigPtr.534_1;
  const struct Com_ConfigType * Com_gConfigPtr.535_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  unsigned char _7;
  int _8;
  short unsigned int sigGWSourceRef.536_9;
  int _10;
  short unsigned int _11;
  int _12;
  short unsigned int _13;
  int _14;
  int _15;

  <bb 2> :
  # DEBUG BEGIN_STMT
  routeGroupSignals_21 = 0;
  # DEBUG routeGroupSignals => routeGroupSignals_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  sigGWSourceRef_24 = SrcIPduPtr_23(D)->ComIPduGWSourceRefFirst;
  # DEBUG sigGWSourceRef => sigGWSourceRef_24
  goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.534_1 = Com_gConfigPtr;
  Com_gConfigPtr.535_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.535_2->ComGWSourceRef;
  _4 = (unsigned int) sigGWSourceRef_18;
  _5 = _4 * 12;
  _6 = _3 + _5;
  GWSourcePtr_26 = Com_gConfigPtr.534_1 + _6;
  # DEBUG GWSourcePtr => GWSourcePtr_26
  # DEBUG BEGIN_STMT
  _7 = GWSourcePtr_26->ComGWSourceSelect;
  _8 = (int) _7;
  switch (_8) <default: <L8> [INV], case 0: <L1> [INV], case 1: <L2> [INV], case 2: <L3> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  Com_EB_RouteSignal (GWSourcePtr_26, SrcIPduPtr_23(D));
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  routeGroupSignals_29 = Com_EB_RouteSignalGroup (SrcIPduPtr_23(D), GWSourcePtr_26);
  # DEBUG routeGroupSignals => routeGroupSignals_29
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  Com_EB_RouteGroupSignal (GWSourcePtr_26, routeGroupSignals_17);
  # DEBUG BEGIN_STMT

  <bb 7> :
  # routeGroupSignals_16 = PHI <routeGroupSignals_17(4), routeGroupSignals_29(5), routeGroupSignals_17(6), routeGroupSignals_17(3)>
<L8>:
  # DEBUG routeGroupSignals => routeGroupSignals_16
  # DEBUG BEGIN_STMT
  sigGWSourceRef.536_9 = sigGWSourceRef_18;
  sigGWSourceRef_31 = sigGWSourceRef.536_9 + 1;
  # DEBUG sigGWSourceRef => sigGWSourceRef_31

  <bb 8> :
  # routeGroupSignals_17 = PHI <routeGroupSignals_21(2), routeGroupSignals_16(7)>
  # sigGWSourceRef_18 = PHI <sigGWSourceRef_24(2), sigGWSourceRef_31(7)>
  # DEBUG sigGWSourceRef => sigGWSourceRef_18
  # DEBUG routeGroupSignals => routeGroupSignals_17
  # DEBUG BEGIN_STMT
  _10 = (int) sigGWSourceRef_18;
  _11 = SrcIPduPtr_23(D)->ComIPduGWSourceRefFirst;
  _12 = (int) _11;
  _13 = SrcIPduPtr_23(D)->ComIPduGWSourceRefNum;
  _14 = (int) _13;
  _15 = _12 + _14;
  if (_10 < _15)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Com_EB_CheckSendSignalGroup ();
  return;

}


Com_EB_RouteSignal (const struct ComGWSourceType * GWSourcePtr, const struct ComRxIPduType * SrcIPduPtr)
{
  uint8 * SrcDataPtr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  uint8 GateSignal;
  const struct ComRxSignalType * const SrcSignalPtr;
  const struct Com_ConfigType * Com_gConfigPtr.537_1;
  long unsigned int _2;
  const struct Com_ConfigType * Com_gConfigPtr.538_3;
  const struct Com_ConfigType * Com_gConfigPtr.539_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  unsigned char _10;
  unsigned char _11;
  unsigned int _12;
  unsigned int _13;
  uint8 * Com_gDataMemPtr.540_14;
  short unsigned int _15;
  unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  uint8 * _21;
  unsigned char _22;
  int _23;
  short unsigned int _24;
  unsigned char _25;
  int _26;
  int _27;
  int _28;
  unsigned char _29;
  uint8 * Com_gDataMemPtr.541_30;
  short unsigned int _31;
  sizetype _32;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.537_1 = Com_gConfigPtr;
  _2 = GWSourcePtr_36(D)->ComGWSourceRef;
  SrcSignalPtr_37 = Com_gConfigPtr.537_1 + _2;
  # DEBUG SrcSignalPtr => SrcSignalPtr_37
  # DEBUG BEGIN_STMT
  GateSignal_38 = 1;
  # DEBUG GateSignal => GateSignal_38
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.538_3 = Com_gConfigPtr;
  Com_gConfigPtr.539_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.539_4->ComRxSignalExtRef;
  _6 = SrcSignalPtr_37->ComSignalExtRef;
  _7 = (unsigned int) _6;
  _8 = _7 * 14;
  _9 = _5 + _8;
  SignalExtPtr_39 = Com_gConfigPtr.538_3 + _9;
  # DEBUG SignalExtPtr => SignalExtPtr_39
  # DEBUG BEGIN_STMT
  _10 = SignalExtPtr_39->ComRxSignalExtFlags;
  _11 = _10 >> 1;
  _12 = (unsigned int) _11;
  _13 = _12 & 1;
  if (_13 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.540_14 = Com_gDataMemPtr;
  _15 = SrcIPduPtr_40(D)->ComIPduValueRef;
  _16 = (unsigned int) _15;
  _17 = SignalExtPtr_39->ComUpdateBitPositionInBit;
  _18 = _17 / 8;
  _19 = (unsigned int) _18;
  _20 = _16 + _19;
  _21 = Com_gDataMemPtr.540_14 + _20;
  _22 = *_21;
  _23 = (int) _22;
  _24 = SignalExtPtr_39->ComUpdateBitPositionInBit;
  _25 = (unsigned char) _24;
  _26 = (int) _25;
  _27 = _26 & 7;
  _28 = _23 >> _27;
  _29 = (unsigned char) _28;
  GateSignal_41 = _29 & 1;
  # DEBUG GateSignal => GateSignal_41

  <bb 4> :
  # GateSignal_33 = PHI <GateSignal_38(2), GateSignal_41(3)>
  # DEBUG GateSignal => GateSignal_33
  # DEBUG BEGIN_STMT
  if (GateSignal_33 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.541_30 = Com_gDataMemPtr;
  _31 = SrcIPduPtr_40(D)->ComIPduValueRef;
  _32 = (sizetype) _31;
  SrcDataPtr_42 = Com_gDataMemPtr.541_30 + _32;
  # DEBUG SrcDataPtr => SrcDataPtr_42
  # DEBUG BEGIN_STMT
  Com_EB_RouteSignalHelper (SrcSignalPtr_37, GWSourcePtr_36(D), SrcDataPtr_42);

  <bb 6> :
  return;

}


Com_EB_RouteGroupSignal (const struct ComGWSourceType * GWSourcePtr, boolean routeGroupSignals)
{
  uint8 * SrcDataPtr;
  const struct ComSignalBaseType * const Com_EB_ReadPropPtr;
  const struct ComRxSignalType * const SrcSignalPtr;
  const struct Com_ConfigType * Com_gConfigPtr.616_1;
  long unsigned int _2;
  uint8 * Com_gDataMemPtr.617_3;
  short unsigned int _4;
  sizetype _5;

  <bb 2> :
  # DEBUG BEGIN_STMT
  if (routeGroupSignals_7(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.616_1 = Com_gConfigPtr;
  _2 = GWSourcePtr_9(D)->ComGWSourceRef;
  SrcSignalPtr_10 = Com_gConfigPtr.616_1 + _2;
  # DEBUG SrcSignalPtr => SrcSignalPtr_10
  # DEBUG BEGIN_STMT
  Com_EB_ReadPropPtr_11 = &SrcSignalPtr_10->ComSignalBase;
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_11
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.617_3 = Com_gDataMemPtr;
  _4 = Com_EB_ReadPropPtr_11->ComBufferRef;
  _5 = (sizetype) _4;
  SrcDataPtr_12 = Com_gDataMemPtr.617_3 + _5;
  # DEBUG SrcDataPtr => SrcDataPtr_12
  # DEBUG BEGIN_STMT
  Com_EB_RouteSignalHelper (SrcSignalPtr_10, GWSourcePtr_9(D), SrcDataPtr_12);

  <bb 4> :
  return;

}


Com_EB_RouteSignalGroup (const struct ComRxIPduType * SrcIPduPtr, const struct ComGWSourceType * GWSourcePtr)
{
  const struct ComGWDestinationType * const GWDestinationPtr;
  ComGWDestinationRefType GWDestinationRef;
  const struct ComRxSignalExtType * const SignalExtPtr;
  uint8 SignalUpdated;
  boolean routeGroupSignals;
  const ComRAMIdxType PosInSrcIPdu;
  const struct ComRxSignalGroupType * const SrcSignalGPtr;
  const struct Com_ConfigType * Com_gConfigPtr.562_1;
  long unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  const struct Com_ConfigType * Com_gConfigPtr.563_5;
  const struct Com_ConfigType * Com_gConfigPtr.564_6;
  long unsigned int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  unsigned char _12;
  unsigned char _13;
  unsigned int _14;
  unsigned int _15;
  uint8 * Com_gDataMemPtr.565_16;
  short unsigned int _17;
  unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  uint8 * _23;
  unsigned char _24;
  int _25;
  short unsigned int _26;
  unsigned char _27;
  int _28;
  int _29;
  int _30;
  unsigned char _31;
  short unsigned int _32;
  const struct Com_ConfigType * Com_gConfigPtr.566_33;
  const struct Com_ConfigType * Com_gConfigPtr.567_34;
  long unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  sizetype _38;
  unsigned char _39;
  int _40;
  short unsigned int GWDestinationRef.568_41;
  int _42;
  short unsigned int _43;
  int _44;
  short unsigned int _45;
  int _46;
  int _47;
  boolean _69;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.562_1 = Com_gConfigPtr;
  _2 = GWSourcePtr_55(D)->ComGWSourceRef;
  SrcSignalGPtr_56 = Com_gConfigPtr.562_1 + _2;
  # DEBUG SrcSignalGPtr => SrcSignalGPtr_56
  # DEBUG BEGIN_STMT
  _3 = SrcSignalGPtr_56->ComSignalPositionInByte;
  _4 = SrcIPduPtr_57(D)->ComIPduValueRef;
  PosInSrcIPdu_58 = _3 + _4;
  # DEBUG PosInSrcIPdu => PosInSrcIPdu_58
  # DEBUG BEGIN_STMT
  routeGroupSignals_59 = 0;
  # DEBUG routeGroupSignals => routeGroupSignals_59
  # DEBUG BEGIN_STMT
  SignalUpdated_60 = 1;
  # DEBUG SignalUpdated => SignalUpdated_60
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.563_5 = Com_gConfigPtr;
  Com_gConfigPtr.564_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.564_6->ComRxSignalExtRef;
  _8 = SrcSignalGPtr_56->ComSignalExtRef;
  _9 = (unsigned int) _8;
  _10 = _9 * 14;
  _11 = _7 + _10;
  SignalExtPtr_61 = Com_gConfigPtr.563_5 + _11;
  # DEBUG SignalExtPtr => SignalExtPtr_61
  # DEBUG BEGIN_STMT
  _12 = SignalExtPtr_61->ComRxSignalExtFlags;
  _13 = _12 >> 1;
  _14 = (unsigned int) _13;
  _15 = _14 & 1;
  if (_15 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.565_16 = Com_gDataMemPtr;
  _17 = SrcIPduPtr_57(D)->ComIPduValueRef;
  _18 = (unsigned int) _17;
  _19 = SignalExtPtr_61->ComUpdateBitPositionInBit;
  _20 = _19 / 8;
  _21 = (unsigned int) _20;
  _22 = _18 + _21;
  _23 = Com_gDataMemPtr.565_16 + _22;
  _24 = *_23;
  _25 = (int) _24;
  _26 = SignalExtPtr_61->ComUpdateBitPositionInBit;
  _27 = (unsigned char) _26;
  _28 = (int) _27;
  _29 = _28 & 7;
  _30 = _25 >> _29;
  _31 = (unsigned char) _30;
  SignalUpdated_62 = _31 & 1;
  # DEBUG SignalUpdated => SignalUpdated_62

  <bb 4> :
  # SignalUpdated_49 = PHI <SignalUpdated_60(2), SignalUpdated_62(3)>
  # DEBUG SignalUpdated => SignalUpdated_49
  # DEBUG BEGIN_STMT
  if (SignalUpdated_49 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _32 = GWSourcePtr_55(D)->ComGWDestinationNumRef;
  if (_32 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  GWDestinationRef_65 = GWSourcePtr_55(D)->ComGWDestinationFirstRef;
  # DEBUG GWDestinationRef => GWDestinationRef_65
  goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.566_33 = Com_gConfigPtr;
  Com_gConfigPtr.567_34 = Com_gConfigPtr;
  _35 = Com_gConfigPtr.567_34->ComGWDestinationRef;
  _36 = (unsigned int) GWDestinationRef_50;
  _37 = _36 * 8;
  _38 = _35 + _37;
  GWDestinationPtr_66 = Com_gConfigPtr.566_33 + _38;
  # DEBUG GWDestinationPtr => GWDestinationPtr_66
  # DEBUG BEGIN_STMT
  _39 = GWDestinationPtr_66->ComGWDestinationSelect;
  _40 = (int) _39;
  if (_40 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  Com_EB_RouteSG_2_SG (GWDestinationPtr_66, PosInSrcIPdu_58);
  # DEBUG BEGIN_STMT

  <bb 9> :
  # DEBUG BEGIN_STMT
  GWDestinationRef.568_41 = GWDestinationRef_50;
  GWDestinationRef_68 = GWDestinationRef.568_41 + 1;
  # DEBUG GWDestinationRef => GWDestinationRef_68

  <bb 10> :
  # GWDestinationRef_50 = PHI <GWDestinationRef_65(6), GWDestinationRef_68(9)>
  # DEBUG GWDestinationRef => GWDestinationRef_50
  # DEBUG BEGIN_STMT
  _42 = (int) GWDestinationRef_50;
  _43 = GWSourcePtr_55(D)->ComGWDestinationFirstRef;
  _44 = (int) _43;
  _45 = GWSourcePtr_55(D)->ComGWDestinationNumRef;
  _46 = (int) _45;
  _47 = _44 + _46;
  if (_42 < _47)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  routeGroupSignals_63 = 1;
  # DEBUG routeGroupSignals => routeGroupSignals_63
  # DEBUG BEGIN_STMT
  Com_EB_RouteReceiveSignalGroup (SrcSignalGPtr_56);

  <bb 12> :
  # routeGroupSignals_48 = PHI <routeGroupSignals_59(4), routeGroupSignals_59(10), routeGroupSignals_63(11)>
  # DEBUG routeGroupSignals => routeGroupSignals_48
  # DEBUG BEGIN_STMT
  _69 = routeGroupSignals_48;
  return _69;

}


Com_EB_RouteReceiveSignalGroup (const struct ComRxSignalGroupType * SignalGPtr)
{
  uint8 retval;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval = 0;
  # DEBUG BEGIN_STMT
  Com_SetupRxSignalGroup (&retval, 0B, SignalGPtr_3(D), Com_CopyRxSignalGroupArray_Shadow);
  # DEBUG BEGIN_STMT
  retval ={v} {CLOBBER};
  return;

}


Com_EB_RouteSG_2_SG (const struct ComGWDestinationType * GWDestinationPtr, ComRAMIdxType PosInSrcIPdu)
{
  const struct ComTxIPduType * const DestIPduPtr;
  const ComIPduRefType DestPduId;
  const struct ComTxSignalGroupType * const DestSignalGPtr;
  const struct Com_ConfigType * Com_gConfigPtr.569_1;
  long unsigned int _2;
  const struct Com_ConfigType * Com_gConfigPtr.570_3;
  const struct Com_ConfigType * Com_gConfigPtr.571_4;
  long unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  sizetype _8;
  uint8 * Com_gDataMemPtr.572_9;
  sizetype _10;
  uint8 * _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.569_1 = Com_gConfigPtr;
  _2 = GWDestinationPtr_13(D)->ComGWDestinationRef;
  DestSignalGPtr_14 = Com_gConfigPtr.569_1 + _2;
  # DEBUG DestSignalGPtr => DestSignalGPtr_14
  # DEBUG BEGIN_STMT
  DestPduId_15 = DestSignalGPtr_14->ComIPduRef;
  # DEBUG DestPduId => DestPduId_15
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.570_3 = Com_gConfigPtr;
  Com_gConfigPtr.571_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.571_4->ComTxIPduRef;
  _6 = (unsigned int) DestPduId_15;
  _7 = _6 * 64;
  _8 = _5 + _7;
  DestIPduPtr_16 = Com_gConfigPtr.570_3 + _8;
  # DEBUG DestIPduPtr => DestIPduPtr_16
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.572_9 = Com_gDataMemPtr;
  _10 = (sizetype) PosInSrcIPdu_17(D);
  _11 = Com_gDataMemPtr.572_9 + _10;
  Com_EB_SendSignalGroupArray (_11, DestSignalGPtr_14, DestPduId_15, DestIPduPtr_16, 1);
  return;

}


Com_EB_RouteSignalHelper_Write (const struct ComRxSignalType * SrcSignalPtr, const struct ComTxSignalType * DestSignalPtr, const void * SignalDataPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 index;
  void (*<T69f>) (const void *, uint8 *, const struct ComTxSignalType *, struct Com_EB_WriteIntDataType *) fptr;
  uint8 * const DestDataPtr;
  const ComIPduSizeType SrcPduSize;
  ComSignalBitSizeType DestSigLength;
  const ComSignalDescBitType SrcSigStartByte;
  ComIPduSizeType * const SrcSigDatLenPtr;
  const struct ComRxIPduType * const IPduPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  const struct Com_ConfigType * Com_gConfigPtr.548_6;
  const struct Com_ConfigType * Com_gConfigPtr.549_7;
  long unsigned int _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  sizetype _12;
  uint8 * Com_gDataMemPtr.550_13;
  const struct Com_ConfigType * Com_gConfigPtr.551_14;
  short unsigned int _15;
  sizetype _16;
  uint8 * _17;
  short unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  uint8 * Com_gDataMemPtr.552_21;
  short unsigned int _22;
  sizetype _23;
  short unsigned int _24;
  short unsigned int _25;
  int _26;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = SrcSignalPtr_30(D)->ComSignalBase.ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  _4 = (unsigned int) _3;
  _5 = _4 & 15;
  if (_5 == 8)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.548_6 = Com_gConfigPtr;
  Com_gConfigPtr.549_7 = Com_gConfigPtr;
  _8 = Com_gConfigPtr.549_7->ComRxIPduRef;
  _9 = SrcSignalPtr_30(D)->ComIPduRef;
  _10 = (unsigned int) _9;
  _11 = _10 * 48;
  _12 = _8 + _11;
  IPduPtr_39 = Com_gConfigPtr.548_6 + _12;
  # DEBUG IPduPtr => IPduPtr_39
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.550_13 = Com_gDataMemPtr;
  Com_gConfigPtr.551_14 = Com_gConfigPtr;
  _15 = Com_gConfigPtr.551_14->ComRxIPduLengthBase;
  _16 = (sizetype) _15;
  _17 = Com_gDataMemPtr.550_13 + _16;
  _18 = SrcSignalPtr_30(D)->ComIPduRef;
  _19 = (unsigned int) _18;
  _20 = _19 * 2;
  SrcSigDatLenPtr_40 = _17 + _20;
  # DEBUG SrcSigDatLenPtr => SrcSigDatLenPtr_40
  # DEBUG BEGIN_STMT
  SrcSigStartByte_41 = SrcSignalPtr_30(D)->ComSignalBase.ComSignalPositionInBit;
  # DEBUG SrcSigStartByte => SrcSigStartByte_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SrcPduSize_43 = *SrcSigDatLenPtr_40;
  # DEBUG SrcPduSize => SrcPduSize_43
  # DEBUG BEGIN_STMT
  if (SrcPduSize_43 <= SrcSigStartByte_41)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  DestSigLength_45 = 0;
  # DEBUG DestSigLength => DestSigLength_45
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DestSigLength_44 = SrcPduSize_43 - SrcSigStartByte_41;
  # DEBUG DestSigLength => DestSigLength_44

  <bb 6> :
  # DestSigLength_27 = PHI <DestSigLength_45(4), DestSigLength_44(5)>
  # DEBUG DestSigLength => DestSigLength_27
  # DEBUG BEGIN_STMT
  IntDataPtr_33(D)->arraySize = DestSigLength_27;
  # DEBUG BEGIN_STMT
  Com_EB_WriteDynSignal_ExitArea_0 (SignalDataPtr_37(D), DestSignalPtr_31(D), IntDataPtr_33(D));
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.552_21 = Com_gDataMemPtr;
  _22 = DestSignalPtr_31(D)->ComSignalBase.ComBufferRef;
  _23 = (sizetype) _22;
  DestDataPtr_32 = Com_gDataMemPtr.552_21 + _23;
  # DEBUG DestDataPtr => DestDataPtr_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _24 = DestSignalPtr_31(D)->ComSignalBase.ComBitSize;
  IntDataPtr_33(D)->arraySize = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = DestSignalPtr_31(D)->ComTxSignalFlags;
  index_35 = _25 & 511;
  # DEBUG index => index_35
  # DEBUG BEGIN_STMT
  _26 = (int) index_35;
  fptr_36 = Com_WriteFuncs[_26];
  # DEBUG fptr => fptr_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_36 (SignalDataPtr_37(D), DestDataPtr_32, DestSignalPtr_31(D), IntDataPtr_33(D));

  <bb 8> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_RouteSignalHelper (const struct ComRxSignalType * SrcSignalPtr, const struct ComGWSourceType * GWSourcePtr, uint8 * SrcDataPtr)
{
  const ComSignalGroupRefType SignalGId;
  struct Com_EB_WriteIntDataType IntData;
  const struct ComTxSignalType * const DestSignalPtr;
  const struct ComGWDestinationType * const GWDestinationPtr;
  ComSignalDescBitType StartByte;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  Com_TS_SignalTypeType SignalType;
  const struct ComSignalBaseType * const Com_EB_ReadPropPtr;
  ComGWDestinationRefType i;
  void * SignalDataPtr;
  struct ComEmu64Type valuint64;
  boolean valboolean;
  uint8 valuint8;
  uint16 valuint16;
  uint32 valuint32;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  int _7;
  short unsigned int _8;
  int _9;
  short unsigned int _10;
  int _11;
  short unsigned int _12;
  int _13;
  short unsigned int _14;
  int _15;
  sizetype _16;
  const struct Com_ConfigType * Com_gConfigPtr.542_17;
  const struct Com_ConfigType * Com_gConfigPtr.543_18;
  long unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  const struct Com_ConfigType * Com_gConfigPtr.544_23;
  long unsigned int _24;
  unsigned char _25;
  int _26;
  unsigned char _27;
  short unsigned int i.545_28;
  int _29;
  short unsigned int _30;
  int _31;
  short unsigned int _32;
  int _33;
  int _34;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalDataPtr_42 = &valuint8;
  # DEBUG SignalDataPtr => SignalDataPtr_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_EB_ReadPropPtr_44 = &SrcSignalPtr_43(D)->ComSignalBase;
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_44
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_44->ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  SignalType_46 = _3 & 15;
  # DEBUG SignalType => SignalType_46
  # DEBUG BEGIN_STMT
  _4 = SignalType_46 + 249;
  if (_4 > 1)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  _5 = (int) SignalType_46;
  switch (_5) <default: <L21> [INV], case 0: <L1> [INV], case 1: <L4> [INV], case 2: <L6> [INV], case 3: <L2> [INV], case 4: <L4> [INV], case 5: <L6> [INV], case 6: <L2> [INV], case 9 ... 10: <L8> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = Com_EB_ReadPropPtr_44->ComRxSignalFlags;
  index_67 = _6 & 63;
  # DEBUG index => index_67
  # DEBUG BEGIN_STMT
  _7 = (int) index_67;
  fptr_68 = Com_ReadFuncs[_7].Read;
  # DEBUG fptr => fptr_68
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_68 (&valboolean, SrcDataPtr_48(D), Com_EB_ReadPropPtr_44, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalDataPtr_70 = &valboolean;
  # DEBUG SignalDataPtr => SignalDataPtr_70
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = Com_EB_ReadPropPtr_44->ComRxSignalFlags;
  index_55 = _8 & 63;
  # DEBUG index => index_55
  # DEBUG BEGIN_STMT
  _9 = (int) index_55;
  fptr_56 = Com_ReadFuncs[_9].Read;
  # DEBUG fptr => fptr_56
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_56 (&valuint8, SrcDataPtr_48(D), Com_EB_ReadPropPtr_44, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalDataPtr_58 = &valuint8;
  # DEBUG SignalDataPtr => SignalDataPtr_58
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 6> :
<L4>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = Com_EB_ReadPropPtr_44->ComRxSignalFlags;
  index_63 = _10 & 63;
  # DEBUG index => index_63
  # DEBUG BEGIN_STMT
  _11 = (int) index_63;
  fptr_64 = Com_ReadFuncs[_11].Read;
  # DEBUG fptr => fptr_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_64 (&valuint16, SrcDataPtr_48(D), Com_EB_ReadPropPtr_44, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalDataPtr_66 = &valuint16;
  # DEBUG SignalDataPtr => SignalDataPtr_66
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 7> :
<L6>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_ReadPropPtr_44->ComRxSignalFlags;
  index_59 = _12 & 63;
  # DEBUG index => index_59
  # DEBUG BEGIN_STMT
  _13 = (int) index_59;
  fptr_60 = Com_ReadFuncs[_13].Read;
  # DEBUG fptr => fptr_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_60 (&valuint32, SrcDataPtr_48(D), Com_EB_ReadPropPtr_44, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalDataPtr_62 = &valuint32;
  # DEBUG SignalDataPtr => SignalDataPtr_62
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 8> :
<L8>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = Com_EB_ReadPropPtr_44->ComRxSignalFlags;
  index_51 = _14 & 63;
  # DEBUG index => index_51
  # DEBUG BEGIN_STMT
  _15 = (int) index_51;
  fptr_52 = Com_ReadFuncs[_15].Read;
  # DEBUG fptr => fptr_52
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_52 (&valuint64, SrcDataPtr_48(D), Com_EB_ReadPropPtr_44, &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalDataPtr_54 = &valuint64;
  # DEBUG SignalDataPtr => SignalDataPtr_54
  # DEBUG BEGIN_STMT

  <bb 9> :
  # SignalDataPtr_35 = PHI <SignalDataPtr_70(4), SignalDataPtr_58(5), SignalDataPtr_66(6), SignalDataPtr_62(7), SignalDataPtr_54(8), SignalDataPtr_42(3)>
<L21>:
  # DEBUG SignalDataPtr => SignalDataPtr_35
  retval ={v} {CLOBBER};
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  StartByte_47 = SrcSignalPtr_43(D)->ComSignalBase.ComSignalPositionInBit;
  # DEBUG StartByte => StartByte_47
  # DEBUG BEGIN_STMT
  _16 = (sizetype) StartByte_47;
  SignalDataPtr_49 = SrcDataPtr_48(D) + _16;
  # DEBUG SignalDataPtr => SignalDataPtr_49

  <bb 11> :
  # SignalDataPtr_36 = PHI <SignalDataPtr_35(9), SignalDataPtr_49(10)>
  # DEBUG SignalDataPtr => SignalDataPtr_36
  # DEBUG BEGIN_STMT
  i_73 = GWSourcePtr_72(D)->ComGWDestinationFirstRef;
  # DEBUG i => i_73
  goto <bb 16>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.542_17 = Com_gConfigPtr;
  Com_gConfigPtr.543_18 = Com_gConfigPtr;
  _19 = Com_gConfigPtr.543_18->ComGWDestinationRef;
  _20 = (unsigned int) i_37;
  _21 = _20 * 8;
  _22 = _19 + _21;
  GWDestinationPtr_79 = Com_gConfigPtr.542_17 + _22;
  # DEBUG GWDestinationPtr => GWDestinationPtr_79
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.544_23 = Com_gConfigPtr;
  _24 = GWDestinationPtr_79->ComGWDestinationRef;
  DestSignalPtr_80 = Com_gConfigPtr.544_23 + _24;
  # DEBUG DestSignalPtr => DestSignalPtr_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.arraySize = 0;
  # DEBUG BEGIN_STMT
  IntData.trigger = 0;
  # DEBUG BEGIN_STMT
  IntData.SendSigRetval = 128;
  # DEBUG BEGIN_STMT
  IntData.SendInMainFunctionTx = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntData.TMSChanged = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = GWDestinationPtr_79->ComGWDestinationSelect;
  _26 = (int) _25;
  switch (_26) <default: <L22> [INV], case 0: <L15> [INV], case 2: <L16> [INV]>

  <bb 13> :
<L15>:
  # DEBUG BEGIN_STMT
  _27 = Com_GetSendSignalRetVal (DestSignalPtr_80);
  IntData.SendSigRetval = _27;
  # DEBUG BEGIN_STMT
  Com_EB_RouteSignalHelper_Write (SrcSignalPtr_43(D), DestSignalPtr_80, SignalDataPtr_36, &IntData);
  # DEBUG BEGIN_STMT
  Com_EB_SendSignal_Transmit (DestSignalPtr_80, &IntData);
  # DEBUG BEGIN_STMT
  goto <bb 15>; [INV]

  <bb 14> :
<L16>:
  # DEBUG BEGIN_STMT
  SignalGId_86 = DestSignalPtr_80->ComSignalBase.ComSignalGroupRef;
  # DEBUG SignalGId => SignalGId_86
  # DEBUG BEGIN_STMT
  IntData.SendSigRetval = 128;
  # DEBUG BEGIN_STMT
  Com_EB_RouteSignalHelper_Write (SrcSignalPtr_43(D), DestSignalPtr_80, SignalDataPtr_36, &IntData);
  # DEBUG BEGIN_STMT
  Com_EB_SetSendSignalGroup (SignalGId_86);
  # DEBUG BEGIN_STMT

  <bb 15> :
<L22>:
  IntData ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  i.545_28 = i_37;
  i_95 = i.545_28 + 1;
  # DEBUG i => i_95

  <bb 16> :
  # i_37 = PHI <i_73(11), i_95(15)>
  # DEBUG i => i_37
  # DEBUG BEGIN_STMT
  _29 = (int) i_37;
  _30 = GWSourcePtr_72(D)->ComGWDestinationFirstRef;
  _31 = (int) _30;
  _32 = GWSourcePtr_72(D)->ComGWDestinationNumRef;
  _33 = (int) _32;
  _34 = _31 + _33;
  if (_29 < _34)
    goto <bb 12>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  valuint32 ={v} {CLOBBER};
  valuint16 ={v} {CLOBBER};
  valuint8 ={v} {CLOBBER};
  valboolean ={v} {CLOBBER};
  valuint64 ={v} {CLOBBER};
  return;

}


Com_EB_CheckSendSignalGroup ()
{
  const struct ComTxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType SignalGId;
  ComSignalGroupRefType * const TxSignalGroupQueueBase;
  uint8 retval;
  uint8 exit_flag;
  ComSignalGroupRefType ii;
  uint8 * Com_gDataMemPtr.618_1;
  const struct Com_ConfigType * Com_gConfigPtr.619_2;
  short unsigned int _3;
  sizetype _4;
  unsigned int _5;
  unsigned int _6;
  ComSignalGroupRefType * _7;
  const struct Com_ConfigType * Com_gConfigPtr.620_8;
  const struct Com_ConfigType * Com_gConfigPtr.621_9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  unsigned int _14;
  unsigned int _15;
  ComSignalGroupRefType * _16;
  short unsigned int ii.622_17;
  const struct Com_ConfigType * Com_gConfigPtr.623_18;
  short unsigned int _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  exit_flag_25 = 1;
  # DEBUG exit_flag => exit_flag_25
  # DEBUG BEGIN_STMT
  retval = 0;
  # DEBUG BEGIN_STMT
  ii_28 = 0;
  # DEBUG ii => ii_28
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.618_1 = Com_gDataMemPtr;
  Com_gConfigPtr.619_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.619_2->ComSigGWTxSignalGroupQueueBase;
  _4 = (sizetype) _3;
  TxSignalGroupQueueBase_29 = Com_gDataMemPtr.618_1 + _4;
  # DEBUG TxSignalGroupQueueBase => TxSignalGroupQueueBase_29
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) ii_20;
  _6 = _5 * 2;
  _7 = TxSignalGroupQueueBase_29 + _6;
  SignalGId_30 = *_7;
  # DEBUG SignalGId => SignalGId_30
  # DEBUG BEGIN_STMT
  if (SignalGId_30 != 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.620_8 = Com_gConfigPtr;
  Com_gConfigPtr.621_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.621_9->ComTxSignalGroupRef;
  _11 = (unsigned int) SignalGId_30;
  _12 = _11 * 32;
  _13 = _10 + _12;
  SignalGPtr_32 = Com_gConfigPtr.620_8 + _13;
  # DEBUG SignalGPtr => SignalGPtr_32
  # DEBUG BEGIN_STMT
  _14 = (unsigned int) ii_20;
  _15 = _14 * 2;
  _16 = TxSignalGroupQueueBase_29 + _15;
  *_16 = 65535;
  # DEBUG BEGIN_STMT
  Com_SetupTxSignalGroup (0B, 0, Com_EB_SendSignalGroup, SignalGPtr_32, &retval, 1);
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  exit_flag_31 = 0;
  # DEBUG exit_flag => exit_flag_31

  <bb 6> :
  # exit_flag_21 = PHI <exit_flag_22(4), exit_flag_31(5)>
  # DEBUG exit_flag => exit_flag_21
  # DEBUG BEGIN_STMT
  ii.622_17 = ii_20;
  ii_35 = ii.622_17 + 1;
  # DEBUG ii => ii_35

  <bb 7> :
  # ii_20 = PHI <ii_28(2), ii_35(6)>
  # exit_flag_22 = PHI <exit_flag_25(2), exit_flag_21(6)>
  # DEBUG exit_flag => exit_flag_22
  # DEBUG ii => ii_20
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.623_18 = Com_gConfigPtr;
  _19 = Com_gConfigPtr.623_18->ComSigGWTxSignalGroupQueueMax;
  if (ii_20 < _19)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  if (exit_flag_22 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  retval ={v} {CLOBBER};
  return;

}


Com_EB_SetSendSignalGroup (ComSignalGroupRefType SignalGId)
{
  ComSignalGroupRefType * const TxSignalGroupQueueBase;
  uint8 exit_flag;
  ComSignalGroupRefType ii;
  uint8 * Com_gDataMemPtr.558_1;
  const struct Com_ConfigType * Com_gConfigPtr.559_2;
  short unsigned int _3;
  sizetype _4;
  unsigned int _5;
  unsigned int _6;
  ComSignalGroupRefType * _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  ComSignalGroupRefType * _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  ComSignalGroupRefType * _15;
  short unsigned int ii.560_16;
  const struct Com_ConfigType * Com_gConfigPtr.561_17;
  short unsigned int _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  exit_flag_24 = 1;
  # DEBUG exit_flag => exit_flag_24
  # DEBUG BEGIN_STMT
  ii_25 = 0;
  # DEBUG ii => ii_25
  goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.558_1 = Com_gDataMemPtr;
  Com_gConfigPtr.559_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.559_2->ComSigGWTxSignalGroupQueueBase;
  _4 = (sizetype) _3;
  TxSignalGroupQueueBase_27 = Com_gDataMemPtr.558_1 + _4;
  # DEBUG TxSignalGroupQueueBase => TxSignalGroupQueueBase_27
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) ii_19;
  _6 = _5 * 2;
  _7 = TxSignalGroupQueueBase_27 + _6;
  _8 = *_7;
  if (SignalGId_28(D) == _8)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  exit_flag_31 = 0;
  # DEBUG exit_flag => exit_flag_31
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _9 = (unsigned int) ii_19;
  _10 = _9 * 2;
  _11 = TxSignalGroupQueueBase_27 + _10;
  _12 = *_11;
  if (_12 == 65535)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _13 = (unsigned int) ii_19;
  _14 = _13 * 2;
  _15 = TxSignalGroupQueueBase_27 + _14;
  *_15 = SignalGId_28(D);
  # DEBUG BEGIN_STMT
  exit_flag_30 = 0;
  # DEBUG exit_flag => exit_flag_30

  <bb 7> :
  # exit_flag_20 = PHI <exit_flag_31(4), exit_flag_21(5), exit_flag_30(6)>
  # DEBUG exit_flag => exit_flag_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii.560_16 = ii_19;
  ii_32 = ii.560_16 + 1;
  # DEBUG ii => ii_32

  <bb 8> :
  # ii_19 = PHI <ii_25(2), ii_32(7)>
  # exit_flag_21 = PHI <exit_flag_24(2), exit_flag_20(7)>
  # DEBUG exit_flag => exit_flag_21
  # DEBUG ii => ii_19
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.561_17 = Com_gConfigPtr;
  _18 = Com_gConfigPtr.561_17->ComSigGWTxSignalGroupQueueMax;
  if (ii_19 < _18)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  if (exit_flag_21 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  return;

}


Com_SetIpduGroup (uint8 * ipduGroupVector, Com_IpduGroupIdType ipduGroupId, boolean bitval)
{
  unsigned char Com_InitStatus.521_1;
  const struct Com_ConfigType * Com_gConfigPtr.522_2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned char _11;
  unsigned char _12;
  short unsigned int _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned char _24;
  short unsigned int _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.521_1 = Com_InitStatus;
  if (Com_InitStatus.521_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 29, 2);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ipduGroupVector_31(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 29, 3);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.522_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.522_2->ComIPduGroupsNum;
  if (ipduGroupId_32(D) >= _3)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 29, 1);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (bitval_33(D) == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _4 = ipduGroupId_32(D) / 8;
  _5 = (sizetype) _4;
  _6 = ipduGroupVector_31(D) + _5;
  _7 = *_6;
  _8 = (unsigned int) ipduGroupId_32(D);
  _9 = _8 & 7;
  _10 = 1 << _9;
  _11 = (unsigned char) _10;
  _12 = ~_11;
  _13 = ipduGroupId_32(D) / 8;
  _14 = (sizetype) _13;
  _15 = ipduGroupVector_31(D) + _14;
  _16 = _7 & _12;
  *_15 = _16;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _17 = ipduGroupId_32(D) / 8;
  _18 = (sizetype) _17;
  _19 = ipduGroupVector_31(D) + _18;
  _20 = *_19;
  _21 = (unsigned int) ipduGroupId_32(D);
  _22 = _21 & 7;
  _23 = 1 << _22;
  _24 = (unsigned char) _23;
  _25 = ipduGroupId_32(D) / 8;
  _26 = (sizetype) _25;
  _27 = ipduGroupVector_31(D) + _26;
  _28 = _20 | _24;
  *_27 = _28;

  <bb 11> :
  # DEBUG BEGIN_STMT
  return;

}


Com_ClearIpduGroupVector (uint8 * ipduGroupVector)
{
  uint16 iPduGroupVectorByte;
  unsigned char Com_InitStatus.519_1;
  sizetype _2;
  uint8 * _3;
  short unsigned int iPduGroupVectorByte.520_4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.519_1 = Com_InitStatus;
  if (Com_InitStatus.519_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 28, 2);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ipduGroupVector_9(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 28, 3);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  iPduGroupVectorByte_10 = 0;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_10
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _2 = (sizetype) iPduGroupVectorByte_5;
  _3 = ipduGroupVector_9(D) + _2;
  *_3 = 0;
  # DEBUG BEGIN_STMT
  iPduGroupVectorByte.520_4 = iPduGroupVectorByte_5;
  iPduGroupVectorByte_12 = iPduGroupVectorByte.520_4 + 1;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_12

  <bb 8> :
  # iPduGroupVectorByte_5 = PHI <iPduGroupVectorByte_10(6), iPduGroupVectorByte_12(7)>
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_5
  # DEBUG BEGIN_STMT
  if (iPduGroupVectorByte_5 <= 3)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  return;

}


Com_Init (const struct Com_ConfigType * Com_ConfigPtr)
{
  ComSignalGroupRefType * const TxSignalGroupQueueBase;
  ComRAMIdxType ii;
  ComRAMIdxType numBytes;
  ComRAMIdxType i;
  const struct Com_ConfigType * TmpCfgPtr;
  ComIPduRefType pdu;
  unsigned char _1;
  short unsigned int pdu.502_2;
  short unsigned int _3;
  short unsigned int pdu.503_4;
  short unsigned int _5;
  const struct Com_ConfigType * Com_gConfigPtr.504_6;
  short unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  const struct Com_ConfigType * Com_gConfigPtr.505_11;
  uint8 * Com_gDataMemPtr.506_12;
  sizetype _13;
  uint8 * _14;
  short unsigned int i.507_15;
  int _16;
  const struct Com_ConfigType * Com_gConfigPtr.508_17;
  short unsigned int _18;
  int _19;
  int _20;
  int _21;
  uint8 * Com_gDataMemPtr.509_22;
  const struct Com_ConfigType * Com_gConfigPtr.510_23;
  short unsigned int _24;
  sizetype _25;
  unsigned int _26;
  unsigned int _27;
  ComSignalGroupRefType * _28;
  short unsigned int ii.511_29;
  const struct Com_ConfigType * Com_gConfigPtr.512_30;
  short unsigned int _31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TmpCfgPtr_42 = Com_ConfigPtr_41(D);
  # DEBUG TmpCfgPtr => TmpCfgPtr_42
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_IsValidConfig (TmpCfgPtr_42);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 1, 3);
  goto <bb 17>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr = TmpCfgPtr_42;
  # DEBUG BEGIN_STMT
  pdu_46 = 0;
  # DEBUG pdu => pdu_46
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_EB_InitStartRxIPdu (pdu_32);
  # DEBUG BEGIN_STMT
  pdu.502_2 = pdu_32;
  pdu_60 = pdu.502_2 + 1;
  # DEBUG pdu => pdu_60

  <bb 6> :
  # pdu_32 = PHI <pdu_46(4), pdu_60(5)>
  # DEBUG pdu => pdu_32
  # DEBUG BEGIN_STMT
  _3 = TmpCfgPtr_42->ComRxIPduArraySize;
  if (pdu_32 < _3)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  pdu_47 = 0;
  # DEBUG pdu => pdu_47
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_EB_InitStartTxIPdu (pdu_33);
  # DEBUG BEGIN_STMT
  pdu.503_4 = pdu_33;
  pdu_58 = pdu.503_4 + 1;
  # DEBUG pdu => pdu_58

  <bb 9> :
  # pdu_33 = PHI <pdu_47(7), pdu_58(8)>
  # DEBUG pdu => pdu_33
  # DEBUG BEGIN_STMT
  _5 = TmpCfgPtr_42->ComTxIPduArraySize;
  if (pdu_33 < _5)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.504_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.504_6->ComCbkTxAckDeferredListMax;
  _8 = (unsigned int) _7;
  _9 = _8 + 7;
  _10 = _9 / 8;
  numBytes_48 = (ComRAMIdxType) _10;
  # DEBUG numBytes => numBytes_48
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.505_11 = Com_gConfigPtr;
  i_49 = Com_gConfigPtr.505_11->ComCbkTxAckDeferredStatusBase;
  # DEBUG i => i_49
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.506_12 = Com_gDataMemPtr;
  _13 = (sizetype) i_34;
  _14 = Com_gDataMemPtr.506_12 + _13;
  *_14 = 0;
  # DEBUG BEGIN_STMT
  i.507_15 = i_34;
  i_56 = i.507_15 + 1;
  # DEBUG i => i_56

  <bb 12> :
  # i_34 = PHI <i_49(10), i_56(11)>
  # DEBUG i => i_34
  # DEBUG BEGIN_STMT
  _16 = (int) i_34;
  Com_gConfigPtr.508_17 = Com_gConfigPtr;
  _18 = Com_gConfigPtr.508_17->ComCbkTxAckDeferredStatusBase;
  _19 = (int) _18;
  _20 = (int) numBytes_48;
  _21 = _19 + _20;
  if (_16 < _21)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.509_22 = Com_gDataMemPtr;
  Com_gConfigPtr.510_23 = Com_gConfigPtr;
  _24 = Com_gConfigPtr.510_23->ComSigGWTxSignalGroupQueueBase;
  _25 = (sizetype) _24;
  TxSignalGroupQueueBase_50 = Com_gDataMemPtr.509_22 + _25;
  # DEBUG TxSignalGroupQueueBase => TxSignalGroupQueueBase_50
  # DEBUG BEGIN_STMT
  ii_51 = 0;
  # DEBUG ii => ii_51
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _26 = (unsigned int) ii_35;
  _27 = _26 * 2;
  _28 = TxSignalGroupQueueBase_50 + _27;
  *_28 = 65535;
  # DEBUG BEGIN_STMT
  ii.511_29 = ii_35;
  ii_54 = ii.511_29 + 1;
  # DEBUG ii => ii_54

  <bb 15> :
  # ii_35 = PHI <ii_51(13), ii_54(14)>
  # DEBUG ii => ii_35
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.512_30 = Com_gConfigPtr;
  _31 = Com_gConfigPtr.512_30->ComSigGWTxSignalGroupQueueMax;
  if (ii_35 < _31)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  Com_InitStatus = 1;

  <bb 17> :
  # DEBUG BEGIN_STMT
  return;

}


Com_GetConfigurationId ()
{
  uint32 ConfigId;
  unsigned char Com_InitStatus.500_1;
  const struct Com_ConfigType * Com_gConfigPtr.501_2;
  uint32 _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.500_1 = Com_InitStatus;
  if (Com_InitStatus.500_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 8, 2);
  # DEBUG BEGIN_STMT
  ConfigId_8 = 4294967295;
  # DEBUG ConfigId => ConfigId_8
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.501_2 = Com_gConfigPtr;
  ConfigId_6 = Com_gConfigPtr.501_2->ComConfigurationId;
  # DEBUG ConfigId => ConfigId_6

  <bb 5> :
  # ConfigId_3 = PHI <ConfigId_8(3), ConfigId_6(4)>
  # DEBUG ConfigId => ConfigId_3
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = ConfigId_3;
  return _9;

}


Com_EB_FilterSint64 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint8 FilterResult_new_equals_x;
  uint8 FilterResult_new_differs_x;
  const struct ComEmu64Type * SignalDataPtr_loc;
  struct ComFilterConfType ComFilterProp_loc;
  uint8 FilterResult;
  unsigned char _1;
  short unsigned int _2;
  const uint32 * _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned char _7;
  int _8;
  const uint32 * _9;
  const uint32 * _10;
  boolean _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_13 = 0;
  # DEBUG FilterResult => FilterResult_13
  # DEBUG BEGIN_STMT
  ComFilterProp_loc = *ComFilterPropPtr_15(D);
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_18 = SignalDataPtr_17(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_18
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_15(D)->ComFilterType;
  if (_1 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = ComFilterPropPtr_15(D)->ComFilterRef;
  FilterResult_29 = Com_EB_FilterOneEveryN (_2);
  # DEBUG FilterResult => FilterResult_29
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = &SignalDataPtr_loc_18->LoWord;
  FilterResult_20 = Com_EB_FilterUint32 (ComFilterPropPtr_15(D), _3);
  # DEBUG FilterResult => FilterResult_20
  # DEBUG BEGIN_STMT
  _4 = ComFilterProp_loc.ComFilterRef;
  _5 = _4;
  _6 = _5 + 1;
  ComFilterProp_loc.ComFilterRef = _6;
  # DEBUG BEGIN_STMT
  _7 = ComFilterPropPtr_15(D)->ComFilterType;
  _8 = (int) _7;
  switch (_8) <default: <L9> [INV], case 3: <L2> [INV], case 4: <L3> [INV]>

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  _9 = &SignalDataPtr_loc_18->HiWord;
  FilterResult_new_differs_x_26 = Com_EB_FilterUint32 (&ComFilterProp_loc, _9);
  # DEBUG FilterResult_new_differs_x => FilterResult_new_differs_x_26
  # DEBUG BEGIN_STMT
  FilterResult_27 = FilterResult_20 | FilterResult_new_differs_x_26;
  # DEBUG FilterResult => FilterResult_27
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  _10 = &SignalDataPtr_loc_18->HiWord;
  FilterResult_new_equals_x_23 = Com_EB_FilterUint32 (&ComFilterProp_loc, _10);
  # DEBUG FilterResult_new_equals_x => FilterResult_new_equals_x_23
  # DEBUG BEGIN_STMT
  FilterResult_24 = FilterResult_20 & FilterResult_new_equals_x_23;
  # DEBUG FilterResult => FilterResult_24
  # DEBUG BEGIN_STMT

  <bb 7> :
  # FilterResult_11 = PHI <FilterResult_29(3), FilterResult_27(5), FilterResult_24(6), FilterResult_20(4)>
<L9>:
  # DEBUG FilterResult => FilterResult_11
  # DEBUG BEGIN_STMT
  _30 = FilterResult_11;
  ComFilterProp_loc ={v} {CLOBBER};
  return _30;

}


Com_EB_FilterUint64 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint8 FilterResult_new_equals_x;
  uint8 FilterResult_new_differs_x;
  const struct ComEmu64Type * SignalDataPtr_loc;
  struct ComFilterConfType ComFilterProp_loc;
  uint8 FilterResult;
  unsigned char _1;
  short unsigned int _2;
  const uint32 * _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned char _7;
  int _8;
  const uint32 * _9;
  const uint32 * _10;
  boolean _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_13 = 0;
  # DEBUG FilterResult => FilterResult_13
  # DEBUG BEGIN_STMT
  ComFilterProp_loc = *ComFilterPropPtr_15(D);
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_18 = SignalDataPtr_17(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_18
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_15(D)->ComFilterType;
  if (_1 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = ComFilterPropPtr_15(D)->ComFilterRef;
  FilterResult_29 = Com_EB_FilterOneEveryN (_2);
  # DEBUG FilterResult => FilterResult_29
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = &SignalDataPtr_loc_18->LoWord;
  FilterResult_20 = Com_EB_FilterUint32 (ComFilterPropPtr_15(D), _3);
  # DEBUG FilterResult => FilterResult_20
  # DEBUG BEGIN_STMT
  _4 = ComFilterProp_loc.ComFilterRef;
  _5 = _4;
  _6 = _5 + 1;
  ComFilterProp_loc.ComFilterRef = _6;
  # DEBUG BEGIN_STMT
  _7 = ComFilterPropPtr_15(D)->ComFilterType;
  _8 = (int) _7;
  switch (_8) <default: <L9> [INV], case 3: <L2> [INV], case 4: <L3> [INV]>

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  _9 = &SignalDataPtr_loc_18->HiWord;
  FilterResult_new_differs_x_26 = Com_EB_FilterUint32 (&ComFilterProp_loc, _9);
  # DEBUG FilterResult_new_differs_x => FilterResult_new_differs_x_26
  # DEBUG BEGIN_STMT
  FilterResult_27 = FilterResult_20 | FilterResult_new_differs_x_26;
  # DEBUG FilterResult => FilterResult_27
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  _10 = &SignalDataPtr_loc_18->HiWord;
  FilterResult_new_equals_x_23 = Com_EB_FilterUint32 (&ComFilterProp_loc, _10);
  # DEBUG FilterResult_new_equals_x => FilterResult_new_equals_x_23
  # DEBUG BEGIN_STMT
  FilterResult_24 = FilterResult_20 & FilterResult_new_equals_x_23;
  # DEBUG FilterResult => FilterResult_24
  # DEBUG BEGIN_STMT

  <bb 7> :
  # FilterResult_11 = PHI <FilterResult_29(3), FilterResult_27(5), FilterResult_24(6), FilterResult_20(4)>
<L9>:
  # DEBUG FilterResult => FilterResult_11
  # DEBUG BEGIN_STMT
  _30 = FilterResult_11;
  ComFilterProp_loc ={v} {CLOBBER};
  return _30;

}


Com_EB_FilterSint32 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  sint32 * const bufferBaseSint32;
  uint32 XOrMax;
  uint32 maskOrMin;
  const struct ComFilter32BitMaskXMinMaxType * const FilterPtr;
  sint32 oldVal;
  uint32 * const bufferBaseSint32;
  uint32 mask;
  const ComFilter32BitMaskType * const maskPtr;
  sint32 NewVal;
  boolean FilterResult;
  unsigned char _1;
  int _2;
  const struct Com_ConfigType * Com_gConfigPtr.236_3;
  const struct Com_ConfigType * Com_gConfigPtr.237_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  uint8 * Com_gDataMemPtr.238_10;
  const struct Com_ConfigType * Com_gConfigPtr.239_11;
  short unsigned int _12;
  sizetype _13;
  short unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  uint32 * _17;
  long unsigned int _18;
  long unsigned int NewVal.240_19;
  long unsigned int oldVal.241_20;
  long unsigned int _21;
  long unsigned int _22;
  _Bool _23;
  short unsigned int _24;
  const struct Com_ConfigType * Com_gConfigPtr.242_25;
  const struct Com_ConfigType * Com_gConfigPtr.243_26;
  long unsigned int _27;
  short unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  sizetype _31;
  unsigned char _32;
  int _33;
  long unsigned int NewVal.244_34;
  long unsigned int _35;
  _Bool _36;
  long unsigned int NewVal.245_37;
  long unsigned int _38;
  _Bool _39;
  long int maskOrMin.247_40;
  long int XOrMax.248_41;
  long int maskOrMin.250_42;
  long int XOrMax.251_43;
  short unsigned int _44;
  uint8 * Com_gDataMemPtr.252_45;
  const struct Com_ConfigType * Com_gConfigPtr.253_46;
  short unsigned int _47;
  sizetype _48;
  short unsigned int _49;
  unsigned int _50;
  unsigned int _51;
  sint32 * _52;
  int iftmp.246_54;
  int iftmp.249_55;
  int iftmp.246_73;
  int iftmp.246_74;
  int iftmp.249_76;
  int iftmp.249_77;
  boolean _83;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_58 = 0;
  # DEBUG FilterResult => FilterResult_58
  # DEBUG BEGIN_STMT
  NewVal_61 = MEM[(const sint32 *)SignalDataPtr_60(D)];
  # DEBUG NewVal => NewVal_61
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_62(D)->ComFilterType;
  _2 = (int) _1;
  switch (_2) <default: <L2> [INV], case 2: <L0> [INV], case 7: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.236_3 = Com_gConfigPtr;
  Com_gConfigPtr.237_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.237_4->ComFilter32BitMaskRef;
  _6 = ComFilterPropPtr_62(D)->ComFilterRef;
  _7 = (unsigned int) _6;
  _8 = _7 * 4;
  _9 = _5 + _8;
  maskPtr_65 = Com_gConfigPtr.236_3 + _9;
  # DEBUG maskPtr => maskPtr_65
  # DEBUG BEGIN_STMT
  mask_66 = *maskPtr_65;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.238_10 = Com_gDataMemPtr;
  Com_gConfigPtr.239_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.239_11->ComBufferBaseSInt32;
  _13 = (sizetype) _12;
  bufferBaseSint32_67 = Com_gDataMemPtr.238_10 + _13;
  # DEBUG bufferBaseSint32 => bufferBaseSint32_67
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = ComFilterPropPtr_62(D)->ComFilterSignalValueRef;
  _15 = (unsigned int) _14;
  _16 = _15 * 4;
  _17 = bufferBaseSint32_67 + _16;
  _18 = *_17;
  oldVal_68 = (sint32) _18;
  # DEBUG oldVal => oldVal_68
  # DEBUG BEGIN_STMT
  NewVal.240_19 = (long unsigned int) NewVal_61;
  oldVal.241_20 = (long unsigned int) oldVal_68;
  _21 = NewVal.240_19 ^ oldVal.241_20;
  _22 = mask_66 & _21;
  _23 = _22 != 0;
  FilterResult_69 = (boolean) _23;
  # DEBUG FilterResult => FilterResult_69
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _24 = ComFilterPropPtr_62(D)->ComFilterRef;
  FilterResult_64 = Com_EB_FilterOneEveryN (_24);
  # DEBUG FilterResult => FilterResult_64
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.242_25 = Com_gConfigPtr;
  Com_gConfigPtr.243_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.243_26->ComFilter32BitMaskXMinMaxRef;
  _28 = ComFilterPropPtr_62(D)->ComFilterRef;
  _29 = (unsigned int) _28;
  _30 = _29 * 8;
  _31 = _27 + _30;
  FilterPtr_70 = Com_gConfigPtr.242_25 + _31;
  # DEBUG FilterPtr => FilterPtr_70
  # DEBUG BEGIN_STMT
  maskOrMin_71 = FilterPtr_70->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_71
  # DEBUG BEGIN_STMT
  XOrMax_72 = FilterPtr_70->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_72
  # DEBUG BEGIN_STMT
  _32 = ComFilterPropPtr_62(D)->ComFilterType;
  _33 = (int) _32;
  switch (_33) <default: <L24> [INV], case 3: <L4> [INV], case 4: <L3> [INV], case 5: <L10> [INV], case 6: <L5> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  NewVal.244_34 = (long unsigned int) NewVal_61;
  _35 = maskOrMin_71 & NewVal.244_34;
  _36 = XOrMax_72 == _35;
  FilterResult_79 = (boolean) _36;
  # DEBUG FilterResult => FilterResult_79
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  NewVal.245_37 = (long unsigned int) NewVal_61;
  _38 = maskOrMin_71 & NewVal.245_37;
  _39 = XOrMax_72 != _38;
  FilterResult_80 = (boolean) _39;
  # DEBUG FilterResult => FilterResult_80
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  maskOrMin.247_40 = (long int) maskOrMin_71;
  if (NewVal_61 >= maskOrMin.247_40)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  XOrMax.248_41 = (long int) XOrMax_72;
  if (NewVal_61 <= XOrMax.248_41)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.246_73 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.246_74 = 0;

  <bb 12> :
  # iftmp.246_54 = PHI <iftmp.246_73(10), iftmp.246_74(11)>
  FilterResult_75 = (boolean) iftmp.246_54;
  # DEBUG FilterResult => FilterResult_75
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 13> :
<L10>:
  # DEBUG BEGIN_STMT
  maskOrMin.250_42 = (long int) maskOrMin_71;
  if (NewVal_61 < maskOrMin.250_42)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  XOrMax.251_43 = (long int) XOrMax_72;
  if (NewVal_61 > XOrMax.251_43)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.249_77 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.249_76 = 0;

  <bb 17> :
  # iftmp.249_55 = PHI <iftmp.249_77(15), iftmp.249_76(16)>
  FilterResult_78 = (boolean) iftmp.249_55;
  # DEBUG FilterResult => FilterResult_78
  # DEBUG BEGIN_STMT

  <bb 18> :
  # FilterResult_53 = PHI <FilterResult_69(3), FilterResult_64(4), FilterResult_80(7), FilterResult_79(6), FilterResult_58(5), FilterResult_78(17), FilterResult_75(12)>
<L24>:
  # DEBUG FilterResult => FilterResult_53
  # DEBUG BEGIN_STMT
  if (FilterResult_53 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _44 = ComFilterPropPtr_62(D)->ComFilterSignalValueRef;
  if (_44 != 65535)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.252_45 = Com_gDataMemPtr;
  Com_gConfigPtr.253_46 = Com_gConfigPtr;
  _47 = Com_gConfigPtr.253_46->ComBufferBaseSInt32;
  _48 = (sizetype) _47;
  bufferBaseSint32_81 = Com_gDataMemPtr.252_45 + _48;
  # DEBUG bufferBaseSint32 => bufferBaseSint32_81
  # DEBUG BEGIN_STMT
  _49 = ComFilterPropPtr_62(D)->ComFilterSignalValueRef;
  _50 = (unsigned int) _49;
  _51 = _50 * 4;
  _52 = bufferBaseSint32_81 + _51;
  *_52 = NewVal_61;

  <bb 21> :
  # DEBUG BEGIN_STMT
  _83 = FilterResult_53;
  return _83;

}


Com_EB_FilterUint32 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint32 * const bufferBaseUint32;
  uint32 XOrMax;
  uint32 maskOrMin;
  const struct ComFilter32BitMaskXMinMaxType * const FilterPtr;
  uint32 oldVal;
  uint32 * const bufferBaseUint32;
  uint32 mask;
  const ComFilter32BitMaskType * const maskPtr;
  uint32 NewVal;
  boolean FilterResult;
  unsigned char _1;
  int _2;
  const struct Com_ConfigType * Com_gConfigPtr.190_3;
  const struct Com_ConfigType * Com_gConfigPtr.191_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  uint8 * Com_gDataMemPtr.192_10;
  const struct Com_ConfigType * Com_gConfigPtr.193_11;
  short unsigned int _12;
  sizetype _13;
  short unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  uint32 * _17;
  long unsigned int _18;
  long unsigned int _19;
  _Bool _20;
  short unsigned int _21;
  const struct Com_ConfigType * Com_gConfigPtr.194_22;
  const struct Com_ConfigType * Com_gConfigPtr.195_23;
  long unsigned int _24;
  short unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  sizetype _28;
  unsigned char _29;
  int _30;
  long unsigned int _31;
  _Bool _32;
  long unsigned int _33;
  _Bool _34;
  short unsigned int _35;
  uint8 * Com_gDataMemPtr.198_36;
  const struct Com_ConfigType * Com_gConfigPtr.199_37;
  short unsigned int _38;
  sizetype _39;
  short unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  uint32 * _43;
  int iftmp.196_45;
  int iftmp.197_46;
  int iftmp.196_64;
  int iftmp.196_65;
  int iftmp.197_67;
  int iftmp.197_68;
  boolean _74;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_49 = 0;
  # DEBUG FilterResult => FilterResult_49
  # DEBUG BEGIN_STMT
  NewVal_52 = MEM[(const uint32 *)SignalDataPtr_51(D)];
  # DEBUG NewVal => NewVal_52
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_53(D)->ComFilterType;
  _2 = (int) _1;
  switch (_2) <default: <L2> [INV], case 2: <L0> [INV], case 7: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.190_3 = Com_gConfigPtr;
  Com_gConfigPtr.191_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.191_4->ComFilter32BitMaskRef;
  _6 = ComFilterPropPtr_53(D)->ComFilterRef;
  _7 = (unsigned int) _6;
  _8 = _7 * 4;
  _9 = _5 + _8;
  maskPtr_56 = Com_gConfigPtr.190_3 + _9;
  # DEBUG maskPtr => maskPtr_56
  # DEBUG BEGIN_STMT
  mask_57 = *maskPtr_56;
  # DEBUG mask => mask_57
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.192_10 = Com_gDataMemPtr;
  Com_gConfigPtr.193_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.193_11->ComBufferBaseUInt32;
  _13 = (sizetype) _12;
  bufferBaseUint32_58 = Com_gDataMemPtr.192_10 + _13;
  # DEBUG bufferBaseUint32 => bufferBaseUint32_58
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = ComFilterPropPtr_53(D)->ComFilterSignalValueRef;
  _15 = (unsigned int) _14;
  _16 = _15 * 4;
  _17 = bufferBaseUint32_58 + _16;
  oldVal_59 = *_17;
  # DEBUG oldVal => oldVal_59
  # DEBUG BEGIN_STMT
  _18 = NewVal_52 ^ oldVal_59;
  _19 = mask_57 & _18;
  _20 = _19 != 0;
  FilterResult_60 = (boolean) _20;
  # DEBUG FilterResult => FilterResult_60
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _21 = ComFilterPropPtr_53(D)->ComFilterRef;
  FilterResult_55 = Com_EB_FilterOneEveryN (_21);
  # DEBUG FilterResult => FilterResult_55
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.194_22 = Com_gConfigPtr;
  Com_gConfigPtr.195_23 = Com_gConfigPtr;
  _24 = Com_gConfigPtr.195_23->ComFilter32BitMaskXMinMaxRef;
  _25 = ComFilterPropPtr_53(D)->ComFilterRef;
  _26 = (unsigned int) _25;
  _27 = _26 * 8;
  _28 = _24 + _27;
  FilterPtr_61 = Com_gConfigPtr.194_22 + _28;
  # DEBUG FilterPtr => FilterPtr_61
  # DEBUG BEGIN_STMT
  maskOrMin_62 = FilterPtr_61->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_62
  # DEBUG BEGIN_STMT
  XOrMax_63 = FilterPtr_61->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_63
  # DEBUG BEGIN_STMT
  _29 = ComFilterPropPtr_53(D)->ComFilterType;
  _30 = (int) _29;
  switch (_30) <default: <L24> [INV], case 3: <L4> [INV], case 4: <L3> [INV], case 5: <L10> [INV], case 6: <L5> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  _31 = NewVal_52 & maskOrMin_62;
  _32 = XOrMax_63 == _31;
  FilterResult_70 = (boolean) _32;
  # DEBUG FilterResult => FilterResult_70
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  _33 = NewVal_52 & maskOrMin_62;
  _34 = XOrMax_63 != _33;
  FilterResult_71 = (boolean) _34;
  # DEBUG FilterResult => FilterResult_71
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  if (maskOrMin_62 <= NewVal_52)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  if (NewVal_52 <= XOrMax_63)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.196_64 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.196_65 = 0;

  <bb 12> :
  # iftmp.196_45 = PHI <iftmp.196_64(10), iftmp.196_65(11)>
  FilterResult_66 = (boolean) iftmp.196_45;
  # DEBUG FilterResult => FilterResult_66
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 13> :
<L10>:
  # DEBUG BEGIN_STMT
  if (maskOrMin_62 > NewVal_52)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  if (NewVal_52 > XOrMax_63)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.197_68 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.197_67 = 0;

  <bb 17> :
  # iftmp.197_46 = PHI <iftmp.197_68(15), iftmp.197_67(16)>
  FilterResult_69 = (boolean) iftmp.197_46;
  # DEBUG FilterResult => FilterResult_69
  # DEBUG BEGIN_STMT

  <bb 18> :
  # FilterResult_44 = PHI <FilterResult_60(3), FilterResult_55(4), FilterResult_71(7), FilterResult_70(6), FilterResult_49(5), FilterResult_69(17), FilterResult_66(12)>
<L24>:
  # DEBUG FilterResult => FilterResult_44
  # DEBUG BEGIN_STMT
  if (FilterResult_44 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _35 = ComFilterPropPtr_53(D)->ComFilterSignalValueRef;
  if (_35 != 65535)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.198_36 = Com_gDataMemPtr;
  Com_gConfigPtr.199_37 = Com_gConfigPtr;
  _38 = Com_gConfigPtr.199_37->ComBufferBaseUInt32;
  _39 = (sizetype) _38;
  bufferBaseUint32_72 = Com_gDataMemPtr.198_36 + _39;
  # DEBUG bufferBaseUint32 => bufferBaseUint32_72
  # DEBUG BEGIN_STMT
  _40 = ComFilterPropPtr_53(D)->ComFilterSignalValueRef;
  _41 = (unsigned int) _40;
  _42 = _41 * 4;
  _43 = bufferBaseUint32_72 + _42;
  *_43 = NewVal_52;

  <bb 21> :
  # DEBUG BEGIN_STMT
  _74 = FilterResult_44;
  return _74;

}


Com_EB_FilterSint16 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  sint16 * const bufferBaseSint16;
  uint16 XOrMax;
  uint16 maskOrMin;
  const struct ComFilter16BitMaskXMinMaxType * const FilterPtr;
  sint16 oldVal;
  uint16 * const bufferBaseSint16;
  uint16 mask;
  const ComFilter16BitMaskType * const maskPtr;
  sint16 NewVal;
  boolean FilterResult;
  unsigned char _1;
  int _2;
  const struct Com_ConfigType * Com_gConfigPtr.218_3;
  const struct Com_ConfigType * Com_gConfigPtr.219_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  uint8 * Com_gDataMemPtr.220_10;
  const struct Com_ConfigType * Com_gConfigPtr.221_11;
  short unsigned int _12;
  sizetype _13;
  short unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  uint16 * _17;
  short unsigned int _18;
  short unsigned int NewVal.222_19;
  short unsigned int oldVal.223_20;
  short unsigned int _21;
  short unsigned int _22;
  _Bool _23;
  short unsigned int _24;
  const struct Com_ConfigType * Com_gConfigPtr.224_25;
  const struct Com_ConfigType * Com_gConfigPtr.225_26;
  long unsigned int _27;
  short unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  sizetype _31;
  unsigned char _32;
  int _33;
  short unsigned int NewVal.226_34;
  short unsigned int _35;
  _Bool _36;
  short unsigned int NewVal.227_37;
  short unsigned int _38;
  _Bool _39;
  short int maskOrMin.229_40;
  short int XOrMax.230_41;
  short int maskOrMin.232_42;
  short int XOrMax.233_43;
  short unsigned int _44;
  uint8 * Com_gDataMemPtr.234_45;
  const struct Com_ConfigType * Com_gConfigPtr.235_46;
  short unsigned int _47;
  sizetype _48;
  short unsigned int _49;
  unsigned int _50;
  unsigned int _51;
  sint16 * _52;
  int iftmp.228_54;
  int iftmp.231_55;
  int iftmp.228_73;
  int iftmp.228_74;
  int iftmp.231_76;
  int iftmp.231_77;
  boolean _83;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_58 = 0;
  # DEBUG FilterResult => FilterResult_58
  # DEBUG BEGIN_STMT
  NewVal_61 = MEM[(const sint16 *)SignalDataPtr_60(D)];
  # DEBUG NewVal => NewVal_61
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_62(D)->ComFilterType;
  _2 = (int) _1;
  switch (_2) <default: <L2> [INV], case 2: <L0> [INV], case 7: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.218_3 = Com_gConfigPtr;
  Com_gConfigPtr.219_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.219_4->ComFilter16BitMaskRef;
  _6 = ComFilterPropPtr_62(D)->ComFilterRef;
  _7 = (unsigned int) _6;
  _8 = _7 * 2;
  _9 = _5 + _8;
  maskPtr_65 = Com_gConfigPtr.218_3 + _9;
  # DEBUG maskPtr => maskPtr_65
  # DEBUG BEGIN_STMT
  mask_66 = *maskPtr_65;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.220_10 = Com_gDataMemPtr;
  Com_gConfigPtr.221_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.221_11->ComBufferBaseSInt16;
  _13 = (sizetype) _12;
  bufferBaseSint16_67 = Com_gDataMemPtr.220_10 + _13;
  # DEBUG bufferBaseSint16 => bufferBaseSint16_67
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = ComFilterPropPtr_62(D)->ComFilterSignalValueRef;
  _15 = (unsigned int) _14;
  _16 = _15 * 2;
  _17 = bufferBaseSint16_67 + _16;
  _18 = *_17;
  oldVal_68 = (sint16) _18;
  # DEBUG oldVal => oldVal_68
  # DEBUG BEGIN_STMT
  NewVal.222_19 = (short unsigned int) NewVal_61;
  oldVal.223_20 = (short unsigned int) oldVal_68;
  _21 = NewVal.222_19 ^ oldVal.223_20;
  _22 = mask_66 & _21;
  _23 = _22 != 0;
  FilterResult_69 = (boolean) _23;
  # DEBUG FilterResult => FilterResult_69
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _24 = ComFilterPropPtr_62(D)->ComFilterRef;
  FilterResult_64 = Com_EB_FilterOneEveryN (_24);
  # DEBUG FilterResult => FilterResult_64
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.224_25 = Com_gConfigPtr;
  Com_gConfigPtr.225_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.225_26->ComFilter16BitMaskXMinMaxRef;
  _28 = ComFilterPropPtr_62(D)->ComFilterRef;
  _29 = (unsigned int) _28;
  _30 = _29 * 4;
  _31 = _27 + _30;
  FilterPtr_70 = Com_gConfigPtr.224_25 + _31;
  # DEBUG FilterPtr => FilterPtr_70
  # DEBUG BEGIN_STMT
  maskOrMin_71 = FilterPtr_70->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_71
  # DEBUG BEGIN_STMT
  XOrMax_72 = FilterPtr_70->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_72
  # DEBUG BEGIN_STMT
  _32 = ComFilterPropPtr_62(D)->ComFilterType;
  _33 = (int) _32;
  switch (_33) <default: <L24> [INV], case 3: <L4> [INV], case 4: <L3> [INV], case 5: <L10> [INV], case 6: <L5> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  NewVal.226_34 = (short unsigned int) NewVal_61;
  _35 = maskOrMin_71 & NewVal.226_34;
  _36 = XOrMax_72 == _35;
  FilterResult_79 = (boolean) _36;
  # DEBUG FilterResult => FilterResult_79
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  NewVal.227_37 = (short unsigned int) NewVal_61;
  _38 = maskOrMin_71 & NewVal.227_37;
  _39 = XOrMax_72 != _38;
  FilterResult_80 = (boolean) _39;
  # DEBUG FilterResult => FilterResult_80
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  maskOrMin.229_40 = (short int) maskOrMin_71;
  if (NewVal_61 >= maskOrMin.229_40)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  XOrMax.230_41 = (short int) XOrMax_72;
  if (NewVal_61 <= XOrMax.230_41)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.228_73 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.228_74 = 0;

  <bb 12> :
  # iftmp.228_54 = PHI <iftmp.228_73(10), iftmp.228_74(11)>
  FilterResult_75 = (boolean) iftmp.228_54;
  # DEBUG FilterResult => FilterResult_75
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 13> :
<L10>:
  # DEBUG BEGIN_STMT
  maskOrMin.232_42 = (short int) maskOrMin_71;
  if (NewVal_61 < maskOrMin.232_42)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  XOrMax.233_43 = (short int) XOrMax_72;
  if (NewVal_61 > XOrMax.233_43)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.231_77 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.231_76 = 0;

  <bb 17> :
  # iftmp.231_55 = PHI <iftmp.231_77(15), iftmp.231_76(16)>
  FilterResult_78 = (boolean) iftmp.231_55;
  # DEBUG FilterResult => FilterResult_78
  # DEBUG BEGIN_STMT

  <bb 18> :
  # FilterResult_53 = PHI <FilterResult_69(3), FilterResult_64(4), FilterResult_80(7), FilterResult_79(6), FilterResult_58(5), FilterResult_78(17), FilterResult_75(12)>
<L24>:
  # DEBUG FilterResult => FilterResult_53
  # DEBUG BEGIN_STMT
  if (FilterResult_53 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _44 = ComFilterPropPtr_62(D)->ComFilterSignalValueRef;
  if (_44 != 65535)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.234_45 = Com_gDataMemPtr;
  Com_gConfigPtr.235_46 = Com_gConfigPtr;
  _47 = Com_gConfigPtr.235_46->ComBufferBaseSInt16;
  _48 = (sizetype) _47;
  bufferBaseSint16_81 = Com_gDataMemPtr.234_45 + _48;
  # DEBUG bufferBaseSint16 => bufferBaseSint16_81
  # DEBUG BEGIN_STMT
  _49 = ComFilterPropPtr_62(D)->ComFilterSignalValueRef;
  _50 = (unsigned int) _49;
  _51 = _50 * 2;
  _52 = bufferBaseSint16_81 + _51;
  *_52 = NewVal_61;

  <bb 21> :
  # DEBUG BEGIN_STMT
  _83 = FilterResult_53;
  return _83;

}


Com_EB_FilterUint16 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint16 * const bufferBaseUint16;
  uint16 XOrMax;
  uint16 maskOrMin;
  const struct ComFilter16BitMaskXMinMaxType * const FilterPtr;
  uint16 oldVal;
  uint16 * const bufferBaseUint16;
  uint16 mask;
  const ComFilter16BitMaskType * const maskPtr;
  uint16 NewVal;
  boolean FilterResult;
  unsigned char _1;
  int _2;
  const struct Com_ConfigType * Com_gConfigPtr.180_3;
  const struct Com_ConfigType * Com_gConfigPtr.181_4;
  long unsigned int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  uint8 * Com_gDataMemPtr.182_10;
  const struct Com_ConfigType * Com_gConfigPtr.183_11;
  short unsigned int _12;
  sizetype _13;
  short unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  uint16 * _17;
  short unsigned int _18;
  short unsigned int _19;
  _Bool _20;
  short unsigned int _21;
  const struct Com_ConfigType * Com_gConfigPtr.184_22;
  const struct Com_ConfigType * Com_gConfigPtr.185_23;
  long unsigned int _24;
  short unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  sizetype _28;
  unsigned char _29;
  int _30;
  short unsigned int _31;
  _Bool _32;
  short unsigned int _33;
  _Bool _34;
  short unsigned int _35;
  uint8 * Com_gDataMemPtr.188_36;
  const struct Com_ConfigType * Com_gConfigPtr.189_37;
  short unsigned int _38;
  sizetype _39;
  short unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  uint16 * _43;
  int iftmp.186_45;
  int iftmp.187_46;
  int iftmp.186_64;
  int iftmp.186_65;
  int iftmp.187_67;
  int iftmp.187_68;
  boolean _74;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_49 = 0;
  # DEBUG FilterResult => FilterResult_49
  # DEBUG BEGIN_STMT
  NewVal_52 = MEM[(const uint16 *)SignalDataPtr_51(D)];
  # DEBUG NewVal => NewVal_52
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_53(D)->ComFilterType;
  _2 = (int) _1;
  switch (_2) <default: <L2> [INV], case 2: <L0> [INV], case 7: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.180_3 = Com_gConfigPtr;
  Com_gConfigPtr.181_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.181_4->ComFilter16BitMaskRef;
  _6 = ComFilterPropPtr_53(D)->ComFilterRef;
  _7 = (unsigned int) _6;
  _8 = _7 * 2;
  _9 = _5 + _8;
  maskPtr_56 = Com_gConfigPtr.180_3 + _9;
  # DEBUG maskPtr => maskPtr_56
  # DEBUG BEGIN_STMT
  mask_57 = *maskPtr_56;
  # DEBUG mask => mask_57
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.182_10 = Com_gDataMemPtr;
  Com_gConfigPtr.183_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.183_11->ComBufferBaseUInt16;
  _13 = (sizetype) _12;
  bufferBaseUint16_58 = Com_gDataMemPtr.182_10 + _13;
  # DEBUG bufferBaseUint16 => bufferBaseUint16_58
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _14 = ComFilterPropPtr_53(D)->ComFilterSignalValueRef;
  _15 = (unsigned int) _14;
  _16 = _15 * 2;
  _17 = bufferBaseUint16_58 + _16;
  oldVal_59 = *_17;
  # DEBUG oldVal => oldVal_59
  # DEBUG BEGIN_STMT
  _18 = NewVal_52 ^ oldVal_59;
  _19 = mask_57 & _18;
  _20 = _19 != 0;
  FilterResult_60 = (boolean) _20;
  # DEBUG FilterResult => FilterResult_60
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _21 = ComFilterPropPtr_53(D)->ComFilterRef;
  FilterResult_55 = Com_EB_FilterOneEveryN (_21);
  # DEBUG FilterResult => FilterResult_55
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.184_22 = Com_gConfigPtr;
  Com_gConfigPtr.185_23 = Com_gConfigPtr;
  _24 = Com_gConfigPtr.185_23->ComFilter16BitMaskXMinMaxRef;
  _25 = ComFilterPropPtr_53(D)->ComFilterRef;
  _26 = (unsigned int) _25;
  _27 = _26 * 4;
  _28 = _24 + _27;
  FilterPtr_61 = Com_gConfigPtr.184_22 + _28;
  # DEBUG FilterPtr => FilterPtr_61
  # DEBUG BEGIN_STMT
  maskOrMin_62 = FilterPtr_61->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_62
  # DEBUG BEGIN_STMT
  XOrMax_63 = FilterPtr_61->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_63
  # DEBUG BEGIN_STMT
  _29 = ComFilterPropPtr_53(D)->ComFilterType;
  _30 = (int) _29;
  switch (_30) <default: <L24> [INV], case 3: <L4> [INV], case 4: <L3> [INV], case 5: <L10> [INV], case 6: <L5> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  _31 = NewVal_52 & maskOrMin_62;
  _32 = XOrMax_63 == _31;
  FilterResult_70 = (boolean) _32;
  # DEBUG FilterResult => FilterResult_70
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  _33 = NewVal_52 & maskOrMin_62;
  _34 = XOrMax_63 != _33;
  FilterResult_71 = (boolean) _34;
  # DEBUG FilterResult => FilterResult_71
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  if (maskOrMin_62 <= NewVal_52)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  if (NewVal_52 <= XOrMax_63)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.186_64 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.186_65 = 0;

  <bb 12> :
  # iftmp.186_45 = PHI <iftmp.186_64(10), iftmp.186_65(11)>
  FilterResult_66 = (boolean) iftmp.186_45;
  # DEBUG FilterResult => FilterResult_66
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 13> :
<L10>:
  # DEBUG BEGIN_STMT
  if (maskOrMin_62 > NewVal_52)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  if (NewVal_52 > XOrMax_63)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.187_68 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.187_67 = 0;

  <bb 17> :
  # iftmp.187_46 = PHI <iftmp.187_68(15), iftmp.187_67(16)>
  FilterResult_69 = (boolean) iftmp.187_46;
  # DEBUG FilterResult => FilterResult_69
  # DEBUG BEGIN_STMT

  <bb 18> :
  # FilterResult_44 = PHI <FilterResult_60(3), FilterResult_55(4), FilterResult_71(7), FilterResult_70(6), FilterResult_49(5), FilterResult_69(17), FilterResult_66(12)>
<L24>:
  # DEBUG FilterResult => FilterResult_44
  # DEBUG BEGIN_STMT
  if (FilterResult_44 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _35 = ComFilterPropPtr_53(D)->ComFilterSignalValueRef;
  if (_35 != 65535)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.188_36 = Com_gDataMemPtr;
  Com_gConfigPtr.189_37 = Com_gConfigPtr;
  _38 = Com_gConfigPtr.189_37->ComBufferBaseUInt16;
  _39 = (sizetype) _38;
  bufferBaseUint16_72 = Com_gDataMemPtr.188_36 + _39;
  # DEBUG bufferBaseUint16 => bufferBaseUint16_72
  # DEBUG BEGIN_STMT
  _40 = ComFilterPropPtr_53(D)->ComFilterSignalValueRef;
  _41 = (unsigned int) _40;
  _42 = _41 * 2;
  _43 = bufferBaseUint16_72 + _42;
  *_43 = NewVal_52;

  <bb 21> :
  # DEBUG BEGIN_STMT
  _74 = FilterResult_44;
  return _74;

}


Com_EB_FilterSint8 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  sint8 * const bufferBaseSint8;
  uint8 XOrMax;
  uint8 maskOrMin;
  const struct ComFilter8BitMaskXMinMaxType * const FilterPtr;
  sint8 oldVal;
  uint8 * const bufferBaseSint8;
  uint8 mask;
  const ComFilter8BitMaskType * const maskPtr;
  sint8 NewVal;
  boolean FilterResult;
  unsigned char _1;
  int _2;
  const struct Com_ConfigType * Com_gConfigPtr.200_3;
  const struct Com_ConfigType * Com_gConfigPtr.201_4;
  long unsigned int _5;
  short unsigned int _6;
  sizetype _7;
  sizetype _8;
  uint8 * Com_gDataMemPtr.202_9;
  const struct Com_ConfigType * Com_gConfigPtr.203_10;
  short unsigned int _11;
  sizetype _12;
  short unsigned int _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  unsigned char NewVal.204_17;
  unsigned char oldVal.205_18;
  unsigned char _19;
  unsigned char _20;
  _Bool _21;
  short unsigned int _22;
  const struct Com_ConfigType * Com_gConfigPtr.206_23;
  const struct Com_ConfigType * Com_gConfigPtr.207_24;
  long unsigned int _25;
  short unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  sizetype _29;
  unsigned char _30;
  int _31;
  unsigned char NewVal.208_32;
  unsigned char _33;
  _Bool _34;
  unsigned char NewVal.209_35;
  unsigned char _36;
  _Bool _37;
  signed char maskOrMin.211_38;
  signed char XOrMax.212_39;
  signed char maskOrMin.214_40;
  signed char XOrMax.215_41;
  short unsigned int _42;
  uint8 * Com_gDataMemPtr.216_43;
  const struct Com_ConfigType * Com_gConfigPtr.217_44;
  short unsigned int _45;
  sizetype _46;
  short unsigned int _47;
  sizetype _48;
  sint8 * _49;
  int iftmp.210_51;
  int iftmp.213_52;
  int iftmp.210_70;
  int iftmp.210_71;
  int iftmp.213_73;
  int iftmp.213_74;
  boolean _80;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_55 = 0;
  # DEBUG FilterResult => FilterResult_55
  # DEBUG BEGIN_STMT
  NewVal_58 = MEM[(const sint8 *)SignalDataPtr_57(D)];
  # DEBUG NewVal => NewVal_58
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_59(D)->ComFilterType;
  _2 = (int) _1;
  switch (_2) <default: <L2> [INV], case 2: <L0> [INV], case 7: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.200_3 = Com_gConfigPtr;
  Com_gConfigPtr.201_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.201_4->ComFilter8BitMaskRef;
  _6 = ComFilterPropPtr_59(D)->ComFilterRef;
  _7 = (sizetype) _6;
  _8 = _5 + _7;
  maskPtr_62 = Com_gConfigPtr.200_3 + _8;
  # DEBUG maskPtr => maskPtr_62
  # DEBUG BEGIN_STMT
  mask_63 = *maskPtr_62;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.202_9 = Com_gDataMemPtr;
  Com_gConfigPtr.203_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.203_10->ComBufferBaseSInt8;
  _12 = (sizetype) _11;
  bufferBaseSint8_64 = Com_gDataMemPtr.202_9 + _12;
  # DEBUG bufferBaseSint8 => bufferBaseSint8_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _13 = ComFilterPropPtr_59(D)->ComFilterSignalValueRef;
  _14 = (sizetype) _13;
  _15 = bufferBaseSint8_64 + _14;
  _16 = *_15;
  oldVal_65 = (sint8) _16;
  # DEBUG oldVal => oldVal_65
  # DEBUG BEGIN_STMT
  NewVal.204_17 = (unsigned char) NewVal_58;
  oldVal.205_18 = (unsigned char) oldVal_65;
  _19 = NewVal.204_17 ^ oldVal.205_18;
  _20 = mask_63 & _19;
  _21 = _20 != 0;
  FilterResult_66 = (boolean) _21;
  # DEBUG FilterResult => FilterResult_66
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _22 = ComFilterPropPtr_59(D)->ComFilterRef;
  FilterResult_61 = Com_EB_FilterOneEveryN (_22);
  # DEBUG FilterResult => FilterResult_61
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.206_23 = Com_gConfigPtr;
  Com_gConfigPtr.207_24 = Com_gConfigPtr;
  _25 = Com_gConfigPtr.207_24->ComFilter8BitMaskXMinMaxRef;
  _26 = ComFilterPropPtr_59(D)->ComFilterRef;
  _27 = (unsigned int) _26;
  _28 = _27 * 2;
  _29 = _25 + _28;
  FilterPtr_67 = Com_gConfigPtr.206_23 + _29;
  # DEBUG FilterPtr => FilterPtr_67
  # DEBUG BEGIN_STMT
  maskOrMin_68 = FilterPtr_67->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_68
  # DEBUG BEGIN_STMT
  XOrMax_69 = FilterPtr_67->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_69
  # DEBUG BEGIN_STMT
  _30 = ComFilterPropPtr_59(D)->ComFilterType;
  _31 = (int) _30;
  switch (_31) <default: <L24> [INV], case 3: <L4> [INV], case 4: <L3> [INV], case 5: <L10> [INV], case 6: <L5> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  NewVal.208_32 = (unsigned char) NewVal_58;
  _33 = maskOrMin_68 & NewVal.208_32;
  _34 = XOrMax_69 == _33;
  FilterResult_76 = (boolean) _34;
  # DEBUG FilterResult => FilterResult_76
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  NewVal.209_35 = (unsigned char) NewVal_58;
  _36 = maskOrMin_68 & NewVal.209_35;
  _37 = XOrMax_69 != _36;
  FilterResult_77 = (boolean) _37;
  # DEBUG FilterResult => FilterResult_77
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  maskOrMin.211_38 = (signed char) maskOrMin_68;
  if (NewVal_58 >= maskOrMin.211_38)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  XOrMax.212_39 = (signed char) XOrMax_69;
  if (NewVal_58 <= XOrMax.212_39)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.210_70 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.210_71 = 0;

  <bb 12> :
  # iftmp.210_51 = PHI <iftmp.210_70(10), iftmp.210_71(11)>
  FilterResult_72 = (boolean) iftmp.210_51;
  # DEBUG FilterResult => FilterResult_72
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 13> :
<L10>:
  # DEBUG BEGIN_STMT
  maskOrMin.214_40 = (signed char) maskOrMin_68;
  if (NewVal_58 < maskOrMin.214_40)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  XOrMax.215_41 = (signed char) XOrMax_69;
  if (NewVal_58 > XOrMax.215_41)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.213_74 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.213_73 = 0;

  <bb 17> :
  # iftmp.213_52 = PHI <iftmp.213_74(15), iftmp.213_73(16)>
  FilterResult_75 = (boolean) iftmp.213_52;
  # DEBUG FilterResult => FilterResult_75
  # DEBUG BEGIN_STMT

  <bb 18> :
  # FilterResult_50 = PHI <FilterResult_66(3), FilterResult_61(4), FilterResult_77(7), FilterResult_76(6), FilterResult_55(5), FilterResult_75(17), FilterResult_72(12)>
<L24>:
  # DEBUG FilterResult => FilterResult_50
  # DEBUG BEGIN_STMT
  if (FilterResult_50 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _42 = ComFilterPropPtr_59(D)->ComFilterSignalValueRef;
  if (_42 != 65535)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.216_43 = Com_gDataMemPtr;
  Com_gConfigPtr.217_44 = Com_gConfigPtr;
  _45 = Com_gConfigPtr.217_44->ComBufferBaseSInt8;
  _46 = (sizetype) _45;
  bufferBaseSint8_78 = Com_gDataMemPtr.216_43 + _46;
  # DEBUG bufferBaseSint8 => bufferBaseSint8_78
  # DEBUG BEGIN_STMT
  _47 = ComFilterPropPtr_59(D)->ComFilterSignalValueRef;
  _48 = (sizetype) _47;
  _49 = bufferBaseSint8_78 + _48;
  *_49 = NewVal_58;

  <bb 21> :
  # DEBUG BEGIN_STMT
  _80 = FilterResult_50;
  return _80;

}


Com_EB_FilterUint8 (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint8 * const bufferBaseUint8;
  uint8 XOrMax;
  uint8 maskOrMin;
  const struct ComFilter8BitMaskXMinMaxType * const FilterPtr;
  uint8 oldVal;
  uint8 * const bufferBaseUint8;
  uint8 mask;
  const ComFilter8BitMaskType * const maskPtr;
  uint8 NewVal;
  boolean FilterResult;
  unsigned char _1;
  int _2;
  const struct Com_ConfigType * Com_gConfigPtr.170_3;
  const struct Com_ConfigType * Com_gConfigPtr.171_4;
  long unsigned int _5;
  short unsigned int _6;
  sizetype _7;
  sizetype _8;
  uint8 * Com_gDataMemPtr.172_9;
  const struct Com_ConfigType * Com_gConfigPtr.173_10;
  short unsigned int _11;
  sizetype _12;
  short unsigned int _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  unsigned char _17;
  _Bool _18;
  short unsigned int _19;
  const struct Com_ConfigType * Com_gConfigPtr.174_20;
  const struct Com_ConfigType * Com_gConfigPtr.175_21;
  long unsigned int _22;
  short unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  sizetype _26;
  unsigned char _27;
  int _28;
  unsigned char _29;
  _Bool _30;
  unsigned char _31;
  _Bool _32;
  short unsigned int _33;
  uint8 * Com_gDataMemPtr.178_34;
  const struct Com_ConfigType * Com_gConfigPtr.179_35;
  short unsigned int _36;
  sizetype _37;
  short unsigned int _38;
  sizetype _39;
  uint8 * _40;
  int iftmp.176_42;
  int iftmp.177_43;
  int iftmp.176_61;
  int iftmp.176_62;
  int iftmp.177_64;
  int iftmp.177_65;
  boolean _71;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_46 = 0;
  # DEBUG FilterResult => FilterResult_46
  # DEBUG BEGIN_STMT
  NewVal_49 = MEM[(const uint8 *)SignalDataPtr_48(D)];
  # DEBUG NewVal => NewVal_49
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_50(D)->ComFilterType;
  _2 = (int) _1;
  switch (_2) <default: <L2> [INV], case 2: <L0> [INV], case 7: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.170_3 = Com_gConfigPtr;
  Com_gConfigPtr.171_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.171_4->ComFilter8BitMaskRef;
  _6 = ComFilterPropPtr_50(D)->ComFilterRef;
  _7 = (sizetype) _6;
  _8 = _5 + _7;
  maskPtr_53 = Com_gConfigPtr.170_3 + _8;
  # DEBUG maskPtr => maskPtr_53
  # DEBUG BEGIN_STMT
  mask_54 = *maskPtr_53;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.172_9 = Com_gDataMemPtr;
  Com_gConfigPtr.173_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.173_10->ComBufferBaseUInt8;
  _12 = (sizetype) _11;
  bufferBaseUint8_55 = Com_gDataMemPtr.172_9 + _12;
  # DEBUG bufferBaseUint8 => bufferBaseUint8_55
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _13 = ComFilterPropPtr_50(D)->ComFilterSignalValueRef;
  _14 = (sizetype) _13;
  _15 = bufferBaseUint8_55 + _14;
  oldVal_56 = *_15;
  # DEBUG oldVal => oldVal_56
  # DEBUG BEGIN_STMT
  _16 = NewVal_49 ^ oldVal_56;
  _17 = mask_54 & _16;
  _18 = _17 != 0;
  FilterResult_57 = (boolean) _18;
  # DEBUG FilterResult => FilterResult_57
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _19 = ComFilterPropPtr_50(D)->ComFilterRef;
  FilterResult_52 = Com_EB_FilterOneEveryN (_19);
  # DEBUG FilterResult => FilterResult_52
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.174_20 = Com_gConfigPtr;
  Com_gConfigPtr.175_21 = Com_gConfigPtr;
  _22 = Com_gConfigPtr.175_21->ComFilter8BitMaskXMinMaxRef;
  _23 = ComFilterPropPtr_50(D)->ComFilterRef;
  _24 = (unsigned int) _23;
  _25 = _24 * 2;
  _26 = _22 + _25;
  FilterPtr_58 = Com_gConfigPtr.174_20 + _26;
  # DEBUG FilterPtr => FilterPtr_58
  # DEBUG BEGIN_STMT
  maskOrMin_59 = FilterPtr_58->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_59
  # DEBUG BEGIN_STMT
  XOrMax_60 = FilterPtr_58->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_60
  # DEBUG BEGIN_STMT
  _27 = ComFilterPropPtr_50(D)->ComFilterType;
  _28 = (int) _27;
  switch (_28) <default: <L24> [INV], case 3: <L4> [INV], case 4: <L3> [INV], case 5: <L10> [INV], case 6: <L5> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  _29 = NewVal_49 & maskOrMin_59;
  _30 = XOrMax_60 == _29;
  FilterResult_67 = (boolean) _30;
  # DEBUG FilterResult => FilterResult_67
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  _31 = NewVal_49 & maskOrMin_59;
  _32 = XOrMax_60 != _31;
  FilterResult_68 = (boolean) _32;
  # DEBUG FilterResult => FilterResult_68
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  if (maskOrMin_59 <= NewVal_49)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  if (NewVal_49 <= XOrMax_60)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.176_61 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.176_62 = 0;

  <bb 12> :
  # iftmp.176_42 = PHI <iftmp.176_61(10), iftmp.176_62(11)>
  FilterResult_63 = (boolean) iftmp.176_42;
  # DEBUG FilterResult => FilterResult_63
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 13> :
<L10>:
  # DEBUG BEGIN_STMT
  if (maskOrMin_59 > NewVal_49)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  if (NewVal_49 > XOrMax_60)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.177_65 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.177_64 = 0;

  <bb 17> :
  # iftmp.177_43 = PHI <iftmp.177_65(15), iftmp.177_64(16)>
  FilterResult_66 = (boolean) iftmp.177_43;
  # DEBUG FilterResult => FilterResult_66
  # DEBUG BEGIN_STMT

  <bb 18> :
  # FilterResult_41 = PHI <FilterResult_57(3), FilterResult_52(4), FilterResult_68(7), FilterResult_67(6), FilterResult_46(5), FilterResult_66(17), FilterResult_63(12)>
<L24>:
  # DEBUG FilterResult => FilterResult_41
  # DEBUG BEGIN_STMT
  if (FilterResult_41 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _33 = ComFilterPropPtr_50(D)->ComFilterSignalValueRef;
  if (_33 != 65535)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.178_34 = Com_gDataMemPtr;
  Com_gConfigPtr.179_35 = Com_gConfigPtr;
  _36 = Com_gConfigPtr.179_35->ComBufferBaseUInt8;
  _37 = (sizetype) _36;
  bufferBaseUint8_69 = Com_gDataMemPtr.178_34 + _37;
  # DEBUG bufferBaseUint8 => bufferBaseUint8_69
  # DEBUG BEGIN_STMT
  _38 = ComFilterPropPtr_50(D)->ComFilterSignalValueRef;
  _39 = (sizetype) _38;
  _40 = bufferBaseUint8_69 + _39;
  *_40 = NewVal_49;

  <bb 21> :
  # DEBUG BEGIN_STMT
  _71 = FilterResult_41;
  return _71;

}


Com_EB_FilterBoolean (const struct ComFilterConfType * ComFilterPropPtr, const void * SignalDataPtr)
{
  uint8 * const bufferBaseBool;
  uint8 XOrMax;
  uint8 maskOrMin;
  const struct ComFilter8BitMaskXMinMaxType * const FilterPtr;
  uint8 oldVal;
  uint8 * const bufferBaseBool;
  uint8 mask;
  const ComFilter8BitMaskType * const maskPtr;
  uint8 NewVal;
  boolean FilterResult;
  unsigned char _1;
  int _2;
  const struct Com_ConfigType * Com_gConfigPtr.157_3;
  const struct Com_ConfigType * Com_gConfigPtr.158_4;
  long unsigned int _5;
  short unsigned int _6;
  sizetype _7;
  sizetype _8;
  uint8 * Com_gDataMemPtr.159_9;
  const struct Com_ConfigType * Com_gConfigPtr.160_10;
  short unsigned int _11;
  sizetype _12;
  short unsigned int _13;
  short unsigned int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  int _18;
  short unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  int _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  _Bool _26;
  short unsigned int _27;
  const struct Com_ConfigType * Com_gConfigPtr.161_28;
  const struct Com_ConfigType * Com_gConfigPtr.162_29;
  long unsigned int _30;
  short unsigned int _31;
  unsigned int _32;
  unsigned int _33;
  sizetype _34;
  unsigned char _35;
  int _36;
  unsigned char _37;
  _Bool _38;
  unsigned char _39;
  _Bool _40;
  short unsigned int _41;
  uint8 * Com_gDataMemPtr.163_42;
  const struct Com_ConfigType * Com_gConfigPtr.164_43;
  short unsigned int _44;
  sizetype _45;
  short unsigned int _46;
  short unsigned int _47;
  sizetype _48;
  uint8 * _49;
  short unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  short unsigned int _53;
  short unsigned int _54;
  sizetype _55;
  uint8 * _56;
  short unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  boolean _83;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_63 = 0;
  # DEBUG FilterResult => FilterResult_63
  # DEBUG BEGIN_STMT
  NewVal_66 = MEM[(const boolean *)SignalDataPtr_65(D)];
  # DEBUG NewVal => NewVal_66
  # DEBUG BEGIN_STMT
  _1 = ComFilterPropPtr_67(D)->ComFilterType;
  _2 = (int) _1;
  switch (_2) <default: <L2> [INV], case 2: <L0> [INV], case 7: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.157_3 = Com_gConfigPtr;
  Com_gConfigPtr.158_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.158_4->ComFilter8BitMaskRef;
  _6 = ComFilterPropPtr_67(D)->ComFilterRef;
  _7 = (sizetype) _6;
  _8 = _5 + _7;
  maskPtr_70 = Com_gConfigPtr.157_3 + _8;
  # DEBUG maskPtr => maskPtr_70
  # DEBUG BEGIN_STMT
  mask_71 = *maskPtr_70;
  # DEBUG mask => mask_71
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.159_9 = Com_gDataMemPtr;
  Com_gConfigPtr.160_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.160_10->ComBufferBaseBool;
  _12 = (sizetype) _11;
  bufferBaseBool_72 = Com_gDataMemPtr.159_9 + _12;
  # DEBUG bufferBaseBool => bufferBaseBool_72
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _13 = ComFilterPropPtr_67(D)->ComFilterSignalValueRef;
  _14 = _13 / 8;
  _15 = (sizetype) _14;
  _16 = bufferBaseBool_72 + _15;
  _17 = *_16;
  _18 = (int) _17;
  _19 = ComFilterPropPtr_67(D)->ComFilterSignalValueRef;
  _20 = (unsigned int) _19;
  _21 = _20 & 7;
  _22 = _18 >> _21;
  _23 = (unsigned char) _22;
  oldVal_73 = _23 & 1;
  # DEBUG oldVal => oldVal_73
  # DEBUG BEGIN_STMT
  _24 = NewVal_66 ^ oldVal_73;
  _25 = mask_71 & _24;
  _26 = _25 != 0;
  FilterResult_74 = (boolean) _26;
  # DEBUG FilterResult => FilterResult_74
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _27 = ComFilterPropPtr_67(D)->ComFilterRef;
  FilterResult_69 = Com_EB_FilterOneEveryN (_27);
  # DEBUG FilterResult => FilterResult_69
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.161_28 = Com_gConfigPtr;
  Com_gConfigPtr.162_29 = Com_gConfigPtr;
  _30 = Com_gConfigPtr.162_29->ComFilter8BitMaskXMinMaxRef;
  _31 = ComFilterPropPtr_67(D)->ComFilterRef;
  _32 = (unsigned int) _31;
  _33 = _32 * 2;
  _34 = _30 + _33;
  FilterPtr_75 = Com_gConfigPtr.161_28 + _34;
  # DEBUG FilterPtr => FilterPtr_75
  # DEBUG BEGIN_STMT
  maskOrMin_76 = FilterPtr_75->ComFilterMaskOrMin;
  # DEBUG maskOrMin => maskOrMin_76
  # DEBUG BEGIN_STMT
  XOrMax_77 = FilterPtr_75->ComFilterXOrMax;
  # DEBUG XOrMax => XOrMax_77
  # DEBUG BEGIN_STMT
  _35 = ComFilterPropPtr_67(D)->ComFilterType;
  _36 = (int) _35;
  switch (_36) <default: <L17> [INV], case 3: <L4> [INV], case 4: <L3> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  _37 = NewVal_66 & maskOrMin_76;
  _38 = XOrMax_77 == _37;
  FilterResult_78 = (boolean) _38;
  # DEBUG FilterResult => FilterResult_78
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  _39 = NewVal_66 & maskOrMin_76;
  _40 = XOrMax_77 != _39;
  FilterResult_79 = (boolean) _40;
  # DEBUG FilterResult => FilterResult_79
  # DEBUG BEGIN_STMT

  <bb 8> :
  # FilterResult_60 = PHI <FilterResult_74(3), FilterResult_69(4), FilterResult_79(7), FilterResult_78(6), FilterResult_63(5)>
<L17>:
  # DEBUG FilterResult => FilterResult_60
  # DEBUG BEGIN_STMT
  if (FilterResult_60 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 9> :
  _41 = ComFilterPropPtr_67(D)->ComFilterSignalValueRef;
  if (_41 != 65535)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.163_42 = Com_gDataMemPtr;
  Com_gConfigPtr.164_43 = Com_gConfigPtr;
  _44 = Com_gConfigPtr.164_43->ComBufferBaseBool;
  _45 = (sizetype) _44;
  bufferBaseBool_80 = Com_gDataMemPtr.163_42 + _45;
  # DEBUG bufferBaseBool => bufferBaseBool_80
  # DEBUG BEGIN_STMT
  if (NewVal_66 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _46 = ComFilterPropPtr_67(D)->ComFilterSignalValueRef;
  _47 = _46 / 8;
  _48 = (sizetype) _47;
  _49 = bufferBaseBool_80 + _48;
  _50 = ComFilterPropPtr_67(D)->ComFilterSignalValueRef;
  _51 = (long unsigned int) _50;
  _52 = _51 & 7;
  TS_AtomicSetBit_8 (_49, _52);
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _53 = ComFilterPropPtr_67(D)->ComFilterSignalValueRef;
  _54 = _53 / 8;
  _55 = (sizetype) _54;
  _56 = bufferBaseBool_80 + _55;
  _57 = ComFilterPropPtr_67(D)->ComFilterSignalValueRef;
  _58 = (long unsigned int) _57;
  _59 = _58 & 7;
  TS_AtomicClearBit_8 (_56, _59);

  <bb 13> :
  # DEBUG BEGIN_STMT
  _83 = FilterResult_60;
  return _83;

}


Com_EB_FilterOneEveryN (ComFilterRefType ComFilterRef)
{
  ComFilterOneEveryNSizeType * occurrencebase;
  ComFilterOneEveryNSizeType occurrence;
  ComFilterOneEveryNSizeType offset;
  ComFilterOneEveryNSizeType period;
  const struct ComFilterOneEveryNType * const ComFilterOneEveryNPtr;
  boolean FilterResult;
  const struct Com_ConfigType * Com_gConfigPtr.165_1;
  const struct Com_ConfigType * Com_gConfigPtr.166_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  uint8 * Com_gDataMemPtr.167_7;
  const struct Com_ConfigType * Com_gConfigPtr.168_8;
  short unsigned int _9;
  sizetype _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  ComFilterOneEveryNSizeType * _14;
  _Bool _15;
  short unsigned int occurrence.169_16;
  short unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  ComFilterOneEveryNSizeType * _20;
  short unsigned int _21;
  boolean _34;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.165_1 = Com_gConfigPtr;
  Com_gConfigPtr.166_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.166_2->ComFilterOneEveryNRef;
  _4 = (unsigned int) ComFilterRef_23(D);
  _5 = _4 * 6;
  _6 = _3 + _5;
  ComFilterOneEveryNPtr_24 = Com_gConfigPtr.165_1 + _6;
  # DEBUG ComFilterOneEveryNPtr => ComFilterOneEveryNPtr_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  offset_25 = ComFilterOneEveryNPtr_24->ComFilterOffset;
  # DEBUG offset => offset_25
  # DEBUG BEGIN_STMT
  period_26 = ComFilterOneEveryNPtr_24->ComFilterPeriodFactor;
  # DEBUG period => period_26
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.167_7 = Com_gDataMemPtr;
  Com_gConfigPtr.168_8 = Com_gConfigPtr;
  _9 = Com_gConfigPtr.168_8->ComFilterOneEveryNBase;
  _10 = (sizetype) _9;
  occurrencebase_27 = Com_gDataMemPtr.167_7 + _10;
  # DEBUG occurrencebase => occurrencebase_27
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = ComFilterOneEveryNPtr_24->ComFilterOccurrence;
  _12 = (unsigned int) _11;
  _13 = _12 * 2;
  _14 = occurrencebase_27 + _13;
  occurrence_29 = *_14;
  # DEBUG occurrence => occurrence_29
  # DEBUG BEGIN_STMT
  _15 = occurrence_29 == offset_25;
  FilterResult_30 = (boolean) _15;
  # DEBUG FilterResult => FilterResult_30
  # DEBUG BEGIN_STMT
  occurrence.169_16 = occurrence_29;
  occurrence_31 = occurrence.169_16 + 1;
  # DEBUG occurrence => occurrence_31
  # DEBUG BEGIN_STMT
  _17 = ComFilterOneEveryNPtr_24->ComFilterOccurrence;
  _18 = (unsigned int) _17;
  _19 = _18 * 2;
  _20 = occurrencebase_27 + _19;
  _21 = occurrence_31 % period_26;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _34 = FilterResult_30;
  return _34;

}


Com_ReceptionDMControl (uint8 * ipduGroupVector)
{
  unsigned char Com_InitStatus.499_1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.499_1 = Com_InitStatus;
  if (Com_InitStatus.499_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 6, 2);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ipduGroupVector_4(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 6, 3);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_EB_HandlePduGroupRx (1, ipduGroupVector_4(D), 0);

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Com_IpduGroupControl (uint8 * ipduGroupVector, boolean Initialize)
{
  unsigned char Com_InitStatus.315_1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.315_1 = Com_InitStatus;
  if (Com_InitStatus.315_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 3, 2);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ipduGroupVector_4(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 3, 3);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_EB_HandlePduGroupRx (0, ipduGroupVector_4(D), Initialize_5(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_EB_HandlePduGroupTx (ipduGroupVector_4(D), Initialize_5(D));

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_SetupTxSignalGroup (const uint8 * SGArrayPtr, uint16 SGArrayLength, uint8 (*<T68a>) (const uint8 *, uint16, const struct ComTxSignalGroupType *, ComIPduRefType, const struct ComTxIPduType *, boolean) Com_TxSignalGroupFPtr, const struct ComTxSignalGroupType * SignalGPtr, uint8 * retvalPtr, boolean SendInMainFunctionTx)
{
  const struct ComTxIPduType * const IPduPtr;
  const ComIPduRefType PduId;
  const struct Com_ConfigType * Com_gConfigPtr.625_1;
  const struct Com_ConfigType * Com_gConfigPtr.626_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  unsigned char _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PduId_10 = SignalGPtr_9(D)->ComIPduRef;
  # DEBUG PduId => PduId_10
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.625_1 = Com_gConfigPtr;
  Com_gConfigPtr.626_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.626_2->ComTxIPduRef;
  _4 = (unsigned int) PduId_10;
  _5 = _4 * 64;
  _6 = _3 + _5;
  IPduPtr_11 = Com_gConfigPtr.625_1 + _6;
  # DEBUG IPduPtr => IPduPtr_11
  # DEBUG BEGIN_STMT
  _7 = Com_TxSignalGroupFPtr_12(D) (SGArrayPtr_13(D), SGArrayLength_14(D), SignalGPtr_9(D), PduId_10, IPduPtr_11, SendInMainFunctionTx_15(D));
  *retvalPtr_17(D) = _7;
  return;

}


Com_EB_SetGroupSignalTMSFlagOfSignalGroup (const struct ComTxSignalGroupType * SignalGPtr, const uint8 * SGArrayPtr)
{
  const struct ComTxSignalType * const GSignalPtr;
  const ComSignalRefType GSignalId;
  boolean TMSResult;
  Com_SignalIdType i;
  const struct Com_ConfigType * Com_gConfigPtr.573_1;
  const struct Com_ConfigType * Com_gConfigPtr.574_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const ComSignalRefType * _7;
  const struct Com_ConfigType * Com_gConfigPtr.575_8;
  const struct Com_ConfigType * Com_gConfigPtr.576_9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  const struct ComSignalBaseType * _14;
  const struct ComFilterConfType * _15;
  short unsigned int i.577_16;
  int _17;
  short unsigned int _18;
  int _19;
  short unsigned int _20;
  int _21;
  int _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_27 = SignalGPtr_26(D)->ComGroupSignalRefFirst;
  # DEBUG i => i_27
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.573_1 = Com_gConfigPtr;
  Com_gConfigPtr.574_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.574_2->ComTxSignalGroupGroupSignalListRef;
  _4 = (unsigned int) i_23;
  _5 = _4 * 2;
  _6 = _3 + _5;
  _7 = Com_gConfigPtr.573_1 + _6;
  GSignalId_28 = *_7;
  # DEBUG GSignalId => GSignalId_28
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.575_8 = Com_gConfigPtr;
  Com_gConfigPtr.576_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.576_9->ComTxSignalRef;
  _11 = (unsigned int) GSignalId_28;
  _12 = _11 * 26;
  _13 = _10 + _12;
  GSignalPtr_29 = Com_gConfigPtr.575_8 + _13;
  # DEBUG GSignalPtr => GSignalPtr_29
  # DEBUG BEGIN_STMT
  _14 = &GSignalPtr_29->ComSignalBase;
  _15 = &GSignalPtr_29->ComSignalBase.ComFilterConf;
  TMSResult_32 = Com_EB_CalculateFilter (_14, SGArrayPtr_30(D), _15);
  # DEBUG TMSResult => TMSResult_32
  # DEBUG BEGIN_STMT
  Com_EB_CalculateGroupSignalTM (GSignalPtr_29, SignalGPtr_26(D), TMSResult_32);
  # DEBUG BEGIN_STMT
  i.577_16 = i_23;
  i_34 = i.577_16 + 1;
  # DEBUG i => i_34

  <bb 4> :
  # i_23 = PHI <i_27(2), i_34(3)>
  # DEBUG i => i_23
  # DEBUG BEGIN_STMT
  _17 = (int) i_23;
  _18 = SignalGPtr_26(D)->ComGroupSignalWithFilterRefNum;
  _19 = (int) _18;
  _20 = SignalGPtr_26(D)->ComGroupSignalRefFirst;
  _21 = (int) _20;
  _22 = _19 + _21;
  if (_17 < _22)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_CalculateGroupSignalTM (const struct ComTxSignalType * GSignalPtr, const struct ComTxSignalGroupType * SignalGPtr, boolean TMSResult)
{
  const ComSignalGroupRefType SignalGId;
  boolean CurrentTM;
  boolean OldFilterResult;
  uint8 * const FlagPtr;
  uint8 * Com_gDataMemPtr.254_1;
  short unsigned int _2;
  unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned char _8;
  int _9;
  short unsigned int _10;
  unsigned char _11;
  int _12;
  int _13;
  int _14;
  unsigned char _15;
  uint8 * Com_gDataMemPtr.255_16;
  const struct Com_ConfigType * Com_gConfigPtr.256_17;
  short unsigned int _18;
  int _19;
  int _20;
  int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  uint8 * Com_gDataMemPtr.257_25;
  const struct Com_ConfigType * Com_gConfigPtr.258_26;
  short unsigned int _27;
  int _28;
  int _29;
  int _30;
  sizetype _31;
  uint8 * _32;
  uint8 * Com_gDataMemPtr.259_33;
  const struct Com_ConfigType * Com_gConfigPtr.260_34;
  short unsigned int _35;
  int _36;
  int _37;
  int _38;
  sizetype _39;
  uint8 * _40;
  short unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  short unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.254_1 = Com_gDataMemPtr;
  _2 = SignalGPtr_51(D)->ComSignalGTMSFlagsRef;
  _3 = (unsigned int) _2;
  _4 = GSignalPtr_52(D)->ComPositionOfTMSFlag;
  _5 = _4 / 8;
  _6 = (unsigned int) _5;
  _7 = _3 + _6;
  FlagPtr_53 = Com_gDataMemPtr.254_1 + _7;
  # DEBUG FlagPtr => FlagPtr_53
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalGId_54 = GSignalPtr_52(D)->ComSignalBase.ComSignalGroupRef;
  # DEBUG SignalGId => SignalGId_54
  # DEBUG BEGIN_STMT
  _8 = *FlagPtr_53;
  _9 = (int) _8;
  _10 = GSignalPtr_52(D)->ComPositionOfTMSFlag;
  _11 = (unsigned char) _10;
  _12 = (int) _11;
  _13 = _12 & 7;
  _14 = _9 >> _13;
  _15 = (unsigned char) _14;
  OldFilterResult_55 = _15 & 1;
  # DEBUG OldFilterResult => OldFilterResult_55
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.255_16 = Com_gDataMemPtr;
  Com_gConfigPtr.256_17 = Com_gConfigPtr;
  _18 = Com_gConfigPtr.256_17->ComTxSignalGroupStatusBase;
  _19 = (int) _18;
  _20 = (int) SignalGId_54;
  _21 = _19 + _20;
  _22 = (sizetype) _21;
  _23 = Com_gDataMemPtr.255_16 + _22;
  _24 = *_23;
  CurrentTM_56 = _24 & 1;
  # DEBUG CurrentTM => CurrentTM_56
  # DEBUG BEGIN_STMT
  if (TMSResult_57(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (OldFilterResult_55 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  if (CurrentTM_56 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.257_25 = Com_gDataMemPtr;
  Com_gConfigPtr.258_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.258_26->ComTxSignalGroupStatusBase;
  _28 = (int) _27;
  _29 = (int) SignalGId_54;
  _30 = _28 + _29;
  _31 = (sizetype) _30;
  _32 = Com_gDataMemPtr.257_25 + _31;
  TS_AtomicSetBit_8 (_32, 1);

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (TMSResult_57(D) != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (CurrentTM_56 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.259_33 = Com_gDataMemPtr;
  Com_gConfigPtr.260_34 = Com_gConfigPtr;
  _35 = Com_gConfigPtr.260_34->ComTxSignalGroupStatusBase;
  _36 = (int) _35;
  _37 = (int) SignalGId_54;
  _38 = _36 + _37;
  _39 = (sizetype) _38;
  _40 = Com_gDataMemPtr.259_33 + _39;
  TS_AtomicSetBit_8 (_40, 1);

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (TMSResult_57(D) == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _41 = GSignalPtr_52(D)->ComPositionOfTMSFlag;
  _42 = (long unsigned int) _41;
  _43 = _42 & 7;
  TS_AtomicSetBit_8 (FlagPtr_53, _43);
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _44 = GSignalPtr_52(D)->ComPositionOfTMSFlag;
  _45 = (long unsigned int) _44;
  _46 = _45 & 7;
  TS_AtomicClearBit_8 (FlagPtr_53, _46);

  <bb 12> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_InitSGBuffer (uint8 * SGArrayPtr, const struct ComTxSignalGroupType * SignalGPtr, const struct ComTxIPduType * IPduPtr)
{
  const uint8 * const pduBuffer;
  const ComSignalDescByteType byteSize;
  uint8 * Com_gDataMemPtr.441_1;
  short unsigned int _2;
  int _3;
  short unsigned int _4;
  int _5;
  int _6;
  sizetype _7;
  long unsigned int _8;
  uint16 _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  byteSize_11 = SignalGPtr_10(D)->ComByteSize;
  # DEBUG byteSize => byteSize_11
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.441_1 = Com_gDataMemPtr;
  _2 = IPduPtr_12(D)->ComIPduValueRef;
  _3 = (int) _2;
  _4 = SignalGPtr_10(D)->ComSignalPositionInByte;
  _5 = (int) _4;
  _6 = _3 + _5;
  _7 = (sizetype) _6;
  pduBuffer_13 = Com_gDataMemPtr.441_1 + _7;
  # DEBUG pduBuffer => pduBuffer_13
  # DEBUG BEGIN_STMT
  _8 = (long unsigned int) byteSize_11;
  TS_MemCpy32 (SGArrayPtr_14(D), pduBuffer_13, _8);
  # DEBUG BEGIN_STMT
  _16 = byteSize_11;
  return _16;

}


Com_EB_WriteShadowBuffer (const struct ComTxSignalGroupType * SignalGPtr, const struct ComTxIPduType * IPduPtr, const uint8 * SGArrayPtr)
{
  uint16 i;
  const uint8 * TOCMaskPtr;
  const uint8 * writeMaskPtr;
  ComSignalDescByteType StartingByte;
  ComSignalDescByteType byteOffset;
  const ComRAMIdxType ComIPduValueRef;
  const ComSignalDescByteType ByteSize;
  boolean forceTrigger;
  long unsigned int _1;
  const struct Com_ConfigType * Com_gConfigPtr.580_2;
  long unsigned int _3;
  long unsigned int _4;
  const struct Com_ConfigType * Com_gConfigPtr.582_5;
  long unsigned int _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  uint8 * Com_gDataMemPtr.583_10;
  int _11;
  int _12;
  int _13;
  sizetype _14;
  uint8 * _15;
  uint8 * Com_gDataMemPtr.584_16;
  int _17;
  int _18;
  int _19;
  sizetype _20;
  sizetype _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  sizetype _25;
  sizetype _26;
  sizetype _27;
  const uint8 * _28;
  unsigned char _29;
  unsigned char _30;
  sizetype _31;
  sizetype _32;
  sizetype _33;
  const uint8 * _34;
  unsigned char _35;
  unsigned char _36;
  sizetype _37;
  sizetype _38;
  sizetype _39;
  const uint8 * _40;
  uint8 * Com_gDataMemPtr.585_41;
  int _42;
  int _43;
  int _44;
  sizetype _45;
  sizetype _46;
  sizetype _47;
  uint8 * _48;
  unsigned char _49;
  short unsigned int i.586_50;
  uint8 * Com_gDataMemPtr.587_51;
  int _52;
  int _53;
  int _54;
  sizetype _55;
  uint8 * _56;
  sizetype _57;
  const uint8 * _58;
  long unsigned int _59;
  unsigned char _60;
  unsigned char _61;
  unsigned int _62;
  unsigned int _63;
  uint8 * Com_gDataMemPtr.588_64;
  short unsigned int _65;
  unsigned int _66;
  short unsigned int _67;
  short unsigned int _68;
  unsigned int _69;
  unsigned int _70;
  uint8 * _71;
  short unsigned int _72;
  long unsigned int _73;
  long unsigned int _74;
  const uint8 * iftmp.579_76;
  const uint8 * iftmp.581_77;
  const uint8 * iftmp.579_90;
  const uint8 * iftmp.579_91;
  const uint8 * iftmp.581_93;
  const uint8 * iftmp.581_94;
  boolean _108;

  <bb 2> :
  # DEBUG BEGIN_STMT
  forceTrigger = 0;
  # DEBUG BEGIN_STMT
  ByteSize_86 = SignalGPtr_85(D)->ComByteSize;
  # DEBUG ByteSize => ByteSize_86
  # DEBUG BEGIN_STMT
  ComIPduValueRef_88 = IPduPtr_87(D)->ComIPduValueRef;
  # DEBUG ComIPduValueRef => ComIPduValueRef_88
  # DEBUG BEGIN_STMT
  byteOffset_89 = 0;
  # DEBUG byteOffset => byteOffset_89
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = SignalGPtr_85(D)->ComWriteMaskRef;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Com_gConfigPtr.580_2 = Com_gConfigPtr;
  _3 = SignalGPtr_85(D)->ComWriteMaskRef;
  iftmp.579_91 = Com_gConfigPtr.580_2 + _3;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.579_90 = 0B;

  <bb 5> :
  # iftmp.579_76 = PHI <iftmp.579_91(3), iftmp.579_90(4)>
  writeMaskPtr_92 = iftmp.579_76;
  # DEBUG writeMaskPtr => writeMaskPtr_92
  # DEBUG BEGIN_STMT
  _4 = SignalGPtr_85(D)->ComTOCMaskRef;
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Com_gConfigPtr.582_5 = Com_gConfigPtr;
  _6 = SignalGPtr_85(D)->ComTOCMaskRef;
  iftmp.581_94 = Com_gConfigPtr.582_5 + _6;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.581_93 = 0B;

  <bb 8> :
  # iftmp.581_77 = PHI <iftmp.581_94(6), iftmp.581_93(7)>
  TOCMaskPtr_95 = iftmp.581_77;
  # DEBUG TOCMaskPtr => TOCMaskPtr_95
  # DEBUG BEGIN_STMT
  _7 = SignalGPtr_85(D)->ComTxSignalGroupFlags;
  _8 = (unsigned int) _7;
  _9 = _8 & 3;
  if (_9 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  forceTrigger = 1;

  <bb 10> :
  # DEBUG BEGIN_STMT
  StartingByte_97 = SignalGPtr_85(D)->ComSignalPositionInByte;
  # DEBUG StartingByte => StartingByte_97
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ByteSize_86 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (writeMaskPtr_92 != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.583_10 = Com_gDataMemPtr;
  _11 = (int) ComIPduValueRef_88;
  _12 = (int) StartingByte_97;
  _13 = _11 + _12;
  _14 = (sizetype) _13;
  _15 = Com_gDataMemPtr.583_10 + _14;
  Com_EB_WriteShadowBuffer_Fragment (_15, SGArrayPtr_99(D), writeMaskPtr_92, TOCMaskPtr_95, &forceTrigger, ByteSize_86);
  goto <bb 20>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (TOCMaskPtr_95 != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_101 = 0;
  # DEBUG i => i_101
  goto <bb 18>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.584_16 = Com_gDataMemPtr;
  _17 = (int) ComIPduValueRef_88;
  _18 = (int) StartingByte_97;
  _19 = _17 + _18;
  _20 = (sizetype) _19;
  _21 = (sizetype) i_75;
  _22 = _20 + _21;
  _23 = Com_gDataMemPtr.584_16 + _22;
  _24 = *_23;
  _25 = (sizetype) byteOffset_89;
  _26 = (sizetype) i_75;
  _27 = _25 + _26;
  _28 = SGArrayPtr_99(D) + _27;
  _29 = *_28;
  _30 = _24 ^ _29;
  _31 = (sizetype) byteOffset_89;
  _32 = (sizetype) i_75;
  _33 = _31 + _32;
  _34 = TOCMaskPtr_95 + _33;
  _35 = *_34;
  _36 = _30 & _35;
  if (_36 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  forceTrigger = 1;

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _37 = (sizetype) byteOffset_89;
  _38 = (sizetype) i_75;
  _39 = _37 + _38;
  _40 = SGArrayPtr_99(D) + _39;
  Com_gDataMemPtr.585_41 = Com_gDataMemPtr;
  _42 = (int) ComIPduValueRef_88;
  _43 = (int) StartingByte_97;
  _44 = _42 + _43;
  _45 = (sizetype) _44;
  _46 = (sizetype) i_75;
  _47 = _45 + _46;
  _48 = Com_gDataMemPtr.585_41 + _47;
  _49 = *_40;
  *_48 = _49;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i.586_50 = i_75;
  i_104 = i.586_50 + 1;
  # DEBUG i => i_104

  <bb 18> :
  # i_75 = PHI <i_101(14), i_104(17)>
  # DEBUG i => i_75
  # DEBUG BEGIN_STMT
  if (i_75 < ByteSize_86)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.587_51 = Com_gDataMemPtr;
  _52 = (int) ComIPduValueRef_88;
  _53 = (int) StartingByte_97;
  _54 = _52 + _53;
  _55 = (sizetype) _54;
  _56 = Com_gDataMemPtr.587_51 + _55;
  _57 = (sizetype) byteOffset_89;
  _58 = SGArrayPtr_99(D) + _57;
  _59 = (long unsigned int) ByteSize_86;
  TS_MemCpy32 (_56, _58, _59);

  <bb 20> :
  # DEBUG BEGIN_STMT
  _60 = SignalGPtr_85(D)->ComTxSignalGroupFlags;
  _61 = _60 >> 3;
  _62 = (unsigned int) _61;
  _63 = _62 & 1;
  if (_63 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.588_64 = Com_gDataMemPtr;
  _65 = IPduPtr_87(D)->ComIPduValueRef;
  _66 = (unsigned int) _65;
  _67 = SignalGPtr_85(D)->ComUpdateBitPositionInBit;
  _68 = _67 / 8;
  _69 = (unsigned int) _68;
  _70 = _66 + _69;
  _71 = Com_gDataMemPtr.588_64 + _70;
  _72 = SignalGPtr_85(D)->ComUpdateBitPositionInBit;
  _73 = (long unsigned int) _72;
  _74 = _73 & 7;
  TS_AtomicSetBit_8 (_71, _74);

  <bb 22> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _108 = forceTrigger;
  forceTrigger ={v} {CLOBBER};
  return _108;

}


Com_EB_WriteShadowBuffer_Fragment (uint8 * PduValPtr, const uint8 * SGArrayValPtr, const uint8 * WriteMaskPtr, const uint8 * TOCMaskPtr, boolean * forceTriggerPtr, ComSignalDescByteType ByteSize)
{
  uint8 valuePduCmp;
  uint8 writeMask;
  uint8 valueShadowBuffer;
  uint8 valuePdu;
  uint32 offset;
  uint8 * _1;
  const uint8 * _2;
  const uint8 * _3;
  unsigned char _4;
  uint8 * _5;
  unsigned char _6;
  const uint8 * _7;
  unsigned char _8;
  unsigned char _9;
  uint8 * _10;
  unsigned char _11;
  long unsigned int _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  offset_16 = 0;
  # DEBUG offset => offset_16
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = PduValPtr_19(D) + offset_13;
  valuePdu_20 = *_1;
  # DEBUG valuePdu => valuePdu_20
  # DEBUG BEGIN_STMT
  _2 = SGArrayValPtr_21(D) + offset_13;
  valueShadowBuffer_22 = *_2;
  # DEBUG valueShadowBuffer => valueShadowBuffer_22
  # DEBUG BEGIN_STMT
  _3 = WriteMaskPtr_23(D) + offset_13;
  writeMask_24 = *_3;
  # DEBUG writeMask => writeMask_24
  # DEBUG BEGIN_STMT
  _4 = ~writeMask_24;
  valuePdu_25 = valuePdu_20 & _4;
  # DEBUG valuePdu => valuePdu_25
  # DEBUG BEGIN_STMT
  valueShadowBuffer_26 = valueShadowBuffer_22 & writeMask_24;
  # DEBUG valueShadowBuffer => valueShadowBuffer_26
  # DEBUG BEGIN_STMT
  if (TOCMaskPtr_27(D) != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = PduValPtr_19(D) + offset_13;
  valuePduCmp_28 = *_5;
  # DEBUG valuePduCmp => valuePduCmp_28
  # DEBUG BEGIN_STMT
  valuePduCmp_29 = valuePduCmp_28 & writeMask_24;
  # DEBUG valuePduCmp => valuePduCmp_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = valuePduCmp_29 ^ valueShadowBuffer_26;
  _7 = TOCMaskPtr_27(D) + offset_13;
  _8 = *_7;
  _9 = _6 & _8;
  if (_9 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  *forceTriggerPtr_30(D) = 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = PduValPtr_19(D) + offset_13;
  _11 = valuePdu_25 | valueShadowBuffer_26;
  *_10 = _11;
  # DEBUG BEGIN_STMT
  offset_33 = offset_13 + 1;
  # DEBUG offset => offset_33

  <bb 7> :
  # offset_13 = PHI <offset_16(2), offset_33(6)>
  # DEBUG offset => offset_13
  # DEBUG BEGIN_STMT
  _12 = (long unsigned int) ByteSize_18(D);
  if (offset_13 < _12)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


Com_EB_CalculateSignalGroupTM (boolean forceTrigger, const struct ComTxSignalGroupType * SignalGPtr, const struct ComTxIPduType * IPduPtr, ComIPduRefType PduId, boolean SendInMainFunctionTx)
{
  boolean tms_changed;
  boolean trig_wo_rep;
  const uint8 AktTM;
  boolean CurrentTMIPDU;
  boolean newTM;
  uint16 numberOfFlagBytes;
  boolean CurrentTMSG;
  boolean newResult;
  uint16 j;
  uint8 * const SignalGTMFlagsBase;
  uint8 * const SGFlagPtr;
  ptrdiff_t offset;
  const struct ComTxSignalGroupType * firstSignalGPtr;
  ComSignalGroupRefType SignalGId;
  boolean TMSChanged;
  boolean transmit;
  uint8 * const PduStatusFlagsPtr;
  uint8 retval;
  uint8 * Com_gDataMemPtr.589_1;
  const struct Com_ConfigType * Com_gConfigPtr.590_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  const struct Com_ConfigType * Com_gConfigPtr.591_8;
  const struct Com_ConfigType * Com_gConfigPtr.592_9;
  long unsigned int _10;
  int _11;
  uint8 * Com_gDataMemPtr.593_12;
  const struct Com_ConfigType * Com_gConfigPtr.594_13;
  short unsigned int _14;
  int _15;
  int _16;
  int _17;
  sizetype _18;
  unsigned char _19;
  unsigned int _20;
  unsigned int _21;
  uint8 * Com_gDataMemPtr.595_22;
  short unsigned int _23;
  sizetype _24;
  unsigned char _25;
  unsigned char _26;
  short unsigned int _27;
  short unsigned int _28;
  short unsigned int _29;
  short unsigned int numberOfFlagBytes.596_30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  short unsigned int j.597_34;
  unsigned char _35;
  uint8 * Com_gDataMemPtr.598_36;
  short unsigned int _37;
  unsigned int _38;
  short unsigned int _39;
  short unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  uint8 * _43;
  unsigned char _44;
  short unsigned int _45;
  unsigned char _46;
  int _47;
  int _48;
  unsigned int _49;
  unsigned char _50;
  uint8 * Com_gDataMemPtr.599_51;
  short unsigned int _52;
  unsigned int _53;
  short unsigned int _54;
  short unsigned int _55;
  unsigned int _56;
  unsigned int _57;
  uint8 * _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  uint8 * Com_gDataMemPtr.600_62;
  short unsigned int _63;
  unsigned int _64;
  short unsigned int _65;
  short unsigned int _66;
  unsigned int _67;
  unsigned int _68;
  uint8 * _69;
  unsigned char _70;
  short unsigned int _71;
  unsigned char _72;
  int _73;
  int _74;
  unsigned int _75;
  unsigned char _76;
  unsigned char _77;
  uint8 * Com_gDataMemPtr.601_78;
  short unsigned int _79;
  unsigned int _80;
  short unsigned int _81;
  short unsigned int _82;
  unsigned int _83;
  unsigned int _84;
  uint8 * _85;
  unsigned char _86;
  unsigned char _87;
  unsigned char _88;
  unsigned char _89;
  unsigned char _90;
  unsigned char _91;
  unsigned char _92;
  unsigned char _93;
  unsigned char _94;
  unsigned char _95;
  unsigned char _96;
  unsigned char _97;
  unsigned char _98;
  unsigned char _99;
  unsigned int _100;
  unsigned int _101;
  unsigned char _102;
  unsigned char _103;
  unsigned int _104;
  unsigned int _105;
  _Bool _106;
  _Bool _107;
  const uint8 iftmp.602_115;
  const uint8 iftmp.602_152;
  const uint8 iftmp.602_153;
  uint8 _166;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.589_1 = Com_gDataMemPtr;
  Com_gConfigPtr.590_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.590_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_121(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  PduStatusFlagsPtr_122 = Com_gDataMemPtr.589_1 + _7;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_122
  # DEBUG BEGIN_STMT
  transmit_124 = forceTrigger_123(D);
  # DEBUG transmit => transmit_124
  # DEBUG BEGIN_STMT
  TMSChanged_125 = 0;
  # DEBUG TMSChanged => TMSChanged_125
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.591_8 = Com_gConfigPtr;
  Com_gConfigPtr.592_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.592_9->ComTxSignalGroupRef;
  firstSignalGPtr_126 = Com_gConfigPtr.591_8 + _10;
  # DEBUG firstSignalGPtr => firstSignalGPtr_126
  # DEBUG BEGIN_STMT
  _11 = SignalGPtr_127(D) - firstSignalGPtr_126;
  offset_128 = _11 /[ex] 32;
  # DEBUG offset => offset_128
  # DEBUG BEGIN_STMT
  SignalGId_129 = (ComSignalGroupRefType) offset_128;
  # DEBUG SignalGId => SignalGId_129
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.593_12 = Com_gDataMemPtr;
  Com_gConfigPtr.594_13 = Com_gConfigPtr;
  _14 = Com_gConfigPtr.594_13->ComTxSignalGroupStatusBase;
  _15 = (int) _14;
  _16 = (int) SignalGId_129;
  _17 = _15 + _16;
  _18 = (sizetype) _17;
  SGFlagPtr_130 = Com_gDataMemPtr.593_12 + _18;
  # DEBUG SGFlagPtr => SGFlagPtr_130
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _19 = *SGFlagPtr_130;
  _20 = (unsigned int) _19;
  _21 = _20 & 2;
  if (_21 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.595_22 = Com_gDataMemPtr;
  _23 = SignalGPtr_127(D)->ComSignalGTMSFlagsRef;
  _24 = (sizetype) _23;
  SignalGTMFlagsBase_132 = Com_gDataMemPtr.595_22 + _24;
  # DEBUG SignalGTMFlagsBase => SignalGTMFlagsBase_132
  # DEBUG BEGIN_STMT
  j_133 = 0;
  # DEBUG j => j_133
  # DEBUG BEGIN_STMT
  newResult_134 = 0;
  # DEBUG newResult => newResult_134
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = *SGFlagPtr_130;
  _26 = _25 & 253;
  *SGFlagPtr_130 = _26;
  # DEBUG BEGIN_STMT
  _27 = SignalGPtr_127(D)->ComGroupSignalWithFilterRefNum;
  numberOfFlagBytes_136 = _27 / 8;
  # DEBUG numberOfFlagBytes => numberOfFlagBytes_136
  # DEBUG BEGIN_STMT
  _28 = SignalGPtr_127(D)->ComGroupSignalWithFilterRefNum;
  _29 = _28 & 7;
  if (_29 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  numberOfFlagBytes.596_30 = numberOfFlagBytes_136;
  numberOfFlagBytes_137 = numberOfFlagBytes.596_30 + 1;
  # DEBUG numberOfFlagBytes => numberOfFlagBytes_137

  <bb 5> :
  # numberOfFlagBytes_114 = PHI <numberOfFlagBytes_136(3), numberOfFlagBytes_137(4)>
  # DEBUG numberOfFlagBytes => numberOfFlagBytes_114
  # DEBUG BEGIN_STMT
  j_138 = 0;
  # DEBUG j => j_138
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _31 = (sizetype) j_111;
  _32 = SignalGTMFlagsBase_132 + _31;
  _33 = *_32;
  if (_33 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  newResult_156 = 1;
  # DEBUG newResult => newResult_156

  <bb 8> :
  # newResult_112 = PHI <newResult_113(6), newResult_156(7)>
  # DEBUG newResult => newResult_112
  # DEBUG BEGIN_STMT
  j.597_34 = j_111;
  j_157 = j.597_34 + 1;
  # DEBUG j => j_157

  <bb 9> :
  # j_111 = PHI <j_138(5), j_157(8)>
  # newResult_113 = PHI <newResult_134(5), newResult_112(8)>
  # DEBUG newResult => newResult_113
  # DEBUG j => j_111
  # DEBUG BEGIN_STMT
  if (j_111 < numberOfFlagBytes_114)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _35 = *SGFlagPtr_130;
  CurrentTMSG_139 = _35 & 1;
  # DEBUG CurrentTMSG => CurrentTMSG_139
  # DEBUG BEGIN_STMT
  if (newResult_113 != CurrentTMSG_139)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (newResult_113 == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.598_36 = Com_gDataMemPtr;
  _37 = IPduPtr_140(D)->ComIPduTMSFlagsRef;
  _38 = (unsigned int) _37;
  _39 = SignalGPtr_127(D)->ComPositionOfTMSFlag;
  _40 = _39 / 8;
  _41 = (unsigned int) _40;
  _42 = _38 + _41;
  _43 = Com_gDataMemPtr.598_36 + _42;
  _44 = *_43;
  _45 = SignalGPtr_127(D)->ComPositionOfTMSFlag;
  _46 = (unsigned char) _45;
  _47 = (int) _46;
  _48 = _47 & 7;
  _49 = 1 << _48;
  _50 = (unsigned char) _49;
  Com_gDataMemPtr.599_51 = Com_gDataMemPtr;
  _52 = IPduPtr_140(D)->ComIPduTMSFlagsRef;
  _53 = (unsigned int) _52;
  _54 = SignalGPtr_127(D)->ComPositionOfTMSFlag;
  _55 = _54 / 8;
  _56 = (unsigned int) _55;
  _57 = _53 + _56;
  _58 = Com_gDataMemPtr.599_51 + _57;
  _59 = _44 | _50;
  *_58 = _59;
  # DEBUG BEGIN_STMT
  _60 = *SGFlagPtr_130;
  _61 = _60 | 1;
  *SGFlagPtr_130 = _61;
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.600_62 = Com_gDataMemPtr;
  _63 = IPduPtr_140(D)->ComIPduTMSFlagsRef;
  _64 = (unsigned int) _63;
  _65 = SignalGPtr_127(D)->ComPositionOfTMSFlag;
  _66 = _65 / 8;
  _67 = (unsigned int) _66;
  _68 = _64 + _67;
  _69 = Com_gDataMemPtr.600_62 + _68;
  _70 = *_69;
  _71 = SignalGPtr_127(D)->ComPositionOfTMSFlag;
  _72 = (unsigned char) _71;
  _73 = (int) _72;
  _74 = _73 & 7;
  _75 = 1 << _74;
  _76 = (unsigned char) _75;
  _77 = ~_76;
  Com_gDataMemPtr.601_78 = Com_gDataMemPtr;
  _79 = IPduPtr_140(D)->ComIPduTMSFlagsRef;
  _80 = (unsigned int) _79;
  _81 = SignalGPtr_127(D)->ComPositionOfTMSFlag;
  _82 = _81 / 8;
  _83 = (unsigned int) _82;
  _84 = _80 + _83;
  _85 = Com_gDataMemPtr.601_78 + _84;
  _86 = _70 & _77;
  *_85 = _86;
  # DEBUG BEGIN_STMT
  _87 = *SGFlagPtr_130;
  _88 = _87 & 254;
  *SGFlagPtr_130 = _88;

  <bb 14> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _89 = *PduStatusFlagsPtr_122;
  _90 = _89 >> 6;
  CurrentTMIPDU_145 = _90 & 1;
  # DEBUG CurrentTMIPDU => CurrentTMIPDU_145
  # DEBUG BEGIN_STMT
  newTM_147 = Com_EB_CalculateTM (IPduPtr_140(D));
  # DEBUG newTM => newTM_147
  # DEBUG BEGIN_STMT
  if (newTM_147 != CurrentTMIPDU_145)
    goto <bb 15>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  TMSChanged_148 = 1;
  # DEBUG TMSChanged => TMSChanged_148
  # DEBUG BEGIN_STMT
  if (newTM_147 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _91 = *PduStatusFlagsPtr_122;
  _92 = _91 | 64;
  *PduStatusFlagsPtr_122 = _92;
  goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _93 = *PduStatusFlagsPtr_122;
  _94 = _93 & 191;
  *PduStatusFlagsPtr_122 = _94;

  <bb 18> :
  # DEBUG BEGIN_STMT
  _95 = *PduStatusFlagsPtr_122;
  _96 = _95 | 128;
  *PduStatusFlagsPtr_122 = _96;
  # DEBUG BEGIN_STMT
  if (newTM_147 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _97 = IPduPtr_140(D)->ComTxModeModes;
  iftmp.602_153 = _97 & 15;
  goto <bb 21>; [INV]

  <bb 20> :
  _98 = IPduPtr_140(D)->ComTxModeModes;
  iftmp.602_152 = _98 >> 4;

  <bb 21> :
  # iftmp.602_115 = PHI <iftmp.602_153(19), iftmp.602_152(20)>
  AktTM_154 = iftmp.602_115;
  # DEBUG AktTM => AktTM_154
  # DEBUG BEGIN_STMT
  if (AktTM_154 == 2)
    goto <bb 23>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  if (AktTM_154 == 5)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  transmit_155 = 1;
  # DEBUG transmit => transmit_155

  <bb 24> :
  # transmit_109 = PHI <transmit_124(2), transmit_124(14), transmit_124(22), transmit_155(23)>
  # TMSChanged_110 = PHI <TMSChanged_125(2), TMSChanged_125(14), TMSChanged_148(22), TMSChanged_148(23)>
  # DEBUG TMSChanged => TMSChanged_110
  # DEBUG transmit => transmit_109
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _99 = *PduStatusFlagsPtr_122;
  _100 = (unsigned int) _99;
  _101 = _100 & 1;
  if (_101 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  retval_160 = 0;
  # DEBUG retval => retval_160
  # DEBUG BEGIN_STMT
  if (transmit_109 == 1)
    goto <bb 26>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  _102 = SignalGPtr_127(D)->ComTxSignalGroupFlags;
  _103 = _102 >> 2;
  _104 = (unsigned int) _103;
  _105 = _104 & 1;
  _106 = _105 != 0;
  trig_wo_rep_161 = (boolean) _106;
  # DEBUG trig_wo_rep => trig_wo_rep_161
  # DEBUG BEGIN_STMT
  _107 = TMSChanged_110 == 0;
  tms_changed_162 = (boolean) _107;
  # DEBUG tms_changed => tms_changed_162
  # DEBUG BEGIN_STMT
  if (trig_wo_rep_161 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 27> :
  if (tms_changed_162 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  Com_EB_Request_Send_Pdu (PduId_121(D), IPduPtr_140(D), PduStatusFlagsPtr_122, SendInMainFunctionTx_163(D));
  goto <bb 31>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  Com_EB_SendUponSendApiCall (PduId_121(D), SendInMainFunctionTx_163(D));
  goto <bb 31>; [INV]

  <bb 30> :
  # DEBUG BEGIN_STMT
  retval_159 = 128;
  # DEBUG retval => retval_159

  <bb 31> :
  # retval_108 = PHI <retval_160(28), retval_159(30), retval_160(25), retval_160(29)>
  # DEBUG retval => retval_108
  # DEBUG BEGIN_STMT
  _166 = retval_108;
  return _166;

}


Com_EB_SendSignalGroupArray (const uint8 * SGArrayPtr, const struct ComTxSignalGroupType * SignalGPtr, ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr, boolean SendInMainFunctionTx)
{
  boolean forceTrigger;
  uint8 retval;
  uint8 _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_1 = 128;
  # DEBUG retval => retval_1
  # DEBUG BEGIN_STMT
  Com_EB_SetGroupSignalTMSFlagOfSignalGroup (SignalGPtr_3(D), SGArrayPtr_4(D));
  # DEBUG BEGIN_STMT
  forceTrigger_8 = Com_EB_WriteShadowBuffer (SignalGPtr_3(D), IPduPtr_6(D), SGArrayPtr_4(D));
  # DEBUG forceTrigger => forceTrigger_8
  # DEBUG BEGIN_STMT
  retval_12 = Com_EB_CalculateSignalGroupTM (forceTrigger_8, SignalGPtr_3(D), IPduPtr_6(D), PduId_9(D), SendInMainFunctionTx_10(D));
  # DEBUG retval => retval_12
  # DEBUG BEGIN_STMT
  _13 = retval_12;
  return _13;

}


Com_EB_SendSignalGroupArray_DETCheck (const uint8 * SGArrayPtr, uint16 SGArrayLength, const struct ComTxSignalGroupType * SignalGPtr, ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr, boolean SendInMainFunctionTx)
{
  uint8 retval;
  short unsigned int _1;
  uint8 _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_4 = 128;
  # DEBUG retval => retval_4
  # DEBUG BEGIN_STMT
  if (SGArrayPtr_5(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  retval_16 = 128;
  # DEBUG retval => retval_16
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 67, 3);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = SignalGPtr_7(D)->ComByteSize;
  if (SGArrayLength_8(D) != _1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  retval_14 = 128;
  # DEBUG retval => retval_14
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 67, 1);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval_13 = Com_EB_SendSignalGroupArray (SGArrayPtr_5(D), SignalGPtr_7(D), PduId_9(D), IPduPtr_10(D), SendInMainFunctionTx_11(D));
  # DEBUG retval => retval_13

  <bb 7> :
  # retval_2 = PHI <retval_16(3), retval_14(5), retval_13(6)>
  # DEBUG retval => retval_2
  # DEBUG BEGIN_STMT
  _18 = retval_2;
  return _18;

}


Com_EB_SendSignalGroup (const uint8 * SGArrayPtr, uint16 SGArrayPtrLength, const struct ComTxSignalGroupType * SignalGPtr, ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr, boolean SendInMainFunctionTx)
{
  boolean forceTrigger;
  uint8 retval;
  const ComRAMIdxType ComSignalGroupValueRef;
  uint8 * Com_gDataMemPtr.624_1;
  sizetype _2;
  uint8 * _3;
  uint8 _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ComSignalGroupValueRef_8 = SignalGPtr_7(D)->ComSignalGroupValueRef;
  # DEBUG ComSignalGroupValueRef => ComSignalGroupValueRef_8
  # DEBUG BEGIN_STMT
  retval_9 = 128;
  # DEBUG retval => retval_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ComSignalGroupValueRef_8 == 65535)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 13, 1);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.624_1 = Com_gDataMemPtr;
  _2 = (sizetype) ComSignalGroupValueRef_8;
  _3 = Com_gDataMemPtr.624_1 + _2;
  forceTrigger_12 = Com_EB_WriteShadowBuffer (SignalGPtr_7(D), IPduPtr_10(D), _3);
  # DEBUG forceTrigger => forceTrigger_12
  # DEBUG BEGIN_STMT
  retval_16 = Com_EB_CalculateSignalGroupTM (forceTrigger_12, SignalGPtr_7(D), IPduPtr_10(D), PduId_13(D), SendInMainFunctionTx_14(D));
  # DEBUG retval => retval_16

  <bb 5> :
  # retval_4 = PHI <retval_9(3), retval_16(4)>
  # DEBUG retval => retval_4
  # DEBUG BEGIN_STMT
  _18 = retval_4;
  return _18;

}


Com_GetSendSignalRetVal (const struct ComTxSignalType * SignalPtr)
{
  uint8 * const PduStatusFlagsPtr;
  uint8 RetVal;
  uint8 * Com_gDataMemPtr.546_1;
  const struct Com_ConfigType * Com_gConfigPtr.547_2;
  short unsigned int _3;
  int _4;
  short unsigned int _5;
  int _6;
  int _7;
  sizetype _8;
  unsigned char _9;
  unsigned int _10;
  unsigned int _11;
  uint8 _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_13 = 128;
  # DEBUG RetVal => RetVal_13
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.546_1 = Com_gDataMemPtr;
  Com_gConfigPtr.547_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.547_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = SignalPtr_15(D)->ComIPduRef;
  _6 = (int) _5;
  _7 = _4 + _6;
  _8 = (sizetype) _7;
  PduStatusFlagsPtr_16 = Com_gDataMemPtr.546_1 + _8;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_16
  # DEBUG BEGIN_STMT
  _9 = *PduStatusFlagsPtr_16;
  _10 = (unsigned int) _9;
  _11 = _10 & 1;
  if (_11 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal_17 = 0;
  # DEBUG RetVal => RetVal_17

  <bb 4> :
  # RetVal_12 = PHI <RetVal_13(2), RetVal_17(3)>
  # DEBUG RetVal => RetVal_12
  # DEBUG BEGIN_STMT
  _18 = RetVal_12;
  return _18;

}


Com_EB_WriteDynSignal_ExitArea_0 (const uint8 * SignalDataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 index;
  void (*<T69f>) (const void *, uint8 *, const struct ComTxSignalType *, struct Com_EB_WriteIntDataType *) fptr;
  const ComIPduSizeType dynPduLength;
  const ComSignalDescBitType StartingByte;
  uint8 * const dataPtr;
  uint8 * Com_gDataMemPtr.553_1;
  short unsigned int _2;
  sizetype _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  uint8 * Com_gDataMemPtr.554_10;
  const struct Com_ConfigType * Com_gConfigPtr.555_11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  ComIPduSizeType * _18;
  short unsigned int _19;
  uint8 * Com_gDataMemPtr.556_20;
  const struct Com_ConfigType * Com_gConfigPtr.557_21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  short unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  ComIPduSizeType * _28;
  short unsigned int _29;
  int _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.553_1 = Com_gDataMemPtr;
  _2 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBufferRef;
  _3 = (sizetype) _2;
  dataPtr_34 = Com_gDataMemPtr.553_1 + _3;
  # DEBUG dataPtr => dataPtr_34
  # DEBUG BEGIN_STMT
  StartingByte_35 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  # DEBUG StartingByte => StartingByte_35
  # DEBUG BEGIN_STMT
  _4 = IntDataPtr_36(D)->arraySize;
  dynPduLength_37 = StartingByte_35 + _4;
  # DEBUG dynPduLength => dynPduLength_37
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_33(D)->ComTxSignalFlags;
  _6 = _5 >> 4;
  _7 = (unsigned char) _6;
  _8 = (unsigned int) _7;
  _9 = _8 & 1;
  if (_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.554_10 = Com_gDataMemPtr;
  Com_gConfigPtr.555_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.555_11->ComTxIPduLengthBase;
  _13 = (sizetype) _12;
  _14 = Com_gDataMemPtr.554_10 + _13;
  _15 = Com_EB_WritePropPtr_33(D)->ComIPduRef;
  _16 = (unsigned int) _15;
  _17 = _16 * 2;
  _18 = _14 + _17;
  _19 = *_18;
  if (dynPduLength_37 != _19)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  IntDataPtr_36(D)->trigger = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.556_20 = Com_gDataMemPtr;
  Com_gConfigPtr.557_21 = Com_gConfigPtr;
  _22 = Com_gConfigPtr.557_21->ComTxIPduLengthBase;
  _23 = (sizetype) _22;
  _24 = Com_gDataMemPtr.556_20 + _23;
  _25 = Com_EB_WritePropPtr_33(D)->ComIPduRef;
  _26 = (unsigned int) _25;
  _27 = _26 * 2;
  _28 = _24 + _27;
  *_28 = dynPduLength_37;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = Com_EB_WritePropPtr_33(D)->ComTxSignalFlags;
  index_40 = _29 & 191;
  # DEBUG index => index_40
  # DEBUG BEGIN_STMT
  _30 = (int) index_40;
  fptr_41 = Com_WriteFuncs[_30];
  # DEBUG fptr => fptr_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_41 (SignalDataPtr_42(D), dataPtr_34, Com_EB_WritePropPtr_33(D), IntDataPtr_36(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Com_EB_SendSignal_Transmit (Com_EB_WritePropPtr_33(D), IntDataPtr_36(D));
  return;

}


Com_EB_SendSignal_Transmit (const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * const PduStatusFlagsPtr;
  const struct ComTxIPduType * const IPduPtr;
  boolean tms_changed;
  boolean trig_wo_rep;
  boolean TmpTrigger;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  unsigned char _9;
  unsigned int _10;
  unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  unsigned char _14;
  unsigned int _15;
  unsigned int _16;
  _Bool _17;
  unsigned char _18;
  _Bool _19;
  const struct Com_ConfigType * Com_gConfigPtr.263_20;
  const struct Com_ConfigType * Com_gConfigPtr.264_21;
  long unsigned int _22;
  short unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  sizetype _26;
  uint8 * Com_gDataMemPtr.265_27;
  const struct Com_ConfigType * Com_gConfigPtr.266_28;
  short unsigned int _29;
  int _30;
  short unsigned int _31;
  int _32;
  int _33;
  sizetype _34;
  short unsigned int _35;
  unsigned char _36;
  short unsigned int _37;
  unsigned char _38;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = IntDataPtr_42(D)->SendSigRetval;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  TmpTrigger_43 = IntDataPtr_42(D)->trigger;
  # DEBUG TmpTrigger => TmpTrigger_43
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_44(D)->ComTxSignalFlags;
  _3 = _2 >> 10;
  _4 = (unsigned char) _3;
  _5 = (unsigned int) _4;
  _6 = _5 & 1;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _7 = Com_EB_WritePropPtr_44(D)->ComTxSignalFlags;
  _8 = _7 >> 4;
  _9 = (unsigned char) _8;
  _10 = (unsigned int) _9;
  _11 = _10 & 1;
  if (_11 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  TmpTrigger_45 = 1;
  # DEBUG TmpTrigger => TmpTrigger_45

  <bb 6> :
  # TmpTrigger_39 = PHI <TmpTrigger_43(3), TmpTrigger_43(4), TmpTrigger_45(5)>
  # DEBUG TmpTrigger => TmpTrigger_39
  # DEBUG BEGIN_STMT
  if (TmpTrigger_39 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _12 = Com_EB_WritePropPtr_44(D)->ComTxSignalFlags;
  _13 = _12 >> 11;
  _14 = (unsigned char) _13;
  _15 = (unsigned int) _14;
  _16 = _15 & 1;
  _17 = _16 != 0;
  trig_wo_rep_46 = (boolean) _17;
  # DEBUG trig_wo_rep => trig_wo_rep_46
  # DEBUG BEGIN_STMT
  _18 = IntDataPtr_42(D)->TMSChanged;
  _19 = _18 == 0;
  tms_changed_47 = (boolean) _19;
  # DEBUG tms_changed => tms_changed_47
  # DEBUG BEGIN_STMT
  if (trig_wo_rep_46 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  if (tms_changed_47 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.263_20 = Com_gConfigPtr;
  Com_gConfigPtr.264_21 = Com_gConfigPtr;
  _22 = Com_gConfigPtr.264_21->ComTxIPduRef;
  _23 = Com_EB_WritePropPtr_44(D)->ComIPduRef;
  _24 = (unsigned int) _23;
  _25 = _24 * 64;
  _26 = _22 + _25;
  IPduPtr_48 = Com_gConfigPtr.263_20 + _26;
  # DEBUG IPduPtr => IPduPtr_48
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.265_27 = Com_gDataMemPtr;
  Com_gConfigPtr.266_28 = Com_gConfigPtr;
  _29 = Com_gConfigPtr.266_28->ComTxIPduStatusBase;
  _30 = (int) _29;
  _31 = Com_EB_WritePropPtr_44(D)->ComIPduRef;
  _32 = (int) _31;
  _33 = _30 + _32;
  _34 = (sizetype) _33;
  PduStatusFlagsPtr_49 = Com_gDataMemPtr.265_27 + _34;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_49
  # DEBUG BEGIN_STMT
  _35 = Com_EB_WritePropPtr_44(D)->ComIPduRef;
  _36 = IntDataPtr_42(D)->SendInMainFunctionTx;
  Com_EB_Request_Send_Pdu (_35, IPduPtr_48, PduStatusFlagsPtr_49, _36);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _37 = Com_EB_WritePropPtr_44(D)->ComIPduRef;
  _38 = IntDataPtr_42(D)->SendInMainFunctionTx;
  Com_EB_SendUponSendApiCall (_37, _38);

  <bb 11> :
  return;

}


Com_EB_Write_SignalExt (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint8 AktTM;
  uint8 PduStatusByte;
  boolean newTM;
  const uint8 SignalTMSFlag;
  boolean CurrentTM;
  boolean OldFilterResult;
  uint8 * const PduTMSFlagPtr;
  const struct ComTxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType SignalGId;
  const boolean TMSResult;
  uint8 * const PduStatusFlagsPtr;
  const uint16 index;
  void (*<T69f>) (const void *, uint8 *, const struct ComTxSignalType *, struct Com_EB_WriteIntDataType *) fptr;
  const struct ComTxIPduType * const IPduPtr;
  const ComIPduRefType PduId;
  const struct Com_ConfigType * Com_gConfigPtr.144_1;
  const struct Com_ConfigType * Com_gConfigPtr.145_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  short unsigned int _7;
  int _8;
  uint8 * Com_gDataMemPtr.146_9;
  const struct Com_ConfigType * Com_gConfigPtr.147_10;
  short unsigned int _11;
  int _12;
  short unsigned int _13;
  int _14;
  int _15;
  sizetype _16;
  unsigned char _17;
  short unsigned int _18;
  const struct Com_ConfigType * Com_gConfigPtr.148_19;
  const struct Com_ConfigType * Com_gConfigPtr.149_20;
  long unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  sizetype _24;
  uint8 * Com_gDataMemPtr.150_25;
  short unsigned int _26;
  unsigned int _27;
  short unsigned int _28;
  short unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  short unsigned int _32;
  unsigned char _33;
  unsigned char _34;
  int _35;
  int _36;
  int _37;
  unsigned char _38;
  long unsigned int _39;
  long unsigned int _40;
  unsigned char _41;
  unsigned char PduStatusByte.151_42;
  unsigned char _43;
  unsigned char PduStatusByte.152_44;
  unsigned char _45;
  unsigned char PduStatusByte.153_46;
  unsigned char _47;
  unsigned char PduStatusByte.154_48;
  unsigned char _49;
  unsigned char PduStatusByte.155_50;
  unsigned char _51;
  unsigned char _52;
  short unsigned int _53;
  const uint8 iftmp.156_54;
  const uint8 iftmp.156_90;
  const uint8 iftmp.156_91;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PduId_63 = Com_EB_WritePropPtr_62(D)->ComIPduRef;
  # DEBUG PduId => PduId_63
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.144_1 = Com_gConfigPtr;
  Com_gConfigPtr.145_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.145_2->ComTxIPduRef;
  _4 = (unsigned int) PduId_63;
  _5 = _4 * 64;
  _6 = _3 + _5;
  IPduPtr_64 = Com_gConfigPtr.144_1 + _6;
  # DEBUG IPduPtr => IPduPtr_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = Com_EB_WritePropPtr_62(D)->ComTxSignalFlags;
  index_65 = _7 & 255;
  # DEBUG index => index_65
  # DEBUG BEGIN_STMT
  _8 = (int) index_65;
  fptr_66 = Com_WriteFuncs[_8];
  # DEBUG fptr => fptr_66
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_66 (SignalDataPtr_67(D), dataPtr_68(D), Com_EB_WritePropPtr_62(D), IntDataPtr_69(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.146_9 = Com_gDataMemPtr;
  Com_gConfigPtr.147_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.147_10->ComTxIPduStatusBase;
  _12 = (int) _11;
  _13 = Com_EB_WritePropPtr_62(D)->ComIPduRef;
  _14 = (int) _13;
  _15 = _12 + _14;
  _16 = (sizetype) _15;
  PduStatusFlagsPtr_71 = Com_gDataMemPtr.146_9 + _16;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_71
  # DEBUG BEGIN_STMT
  _17 = Com_EB_WritePropPtr_62(D)->ComSignalBase.ComFilterConf.ComFilterType;
  if (_17 > 1)
    goto <bb 3>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  TMSResult_73 = Com_EB_SendSignal_Filter (Com_EB_WritePropPtr_62(D), SignalDataPtr_67(D));
  # DEBUG TMSResult => TMSResult_73
  # DEBUG BEGIN_STMT
  _18 = Com_EB_WritePropPtr_62(D)->ComSignalBase.ComSignalGroupRef;
  if (_18 != 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SignalGId_95 = Com_EB_WritePropPtr_62(D)->ComSignalBase.ComSignalGroupRef;
  # DEBUG SignalGId => SignalGId_95
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.148_19 = Com_gConfigPtr;
  Com_gConfigPtr.149_20 = Com_gConfigPtr;
  _21 = Com_gConfigPtr.149_20->ComTxSignalGroupRef;
  _22 = (unsigned int) SignalGId_95;
  _23 = _22 * 32;
  _24 = _21 + _23;
  SignalGPtr_96 = Com_gConfigPtr.148_19 + _24;
  # DEBUG SignalGPtr => SignalGPtr_96
  # DEBUG BEGIN_STMT
  Com_EB_CalculateGroupSignalTM (Com_EB_WritePropPtr_62(D), SignalGPtr_96, TMSResult_73);
  goto <bb 22>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.150_25 = Com_gDataMemPtr;
  _26 = IPduPtr_64->ComIPduTMSFlagsRef;
  _27 = (unsigned int) _26;
  _28 = Com_EB_WritePropPtr_62(D)->ComPositionOfTMSFlag;
  _29 = _28 / 8;
  _30 = (unsigned int) _29;
  _31 = _27 + _30;
  PduTMSFlagPtr_74 = Com_gDataMemPtr.150_25 + _31;
  # DEBUG PduTMSFlagPtr => PduTMSFlagPtr_74
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _32 = Com_EB_WritePropPtr_62(D)->ComPositionOfTMSFlag;
  _33 = (unsigned char) _32;
  SignalTMSFlag_75 = _33 & 7;
  # DEBUG SignalTMSFlag => SignalTMSFlag_75
  # DEBUG BEGIN_STMT
  _34 = *PduTMSFlagPtr_74;
  _35 = (int) _34;
  _36 = (int) SignalTMSFlag_75;
  _37 = _35 >> _36;
  _38 = (unsigned char) _37;
  OldFilterResult_76 = _38 & 1;
  # DEBUG OldFilterResult => OldFilterResult_76
  # DEBUG BEGIN_STMT
  if (OldFilterResult_76 != TMSResult_73)
    goto <bb 6>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IntDataPtr_69(D)->TMSChanged = 1;
  # DEBUG BEGIN_STMT
  if (TMSResult_73 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _39 = (long unsigned int) SignalTMSFlag_75;
  TS_AtomicSetBit_8 (PduTMSFlagPtr_74, _39);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _40 = (long unsigned int) SignalTMSFlag_75;
  TS_AtomicClearBit_8 (PduTMSFlagPtr_74, _40);

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  newTM_82 = Com_EB_CalculateTM (IPduPtr_64);
  # DEBUG newTM => newTM_82
  # DEBUG BEGIN_STMT
  _41 = *PduStatusFlagsPtr_71;
  PduStatusByte = _41;
  # DEBUG BEGIN_STMT
  PduStatusByte.151_42 = PduStatusByte;
  _43 = PduStatusByte.151_42 >> 6;
  CurrentTM_84 = _43 & 1;
  # DEBUG CurrentTM => CurrentTM_84
  # DEBUG BEGIN_STMT
  if (newTM_82 != CurrentTM_84)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (newTM_82 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  PduStatusByte.152_44 = PduStatusByte;
  _45 = PduStatusByte.152_44 | 64;
  PduStatusByte = _45;
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  PduStatusByte.153_46 = PduStatusByte;
  _47 = PduStatusByte.153_46 & 191;
  PduStatusByte = _47;

  <bb 13> :
  # DEBUG BEGIN_STMT
  PduStatusByte.154_48 = PduStatusByte;
  _49 = PduStatusByte.154_48 | 128;
  PduStatusByte = _49;
  # DEBUG BEGIN_STMT
  PduStatusByte.155_50 = PduStatusByte;
  *PduStatusFlagsPtr_71 = PduStatusByte.155_50;

  <bb 14> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (newTM_82 != CurrentTM_84)
    goto <bb 15>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (newTM_82 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _51 = IPduPtr_64->ComTxModeModes;
  iftmp.156_91 = _51 & 15;
  goto <bb 18>; [INV]

  <bb 17> :
  _52 = IPduPtr_64->ComTxModeModes;
  iftmp.156_90 = _52 >> 4;

  <bb 18> :
  # iftmp.156_54 = PHI <iftmp.156_91(16), iftmp.156_90(17)>
  AktTM_92 = iftmp.156_54;
  # DEBUG AktTM => AktTM_92
  # DEBUG BEGIN_STMT
  if (AktTM_92 == 2)
    goto <bb 20>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (AktTM_92 == 5)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  IntDataPtr_69(D)->trigger = 1;

  <bb 21> :
  PduStatusByte ={v} {CLOBBER};

  <bb 22> :
  # DEBUG BEGIN_STMT
  _53 = Com_EB_WritePropPtr_62(D)->ComSignalBase.ComSignalGroupRef;
  if (_53 == 65535)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  Com_EB_SendSignal_Transmit (Com_EB_WritePropPtr_62(D), IntDataPtr_69(D));

  <bb 24> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_SendSignal_Filter (const struct ComTxSignalType * SignalPtr, const void * SignalDataPtr)
{
  const struct ComSignalBaseType * const Com_EB_ReadPropPtr;
  const Com_TS_SignalTypeType SignalType;
  boolean TMSResult;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  int _4;
  const struct ComFilterConfType * _5;
  const struct ComFilterConfType * _6;
  const struct ComFilterConfType * _7;
  const struct ComFilterConfType * _8;
  const struct ComFilterConfType * _9;
  const struct ComFilterConfType * _10;
  const struct ComFilterConfType * _11;
  const struct ComFilterConfType * _12;
  const struct ComFilterConfType * _13;
  boolean _40;

  <bb 2> :
  # DEBUG BEGIN_STMT
  TMSResult_16 = 0;
  # DEBUG TMSResult => TMSResult_16
  # DEBUG BEGIN_STMT
  _1 = SignalPtr_18(D)->ComTxSignalFlags;
  _2 = _1 >> 12;
  _3 = (unsigned char) _2;
  SignalType_19 = _3 & 15;
  # DEBUG SignalType => SignalType_19
  # DEBUG BEGIN_STMT
  Com_EB_ReadPropPtr_20 = &SignalPtr_18(D)->ComSignalBase;
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_20
  # DEBUG BEGIN_STMT
  _4 = (int) SignalType_19;
  switch (_4) <default: <L12> [INV], case 0: <L0> [INV], case 1: <L5> [INV], case 2: <L6> [INV], case 3: <L4> [INV], case 4: <L2> [INV], case 5: <L3> [INV], case 6: <L1> [INV], case 9: <L8> [INV], case 10: <L7> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _5 = &Com_EB_ReadPropPtr_20->ComFilterConf;
  TMSResult_39 = Com_EB_FilterBoolean (_5, SignalDataPtr_21(D));
  # DEBUG TMSResult => TMSResult_39
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _6 = &Com_EB_ReadPropPtr_20->ComFilterConf;
  TMSResult_27 = Com_EB_FilterUint8 (_6, SignalDataPtr_21(D));
  # DEBUG TMSResult => TMSResult_27
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  _7 = &Com_EB_ReadPropPtr_20->ComFilterConf;
  TMSResult_31 = Com_EB_FilterUint16 (_7, SignalDataPtr_21(D));
  # DEBUG TMSResult => TMSResult_31
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  _8 = &Com_EB_ReadPropPtr_20->ComFilterConf;
  TMSResult_29 = Com_EB_FilterUint32 (_8, SignalDataPtr_21(D));
  # DEBUG TMSResult => TMSResult_29
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  _9 = &Com_EB_ReadPropPtr_20->ComFilterConf;
  TMSResult_33 = Com_EB_FilterSint8 (_9, SignalDataPtr_21(D));
  # DEBUG TMSResult => TMSResult_33
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  _10 = &Com_EB_ReadPropPtr_20->ComFilterConf;
  TMSResult_37 = Com_EB_FilterSint16 (_10, SignalDataPtr_21(D));
  # DEBUG TMSResult => TMSResult_37
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  _11 = &Com_EB_ReadPropPtr_20->ComFilterConf;
  TMSResult_35 = Com_EB_FilterSint32 (_11, SignalDataPtr_21(D));
  # DEBUG TMSResult => TMSResult_35
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  _12 = &Com_EB_ReadPropPtr_20->ComFilterConf;
  TMSResult_23 = Com_EB_FilterSint64 (_12, SignalDataPtr_21(D));
  # DEBUG TMSResult => TMSResult_23
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 11> :
<L8>:
  # DEBUG BEGIN_STMT
  _13 = &Com_EB_ReadPropPtr_20->ComFilterConf;
  TMSResult_25 = Com_EB_FilterUint64 (_13, SignalDataPtr_21(D));
  # DEBUG TMSResult => TMSResult_25
  # DEBUG BEGIN_STMT

  <bb 12> :
  # TMSResult_14 = PHI <TMSResult_39(3), TMSResult_27(4), TMSResult_31(5), TMSResult_29(6), TMSResult_33(7), TMSResult_37(8), TMSResult_35(9), TMSResult_23(10), TMSResult_25(11), TMSResult_16(2)>
<L12>:
  # DEBUG TMSResult => TMSResult_14
  # DEBUG BEGIN_STMT
  _40 = TMSResult_14;
  return _40;

}


Com_EB_MdtQueue (ComIPduRefType Pdu, const struct ComTxIPduType * IPduPtr, ComTxIPduMinimumDelayTimeFactorType MDT)
{
  ComTxIPduMinimumDelayTimeFactorType * const MDTQueueValPtr;
  ComTxIPduMinimumDelayTimeFactorType * const MDTQueueBase;
  ComTxIPduMinimumDelayTimeFactorType TimeOut;
  ComTxIPduMinimumDelayTimeFactorType globalTime;
  uint8 * Com_gDataMemPtr.276_1;
  const struct Com_ConfigType * Com_gConfigPtr.277_2;
  short unsigned int _3;
  sizetype _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  uint8 * Com_gDataMemPtr.278_8;
  const struct Com_ConfigType * Com_gConfigPtr.279_9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  uint8 * Com_gDataMemPtr.280_17;
  const struct Com_ConfigType * Com_gConfigPtr.281_18;
  short unsigned int _19;
  int _20;
  int _21;
  int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.276_1 = Com_gDataMemPtr;
  Com_gConfigPtr.277_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.277_2->ComMDTQueueBase;
  _4 = (sizetype) _3;
  MDTQueueBase_27 = Com_gDataMemPtr.276_1 + _4;
  # DEBUG MDTQueueBase => MDTQueueBase_27
  # DEBUG BEGIN_STMT
  _5 = IPduPtr_28(D)->MDTQueueRef;
  _6 = (unsigned int) _5;
  _7 = _6 * 2;
  MDTQueueValPtr_29 = MDTQueueBase_27 + _7;
  # DEBUG MDTQueueValPtr => MDTQueueValPtr_29
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_31 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_31
  # DEBUG BEGIN_STMT
  TimeOut_33 = globalTime_31 + MDT_32(D);
  # DEBUG TimeOut => TimeOut_33
  # DEBUG BEGIN_STMT
  *MDTQueueValPtr_29 = TimeOut_33;
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.278_8 = Com_gDataMemPtr;
  Com_gConfigPtr.279_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.279_9->ComTxIPduStatusBase;
  _11 = (int) _10;
  _12 = (int) Pdu_35(D);
  _13 = _11 + _12;
  _14 = (sizetype) _13;
  _15 = Com_gDataMemPtr.278_8 + _14;
  _16 = *_15;
  Com_gDataMemPtr.280_17 = Com_gDataMemPtr;
  Com_gConfigPtr.281_18 = Com_gConfigPtr;
  _19 = Com_gConfigPtr.281_18->ComTxIPduStatusBase;
  _20 = (int) _19;
  _21 = (int) Pdu_35(D);
  _22 = _20 + _21;
  _23 = (sizetype) _22;
  _24 = Com_gDataMemPtr.280_17 + _23;
  _25 = _16 | 2;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_ClearTxUpdateBits (const struct ComTxIPduType * IPduPtr)
{
  const struct ComTxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType signalGId;
  const struct ComTxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  ComSignalGroupRefType j;
  ComSignalRefType i;
  const struct Com_ConfigType * Com_gConfigPtr.282_1;
  const struct Com_ConfigType * Com_gConfigPtr.283_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const ComSignalRefType * _7;
  const struct Com_ConfigType * Com_gConfigPtr.284_8;
  const struct Com_ConfigType * Com_gConfigPtr.285_9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  short unsigned int _14;
  short unsigned int _15;
  unsigned char _16;
  unsigned int _17;
  unsigned int _18;
  uint8 * Com_gDataMemPtr.286_19;
  short unsigned int _20;
  unsigned int _21;
  short unsigned int _22;
  short unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  uint8 * _26;
  short unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  short unsigned int i.287_30;
  int _31;
  short unsigned int _32;
  int _33;
  short unsigned int _34;
  int _35;
  int _36;
  const struct Com_ConfigType * Com_gConfigPtr.288_37;
  const struct Com_ConfigType * Com_gConfigPtr.289_38;
  long unsigned int _39;
  unsigned int _40;
  unsigned int _41;
  sizetype _42;
  const ComSignalGroupRefType * _43;
  const struct Com_ConfigType * Com_gConfigPtr.290_44;
  const struct Com_ConfigType * Com_gConfigPtr.291_45;
  long unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  sizetype _49;
  unsigned char _50;
  unsigned char _51;
  unsigned int _52;
  unsigned int _53;
  uint8 * Com_gDataMemPtr.292_54;
  short unsigned int _55;
  unsigned int _56;
  short unsigned int _57;
  short unsigned int _58;
  unsigned int _59;
  unsigned int _60;
  uint8 * _61;
  short unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  short unsigned int j.293_65;
  int _66;
  short unsigned int _67;
  int _68;
  short unsigned int _69;
  int _70;
  int _71;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_80 = IPduPtr_79(D)->ComIPduSignalRefFirst;
  # DEBUG i => i_80
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.282_1 = Com_gConfigPtr;
  Com_gConfigPtr.283_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.283_2->ComTxIPduSignalListRef;
  _4 = (unsigned int) i_72;
  _5 = _4 * 2;
  _6 = _3 + _5;
  _7 = Com_gConfigPtr.282_1 + _6;
  signalId_86 = *_7;
  # DEBUG signalId => signalId_86
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.284_8 = Com_gConfigPtr;
  Com_gConfigPtr.285_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.285_9->ComTxSignalRef;
  _11 = (unsigned int) signalId_86;
  _12 = _11 * 26;
  _13 = _10 + _12;
  SignalPtr_87 = Com_gConfigPtr.284_8 + _13;
  # DEBUG SignalPtr => SignalPtr_87
  # DEBUG BEGIN_STMT
  _14 = SignalPtr_87->ComTxSignalFlags;
  _15 = _14 >> 5;
  _16 = (unsigned char) _15;
  _17 = (unsigned int) _16;
  _18 = _17 & 1;
  if (_18 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.286_19 = Com_gDataMemPtr;
  _20 = IPduPtr_79(D)->ComIPduValueRef;
  _21 = (unsigned int) _20;
  _22 = SignalPtr_87->ComUpdateBitPositionInBit;
  _23 = _22 / 8;
  _24 = (unsigned int) _23;
  _25 = _21 + _24;
  _26 = Com_gDataMemPtr.286_19 + _25;
  _27 = SignalPtr_87->ComUpdateBitPositionInBit;
  _28 = (long unsigned int) _27;
  _29 = _28 & 7;
  TS_AtomicClearBit_8 (_26, _29);

  <bb 5> :
  # DEBUG BEGIN_STMT
  i.287_30 = i_72;
  i_89 = i.287_30 + 1;
  # DEBUG i => i_89

  <bb 6> :
  # i_72 = PHI <i_80(2), i_89(5)>
  # DEBUG i => i_72
  # DEBUG BEGIN_STMT
  _31 = (int) i_72;
  _32 = IPduPtr_79(D)->ComIPduSignalRefNum;
  _33 = (int) _32;
  _34 = IPduPtr_79(D)->ComIPduSignalRefFirst;
  _35 = (int) _34;
  _36 = _33 + _35;
  if (_31 < _36)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  j_81 = IPduPtr_79(D)->ComIPduSignalGroupRefFirst;
  # DEBUG j => j_81
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.288_37 = Com_gConfigPtr;
  Com_gConfigPtr.289_38 = Com_gConfigPtr;
  _39 = Com_gConfigPtr.289_38->ComTxIPduSignalGroupListRef;
  _40 = (unsigned int) j_73;
  _41 = _40 * 2;
  _42 = _39 + _41;
  _43 = Com_gConfigPtr.288_37 + _42;
  signalGId_82 = *_43;
  # DEBUG signalGId => signalGId_82
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.290_44 = Com_gConfigPtr;
  Com_gConfigPtr.291_45 = Com_gConfigPtr;
  _46 = Com_gConfigPtr.291_45->ComTxSignalGroupRef;
  _47 = (unsigned int) signalGId_82;
  _48 = _47 * 32;
  _49 = _46 + _48;
  SignalGPtr_83 = Com_gConfigPtr.290_44 + _49;
  # DEBUG SignalGPtr => SignalGPtr_83
  # DEBUG BEGIN_STMT
  _50 = SignalGPtr_83->ComTxSignalGroupFlags;
  _51 = _50 >> 3;
  _52 = (unsigned int) _51;
  _53 = _52 & 1;
  if (_53 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.292_54 = Com_gDataMemPtr;
  _55 = IPduPtr_79(D)->ComIPduValueRef;
  _56 = (unsigned int) _55;
  _57 = SignalGPtr_83->ComUpdateBitPositionInBit;
  _58 = _57 / 8;
  _59 = (unsigned int) _58;
  _60 = _56 + _59;
  _61 = Com_gDataMemPtr.292_54 + _60;
  _62 = SignalGPtr_83->ComUpdateBitPositionInBit;
  _63 = (long unsigned int) _62;
  _64 = _63 & 7;
  TS_AtomicClearBit_8 (_61, _64);

  <bb 10> :
  # DEBUG BEGIN_STMT
  j.293_65 = j_73;
  j_85 = j.293_65 + 1;
  # DEBUG j => j_85

  <bb 11> :
  # j_73 = PHI <j_81(7), j_85(10)>
  # DEBUG j => j_73
  # DEBUG BEGIN_STMT
  _66 = (int) j_73;
  _67 = IPduPtr_79(D)->ComIPduSignalGroupRefNum;
  _68 = (int) _67;
  _69 = IPduPtr_79(D)->ComIPduSignalGroupRefFirst;
  _70 = (int) _69;
  _71 = _68 + _70;
  if (_66 < _71)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_TxConfirmations (const struct ComTxIPduType * IPduPtr)
{
  void (*<T5f8>) (void) fptr;
  Com_CbkTxAckIdxType i;
  const struct Com_ConfigType * Com_gConfigPtr.794_1;
  const struct Com_ConfigType * Com_gConfigPtr.795_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const Com_CbkTxAckIdxType * _7;
  short unsigned int _8;
  int _9;
  short unsigned int i.796_10;
  int _11;
  short unsigned int _12;
  int _13;
  short unsigned int _14;
  int _15;
  int _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_21 = IPduPtr_20(D)->ComNotificationFirst;
  # DEBUG i => i_21
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.794_1 = Com_gConfigPtr;
  Com_gConfigPtr.795_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.795_2->ComTxNotificationRef;
  _4 = (unsigned int) i_17;
  _5 = _4 * 2;
  _6 = _3 + _5;
  _7 = Com_gConfigPtr.794_1 + _6;
  _8 = *_7;
  _9 = (int) _8;
  fptr_22 = Com_CbkTxAck_Array[_9];
  # DEBUG fptr => fptr_22
  # DEBUG BEGIN_STMT
  fptr_22 ();
  # DEBUG BEGIN_STMT
  i.796_10 = i_17;
  i_24 = i.796_10 + 1;
  # DEBUG i => i_24

  <bb 4> :
  # i_17 = PHI <i_21(2), i_24(3)>
  # DEBUG i => i_17
  # DEBUG BEGIN_STMT
  _11 = (int) i_17;
  _12 = IPduPtr_20(D)->ComNotificationFirst;
  _13 = (int) _12;
  _14 = IPduPtr_20(D)->ComNotificationNum;
  _15 = (int) _14;
  _16 = _13 + _15;
  if (_11 < _16)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


Com_EB_TxDM_TMNone (const struct ComTxIPduType * IPduPtr, ComIPduRefType PduId)
{
  uint8 TMOther;
  uint8 BitRes;
  boolean TxDM;
  unsigned char _1;
  unsigned char _2;
  uint8 * Com_gDataMemPtr.478_3;
  const struct Com_ConfigType * Com_gConfigPtr.479_4;
  short unsigned int _5;
  int _6;
  int _7;
  int _8;
  sizetype _9;
  uint8 * _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  short unsigned int _15;
  short unsigned int _16;
  uint8 iftmp.480_17;
  uint8 iftmp.480_24;
  uint8 iftmp.480_25;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_20(D)->ComTxIPduFlags;
  _2 = _1 >> 1;
  TxDM_21 = _2 & 1;
  # DEBUG TxDM => TxDM_21
  # DEBUG BEGIN_STMT
  if (TxDM_21 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.478_3 = Com_gDataMemPtr;
  Com_gConfigPtr.479_4 = Com_gConfigPtr;
  _5 = Com_gConfigPtr.479_4->ComTxIPduStatusBase;
  _6 = (int) _5;
  _7 = (int) PduId_22(D);
  _8 = _6 + _7;
  _9 = (sizetype) _8;
  _10 = Com_gDataMemPtr.478_3 + _9;
  _11 = *_10;
  _12 = _11 >> 6;
  BitRes_23 = _12 & 1;
  # DEBUG BitRes => BitRes_23
  # DEBUG BEGIN_STMT
  if (BitRes_23 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _13 = IPduPtr_20(D)->ComTxModeModes;
  iftmp.480_25 = _13 & 15;
  goto <bb 6>; [INV]

  <bb 5> :
  _14 = IPduPtr_20(D)->ComTxModeModes;
  iftmp.480_24 = _14 >> 4;

  <bb 6> :
  # iftmp.480_17 = PHI <iftmp.480_25(4), iftmp.480_24(5)>
  TMOther_26 = iftmp.480_17;
  # DEBUG TMOther => TMOther_26
  # DEBUG BEGIN_STMT
  if (TMOther_26 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _15 = IPduPtr_20(D)->ComTxTimeoutFactorValue;
  _16 = IPduPtr_20(D)->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_22(D), _15, _16);

  <bb 8> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_TxDMQueue (ComIPduRefType PduId, ComTxTimeoutFactorType Offset, ComIPduRefType EntryInTxDMcQueue)
{
  ComTxTimeoutFactorType * const TxTimeoutQueueValPtr;
  ComTxTimeoutFactorType * const TxTimeoutQueueBase;
  ComTxTimeoutFactorType globalTime;
  ComTxTimeoutFactorType TimeOut;
  uint8 * Com_gDataMemPtr.267_1;
  const struct Com_ConfigType * Com_gConfigPtr.268_2;
  short unsigned int _3;
  sizetype _4;
  unsigned int _5;
  unsigned int _6;
  uint8 * Com_gDataMemPtr.269_7;
  const struct Com_ConfigType * Com_gConfigPtr.270_8;
  short unsigned int _9;
  int _10;
  int _11;
  int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  uint8 * Com_gDataMemPtr.271_16;
  const struct Com_ConfigType * Com_gConfigPtr.272_17;
  short unsigned int _18;
  int _19;
  int _20;
  int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.267_1 = Com_gDataMemPtr;
  Com_gConfigPtr.268_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.268_2->ComTxTimeoutQueueBase;
  _4 = (sizetype) _3;
  TxTimeoutQueueBase_26 = Com_gDataMemPtr.267_1 + _4;
  # DEBUG TxTimeoutQueueBase => TxTimeoutQueueBase_26
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) EntryInTxDMcQueue_27(D);
  _6 = _5 * 2;
  TxTimeoutQueueValPtr_28 = TxTimeoutQueueBase_26 + _6;
  # DEBUG TxTimeoutQueueValPtr => TxTimeoutQueueValPtr_28
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_30 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_30
  # DEBUG BEGIN_STMT
  TimeOut_32 = globalTime_30 + Offset_31(D);
  # DEBUG TimeOut => TimeOut_32
  # DEBUG BEGIN_STMT
  *TxTimeoutQueueValPtr_28 = TimeOut_32;
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.269_7 = Com_gDataMemPtr;
  Com_gConfigPtr.270_8 = Com_gConfigPtr;
  _9 = Com_gConfigPtr.270_8->ComTxIPduStatusBase;
  _10 = (int) _9;
  _11 = (int) PduId_34(D);
  _12 = _10 + _11;
  _13 = (sizetype) _12;
  _14 = Com_gDataMemPtr.269_7 + _13;
  _15 = *_14;
  Com_gDataMemPtr.271_16 = Com_gDataMemPtr;
  Com_gConfigPtr.272_17 = Com_gConfigPtr;
  _18 = Com_gConfigPtr.272_17->ComTxIPduStatusBase;
  _19 = (int) _18;
  _20 = (int) PduId_34(D);
  _21 = _19 + _20;
  _22 = (sizetype) _21;
  _23 = Com_gDataMemPtr.271_16 + _22;
  _24 = _15 | 32;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  return;

}


Com_EB_InitStartTxIPdu (ComIPduRefType TxPduId)
{
  const struct ComTxIPduType * IPduPtr;
  const struct Com_ConfigType * Com_gConfigPtr.517_1;
  const struct Com_ConfigType * Com_gConfigPtr.518_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  short unsigned int _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.517_1 = Com_gConfigPtr;
  Com_gConfigPtr.518_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.518_2->ComTxIPduRef;
  _4 = (unsigned int) TxPduId_10(D);
  _5 = _4 * 64;
  _6 = _3 + _5;
  IPduPtr_11 = Com_gConfigPtr.517_1 + _6;
  # DEBUG IPduPtr => IPduPtr_11
  # DEBUG BEGIN_STMT
  Com_EB_InitTxIPdu (TxPduId_10(D));
  # DEBUG BEGIN_STMT
  _7 = IPduPtr_11->ComIPduGroupMaskRef;
  if (_7 == 65535)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_StartIPdu (IPduPtr_11, TxPduId_10(D));

  <bb 4> :
  return;

}


Com_EB_InitTxIPdu (ComIPduRefType TxPduId)
{
  const struct ComTxIPduType * IPduPtr;
  const struct Com_ConfigType * Com_gConfigPtr.429_1;
  const struct Com_ConfigType * Com_gConfigPtr.430_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.429_1 = Com_gConfigPtr;
  Com_gConfigPtr.430_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.430_2->ComTxIPduRef;
  _4 = (unsigned int) TxPduId_8(D);
  _5 = _4 * 64;
  _6 = _3 + _5;
  IPduPtr_9 = Com_gConfigPtr.429_1 + _6;
  # DEBUG IPduPtr => IPduPtr_9
  # DEBUG BEGIN_STMT
  Com_EB_InitTxIPdu_PduBuffer (IPduPtr_9, TxPduId_8(D));
  # DEBUG BEGIN_STMT
  Com_EB_InitTxIPdu_SignalGroups (IPduPtr_9);
  # DEBUG BEGIN_STMT
  Com_EB_InitTxIPdu_HandleFlags (IPduPtr_9, TxPduId_8(D));
  # DEBUG BEGIN_STMT
  Com_EB_InitTxIPdu_Signals (IPduPtr_9);
  return;

}


Com_EB_HandleTxIPdu (boolean toBeActivated, const struct ComTxIPduType * IPduPtr, boolean Initialize, ComIPduRefType IPduId)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  if (toBeActivated_2(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_HandleTxIPdu_Start (IPduPtr_4(D), Initialize_7(D), IPduId_5(D));
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_EB_HandleTxIPdu_Stop (IPduPtr_4(D), IPduId_5(D));

  <bb 5> :
  return;

}


Com_EB_StartIPdu (const struct ComTxIPduType * IPduPtr, ComIPduRefType PduId)
{
  const struct ComTxModePeriodicType * const TMPeriodicPtr;
  const struct ComTxModeMixedNTimesType * const TMMixedNTimesPtr;
  uint8 * const IPduFlagBytePtr;
  Com_PeriodicSendNextDueTimeType TimeToSendFirst;
  Com_PeriodicSendNextDueTimeType TimeToSendPeriodic;
  ComTxModeIdxType TMRef;
  uint8 BitRes;
  uint8 AktTM;
  uint8 * Com_gDataMemPtr.468_1;
  const struct Com_ConfigType * Com_gConfigPtr.469_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  int _16;
  const struct Com_ConfigType * Com_gConfigPtr.472_17;
  const struct Com_ConfigType * Com_gConfigPtr.473_18;
  long unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  const struct Com_ConfigType * Com_gConfigPtr.474_23;
  const struct Com_ConfigType * Com_gConfigPtr.475_24;
  long unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  sizetype _28;
  int _29;
  unsigned char _30;
  unsigned char _31;
  unsigned int _32;
  unsigned int _33;
  short unsigned int _34;
  short unsigned int _35;
  short unsigned int _36;
  uint8 iftmp.470_40;
  ComTxModeIdxType iftmp.471_41;
  uint8 iftmp.470_55;
  uint8 iftmp.470_56;
  ComTxModeIdxType iftmp.471_58;
  ComTxModeIdxType iftmp.471_59;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_44 = 0;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_44
  # DEBUG BEGIN_STMT
  TimeToSendFirst_45 = 0;
  # DEBUG TimeToSendFirst => TimeToSendFirst_45
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.468_1 = Com_gDataMemPtr;
  Com_gConfigPtr.469_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.469_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_47(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  IPduFlagBytePtr_48 = Com_gDataMemPtr.468_1 + _7;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_48
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _8 = *IPduFlagBytePtr_48;
  _9 = _8 | 1;
  *IPduFlagBytePtr_48 = _9;
  # DEBUG BEGIN_STMT
  _10 = *IPduFlagBytePtr_48;
  _11 = _10 & 127;
  *IPduFlagBytePtr_48 = _11;
  # DEBUG BEGIN_STMT
  _12 = *IPduFlagBytePtr_48;
  _13 = _12 >> 6;
  BitRes_52 = _13 & 1;
  # DEBUG BitRes => BitRes_52
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (BitRes_52 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _14 = IPduPtr_54(D)->ComTxModeModes;
  iftmp.470_56 = _14 & 15;
  goto <bb 5>; [INV]

  <bb 4> :
  _15 = IPduPtr_54(D)->ComTxModeModes;
  iftmp.470_55 = _15 >> 4;

  <bb 5> :
  # iftmp.470_40 = PHI <iftmp.470_56(3), iftmp.470_55(4)>
  AktTM_57 = iftmp.470_40;
  # DEBUG AktTM => AktTM_57
  # DEBUG BEGIN_STMT
  if (BitRes_52 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.471_59 = IPduPtr_54(D)->ComTxModeTrueRef;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.471_58 = IPduPtr_54(D)->ComTxModeFalseRef;

  <bb 8> :
  # iftmp.471_41 = PHI <iftmp.471_59(6), iftmp.471_58(7)>
  TMRef_60 = iftmp.471_41;
  # DEBUG TMRef => TMRef_60
  # DEBUG BEGIN_STMT
  _16 = (int) AktTM_57;
  switch (_16) <default: <L23> [INV], case 1: <L7> [INV], case 3: <L7> [INV], case 4: <L6> [INV]>

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.472_17 = Com_gConfigPtr;
  Com_gConfigPtr.473_18 = Com_gConfigPtr;
  _19 = Com_gConfigPtr.473_18->ComTxModeMixedNTimesRef;
  _20 = (unsigned int) TMRef_60;
  _21 = _20 * 8;
  _22 = _19 + _21;
  TMMixedNTimesPtr_61 = Com_gConfigPtr.472_17 + _22;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_61
  # DEBUG BEGIN_STMT
  TimeToSendFirst_62 = TMMixedNTimesPtr_61->ComTxModeTimeOffsetFactor;
  # DEBUG TimeToSendFirst => TimeToSendFirst_62
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_63 = TMMixedNTimesPtr_61->ComTxModeTimePeriodFactor;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_63
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.474_23 = Com_gConfigPtr;
  Com_gConfigPtr.475_24 = Com_gConfigPtr;
  _25 = Com_gConfigPtr.475_24->ComTxModePeriodicRef;
  _26 = (unsigned int) TMRef_60;
  _27 = _26 * 4;
  _28 = _25 + _27;
  TMPeriodicPtr_64 = Com_gConfigPtr.474_23 + _28;
  # DEBUG TMPeriodicPtr => TMPeriodicPtr_64
  # DEBUG BEGIN_STMT
  TimeToSendFirst_65 = TMPeriodicPtr_64->ComTxModeTimeOffsetFactor;
  # DEBUG TimeToSendFirst => TimeToSendFirst_65
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_66 = TMPeriodicPtr_64->ComTxModeTimePeriodFactor;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_66
  # DEBUG BEGIN_STMT

  <bb 11> :
  # TimeToSendPeriodic_37 = PHI <TimeToSendPeriodic_63(9), TimeToSendPeriodic_66(10), TimeToSendPeriodic_44(8)>
  # TimeToSendFirst_39 = PHI <TimeToSendFirst_62(9), TimeToSendFirst_65(10), TimeToSendFirst_45(8)>
<L23>:
  # DEBUG TimeToSendFirst => TimeToSendFirst_39
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_37
  # DEBUG BEGIN_STMT
  _29 = (int) AktTM_57;
  switch (_29) <default: <L25> [INV], case 0: <L19> [INV], case 1: <L11> [INV], case 3 ... 4: <L11> [INV]>

  <bb 12> :
<L11>:
  # DEBUG BEGIN_STMT
  if (TimeToSendFirst_39 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Com_EB_Send_Pdu (PduId_47(D), IPduPtr_54(D));
  # DEBUG BEGIN_STMT
  _30 = IPduPtr_54(D)->ComTxIPduFlags;
  _31 = _30 >> 1;
  _32 = (unsigned int) _31;
  _33 = _32 & 1;
  if (_33 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _34 = IPduPtr_54(D)->ComTxTimeoutFactorValue;
  _35 = IPduPtr_54(D)->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_47(D), _34, _35);
  goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  TimeToSendPeriodic_67 = TimeToSendFirst_39;
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_67

  <bb 16> :
  # TimeToSendPeriodic_38 = PHI <TimeToSendPeriodic_37(14), TimeToSendPeriodic_67(15), TimeToSendPeriodic_37(13)>
  # DEBUG TimeToSendPeriodic => TimeToSendPeriodic_38
  # DEBUG BEGIN_STMT
  _36 = IPduPtr_54(D)->PeriodicQueueRef;
  Com_EB_PeriodicSendQueue (TimeToSendPeriodic_38, _36);
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_48, 2);
  # DEBUG BEGIN_STMT
  goto <bb 18>; [INV]

  <bb 17> :
<L19>:
  # DEBUG BEGIN_STMT
  Com_EB_TxDM_TMNone (IPduPtr_54(D), PduId_47(D));
  # DEBUG BEGIN_STMT

  <bb 18> :
<L25>:
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_InitTxIPdu_Signals (const struct ComTxIPduType * IPduPtr)
{
  const ComSignalRefType signalId;
  ComSignalRefType i;
  const struct Com_ConfigType * Com_gConfigPtr.465_1;
  const struct Com_ConfigType * Com_gConfigPtr.466_2;
  long unsigned int _3;
  int _4;
  short unsigned int _5;
  int _6;
  int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const ComSignalRefType * _11;
  short unsigned int i.467_12;
  short unsigned int _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_16 = 0;
  # DEBUG i => i_16
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.465_1 = Com_gConfigPtr;
  Com_gConfigPtr.466_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.466_2->ComTxIPduSignalListRef;
  _4 = (int) i_14;
  _5 = IPduPtr_18(D)->ComIPduSignalRefFirst;
  _6 = (int) _5;
  _7 = _4 + _6;
  _8 = (unsigned int) _7;
  _9 = _8 * 2;
  _10 = _3 + _9;
  _11 = Com_gConfigPtr.465_1 + _10;
  signalId_19 = *_11;
  # DEBUG signalId => signalId_19
  # DEBUG BEGIN_STMT
  Com_EB_InitTx_Signal (signalId_19);
  # DEBUG BEGIN_STMT
  i.467_12 = i_14;
  i_21 = i.467_12 + 1;
  # DEBUG i => i_21

  <bb 4> :
  # i_14 = PHI <i_16(2), i_21(3)>
  # DEBUG i => i_14
  # DEBUG BEGIN_STMT
  _13 = IPduPtr_18(D)->ComIPduSignalWithFilterRefNum;
  if (i_14 < _13)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


Com_EB_InitTx_Signal (ComSignalRefType signalId)
{
  const struct ComTxSignalType * const SignalPtr;
  const struct Com_ConfigType * Com_gConfigPtr.456_1;
  const struct Com_ConfigType * Com_gConfigPtr.457_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  unsigned char _7;
  const struct ComSignalBaseType * _8;
  unsigned char _9;
  short unsigned int _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.456_1 = Com_gConfigPtr;
  Com_gConfigPtr.457_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.457_2->ComTxSignalRef;
  _4 = (unsigned int) signalId_13(D);
  _5 = _4 * 26;
  _6 = _3 + _5;
  SignalPtr_14 = Com_gConfigPtr.456_1 + _6;
  # DEBUG SignalPtr => SignalPtr_14
  # DEBUG BEGIN_STMT
  _7 = SignalPtr_14->ComSignalBase.ComFilterConf.ComFilterType;
  if (_7 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _8 = &SignalPtr_14->ComSignalBase;
  Com_EB_SetBuffer (_8);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _9 = SignalPtr_14->ComSignalBase.ComFilterConf.ComFilterType;
  if (_9 == 7)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _10 = SignalPtr_14->ComSignalBase.ComFilterConf.ComFilterRef;
  Com_ResetFilerOneEveryN (_10);

  <bb 6> :
  return;

}


Com_EB_InitTxIPdu_HandleFlags (const struct ComTxIPduType * IPduPtr, ComIPduRefType TxPduId)
{
  const uint16 NumberOfFlagsBytes;
  const uint16 NumberOfFlagsBits;
  const uint8 * const initFlagPtr;
  uint8 * Com_gDataMemPtr.458_1;
  const struct Com_ConfigType * Com_gConfigPtr.459_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  unsigned char _10;
  unsigned int _11;
  unsigned int _12;
  uint8 * Com_gDataMemPtr.460_13;
  const struct Com_ConfigType * Com_gConfigPtr.461_14;
  short unsigned int _15;
  int _16;
  int _17;
  int _18;
  sizetype _19;
  uint8 * _20;
  long unsigned int _21;
  const struct Com_ConfigType * Com_gConfigPtr.463_22;
  long unsigned int _23;
  short unsigned int _24;
  short unsigned int _25;
  short unsigned int _26;
  uint8 * Com_gDataMemPtr.464_27;
  short unsigned int _28;
  sizetype _29;
  uint8 * _30;
  long unsigned int _31;
  const uint8 * iftmp.462_32;
  const uint8 * iftmp.462_40;
  const uint8 * iftmp.462_41;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.458_1 = Com_gDataMemPtr;
  Com_gConfigPtr.459_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.459_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) TxPduId_36(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  _8 = Com_gDataMemPtr.458_1 + _7;
  *_8 = 0;
  # DEBUG BEGIN_STMT
  _9 = IPduPtr_38(D)->ComTxIPduFlags;
  _10 = _9 >> 2;
  _11 = (unsigned int) _10;
  _12 = _11 & 1;
  if (_12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.460_13 = Com_gDataMemPtr;
  Com_gConfigPtr.461_14 = Com_gConfigPtr;
  _15 = Com_gConfigPtr.461_14->ComTxIPduStatusBase;
  _16 = (int) _15;
  _17 = (int) TxPduId_36(D);
  _18 = _16 + _17;
  _19 = (sizetype) _18;
  _20 = Com_gDataMemPtr.460_13 + _19;
  TS_AtomicSetBit_8 (_20, 6);

  <bb 4> :
  # DEBUG BEGIN_STMT
  _21 = IPduPtr_38(D)->ComIPduTMSFlagsInitValueRef;
  if (_21 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Com_gConfigPtr.463_22 = Com_gConfigPtr;
  _23 = IPduPtr_38(D)->ComIPduTMSFlagsInitValueRef;
  iftmp.462_41 = Com_gConfigPtr.463_22 + _23;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.462_40 = 0B;

  <bb 7> :
  # iftmp.462_32 = PHI <iftmp.462_41(5), iftmp.462_40(6)>
  initFlagPtr_42 = iftmp.462_32;
  # DEBUG initFlagPtr => initFlagPtr_42
  # DEBUG BEGIN_STMT
  if (initFlagPtr_42 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _24 = IPduPtr_38(D)->ComIPduSignalWithFilterRefNum;
  _25 = IPduPtr_38(D)->ComIPduSignalGroupWithFilterRefNum;
  NumberOfFlagsBits_43 = _24 + _25;
  # DEBUG NumberOfFlagsBits => NumberOfFlagsBits_43
  # DEBUG BEGIN_STMT
  _26 = NumberOfFlagsBits_43 + 7;
  NumberOfFlagsBytes_44 = _26 / 8;
  # DEBUG NumberOfFlagsBytes => NumberOfFlagsBytes_44
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.464_27 = Com_gDataMemPtr;
  _28 = IPduPtr_38(D)->ComIPduTMSFlagsRef;
  _29 = (sizetype) _28;
  _30 = Com_gDataMemPtr.464_27 + _29;
  _31 = (long unsigned int) NumberOfFlagsBytes_44;
  TS_MemCpy32 (_30, initFlagPtr_42, _31);

  <bb 9> :
  return;

}


Com_EB_InitTxIPdu_SignalGroups (const struct ComTxIPduType * IPduPtr)
{
  uint8 * const buffer;
  const struct ComTxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType SignalGId;
  ComSignalGroupRefType i;
  const struct Com_ConfigType * Com_gConfigPtr.435_1;
  const struct Com_ConfigType * Com_gConfigPtr.436_2;
  long unsigned int _3;
  int _4;
  short unsigned int _5;
  int _6;
  int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const ComSignalGroupRefType * _11;
  const struct Com_ConfigType * Com_gConfigPtr.437_12;
  const struct Com_ConfigType * Com_gConfigPtr.438_13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  short unsigned int _18;
  uint8 * Com_gDataMemPtr.439_19;
  short unsigned int _20;
  sizetype _21;
  short unsigned int i.440_22;
  short unsigned int _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_27 = 0;
  # DEBUG i => i_27
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.435_1 = Com_gConfigPtr;
  Com_gConfigPtr.436_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.436_2->ComTxIPduSignalGroupListRef;
  _4 = (int) i_24;
  _5 = IPduPtr_29(D)->ComIPduSignalGroupRefFirst;
  _6 = (int) _5;
  _7 = _4 + _6;
  _8 = (unsigned int) _7;
  _9 = _8 * 2;
  _10 = _3 + _9;
  _11 = Com_gConfigPtr.435_1 + _10;
  SignalGId_30 = *_11;
  # DEBUG SignalGId => SignalGId_30
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.437_12 = Com_gConfigPtr;
  Com_gConfigPtr.438_13 = Com_gConfigPtr;
  _14 = Com_gConfigPtr.438_13->ComTxSignalGroupRef;
  _15 = (unsigned int) SignalGId_30;
  _16 = _15 * 32;
  _17 = _14 + _16;
  SignalGPtr_31 = Com_gConfigPtr.437_12 + _17;
  # DEBUG SignalGPtr => SignalGPtr_31
  # DEBUG BEGIN_STMT
  _18 = SignalGPtr_31->ComSignalGroupValueRef;
  if (_18 != 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.439_19 = Com_gDataMemPtr;
  _20 = SignalGPtr_31->ComSignalGroupValueRef;
  _21 = (sizetype) _20;
  buffer_32 = Com_gDataMemPtr.439_19 + _21;
  # DEBUG buffer => buffer_32
  # DEBUG BEGIN_STMT
  Com_EB_InitSGBuffer (buffer_32, SignalGPtr_31, IPduPtr_29(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_EB_ClearTxSGTMSState (SignalGId_30);
  # DEBUG BEGIN_STMT
  i.440_22 = i_24;
  i_35 = i.440_22 + 1;
  # DEBUG i => i_35

  <bb 6> :
  # i_24 = PHI <i_27(2), i_35(5)>
  # DEBUG i => i_24
  # DEBUG BEGIN_STMT
  _23 = IPduPtr_29(D)->ComIPduSignalGroupRefNum;
  if (i_24 < _23)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


Com_EB_ClearTxSGTMSState (ComIPduRefType SignalGId)
{
  const ComSignalRefType GSignalId;
  ComTxGroupSignalRefType GSigRef;
  uint16 j;
  ComSignalRefType length;
  uint8 * SGFlagPtr;
  const uint8 * const initFlagPtr;
  const struct ComTxSignalGroupType * const SignalGPtr;
  const struct Com_ConfigType * Com_gConfigPtr.442_1;
  const struct Com_ConfigType * Com_gConfigPtr.443_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  long unsigned int _7;
  const struct Com_ConfigType * Com_gConfigPtr.445_8;
  long unsigned int _9;
  uint8 * Com_gDataMemPtr.446_10;
  const struct Com_ConfigType * Com_gConfigPtr.447_11;
  short unsigned int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  short unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  uint8 * Com_gDataMemPtr.448_21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  long unsigned int _25;
  uint8 * Com_gDataMemPtr.449_26;
  short unsigned int _27;
  int _28;
  int _29;
  int _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  uint8 * Com_gDataMemPtr.450_34;
  const struct Com_ConfigType * Com_gConfigPtr.451_35;
  short unsigned int _36;
  int _37;
  int _38;
  int _39;
  sizetype _40;
  uint8 * _41;
  short unsigned int j.452_42;
  const struct Com_ConfigType * Com_gConfigPtr.453_43;
  const struct Com_ConfigType * Com_gConfigPtr.454_44;
  long unsigned int _45;
  unsigned int _46;
  unsigned int _47;
  sizetype _48;
  const ComSignalRefType * _49;
  short unsigned int GSigRef.455_50;
  int _51;
  short unsigned int _52;
  int _53;
  short unsigned int _54;
  int _55;
  int _56;
  const uint8 * iftmp.444_59;
  const uint8 * iftmp.444_67;
  const uint8 * iftmp.444_68;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.442_1 = Com_gConfigPtr;
  Com_gConfigPtr.443_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.443_2->ComTxSignalGroupRef;
  _4 = (unsigned int) SignalGId_65(D);
  _5 = _4 * 32;
  _6 = _3 + _5;
  SignalGPtr_66 = Com_gConfigPtr.442_1 + _6;
  # DEBUG SignalGPtr => SignalGPtr_66
  # DEBUG BEGIN_STMT
  _7 = SignalGPtr_66->ComSignalGTMSFlagsInitValueRef;
  if (_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Com_gConfigPtr.445_8 = Com_gConfigPtr;
  _9 = SignalGPtr_66->ComSignalGTMSFlagsInitValueRef;
  iftmp.444_68 = Com_gConfigPtr.445_8 + _9;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.444_67 = 0B;

  <bb 5> :
  # iftmp.444_59 = PHI <iftmp.444_68(3), iftmp.444_67(4)>
  initFlagPtr_69 = iftmp.444_59;
  # DEBUG initFlagPtr => initFlagPtr_69
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.446_10 = Com_gDataMemPtr;
  Com_gConfigPtr.447_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.447_11->ComTxSignalGroupStatusBase;
  _13 = (int) _12;
  _14 = (int) SignalGId_65(D);
  _15 = _13 + _14;
  _16 = (sizetype) _15;
  SGFlagPtr_70 = Com_gDataMemPtr.446_10 + _16;
  # DEBUG SGFlagPtr => SGFlagPtr_70
  # DEBUG BEGIN_STMT
  *SGFlagPtr_70 = 0;
  # DEBUG BEGIN_STMT
  if (initFlagPtr_69 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _17 = SignalGPtr_66->ComGroupSignalWithFilterRefNum;
  _18 = (unsigned int) _17;
  _19 = _18 + 7;
  _20 = _19 / 8;
  length_72 = (ComSignalRefType) _20;
  # DEBUG length => length_72
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.448_21 = Com_gDataMemPtr;
  _22 = SignalGPtr_66->ComSignalGTMSFlagsRef;
  _23 = (sizetype) _22;
  _24 = Com_gDataMemPtr.448_21 + _23;
  _25 = (long unsigned int) length_72;
  TS_MemCpy32 (_24, initFlagPtr_69, _25);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_74 = 0;
  # DEBUG j => j_74
  goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.449_26 = Com_gDataMemPtr;
  _27 = SignalGPtr_66->ComSignalGTMSFlagsRef;
  _28 = (int) _27;
  _29 = (int) j_57;
  _30 = _28 + _29;
  _31 = (sizetype) _30;
  _32 = Com_gDataMemPtr.449_26 + _31;
  _33 = *_32;
  if (_33 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.450_34 = Com_gDataMemPtr;
  Com_gConfigPtr.451_35 = Com_gConfigPtr;
  _36 = Com_gConfigPtr.451_35->ComTxSignalGroupStatusBase;
  _37 = (int) _36;
  _38 = (int) SignalGId_65(D);
  _39 = _37 + _38;
  _40 = (sizetype) _39;
  _41 = Com_gDataMemPtr.450_34 + _40;
  TS_AtomicSetBit_8 (_41, 0);

  <bb 9> :
  # DEBUG BEGIN_STMT
  j.452_42 = j_57;
  j_80 = j.452_42 + 1;
  # DEBUG j => j_80

  <bb 10> :
  # j_57 = PHI <j_74(6), j_80(9)>
  # DEBUG j => j_57
  # DEBUG BEGIN_STMT
  if (j_57 < length_72)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  GSigRef_75 = SignalGPtr_66->ComGroupSignalRefFirst;
  # DEBUG GSigRef => GSigRef_75
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.453_43 = Com_gConfigPtr;
  Com_gConfigPtr.454_44 = Com_gConfigPtr;
  _45 = Com_gConfigPtr.454_44->ComTxSignalGroupGroupSignalListRef;
  _46 = (unsigned int) GSigRef_58;
  _47 = _46 * 2;
  _48 = _45 + _47;
  _49 = Com_gConfigPtr.453_43 + _48;
  GSignalId_76 = *_49;
  # DEBUG GSignalId => GSignalId_76
  # DEBUG BEGIN_STMT
  Com_EB_InitTx_Signal (GSignalId_76);
  # DEBUG BEGIN_STMT
  GSigRef.455_50 = GSigRef_58;
  GSigRef_78 = GSigRef.455_50 + 1;
  # DEBUG GSigRef => GSigRef_78

  <bb 13> :
  # GSigRef_58 = PHI <GSigRef_75(11), GSigRef_78(12)>
  # DEBUG GSigRef => GSigRef_58
  # DEBUG BEGIN_STMT
  _51 = (int) GSigRef_58;
  _52 = SignalGPtr_66->ComGroupSignalWithFilterRefNum;
  _53 = (int) _52;
  _54 = SignalGPtr_66->ComGroupSignalRefFirst;
  _55 = (int) _54;
  _56 = _53 + _55;
  if (_51 < _56)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  return;

}


Com_EB_InitTxIPdu_PduBuffer (const struct ComTxIPduType * IPduPtr, ComIPduRefType TxPduId)
{
  const uint8 * const valPtr;
  const struct Com_ConfigType * Com_gConfigPtr.431_1;
  long unsigned int _2;
  uint8 * Com_gDataMemPtr.432_3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  short unsigned int _7;
  long unsigned int _8;
  uint8 * Com_gDataMemPtr.433_9;
  const struct Com_ConfigType * Com_gConfigPtr.434_10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned int _14;
  unsigned int _15;
  ComIPduSizeType * _16;
  short unsigned int _17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.431_1 = Com_gConfigPtr;
  _2 = IPduPtr_19(D)->ComInitValueRef;
  valPtr_20 = Com_gConfigPtr.431_1 + _2;
  # DEBUG valPtr => valPtr_20
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.432_3 = Com_gDataMemPtr;
  _4 = IPduPtr_19(D)->ComIPduValueRef;
  _5 = (sizetype) _4;
  _6 = Com_gDataMemPtr.432_3 + _5;
  _7 = IPduPtr_19(D)->ComIPduSizeMax;
  _8 = (long unsigned int) _7;
  TS_MemCpy32 (_6, valPtr_20, _8);
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.433_9 = Com_gDataMemPtr;
  Com_gConfigPtr.434_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.434_10->ComTxIPduLengthBase;
  _12 = (sizetype) _11;
  _13 = Com_gDataMemPtr.433_9 + _12;
  _14 = (unsigned int) TxPduId_22(D);
  _15 = _14 * 2;
  _16 = _13 + _15;
  _17 = IPduPtr_19(D)->ComIPduInitSize;
  *_16 = _17;
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_HandleTxIPdu_Stop (const struct ComTxIPduType * IPduPtr, ComIPduRefType IPduId)
{
  Com_CbkTxTOutIdxType j;
  uint8 AktTM;
  uint8 BitRes;
  uint8 * Com_gDataMemPtr.481_1;
  const struct Com_ConfigType * Com_gConfigPtr.482_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  uint8 * _8;
  uint8 * Com_gDataMemPtr.483_9;
  const struct Com_ConfigType * Com_gConfigPtr.484_10;
  short unsigned int _11;
  int _12;
  int _13;
  int _14;
  sizetype _15;
  uint8 * _16;
  uint8 * Com_gDataMemPtr.485_17;
  const struct Com_ConfigType * Com_gConfigPtr.486_18;
  short unsigned int _19;
  int _20;
  int _21;
  int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned int _26;
  unsigned int _27;
  uint8 * Com_gDataMemPtr.487_28;
  const struct Com_ConfigType * Com_gConfigPtr.488_29;
  short unsigned int _30;
  int _31;
  int _32;
  int _33;
  sizetype _34;
  uint8 * _35;
  const struct Com_ConfigType * Com_gConfigPtr.489_36;
  const struct Com_ConfigType * Com_gConfigPtr.490_37;
  long unsigned int _38;
  unsigned int _39;
  unsigned int _40;
  sizetype _41;
  const Com_CbkTxTOutIdxType * _42;
  short unsigned int _43;
  int _44;
  void (*<T600>) (void) _45;
  short unsigned int j.491_46;
  int _47;
  short unsigned int _48;
  int _49;
  short unsigned int _50;
  int _51;
  int _52;
  uint8 * Com_gDataMemPtr.492_53;
  const struct Com_ConfigType * Com_gConfigPtr.493_54;
  short unsigned int _55;
  int _56;
  int _57;
  int _58;
  sizetype _59;
  uint8 * _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  int _65;
  uint8 * Com_gDataMemPtr.495_66;
  const struct Com_ConfigType * Com_gConfigPtr.496_67;
  short unsigned int _68;
  int _69;
  int _70;
  int _71;
  sizetype _72;
  uint8 * _73;
  uint8 * Com_gDataMemPtr.497_74;
  const struct Com_ConfigType * Com_gConfigPtr.498_75;
  short unsigned int _76;
  int _77;
  int _78;
  int _79;
  sizetype _80;
  uint8 * _81;
  uint8 iftmp.494_83;
  uint8 iftmp.494_97;
  uint8 iftmp.494_98;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.481_1 = Com_gDataMemPtr;
  Com_gConfigPtr.482_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.482_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) IPduId_88(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  _8 = Com_gDataMemPtr.481_1 + _7;
  TS_AtomicClearBit_8 (_8, 0);
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.483_9 = Com_gDataMemPtr;
  Com_gConfigPtr.484_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.484_10->ComTxIPduStatusBase;
  _12 = (int) _11;
  _13 = (int) IPduId_88(D);
  _14 = _12 + _13;
  _15 = (sizetype) _14;
  _16 = Com_gDataMemPtr.483_9 + _15;
  TS_AtomicClearBit_8 (_16, 4);
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.485_17 = Com_gDataMemPtr;
  Com_gConfigPtr.486_18 = Com_gConfigPtr;
  _19 = Com_gConfigPtr.486_18->ComTxIPduStatusBase;
  _20 = (int) _19;
  _21 = (int) IPduId_88(D);
  _22 = _20 + _21;
  _23 = (sizetype) _22;
  _24 = Com_gDataMemPtr.485_17 + _23;
  _25 = *_24;
  _26 = (unsigned int) _25;
  _27 = _26 & 32;
  if (_27 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.487_28 = Com_gDataMemPtr;
  Com_gConfigPtr.488_29 = Com_gConfigPtr;
  _30 = Com_gConfigPtr.488_29->ComTxIPduStatusBase;
  _31 = (int) _30;
  _32 = (int) IPduId_88(D);
  _33 = _31 + _32;
  _34 = (sizetype) _33;
  _35 = Com_gDataMemPtr.487_28 + _34;
  TS_AtomicClearBit_8 (_35, 5);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_93 = IPduPtr_92(D)->ComTxTimeoutNotificationFirst;
  # DEBUG j => j_93
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.489_36 = Com_gConfigPtr;
  Com_gConfigPtr.490_37 = Com_gConfigPtr;
  _38 = Com_gConfigPtr.490_37->ComTxErrorNotificationRef;
  _39 = (unsigned int) j_82;
  _40 = _39 * 2;
  _41 = _38 + _40;
  _42 = Com_gConfigPtr.489_36 + _41;
  _43 = *_42;
  _44 = (int) _43;
  _45 = Com_CbkTxErr_Array[_44];
  _45 ();
  # DEBUG BEGIN_STMT
  j.491_46 = j_82;
  j_95 = j.491_46 + 1;
  # DEBUG j => j_95

  <bb 5> :
  # j_82 = PHI <j_93(3), j_95(4)>
  # DEBUG j => j_82
  # DEBUG BEGIN_STMT
  _47 = (int) j_82;
  _48 = IPduPtr_92(D)->ComTxTimeoutNotificationFirst;
  _49 = (int) _48;
  _50 = IPduPtr_92(D)->ComTxTimeoutNotificationNum;
  _51 = (int) _50;
  _52 = _49 + _51;
  if (_47 < _52)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.492_53 = Com_gDataMemPtr;
  Com_gConfigPtr.493_54 = Com_gConfigPtr;
  _55 = Com_gConfigPtr.493_54->ComTxIPduStatusBase;
  _56 = (int) _55;
  _57 = (int) IPduId_88(D);
  _58 = _56 + _57;
  _59 = (sizetype) _58;
  _60 = Com_gDataMemPtr.492_53 + _59;
  _61 = *_60;
  _62 = _61 >> 6;
  BitRes_96 = _62 & 1;
  # DEBUG BitRes => BitRes_96
  # DEBUG BEGIN_STMT
  if (BitRes_96 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _63 = IPduPtr_92(D)->ComTxModeModes;
  iftmp.494_98 = _63 & 15;
  goto <bb 9>; [INV]

  <bb 8> :
  _64 = IPduPtr_92(D)->ComTxModeModes;
  iftmp.494_97 = _64 >> 4;

  <bb 9> :
  # iftmp.494_83 = PHI <iftmp.494_98(7), iftmp.494_97(8)>
  AktTM_99 = iftmp.494_83;
  # DEBUG AktTM => AktTM_99
  # DEBUG BEGIN_STMT
  _65 = (int) AktTM_99;
  switch (_65) <default: <L18> [INV], case 1: <L10> [INV], case 3 ... 5: <L10> [INV]>

  <bb 10> :
<L10>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.495_66 = Com_gDataMemPtr;
  Com_gConfigPtr.496_67 = Com_gConfigPtr;
  _68 = Com_gConfigPtr.496_67->ComTxIPduStatusBase;
  _69 = (int) _68;
  _70 = (int) IPduId_88(D);
  _71 = _69 + _70;
  _72 = (sizetype) _71;
  _73 = Com_gDataMemPtr.495_66 + _72;
  TS_AtomicClearBit_8 (_73, 2);
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.497_74 = Com_gDataMemPtr;
  Com_gConfigPtr.498_75 = Com_gConfigPtr;
  _76 = Com_gConfigPtr.498_75->ComTxIPduStatusBase;
  _77 = (int) _76;
  _78 = (int) IPduId_88(D);
  _79 = _77 + _78;
  _80 = (sizetype) _79;
  _81 = Com_gDataMemPtr.497_74 + _80;
  TS_AtomicClearBit_8 (_81, 3);
  # DEBUG BEGIN_STMT

  <bb 11> :
<L18>:
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_HandleTxIPdu_Start (const struct ComTxIPduType * IPduPtr, boolean Initialize, ComIPduRefType IPduId)
{
  uint8 * Com_gDataMemPtr.427_1;
  const struct Com_ConfigType * Com_gConfigPtr.428_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  unsigned int _10;
  unsigned int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.427_1 = Com_gDataMemPtr;
  Com_gConfigPtr.428_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.428_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) IPduId_15(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  _8 = Com_gDataMemPtr.427_1 + _7;
  _9 = *_8;
  _10 = (unsigned int) _9;
  _11 = _10 & 1;
  if (_11 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (Initialize_16(D) == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_EB_InitTxIPdu (IPduId_15(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_EB_StartIPdu (IPduPtr_18(D), IPduId_15(D));

  <bb 6> :
  return;

}


Com_EB_HandleMDT (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr)
{
  const ComTxIPduMinimumDelayTimeFactorType MDT;

  <bb 2> :
  # DEBUG BEGIN_STMT
  MDT_4 = IPduPtr_3(D)->ComTxIPduMinimumDelayTimeFactorValue;
  # DEBUG MDT => MDT_4
  # DEBUG BEGIN_STMT
  if (MDT_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_MdtQueue (PduId_5(D), IPduPtr_3(D), MDT_4);

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Send_Pdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr)
{
  Std_ReturnType PduRRet;
  boolean (*<T5e8>) (PduIdType, struct PduInfoType *) fptr;
  boolean coretval;
  uint8 * const pdudataptr;
  struct PduInfoType pduinfo;
  uint8 * Com_gDataMemPtr.273_1;
  short unsigned int _2;
  sizetype _3;
  uint8 * Com_gDataMemPtr.274_4;
  const struct Com_ConfigType * Com_gConfigPtr.275_5;
  short unsigned int _6;
  sizetype _7;
  uint8 * _8;
  unsigned int _9;
  unsigned int _10;
  ComIPduSizeType * _11;
  short unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;
  int _15;
  short unsigned int _16;
  unsigned char _17;
  unsigned char _18;
  unsigned int _19;
  unsigned int _20;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.273_1 = Com_gDataMemPtr;
  _2 = IPduPtr_25(D)->ComIPduValueRef;
  _3 = (sizetype) _2;
  pdudataptr_26 = Com_gDataMemPtr.273_1 + _3;
  # DEBUG pdudataptr => pdudataptr_26
  # DEBUG BEGIN_STMT
  coretval_27 = 1;
  # DEBUG coretval => coretval_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pduinfo.SduDataPtr = pdudataptr_26;
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.274_4 = Com_gDataMemPtr;
  Com_gConfigPtr.275_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.275_5->ComTxIPduLengthBase;
  _7 = (sizetype) _6;
  _8 = Com_gDataMemPtr.274_4 + _7;
  _9 = (unsigned int) PduId_29(D);
  _10 = _9 * 2;
  _11 = _8 + _10;
  _12 = *_11;
  pduinfo.SduLength = _12;
  # DEBUG BEGIN_STMT
  _13 = IPduPtr_25(D)->ComIPduCallOutFuncPtrRef;
  if (_13 != 65535)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _14 = IPduPtr_25(D)->ComIPduCallOutFuncPtrRef;
  _15 = (int) _14;
  fptr_31 = Com_TxCallouts[_15];
  # DEBUG fptr => fptr_31
  # DEBUG BEGIN_STMT
  coretval_33 = fptr_31 (PduId_29(D), &pduinfo);
  # DEBUG coretval => coretval_33

  <bb 4> :
  # coretval_21 = PHI <coretval_27(2), coretval_33(3)>
  # DEBUG coretval => coretval_21
  # DEBUG BEGIN_STMT
  if (coretval_21 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_EB_HandleMDT (PduId_29(D), IPduPtr_25(D));
  # DEBUG BEGIN_STMT
  _16 = IPduPtr_25(D)->PduRTxPduId;
  PduRRet_36 = PduR_ComTransmit (_16, &pduinfo);
  # DEBUG PduRRet => PduRRet_36
  # DEBUG BEGIN_STMT
  if (PduRRet_36 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _17 = IPduPtr_25(D)->ComTxIPduFlags;
  _18 = _17 >> 3;
  _19 = (unsigned int) _18;
  _20 = _19 & 3;
  if (_20 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Com_EB_ClearTxUpdateBits (IPduPtr_25(D));

  <bb 8> :
  # DEBUG BEGIN_STMT
  pduinfo ={v} {CLOBBER};
  return;

}


Com_EB_PeriodicSendQueue (Com_PeriodicSendNextDueTimeType Offset, ComIPduRefType EntryInPeriodicQueue)
{
  Com_PeriodicSendNextDueTimeType * const PeriodicQueueValPtr;
  Com_PeriodicSendNextDueTimeType * const PeriodicQueueBase;
  Com_PeriodicSendNextDueTimeType globalTime;
  Com_PeriodicSendNextDueTimeType TimeOut;
  uint8 * Com_gDataMemPtr.476_1;
  const struct Com_ConfigType * Com_gConfigPtr.477_2;
  short unsigned int _3;
  sizetype _4;
  unsigned int _5;
  unsigned int _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.476_1 = Com_gDataMemPtr;
  Com_gConfigPtr.477_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.477_2->ComPeriodicQueueBase;
  _4 = (sizetype) _3;
  PeriodicQueueBase_8 = Com_gDataMemPtr.476_1 + _4;
  # DEBUG PeriodicQueueBase => PeriodicQueueBase_8
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) EntryInPeriodicQueue_9(D);
  _6 = _5 * 2;
  PeriodicQueueValPtr_10 = PeriodicQueueBase_8 + _6;
  # DEBUG PeriodicQueueValPtr => PeriodicQueueValPtr_10
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_12 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_12
  # DEBUG BEGIN_STMT
  TimeOut_14 = globalTime_12 + Offset_13(D);
  # DEBUG TimeOut => TimeOut_14
  # DEBUG BEGIN_STMT
  *PeriodicQueueValPtr_10 = TimeOut_14;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_CalculateTM (const struct ComTxIPduType * IPduPtr)
{
  uint16 NumberOfFlags;
  uint16 numberOfFlagBytes;
  boolean newTM;
  uint16 j;
  uint8 * const IpduTMFlagsBase;
  uint8 * Com_gDataMemPtr.261_1;
  short unsigned int _2;
  sizetype _3;
  short unsigned int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  uint8 * _10;
  unsigned char _11;
  short unsigned int j.262_12;
  boolean _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.261_1 = Com_gDataMemPtr;
  _2 = IPduPtr_17(D)->ComIPduTMSFlagsRef;
  _3 = (sizetype) _2;
  IpduTMFlagsBase_18 = Com_gDataMemPtr.261_1 + _3;
  # DEBUG IpduTMFlagsBase => IpduTMFlagsBase_18
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  newTM_19 = 0;
  # DEBUG newTM => newTM_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = IPduPtr_17(D)->ComIPduSignalWithFilterRefNum;
  _5 = IPduPtr_17(D)->ComIPduSignalGroupWithFilterRefNum;
  NumberOfFlags_20 = _4 + _5;
  # DEBUG NumberOfFlags => NumberOfFlags_20
  # DEBUG BEGIN_STMT
  _6 = (unsigned int) NumberOfFlags_20;
  _7 = _6 + 7;
  _8 = _7 / 8;
  numberOfFlagBytes_21 = (uint16) _8;
  # DEBUG numberOfFlagBytes => numberOfFlagBytes_21
  # DEBUG BEGIN_STMT
  j_22 = 0;
  # DEBUG j => j_22
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _9 = (sizetype) j_13;
  _10 = IpduTMFlagsBase_18 + _9;
  _11 = *_10;
  if (_11 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  newTM_24 = 1;
  # DEBUG newTM => newTM_24

  <bb 5> :
  # newTM_14 = PHI <newTM_15(3), newTM_24(4)>
  # DEBUG newTM => newTM_14
  # DEBUG BEGIN_STMT
  j.262_12 = j_13;
  j_25 = j.262_12 + 1;
  # DEBUG j => j_25

  <bb 6> :
  # j_13 = PHI <j_22(2), j_25(5)>
  # newTM_15 = PHI <newTM_19(2), newTM_14(5)>
  # DEBUG newTM => newTM_15
  # DEBUG j => j_13
  # DEBUG BEGIN_STMT
  if (j_13 < numberOfFlagBytes_21)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _23 = newTM_15;
  return _23;

}


Com_EB_NTimesSendQueue (ComIPduRefType PduId, ComTxModeRepetitionPeriodFactorType Offset, ComIPduRefType EntryInNTimesQueue)
{
  ComTxModeRepetitionPeriodFactorType * const NTimesQueueValNextTimePtr;
  ComTxModeRepetitionPeriodFactorType * const NTimesQueueBaseNextTimeBase;
  ComGlobalTimeType globalTime;
  ComTxModeRepetitionPeriodFactorType TimeOut;
  uint8 * Com_gDataMemPtr.309_1;
  const struct Com_ConfigType * Com_gConfigPtr.310_2;
  short unsigned int _3;
  sizetype _4;
  unsigned int _5;
  unsigned int _6;
  uint8 * Com_gDataMemPtr.311_7;
  const struct Com_ConfigType * Com_gConfigPtr.312_8;
  short unsigned int _9;
  int _10;
  int _11;
  int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  uint8 * Com_gDataMemPtr.313_16;
  const struct Com_ConfigType * Com_gConfigPtr.314_17;
  short unsigned int _18;
  int _19;
  int _20;
  int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.309_1 = Com_gDataMemPtr;
  Com_gConfigPtr.310_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.310_2->ComNTimesQueueBaseNextTime;
  _4 = (sizetype) _3;
  NTimesQueueBaseNextTimeBase_26 = Com_gDataMemPtr.309_1 + _4;
  # DEBUG NTimesQueueBaseNextTimeBase => NTimesQueueBaseNextTimeBase_26
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) EntryInNTimesQueue_27(D);
  _6 = _5 * 2;
  NTimesQueueValNextTimePtr_28 = NTimesQueueBaseNextTimeBase_26 + _6;
  # DEBUG NTimesQueueValNextTimePtr => NTimesQueueValNextTimePtr_28
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  globalTime_30 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_30
  # DEBUG BEGIN_STMT
  TimeOut_32 = globalTime_30 + Offset_31(D);
  # DEBUG TimeOut => TimeOut_32
  # DEBUG BEGIN_STMT
  *NTimesQueueValNextTimePtr_28 = TimeOut_32;
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.311_7 = Com_gDataMemPtr;
  Com_gConfigPtr.312_8 = Com_gConfigPtr;
  _9 = Com_gConfigPtr.312_8->ComTxIPduStatusBase;
  _10 = (int) _9;
  _11 = (int) PduId_34(D);
  _12 = _10 + _11;
  _13 = (sizetype) _12;
  _14 = Com_gDataMemPtr.311_7 + _13;
  _15 = *_14;
  Com_gDataMemPtr.313_16 = Com_gDataMemPtr;
  Com_gConfigPtr.314_17 = Com_gConfigPtr;
  _18 = Com_gConfigPtr.314_17->ComTxIPduStatusBase;
  _19 = (int) _18;
  _20 = (int) PduId_34(D);
  _21 = _19 + _20;
  _22 = (sizetype) _21;
  _23 = Com_gDataMemPtr.313_16 + _22;
  _24 = _15 | 8;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Request_Send_Pdu (ComIPduRefType PduId, const struct ComTxIPduType * IPduPtr, uint8 * PduStatusFlagsPtr, boolean SendInMainFunctionTx)
{
  unsigned char _1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_13(D)->ComTxIPduFlags;
  _2 = _1 >> 1;
  _3 = (unsigned int) _2;
  _4 = _3 & 1;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _5 = IPduPtr_13(D)->ComTxTimeoutFactorValue;
  _6 = IPduPtr_13(D)->TxDMQueueRef;
  Com_EB_TxDMQueue (PduId_14(D), _5, _6);

  <bb 4> :
  # DEBUG BEGIN_STMT
  _7 = *PduStatusFlagsPtr_16(D);
  _8 = (unsigned int) _7;
  _9 = _8 & 2;
  if (_9 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (SendInMainFunctionTx_17(D) == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (PduStatusFlagsPtr_16(D), 4);
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Com_EB_Send_Pdu (PduId_14(D), IPduPtr_13(D));

  <bb 8> :
  return;

}


Com_EB_SendUponSendApiCall (ComIPduRefType PduId, boolean SendInMainFunctionTx)
{
  uint8 * const NTimesQueueBaseRemaining;
  ComTxModeRepetitionPeriodFactorType NPeriod;
  uint8 N;
  const struct ComTxModeNTimesType * TMNTimesPtr;
  ComTxModeIdxType TMRef;
  uint8 * const NTimesQueueBaseRemaining;
  uint8 N;
  ComTxModeRepetitionPeriodFactorType NPeriod;
  const struct ComTxModeMixedNTimesType * TMMixedNTimesPtr;
  ComTxModeIdxType TMRef;
  const struct ComTxIPduType * const IPduPtr;
  uint8 * const PduStatusFlagsPtr;
  uint8 CurrentTMS;
  uint8 AktTM;
  uint8 * Com_gDataMemPtr.294_1;
  const struct Com_ConfigType * Com_gConfigPtr.295_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  const struct Com_ConfigType * Com_gConfigPtr.296_8;
  const struct Com_ConfigType * Com_gConfigPtr.297_9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  int _18;
  int _19;
  uint8 * Com_gDataMemPtr.299_20;
  const struct Com_ConfigType * Com_gConfigPtr.300_21;
  short unsigned int _22;
  sizetype _23;
  const struct Com_ConfigType * Com_gConfigPtr.302_24;
  const struct Com_ConfigType * Com_gConfigPtr.303_25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  sizetype _29;
  short unsigned int _30;
  sizetype _31;
  uint8 * _32;
  short unsigned int _33;
  uint8 * Com_gDataMemPtr.304_34;
  const struct Com_ConfigType * Com_gConfigPtr.305_35;
  short unsigned int _36;
  sizetype _37;
  const struct Com_ConfigType * Com_gConfigPtr.307_38;
  const struct Com_ConfigType * Com_gConfigPtr.308_39;
  long unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  sizetype _43;
  short unsigned int _44;
  sizetype _45;
  uint8 * _46;
  short unsigned int _47;
  uint8 iftmp.298_48;
  ComTxModeIdxType iftmp.301_49;
  ComTxModeIdxType iftmp.306_50;
  uint8 iftmp.298_57;
  uint8 iftmp.298_58;
  ComTxModeIdxType iftmp.306_63;
  ComTxModeIdxType iftmp.306_64;
  ComTxModeIdxType iftmp.301_72;
  ComTxModeIdxType iftmp.301_73;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.294_1 = Com_gDataMemPtr;
  Com_gConfigPtr.295_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.295_2->ComTxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) PduId_53(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  PduStatusFlagsPtr_54 = Com_gDataMemPtr.294_1 + _7;
  # DEBUG PduStatusFlagsPtr => PduStatusFlagsPtr_54
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.296_8 = Com_gConfigPtr;
  Com_gConfigPtr.297_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.297_9->ComTxIPduRef;
  _11 = (unsigned int) PduId_53(D);
  _12 = _11 * 64;
  _13 = _10 + _12;
  IPduPtr_55 = Com_gConfigPtr.296_8 + _13;
  # DEBUG IPduPtr => IPduPtr_55
  # DEBUG BEGIN_STMT
  _14 = *PduStatusFlagsPtr_54;
  _15 = _14 >> 6;
  CurrentTMS_56 = _15 & 1;
  # DEBUG CurrentTMS => CurrentTMS_56
  # DEBUG BEGIN_STMT
  if (CurrentTMS_56 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _16 = IPduPtr_55->ComTxModeModes;
  iftmp.298_58 = _16 & 15;
  goto <bb 5>; [INV]

  <bb 4> :
  _17 = IPduPtr_55->ComTxModeModes;
  iftmp.298_57 = _17 >> 4;

  <bb 5> :
  # iftmp.298_48 = PHI <iftmp.298_58(3), iftmp.298_57(4)>
  AktTM_59 = iftmp.298_48;
  # DEBUG AktTM => AktTM_59
  # DEBUG BEGIN_STMT
  _18 = (int) AktTM_59;
  switch (_18) <default: <L26> [INV], case 2 ... 5: <L3> [INV]>

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  Com_EB_Request_Send_Pdu (PduId_53(D), IPduPtr_55, PduStatusFlagsPtr_54, SendInMainFunctionTx_60(D));
  # DEBUG BEGIN_STMT
  _19 = (int) AktTM_59;
  switch (_19) <default: <L26> [INV], case 4: <L7> [INV], case 5: <L11> [INV]>

  <bb 7> :
<L7>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.299_20 = Com_gDataMemPtr;
  Com_gConfigPtr.300_21 = Com_gConfigPtr;
  _22 = Com_gConfigPtr.300_21->ComNTimesQueueBaseRemaining;
  _23 = (sizetype) _22;
  NTimesQueueBaseRemaining_71 = Com_gDataMemPtr.299_20 + _23;
  # DEBUG NTimesQueueBaseRemaining => NTimesQueueBaseRemaining_71
  # DEBUG BEGIN_STMT
  if (CurrentTMS_56 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  iftmp.301_73 = IPduPtr_55->ComTxModeTrueRef;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.301_72 = IPduPtr_55->ComTxModeFalseRef;

  <bb 10> :
  # iftmp.301_49 = PHI <iftmp.301_73(8), iftmp.301_72(9)>
  TMRef_74 = iftmp.301_49;
  # DEBUG TMRef => TMRef_74
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.302_24 = Com_gConfigPtr;
  Com_gConfigPtr.303_25 = Com_gConfigPtr;
  _26 = Com_gConfigPtr.303_25->ComTxModeMixedNTimesRef;
  _27 = (unsigned int) TMRef_74;
  _28 = _27 * 8;
  _29 = _26 + _28;
  TMMixedNTimesPtr_75 = Com_gConfigPtr.302_24 + _29;
  # DEBUG TMMixedNTimesPtr => TMMixedNTimesPtr_75
  # DEBUG BEGIN_STMT
  NPeriod_76 = TMMixedNTimesPtr_75->ComTxModeRepetitionPeriodFactor;
  # DEBUG NPeriod => NPeriod_76
  # DEBUG BEGIN_STMT
  N_77 = TMMixedNTimesPtr_75->ComTxModeNumberOfRepetitions;
  # DEBUG N => N_77
  # DEBUG BEGIN_STMT
  _30 = IPduPtr_55->NTimesQueueRef;
  _31 = (sizetype) _30;
  _32 = NTimesQueueBaseRemaining_71 + _31;
  *_32 = N_77;
  # DEBUG BEGIN_STMT
  _33 = IPduPtr_55->NTimesQueueRef;
  Com_EB_NTimesSendQueue (PduId_53(D), NPeriod_76, _33);
  # DEBUG BEGIN_STMT
  goto <bb 15>; [INV]

  <bb 11> :
<L11>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.304_34 = Com_gDataMemPtr;
  Com_gConfigPtr.305_35 = Com_gConfigPtr;
  _36 = Com_gConfigPtr.305_35->ComNTimesQueueBaseRemaining;
  _37 = (sizetype) _36;
  NTimesQueueBaseRemaining_62 = Com_gDataMemPtr.304_34 + _37;
  # DEBUG NTimesQueueBaseRemaining => NTimesQueueBaseRemaining_62
  # DEBUG BEGIN_STMT
  if (CurrentTMS_56 == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  iftmp.306_64 = IPduPtr_55->ComTxModeTrueRef;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.306_63 = IPduPtr_55->ComTxModeFalseRef;

  <bb 14> :
  # iftmp.306_50 = PHI <iftmp.306_64(12), iftmp.306_63(13)>
  TMRef_65 = iftmp.306_50;
  # DEBUG TMRef => TMRef_65
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.307_38 = Com_gConfigPtr;
  Com_gConfigPtr.308_39 = Com_gConfigPtr;
  _40 = Com_gConfigPtr.308_39->ComTxModeNTimesRef;
  _41 = (unsigned int) TMRef_65;
  _42 = _41 * 4;
  _43 = _40 + _42;
  TMNTimesPtr_66 = Com_gConfigPtr.307_38 + _43;
  # DEBUG TMNTimesPtr => TMNTimesPtr_66
  # DEBUG BEGIN_STMT
  NPeriod_67 = TMNTimesPtr_66->ComTxModeRepetitionPeriodFactor;
  # DEBUG NPeriod => NPeriod_67
  # DEBUG BEGIN_STMT
  N_68 = TMNTimesPtr_66->ComTxModeNumberOfRepetitions;
  # DEBUG N => N_68
  # DEBUG BEGIN_STMT
  _44 = IPduPtr_55->NTimesQueueRef;
  _45 = (sizetype) _44;
  _46 = NTimesQueueBaseRemaining_62 + _45;
  *_46 = N_68;
  # DEBUG BEGIN_STMT
  _47 = IPduPtr_55->NTimesQueueRef;
  Com_EB_NTimesSendQueue (PduId_53(D), NPeriod_67, _47);
  # DEBUG BEGIN_STMT

  <bb 15> :
<L26>:
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_DisableSignalGroupBasedDMFlag (const struct ComRxIPduType * IPduPtr, boolean Initialize)
{
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType signalGId;
  ComSignalGroupRefType i;
  const struct Com_ConfigType * Com_gConfigPtr.380_1;
  const struct Com_ConfigType * Com_gConfigPtr.381_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const ComSignalGroupRefType * _7;
  const struct Com_ConfigType * Com_gConfigPtr.382_8;
  const struct Com_ConfigType * Com_gConfigPtr.383_9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  const struct Com_ConfigType * Com_gConfigPtr.384_14;
  const struct Com_ConfigType * Com_gConfigPtr.385_15;
  long unsigned int _16;
  short unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  sizetype _20;
  unsigned char _21;
  unsigned char _22;
  unsigned int _23;
  unsigned int _24;
  uint8 * Com_gDataMemPtr.386_25;
  const struct Com_ConfigType * Com_gConfigPtr.387_26;
  short unsigned int _27;
  unsigned int _28;
  short unsigned int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  uint8 * _33;
  short unsigned int _34;
  short unsigned int _35;
  short unsigned int _36;
  short unsigned int _37;
  long unsigned int _38;
  uint8 * Com_gDataMemPtr.388_39;
  const struct Com_ConfigType * Com_gConfigPtr.389_40;
  short unsigned int _41;
  unsigned int _42;
  short unsigned int _43;
  short unsigned int _44;
  unsigned int _45;
  unsigned int _46;
  uint8 * _47;
  short unsigned int _48;
  short unsigned int _49;
  short unsigned int _50;
  long unsigned int _51;
  short unsigned int i.390_52;
  int _53;
  short unsigned int _54;
  int _55;
  short unsigned int _56;
  int _57;
  int _58;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_64 = IPduPtr_63(D)->ComIPduSignalGroupRefFirst;
  # DEBUG i => i_64
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.380_1 = Com_gConfigPtr;
  Com_gConfigPtr.381_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.381_2->ComRxIPduSignalGroupListRef;
  _4 = (unsigned int) i_59;
  _5 = _4 * 2;
  _6 = _3 + _5;
  _7 = Com_gConfigPtr.380_1 + _6;
  signalGId_65 = *_7;
  # DEBUG signalGId => signalGId_65
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.382_8 = Com_gConfigPtr;
  Com_gConfigPtr.383_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.383_9->ComRxSignalGroupRef;
  _11 = (unsigned int) signalGId_65;
  _12 = _11 * 10;
  _13 = _10 + _12;
  SignalGPtr_66 = Com_gConfigPtr.382_8 + _13;
  # DEBUG SignalGPtr => SignalGPtr_66
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.384_14 = Com_gConfigPtr;
  Com_gConfigPtr.385_15 = Com_gConfigPtr;
  _16 = Com_gConfigPtr.385_15->ComRxSignalExtRef;
  _17 = SignalGPtr_66->ComSignalExtRef;
  _18 = (unsigned int) _17;
  _19 = _18 * 14;
  _20 = _16 + _19;
  SignalExtPtr_67 = Com_gConfigPtr.384_14 + _20;
  # DEBUG SignalExtPtr => SignalExtPtr_67
  # DEBUG BEGIN_STMT
  _21 = SignalExtPtr_67->ComRxSignalExtFlags;
  _22 = _21 >> 2;
  _23 = (unsigned int) _22;
  _24 = _23 & 1;
  if (_24 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.386_25 = Com_gDataMemPtr;
  Com_gConfigPtr.387_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.387_26->ComRxDMInvSignalGroupStatusQueueBase;
  _28 = (unsigned int) _27;
  _29 = SignalExtPtr_67->RxSigDMQueueRef;
  _30 = _29 / 4;
  _31 = (unsigned int) _30;
  _32 = _28 + _31;
  _33 = Com_gDataMemPtr.386_25 + _32;
  _34 = SignalExtPtr_67->RxSigDMQueueRef;
  _35 = _34 & 3;
  _36 = _35 * 2;
  _37 = _36 + 1;
  _38 = (long unsigned int) _37;
  TS_AtomicClearBit_8 (_33, _38);
  # DEBUG BEGIN_STMT
  if (Initialize_69(D) == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.388_39 = Com_gDataMemPtr;
  Com_gConfigPtr.389_40 = Com_gConfigPtr;
  _41 = Com_gConfigPtr.389_40->ComRxDMInvSignalGroupStatusQueueBase;
  _42 = (unsigned int) _41;
  _43 = SignalExtPtr_67->RxSigDMQueueRef;
  _44 = _43 / 4;
  _45 = (unsigned int) _44;
  _46 = _42 + _45;
  _47 = Com_gDataMemPtr.388_39 + _46;
  _48 = SignalExtPtr_67->RxSigDMQueueRef;
  _49 = _48 & 3;
  _50 = _49 * 2;
  _51 = (long unsigned int) _50;
  TS_AtomicClearBit_8 (_47, _51);

  <bb 6> :
  # DEBUG BEGIN_STMT
  i.390_52 = i_59;
  i_71 = i.390_52 + 1;
  # DEBUG i => i_71

  <bb 7> :
  # i_59 = PHI <i_64(2), i_71(6)>
  # DEBUG i => i_59
  # DEBUG BEGIN_STMT
  _53 = (int) i_59;
  _54 = IPduPtr_63(D)->ComIPduSignalGroupRefNum;
  _55 = (int) _54;
  _56 = IPduPtr_63(D)->ComIPduSignalGroupRefFirst;
  _57 = (int) _56;
  _58 = _55 + _57;
  if (_53 < _58)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


Com_EB_DisableSignalBasedDMFlag (const struct ComRxIPduType * IPduPtr, boolean Initialize)
{
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  ComSignalRefType i;
  const struct Com_ConfigType * Com_gConfigPtr.369_1;
  const struct Com_ConfigType * Com_gConfigPtr.370_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const ComSignalRefType * _7;
  const struct Com_ConfigType * Com_gConfigPtr.371_8;
  const struct Com_ConfigType * Com_gConfigPtr.372_9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  const struct Com_ConfigType * Com_gConfigPtr.373_14;
  const struct Com_ConfigType * Com_gConfigPtr.374_15;
  long unsigned int _16;
  short unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  sizetype _20;
  unsigned char _21;
  unsigned char _22;
  unsigned int _23;
  unsigned int _24;
  uint8 * Com_gDataMemPtr.375_25;
  const struct Com_ConfigType * Com_gConfigPtr.376_26;
  short unsigned int _27;
  unsigned int _28;
  short unsigned int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  uint8 * _33;
  short unsigned int _34;
  short unsigned int _35;
  short unsigned int _36;
  short unsigned int _37;
  long unsigned int _38;
  uint8 * Com_gDataMemPtr.377_39;
  const struct Com_ConfigType * Com_gConfigPtr.378_40;
  short unsigned int _41;
  unsigned int _42;
  short unsigned int _43;
  short unsigned int _44;
  unsigned int _45;
  unsigned int _46;
  uint8 * _47;
  short unsigned int _48;
  short unsigned int _49;
  short unsigned int _50;
  long unsigned int _51;
  short unsigned int i.379_52;
  int _53;
  short unsigned int _54;
  int _55;
  short unsigned int _56;
  int _57;
  int _58;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_64 = IPduPtr_63(D)->ComIPduSignalRefFirst;
  # DEBUG i => i_64
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.369_1 = Com_gConfigPtr;
  Com_gConfigPtr.370_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.370_2->ComRxIPduSignalListRef;
  _4 = (unsigned int) i_59;
  _5 = _4 * 2;
  _6 = _3 + _5;
  _7 = Com_gConfigPtr.369_1 + _6;
  signalId_65 = *_7;
  # DEBUG signalId => signalId_65
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.371_8 = Com_gConfigPtr;
  Com_gConfigPtr.372_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.372_9->ComRxSignalRef;
  _11 = (unsigned int) signalId_65;
  _12 = _11 * 20;
  _13 = _10 + _12;
  SignalPtr_66 = Com_gConfigPtr.371_8 + _13;
  # DEBUG SignalPtr => SignalPtr_66
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.373_14 = Com_gConfigPtr;
  Com_gConfigPtr.374_15 = Com_gConfigPtr;
  _16 = Com_gConfigPtr.374_15->ComRxSignalExtRef;
  _17 = SignalPtr_66->ComSignalExtRef;
  _18 = (unsigned int) _17;
  _19 = _18 * 14;
  _20 = _16 + _19;
  SignalExtPtr_67 = Com_gConfigPtr.373_14 + _20;
  # DEBUG SignalExtPtr => SignalExtPtr_67
  # DEBUG BEGIN_STMT
  _21 = SignalExtPtr_67->ComRxSignalExtFlags;
  _22 = _21 >> 2;
  _23 = (unsigned int) _22;
  _24 = _23 & 1;
  if (_24 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.375_25 = Com_gDataMemPtr;
  Com_gConfigPtr.376_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.376_26->ComRxTimeoutSignalStatusQueueBase;
  _28 = (unsigned int) _27;
  _29 = SignalExtPtr_67->RxSigDMQueueRef;
  _30 = _29 / 4;
  _31 = (unsigned int) _30;
  _32 = _28 + _31;
  _33 = Com_gDataMemPtr.375_25 + _32;
  _34 = SignalExtPtr_67->RxSigDMQueueRef;
  _35 = _34 & 3;
  _36 = _35 * 2;
  _37 = _36 + 1;
  _38 = (long unsigned int) _37;
  TS_AtomicClearBit_8 (_33, _38);
  # DEBUG BEGIN_STMT
  if (Initialize_69(D) == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.377_39 = Com_gDataMemPtr;
  Com_gConfigPtr.378_40 = Com_gConfigPtr;
  _41 = Com_gConfigPtr.378_40->ComRxTimeoutSignalStatusQueueBase;
  _42 = (unsigned int) _41;
  _43 = SignalExtPtr_67->RxSigDMQueueRef;
  _44 = _43 / 4;
  _45 = (unsigned int) _44;
  _46 = _42 + _45;
  _47 = Com_gDataMemPtr.377_39 + _46;
  _48 = SignalExtPtr_67->RxSigDMQueueRef;
  _49 = _48 & 3;
  _50 = _49 * 2;
  _51 = (long unsigned int) _50;
  TS_AtomicClearBit_8 (_47, _51);

  <bb 6> :
  # DEBUG BEGIN_STMT
  i.379_52 = i_59;
  i_71 = i.379_52 + 1;
  # DEBUG i => i_71

  <bb 7> :
  # i_59 = PHI <i_64(2), i_71(6)>
  # DEBUG i => i_59
  # DEBUG BEGIN_STMT
  _53 = (int) i_59;
  _54 = IPduPtr_63(D)->ComIPduSignalWithDMOnly;
  _55 = (int) _54;
  _56 = IPduPtr_63(D)->ComIPduSignalRefFirst;
  _57 = (int) _56;
  _58 = _55 + _57;
  if (_53 < _58)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


Com_EB_DisableSignalAndSignalGroupBasedDMFlag (const struct ComRxIPduType * IPduPtr, boolean Initialize)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_EB_DisableSignalBasedDMFlag (IPduPtr_2(D), Initialize_3(D));
  # DEBUG BEGIN_STMT
  Com_EB_DisableSignalGroupBasedDMFlag (IPduPtr_2(D), Initialize_3(D));
  return;

}


Com_EB_EnableSignalGroupBasedDMFlag (const struct ComRxIPduType * IPduPtr)
{
  uint8 enableBitPos;
  uint8 * const SigGDMFlagsPtr;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType signalGId;
  ComSignalGroupRefType j;
  const struct Com_ConfigType * Com_gConfigPtr.404_1;
  const struct Com_ConfigType * Com_gConfigPtr.405_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const ComSignalGroupRefType * _7;
  const struct Com_ConfigType * Com_gConfigPtr.406_8;
  const struct Com_ConfigType * Com_gConfigPtr.407_9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  const struct Com_ConfigType * Com_gConfigPtr.408_14;
  const struct Com_ConfigType * Com_gConfigPtr.409_15;
  long unsigned int _16;
  short unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  sizetype _20;
  unsigned char _21;
  unsigned char _22;
  unsigned int _23;
  unsigned int _24;
  uint8 * Com_gDataMemPtr.410_25;
  const struct Com_ConfigType * Com_gConfigPtr.411_26;
  short unsigned int _27;
  unsigned int _28;
  short unsigned int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  short unsigned int _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  int _38;
  int _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  int _43;
  unsigned int _44;
  unsigned char _45;
  unsigned char _46;
  short unsigned int j.412_47;
  int _48;
  short unsigned int _49;
  int _50;
  short unsigned int _51;
  int _52;
  int _53;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_60 = IPduPtr_59(D)->ComIPduSignalGroupRefFirst;
  # DEBUG j => j_60
  goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.404_1 = Com_gConfigPtr;
  Com_gConfigPtr.405_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.405_2->ComRxIPduSignalGroupListRef;
  _4 = (unsigned int) j_54;
  _5 = _4 * 2;
  _6 = _3 + _5;
  _7 = Com_gConfigPtr.404_1 + _6;
  signalGId_61 = *_7;
  # DEBUG signalGId => signalGId_61
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.406_8 = Com_gConfigPtr;
  Com_gConfigPtr.407_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.407_9->ComRxSignalGroupRef;
  _11 = (unsigned int) signalGId_61;
  _12 = _11 * 10;
  _13 = _10 + _12;
  SignalGPtr_62 = Com_gConfigPtr.406_8 + _13;
  # DEBUG SignalGPtr => SignalGPtr_62
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.408_14 = Com_gConfigPtr;
  Com_gConfigPtr.409_15 = Com_gConfigPtr;
  _16 = Com_gConfigPtr.409_15->ComRxSignalExtRef;
  _17 = SignalGPtr_62->ComSignalExtRef;
  _18 = (unsigned int) _17;
  _19 = _18 * 14;
  _20 = _16 + _19;
  SignalExtPtr_63 = Com_gConfigPtr.408_14 + _20;
  # DEBUG SignalExtPtr => SignalExtPtr_63
  # DEBUG BEGIN_STMT
  _21 = SignalExtPtr_63->ComRxSignalExtFlags;
  _22 = _21 >> 2;
  _23 = (unsigned int) _22;
  _24 = _23 & 1;
  if (_24 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  TimeOutOffset_64 = SignalExtPtr_63->ComRxFirstTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_64
  # DEBUG BEGIN_STMT
  if (TimeOutOffset_64 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.410_25 = Com_gDataMemPtr;
  Com_gConfigPtr.411_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.411_26->ComRxDMInvSignalGroupStatusQueueBase;
  _28 = (unsigned int) _27;
  _29 = SignalExtPtr_63->RxSigDMQueueRef;
  _30 = _29 / 4;
  _31 = (unsigned int) _30;
  _32 = _28 + _31;
  SigGDMFlagsPtr_65 = Com_gDataMemPtr.410_25 + _32;
  # DEBUG SigGDMFlagsPtr => SigGDMFlagsPtr_65
  # DEBUG BEGIN_STMT
  _33 = SignalExtPtr_63->RxSigDMQueueRef;
  _34 = (unsigned char) _33;
  _35 = _34 & 3;
  _36 = _35 * 2;
  enableBitPos_66 = _36 + 1;
  # DEBUG enableBitPos => enableBitPos_66
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _37 = *SigGDMFlagsPtr_65;
  _38 = (int) enableBitPos_66;
  _39 = 1 << _38;
  _40 = (unsigned char) _39;
  _41 = _37 & _40;
  if (_41 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _42 = *SigGDMFlagsPtr_65;
  _43 = (int) enableBitPos_66;
  _44 = 1 << _43;
  _45 = (unsigned char) _44;
  _46 = _42 | _45;
  *SigGDMFlagsPtr_65 = _46;
  # DEBUG BEGIN_STMT
  Com_EB_RxDMSignalGroupQueue (SignalGPtr_62, TimeOutOffset_64);

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 8> :
  # DEBUG BEGIN_STMT
  j.412_47 = j_54;
  j_71 = j.412_47 + 1;
  # DEBUG j => j_71

  <bb 9> :
  # j_54 = PHI <j_60(2), j_71(8)>
  # DEBUG j => j_54
  # DEBUG BEGIN_STMT
  _48 = (int) j_54;
  _49 = IPduPtr_59(D)->ComIPduSignalGroupRefNum;
  _50 = (int) _49;
  _51 = IPduPtr_59(D)->ComIPduSignalGroupRefFirst;
  _52 = (int) _51;
  _53 = _50 + _52;
  if (_48 < _53)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_EnableSignalBasedDMFlag (const struct ComRxIPduType * IPduPtr)
{
  uint8 enableBitPos;
  uint8 * const SigDMFlagsPtr;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  ComSignalRefType i;
  const struct Com_ConfigType * Com_gConfigPtr.393_1;
  const struct Com_ConfigType * Com_gConfigPtr.394_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const ComSignalRefType * _7;
  const struct Com_ConfigType * Com_gConfigPtr.395_8;
  const struct Com_ConfigType * Com_gConfigPtr.396_9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  sizetype _13;
  const struct Com_ConfigType * Com_gConfigPtr.397_14;
  const struct Com_ConfigType * Com_gConfigPtr.398_15;
  long unsigned int _16;
  short unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  sizetype _20;
  unsigned char _21;
  unsigned char _22;
  unsigned int _23;
  unsigned int _24;
  uint8 * Com_gDataMemPtr.399_25;
  const struct Com_ConfigType * Com_gConfigPtr.400_26;
  short unsigned int _27;
  unsigned int _28;
  short unsigned int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  short unsigned int _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  int _38;
  int _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  int _43;
  unsigned int _44;
  unsigned char _45;
  unsigned char _46;
  short unsigned int i.401_47;
  int _48;
  short unsigned int _49;
  int _50;
  short unsigned int _51;
  int _52;
  int _53;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i_60 = IPduPtr_59(D)->ComIPduSignalRefFirst;
  # DEBUG i => i_60
  goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.393_1 = Com_gConfigPtr;
  Com_gConfigPtr.394_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.394_2->ComRxIPduSignalListRef;
  _4 = (unsigned int) i_54;
  _5 = _4 * 2;
  _6 = _3 + _5;
  _7 = Com_gConfigPtr.393_1 + _6;
  signalId_61 = *_7;
  # DEBUG signalId => signalId_61
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.395_8 = Com_gConfigPtr;
  Com_gConfigPtr.396_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.396_9->ComRxSignalRef;
  _11 = (unsigned int) signalId_61;
  _12 = _11 * 20;
  _13 = _10 + _12;
  SignalPtr_62 = Com_gConfigPtr.395_8 + _13;
  # DEBUG SignalPtr => SignalPtr_62
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.397_14 = Com_gConfigPtr;
  Com_gConfigPtr.398_15 = Com_gConfigPtr;
  _16 = Com_gConfigPtr.398_15->ComRxSignalExtRef;
  _17 = SignalPtr_62->ComSignalExtRef;
  _18 = (unsigned int) _17;
  _19 = _18 * 14;
  _20 = _16 + _19;
  SignalExtPtr_63 = Com_gConfigPtr.397_14 + _20;
  # DEBUG SignalExtPtr => SignalExtPtr_63
  # DEBUG BEGIN_STMT
  _21 = SignalExtPtr_63->ComRxSignalExtFlags;
  _22 = _21 >> 2;
  _23 = (unsigned int) _22;
  _24 = _23 & 1;
  if (_24 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  TimeOutOffset_64 = SignalExtPtr_63->ComRxFirstTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_64
  # DEBUG BEGIN_STMT
  if (TimeOutOffset_64 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.399_25 = Com_gDataMemPtr;
  Com_gConfigPtr.400_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.400_26->ComRxTimeoutSignalStatusQueueBase;
  _28 = (unsigned int) _27;
  _29 = SignalExtPtr_63->RxSigDMQueueRef;
  _30 = _29 / 4;
  _31 = (unsigned int) _30;
  _32 = _28 + _31;
  SigDMFlagsPtr_65 = Com_gDataMemPtr.399_25 + _32;
  # DEBUG SigDMFlagsPtr => SigDMFlagsPtr_65
  # DEBUG BEGIN_STMT
  _33 = SignalExtPtr_63->RxSigDMQueueRef;
  _34 = (unsigned char) _33;
  _35 = _34 & 3;
  _36 = _35 * 2;
  enableBitPos_66 = _36 + 1;
  # DEBUG enableBitPos => enableBitPos_66
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _37 = *SigDMFlagsPtr_65;
  _38 = (int) enableBitPos_66;
  _39 = 1 << _38;
  _40 = (unsigned char) _39;
  _41 = _37 & _40;
  if (_41 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _42 = *SigDMFlagsPtr_65;
  _43 = (int) enableBitPos_66;
  _44 = 1 << _43;
  _45 = (unsigned char) _44;
  _46 = _42 | _45;
  *SigDMFlagsPtr_65 = _46;
  # DEBUG BEGIN_STMT
  Com_EB_RxDMSignalQueue (SignalExtPtr_63, TimeOutOffset_64);

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 8> :
  # DEBUG BEGIN_STMT
  i.401_47 = i_54;
  i_71 = i.401_47 + 1;
  # DEBUG i => i_71

  <bb 9> :
  # i_54 = PHI <i_60(2), i_71(8)>
  # DEBUG i => i_54
  # DEBUG BEGIN_STMT
  _48 = (int) i_54;
  _49 = IPduPtr_59(D)->ComIPduSignalWithDMOnly;
  _50 = (int) _49;
  _51 = IPduPtr_59(D)->ComIPduSignalRefFirst;
  _52 = (int) _51;
  _53 = _50 + _52;
  if (_48 < _53)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_RxDMSignalQueue (const struct ComRxSignalExtType * SignalExtPtr, Com_RxDMNextDueTimeType TimeOutOffset)
{
  Com_RxDMNextDueTimeType * const RxTimeoutSignalQueueBase;
  Com_RxDMNextDueTimeType TimeOut;
  Com_RxDMNextDueTimeType globalTime;
  uint8 * Com_gDataMemPtr.402_1;
  const struct Com_ConfigType * Com_gConfigPtr.403_2;
  short unsigned int _3;
  sizetype _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  Com_RxDMNextDueTimeType * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.402_1 = Com_gDataMemPtr;
  Com_gConfigPtr.403_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.403_2->ComRxTimeoutSignalQueueBase;
  _4 = (sizetype) _3;
  RxTimeoutSignalQueueBase_10 = Com_gDataMemPtr.402_1 + _4;
  # DEBUG RxTimeoutSignalQueueBase => RxTimeoutSignalQueueBase_10
  # DEBUG BEGIN_STMT
  globalTime_11 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_11
  # DEBUG BEGIN_STMT
  TimeOut_13 = globalTime_11 + TimeOutOffset_12(D);
  # DEBUG TimeOut => TimeOut_13
  # DEBUG BEGIN_STMT
  _5 = SignalExtPtr_14(D)->RxSigDMQueueRef;
  _6 = (unsigned int) _5;
  _7 = _6 * 2;
  _8 = RxTimeoutSignalQueueBase_10 + _7;
  *_8 = TimeOut_13;
  return;

}


Com_EB_RxDMSignalGroupQueue (const struct ComRxSignalGroupType * SignalGPtr, Com_RxDMNextDueTimeType TimeOutOffset)
{
  const struct ComRxSignalExtType * const SignalExtPtr;
  Com_RxDMNextDueTimeType * const RxTimeoutSignalGroupQueueBase;
  Com_RxDMNextDueTimeType TimeOut;
  Com_RxDMNextDueTimeType globalTime;
  uint8 * Com_gDataMemPtr.413_1;
  const struct Com_ConfigType * Com_gConfigPtr.414_2;
  short unsigned int _3;
  sizetype _4;
  const struct Com_ConfigType * Com_gConfigPtr.415_5;
  const struct Com_ConfigType * Com_gConfigPtr.416_6;
  long unsigned int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  Com_RxDMNextDueTimeType * _15;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.413_1 = Com_gDataMemPtr;
  Com_gConfigPtr.414_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.414_2->ComRxTimeoutSignalGroupQueueBase;
  _4 = (sizetype) _3;
  RxTimeoutSignalGroupQueueBase_17 = Com_gDataMemPtr.413_1 + _4;
  # DEBUG RxTimeoutSignalGroupQueueBase => RxTimeoutSignalGroupQueueBase_17
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.415_5 = Com_gConfigPtr;
  Com_gConfigPtr.416_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.416_6->ComRxSignalExtRef;
  _8 = SignalGPtr_18(D)->ComSignalExtRef;
  _9 = (unsigned int) _8;
  _10 = _9 * 14;
  _11 = _7 + _10;
  SignalExtPtr_19 = Com_gConfigPtr.415_5 + _11;
  # DEBUG SignalExtPtr => SignalExtPtr_19
  # DEBUG BEGIN_STMT
  globalTime_20 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_20
  # DEBUG BEGIN_STMT
  TimeOut_22 = globalTime_20 + TimeOutOffset_21(D);
  # DEBUG TimeOut => TimeOut_22
  # DEBUG BEGIN_STMT
  _12 = SignalExtPtr_19->RxSigDMQueueRef;
  _13 = (unsigned int) _12;
  _14 = _13 * 2;
  _15 = RxTimeoutSignalGroupQueueBase_17 + _14;
  *_15 = TimeOut_22;
  return;

}


Com_EB_CheckRxSignalUpdateBitAndDM (const struct ComRxSignalType * SignalPtr, const struct ComRxIPduType * IPduPtr, uint8 * passFilter_MASKED_NEW_DIFFERS_MASKED_OLD, uint32 pduLength)
{
  uint8 * const IPduFlagBytePtr;
  const ComIPduRefType ComRxPduId;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  const uint8 ToutFlag;
  const uint8 RunningFlag;
  uint8 * const RxDMFlagPtr;
  uint8 restart;
  const uint32 UpdateBitByte;
  const struct ComRxSignalExtType * const SignalExtPtr;
  uint8 SignalUpdated;
  const struct Com_ConfigType * Com_gConfigPtr.652_1;
  const struct Com_ConfigType * Com_gConfigPtr.653_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _8;
  unsigned char _9;
  unsigned int _10;
  unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  uint8 * Com_gDataMemPtr.654_14;
  short unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  uint8 * _18;
  unsigned char _19;
  int _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  int _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned int _28;
  unsigned int _29;
  uint8 * Com_gDataMemPtr.655_30;
  const struct Com_ConfigType * Com_gConfigPtr.656_31;
  short unsigned int _32;
  unsigned int _33;
  short unsigned int _34;
  short unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  short unsigned int _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  short unsigned int _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  int _46;
  int _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  int _51;
  int _52;
  int _53;
  unsigned char _54;
  unsigned char _55;
  int _56;
  unsigned int _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  uint8 * Com_gDataMemPtr.657_61;
  const struct Com_ConfigType * Com_gConfigPtr.658_62;
  short unsigned int _63;
  int _64;
  int _65;
  int _66;
  sizetype _67;
  unsigned char _68;
  unsigned int _69;
  unsigned int _70;
  unsigned char _71;
  int _72;
  int _73;
  int _74;
  unsigned char _75;
  unsigned char _76;
  int _77;
  unsigned int _78;
  unsigned char _79;
  unsigned char _80;
  unsigned char _81;
  unsigned char _82;
  int _83;
  unsigned int _84;
  unsigned char _85;
  unsigned char _86;
  boolean _117;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalUpdated_91 = 1;
  # DEBUG SignalUpdated => SignalUpdated_91
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.652_1 = Com_gConfigPtr;
  Com_gConfigPtr.653_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.653_2->ComRxSignalExtRef;
  _4 = SignalPtr_93(D)->ComSignalExtRef;
  _5 = (unsigned int) _4;
  _6 = _5 * 14;
  _7 = _3 + _6;
  SignalExtPtr_94 = Com_gConfigPtr.652_1 + _7;
  # DEBUG SignalExtPtr => SignalExtPtr_94
  # DEBUG BEGIN_STMT
  _8 = SignalExtPtr_94->ComRxSignalExtFlags;
  _9 = _8 >> 1;
  _10 = (unsigned int) _9;
  _11 = _10 & 1;
  if (_11 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _12 = SignalExtPtr_94->ComUpdateBitPositionInBit;
  _13 = _12 / 8;
  UpdateBitByte_95 = (const uint32) _13;
  # DEBUG UpdateBitByte => UpdateBitByte_95
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  *passFilter_MASKED_NEW_DIFFERS_MASKED_OLD_96(D) = 0;
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.654_14 = Com_gDataMemPtr;
  _15 = IPduPtr_98(D)->ComIPduValueRef;
  _16 = (long unsigned int) _15;
  _17 = UpdateBitByte_95 + _16;
  _18 = Com_gDataMemPtr.654_14 + _17;
  _19 = *_18;
  _20 = (int) _19;
  _21 = SignalExtPtr_94->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = _20 >> _23;
  _25 = (unsigned char) _24;
  SignalUpdated_99 = _25 & 1;
  # DEBUG SignalUpdated => SignalUpdated_99
  # DEBUG BEGIN_STMT
  if (SignalUpdated_99 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _26 = SignalExtPtr_94->ComRxSignalExtFlags;
  _27 = _26 >> 2;
  _28 = (unsigned int) _27;
  _29 = _28 & 1;
  if (_29 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  restart_100 = 0;
  # DEBUG restart => restart_100
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.655_30 = Com_gDataMemPtr;
  Com_gConfigPtr.656_31 = Com_gConfigPtr;
  _32 = Com_gConfigPtr.656_31->ComRxTimeoutSignalStatusQueueBase;
  _33 = (unsigned int) _32;
  _34 = SignalExtPtr_94->RxSigDMQueueRef;
  _35 = _34 / 4;
  _36 = (unsigned int) _35;
  _37 = _33 + _36;
  RxDMFlagPtr_101 = Com_gDataMemPtr.655_30 + _37;
  # DEBUG RxDMFlagPtr => RxDMFlagPtr_101
  # DEBUG BEGIN_STMT
  _38 = SignalExtPtr_94->RxSigDMQueueRef;
  _39 = (unsigned char) _38;
  _40 = _39 & 3;
  _41 = _40 * 2;
  RunningFlag_102 = _41 + 1;
  # DEBUG RunningFlag => RunningFlag_102
  # DEBUG BEGIN_STMT
  _42 = SignalExtPtr_94->RxSigDMQueueRef;
  _43 = (unsigned char) _42;
  _44 = _43 & 3;
  ToutFlag_103 = _44 * 2;
  # DEBUG ToutFlag => ToutFlag_103
  # DEBUG BEGIN_STMT
  TimeOutOffset_104 = SignalExtPtr_94->ComRxTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_104
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _45 = *RxDMFlagPtr_101;
  _46 = (int) RunningFlag_102;
  _47 = 1 << _46;
  _48 = (unsigned char) _47;
  _49 = _45 & _48;
  if (_49 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _50 = *RxDMFlagPtr_101;
  _51 = (int) _50;
  _52 = (int) ToutFlag_103;
  _53 = _51 >> _52;
  _54 = (unsigned char) _53;
  restart_112 = _54 & 1;
  # DEBUG restart => restart_112
  # DEBUG BEGIN_STMT
  _55 = *RxDMFlagPtr_101;
  _56 = (int) ToutFlag_103;
  _57 = 1 << _56;
  _58 = (unsigned char) _57;
  _59 = ~_58;
  _60 = _55 & _59;
  *RxDMFlagPtr_101 = _60;
  # DEBUG BEGIN_STMT
  Com_EB_RxDMSignalQueue (SignalExtPtr_94, TimeOutOffset_104);
  goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComRxPduId_106 = SignalPtr_93(D)->ComIPduRef;
  # DEBUG ComRxPduId => ComRxPduId_106
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.657_61 = Com_gDataMemPtr;
  Com_gConfigPtr.658_62 = Com_gConfigPtr;
  _63 = Com_gConfigPtr.658_62->ComRxIPduStatusBase;
  _64 = (int) _63;
  _65 = (int) ComRxPduId_106;
  _66 = _64 + _65;
  _67 = (sizetype) _66;
  IPduFlagBytePtr_107 = Com_gDataMemPtr.657_61 + _67;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_107
  # DEBUG BEGIN_STMT
  _68 = *IPduFlagBytePtr_107;
  _69 = (unsigned int) _68;
  _70 = _69 & 16;
  if (_70 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _71 = *RxDMFlagPtr_101;
  _72 = (int) _71;
  _73 = (int) ToutFlag_103;
  _74 = _72 >> _73;
  _75 = (unsigned char) _74;
  restart_108 = _75 & 1;
  # DEBUG restart => restart_108
  # DEBUG BEGIN_STMT
  _76 = *RxDMFlagPtr_101;
  _77 = (int) ToutFlag_103;
  _78 = 1 << _77;
  _79 = (unsigned char) _78;
  _80 = ~_79;
  _81 = _76 & _80;
  *RxDMFlagPtr_101 = _81;
  # DEBUG BEGIN_STMT
  _82 = *RxDMFlagPtr_101;
  _83 = (int) RunningFlag_102;
  _84 = 1 << _83;
  _85 = (unsigned char) _84;
  _86 = _82 | _85;
  *RxDMFlagPtr_101 = _86;
  # DEBUG BEGIN_STMT
  Com_EB_RxDMSignalQueue (SignalExtPtr_94, TimeOutOffset_104);

  <bb 9> :
  # restart_88 = PHI <restart_112(6), restart_100(7), restart_108(8)>
  # DEBUG restart => restart_88
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (restart_88 == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  *passFilter_MASKED_NEW_DIFFERS_MASKED_OLD_96(D) = 1;

  <bb 11> :
  # SignalUpdated_87 = PHI <SignalUpdated_91(2), SignalUpdated_99(3), SignalUpdated_99(4), SignalUpdated_99(9), SignalUpdated_99(10)>
  # DEBUG SignalUpdated => SignalUpdated_87
  # DEBUG BEGIN_STMT
  _117 = SignalUpdated_87;
  return _117;

}


Com_EB_CheckRxSignalGoupUpdateBitAndDM (const struct ComRxSignalGroupType * SignalGPtr, const struct ComRxIPduType * IPduPtr, uint32 pduLength)
{
  uint8 * const IPduFlagBytePtr;
  const ComIPduRefType ComRxPduId;
  const Com_RxDMNextDueTimeType TimeOutOffset;
  const uint8 ToutFlag;
  const uint8 RunningFlag;
  uint8 * const RxDMFlagPtr;
  const uint32 UpdateBitByte;
  const struct ComRxSignalExtType * const SignalExtPtr;
  uint8 SignalUpdated;
  const struct Com_ConfigType * Com_gConfigPtr.684_1;
  const struct Com_ConfigType * Com_gConfigPtr.685_2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  unsigned char _8;
  unsigned char _9;
  unsigned int _10;
  unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  uint8 * Com_gDataMemPtr.686_14;
  short unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  uint8 * _18;
  unsigned char _19;
  int _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  int _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned int _28;
  unsigned int _29;
  uint8 * Com_gDataMemPtr.687_30;
  const struct Com_ConfigType * Com_gConfigPtr.688_31;
  short unsigned int _32;
  unsigned int _33;
  short unsigned int _34;
  short unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  short unsigned int _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  short unsigned int _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  int _46;
  int _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  int _51;
  unsigned int _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  uint8 * Com_gDataMemPtr.689_56;
  const struct Com_ConfigType * Com_gConfigPtr.690_57;
  short unsigned int _58;
  int _59;
  int _60;
  int _61;
  sizetype _62;
  unsigned char _63;
  unsigned int _64;
  unsigned int _65;
  unsigned char _66;
  int _67;
  unsigned int _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  int _73;
  unsigned int _74;
  unsigned char _75;
  unsigned char _76;
  boolean _100;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalUpdated_80 = 1;
  # DEBUG SignalUpdated => SignalUpdated_80
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.684_1 = Com_gConfigPtr;
  Com_gConfigPtr.685_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.685_2->ComRxSignalExtRef;
  _4 = SignalGPtr_82(D)->ComSignalExtRef;
  _5 = (unsigned int) _4;
  _6 = _5 * 14;
  _7 = _3 + _6;
  SignalExtPtr_83 = Com_gConfigPtr.684_1 + _7;
  # DEBUG SignalExtPtr => SignalExtPtr_83
  # DEBUG BEGIN_STMT
  _8 = SignalExtPtr_83->ComRxSignalExtFlags;
  _9 = _8 >> 1;
  _10 = (unsigned int) _9;
  _11 = _10 & 1;
  if (_11 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _12 = SignalExtPtr_83->ComUpdateBitPositionInBit;
  _13 = _12 / 8;
  UpdateBitByte_84 = (const uint32) _13;
  # DEBUG UpdateBitByte => UpdateBitByte_84
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.686_14 = Com_gDataMemPtr;
  _15 = IPduPtr_85(D)->ComIPduValueRef;
  _16 = (long unsigned int) _15;
  _17 = UpdateBitByte_84 + _16;
  _18 = Com_gDataMemPtr.686_14 + _17;
  _19 = *_18;
  _20 = (int) _19;
  _21 = SignalExtPtr_83->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = _20 >> _23;
  _25 = (unsigned char) _24;
  SignalUpdated_86 = _25 & 1;
  # DEBUG SignalUpdated => SignalUpdated_86
  # DEBUG BEGIN_STMT
  if (SignalUpdated_86 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _26 = SignalExtPtr_83->ComRxSignalExtFlags;
  _27 = _26 >> 2;
  _28 = (unsigned int) _27;
  _29 = _28 & 1;
  if (_29 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.687_30 = Com_gDataMemPtr;
  Com_gConfigPtr.688_31 = Com_gConfigPtr;
  _32 = Com_gConfigPtr.688_31->ComRxDMInvSignalGroupStatusQueueBase;
  _33 = (unsigned int) _32;
  _34 = SignalExtPtr_83->RxSigDMQueueRef;
  _35 = _34 / 4;
  _36 = (unsigned int) _35;
  _37 = _33 + _36;
  RxDMFlagPtr_87 = Com_gDataMemPtr.687_30 + _37;
  # DEBUG RxDMFlagPtr => RxDMFlagPtr_87
  # DEBUG BEGIN_STMT
  _38 = SignalExtPtr_83->RxSigDMQueueRef;
  _39 = (unsigned char) _38;
  _40 = _39 & 3;
  _41 = _40 * 2;
  RunningFlag_88 = _41 + 1;
  # DEBUG RunningFlag => RunningFlag_88
  # DEBUG BEGIN_STMT
  _42 = SignalExtPtr_83->RxSigDMQueueRef;
  _43 = (unsigned char) _42;
  _44 = _43 & 3;
  ToutFlag_89 = _44 * 2;
  # DEBUG ToutFlag => ToutFlag_89
  # DEBUG BEGIN_STMT
  TimeOutOffset_90 = SignalExtPtr_83->ComRxTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_90
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _45 = *RxDMFlagPtr_87;
  _46 = (int) RunningFlag_88;
  _47 = 1 << _46;
  _48 = (unsigned char) _47;
  _49 = _45 & _48;
  if (_49 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _50 = *RxDMFlagPtr_87;
  _51 = (int) ToutFlag_89;
  _52 = 1 << _51;
  _53 = (unsigned char) _52;
  _54 = ~_53;
  _55 = _50 & _54;
  *RxDMFlagPtr_87 = _55;
  # DEBUG BEGIN_STMT
  Com_EB_RxDMSignalGroupQueue (SignalGPtr_82(D), TimeOutOffset_90);
  goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ComRxPduId_92 = SignalGPtr_82(D)->ComIPduRef;
  # DEBUG ComRxPduId => ComRxPduId_92
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.689_56 = Com_gDataMemPtr;
  Com_gConfigPtr.690_57 = Com_gConfigPtr;
  _58 = Com_gConfigPtr.690_57->ComRxIPduStatusBase;
  _59 = (int) _58;
  _60 = (int) ComRxPduId_92;
  _61 = _59 + _60;
  _62 = (sizetype) _61;
  IPduFlagBytePtr_93 = Com_gDataMemPtr.689_56 + _62;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_93
  # DEBUG BEGIN_STMT
  _63 = *IPduFlagBytePtr_93;
  _64 = (unsigned int) _63;
  _65 = _64 & 16;
  if (_65 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _66 = *RxDMFlagPtr_87;
  _67 = (int) ToutFlag_89;
  _68 = 1 << _67;
  _69 = (unsigned char) _68;
  _70 = ~_69;
  _71 = _66 & _70;
  *RxDMFlagPtr_87 = _71;
  # DEBUG BEGIN_STMT
  _72 = *RxDMFlagPtr_87;
  _73 = (int) RunningFlag_88;
  _74 = 1 << _73;
  _75 = (unsigned char) _74;
  _76 = _72 | _75;
  *RxDMFlagPtr_87 = _76;
  # DEBUG BEGIN_STMT
  Com_EB_RxDMSignalGroupQueue (SignalGPtr_82(D), TimeOutOffset_90);

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 10> :
  # SignalUpdated_77 = PHI <SignalUpdated_80(2), SignalUpdated_86(3), SignalUpdated_86(4), SignalUpdated_86(9)>
  # DEBUG SignalUpdated => SignalUpdated_77
  # DEBUG BEGIN_STMT
  _100 = SignalUpdated_77;
  return _100;

}


Com_GetRxIPduBuffer (PduIdType ComRxPduId, struct PduInfoType * PduInfoPtr)
{
  const struct ComRxIPduType * IPduPtr;
  uint8 RetVal;
  unsigned char Com_InitStatus.137_1;
  const struct Com_ConfigType * Com_gConfigPtr.138_2;
  short unsigned int _3;
  const struct Com_ConfigType * Com_gConfigPtr.139_4;
  const struct Com_ConfigType * Com_gConfigPtr.140_5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  sizetype _9;
  uint8 * Com_gDataMemPtr.141_10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  uint8 * Com_gDataMemPtr.142_14;
  const struct Com_ConfigType * Com_gConfigPtr.143_15;
  short unsigned int _16;
  sizetype _17;
  uint8 * _18;
  unsigned int _19;
  unsigned int _20;
  ComIPduSizeType * _21;
  short unsigned int _22;
  uint8 _36;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_25 = 1;
  # DEBUG RetVal => RetVal_25
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_InitStatus.137_1 = Com_InitStatus;
  if (Com_InitStatus.137_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 254, 2);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PduInfoPtr_27(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 254, 3);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.138_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.138_2->ComRxIPduArraySize;
  if (ComRxPduId_28(D) >= _3)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 254, 1);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.139_4 = Com_gConfigPtr;
  Com_gConfigPtr.140_5 = Com_gConfigPtr;
  _6 = Com_gConfigPtr.140_5->ComRxIPduRef;
  _7 = (unsigned int) ComRxPduId_28(D);
  _8 = _7 * 48;
  _9 = _6 + _8;
  IPduPtr_29 = Com_gConfigPtr.139_4 + _9;
  # DEBUG IPduPtr => IPduPtr_29
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.141_10 = Com_gDataMemPtr;
  _11 = IPduPtr_29->ComIPduValueRef;
  _12 = (sizetype) _11;
  _13 = Com_gDataMemPtr.141_10 + _12;
  PduInfoPtr_27(D)->SduDataPtr = _13;
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.142_14 = Com_gDataMemPtr;
  Com_gConfigPtr.143_15 = Com_gConfigPtr;
  _16 = Com_gConfigPtr.143_15->ComRxIPduLengthBase;
  _17 = (sizetype) _16;
  _18 = Com_gDataMemPtr.142_14 + _17;
  _19 = (unsigned int) ComRxPduId_28(D);
  _20 = _19 * 2;
  _21 = _18 + _20;
  _22 = *_21;
  PduInfoPtr_27(D)->SduLength = _22;
  # DEBUG BEGIN_STMT
  RetVal_32 = 0;
  # DEBUG RetVal => RetVal_32

  <bb 9> :
  # RetVal_23 = PHI <RetVal_25(3), RetVal_25(5), RetVal_25(7), RetVal_32(8)>
  # DEBUG RetVal => RetVal_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _36 = RetVal_23;
  return _36;

}


Com_EB_InitStartRxIPdu (ComIPduRefType RxPduId)
{
  uint8 * const IPduFlagBytePtr;
  const struct ComRxIPduType * IPduPtr;
  const struct Com_ConfigType * Com_gConfigPtr.513_1;
  const struct Com_ConfigType * Com_gConfigPtr.514_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  short unsigned int _7;
  uint8 * Com_gDataMemPtr.515_8;
  const struct Com_ConfigType * Com_gConfigPtr.516_9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  sizetype _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.513_1 = Com_gConfigPtr;
  Com_gConfigPtr.514_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.514_2->ComRxIPduRef;
  _4 = (unsigned int) RxPduId_17(D);
  _5 = _4 * 48;
  _6 = _3 + _5;
  IPduPtr_18 = Com_gConfigPtr.513_1 + _6;
  # DEBUG IPduPtr => IPduPtr_18
  # DEBUG BEGIN_STMT
  Com_EB_InitRxIPdu (RxPduId_17(D));
  # DEBUG BEGIN_STMT
  _7 = IPduPtr_18->ComIPduGroupMaskRef;
  if (_7 == 65535)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.515_8 = Com_gDataMemPtr;
  Com_gConfigPtr.516_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.516_9->ComRxIPduStatusBase;
  _11 = (int) _10;
  _12 = (int) RxPduId_17(D);
  _13 = _11 + _12;
  _14 = (sizetype) _13;
  IPduFlagBytePtr_20 = Com_gDataMemPtr.515_8 + _14;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_20
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_20, 0);
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_EnableRxDM (IPduPtr_18, IPduFlagBytePtr_20);

  <bb 4> :
  return;

}


Com_EB_InitRxIPdu (ComIPduRefType RxPduId)
{
  const uint8 * const valPtr;
  const struct ComRxIPduType * IPduPtr;
  const struct Com_ConfigType * Com_gConfigPtr.328_1;
  const struct Com_ConfigType * Com_gConfigPtr.329_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  const struct Com_ConfigType * Com_gConfigPtr.330_7;
  long unsigned int _8;
  uint8 * Com_gDataMemPtr.331_9;
  short unsigned int _10;
  sizetype _11;
  uint8 * _12;
  short unsigned int _13;
  long unsigned int _14;
  uint8 * Com_gDataMemPtr.332_15;
  const struct Com_ConfigType * Com_gConfigPtr.333_16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned int _20;
  unsigned int _21;
  ComIPduSizeType * _22;
  short unsigned int _23;
  uint8 * Com_gDataMemPtr.334_24;
  const struct Com_ConfigType * Com_gConfigPtr.335_25;
  short unsigned int _26;
  int _27;
  int _28;
  int _29;
  sizetype _30;
  uint8 * _31;
  short unsigned int _32;
  uint8 * Com_gDataMemPtr.336_33;
  const struct Com_ConfigType * Com_gConfigPtr.337_34;
  short unsigned int _35;
  unsigned int _36;
  short unsigned int _37;
  short unsigned int _38;
  unsigned int _39;
  unsigned int _40;
  uint8 * _41;
  short unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.328_1 = Com_gConfigPtr;
  Com_gConfigPtr.329_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.329_2->ComRxIPduRef;
  _4 = (unsigned int) RxPduId_47(D);
  _5 = _4 * 48;
  _6 = _3 + _5;
  IPduPtr_48 = Com_gConfigPtr.328_1 + _6;
  # DEBUG IPduPtr => IPduPtr_48
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.330_7 = Com_gConfigPtr;
  _8 = IPduPtr_48->ComInitValueRef;
  valPtr_49 = Com_gConfigPtr.330_7 + _8;
  # DEBUG valPtr => valPtr_49
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.331_9 = Com_gDataMemPtr;
  _10 = IPduPtr_48->ComIPduValueRef;
  _11 = (sizetype) _10;
  _12 = Com_gDataMemPtr.331_9 + _11;
  _13 = IPduPtr_48->ComIPduSizeMax;
  _14 = (long unsigned int) _13;
  TS_MemCpy32 (_12, valPtr_49, _14);
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.332_15 = Com_gDataMemPtr;
  Com_gConfigPtr.333_16 = Com_gConfigPtr;
  _17 = Com_gConfigPtr.333_16->ComRxIPduLengthBase;
  _18 = (sizetype) _17;
  _19 = Com_gDataMemPtr.332_15 + _18;
  _20 = (unsigned int) RxPduId_47(D);
  _21 = _20 * 2;
  _22 = _19 + _21;
  _23 = IPduPtr_48->ComIPduInitSize;
  *_22 = _23;
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.334_24 = Com_gDataMemPtr;
  Com_gConfigPtr.335_25 = Com_gConfigPtr;
  _26 = Com_gConfigPtr.335_25->ComRxIPduStatusBase;
  _27 = (int) _26;
  _28 = (int) RxPduId_47(D);
  _29 = _27 + _28;
  _30 = (sizetype) _29;
  _31 = Com_gDataMemPtr.334_24 + _30;
  *_31 = 0;
  # DEBUG BEGIN_STMT
  Com_EB_InitRxSignalsWithFilter (IPduPtr_48);
  # DEBUG BEGIN_STMT
  _32 = IPduPtr_48->ComIPduSigGWFlagBit;
  if (_32 != 65535)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.336_33 = Com_gDataMemPtr;
  Com_gConfigPtr.337_34 = Com_gConfigPtr;
  _35 = Com_gConfigPtr.337_34->ComSigGWRxPduFlagBase;
  _36 = (unsigned int) _35;
  _37 = IPduPtr_48->ComIPduSigGWFlagBit;
  _38 = _37 / 8;
  _39 = (unsigned int) _38;
  _40 = _36 + _39;
  _41 = Com_gDataMemPtr.336_33 + _40;
  _42 = IPduPtr_48->ComIPduSigGWFlagBit;
  _43 = (long unsigned int) _42;
  _44 = _43 & 7;
  TS_AtomicClearBit_8 (_41, _44);

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_EB_DisableSignalAndSignalGroupBasedDMFlag (IPduPtr_48, 1);
  return;

}


Com_EB_InitRxSignalsWithFilter (const struct ComRxIPduType * IPduPtr)
{
  const struct ComRxSignalType * SignalPtr;
  ComSignalRefType signalId;
  ComSignalRefType j;
  const struct Com_ConfigType * Com_gConfigPtr.338_1;
  const struct Com_ConfigType * Com_gConfigPtr.339_2;
  long unsigned int _3;
  int _4;
  short unsigned int _5;
  int _6;
  int _7;
  unsigned int _8;
  unsigned int _9;
  sizetype _10;
  const ComSignalRefType * _11;
  const struct Com_ConfigType * Com_gConfigPtr.340_12;
  const struct Com_ConfigType * Com_gConfigPtr.341_13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  sizetype _17;
  const struct ComSignalBaseType * _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int j.342_21;
  short unsigned int _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  j_26 = 0;
  # DEBUG j => j_26
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.338_1 = Com_gConfigPtr;
  Com_gConfigPtr.339_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.339_2->ComRxIPduSignalListRef;
  _4 = (int) j_23;
  _5 = IPduPtr_28(D)->ComIPduSignalRefFirst;
  _6 = (int) _5;
  _7 = _4 + _6;
  _8 = (unsigned int) _7;
  _9 = _8 * 2;
  _10 = _3 + _9;
  _11 = Com_gConfigPtr.338_1 + _10;
  signalId_29 = *_11;
  # DEBUG signalId => signalId_29
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.340_12 = Com_gConfigPtr;
  Com_gConfigPtr.341_13 = Com_gConfigPtr;
  _14 = Com_gConfigPtr.341_13->ComRxSignalRef;
  _15 = (unsigned int) signalId_29;
  _16 = _15 * 20;
  _17 = _14 + _16;
  SignalPtr_30 = Com_gConfigPtr.340_12 + _17;
  # DEBUG SignalPtr => SignalPtr_30
  # DEBUG BEGIN_STMT
  _18 = &SignalPtr_30->ComSignalBase;
  Com_EB_SetBuffer (_18);
  # DEBUG BEGIN_STMT
  _19 = SignalPtr_30->ComSignalBase.ComFilterConf.ComFilterType;
  if (_19 == 7)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _20 = SignalPtr_30->ComSignalBase.ComFilterConf.ComFilterRef;
  Com_ResetFilerOneEveryN (_20);

  <bb 5> :
  # DEBUG BEGIN_STMT
  j.342_21 = j_23;
  j_33 = j.342_21 + 1;
  # DEBUG j => j_33

  <bb 6> :
  # j_23 = PHI <j_26(2), j_33(5)>
  # DEBUG j => j_23
  # DEBUG BEGIN_STMT
  _22 = IPduPtr_28(D)->ComIPduSignalWithBufferRefNum;
  if (j_23 < _22)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


Com_EB_HandleRxSignalGroups (const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  void (*<T608>) (void) fptr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const uint8 SignalUpdated;
  const struct ComRxSignalGroupType * const SignalGPtr;
  const ComSignalGroupRefType signalGId;
  const uint32 pduLength;
  ComSignalGroupRefType i;
  uint8 * Com_gDataMemPtr.675_1;
  const struct Com_ConfigType * Com_gConfigPtr.676_2;
  short unsigned int _3;
  sizetype _4;
  uint8 * _5;
  unsigned int _6;
  unsigned int _7;
  ComIPduSizeType * _8;
  short unsigned int _9;
  const struct Com_ConfigType * Com_gConfigPtr.677_10;
  const struct Com_ConfigType * Com_gConfigPtr.678_11;
  long unsigned int _12;
  int _13;
  short unsigned int _14;
  int _15;
  int _16;
  unsigned int _17;
  unsigned int _18;
  sizetype _19;
  const ComSignalGroupRefType * _20;
  const struct Com_ConfigType * Com_gConfigPtr.679_21;
  const struct Com_ConfigType * Com_gConfigPtr.680_22;
  long unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  sizetype _26;
  const struct Com_ConfigType * Com_gConfigPtr.681_27;
  const struct Com_ConfigType * Com_gConfigPtr.682_28;
  long unsigned int _29;
  short unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  sizetype _33;
  short unsigned int _34;
  short unsigned int _35;
  int _36;
  short unsigned int i.683_37;
  short unsigned int _38;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.675_1 = Com_gDataMemPtr;
  Com_gConfigPtr.676_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.676_2->ComRxIPduLengthBase;
  _4 = (sizetype) _3;
  _5 = Com_gDataMemPtr.675_1 + _4;
  _6 = (unsigned int) PduId_43(D);
  _7 = _6 * 2;
  _8 = _5 + _7;
  _9 = *_8;
  pduLength_44 = (const uint32) _9;
  # DEBUG pduLength => pduLength_44
  # DEBUG BEGIN_STMT
  i_45 = 0;
  # DEBUG i => i_45
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.677_10 = Com_gConfigPtr;
  Com_gConfigPtr.678_11 = Com_gConfigPtr;
  _12 = Com_gConfigPtr.678_11->ComRxIPduSignalGroupListRef;
  _13 = (int) i_39;
  _14 = IPduPtr_46(D)->ComIPduSignalGroupRefFirst;
  _15 = (int) _14;
  _16 = _13 + _15;
  _17 = (unsigned int) _16;
  _18 = _17 * 2;
  _19 = _12 + _18;
  _20 = Com_gConfigPtr.677_10 + _19;
  signalGId_47 = *_20;
  # DEBUG signalGId => signalGId_47
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.679_21 = Com_gConfigPtr;
  Com_gConfigPtr.680_22 = Com_gConfigPtr;
  _23 = Com_gConfigPtr.680_22->ComRxSignalGroupRef;
  _24 = (unsigned int) signalGId_47;
  _25 = _24 * 10;
  _26 = _23 + _25;
  SignalGPtr_48 = Com_gConfigPtr.679_21 + _26;
  # DEBUG SignalGPtr => SignalGPtr_48
  # DEBUG BEGIN_STMT
  SignalUpdated_50 = Com_EB_CheckRxSignalGroup_Receive_UpdateBitAndDM (SignalGPtr_48, IPduPtr_46(D), pduLength_44);
  # DEBUG SignalUpdated => SignalUpdated_50
  # DEBUG BEGIN_STMT
  if (SignalUpdated_50 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.681_27 = Com_gConfigPtr;
  Com_gConfigPtr.682_28 = Com_gConfigPtr;
  _29 = Com_gConfigPtr.682_28->ComRxSignalExtRef;
  _30 = SignalGPtr_48->ComSignalExtRef;
  _31 = (unsigned int) _30;
  _32 = _31 * 14;
  _33 = _29 + _32;
  SignalExtPtr_51 = Com_gConfigPtr.681_27 + _33;
  # DEBUG SignalExtPtr => SignalExtPtr_51
  # DEBUG BEGIN_STMT
  _34 = SignalExtPtr_51->ComNotification;
  if (_34 != 65535)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _35 = SignalExtPtr_51->ComNotification;
  _36 = (int) _35;
  fptr_52 = Com_CbkRxAck_Array[_36];
  # DEBUG fptr => fptr_52
  # DEBUG BEGIN_STMT
  fptr_52 ();

  <bb 6> :
  # DEBUG BEGIN_STMT
  i.683_37 = i_39;
  i_54 = i.683_37 + 1;
  # DEBUG i => i_54

  <bb 7> :
  # i_39 = PHI <i_45(2), i_54(6)>
  # DEBUG i => i_39
  # DEBUG BEGIN_STMT
  _38 = IPduPtr_46(D)->ComIPduSignalGroupRefNum;
  if (i_39 < _38)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


Com_EB_HandleRxSignalsWithBuffer (const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId, uint8 pduRxDMRestat)
{
  void (*<T608>) (void) fptr;
  const struct ComSignalBaseType * const Com_EB_ReadPropPtr;
  const uint8 * const dataPtr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const uint8 SignalUpdated;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  uint8 passFilter_MASKED_NEW_DIFFERS_MASKED_OLD;
  uint8 filter;
  const uint8 checkRequired;
  const uint32 pduLength;
  ComSignalRefType i;
  uint8 * Com_gDataMemPtr.641_1;
  const struct Com_ConfigType * Com_gConfigPtr.642_2;
  short unsigned int _3;
  sizetype _4;
  uint8 * _5;
  unsigned int _6;
  unsigned int _7;
  ComIPduSizeType * _8;
  short unsigned int _9;
  short unsigned int _10;
  long unsigned int _11;
  _Bool _12;
  const struct Com_ConfigType * Com_gConfigPtr.643_13;
  const struct Com_ConfigType * Com_gConfigPtr.644_14;
  long unsigned int _15;
  int _16;
  short unsigned int _17;
  int _18;
  int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  const ComSignalRefType * _23;
  const struct Com_ConfigType * Com_gConfigPtr.645_24;
  const struct Com_ConfigType * Com_gConfigPtr.646_25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  sizetype _29;
  const struct Com_ConfigType * Com_gConfigPtr.647_30;
  const struct Com_ConfigType * Com_gConfigPtr.648_31;
  long unsigned int _32;
  short unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  sizetype _36;
  uint8 * Com_gDataMemPtr.649_37;
  short unsigned int _38;
  sizetype _39;
  const struct ComFilterConfType * _40;
  unsigned char passFilter_MASKED_NEW_DIFFERS_MASKED_OLD.650_41;
  unsigned char _42;
  unsigned char _43;
  unsigned int _44;
  unsigned int _45;
  unsigned char _46;
  const struct ComSignalBaseType * _47;
  short unsigned int _48;
  short unsigned int _49;
  int _50;
  short unsigned int i.651_51;
  short unsigned int _52;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.641_1 = Com_gDataMemPtr;
  Com_gConfigPtr.642_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.642_2->ComRxIPduLengthBase;
  _4 = (sizetype) _3;
  _5 = Com_gDataMemPtr.641_1 + _4;
  _6 = (unsigned int) PduId_59(D);
  _7 = _6 * 2;
  _8 = _5 + _7;
  _9 = *_8;
  pduLength_60 = (const uint32) _9;
  # DEBUG pduLength => pduLength_60
  # DEBUG BEGIN_STMT
  _10 = IPduPtr_61(D)->ComIPduSizeMax;
  _11 = (long unsigned int) _10;
  _12 = pduLength_60 != _11;
  checkRequired_62 = (const uint8) _12;
  # DEBUG checkRequired => checkRequired_62
  # DEBUG BEGIN_STMT
  i_63 = 0;
  # DEBUG i => i_63
  goto <bb 12>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  filter_64 = 1;
  # DEBUG filter => filter_64
  # DEBUG BEGIN_STMT
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD = pduRxDMRestat_65(D);
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.643_13 = Com_gConfigPtr;
  Com_gConfigPtr.644_14 = Com_gConfigPtr;
  _15 = Com_gConfigPtr.644_14->ComRxIPduSignalListRef;
  _16 = (int) i_53;
  _17 = IPduPtr_61(D)->ComIPduSignalRefFirst;
  _18 = (int) _17;
  _19 = _16 + _18;
  _20 = (unsigned int) _19;
  _21 = _20 * 2;
  _22 = _15 + _21;
  _23 = Com_gConfigPtr.643_13 + _22;
  signalId_67 = *_23;
  # DEBUG signalId => signalId_67
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.645_24 = Com_gConfigPtr;
  Com_gConfigPtr.646_25 = Com_gConfigPtr;
  _26 = Com_gConfigPtr.646_25->ComRxSignalRef;
  _27 = (unsigned int) signalId_67;
  _28 = _27 * 20;
  _29 = _26 + _28;
  SignalPtr_68 = Com_gConfigPtr.645_24 + _29;
  # DEBUG SignalPtr => SignalPtr_68
  # DEBUG BEGIN_STMT
  SignalUpdated_70 = Com_EB_CheckRxSignal_Receive_UpdateBitAndDM (SignalPtr_68, IPduPtr_61(D), &passFilter_MASKED_NEW_DIFFERS_MASKED_OLD, pduLength_60, checkRequired_62);
  # DEBUG SignalUpdated => SignalUpdated_70
  # DEBUG BEGIN_STMT
  if (SignalUpdated_70 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.647_30 = Com_gConfigPtr;
  Com_gConfigPtr.648_31 = Com_gConfigPtr;
  _32 = Com_gConfigPtr.648_31->ComRxSignalExtRef;
  _33 = SignalPtr_68->ComSignalExtRef;
  _34 = (unsigned int) _33;
  _35 = _34 * 14;
  _36 = _32 + _35;
  SignalExtPtr_71 = Com_gConfigPtr.647_30 + _36;
  # DEBUG SignalExtPtr => SignalExtPtr_71
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.649_37 = Com_gDataMemPtr;
  _38 = SignalPtr_68->ComSignalBase.ComBufferRef;
  _39 = (sizetype) _38;
  dataPtr_72 = Com_gDataMemPtr.649_37 + _39;
  # DEBUG dataPtr => dataPtr_72
  # DEBUG BEGIN_STMT
  Com_EB_ReadPropPtr_73 = &SignalPtr_68->ComSignalBase;
  # DEBUG Com_EB_ReadPropPtr => Com_EB_ReadPropPtr_73
  # DEBUG BEGIN_STMT
  _40 = &Com_EB_ReadPropPtr_73->ComFilterConf;
  filter_75 = Com_EB_CalculateFilter (Com_EB_ReadPropPtr_73, dataPtr_72, _40);
  # DEBUG filter => filter_75
  # DEBUG BEGIN_STMT
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD.650_41 = passFilter_MASKED_NEW_DIFFERS_MASKED_OLD;
  if (passFilter_MASKED_NEW_DIFFERS_MASKED_OLD.650_41 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _42 = SignalExtPtr_71->ComRxSignalExtFlags;
  _43 = _42 >> 3;
  _44 = (unsigned int) _43;
  _45 = _44 & 1;
  if (_45 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _46 = SignalPtr_68->ComSignalBase.ComFilterConf.ComFilterType;
  if (_46 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  filter_76 = 1;
  # DEBUG filter => filter_76
  # DEBUG BEGIN_STMT
  _47 = &SignalPtr_68->ComSignalBase;
  Com_EB_SetBuffer (_47);

  <bb 8> :
  # filter_54 = PHI <filter_75(4), filter_75(5), filter_75(6), filter_76(7)>
  # DEBUG filter => filter_54
  # DEBUG BEGIN_STMT
  if (filter_54 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _48 = SignalExtPtr_71->ComNotification;
  if (_48 != 65535)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _49 = SignalExtPtr_71->ComNotification;
  _50 = (int) _49;
  fptr_78 = Com_CbkRxAck_Array[_50];
  # DEBUG fptr => fptr_78
  # DEBUG BEGIN_STMT
  fptr_78 ();

  <bb 11> :
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  i.651_51 = i_53;
  i_81 = i.651_51 + 1;
  # DEBUG i => i_81

  <bb 12> :
  # i_53 = PHI <i_63(2), i_81(11)>
  # DEBUG i => i_53
  # DEBUG BEGIN_STMT
  _52 = IPduPtr_61(D)->ComIPduSignalWithBufferRefNum;
  if (i_53 < _52)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  return;

}


Com_EB_CheckRxSignalGroup_Receive_UpdateBitAndDM (const struct ComRxSignalGroupType * SignalGPtr, const struct ComRxIPduType * IPduPtr, uint32 pduLength)
{
  uint8 SignalUpdated;
  uint8 _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalUpdated_1 = 1;
  # DEBUG SignalUpdated => SignalUpdated_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalUpdated_7 = Com_EB_CheckRxSignalGoupUpdateBitAndDM (SignalGPtr_3(D), IPduPtr_4(D), pduLength_5(D));
  # DEBUG SignalUpdated => SignalUpdated_7
  # DEBUG BEGIN_STMT
  _8 = SignalUpdated_7;
  return _8;

}


Com_EB_CheckRxSignal_Receive_UpdateBitAndDM (const struct ComRxSignalType * SignalPtr, const struct ComRxIPduType * IPduPtr, uint8 * passFilter_MASKED_NEW_DIFFERS_MASKED_OLD, uint32 pduLength, uint8 checkRequired)
{
  uint8 SignalUpdated;
  uint8 _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalUpdated_1 = 1;
  # DEBUG SignalUpdated => SignalUpdated_1
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SignalUpdated_8 = Com_EB_CheckRxSignalUpdateBitAndDM (SignalPtr_3(D), IPduPtr_4(D), passFilter_MASKED_NEW_DIFFERS_MASKED_OLD_5(D), pduLength_6(D));
  # DEBUG SignalUpdated => SignalUpdated_8
  # DEBUG BEGIN_STMT
  _9 = SignalUpdated_8;
  return _9;

}


Com_EB_HandleRxIPdu (Com_IpduGroupModeType mode, boolean toBeActivated, const struct ComRxIPduType * IPduPtr, boolean Initialize, ComIPduRefType IPduId)
{
  uint8 * const IPduFlagBytePtr;
  uint8 * Com_gDataMemPtr.326_1;
  const struct Com_ConfigType * Com_gConfigPtr.327_2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  sizetype _7;
  unsigned char _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  int _12;
  int _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.326_1 = Com_gDataMemPtr;
  Com_gConfigPtr.327_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.327_2->ComRxIPduStatusBase;
  _4 = (int) _3;
  _5 = (int) IPduId_16(D);
  _6 = _4 + _5;
  _7 = (sizetype) _6;
  IPduFlagBytePtr_17 = Com_gDataMemPtr.326_1 + _7;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_17
  # DEBUG BEGIN_STMT
  _8 = *IPduFlagBytePtr_17;
  _9 = (unsigned int) _8;
  _10 = _9 & 1;
  if (_10 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (toBeActivated_18(D) == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _11 = (int) mode_19(D);
  switch (_11) <default: <L26> [INV], case 0: <L2> [INV]>

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_Start (IPduId_16(D), Initialize_25(D), IPduFlagBytePtr_17);
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_EnableRxDM (IPduPtr_20(D), IPduFlagBytePtr_17);
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (toBeActivated_18(D) == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _12 = (int) mode_19(D);
  switch (_12) <default: <L26> [INV], case 0: <L10> [INV], case 1: <L11> [INV]>

  <bb 8> :
<L10>:
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_17, 0);
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_DisableRxDM (IPduPtr_20(D), IPduFlagBytePtr_17);
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 9> :
<L11>:
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_DisableRxDM (IPduPtr_20(D), IPduFlagBytePtr_17);
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _13 = (int) mode_19(D);
  switch (_13) <default: <L26> [INV], case 1: <L15> [INV]>

  <bb 11> :
<L15>:
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu_EnableRxDM (IPduPtr_20(D), IPduFlagBytePtr_17);
  # DEBUG BEGIN_STMT

  <bb 12> :
<L26>:
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_RxDMQueue (const struct ComRxIPduType * IPduPtr, Com_RxDMNextDueTimeType TimeOutOffset)
{
  Com_RxDMNextDueTimeType * const RxTimeoutQueueBase;
  Com_RxDMNextDueTimeType TimeOut;
  Com_RxDMNextDueTimeType globalTime;
  uint8 * Com_gDataMemPtr.391_1;
  const struct Com_ConfigType * Com_gConfigPtr.392_2;
  short unsigned int _3;
  sizetype _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  Com_RxDMNextDueTimeType * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.391_1 = Com_gDataMemPtr;
  Com_gConfigPtr.392_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.392_2->ComRxTimeoutQueueBase;
  _4 = (sizetype) _3;
  RxTimeoutQueueBase_10 = Com_gDataMemPtr.391_1 + _4;
  # DEBUG RxTimeoutQueueBase => RxTimeoutQueueBase_10
  # DEBUG BEGIN_STMT
  globalTime_11 = Com_GlobalTime;
  # DEBUG globalTime => globalTime_11
  # DEBUG BEGIN_STMT
  TimeOut_13 = globalTime_11 + TimeOutOffset_12(D);
  # DEBUG TimeOut => TimeOut_13
  # DEBUG BEGIN_STMT
  _5 = IPduPtr_14(D)->RxDMQueueRef;
  _6 = (unsigned int) _5;
  _7 = _6 * 2;
  _8 = RxTimeoutQueueBase_10 + _7;
  *_8 = TimeOut_13;
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_HandleRxSignalsDMUBOnly (const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  uint8 passFilter_MASKED_NEW_DIFFERS_MASKED_OLD;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  const uint8 checkRequired;
  const uint32 pduLength;
  ComSignalRefType loopStop;
  ComSignalRefType loopStart;
  ComSignalRefType i;
  uint8 * Com_gDataMemPtr.668_1;
  const struct Com_ConfigType * Com_gConfigPtr.669_2;
  short unsigned int _3;
  sizetype _4;
  uint8 * _5;
  unsigned int _6;
  unsigned int _7;
  ComIPduSizeType * _8;
  short unsigned int _9;
  short unsigned int _10;
  long unsigned int _11;
  _Bool _12;
  short unsigned int _13;
  short unsigned int _14;
  const struct Com_ConfigType * Com_gConfigPtr.670_15;
  const struct Com_ConfigType * Com_gConfigPtr.671_16;
  long unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  sizetype _20;
  const ComSignalRefType * _21;
  const struct Com_ConfigType * Com_gConfigPtr.672_22;
  const struct Com_ConfigType * Com_gConfigPtr.673_23;
  long unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  sizetype _27;
  short unsigned int i.674_28;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  loopStart_33 = IPduPtr_32(D)->ComIPduSignalRefFirst;
  # DEBUG loopStart => loopStart_33
  # DEBUG BEGIN_STMT
  loopStop_34 = IPduPtr_32(D)->ComIPduSignalRefFirst;
  # DEBUG loopStop => loopStop_34
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.668_1 = Com_gDataMemPtr;
  Com_gConfigPtr.669_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.669_2->ComRxIPduLengthBase;
  _4 = (sizetype) _3;
  _5 = Com_gDataMemPtr.668_1 + _4;
  _6 = (unsigned int) PduId_35(D);
  _7 = _6 * 2;
  _8 = _5 + _7;
  _9 = *_8;
  pduLength_36 = (const uint32) _9;
  # DEBUG pduLength => pduLength_36
  # DEBUG BEGIN_STMT
  _10 = IPduPtr_32(D)->ComIPduSizeMax;
  _11 = (long unsigned int) _10;
  _12 = pduLength_36 != _11;
  checkRequired_37 = (const uint8) _12;
  # DEBUG checkRequired => checkRequired_37
  # DEBUG BEGIN_STMT
  _13 = IPduPtr_32(D)->ComIPduSignalRefNum;
  loopStop_38 = loopStop_34 + _13;
  # DEBUG loopStop => loopStop_38
  # DEBUG BEGIN_STMT
  _14 = IPduPtr_32(D)->ComIPduSignalW_F_A_NotiRefNum;
  loopStart_39 = loopStart_33 + _14;
  # DEBUG loopStart => loopStart_39
  # DEBUG BEGIN_STMT
  i_40 = loopStart_39;
  # DEBUG i => i_40
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.670_15 = Com_gConfigPtr;
  Com_gConfigPtr.671_16 = Com_gConfigPtr;
  _17 = Com_gConfigPtr.671_16->ComRxIPduSignalListRef;
  _18 = (unsigned int) i_29;
  _19 = _18 * 2;
  _20 = _17 + _19;
  _21 = Com_gConfigPtr.670_15 + _20;
  signalId_41 = *_21;
  # DEBUG signalId => signalId_41
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.672_22 = Com_gConfigPtr;
  Com_gConfigPtr.673_23 = Com_gConfigPtr;
  _24 = Com_gConfigPtr.673_23->ComRxSignalRef;
  _25 = (unsigned int) signalId_41;
  _26 = _25 * 20;
  _27 = _24 + _26;
  SignalPtr_42 = Com_gConfigPtr.672_22 + _27;
  # DEBUG SignalPtr => SignalPtr_42
  # DEBUG BEGIN_STMT
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD = 0;
  # DEBUG BEGIN_STMT
  Com_EB_CheckRxSignal_Receive_UpdateBitAndDM (SignalPtr_42, IPduPtr_32(D), &passFilter_MASKED_NEW_DIFFERS_MASKED_OLD, pduLength_36, checkRequired_37);
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  i.674_28 = i_29;
  i_46 = i.674_28 + 1;
  # DEBUG i => i_46

  <bb 4> :
  # i_29 = PHI <i_40(2), i_46(3)>
  # DEBUG i => i_29
  # DEBUG BEGIN_STMT
  if (i_29 < loopStop_38)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


Com_EB_HandleRxSig_W_F_A_A_Noti (const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  void (*<T608>) (void) fptr;
  const struct ComRxSignalExtType * const SignalExtPtr;
  const uint8 SignalUpdated;
  uint8 passFilter_MASKED_NEW_DIFFERS_MASKED_OLD;
  const struct ComRxSignalType * const SignalPtr;
  const ComSignalRefType signalId;
  const uint8 checkRequired;
  const uint32 pduLength;
  ComSignalRefType loopStop;
  ComSignalRefType loopStart;
  ComSignalRefType i;
  uint8 * Com_gDataMemPtr.659_1;
  const struct Com_ConfigType * Com_gConfigPtr.660_2;
  short unsigned int _3;
  sizetype _4;
  uint8 * _5;
  unsigned int _6;
  unsigned int _7;
  ComIPduSizeType * _8;
  short unsigned int _9;
  short unsigned int _10;
  long unsigned int _11;
  _Bool _12;
  const struct Com_ConfigType * Com_gConfigPtr.661_13;
  const struct Com_ConfigType * Com_gConfigPtr.662_14;
  long unsigned int _15;
  int _16;
  short unsigned int _17;
  int _18;
  int _19;
  unsigned int _20;
  unsigned int _21;
  sizetype _22;
  const ComSignalRefType * _23;
  const struct Com_ConfigType * Com_gConfigPtr.663_24;
  const struct Com_ConfigType * Com_gConfigPtr.664_25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  sizetype _29;
  const struct Com_ConfigType * Com_gConfigPtr.665_30;
  const struct Com_ConfigType * Com_gConfigPtr.666_31;
  long unsigned int _32;
  short unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  sizetype _36;
  short unsigned int _37;
  int _38;
  short unsigned int i.667_39;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.659_1 = Com_gDataMemPtr;
  Com_gConfigPtr.660_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.660_2->ComRxIPduLengthBase;
  _4 = (sizetype) _3;
  _5 = Com_gDataMemPtr.659_1 + _4;
  _6 = (unsigned int) PduId_44(D);
  _7 = _6 * 2;
  _8 = _5 + _7;
  _9 = *_8;
  pduLength_45 = (const uint32) _9;
  # DEBUG pduLength => pduLength_45
  # DEBUG BEGIN_STMT
  _10 = IPduPtr_46(D)->ComIPduSizeMax;
  _11 = (long unsigned int) _10;
  _12 = pduLength_45 != _11;
  checkRequired_47 = (const uint8) _12;
  # DEBUG checkRequired => checkRequired_47
  # DEBUG BEGIN_STMT
  loopStart_48 = IPduPtr_46(D)->ComIPduSignalWithBufferRefNum;
  # DEBUG loopStart => loopStart_48
  # DEBUG BEGIN_STMT
  loopStop_49 = IPduPtr_46(D)->ComIPduSignalW_F_A_NotiRefNum;
  # DEBUG loopStop => loopStop_49
  # DEBUG BEGIN_STMT
  i_50 = loopStart_48;
  # DEBUG i => i_50
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.661_13 = Com_gConfigPtr;
  Com_gConfigPtr.662_14 = Com_gConfigPtr;
  _15 = Com_gConfigPtr.662_14->ComRxIPduSignalListRef;
  _16 = (int) i_40;
  _17 = IPduPtr_46(D)->ComIPduSignalRefFirst;
  _18 = (int) _17;
  _19 = _16 + _18;
  _20 = (unsigned int) _19;
  _21 = _20 * 2;
  _22 = _15 + _21;
  _23 = Com_gConfigPtr.661_13 + _22;
  signalId_51 = *_23;
  # DEBUG signalId => signalId_51
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.663_24 = Com_gConfigPtr;
  Com_gConfigPtr.664_25 = Com_gConfigPtr;
  _26 = Com_gConfigPtr.664_25->ComRxSignalRef;
  _27 = (unsigned int) signalId_51;
  _28 = _27 * 20;
  _29 = _26 + _28;
  SignalPtr_52 = Com_gConfigPtr.663_24 + _29;
  # DEBUG SignalPtr => SignalPtr_52
  # DEBUG BEGIN_STMT
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD = 0;
  # DEBUG BEGIN_STMT
  SignalUpdated_55 = Com_EB_CheckRxSignal_Receive_UpdateBitAndDM (SignalPtr_52, IPduPtr_46(D), &passFilter_MASKED_NEW_DIFFERS_MASKED_OLD, pduLength_45, checkRequired_47);
  # DEBUG SignalUpdated => SignalUpdated_55
  # DEBUG BEGIN_STMT
  if (SignalUpdated_55 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.665_30 = Com_gConfigPtr;
  Com_gConfigPtr.666_31 = Com_gConfigPtr;
  _32 = Com_gConfigPtr.666_31->ComRxSignalExtRef;
  _33 = SignalPtr_52->ComSignalExtRef;
  _34 = (unsigned int) _33;
  _35 = _34 * 14;
  _36 = _32 + _35;
  SignalExtPtr_56 = Com_gConfigPtr.665_30 + _36;
  # DEBUG SignalExtPtr => SignalExtPtr_56
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _37 = SignalExtPtr_56->ComNotification;
  _38 = (int) _37;
  fptr_57 = Com_CbkRxAck_Array[_38];
  # DEBUG fptr => fptr_57
  # DEBUG BEGIN_STMT
  fptr_57 ();

  <bb 5> :
  passFilter_MASKED_NEW_DIFFERS_MASKED_OLD ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  i.667_39 = i_40;
  i_60 = i.667_39 + 1;
  # DEBUG i => i_60

  <bb 6> :
  # i_40 = PHI <i_50(2), i_60(5)>
  # DEBUG i => i_40
  # DEBUG BEGIN_STMT
  if (i_40 < loopStop_49)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


Com_EB_HandleRxIPdu_DisableRxDM (const struct ComRxIPduType * IPduPtr, uint8 * IPduFlagBytePtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_2(D), 4);
  # DEBUG BEGIN_STMT
  TS_AtomicClearBit_8 (IPduFlagBytePtr_2(D), 1);
  # DEBUG BEGIN_STMT
  Com_EB_DisableSignalAndSignalGroupBasedDMFlag (IPduPtr_5(D), 0);
  return;

}


Com_EB_HandleRxIPdu_EnableRxDM (const struct ComRxIPduType * IPduPtr, uint8 * IPduFlagBytePtr)
{
  const Com_RxDMNextDueTimeType TimeOutOffset;
  unsigned char _1;
  unsigned char _2;
  unsigned int _3;
  unsigned int _4;
  unsigned char _5;
  unsigned int _6;
  unsigned int _7;
  unsigned char _8;
  unsigned char _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_13(D), 4);
  # DEBUG BEGIN_STMT
  _1 = IPduPtr_15(D)->ComRxIPduFlags;
  _2 = _1 >> 1;
  _3 = (unsigned int) _2;
  _4 = _3 & 1;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  TimeOutOffset_16 = IPduPtr_15(D)->ComRxFirstTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_16
  # DEBUG BEGIN_STMT
  if (TimeOutOffset_16 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _5 = *IPduFlagBytePtr_13(D);
  _6 = (unsigned int) _5;
  _7 = _6 & 2;
  if (_7 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _8 = *IPduFlagBytePtr_13(D);
  _9 = _8 | 2;
  *IPduFlagBytePtr_13(D) = _9;
  # DEBUG BEGIN_STMT
  Com_EB_RxDMQueue (IPduPtr_15(D), TimeOutOffset_16);

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 7> :
  # DEBUG BEGIN_STMT
  Com_EB_EnableSignalBasedDMFlag (IPduPtr_15(D));
  # DEBUG BEGIN_STMT
  Com_EB_EnableSignalGroupBasedDMFlag (IPduPtr_15(D));
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_HandleRxIPdu_Start (ComIPduRefType IPduId, boolean Initialize, uint8 * IPduFlagBytePtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  if (Initialize_2(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_InitRxIPdu (IPduId_4(D));

  <bb 4> :
  # DEBUG BEGIN_STMT
  TS_AtomicSetBit_8 (IPduFlagBytePtr_6(D), 0);
  return;

}


Com_EB_NotifyReceivers (const struct ComRxIPduType * IPduPtr, ComIPduRefType PduId)
{
  uint8 pduRxDMRestat;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  pduRxDMRestat_4 = Com_EB_HandlePduRxDM (IPduPtr_2(D));
  # DEBUG pduRxDMRestat => pduRxDMRestat_4
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxSignalsWithBuffer (IPduPtr_2(D), PduId_5(D), pduRxDMRestat_4);
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxSig_W_F_A_A_Noti (IPduPtr_2(D), PduId_5(D));
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxSignalsDMUBOnly (IPduPtr_2(D), PduId_5(D));
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxSignalGroups (IPduPtr_2(D), PduId_5(D));
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_HandlePduRxDM (const struct ComRxIPduType * IPduPtr)
{
  const Com_RxDMNextDueTimeType TimeOutOffset;
  ptrdiff_t offset;
  const struct ComRxIPduType * firstCfgPtr;
  ComIPduRefType ComRxPduId;
  uint8 * IPduFlagBytePtr;
  uint8 restart;
  const struct Com_ConfigType * Com_gConfigPtr.637_1;
  const struct Com_ConfigType * Com_gConfigPtr.638_2;
  long unsigned int _3;
  int _4;
  uint8 * Com_gDataMemPtr.639_5;
  const struct Com_ConfigType * Com_gConfigPtr.640_6;
  short unsigned int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  unsigned char _12;
  unsigned char _13;
  unsigned int _14;
  unsigned int _15;
  unsigned char _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned int _24;
  unsigned int _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  uint8 _53;

  <bb 2> :
  # DEBUG BEGIN_STMT
  restart_36 = 0;
  # DEBUG restart => restart_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.637_1 = Com_gConfigPtr;
  Com_gConfigPtr.638_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.638_2->ComRxIPduRef;
  firstCfgPtr_38 = Com_gConfigPtr.637_1 + _3;
  # DEBUG firstCfgPtr => firstCfgPtr_38
  # DEBUG BEGIN_STMT
  _4 = IPduPtr_39(D) - firstCfgPtr_38;
  offset_40 = _4 /[ex] 48;
  # DEBUG offset => offset_40
  # DEBUG BEGIN_STMT
  ComRxPduId_41 = (ComIPduRefType) offset_40;
  # DEBUG ComRxPduId => ComRxPduId_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.639_5 = Com_gDataMemPtr;
  Com_gConfigPtr.640_6 = Com_gConfigPtr;
  _7 = Com_gConfigPtr.640_6->ComRxIPduStatusBase;
  _8 = (int) _7;
  _9 = (int) ComRxPduId_41;
  _10 = _8 + _9;
  _11 = (sizetype) _10;
  IPduFlagBytePtr_42 = Com_gDataMemPtr.639_5 + _11;
  # DEBUG IPduFlagBytePtr => IPduFlagBytePtr_42
  # DEBUG BEGIN_STMT
  _12 = IPduPtr_39(D)->ComRxIPduFlags;
  _13 = _12 >> 1;
  _14 = (unsigned int) _13;
  _15 = _14 & 1;
  if (_15 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  TimeOutOffset_43 = IPduPtr_39(D)->ComRxTimeoutFactorValue;
  # DEBUG TimeOutOffset => TimeOutOffset_43
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _16 = *IPduFlagBytePtr_42;
  _17 = (unsigned int) _16;
  _18 = _17 & 2;
  if (_18 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _19 = *IPduFlagBytePtr_42;
  _20 = _19 >> 2;
  restart_49 = _20 & 1;
  # DEBUG restart => restart_49
  # DEBUG BEGIN_STMT
  _21 = *IPduFlagBytePtr_42;
  _22 = _21 & 251;
  *IPduFlagBytePtr_42 = _22;
  # DEBUG BEGIN_STMT
  Com_EB_RxDMQueue (IPduPtr_39(D), TimeOutOffset_43);
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _23 = *IPduFlagBytePtr_42;
  _24 = (unsigned int) _23;
  _25 = _24 & 16;
  if (_25 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _26 = *IPduFlagBytePtr_42;
  _27 = _26 >> 2;
  restart_45 = _27 & 1;
  # DEBUG restart => restart_45
  # DEBUG BEGIN_STMT
  _28 = *IPduFlagBytePtr_42;
  _29 = _28 & 251;
  *IPduFlagBytePtr_42 = _29;
  # DEBUG BEGIN_STMT
  _30 = *IPduFlagBytePtr_42;
  _31 = _30 | 2;
  *IPduFlagBytePtr_42 = _31;
  # DEBUG BEGIN_STMT
  Com_EB_RxDMQueue (IPduPtr_39(D), TimeOutOffset_43);

  <bb 7> :
  # restart_32 = PHI <restart_49(4), restart_36(5), restart_45(6)>
  # DEBUG restart => restart_32
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 8> :
  # restart_33 = PHI <restart_36(2), restart_32(7)>
  # DEBUG restart => restart_33
  # DEBUG BEGIN_STMT
  _53 = restart_33;
  return _53;

}


Com_EB_HandlePduGroupTx (const uint8 * ipduGroupVector, boolean Initialize)
{
  boolean activate;
  uint16 iPduGroupVectorByte;
  boolean toBeActivated;
  const ComIPduGroupMaskType * const MaskPtr;
  const struct ComTxIPduType * const IPduPtr;
  ComIPduRefType IPduId;
  const ComIPduRefType txPduCount;
  const struct Com_ConfigType * Com_gConfigPtr.417_1;
  const struct Com_ConfigType * Com_gConfigPtr.418_2;
  const struct Com_ConfigType * Com_gConfigPtr.419_3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  short unsigned int _8;
  const struct Com_ConfigType * Com_gConfigPtr.420_9;
  const struct Com_ConfigType * Com_gConfigPtr.421_10;
  long unsigned int _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  sizetype _15;
  const struct Com_ConfigType * Com_gConfigPtr.422_16;
  sizetype _17;
  const ComIPduGroupMaskType * _18;
  unsigned char _19;
  sizetype _20;
  const uint8 * _21;
  unsigned char _22;
  unsigned char _23;
  short unsigned int iPduGroupVectorByte.425_24;
  short unsigned int IPduId.426_25;
  boolean iftmp.423_29;
  boolean iftmp.424_30;
  boolean iftmp.423_41;
  boolean iftmp.423_42;
  boolean iftmp.424_44;
  boolean iftmp.424_45;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.417_1 = Com_gConfigPtr;
  txPduCount_34 = Com_gConfigPtr.417_1->ComTxIPduArraySize;
  # DEBUG txPduCount => txPduCount_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IPduId_35 = 0;
  # DEBUG IPduId => IPduId_35
  goto <bb 15>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.418_2 = Com_gConfigPtr;
  Com_gConfigPtr.419_3 = Com_gConfigPtr;
  _4 = Com_gConfigPtr.419_3->ComTxIPduRef;
  _5 = (unsigned int) IPduId_26;
  _6 = _5 * 64;
  _7 = _4 + _6;
  IPduPtr_36 = Com_gConfigPtr.418_2 + _7;
  # DEBUG IPduPtr => IPduPtr_36
  # DEBUG BEGIN_STMT
  _8 = IPduPtr_36->ComIPduGroupMaskRef;
  if (_8 != 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.420_9 = Com_gConfigPtr;
  Com_gConfigPtr.421_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.421_10->ComIPduGroupMaskRef;
  _12 = IPduPtr_36->ComIPduGroupMaskRef;
  _13 = (unsigned int) _12;
  _14 = _13 * 4;
  _15 = _11 + _14;
  MaskPtr_37 = Com_gConfigPtr.420_9 + _15;
  # DEBUG MaskPtr => MaskPtr_37
  # DEBUG BEGIN_STMT
  toBeActivated_38 = 0;
  # DEBUG toBeActivated => toBeActivated_38
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.422_16 = Com_gConfigPtr;
  iPduGroupVectorByte_39 = Com_gConfigPtr.422_16->ComTxIpduGroupVectorByteStart;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_39

  <bb 5> :
  # toBeActivated_27 = PHI <toBeActivated_38(4), toBeActivated_46(12)>
  # iPduGroupVectorByte_28 = PHI <iPduGroupVectorByte_39(4), iPduGroupVectorByte_47(12)>
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_28
  # DEBUG toBeActivated => toBeActivated_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = (sizetype) iPduGroupVectorByte_28;
  _18 = MaskPtr_37 + _17;
  _19 = *_18;
  _20 = (sizetype) iPduGroupVectorByte_28;
  _21 = ipduGroupVector_40(D) + _20;
  _22 = *_21;
  _23 = _19 & _22;
  if (_23 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.423_42 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.423_41 = 0;

  <bb 8> :
  # iftmp.423_29 = PHI <iftmp.423_42(6), iftmp.423_41(7)>
  activate_43 = iftmp.423_29;
  # DEBUG activate => activate_43
  # DEBUG BEGIN_STMT
  if (toBeActivated_27 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (activate_43 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.424_45 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.424_44 = 0;

  <bb 12> :
  # iftmp.424_30 = PHI <iftmp.424_45(10), iftmp.424_44(11)>
  toBeActivated_46 = iftmp.424_30;
  # DEBUG toBeActivated => toBeActivated_46
  # DEBUG BEGIN_STMT
  iPduGroupVectorByte.425_24 = iPduGroupVectorByte_28;
  iPduGroupVectorByte_47 = iPduGroupVectorByte.425_24 + 1;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_47
  # DEBUG BEGIN_STMT
  if (iPduGroupVectorByte_47 != 4)
    goto <bb 5>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Com_EB_HandleTxIPdu (toBeActivated_46, IPduPtr_36, Initialize_48(D), IPduId_26);

  <bb 14> :
  # DEBUG BEGIN_STMT
  IPduId.426_25 = IPduId_26;
  IPduId_50 = IPduId.426_25 + 1;
  # DEBUG IPduId => IPduId_50

  <bb 15> :
  # IPduId_26 = PHI <IPduId_35(2), IPduId_50(14)>
  # DEBUG IPduId => IPduId_26
  # DEBUG BEGIN_STMT
  if (IPduId_26 < txPduCount_34)
    goto <bb 3>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_HandlePduGroupRx (Com_IpduGroupModeType mode, const uint8 * ipduGroupVector, boolean Initialize)
{
  uint16 iPduGroupVectorByte;
  boolean activate;
  boolean toBeActivated;
  const ComIPduGroupMaskType * const MaskPtr;
  const struct ComRxIPduType * const IPduPtr;
  ComIPduRefType IPduId;
  const ComIPduRefType rxPduCount;
  const struct Com_ConfigType * Com_gConfigPtr.316_1;
  const struct Com_ConfigType * Com_gConfigPtr.317_2;
  const struct Com_ConfigType * Com_gConfigPtr.318_3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  sizetype _7;
  short unsigned int _8;
  const struct Com_ConfigType * Com_gConfigPtr.319_9;
  const struct Com_ConfigType * Com_gConfigPtr.320_10;
  long unsigned int _11;
  short unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  sizetype _15;
  const struct Com_ConfigType * Com_gConfigPtr.321_16;
  short unsigned int iPduGroupVectorByte.322_17;
  sizetype _18;
  const ComIPduGroupMaskType * _19;
  unsigned char _20;
  sizetype _21;
  const uint8 * _22;
  unsigned char _23;
  unsigned char _24;
  short unsigned int IPduId.325_25;
  boolean iftmp.323_29;
  boolean iftmp.324_30;
  boolean iftmp.323_43;
  boolean iftmp.323_44;
  boolean iftmp.324_46;
  boolean iftmp.324_47;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.316_1 = Com_gConfigPtr;
  rxPduCount_34 = Com_gConfigPtr.316_1->ComRxIPduArraySize;
  # DEBUG rxPduCount => rxPduCount_34
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  IPduId_35 = 0;
  # DEBUG IPduId => IPduId_35
  goto <bb 15>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.317_2 = Com_gConfigPtr;
  Com_gConfigPtr.318_3 = Com_gConfigPtr;
  _4 = Com_gConfigPtr.318_3->ComRxIPduRef;
  _5 = (unsigned int) IPduId_26;
  _6 = _5 * 48;
  _7 = _4 + _6;
  IPduPtr_36 = Com_gConfigPtr.317_2 + _7;
  # DEBUG IPduPtr => IPduPtr_36
  # DEBUG BEGIN_STMT
  _8 = IPduPtr_36->ComIPduGroupMaskRef;
  if (_8 != 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.319_9 = Com_gConfigPtr;
  Com_gConfigPtr.320_10 = Com_gConfigPtr;
  _11 = Com_gConfigPtr.320_10->ComIPduGroupMaskRef;
  _12 = IPduPtr_36->ComIPduGroupMaskRef;
  _13 = (unsigned int) _12;
  _14 = _13 * 4;
  _15 = _11 + _14;
  MaskPtr_37 = Com_gConfigPtr.319_9 + _15;
  # DEBUG MaskPtr => MaskPtr_37
  # DEBUG BEGIN_STMT
  toBeActivated_38 = 0;
  # DEBUG toBeActivated => toBeActivated_38
  # DEBUG BEGIN_STMT
  activate_39 = 0;
  # DEBUG activate => activate_39
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.321_16 = Com_gConfigPtr;
  iPduGroupVectorByte_40 = Com_gConfigPtr.321_16->ComRxIpduGroupVectorByteEnd;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_40

  <bb 5> :
  # toBeActivated_27 = PHI <toBeActivated_38(4), toBeActivated_48(12)>
  # iPduGroupVectorByte_28 = PHI <iPduGroupVectorByte_40(4), iPduGroupVectorByte_41(12)>
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_28
  # DEBUG toBeActivated => toBeActivated_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  iPduGroupVectorByte.322_17 = iPduGroupVectorByte_28;
  iPduGroupVectorByte_41 = iPduGroupVectorByte.322_17 + 65535;
  # DEBUG iPduGroupVectorByte => iPduGroupVectorByte_41
  # DEBUG BEGIN_STMT
  _18 = (sizetype) iPduGroupVectorByte_41;
  _19 = MaskPtr_37 + _18;
  _20 = *_19;
  _21 = (sizetype) iPduGroupVectorByte_41;
  _22 = ipduGroupVector_42(D) + _21;
  _23 = *_22;
  _24 = _20 & _23;
  if (_24 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.323_44 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.323_43 = 0;

  <bb 8> :
  # iftmp.323_29 = PHI <iftmp.323_44(6), iftmp.323_43(7)>
  activate_45 = iftmp.323_29;
  # DEBUG activate => activate_45
  # DEBUG BEGIN_STMT
  if (toBeActivated_27 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (activate_45 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.324_47 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.324_46 = 0;

  <bb 12> :
  # iftmp.324_30 = PHI <iftmp.324_47(10), iftmp.324_46(11)>
  toBeActivated_48 = iftmp.324_30;
  # DEBUG toBeActivated => toBeActivated_48
  # DEBUG BEGIN_STMT
  if (iPduGroupVectorByte_41 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Com_EB_HandleRxIPdu (mode_49(D), toBeActivated_48, IPduPtr_36, Initialize_50(D), IPduId_26);

  <bb 14> :
  # DEBUG BEGIN_STMT
  IPduId.325_25 = IPduId_26;
  IPduId_52 = IPduId.325_25 + 1;
  # DEBUG IPduId => IPduId_52

  <bb 15> :
  # IPduId_26 = PHI <IPduId_35(2), IPduId_52(14)>
  # DEBUG IPduId => IPduId_26
  # DEBUG BEGIN_STMT
  if (IPduId_26 < rxPduCount_34)
    goto <bb 3>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_DET (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 255, 3);
  # DEBUG BEGIN_STMT
  IntDataPtr_3(D)->SendSigRetval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_A1_EL_DUB_DOC (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 pos;
  const uint8 Val;
  sizetype _1;
  uint8 * _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_5 = MEM[(const uint8 *)SignalDataPtr_4(D)];
  # DEBUG Val => Val_5
  # DEBUG BEGIN_STMT
  pos_7 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  # DEBUG pos => pos_7
  # DEBUG BEGIN_STMT
  _1 = (sizetype) pos_7;
  _2 = dataPtr_8(D) + _1;
  *_2 = Val_5;
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_BO_EL_DUB_DOC (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 bit;
  const uint16 pos;
  const uint8 Val;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  long unsigned int _5;
  sizetype _6;
  uint8 * _7;
  long unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_12 = MEM[(const uint8 *)SignalDataPtr_11(D)];
  # DEBUG Val => Val_12
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  pos_14 = _1 / 8;
  # DEBUG pos => pos_14
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  bit_15 = _2 & 7;
  # DEBUG bit => bit_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Val_12 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (sizetype) pos_14;
  _4 = dataPtr_16(D) + _3;
  _5 = (long unsigned int) bit_15;
  TS_AtomicClearBit_8 (_4, _5);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _6 = (sizetype) pos_14;
  _7 = dataPtr_16(D) + _6;
  _8 = (long unsigned int) bit_15;
  TS_AtomicSetBit_8 (_7, _8);

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_A1_DL_DUB_DOC (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 pos;
  const uint8 Val;
  sizetype _1;
  uint8 * _2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_5 = MEM[(const uint8 *)SignalDataPtr_4(D)];
  # DEBUG Val => Val_5
  # DEBUG BEGIN_STMT
  pos_7 = Com_EB_WritePropPtr_6(D)->ComSignalPositionInBit;
  # DEBUG pos => pos_7
  # DEBUG BEGIN_STMT
  _1 = (sizetype) pos_7;
  _2 = dataPtr_8(D) + _1;
  *_2 = Val_5;
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_BO_DL_DUB_DOC (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  const uint16 bit;
  const uint16 pos;
  const uint8 Val;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  int _6;
  int _7;
  unsigned char _8;
  unsigned char _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  int _16;
  int _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_25 = MEM[(const uint8 *)SignalDataPtr_24(D)];
  # DEBUG Val => Val_25
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_26(D)->ComSignalPositionInBit;
  pos_27 = _1 / 8;
  # DEBUG pos => pos_27
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_26(D)->ComSignalPositionInBit;
  bit_28 = _2 & 7;
  # DEBUG bit => bit_28
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Val_25 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (sizetype) pos_27;
  _4 = dataPtr_29(D) + _3;
  _5 = *_4;
  _6 = (int) bit_28;
  _7 = 1 << _6;
  _8 = (unsigned char) _7;
  _9 = ~_8;
  _10 = (sizetype) pos_27;
  _11 = dataPtr_29(D) + _10;
  _12 = _5 & _9;
  *_11 = _12;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _13 = (sizetype) pos_27;
  _14 = dataPtr_29(D) + _13;
  _15 = *_14;
  _16 = (int) bit_28;
  _17 = 1 << _16;
  _18 = (unsigned char) _17;
  _19 = (sizetype) pos_27;
  _20 = dataPtr_29(D) + _19;
  _21 = _15 | _18;
  *_20 = _21;

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S0_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  sizetype _20;
  uint8 * _21;
  unsigned char _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  sizetype _26;
  const uint8 * _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  short unsigned int ii.41_31;
  short unsigned int _32;
  unsigned char _33;
  unsigned char _34;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_39 = 0;
  # DEBUG valueChanged => valueChanged_39
  # DEBUG BEGIN_STMT
  ii_40 = 0;
  # DEBUG ii => ii_40
  # DEBUG BEGIN_STMT
  U8Ptr_42 = SignalDataPtr_41(D);
  # DEBUG U8Ptr => U8Ptr_42
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_45(D)->ComUpdateBitPositionInBit;
  _2 = _1 / 8;
  _3 = (sizetype) _2;
  _4 = dataPtr_46(D) + _3;
  _5 = *_4;
  _6 = Com_EB_WritePropPtr_45(D)->ComUpdateBitPositionInBit;
  _7 = (unsigned int) _6;
  _8 = _7 & 7;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = Com_EB_WritePropPtr_45(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_46(D) + _13;
  _15 = _5 | _10;
  *_14 = _15;

  <bb 3> :
  # valueChanged_35 = PHI <valueChanged_39(2), valueChanged_36(5)>
  # ii_37 = PHI <ii_40(2), ii_51(5)>
  # DEBUG ii => ii_37
  # DEBUG valueChanged => valueChanged_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_45(D)->ComSignalPositionInBit;
  _17 = Com_EB_WritePropPtr_45(D)->ComSignalBase.ComBitSize;
  _18 = _16 + _17;
  _19 = _18 - ii_37;
  pos_48 = _19 + 65535;
  # DEBUG pos => pos_48
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = (sizetype) pos_48;
  _21 = dataPtr_46(D) + _20;
  _22 = *_21;
  _23 = (sizetype) ii_37;
  _24 = U8Ptr_42 + _23;
  _25 = *_24;
  if (_22 != _25)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_49 = 1;
  # DEBUG valueChanged => valueChanged_49

  <bb 5> :
  # valueChanged_36 = PHI <valueChanged_35(3), valueChanged_49(4)>
  # DEBUG valueChanged => valueChanged_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = (sizetype) ii_37;
  _27 = U8Ptr_42 + _26;
  _28 = (sizetype) pos_48;
  _29 = dataPtr_46(D) + _28;
  _30 = *_27;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii.41_31 = ii_37;
  ii_51 = ii.41_31 + 1;
  # DEBUG ii => ii_51
  # DEBUG BEGIN_STMT
  _32 = Com_EB_WritePropPtr_45(D)->ComSignalBase.ComBitSize;
  if (ii_51 < _32)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _33 = IntDataPtr_53(D)->trigger;
  _34 = valueChanged_36 | _33;
  IntDataPtr_53(D)->trigger = _34;
  return;

}


Com_EB_Write_64_SX_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_EL_EUB_EOC_E2 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned char _20;
  short unsigned int _21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;
  short unsigned int _49;
  unsigned char _50;
  unsigned short pos.42_51;
  unsigned short _52;
  int _53;
  sizetype _54;
  uint8 * _55;
  unsigned char _56;
  unsigned char _57;
  sizetype _58;
  uint8 * _59;
  unsigned char _60;
  unsigned char ssize.43_61;
  unsigned char _62;
  unsigned short pos.44_63;
  unsigned short _64;
  unsigned char _65;
  int _66;
  unsigned int _67;
  sizetype _68;
  uint8 * _69;
  unsigned char _70;
  sizetype _71;
  uint8 * _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  unsigned char _80;
  sizetype _81;
  uint8 * _82;
  unsigned char _83;
  unsigned char _84;
  unsigned char _85;
  unsigned char _86;
  unsigned char _87;
  unsigned char _88;
  unsigned char _89;
  sizetype _90;
  uint8 * _91;
  unsigned char _92;
  unsigned char _93;
  unsigned char _94;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_105 = 0;
  # DEBUG valueChanged => valueChanged_105
  # DEBUG BEGIN_STMT
  Val_108 = MEM[(const uint32 *)SignalDataPtr_107(D)];
  # DEBUG Val => Val_108
  # DEBUG BEGIN_STMT
  putvalue_109 = (uint8) Val_108;
  # DEBUG putvalue => putvalue_109
  # DEBUG BEGIN_STMT
  mask_110 = 4294967295;
  # DEBUG mask => mask_110
  # DEBUG BEGIN_STMT
  space_111 = 8;
  # DEBUG space => space_111
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_112(D)->ComSignalPositionInBit;
  row_113 = _1 / 8;
  # DEBUG row => row_113
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_112(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_114 = _3 & 7;
  # DEBUG col => col_114
  # DEBUG BEGIN_STMT
  pos_115 = (sint16) row_113;
  # DEBUG pos => pos_115
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_116 = space_111 - col_114;
  # DEBUG space => space_116
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_112(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_117 = mask_110 >> _6;
  # DEBUG mask => mask_117
  # DEBUG BEGIN_STMT
  _7 = (int) col_114;
  mask_118 = mask_117 << _7;
  # DEBUG mask => mask_118
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_109;
  _9 = (int) col_114;
  _10 = _8 << _9;
  putvalue_119 = (uint8) _10;
  # DEBUG putvalue => putvalue_119
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_121(D) + _13;
  _15 = *_14;
  _16 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _17 = (unsigned int) _16;
  _18 = _17 & 7;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _22 = _21 / 8;
  _23 = (sizetype) _22;
  _24 = dataPtr_121(D) + _23;
  _25 = _15 | _20;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = (sizetype) pos_115;
  _27 = dataPtr_121(D) + _26;
  _28 = *_27;
  _29 = (sizetype) pos_115;
  _30 = dataPtr_121(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_118;
  _33 = ~_32;
  _34 = _31 & _33;
  _35 = (unsigned char) mask_118;
  _36 = putvalue_119 & _35;
  _37 = _34 | _36;
  if (_28 != _37)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_123 = 1;
  # DEBUG valueChanged => valueChanged_123

  <bb 4> :
  # valueChanged_95 = PHI <valueChanged_105(2), valueChanged_123(3)>
  # DEBUG valueChanged => valueChanged_95
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = (sizetype) pos_115;
  _39 = dataPtr_121(D) + _38;
  _40 = *_39;
  _41 = (unsigned char) mask_118;
  _42 = ~_41;
  _43 = _40 & _42;
  _44 = (unsigned char) mask_118;
  _45 = putvalue_119 & _44;
  _46 = (sizetype) pos_115;
  _47 = dataPtr_121(D) + _46;
  _48 = _43 | _45;
  *_47 = _48;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _49 = Com_EB_WritePropPtr_112(D)->ComSignalBase.ComBitSize;
  _50 = (unsigned char) _49;
  tmp_val_125 = _50 - space_116;
  # DEBUG tmp_val => tmp_val_125
  # DEBUG BEGIN_STMT
  ssize_126 = (sint8) tmp_val_125;
  # DEBUG ssize => ssize_126
  # DEBUG BEGIN_STMT
  pos.42_51 = (unsigned short) pos_115;
  _52 = pos.42_51 + 65535;
  pos_127 = (sint16) _52;
  # DEBUG pos => pos_127
  # DEBUG BEGIN_STMT
  _53 = (int) space_116;
  Val_128 = Val_108 >> _53;
  # DEBUG Val => Val_128
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _54 = (sizetype) pos_102;
  _55 = dataPtr_121(D) + _54;
  _56 = *_55;
  _57 = (unsigned char) Val_100;
  if (_56 != _57)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_137 = 1;
  # DEBUG valueChanged => valueChanged_137

  <bb 7> :
  # valueChanged_96 = PHI <valueChanged_97(5), valueChanged_137(6)>
  # DEBUG valueChanged => valueChanged_96
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = (sizetype) pos_102;
  _59 = dataPtr_121(D) + _58;
  _60 = (unsigned char) Val_100;
  *_59 = _60;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_139 = Val_100 >> 8;
  # DEBUG Val => Val_139
  # DEBUG BEGIN_STMT
  ssize.43_61 = (unsigned char) ssize_101;
  _62 = ssize.43_61 + 248;
  ssize_140 = (sint8) _62;
  # DEBUG ssize => ssize_140
  # DEBUG BEGIN_STMT
  pos.44_63 = (unsigned short) pos_102;
  _64 = pos.44_63 + 65535;
  pos_141 = (sint16) _64;
  # DEBUG pos => pos_141

  <bb 8> :
  # valueChanged_97 = PHI <valueChanged_95(4), valueChanged_96(7)>
  # Val_100 = PHI <Val_128(4), Val_139(7)>
  # ssize_101 = PHI <ssize_126(4), ssize_140(7)>
  # pos_102 = PHI <pos_127(4), pos_141(7)>
  # DEBUG pos => pos_102
  # DEBUG ssize => ssize_101
  # DEBUG Val => Val_100
  # DEBUG valueChanged => valueChanged_97
  # DEBUG BEGIN_STMT
  if (ssize_101 > 7)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (ssize_101 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ssize_hlp_129 = (uint8) ssize_101;
  # DEBUG ssize_hlp => ssize_hlp_129
  # DEBUG BEGIN_STMT
  _65 = 8 - ssize_hlp_129;
  _66 = (int) _65;
  _67 = 255 >> _66;
  mask_u8_130 = (uint8) _67;
  # DEBUG mask_u8 => mask_u8_130
  # DEBUG BEGIN_STMT
  mask_131 = (uint32) mask_u8_130;
  # DEBUG mask => mask_131
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _68 = (sizetype) pos_102;
  _69 = dataPtr_121(D) + _68;
  _70 = *_69;
  _71 = (sizetype) pos_102;
  _72 = dataPtr_121(D) + _71;
  _73 = *_72;
  _74 = (unsigned char) mask_131;
  _75 = ~_74;
  _76 = _73 & _75;
  _77 = (unsigned char) Val_100;
  _78 = (unsigned char) mask_131;
  _79 = _77 & _78;
  _80 = _76 | _79;
  if (_70 != _80)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  valueChanged_132 = 1;
  # DEBUG valueChanged => valueChanged_132

  <bb 12> :
  # valueChanged_98 = PHI <valueChanged_97(10), valueChanged_132(11)>
  # DEBUG valueChanged => valueChanged_98
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _81 = (sizetype) pos_102;
  _82 = dataPtr_121(D) + _81;
  _83 = *_82;
  _84 = (unsigned char) mask_131;
  _85 = ~_84;
  _86 = _83 & _85;
  _87 = (unsigned char) Val_100;
  _88 = (unsigned char) mask_131;
  _89 = _87 & _88;
  _90 = (sizetype) pos_102;
  _91 = dataPtr_121(D) + _90;
  _92 = _86 | _89;
  *_91 = _92;

  <bb 13> :
  # valueChanged_99 = PHI <valueChanged_97(9), valueChanged_98(12)>
  # DEBUG valueChanged => valueChanged_99
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _93 = IntDataPtr_135(D)->trigger;
  _94 = valueChanged_99 | _93;
  IntDataPtr_135(D)->trigger = _94;
  return;

}


Com_EB_Write_16_SX_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  sizetype _47;
  uint8 * _48;
  unsigned char _49;
  unsigned short pos.45_50;
  unsigned short _51;
  sizetype _52;
  uint8 * _53;
  unsigned char _54;
  sizetype _55;
  uint8 * _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  sizetype _65;
  uint8 * _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  sizetype _74;
  uint8 * _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_86 = 0;
  # DEBUG valueChanged => valueChanged_86
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_88(D)];
  Val_89 = (uint32) _1;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  mask_90 = 65535;
  # DEBUG mask => mask_90
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_91(D)->ComSignalPositionInBit;
  row_92 = _2 / 8;
  # DEBUG row => row_92
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_91(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_93 = _4 & 7;
  # DEBUG col => col_93
  # DEBUG BEGIN_STMT
  pos_94 = (sint16) row_92;
  # DEBUG pos => pos_94
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_91(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_95 = mask_90 >> _7;
  # DEBUG mask => mask_95
  # DEBUG BEGIN_STMT
  _8 = (int) col_93;
  mask_96 = mask_95 << _8;
  # DEBUG mask => mask_96
  # DEBUG BEGIN_STMT
  _9 = (int) col_93;
  Val_97 = Val_89 << _9;
  # DEBUG Val => Val_97
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _11 = _10 / 8;
  _12 = (sizetype) _11;
  _13 = dataPtr_99(D) + _12;
  _14 = *_13;
  _15 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _16 = (unsigned int) _15;
  _17 = _16 & 7;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _20 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _21 = _20 / 8;
  _22 = (sizetype) _21;
  _23 = dataPtr_99(D) + _22;
  _24 = _14 | _19;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_94;
  _26 = dataPtr_99(D) + _25;
  _27 = *_26;
  _28 = (sizetype) pos_94;
  _29 = dataPtr_99(D) + _28;
  _30 = *_29;
  _31 = (unsigned char) mask_96;
  _32 = ~_31;
  _33 = _30 & _32;
  _34 = (unsigned char) Val_97;
  _35 = (unsigned char) mask_96;
  _36 = _34 & _35;
  _37 = _33 | _36;
  if (_27 != _37)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_101 = 1;
  # DEBUG valueChanged => valueChanged_101

  <bb 4> :
  # valueChanged_79 = PHI <valueChanged_86(2), valueChanged_101(3)>
  # DEBUG valueChanged => valueChanged_79
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = (sizetype) pos_94;
  _39 = dataPtr_99(D) + _38;
  _40 = *_39;
  _41 = (unsigned char) mask_96;
  _42 = ~_41;
  _43 = _40 & _42;
  _44 = (unsigned char) Val_97;
  _45 = (unsigned char) mask_96;
  _46 = _44 & _45;
  _47 = (sizetype) pos_94;
  _48 = dataPtr_99(D) + _47;
  _49 = _43 | _46;
  *_48 = _49;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_106 = Val_82 >> 8;
  # DEBUG Val => Val_106
  # DEBUG BEGIN_STMT
  mask_107 = mask_83 >> 8;
  # DEBUG mask => mask_107
  # DEBUG BEGIN_STMT
  pos.45_50 = (unsigned short) pos_84;
  _51 = pos.45_50 + 65535;
  pos_108 = (sint16) _51;
  # DEBUG pos => pos_108
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _52 = (sizetype) pos_108;
  _53 = dataPtr_99(D) + _52;
  _54 = *_53;
  _55 = (sizetype) pos_108;
  _56 = dataPtr_99(D) + _55;
  _57 = *_56;
  _58 = (unsigned char) mask_107;
  _59 = ~_58;
  _60 = _57 & _59;
  _61 = (unsigned char) Val_106;
  _62 = (unsigned char) mask_107;
  _63 = _61 & _62;
  _64 = _60 | _63;
  if (_54 != _64)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_109 = 1;
  # DEBUG valueChanged => valueChanged_109

  <bb 7> :
  # valueChanged_80 = PHI <valueChanged_81(5), valueChanged_109(6)>
  # DEBUG valueChanged => valueChanged_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _65 = (sizetype) pos_108;
  _66 = dataPtr_99(D) + _65;
  _67 = *_66;
  _68 = (unsigned char) mask_107;
  _69 = ~_68;
  _70 = _67 & _69;
  _71 = (unsigned char) Val_106;
  _72 = (unsigned char) mask_107;
  _73 = _71 & _72;
  _74 = (sizetype) pos_108;
  _75 = dataPtr_99(D) + _74;
  _76 = _70 | _73;
  *_75 = _76;

  <bb 8> :
  # valueChanged_81 = PHI <valueChanged_79(4), valueChanged_80(7)>
  # Val_82 = PHI <Val_97(4), Val_106(7)>
  # mask_83 = PHI <mask_96(4), mask_107(7)>
  # pos_84 = PHI <pos_94(4), pos_108(7)>
  # DEBUG pos => pos_84
  # DEBUG mask => mask_83
  # DEBUG Val => Val_82
  # DEBUG valueChanged => valueChanged_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_83 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _77 = IntDataPtr_104(D)->trigger;
  _78 = valueChanged_81 | _77;
  IntDataPtr_104(D)->trigger = _78;
  return;

}


Com_EB_Write_08_SX_EL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  short unsigned int _26;
  short unsigned int _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  sizetype _44;
  uint8 * _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  sizetype _53;
  uint8 * _54;
  unsigned char _55;
  unsigned short pos.46_56;
  unsigned short _57;
  sizetype _58;
  uint8 * _59;
  unsigned char _60;
  sizetype _61;
  uint8 * _62;
  unsigned char _63;
  unsigned char _64;
  unsigned char _65;
  unsigned char _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  sizetype _71;
  uint8 * _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  sizetype _80;
  uint8 * _81;
  unsigned char _82;
  unsigned char _83;
  unsigned char _84;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_89 = 0;
  # DEBUG valueChanged => valueChanged_89
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_91(D)];
  Val_92 = (uint16) _1;
  # DEBUG Val => Val_92
  # DEBUG BEGIN_STMT
  mask_93 = 255;
  # DEBUG mask => mask_93
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_94(D)->ComSignalPositionInBit;
  row_95 = _2 / 8;
  # DEBUG row => row_95
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_94(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_96 = _4 & 7;
  # DEBUG col => col_96
  # DEBUG BEGIN_STMT
  pos_97 = (sint16) row_95;
  # DEBUG pos => pos_97
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_93;
  _6 = Com_EB_WritePropPtr_94(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_98 = (uint16) _9;
  # DEBUG mask => mask_98
  # DEBUG BEGIN_STMT
  _10 = (int) mask_98;
  _11 = (int) col_96;
  _12 = _10 << _11;
  mask_99 = (uint16) _12;
  # DEBUG mask => mask_99
  # DEBUG BEGIN_STMT
  _13 = (int) Val_92;
  _14 = (int) col_96;
  _15 = _13 << _14;
  Val_100 = (uint16) _15;
  # DEBUG Val => Val_100
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _17 = _16 / 8;
  _18 = (sizetype) _17;
  _19 = dataPtr_102(D) + _18;
  _20 = *_19;
  _21 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = 1 << _23;
  _25 = (unsigned char) _24;
  _26 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _27 = _26 / 8;
  _28 = (sizetype) _27;
  _29 = dataPtr_102(D) + _28;
  _30 = _20 | _25;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = (sizetype) pos_97;
  _32 = dataPtr_102(D) + _31;
  _33 = *_32;
  _34 = (sizetype) pos_97;
  _35 = dataPtr_102(D) + _34;
  _36 = *_35;
  _37 = (unsigned char) mask_99;
  _38 = ~_37;
  _39 = _36 & _38;
  _40 = (unsigned char) Val_100;
  _41 = (unsigned char) mask_99;
  _42 = _40 & _41;
  _43 = _39 | _42;
  if (_33 != _43)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_104 = 1;
  # DEBUG valueChanged => valueChanged_104

  <bb 4> :
  # valueChanged_85 = PHI <valueChanged_89(2), valueChanged_104(3)>
  # DEBUG valueChanged => valueChanged_85
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _44 = (sizetype) pos_97;
  _45 = dataPtr_102(D) + _44;
  _46 = *_45;
  _47 = (unsigned char) mask_99;
  _48 = ~_47;
  _49 = _46 & _48;
  _50 = (unsigned char) Val_100;
  _51 = (unsigned char) mask_99;
  _52 = _50 & _51;
  _53 = (sizetype) pos_97;
  _54 = dataPtr_102(D) + _53;
  _55 = _49 | _52;
  *_54 = _55;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_99 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_106 = Val_100 >> 8;
  # DEBUG Val => Val_106
  # DEBUG BEGIN_STMT
  mask_107 = mask_99 >> 8;
  # DEBUG mask => mask_107
  # DEBUG BEGIN_STMT
  pos.46_56 = (unsigned short) pos_97;
  _57 = pos.46_56 + 65535;
  pos_108 = (sint16) _57;
  # DEBUG pos => pos_108
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = (sizetype) pos_108;
  _59 = dataPtr_102(D) + _58;
  _60 = *_59;
  _61 = (sizetype) pos_108;
  _62 = dataPtr_102(D) + _61;
  _63 = *_62;
  _64 = (unsigned char) mask_107;
  _65 = ~_64;
  _66 = _63 & _65;
  _67 = (unsigned char) Val_106;
  _68 = (unsigned char) mask_107;
  _69 = _67 & _68;
  _70 = _66 | _69;
  if (_60 != _70)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_109 = 1;
  # DEBUG valueChanged => valueChanged_109

  <bb 7> :
  # valueChanged_86 = PHI <valueChanged_85(5), valueChanged_109(6)>
  # DEBUG valueChanged => valueChanged_86
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _71 = (sizetype) pos_108;
  _72 = dataPtr_102(D) + _71;
  _73 = *_72;
  _74 = (unsigned char) mask_107;
  _75 = ~_74;
  _76 = _73 & _75;
  _77 = (unsigned char) Val_106;
  _78 = (unsigned char) mask_107;
  _79 = _77 & _78;
  _80 = (sizetype) pos_108;
  _81 = dataPtr_102(D) + _80;
  _82 = _76 | _79;
  *_81 = _82;

  <bb 8> :
  # valueChanged_87 = PHI <valueChanged_85(4), valueChanged_86(7)>
  # DEBUG valueChanged => valueChanged_87
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _83 = IntDataPtr_112(D)->trigger;
  _84 = valueChanged_87 | _83;
  IntDataPtr_112(D)->trigger = _84;
  return;

}


Com_EB_Write_AY_S1_EL_EUB_EOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * DataPtr_Start;
  const uint8 * U8Ptr;
  uint32 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned char _12;
  short unsigned int _13;
  short unsigned int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  uint8 * _18;
  unsigned char _19;
  const uint8 * _20;
  unsigned char _21;
  const uint8 * _22;
  uint8 * _23;
  unsigned char _24;
  short unsigned int _25;
  long unsigned int _26;
  unsigned char _27;
  unsigned char _28;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_33 = 0;
  # DEBUG valueChanged => valueChanged_33
  # DEBUG BEGIN_STMT
  ii_34 = 0;
  # DEBUG ii => ii_34
  # DEBUG BEGIN_STMT
  U8Ptr_36 = SignalDataPtr_35(D);
  # DEBUG U8Ptr => U8Ptr_36
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_38(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  DataPtr_Start_40 = dataPtr_39(D) + _2;
  # DEBUG DataPtr_Start => DataPtr_Start_40
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_38(D)->ComUpdateBitPositionInBit;
  _4 = _3 / 8;
  _5 = (sizetype) _4;
  _6 = dataPtr_39(D) + _5;
  _7 = *_6;
  _8 = Com_EB_WritePropPtr_38(D)->ComUpdateBitPositionInBit;
  _9 = (unsigned int) _8;
  _10 = _9 & 7;
  _11 = 1 << _10;
  _12 = (unsigned char) _11;
  _13 = Com_EB_WritePropPtr_38(D)->ComUpdateBitPositionInBit;
  _14 = _13 / 8;
  _15 = (sizetype) _14;
  _16 = dataPtr_39(D) + _15;
  _17 = _7 | _12;
  *_16 = _17;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _18 = DataPtr_Start_40 + ii_31;
  _19 = *_18;
  _20 = U8Ptr_36 + ii_31;
  _21 = *_20;
  if (_19 != _21)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_46 = 1;
  # DEBUG valueChanged => valueChanged_46

  <bb 5> :
  # valueChanged_29 = PHI <valueChanged_30(3), valueChanged_46(4)>
  # DEBUG valueChanged => valueChanged_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = U8Ptr_36 + ii_31;
  _23 = DataPtr_Start_40 + ii_31;
  _24 = *_22;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_48 = ii_31 + 1;
  # DEBUG ii => ii_48

  <bb 6> :
  # valueChanged_30 = PHI <valueChanged_33(2), valueChanged_29(5)>
  # ii_31 = PHI <ii_34(2), ii_48(5)>
  # DEBUG ii => ii_31
  # DEBUG valueChanged => valueChanged_30
  # DEBUG BEGIN_STMT
  _25 = IntDataPtr_43(D)->arraySize;
  _26 = (long unsigned int) _25;
  if (ii_31 < _26)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _27 = IntDataPtr_43(D)->trigger;
  _28 = valueChanged_30 | _27;
  IntDataPtr_43(D)->trigger = _28;
  return;

}


Com_EB_Write_AY_S0_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  sizetype _17;
  uint8 * _18;
  unsigned char _19;
  sizetype _20;
  const uint8 * _21;
  unsigned char _22;
  sizetype _23;
  const uint8 * _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  short unsigned int ii.47_28;
  short unsigned int _29;
  unsigned char _30;
  unsigned char _31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_36 = 0;
  # DEBUG valueChanged => valueChanged_36
  # DEBUG BEGIN_STMT
  ii_37 = 0;
  # DEBUG ii => ii_37
  # DEBUG BEGIN_STMT
  U8Ptr_39 = SignalDataPtr_38(D);
  # DEBUG U8Ptr => U8Ptr_39
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_42(D)->ComUpdateBitPositionInBit;
  _2 = _1 / 8;
  _3 = (sizetype) _2;
  _4 = dataPtr_43(D) + _3;
  _5 = *_4;
  _6 = Com_EB_WritePropPtr_42(D)->ComUpdateBitPositionInBit;
  _7 = (unsigned int) _6;
  _8 = _7 & 7;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = Com_EB_WritePropPtr_42(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_43(D) + _13;
  _15 = _5 | _10;
  *_14 = _15;

  <bb 3> :
  # valueChanged_32 = PHI <valueChanged_36(2), valueChanged_33(5)>
  # ii_34 = PHI <ii_37(2), ii_48(5)>
  # DEBUG ii => ii_34
  # DEBUG valueChanged => valueChanged_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_42(D)->ComSignalPositionInBit;
  pos_45 = ii_34 + _16;
  # DEBUG pos => pos_45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = (sizetype) pos_45;
  _18 = dataPtr_43(D) + _17;
  _19 = *_18;
  _20 = (sizetype) ii_34;
  _21 = U8Ptr_39 + _20;
  _22 = *_21;
  if (_19 != _22)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_46 = 1;
  # DEBUG valueChanged => valueChanged_46

  <bb 5> :
  # valueChanged_33 = PHI <valueChanged_32(3), valueChanged_46(4)>
  # DEBUG valueChanged => valueChanged_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) ii_34;
  _24 = U8Ptr_39 + _23;
  _25 = (sizetype) pos_45;
  _26 = dataPtr_43(D) + _25;
  _27 = *_24;
  *_26 = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii.47_28 = ii_34;
  ii_48 = ii.47_28 + 1;
  # DEBUG ii => ii_48
  # DEBUG BEGIN_STMT
  _29 = Com_EB_WritePropPtr_42(D)->ComSignalBase.ComBitSize;
  if (ii_48 < _29)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _30 = IntDataPtr_50(D)->trigger;
  _31 = valueChanged_33 | _30;
  IntDataPtr_50(D)->trigger = _31;
  return;

}


Com_EB_Write_64_SX_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_EL_EUB_EOC_E1 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned char _20;
  short unsigned int _21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;
  short unsigned int _49;
  unsigned char _50;
  unsigned short pos.48_51;
  unsigned short _52;
  int _53;
  sizetype _54;
  uint8 * _55;
  unsigned char _56;
  unsigned char _57;
  sizetype _58;
  uint8 * _59;
  unsigned char _60;
  unsigned char ssize.49_61;
  unsigned char _62;
  unsigned short pos.50_63;
  unsigned short _64;
  unsigned char _65;
  int _66;
  unsigned int _67;
  sizetype _68;
  uint8 * _69;
  unsigned char _70;
  sizetype _71;
  uint8 * _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  unsigned char _80;
  sizetype _81;
  uint8 * _82;
  unsigned char _83;
  unsigned char _84;
  unsigned char _85;
  unsigned char _86;
  unsigned char _87;
  unsigned char _88;
  unsigned char _89;
  sizetype _90;
  uint8 * _91;
  unsigned char _92;
  unsigned char _93;
  unsigned char _94;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_105 = 0;
  # DEBUG valueChanged => valueChanged_105
  # DEBUG BEGIN_STMT
  Val_108 = MEM[(const uint32 *)SignalDataPtr_107(D)];
  # DEBUG Val => Val_108
  # DEBUG BEGIN_STMT
  putvalue_109 = (uint8) Val_108;
  # DEBUG putvalue => putvalue_109
  # DEBUG BEGIN_STMT
  mask_110 = 4294967295;
  # DEBUG mask => mask_110
  # DEBUG BEGIN_STMT
  space_111 = 8;
  # DEBUG space => space_111
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_112(D)->ComSignalPositionInBit;
  row_113 = _1 / 8;
  # DEBUG row => row_113
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_112(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_114 = _3 & 7;
  # DEBUG col => col_114
  # DEBUG BEGIN_STMT
  pos_115 = (sint16) row_113;
  # DEBUG pos => pos_115
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_116 = space_111 - col_114;
  # DEBUG space => space_116
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_112(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_117 = mask_110 >> _6;
  # DEBUG mask => mask_117
  # DEBUG BEGIN_STMT
  _7 = (int) col_114;
  mask_118 = mask_117 << _7;
  # DEBUG mask => mask_118
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_109;
  _9 = (int) col_114;
  _10 = _8 << _9;
  putvalue_119 = (uint8) _10;
  # DEBUG putvalue => putvalue_119
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_121(D) + _13;
  _15 = *_14;
  _16 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _17 = (unsigned int) _16;
  _18 = _17 & 7;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _22 = _21 / 8;
  _23 = (sizetype) _22;
  _24 = dataPtr_121(D) + _23;
  _25 = _15 | _20;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = (sizetype) pos_115;
  _27 = dataPtr_121(D) + _26;
  _28 = *_27;
  _29 = (sizetype) pos_115;
  _30 = dataPtr_121(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_118;
  _33 = ~_32;
  _34 = _31 & _33;
  _35 = (unsigned char) mask_118;
  _36 = putvalue_119 & _35;
  _37 = _34 | _36;
  if (_28 != _37)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_123 = 1;
  # DEBUG valueChanged => valueChanged_123

  <bb 4> :
  # valueChanged_95 = PHI <valueChanged_105(2), valueChanged_123(3)>
  # DEBUG valueChanged => valueChanged_95
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = (sizetype) pos_115;
  _39 = dataPtr_121(D) + _38;
  _40 = *_39;
  _41 = (unsigned char) mask_118;
  _42 = ~_41;
  _43 = _40 & _42;
  _44 = (unsigned char) mask_118;
  _45 = putvalue_119 & _44;
  _46 = (sizetype) pos_115;
  _47 = dataPtr_121(D) + _46;
  _48 = _43 | _45;
  *_47 = _48;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _49 = Com_EB_WritePropPtr_112(D)->ComSignalBase.ComBitSize;
  _50 = (unsigned char) _49;
  tmp_val_125 = _50 - space_116;
  # DEBUG tmp_val => tmp_val_125
  # DEBUG BEGIN_STMT
  ssize_126 = (sint8) tmp_val_125;
  # DEBUG ssize => ssize_126
  # DEBUG BEGIN_STMT
  pos.48_51 = (unsigned short) pos_115;
  _52 = pos.48_51 + 1;
  pos_127 = (sint16) _52;
  # DEBUG pos => pos_127
  # DEBUG BEGIN_STMT
  _53 = (int) space_116;
  Val_128 = Val_108 >> _53;
  # DEBUG Val => Val_128
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _54 = (sizetype) pos_102;
  _55 = dataPtr_121(D) + _54;
  _56 = *_55;
  _57 = (unsigned char) Val_100;
  if (_56 != _57)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_137 = 1;
  # DEBUG valueChanged => valueChanged_137

  <bb 7> :
  # valueChanged_96 = PHI <valueChanged_97(5), valueChanged_137(6)>
  # DEBUG valueChanged => valueChanged_96
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = (sizetype) pos_102;
  _59 = dataPtr_121(D) + _58;
  _60 = (unsigned char) Val_100;
  *_59 = _60;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_139 = Val_100 >> 8;
  # DEBUG Val => Val_139
  # DEBUG BEGIN_STMT
  ssize.49_61 = (unsigned char) ssize_101;
  _62 = ssize.49_61 + 248;
  ssize_140 = (sint8) _62;
  # DEBUG ssize => ssize_140
  # DEBUG BEGIN_STMT
  pos.50_63 = (unsigned short) pos_102;
  _64 = pos.50_63 + 1;
  pos_141 = (sint16) _64;
  # DEBUG pos => pos_141

  <bb 8> :
  # valueChanged_97 = PHI <valueChanged_95(4), valueChanged_96(7)>
  # Val_100 = PHI <Val_128(4), Val_139(7)>
  # ssize_101 = PHI <ssize_126(4), ssize_140(7)>
  # pos_102 = PHI <pos_127(4), pos_141(7)>
  # DEBUG pos => pos_102
  # DEBUG ssize => ssize_101
  # DEBUG Val => Val_100
  # DEBUG valueChanged => valueChanged_97
  # DEBUG BEGIN_STMT
  if (ssize_101 > 7)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (ssize_101 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ssize_hlp_129 = (uint8) ssize_101;
  # DEBUG ssize_hlp => ssize_hlp_129
  # DEBUG BEGIN_STMT
  _65 = 8 - ssize_hlp_129;
  _66 = (int) _65;
  _67 = 255 >> _66;
  mask_u8_130 = (uint8) _67;
  # DEBUG mask_u8 => mask_u8_130
  # DEBUG BEGIN_STMT
  mask_131 = (uint32) mask_u8_130;
  # DEBUG mask => mask_131
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _68 = (sizetype) pos_102;
  _69 = dataPtr_121(D) + _68;
  _70 = *_69;
  _71 = (sizetype) pos_102;
  _72 = dataPtr_121(D) + _71;
  _73 = *_72;
  _74 = (unsigned char) mask_131;
  _75 = ~_74;
  _76 = _73 & _75;
  _77 = (unsigned char) Val_100;
  _78 = (unsigned char) mask_131;
  _79 = _77 & _78;
  _80 = _76 | _79;
  if (_70 != _80)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  valueChanged_132 = 1;
  # DEBUG valueChanged => valueChanged_132

  <bb 12> :
  # valueChanged_98 = PHI <valueChanged_97(10), valueChanged_132(11)>
  # DEBUG valueChanged => valueChanged_98
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _81 = (sizetype) pos_102;
  _82 = dataPtr_121(D) + _81;
  _83 = *_82;
  _84 = (unsigned char) mask_131;
  _85 = ~_84;
  _86 = _83 & _85;
  _87 = (unsigned char) Val_100;
  _88 = (unsigned char) mask_131;
  _89 = _87 & _88;
  _90 = (sizetype) pos_102;
  _91 = dataPtr_121(D) + _90;
  _92 = _86 | _89;
  *_91 = _92;

  <bb 13> :
  # valueChanged_99 = PHI <valueChanged_97(9), valueChanged_98(12)>
  # DEBUG valueChanged => valueChanged_99
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _93 = IntDataPtr_135(D)->trigger;
  _94 = valueChanged_99 | _93;
  IntDataPtr_135(D)->trigger = _94;
  return;

}


Com_EB_Write_16_SX_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  sizetype _47;
  uint8 * _48;
  unsigned char _49;
  unsigned short pos.51_50;
  unsigned short _51;
  sizetype _52;
  uint8 * _53;
  unsigned char _54;
  sizetype _55;
  uint8 * _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  sizetype _65;
  uint8 * _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  sizetype _74;
  uint8 * _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_86 = 0;
  # DEBUG valueChanged => valueChanged_86
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_88(D)];
  Val_89 = (uint32) _1;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  mask_90 = 65535;
  # DEBUG mask => mask_90
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_91(D)->ComSignalPositionInBit;
  row_92 = _2 / 8;
  # DEBUG row => row_92
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_91(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_93 = _4 & 7;
  # DEBUG col => col_93
  # DEBUG BEGIN_STMT
  pos_94 = (sint16) row_92;
  # DEBUG pos => pos_94
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_91(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_95 = mask_90 >> _7;
  # DEBUG mask => mask_95
  # DEBUG BEGIN_STMT
  _8 = (int) col_93;
  mask_96 = mask_95 << _8;
  # DEBUG mask => mask_96
  # DEBUG BEGIN_STMT
  _9 = (int) col_93;
  Val_97 = Val_89 << _9;
  # DEBUG Val => Val_97
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _11 = _10 / 8;
  _12 = (sizetype) _11;
  _13 = dataPtr_99(D) + _12;
  _14 = *_13;
  _15 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _16 = (unsigned int) _15;
  _17 = _16 & 7;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _20 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _21 = _20 / 8;
  _22 = (sizetype) _21;
  _23 = dataPtr_99(D) + _22;
  _24 = _14 | _19;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_94;
  _26 = dataPtr_99(D) + _25;
  _27 = *_26;
  _28 = (sizetype) pos_94;
  _29 = dataPtr_99(D) + _28;
  _30 = *_29;
  _31 = (unsigned char) mask_96;
  _32 = ~_31;
  _33 = _30 & _32;
  _34 = (unsigned char) Val_97;
  _35 = (unsigned char) mask_96;
  _36 = _34 & _35;
  _37 = _33 | _36;
  if (_27 != _37)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_101 = 1;
  # DEBUG valueChanged => valueChanged_101

  <bb 4> :
  # valueChanged_79 = PHI <valueChanged_86(2), valueChanged_101(3)>
  # DEBUG valueChanged => valueChanged_79
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = (sizetype) pos_94;
  _39 = dataPtr_99(D) + _38;
  _40 = *_39;
  _41 = (unsigned char) mask_96;
  _42 = ~_41;
  _43 = _40 & _42;
  _44 = (unsigned char) Val_97;
  _45 = (unsigned char) mask_96;
  _46 = _44 & _45;
  _47 = (sizetype) pos_94;
  _48 = dataPtr_99(D) + _47;
  _49 = _43 | _46;
  *_48 = _49;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_106 = Val_82 >> 8;
  # DEBUG Val => Val_106
  # DEBUG BEGIN_STMT
  mask_107 = mask_83 >> 8;
  # DEBUG mask => mask_107
  # DEBUG BEGIN_STMT
  pos.51_50 = (unsigned short) pos_84;
  _51 = pos.51_50 + 1;
  pos_108 = (sint16) _51;
  # DEBUG pos => pos_108
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _52 = (sizetype) pos_108;
  _53 = dataPtr_99(D) + _52;
  _54 = *_53;
  _55 = (sizetype) pos_108;
  _56 = dataPtr_99(D) + _55;
  _57 = *_56;
  _58 = (unsigned char) mask_107;
  _59 = ~_58;
  _60 = _57 & _59;
  _61 = (unsigned char) Val_106;
  _62 = (unsigned char) mask_107;
  _63 = _61 & _62;
  _64 = _60 | _63;
  if (_54 != _64)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_109 = 1;
  # DEBUG valueChanged => valueChanged_109

  <bb 7> :
  # valueChanged_80 = PHI <valueChanged_81(5), valueChanged_109(6)>
  # DEBUG valueChanged => valueChanged_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _65 = (sizetype) pos_108;
  _66 = dataPtr_99(D) + _65;
  _67 = *_66;
  _68 = (unsigned char) mask_107;
  _69 = ~_68;
  _70 = _67 & _69;
  _71 = (unsigned char) Val_106;
  _72 = (unsigned char) mask_107;
  _73 = _71 & _72;
  _74 = (sizetype) pos_108;
  _75 = dataPtr_99(D) + _74;
  _76 = _70 | _73;
  *_75 = _76;

  <bb 8> :
  # valueChanged_81 = PHI <valueChanged_79(4), valueChanged_80(7)>
  # Val_82 = PHI <Val_97(4), Val_106(7)>
  # mask_83 = PHI <mask_96(4), mask_107(7)>
  # pos_84 = PHI <pos_94(4), pos_108(7)>
  # DEBUG pos => pos_84
  # DEBUG mask => mask_83
  # DEBUG Val => Val_82
  # DEBUG valueChanged => valueChanged_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_83 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _77 = IntDataPtr_104(D)->trigger;
  _78 = valueChanged_81 | _77;
  IntDataPtr_104(D)->trigger = _78;
  return;

}


Com_EB_Write_08_SX_EL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  short unsigned int _26;
  short unsigned int _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  sizetype _44;
  uint8 * _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  sizetype _53;
  uint8 * _54;
  unsigned char _55;
  unsigned short pos.52_56;
  unsigned short _57;
  sizetype _58;
  uint8 * _59;
  unsigned char _60;
  sizetype _61;
  uint8 * _62;
  unsigned char _63;
  unsigned char _64;
  unsigned char _65;
  unsigned char _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  sizetype _71;
  uint8 * _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  sizetype _80;
  uint8 * _81;
  unsigned char _82;
  unsigned char _83;
  unsigned char _84;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_89 = 0;
  # DEBUG valueChanged => valueChanged_89
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_91(D)];
  Val_92 = (uint16) _1;
  # DEBUG Val => Val_92
  # DEBUG BEGIN_STMT
  mask_93 = 255;
  # DEBUG mask => mask_93
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_94(D)->ComSignalPositionInBit;
  row_95 = _2 / 8;
  # DEBUG row => row_95
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_94(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_96 = _4 & 7;
  # DEBUG col => col_96
  # DEBUG BEGIN_STMT
  pos_97 = (sint16) row_95;
  # DEBUG pos => pos_97
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_93;
  _6 = Com_EB_WritePropPtr_94(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_98 = (uint16) _9;
  # DEBUG mask => mask_98
  # DEBUG BEGIN_STMT
  _10 = (int) mask_98;
  _11 = (int) col_96;
  _12 = _10 << _11;
  mask_99 = (uint16) _12;
  # DEBUG mask => mask_99
  # DEBUG BEGIN_STMT
  _13 = (int) Val_92;
  _14 = (int) col_96;
  _15 = _13 << _14;
  Val_100 = (uint16) _15;
  # DEBUG Val => Val_100
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _17 = _16 / 8;
  _18 = (sizetype) _17;
  _19 = dataPtr_102(D) + _18;
  _20 = *_19;
  _21 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = 1 << _23;
  _25 = (unsigned char) _24;
  _26 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _27 = _26 / 8;
  _28 = (sizetype) _27;
  _29 = dataPtr_102(D) + _28;
  _30 = _20 | _25;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = (sizetype) pos_97;
  _32 = dataPtr_102(D) + _31;
  _33 = *_32;
  _34 = (sizetype) pos_97;
  _35 = dataPtr_102(D) + _34;
  _36 = *_35;
  _37 = (unsigned char) mask_99;
  _38 = ~_37;
  _39 = _36 & _38;
  _40 = (unsigned char) Val_100;
  _41 = (unsigned char) mask_99;
  _42 = _40 & _41;
  _43 = _39 | _42;
  if (_33 != _43)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_104 = 1;
  # DEBUG valueChanged => valueChanged_104

  <bb 4> :
  # valueChanged_85 = PHI <valueChanged_89(2), valueChanged_104(3)>
  # DEBUG valueChanged => valueChanged_85
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _44 = (sizetype) pos_97;
  _45 = dataPtr_102(D) + _44;
  _46 = *_45;
  _47 = (unsigned char) mask_99;
  _48 = ~_47;
  _49 = _46 & _48;
  _50 = (unsigned char) Val_100;
  _51 = (unsigned char) mask_99;
  _52 = _50 & _51;
  _53 = (sizetype) pos_97;
  _54 = dataPtr_102(D) + _53;
  _55 = _49 | _52;
  *_54 = _55;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_99 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_106 = Val_100 >> 8;
  # DEBUG Val => Val_106
  # DEBUG BEGIN_STMT
  mask_107 = mask_99 >> 8;
  # DEBUG mask => mask_107
  # DEBUG BEGIN_STMT
  pos.52_56 = (unsigned short) pos_97;
  _57 = pos.52_56 + 1;
  pos_108 = (sint16) _57;
  # DEBUG pos => pos_108
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = (sizetype) pos_108;
  _59 = dataPtr_102(D) + _58;
  _60 = *_59;
  _61 = (sizetype) pos_108;
  _62 = dataPtr_102(D) + _61;
  _63 = *_62;
  _64 = (unsigned char) mask_107;
  _65 = ~_64;
  _66 = _63 & _65;
  _67 = (unsigned char) Val_106;
  _68 = (unsigned char) mask_107;
  _69 = _67 & _68;
  _70 = _66 | _69;
  if (_60 != _70)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_109 = 1;
  # DEBUG valueChanged => valueChanged_109

  <bb 7> :
  # valueChanged_86 = PHI <valueChanged_85(5), valueChanged_109(6)>
  # DEBUG valueChanged => valueChanged_86
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _71 = (sizetype) pos_108;
  _72 = dataPtr_102(D) + _71;
  _73 = *_72;
  _74 = (unsigned char) mask_107;
  _75 = ~_74;
  _76 = _73 & _75;
  _77 = (unsigned char) Val_106;
  _78 = (unsigned char) mask_107;
  _79 = _77 & _78;
  _80 = (sizetype) pos_108;
  _81 = dataPtr_102(D) + _80;
  _82 = _76 | _79;
  *_81 = _82;

  <bb 8> :
  # valueChanged_87 = PHI <valueChanged_85(4), valueChanged_86(7)>
  # DEBUG valueChanged => valueChanged_87
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _83 = IntDataPtr_112(D)->trigger;
  _84 = valueChanged_87 | _83;
  IntDataPtr_112(D)->trigger = _84;
  return;

}


Com_EB_Write_AY_S0_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  sizetype _20;
  const uint8 * _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  short unsigned int ii.53_25;
  short unsigned int _26;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_29 = 0;
  # DEBUG ii => ii_29
  # DEBUG BEGIN_STMT
  U8Ptr_31 = SignalDataPtr_30(D);
  # DEBUG U8Ptr => U8Ptr_31
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_34(D)->ComUpdateBitPositionInBit;
  _2 = _1 / 8;
  _3 = (sizetype) _2;
  _4 = dataPtr_35(D) + _3;
  _5 = *_4;
  _6 = Com_EB_WritePropPtr_34(D)->ComUpdateBitPositionInBit;
  _7 = (unsigned int) _6;
  _8 = _7 & 7;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = Com_EB_WritePropPtr_34(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_35(D) + _13;
  _15 = _5 | _10;
  *_14 = _15;

  <bb 3> :
  # ii_27 = PHI <ii_29(2), ii_39(3)>
  # DEBUG ii => ii_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_34(D)->ComSignalPositionInBit;
  _17 = Com_EB_WritePropPtr_34(D)->ComSignalBase.ComBitSize;
  _18 = _16 + _17;
  _19 = _18 - ii_27;
  pos_37 = _19 + 65535;
  # DEBUG pos => pos_37
  # DEBUG BEGIN_STMT
  _20 = (sizetype) ii_27;
  _21 = U8Ptr_31 + _20;
  _22 = (sizetype) pos_37;
  _23 = dataPtr_35(D) + _22;
  _24 = *_21;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  ii.53_25 = ii_27;
  ii_39 = ii.53_25 + 1;
  # DEBUG ii => ii_39
  # DEBUG BEGIN_STMT
  _26 = Com_EB_WritePropPtr_34(D)->ComSignalBase.ComBitSize;
  if (ii_39 < _26)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_64_SX_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_EL_EUB_DOC_E2 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_32_SX_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned char _20;
  short unsigned int _21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  short unsigned int _37;
  unsigned char _38;
  unsigned short pos.54_39;
  unsigned short _40;
  int _41;
  sizetype _42;
  uint8 * _43;
  unsigned char _44;
  unsigned char ssize.55_45;
  unsigned char _46;
  unsigned short pos.56_47;
  unsigned short _48;
  unsigned char _49;
  int _50;
  unsigned int _51;
  sizetype _52;
  uint8 * _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  sizetype _61;
  uint8 * _62;
  unsigned char _63;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_71 = MEM[(const uint32 *)SignalDataPtr_70(D)];
  # DEBUG Val => Val_71
  # DEBUG BEGIN_STMT
  putvalue_72 = (uint8) Val_71;
  # DEBUG putvalue => putvalue_72
  # DEBUG BEGIN_STMT
  mask_73 = 4294967295;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  space_74 = 8;
  # DEBUG space => space_74
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_75(D)->ComSignalPositionInBit;
  row_76 = _1 / 8;
  # DEBUG row => row_76
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_75(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_77 = _3 & 7;
  # DEBUG col => col_77
  # DEBUG BEGIN_STMT
  pos_78 = (sint16) row_76;
  # DEBUG pos => pos_78
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_79 = space_74 - col_77;
  # DEBUG space => space_79
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_75(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_80 = mask_73 >> _6;
  # DEBUG mask => mask_80
  # DEBUG BEGIN_STMT
  _7 = (int) col_77;
  mask_81 = mask_80 << _7;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_72;
  _9 = (int) col_77;
  _10 = _8 << _9;
  putvalue_82 = (uint8) _10;
  # DEBUG putvalue => putvalue_82
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_84(D) + _13;
  _15 = *_14;
  _16 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _17 = (unsigned int) _16;
  _18 = _17 & 7;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _22 = _21 / 8;
  _23 = (sizetype) _22;
  _24 = dataPtr_84(D) + _23;
  _25 = _15 | _20;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  _26 = (sizetype) pos_78;
  _27 = dataPtr_84(D) + _26;
  _28 = *_27;
  _29 = (unsigned char) mask_81;
  _30 = ~_29;
  _31 = _28 & _30;
  _32 = (unsigned char) mask_81;
  _33 = putvalue_82 & _32;
  _34 = (sizetype) pos_78;
  _35 = dataPtr_84(D) + _34;
  _36 = _31 | _33;
  *_35 = _36;
  # DEBUG BEGIN_STMT
  _37 = Com_EB_WritePropPtr_75(D)->ComSignalBase.ComBitSize;
  _38 = (unsigned char) _37;
  tmp_val_87 = _38 - space_79;
  # DEBUG tmp_val => tmp_val_87
  # DEBUG BEGIN_STMT
  ssize_88 = (sint8) tmp_val_87;
  # DEBUG ssize => ssize_88
  # DEBUG BEGIN_STMT
  pos.54_39 = (unsigned short) pos_78;
  _40 = pos.54_39 + 65535;
  pos_89 = (sint16) _40;
  # DEBUG pos => pos_89
  # DEBUG BEGIN_STMT
  _41 = (int) space_79;
  Val_90 = Val_71 >> _41;
  # DEBUG Val => Val_90
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _42 = (sizetype) pos_66;
  _43 = dataPtr_84(D) + _42;
  _44 = (unsigned char) Val_64;
  *_43 = _44;
  # DEBUG BEGIN_STMT
  Val_97 = Val_64 >> 8;
  # DEBUG Val => Val_97
  # DEBUG BEGIN_STMT
  ssize.55_45 = (unsigned char) ssize_65;
  _46 = ssize.55_45 + 248;
  ssize_98 = (sint8) _46;
  # DEBUG ssize => ssize_98
  # DEBUG BEGIN_STMT
  pos.56_47 = (unsigned short) pos_66;
  _48 = pos.56_47 + 65535;
  pos_99 = (sint16) _48;
  # DEBUG pos => pos_99

  <bb 4> :
  # Val_64 = PHI <Val_90(2), Val_97(3)>
  # ssize_65 = PHI <ssize_88(2), ssize_98(3)>
  # pos_66 = PHI <pos_89(2), pos_99(3)>
  # DEBUG pos => pos_66
  # DEBUG ssize => ssize_65
  # DEBUG Val => Val_64
  # DEBUG BEGIN_STMT
  if (ssize_65 > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ssize_65 > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ssize_hlp_91 = (uint8) ssize_65;
  # DEBUG ssize_hlp => ssize_hlp_91
  # DEBUG BEGIN_STMT
  _49 = 8 - ssize_hlp_91;
  _50 = (int) _49;
  _51 = 255 >> _50;
  mask_u8_92 = (uint8) _51;
  # DEBUG mask_u8 => mask_u8_92
  # DEBUG BEGIN_STMT
  mask_93 = (uint32) mask_u8_92;
  # DEBUG mask => mask_93
  # DEBUG BEGIN_STMT
  _52 = (sizetype) pos_66;
  _53 = dataPtr_84(D) + _52;
  _54 = *_53;
  _55 = (unsigned char) mask_93;
  _56 = ~_55;
  _57 = _54 & _56;
  _58 = (unsigned char) Val_64;
  _59 = (unsigned char) mask_93;
  _60 = _58 & _59;
  _61 = (sizetype) pos_66;
  _62 = dataPtr_84(D) + _61;
  _63 = _57 | _60;
  *_62 = _63;

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_16_SX_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned short pos.57_37;
  unsigned short _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  sizetype _48;
  uint8 * _49;
  unsigned char _50;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_56(D)];
  Val_57 = (uint32) _1;
  # DEBUG Val => Val_57
  # DEBUG BEGIN_STMT
  mask_58 = 65535;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  row_60 = _2 / 8;
  # DEBUG row => row_60
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_61 = _4 & 7;
  # DEBUG col => col_61
  # DEBUG BEGIN_STMT
  pos_62 = (sint16) row_60;
  # DEBUG pos => pos_62
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_63 = mask_58 >> _7;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _8 = (int) col_61;
  mask_64 = mask_63 << _8;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  _9 = (int) col_61;
  Val_65 = Val_57 << _9;
  # DEBUG Val => Val_65
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _11 = _10 / 8;
  _12 = (sizetype) _11;
  _13 = dataPtr_67(D) + _12;
  _14 = *_13;
  _15 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _16 = (unsigned int) _15;
  _17 = _16 & 7;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _20 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _21 = _20 / 8;
  _22 = (sizetype) _21;
  _23 = dataPtr_67(D) + _22;
  _24 = _14 | _19;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_62;
  _26 = dataPtr_67(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) mask_64;
  _29 = ~_28;
  _30 = _27 & _29;
  _31 = (unsigned char) Val_65;
  _32 = (unsigned char) mask_64;
  _33 = _31 & _32;
  _34 = (sizetype) pos_62;
  _35 = dataPtr_67(D) + _34;
  _36 = _30 | _33;
  *_35 = _36;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_71 = Val_51 >> 8;
  # DEBUG Val => Val_71
  # DEBUG BEGIN_STMT
  mask_72 = mask_52 >> 8;
  # DEBUG mask => mask_72
  # DEBUG BEGIN_STMT
  pos.57_37 = (unsigned short) pos_53;
  _38 = pos.57_37 + 65535;
  pos_73 = (sint16) _38;
  # DEBUG pos => pos_73
  # DEBUG BEGIN_STMT
  _39 = (sizetype) pos_73;
  _40 = dataPtr_67(D) + _39;
  _41 = *_40;
  _42 = (unsigned char) mask_72;
  _43 = ~_42;
  _44 = _41 & _43;
  _45 = (unsigned char) Val_71;
  _46 = (unsigned char) mask_72;
  _47 = _45 & _46;
  _48 = (sizetype) pos_73;
  _49 = dataPtr_67(D) + _48;
  _50 = _44 | _47;
  *_49 = _50;

  <bb 4> :
  # Val_51 = PHI <Val_65(2), Val_71(3)>
  # mask_52 = PHI <mask_64(2), mask_72(3)>
  # pos_53 = PHI <pos_62(2), pos_73(3)>
  # DEBUG pos => pos_53
  # DEBUG mask => mask_52
  # DEBUG Val => Val_51
  # DEBUG BEGIN_STMT
  if (mask_52 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_08_SX_EL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  short unsigned int _26;
  short unsigned int _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  sizetype _40;
  uint8 * _41;
  unsigned char _42;
  unsigned short pos.58_43;
  unsigned short _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  sizetype _54;
  uint8 * _55;
  unsigned char _56;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_59(D)];
  Val_60 = (uint16) _1;
  # DEBUG Val => Val_60
  # DEBUG BEGIN_STMT
  mask_61 = 255;
  # DEBUG mask => mask_61
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_62(D)->ComSignalPositionInBit;
  row_63 = _2 / 8;
  # DEBUG row => row_63
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_62(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_64 = _4 & 7;
  # DEBUG col => col_64
  # DEBUG BEGIN_STMT
  pos_65 = (sint16) row_63;
  # DEBUG pos => pos_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_61;
  _6 = Com_EB_WritePropPtr_62(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_66 = (uint16) _9;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  _10 = (int) mask_66;
  _11 = (int) col_64;
  _12 = _10 << _11;
  mask_67 = (uint16) _12;
  # DEBUG mask => mask_67
  # DEBUG BEGIN_STMT
  _13 = (int) Val_60;
  _14 = (int) col_64;
  _15 = _13 << _14;
  Val_68 = (uint16) _15;
  # DEBUG Val => Val_68
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _17 = _16 / 8;
  _18 = (sizetype) _17;
  _19 = dataPtr_70(D) + _18;
  _20 = *_19;
  _21 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = 1 << _23;
  _25 = (unsigned char) _24;
  _26 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _27 = _26 / 8;
  _28 = (sizetype) _27;
  _29 = dataPtr_70(D) + _28;
  _30 = _20 | _25;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  _31 = (sizetype) pos_65;
  _32 = dataPtr_70(D) + _31;
  _33 = *_32;
  _34 = (unsigned char) mask_67;
  _35 = ~_34;
  _36 = _33 & _35;
  _37 = (unsigned char) Val_68;
  _38 = (unsigned char) mask_67;
  _39 = _37 & _38;
  _40 = (sizetype) pos_65;
  _41 = dataPtr_70(D) + _40;
  _42 = _36 | _39;
  *_41 = _42;
  # DEBUG BEGIN_STMT
  if (mask_67 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_73 = Val_68 >> 8;
  # DEBUG Val => Val_73
  # DEBUG BEGIN_STMT
  mask_74 = mask_67 >> 8;
  # DEBUG mask => mask_74
  # DEBUG BEGIN_STMT
  pos.58_43 = (unsigned short) pos_65;
  _44 = pos.58_43 + 65535;
  pos_75 = (sint16) _44;
  # DEBUG pos => pos_75
  # DEBUG BEGIN_STMT
  _45 = (sizetype) pos_75;
  _46 = dataPtr_70(D) + _45;
  _47 = *_46;
  _48 = (unsigned char) mask_74;
  _49 = ~_48;
  _50 = _47 & _49;
  _51 = (unsigned char) Val_73;
  _52 = (unsigned char) mask_74;
  _53 = _51 & _52;
  _54 = (sizetype) pos_75;
  _55 = dataPtr_70(D) + _54;
  _56 = _50 | _53;
  *_55 = _56;

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S1_EL_EUB_DOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * DataPtr_Start;
  const uint8 * U8Ptr;
  uint32 ii;
  short unsigned int _1;
  sizetype _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned char _12;
  short unsigned int _13;
  short unsigned int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  const uint8 * _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  long unsigned int _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_25 = 0;
  # DEBUG ii => ii_25
  # DEBUG BEGIN_STMT
  U8Ptr_27 = SignalDataPtr_26(D);
  # DEBUG U8Ptr => U8Ptr_27
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_29(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  DataPtr_Start_31 = dataPtr_30(D) + _2;
  # DEBUG DataPtr_Start => DataPtr_Start_31
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_29(D)->ComUpdateBitPositionInBit;
  _4 = _3 / 8;
  _5 = (sizetype) _4;
  _6 = dataPtr_30(D) + _5;
  _7 = *_6;
  _8 = Com_EB_WritePropPtr_29(D)->ComUpdateBitPositionInBit;
  _9 = (unsigned int) _8;
  _10 = _9 & 7;
  _11 = 1 << _10;
  _12 = (unsigned char) _11;
  _13 = Com_EB_WritePropPtr_29(D)->ComUpdateBitPositionInBit;
  _14 = _13 / 8;
  _15 = (sizetype) _14;
  _16 = dataPtr_30(D) + _15;
  _17 = _7 | _12;
  *_16 = _17;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _18 = U8Ptr_27 + ii_23;
  _19 = DataPtr_Start_31 + ii_23;
  _20 = *_18;
  *_19 = _20;
  # DEBUG BEGIN_STMT
  ii_37 = ii_23 + 1;
  # DEBUG ii => ii_37

  <bb 4> :
  # ii_23 = PHI <ii_25(2), ii_37(3)>
  # DEBUG ii => ii_23
  # DEBUG BEGIN_STMT
  _21 = IntDataPtr_34(D)->arraySize;
  _22 = (long unsigned int) _21;
  if (ii_23 < _22)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S0_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  sizetype _17;
  const uint8 * _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  short unsigned int ii.59_22;
  short unsigned int _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_26 = 0;
  # DEBUG ii => ii_26
  # DEBUG BEGIN_STMT
  U8Ptr_28 = SignalDataPtr_27(D);
  # DEBUG U8Ptr => U8Ptr_28
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_31(D)->ComUpdateBitPositionInBit;
  _2 = _1 / 8;
  _3 = (sizetype) _2;
  _4 = dataPtr_32(D) + _3;
  _5 = *_4;
  _6 = Com_EB_WritePropPtr_31(D)->ComUpdateBitPositionInBit;
  _7 = (unsigned int) _6;
  _8 = _7 & 7;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = Com_EB_WritePropPtr_31(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_32(D) + _13;
  _15 = _5 | _10;
  *_14 = _15;

  <bb 3> :
  # ii_24 = PHI <ii_26(2), ii_36(3)>
  # DEBUG ii => ii_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_31(D)->ComSignalPositionInBit;
  pos_34 = ii_24 + _16;
  # DEBUG pos => pos_34
  # DEBUG BEGIN_STMT
  _17 = (sizetype) ii_24;
  _18 = U8Ptr_28 + _17;
  _19 = (sizetype) pos_34;
  _20 = dataPtr_32(D) + _19;
  _21 = *_18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  ii.59_22 = ii_24;
  ii_36 = ii.59_22 + 1;
  # DEBUG ii => ii_36
  # DEBUG BEGIN_STMT
  _23 = Com_EB_WritePropPtr_31(D)->ComSignalBase.ComBitSize;
  if (ii_36 < _23)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_64_SX_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_EL_EUB_DOC_E1 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_32_SX_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned char _20;
  short unsigned int _21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  short unsigned int _37;
  unsigned char _38;
  unsigned short pos.60_39;
  unsigned short _40;
  int _41;
  sizetype _42;
  uint8 * _43;
  unsigned char _44;
  unsigned char ssize.61_45;
  unsigned char _46;
  unsigned short pos.62_47;
  unsigned short _48;
  unsigned char _49;
  int _50;
  unsigned int _51;
  sizetype _52;
  uint8 * _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  sizetype _61;
  uint8 * _62;
  unsigned char _63;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_71 = MEM[(const uint32 *)SignalDataPtr_70(D)];
  # DEBUG Val => Val_71
  # DEBUG BEGIN_STMT
  putvalue_72 = (uint8) Val_71;
  # DEBUG putvalue => putvalue_72
  # DEBUG BEGIN_STMT
  mask_73 = 4294967295;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  space_74 = 8;
  # DEBUG space => space_74
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_75(D)->ComSignalPositionInBit;
  row_76 = _1 / 8;
  # DEBUG row => row_76
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_75(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_77 = _3 & 7;
  # DEBUG col => col_77
  # DEBUG BEGIN_STMT
  pos_78 = (sint16) row_76;
  # DEBUG pos => pos_78
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_79 = space_74 - col_77;
  # DEBUG space => space_79
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_75(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_80 = mask_73 >> _6;
  # DEBUG mask => mask_80
  # DEBUG BEGIN_STMT
  _7 = (int) col_77;
  mask_81 = mask_80 << _7;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_72;
  _9 = (int) col_77;
  _10 = _8 << _9;
  putvalue_82 = (uint8) _10;
  # DEBUG putvalue => putvalue_82
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_84(D) + _13;
  _15 = *_14;
  _16 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _17 = (unsigned int) _16;
  _18 = _17 & 7;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _22 = _21 / 8;
  _23 = (sizetype) _22;
  _24 = dataPtr_84(D) + _23;
  _25 = _15 | _20;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  _26 = (sizetype) pos_78;
  _27 = dataPtr_84(D) + _26;
  _28 = *_27;
  _29 = (unsigned char) mask_81;
  _30 = ~_29;
  _31 = _28 & _30;
  _32 = (unsigned char) mask_81;
  _33 = putvalue_82 & _32;
  _34 = (sizetype) pos_78;
  _35 = dataPtr_84(D) + _34;
  _36 = _31 | _33;
  *_35 = _36;
  # DEBUG BEGIN_STMT
  _37 = Com_EB_WritePropPtr_75(D)->ComSignalBase.ComBitSize;
  _38 = (unsigned char) _37;
  tmp_val_87 = _38 - space_79;
  # DEBUG tmp_val => tmp_val_87
  # DEBUG BEGIN_STMT
  ssize_88 = (sint8) tmp_val_87;
  # DEBUG ssize => ssize_88
  # DEBUG BEGIN_STMT
  pos.60_39 = (unsigned short) pos_78;
  _40 = pos.60_39 + 1;
  pos_89 = (sint16) _40;
  # DEBUG pos => pos_89
  # DEBUG BEGIN_STMT
  _41 = (int) space_79;
  Val_90 = Val_71 >> _41;
  # DEBUG Val => Val_90
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _42 = (sizetype) pos_66;
  _43 = dataPtr_84(D) + _42;
  _44 = (unsigned char) Val_64;
  *_43 = _44;
  # DEBUG BEGIN_STMT
  Val_97 = Val_64 >> 8;
  # DEBUG Val => Val_97
  # DEBUG BEGIN_STMT
  ssize.61_45 = (unsigned char) ssize_65;
  _46 = ssize.61_45 + 248;
  ssize_98 = (sint8) _46;
  # DEBUG ssize => ssize_98
  # DEBUG BEGIN_STMT
  pos.62_47 = (unsigned short) pos_66;
  _48 = pos.62_47 + 1;
  pos_99 = (sint16) _48;
  # DEBUG pos => pos_99

  <bb 4> :
  # Val_64 = PHI <Val_90(2), Val_97(3)>
  # ssize_65 = PHI <ssize_88(2), ssize_98(3)>
  # pos_66 = PHI <pos_89(2), pos_99(3)>
  # DEBUG pos => pos_66
  # DEBUG ssize => ssize_65
  # DEBUG Val => Val_64
  # DEBUG BEGIN_STMT
  if (ssize_65 > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ssize_65 > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ssize_hlp_91 = (uint8) ssize_65;
  # DEBUG ssize_hlp => ssize_hlp_91
  # DEBUG BEGIN_STMT
  _49 = 8 - ssize_hlp_91;
  _50 = (int) _49;
  _51 = 255 >> _50;
  mask_u8_92 = (uint8) _51;
  # DEBUG mask_u8 => mask_u8_92
  # DEBUG BEGIN_STMT
  mask_93 = (uint32) mask_u8_92;
  # DEBUG mask => mask_93
  # DEBUG BEGIN_STMT
  _52 = (sizetype) pos_66;
  _53 = dataPtr_84(D) + _52;
  _54 = *_53;
  _55 = (unsigned char) mask_93;
  _56 = ~_55;
  _57 = _54 & _56;
  _58 = (unsigned char) Val_64;
  _59 = (unsigned char) mask_93;
  _60 = _58 & _59;
  _61 = (sizetype) pos_66;
  _62 = dataPtr_84(D) + _61;
  _63 = _57 | _60;
  *_62 = _63;

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_16_SX_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned short pos.63_37;
  unsigned short _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  sizetype _48;
  uint8 * _49;
  unsigned char _50;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_56(D)];
  Val_57 = (uint32) _1;
  # DEBUG Val => Val_57
  # DEBUG BEGIN_STMT
  mask_58 = 65535;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  row_60 = _2 / 8;
  # DEBUG row => row_60
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_61 = _4 & 7;
  # DEBUG col => col_61
  # DEBUG BEGIN_STMT
  pos_62 = (sint16) row_60;
  # DEBUG pos => pos_62
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_63 = mask_58 >> _7;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _8 = (int) col_61;
  mask_64 = mask_63 << _8;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  _9 = (int) col_61;
  Val_65 = Val_57 << _9;
  # DEBUG Val => Val_65
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _11 = _10 / 8;
  _12 = (sizetype) _11;
  _13 = dataPtr_67(D) + _12;
  _14 = *_13;
  _15 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _16 = (unsigned int) _15;
  _17 = _16 & 7;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _20 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _21 = _20 / 8;
  _22 = (sizetype) _21;
  _23 = dataPtr_67(D) + _22;
  _24 = _14 | _19;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_62;
  _26 = dataPtr_67(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) mask_64;
  _29 = ~_28;
  _30 = _27 & _29;
  _31 = (unsigned char) Val_65;
  _32 = (unsigned char) mask_64;
  _33 = _31 & _32;
  _34 = (sizetype) pos_62;
  _35 = dataPtr_67(D) + _34;
  _36 = _30 | _33;
  *_35 = _36;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_71 = Val_51 >> 8;
  # DEBUG Val => Val_71
  # DEBUG BEGIN_STMT
  mask_72 = mask_52 >> 8;
  # DEBUG mask => mask_72
  # DEBUG BEGIN_STMT
  pos.63_37 = (unsigned short) pos_53;
  _38 = pos.63_37 + 1;
  pos_73 = (sint16) _38;
  # DEBUG pos => pos_73
  # DEBUG BEGIN_STMT
  _39 = (sizetype) pos_73;
  _40 = dataPtr_67(D) + _39;
  _41 = *_40;
  _42 = (unsigned char) mask_72;
  _43 = ~_42;
  _44 = _41 & _43;
  _45 = (unsigned char) Val_71;
  _46 = (unsigned char) mask_72;
  _47 = _45 & _46;
  _48 = (sizetype) pos_73;
  _49 = dataPtr_67(D) + _48;
  _50 = _44 | _47;
  *_49 = _50;

  <bb 4> :
  # Val_51 = PHI <Val_65(2), Val_71(3)>
  # mask_52 = PHI <mask_64(2), mask_72(3)>
  # pos_53 = PHI <pos_62(2), pos_73(3)>
  # DEBUG pos => pos_53
  # DEBUG mask => mask_52
  # DEBUG Val => Val_51
  # DEBUG BEGIN_STMT
  if (mask_52 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_08_SX_EL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  short unsigned int _26;
  short unsigned int _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  sizetype _40;
  uint8 * _41;
  unsigned char _42;
  unsigned short pos.64_43;
  unsigned short _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  sizetype _54;
  uint8 * _55;
  unsigned char _56;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_59(D)];
  Val_60 = (uint16) _1;
  # DEBUG Val => Val_60
  # DEBUG BEGIN_STMT
  mask_61 = 255;
  # DEBUG mask => mask_61
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_62(D)->ComSignalPositionInBit;
  row_63 = _2 / 8;
  # DEBUG row => row_63
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_62(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_64 = _4 & 7;
  # DEBUG col => col_64
  # DEBUG BEGIN_STMT
  pos_65 = (sint16) row_63;
  # DEBUG pos => pos_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_61;
  _6 = Com_EB_WritePropPtr_62(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_66 = (uint16) _9;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  _10 = (int) mask_66;
  _11 = (int) col_64;
  _12 = _10 << _11;
  mask_67 = (uint16) _12;
  # DEBUG mask => mask_67
  # DEBUG BEGIN_STMT
  _13 = (int) Val_60;
  _14 = (int) col_64;
  _15 = _13 << _14;
  Val_68 = (uint16) _15;
  # DEBUG Val => Val_68
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _17 = _16 / 8;
  _18 = (sizetype) _17;
  _19 = dataPtr_70(D) + _18;
  _20 = *_19;
  _21 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = 1 << _23;
  _25 = (unsigned char) _24;
  _26 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _27 = _26 / 8;
  _28 = (sizetype) _27;
  _29 = dataPtr_70(D) + _28;
  _30 = _20 | _25;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  _31 = (sizetype) pos_65;
  _32 = dataPtr_70(D) + _31;
  _33 = *_32;
  _34 = (unsigned char) mask_67;
  _35 = ~_34;
  _36 = _33 & _35;
  _37 = (unsigned char) Val_68;
  _38 = (unsigned char) mask_67;
  _39 = _37 & _38;
  _40 = (sizetype) pos_65;
  _41 = dataPtr_70(D) + _40;
  _42 = _36 | _39;
  *_41 = _42;
  # DEBUG BEGIN_STMT
  if (mask_67 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_73 = Val_68 >> 8;
  # DEBUG Val => Val_73
  # DEBUG BEGIN_STMT
  mask_74 = mask_67 >> 8;
  # DEBUG mask => mask_74
  # DEBUG BEGIN_STMT
  pos.64_43 = (unsigned short) pos_65;
  _44 = pos.64_43 + 1;
  pos_75 = (sint16) _44;
  # DEBUG pos => pos_75
  # DEBUG BEGIN_STMT
  _45 = (sizetype) pos_75;
  _46 = dataPtr_70(D) + _45;
  _47 = *_46;
  _48 = (unsigned char) mask_74;
  _49 = ~_48;
  _50 = _47 & _49;
  _51 = (unsigned char) Val_73;
  _52 = (unsigned char) mask_74;
  _53 = _51 & _52;
  _54 = (sizetype) pos_75;
  _55 = dataPtr_70(D) + _54;
  _56 = _50 | _53;
  *_55 = _56;

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S0_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  sizetype _8;
  const uint8 * _9;
  unsigned char _10;
  sizetype _11;
  const uint8 * _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int ii.65_16;
  short unsigned int _17;
  unsigned char _18;
  unsigned char _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_24 = 0;
  # DEBUG valueChanged => valueChanged_24
  # DEBUG BEGIN_STMT
  ii_25 = 0;
  # DEBUG ii => ii_25
  # DEBUG BEGIN_STMT
  U8Ptr_27 = SignalDataPtr_26(D);
  # DEBUG U8Ptr => U8Ptr_27
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> :
  # valueChanged_20 = PHI <valueChanged_24(2), valueChanged_21(5)>
  # ii_22 = PHI <ii_25(2), ii_35(5)>
  # DEBUG ii => ii_22
  # DEBUG valueChanged => valueChanged_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_30(D)->ComSignalPositionInBit;
  _2 = Com_EB_WritePropPtr_30(D)->ComSignalBase.ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_22;
  pos_31 = _4 + 65535;
  # DEBUG pos => pos_31
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_31;
  _6 = dataPtr_32(D) + _5;
  _7 = *_6;
  _8 = (sizetype) ii_22;
  _9 = U8Ptr_27 + _8;
  _10 = *_9;
  if (_7 != _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_33 = 1;
  # DEBUG valueChanged => valueChanged_33

  <bb 5> :
  # valueChanged_21 = PHI <valueChanged_20(3), valueChanged_33(4)>
  # DEBUG valueChanged => valueChanged_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) ii_22;
  _12 = U8Ptr_27 + _11;
  _13 = (sizetype) pos_31;
  _14 = dataPtr_32(D) + _13;
  _15 = *_12;
  *_14 = _15;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii.65_16 = ii_22;
  ii_35 = ii.65_16 + 1;
  # DEBUG ii => ii_35
  # DEBUG BEGIN_STMT
  _17 = Com_EB_WritePropPtr_30(D)->ComSignalBase.ComBitSize;
  if (ii_35 < _17)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _18 = IntDataPtr_37(D)->trigger;
  _19 = valueChanged_21 | _18;
  IntDataPtr_37(D)->trigger = _19;
  return;

}


Com_EB_Write_64_SX_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_EL_DUB_EOC_E2 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  short unsigned int _34;
  unsigned char _35;
  unsigned short pos.66_36;
  unsigned short _37;
  int _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;
  unsigned char _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  unsigned char ssize.67_46;
  unsigned char _47;
  unsigned short pos.68_48;
  unsigned short _49;
  unsigned char _50;
  int _51;
  unsigned int _52;
  sizetype _53;
  uint8 * _54;
  unsigned char _55;
  sizetype _56;
  uint8 * _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  unsigned char _65;
  sizetype _66;
  uint8 * _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  unsigned char _74;
  sizetype _75;
  uint8 * _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_90 = 0;
  # DEBUG valueChanged => valueChanged_90
  # DEBUG BEGIN_STMT
  Val_93 = MEM[(const uint32 *)SignalDataPtr_92(D)];
  # DEBUG Val => Val_93
  # DEBUG BEGIN_STMT
  putvalue_94 = (uint8) Val_93;
  # DEBUG putvalue => putvalue_94
  # DEBUG BEGIN_STMT
  mask_95 = 4294967295;
  # DEBUG mask => mask_95
  # DEBUG BEGIN_STMT
  space_96 = 8;
  # DEBUG space => space_96
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_97(D)->ComSignalPositionInBit;
  row_98 = _1 / 8;
  # DEBUG row => row_98
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_97(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_99 = _3 & 7;
  # DEBUG col => col_99
  # DEBUG BEGIN_STMT
  pos_100 = (sint16) row_98;
  # DEBUG pos => pos_100
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_101 = space_96 - col_99;
  # DEBUG space => space_101
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_97(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_102 = mask_95 >> _6;
  # DEBUG mask => mask_102
  # DEBUG BEGIN_STMT
  _7 = (int) col_99;
  mask_103 = mask_102 << _7;
  # DEBUG mask => mask_103
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_94;
  _9 = (int) col_99;
  _10 = _8 << _9;
  putvalue_104 = (uint8) _10;
  # DEBUG putvalue => putvalue_104
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) pos_100;
  _12 = dataPtr_106(D) + _11;
  _13 = *_12;
  _14 = (sizetype) pos_100;
  _15 = dataPtr_106(D) + _14;
  _16 = *_15;
  _17 = (unsigned char) mask_103;
  _18 = ~_17;
  _19 = _16 & _18;
  _20 = (unsigned char) mask_103;
  _21 = putvalue_104 & _20;
  _22 = _19 | _21;
  if (_13 != _22)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_107 = 1;
  # DEBUG valueChanged => valueChanged_107

  <bb 4> :
  # valueChanged_80 = PHI <valueChanged_90(2), valueChanged_107(3)>
  # DEBUG valueChanged => valueChanged_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_100;
  _24 = dataPtr_106(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_103;
  _27 = ~_26;
  _28 = _25 & _27;
  _29 = (unsigned char) mask_103;
  _30 = putvalue_104 & _29;
  _31 = (sizetype) pos_100;
  _32 = dataPtr_106(D) + _31;
  _33 = _28 | _30;
  *_32 = _33;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = Com_EB_WritePropPtr_97(D)->ComSignalBase.ComBitSize;
  _35 = (unsigned char) _34;
  tmp_val_109 = _35 - space_101;
  # DEBUG tmp_val => tmp_val_109
  # DEBUG BEGIN_STMT
  ssize_110 = (sint8) tmp_val_109;
  # DEBUG ssize => ssize_110
  # DEBUG BEGIN_STMT
  pos.66_36 = (unsigned short) pos_100;
  _37 = pos.66_36 + 65535;
  pos_111 = (sint16) _37;
  # DEBUG pos => pos_111
  # DEBUG BEGIN_STMT
  _38 = (int) space_101;
  Val_112 = Val_93 >> _38;
  # DEBUG Val => Val_112
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _39 = (sizetype) pos_87;
  _40 = dataPtr_106(D) + _39;
  _41 = *_40;
  _42 = (unsigned char) Val_85;
  if (_41 != _42)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_121 = 1;
  # DEBUG valueChanged => valueChanged_121

  <bb 7> :
  # valueChanged_81 = PHI <valueChanged_82(5), valueChanged_121(6)>
  # DEBUG valueChanged => valueChanged_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_87;
  _44 = dataPtr_106(D) + _43;
  _45 = (unsigned char) Val_85;
  *_44 = _45;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_123 = Val_85 >> 8;
  # DEBUG Val => Val_123
  # DEBUG BEGIN_STMT
  ssize.67_46 = (unsigned char) ssize_86;
  _47 = ssize.67_46 + 248;
  ssize_124 = (sint8) _47;
  # DEBUG ssize => ssize_124
  # DEBUG BEGIN_STMT
  pos.68_48 = (unsigned short) pos_87;
  _49 = pos.68_48 + 65535;
  pos_125 = (sint16) _49;
  # DEBUG pos => pos_125

  <bb 8> :
  # valueChanged_82 = PHI <valueChanged_80(4), valueChanged_81(7)>
  # Val_85 = PHI <Val_112(4), Val_123(7)>
  # ssize_86 = PHI <ssize_110(4), ssize_124(7)>
  # pos_87 = PHI <pos_111(4), pos_125(7)>
  # DEBUG pos => pos_87
  # DEBUG ssize => ssize_86
  # DEBUG Val => Val_85
  # DEBUG valueChanged => valueChanged_82
  # DEBUG BEGIN_STMT
  if (ssize_86 > 7)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (ssize_86 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ssize_hlp_113 = (uint8) ssize_86;
  # DEBUG ssize_hlp => ssize_hlp_113
  # DEBUG BEGIN_STMT
  _50 = 8 - ssize_hlp_113;
  _51 = (int) _50;
  _52 = 255 >> _51;
  mask_u8_114 = (uint8) _52;
  # DEBUG mask_u8 => mask_u8_114
  # DEBUG BEGIN_STMT
  mask_115 = (uint32) mask_u8_114;
  # DEBUG mask => mask_115
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _53 = (sizetype) pos_87;
  _54 = dataPtr_106(D) + _53;
  _55 = *_54;
  _56 = (sizetype) pos_87;
  _57 = dataPtr_106(D) + _56;
  _58 = *_57;
  _59 = (unsigned char) mask_115;
  _60 = ~_59;
  _61 = _58 & _60;
  _62 = (unsigned char) Val_85;
  _63 = (unsigned char) mask_115;
  _64 = _62 & _63;
  _65 = _61 | _64;
  if (_55 != _65)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  valueChanged_116 = 1;
  # DEBUG valueChanged => valueChanged_116

  <bb 12> :
  # valueChanged_83 = PHI <valueChanged_82(10), valueChanged_116(11)>
  # DEBUG valueChanged => valueChanged_83
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _66 = (sizetype) pos_87;
  _67 = dataPtr_106(D) + _66;
  _68 = *_67;
  _69 = (unsigned char) mask_115;
  _70 = ~_69;
  _71 = _68 & _70;
  _72 = (unsigned char) Val_85;
  _73 = (unsigned char) mask_115;
  _74 = _72 & _73;
  _75 = (sizetype) pos_87;
  _76 = dataPtr_106(D) + _75;
  _77 = _71 | _74;
  *_76 = _77;

  <bb 13> :
  # valueChanged_84 = PHI <valueChanged_82(9), valueChanged_83(12)>
  # DEBUG valueChanged => valueChanged_84
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _78 = IntDataPtr_119(D)->trigger;
  _79 = valueChanged_84 | _78;
  IntDataPtr_119(D)->trigger = _79;
  return;

}


Com_EB_Write_16_SX_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  sizetype _32;
  uint8 * _33;
  unsigned char _34;
  unsigned short pos.69_35;
  unsigned short _36;
  sizetype _37;
  uint8 * _38;
  unsigned char _39;
  sizetype _40;
  uint8 * _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  sizetype _50;
  uint8 * _51;
  unsigned char _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  sizetype _59;
  uint8 * _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_71 = 0;
  # DEBUG valueChanged => valueChanged_71
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_73(D)];
  Val_74 = (uint32) _1;
  # DEBUG Val => Val_74
  # DEBUG BEGIN_STMT
  mask_75 = 65535;
  # DEBUG mask => mask_75
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_76(D)->ComSignalPositionInBit;
  row_77 = _2 / 8;
  # DEBUG row => row_77
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_76(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_78 = _4 & 7;
  # DEBUG col => col_78
  # DEBUG BEGIN_STMT
  pos_79 = (sint16) row_77;
  # DEBUG pos => pos_79
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_76(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_80 = mask_75 >> _7;
  # DEBUG mask => mask_80
  # DEBUG BEGIN_STMT
  _8 = (int) col_78;
  mask_81 = mask_80 << _8;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  _9 = (int) col_78;
  Val_82 = Val_74 << _9;
  # DEBUG Val => Val_82
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (sizetype) pos_79;
  _11 = dataPtr_84(D) + _10;
  _12 = *_11;
  _13 = (sizetype) pos_79;
  _14 = dataPtr_84(D) + _13;
  _15 = *_14;
  _16 = (unsigned char) mask_81;
  _17 = ~_16;
  _18 = _15 & _17;
  _19 = (unsigned char) Val_82;
  _20 = (unsigned char) mask_81;
  _21 = _19 & _20;
  _22 = _18 | _21;
  if (_12 != _22)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_85 = 1;
  # DEBUG valueChanged => valueChanged_85

  <bb 4> :
  # valueChanged_64 = PHI <valueChanged_71(2), valueChanged_85(3)>
  # DEBUG valueChanged => valueChanged_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_79;
  _24 = dataPtr_84(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_81;
  _27 = ~_26;
  _28 = _25 & _27;
  _29 = (unsigned char) Val_82;
  _30 = (unsigned char) mask_81;
  _31 = _29 & _30;
  _32 = (sizetype) pos_79;
  _33 = dataPtr_84(D) + _32;
  _34 = _28 | _31;
  *_33 = _34;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_90 = Val_67 >> 8;
  # DEBUG Val => Val_90
  # DEBUG BEGIN_STMT
  mask_91 = mask_68 >> 8;
  # DEBUG mask => mask_91
  # DEBUG BEGIN_STMT
  pos.69_35 = (unsigned short) pos_69;
  _36 = pos.69_35 + 65535;
  pos_92 = (sint16) _36;
  # DEBUG pos => pos_92
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _37 = (sizetype) pos_92;
  _38 = dataPtr_84(D) + _37;
  _39 = *_38;
  _40 = (sizetype) pos_92;
  _41 = dataPtr_84(D) + _40;
  _42 = *_41;
  _43 = (unsigned char) mask_91;
  _44 = ~_43;
  _45 = _42 & _44;
  _46 = (unsigned char) Val_90;
  _47 = (unsigned char) mask_91;
  _48 = _46 & _47;
  _49 = _45 | _48;
  if (_39 != _49)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_93 = 1;
  # DEBUG valueChanged => valueChanged_93

  <bb 7> :
  # valueChanged_65 = PHI <valueChanged_66(5), valueChanged_93(6)>
  # DEBUG valueChanged => valueChanged_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _50 = (sizetype) pos_92;
  _51 = dataPtr_84(D) + _50;
  _52 = *_51;
  _53 = (unsigned char) mask_91;
  _54 = ~_53;
  _55 = _52 & _54;
  _56 = (unsigned char) Val_90;
  _57 = (unsigned char) mask_91;
  _58 = _56 & _57;
  _59 = (sizetype) pos_92;
  _60 = dataPtr_84(D) + _59;
  _61 = _55 | _58;
  *_60 = _61;

  <bb 8> :
  # valueChanged_66 = PHI <valueChanged_64(4), valueChanged_65(7)>
  # Val_67 = PHI <Val_82(4), Val_90(7)>
  # mask_68 = PHI <mask_81(4), mask_91(7)>
  # pos_69 = PHI <pos_79(4), pos_92(7)>
  # DEBUG pos => pos_69
  # DEBUG mask => mask_68
  # DEBUG Val => Val_67
  # DEBUG valueChanged => valueChanged_66
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_68 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _62 = IntDataPtr_88(D)->trigger;
  _63 = valueChanged_66 | _62;
  IntDataPtr_88(D)->trigger = _63;
  return;

}


Com_EB_Write_08_SX_EL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned short pos.70_41;
  unsigned short _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  sizetype _56;
  uint8 * _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  sizetype _65;
  uint8 * _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_74 = 0;
  # DEBUG valueChanged => valueChanged_74
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_76(D)];
  Val_77 = (uint16) _1;
  # DEBUG Val => Val_77
  # DEBUG BEGIN_STMT
  mask_78 = 255;
  # DEBUG mask => mask_78
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_79(D)->ComSignalPositionInBit;
  row_80 = _2 / 8;
  # DEBUG row => row_80
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_79(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_81 = _4 & 7;
  # DEBUG col => col_81
  # DEBUG BEGIN_STMT
  pos_82 = (sint16) row_80;
  # DEBUG pos => pos_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_78;
  _6 = Com_EB_WritePropPtr_79(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_83 = (uint16) _9;
  # DEBUG mask => mask_83
  # DEBUG BEGIN_STMT
  _10 = (int) mask_83;
  _11 = (int) col_81;
  _12 = _10 << _11;
  mask_84 = (uint16) _12;
  # DEBUG mask => mask_84
  # DEBUG BEGIN_STMT
  _13 = (int) Val_77;
  _14 = (int) col_81;
  _15 = _13 << _14;
  Val_85 = (uint16) _15;
  # DEBUG Val => Val_85
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_82;
  _17 = dataPtr_87(D) + _16;
  _18 = *_17;
  _19 = (sizetype) pos_82;
  _20 = dataPtr_87(D) + _19;
  _21 = *_20;
  _22 = (unsigned char) mask_84;
  _23 = ~_22;
  _24 = _21 & _23;
  _25 = (unsigned char) Val_85;
  _26 = (unsigned char) mask_84;
  _27 = _25 & _26;
  _28 = _24 | _27;
  if (_18 != _28)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_88 = 1;
  # DEBUG valueChanged => valueChanged_88

  <bb 4> :
  # valueChanged_70 = PHI <valueChanged_74(2), valueChanged_88(3)>
  # DEBUG valueChanged => valueChanged_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = (sizetype) pos_82;
  _30 = dataPtr_87(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_84;
  _33 = ~_32;
  _34 = _31 & _33;
  _35 = (unsigned char) Val_85;
  _36 = (unsigned char) mask_84;
  _37 = _35 & _36;
  _38 = (sizetype) pos_82;
  _39 = dataPtr_87(D) + _38;
  _40 = _34 | _37;
  *_39 = _40;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_84 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_90 = Val_85 >> 8;
  # DEBUG Val => Val_90
  # DEBUG BEGIN_STMT
  mask_91 = mask_84 >> 8;
  # DEBUG mask => mask_91
  # DEBUG BEGIN_STMT
  pos.70_41 = (unsigned short) pos_82;
  _42 = pos.70_41 + 65535;
  pos_92 = (sint16) _42;
  # DEBUG pos => pos_92
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_92;
  _44 = dataPtr_87(D) + _43;
  _45 = *_44;
  _46 = (sizetype) pos_92;
  _47 = dataPtr_87(D) + _46;
  _48 = *_47;
  _49 = (unsigned char) mask_91;
  _50 = ~_49;
  _51 = _48 & _50;
  _52 = (unsigned char) Val_90;
  _53 = (unsigned char) mask_91;
  _54 = _52 & _53;
  _55 = _51 | _54;
  if (_45 != _55)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_93 = 1;
  # DEBUG valueChanged => valueChanged_93

  <bb 7> :
  # valueChanged_71 = PHI <valueChanged_70(5), valueChanged_93(6)>
  # DEBUG valueChanged => valueChanged_71
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _56 = (sizetype) pos_92;
  _57 = dataPtr_87(D) + _56;
  _58 = *_57;
  _59 = (unsigned char) mask_91;
  _60 = ~_59;
  _61 = _58 & _60;
  _62 = (unsigned char) Val_90;
  _63 = (unsigned char) mask_91;
  _64 = _62 & _63;
  _65 = (sizetype) pos_92;
  _66 = dataPtr_87(D) + _65;
  _67 = _61 | _64;
  *_66 = _67;

  <bb 8> :
  # valueChanged_72 = PHI <valueChanged_70(4), valueChanged_71(7)>
  # DEBUG valueChanged => valueChanged_72
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _68 = IntDataPtr_96(D)->trigger;
  _69 = valueChanged_72 | _68;
  IntDataPtr_96(D)->trigger = _69;
  return;

}


Com_EB_Write_AY_S1_EL_DUB_EOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * DataPtr_Start;
  const uint8 * U8Ptr;
  uint32 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  unsigned char _4;
  const uint8 * _5;
  unsigned char _6;
  const uint8 * _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  long unsigned int _11;
  unsigned char _12;
  unsigned char _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_18 = 0;
  # DEBUG valueChanged => valueChanged_18
  # DEBUG BEGIN_STMT
  ii_19 = 0;
  # DEBUG ii => ii_19
  # DEBUG BEGIN_STMT
  U8Ptr_21 = SignalDataPtr_20(D);
  # DEBUG U8Ptr => U8Ptr_21
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_23(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  DataPtr_Start_25 = dataPtr_24(D) + _2;
  # DEBUG DataPtr_Start => DataPtr_Start_25
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = DataPtr_Start_25 + ii_16;
  _4 = *_3;
  _5 = U8Ptr_21 + ii_16;
  _6 = *_5;
  if (_4 != _6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_30 = 1;
  # DEBUG valueChanged => valueChanged_30

  <bb 5> :
  # valueChanged_14 = PHI <valueChanged_15(3), valueChanged_30(4)>
  # DEBUG valueChanged => valueChanged_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = U8Ptr_21 + ii_16;
  _8 = DataPtr_Start_25 + ii_16;
  _9 = *_7;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_32 = ii_16 + 1;
  # DEBUG ii => ii_32

  <bb 6> :
  # valueChanged_15 = PHI <valueChanged_18(2), valueChanged_14(5)>
  # ii_16 = PHI <ii_19(2), ii_32(5)>
  # DEBUG ii => ii_16
  # DEBUG valueChanged => valueChanged_15
  # DEBUG BEGIN_STMT
  _10 = IntDataPtr_27(D)->arraySize;
  _11 = (long unsigned int) _10;
  if (ii_16 < _11)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _12 = IntDataPtr_27(D)->trigger;
  _13 = valueChanged_15 | _12;
  IntDataPtr_27(D)->trigger = _13;
  return;

}


Com_EB_Write_AY_S0_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  sizetype _8;
  const uint8 * _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  short unsigned int ii.71_13;
  short unsigned int _14;
  unsigned char _15;
  unsigned char _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_21 = 0;
  # DEBUG valueChanged => valueChanged_21
  # DEBUG BEGIN_STMT
  ii_22 = 0;
  # DEBUG ii => ii_22
  # DEBUG BEGIN_STMT
  U8Ptr_24 = SignalDataPtr_23(D);
  # DEBUG U8Ptr => U8Ptr_24
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> :
  # valueChanged_17 = PHI <valueChanged_21(2), valueChanged_18(5)>
  # ii_19 = PHI <ii_22(2), ii_32(5)>
  # DEBUG ii => ii_19
  # DEBUG valueChanged => valueChanged_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_27(D)->ComSignalPositionInBit;
  pos_28 = ii_19 + _1;
  # DEBUG pos => pos_28
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_28;
  _3 = dataPtr_29(D) + _2;
  _4 = *_3;
  _5 = (sizetype) ii_19;
  _6 = U8Ptr_24 + _5;
  _7 = *_6;
  if (_4 != _7)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_30 = 1;
  # DEBUG valueChanged => valueChanged_30

  <bb 5> :
  # valueChanged_18 = PHI <valueChanged_17(3), valueChanged_30(4)>
  # DEBUG valueChanged => valueChanged_18
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = (sizetype) ii_19;
  _9 = U8Ptr_24 + _8;
  _10 = (sizetype) pos_28;
  _11 = dataPtr_29(D) + _10;
  _12 = *_9;
  *_11 = _12;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii.71_13 = ii_19;
  ii_32 = ii.71_13 + 1;
  # DEBUG ii => ii_32
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_27(D)->ComSignalBase.ComBitSize;
  if (ii_32 < _14)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _15 = IntDataPtr_34(D)->trigger;
  _16 = valueChanged_18 | _15;
  IntDataPtr_34(D)->trigger = _16;
  return;

}


Com_EB_Write_64_SX_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_EL_DUB_EOC_E1 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  short unsigned int _34;
  unsigned char _35;
  unsigned short pos.72_36;
  unsigned short _37;
  int _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;
  unsigned char _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  unsigned char ssize.73_46;
  unsigned char _47;
  unsigned short pos.74_48;
  unsigned short _49;
  unsigned char _50;
  int _51;
  unsigned int _52;
  sizetype _53;
  uint8 * _54;
  unsigned char _55;
  sizetype _56;
  uint8 * _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  unsigned char _65;
  sizetype _66;
  uint8 * _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  unsigned char _74;
  sizetype _75;
  uint8 * _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_90 = 0;
  # DEBUG valueChanged => valueChanged_90
  # DEBUG BEGIN_STMT
  Val_93 = MEM[(const uint32 *)SignalDataPtr_92(D)];
  # DEBUG Val => Val_93
  # DEBUG BEGIN_STMT
  putvalue_94 = (uint8) Val_93;
  # DEBUG putvalue => putvalue_94
  # DEBUG BEGIN_STMT
  mask_95 = 4294967295;
  # DEBUG mask => mask_95
  # DEBUG BEGIN_STMT
  space_96 = 8;
  # DEBUG space => space_96
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_97(D)->ComSignalPositionInBit;
  row_98 = _1 / 8;
  # DEBUG row => row_98
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_97(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_99 = _3 & 7;
  # DEBUG col => col_99
  # DEBUG BEGIN_STMT
  pos_100 = (sint16) row_98;
  # DEBUG pos => pos_100
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_101 = space_96 - col_99;
  # DEBUG space => space_101
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_97(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_102 = mask_95 >> _6;
  # DEBUG mask => mask_102
  # DEBUG BEGIN_STMT
  _7 = (int) col_99;
  mask_103 = mask_102 << _7;
  # DEBUG mask => mask_103
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_94;
  _9 = (int) col_99;
  _10 = _8 << _9;
  putvalue_104 = (uint8) _10;
  # DEBUG putvalue => putvalue_104
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) pos_100;
  _12 = dataPtr_106(D) + _11;
  _13 = *_12;
  _14 = (sizetype) pos_100;
  _15 = dataPtr_106(D) + _14;
  _16 = *_15;
  _17 = (unsigned char) mask_103;
  _18 = ~_17;
  _19 = _16 & _18;
  _20 = (unsigned char) mask_103;
  _21 = putvalue_104 & _20;
  _22 = _19 | _21;
  if (_13 != _22)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_107 = 1;
  # DEBUG valueChanged => valueChanged_107

  <bb 4> :
  # valueChanged_80 = PHI <valueChanged_90(2), valueChanged_107(3)>
  # DEBUG valueChanged => valueChanged_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_100;
  _24 = dataPtr_106(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_103;
  _27 = ~_26;
  _28 = _25 & _27;
  _29 = (unsigned char) mask_103;
  _30 = putvalue_104 & _29;
  _31 = (sizetype) pos_100;
  _32 = dataPtr_106(D) + _31;
  _33 = _28 | _30;
  *_32 = _33;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = Com_EB_WritePropPtr_97(D)->ComSignalBase.ComBitSize;
  _35 = (unsigned char) _34;
  tmp_val_109 = _35 - space_101;
  # DEBUG tmp_val => tmp_val_109
  # DEBUG BEGIN_STMT
  ssize_110 = (sint8) tmp_val_109;
  # DEBUG ssize => ssize_110
  # DEBUG BEGIN_STMT
  pos.72_36 = (unsigned short) pos_100;
  _37 = pos.72_36 + 1;
  pos_111 = (sint16) _37;
  # DEBUG pos => pos_111
  # DEBUG BEGIN_STMT
  _38 = (int) space_101;
  Val_112 = Val_93 >> _38;
  # DEBUG Val => Val_112
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _39 = (sizetype) pos_87;
  _40 = dataPtr_106(D) + _39;
  _41 = *_40;
  _42 = (unsigned char) Val_85;
  if (_41 != _42)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_121 = 1;
  # DEBUG valueChanged => valueChanged_121

  <bb 7> :
  # valueChanged_81 = PHI <valueChanged_82(5), valueChanged_121(6)>
  # DEBUG valueChanged => valueChanged_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_87;
  _44 = dataPtr_106(D) + _43;
  _45 = (unsigned char) Val_85;
  *_44 = _45;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_123 = Val_85 >> 8;
  # DEBUG Val => Val_123
  # DEBUG BEGIN_STMT
  ssize.73_46 = (unsigned char) ssize_86;
  _47 = ssize.73_46 + 248;
  ssize_124 = (sint8) _47;
  # DEBUG ssize => ssize_124
  # DEBUG BEGIN_STMT
  pos.74_48 = (unsigned short) pos_87;
  _49 = pos.74_48 + 1;
  pos_125 = (sint16) _49;
  # DEBUG pos => pos_125

  <bb 8> :
  # valueChanged_82 = PHI <valueChanged_80(4), valueChanged_81(7)>
  # Val_85 = PHI <Val_112(4), Val_123(7)>
  # ssize_86 = PHI <ssize_110(4), ssize_124(7)>
  # pos_87 = PHI <pos_111(4), pos_125(7)>
  # DEBUG pos => pos_87
  # DEBUG ssize => ssize_86
  # DEBUG Val => Val_85
  # DEBUG valueChanged => valueChanged_82
  # DEBUG BEGIN_STMT
  if (ssize_86 > 7)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (ssize_86 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ssize_hlp_113 = (uint8) ssize_86;
  # DEBUG ssize_hlp => ssize_hlp_113
  # DEBUG BEGIN_STMT
  _50 = 8 - ssize_hlp_113;
  _51 = (int) _50;
  _52 = 255 >> _51;
  mask_u8_114 = (uint8) _52;
  # DEBUG mask_u8 => mask_u8_114
  # DEBUG BEGIN_STMT
  mask_115 = (uint32) mask_u8_114;
  # DEBUG mask => mask_115
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _53 = (sizetype) pos_87;
  _54 = dataPtr_106(D) + _53;
  _55 = *_54;
  _56 = (sizetype) pos_87;
  _57 = dataPtr_106(D) + _56;
  _58 = *_57;
  _59 = (unsigned char) mask_115;
  _60 = ~_59;
  _61 = _58 & _60;
  _62 = (unsigned char) Val_85;
  _63 = (unsigned char) mask_115;
  _64 = _62 & _63;
  _65 = _61 | _64;
  if (_55 != _65)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  valueChanged_116 = 1;
  # DEBUG valueChanged => valueChanged_116

  <bb 12> :
  # valueChanged_83 = PHI <valueChanged_82(10), valueChanged_116(11)>
  # DEBUG valueChanged => valueChanged_83
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _66 = (sizetype) pos_87;
  _67 = dataPtr_106(D) + _66;
  _68 = *_67;
  _69 = (unsigned char) mask_115;
  _70 = ~_69;
  _71 = _68 & _70;
  _72 = (unsigned char) Val_85;
  _73 = (unsigned char) mask_115;
  _74 = _72 & _73;
  _75 = (sizetype) pos_87;
  _76 = dataPtr_106(D) + _75;
  _77 = _71 | _74;
  *_76 = _77;

  <bb 13> :
  # valueChanged_84 = PHI <valueChanged_82(9), valueChanged_83(12)>
  # DEBUG valueChanged => valueChanged_84
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _78 = IntDataPtr_119(D)->trigger;
  _79 = valueChanged_84 | _78;
  IntDataPtr_119(D)->trigger = _79;
  return;

}


Com_EB_Write_16_SX_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  sizetype _32;
  uint8 * _33;
  unsigned char _34;
  unsigned short pos.75_35;
  unsigned short _36;
  sizetype _37;
  uint8 * _38;
  unsigned char _39;
  sizetype _40;
  uint8 * _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  sizetype _50;
  uint8 * _51;
  unsigned char _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  sizetype _59;
  uint8 * _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_71 = 0;
  # DEBUG valueChanged => valueChanged_71
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_73(D)];
  Val_74 = (uint32) _1;
  # DEBUG Val => Val_74
  # DEBUG BEGIN_STMT
  mask_75 = 65535;
  # DEBUG mask => mask_75
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_76(D)->ComSignalPositionInBit;
  row_77 = _2 / 8;
  # DEBUG row => row_77
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_76(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_78 = _4 & 7;
  # DEBUG col => col_78
  # DEBUG BEGIN_STMT
  pos_79 = (sint16) row_77;
  # DEBUG pos => pos_79
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_76(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_80 = mask_75 >> _7;
  # DEBUG mask => mask_80
  # DEBUG BEGIN_STMT
  _8 = (int) col_78;
  mask_81 = mask_80 << _8;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  _9 = (int) col_78;
  Val_82 = Val_74 << _9;
  # DEBUG Val => Val_82
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (sizetype) pos_79;
  _11 = dataPtr_84(D) + _10;
  _12 = *_11;
  _13 = (sizetype) pos_79;
  _14 = dataPtr_84(D) + _13;
  _15 = *_14;
  _16 = (unsigned char) mask_81;
  _17 = ~_16;
  _18 = _15 & _17;
  _19 = (unsigned char) Val_82;
  _20 = (unsigned char) mask_81;
  _21 = _19 & _20;
  _22 = _18 | _21;
  if (_12 != _22)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_85 = 1;
  # DEBUG valueChanged => valueChanged_85

  <bb 4> :
  # valueChanged_64 = PHI <valueChanged_71(2), valueChanged_85(3)>
  # DEBUG valueChanged => valueChanged_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_79;
  _24 = dataPtr_84(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_81;
  _27 = ~_26;
  _28 = _25 & _27;
  _29 = (unsigned char) Val_82;
  _30 = (unsigned char) mask_81;
  _31 = _29 & _30;
  _32 = (sizetype) pos_79;
  _33 = dataPtr_84(D) + _32;
  _34 = _28 | _31;
  *_33 = _34;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_90 = Val_67 >> 8;
  # DEBUG Val => Val_90
  # DEBUG BEGIN_STMT
  mask_91 = mask_68 >> 8;
  # DEBUG mask => mask_91
  # DEBUG BEGIN_STMT
  pos.75_35 = (unsigned short) pos_69;
  _36 = pos.75_35 + 1;
  pos_92 = (sint16) _36;
  # DEBUG pos => pos_92
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _37 = (sizetype) pos_92;
  _38 = dataPtr_84(D) + _37;
  _39 = *_38;
  _40 = (sizetype) pos_92;
  _41 = dataPtr_84(D) + _40;
  _42 = *_41;
  _43 = (unsigned char) mask_91;
  _44 = ~_43;
  _45 = _42 & _44;
  _46 = (unsigned char) Val_90;
  _47 = (unsigned char) mask_91;
  _48 = _46 & _47;
  _49 = _45 | _48;
  if (_39 != _49)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_93 = 1;
  # DEBUG valueChanged => valueChanged_93

  <bb 7> :
  # valueChanged_65 = PHI <valueChanged_66(5), valueChanged_93(6)>
  # DEBUG valueChanged => valueChanged_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _50 = (sizetype) pos_92;
  _51 = dataPtr_84(D) + _50;
  _52 = *_51;
  _53 = (unsigned char) mask_91;
  _54 = ~_53;
  _55 = _52 & _54;
  _56 = (unsigned char) Val_90;
  _57 = (unsigned char) mask_91;
  _58 = _56 & _57;
  _59 = (sizetype) pos_92;
  _60 = dataPtr_84(D) + _59;
  _61 = _55 | _58;
  *_60 = _61;

  <bb 8> :
  # valueChanged_66 = PHI <valueChanged_64(4), valueChanged_65(7)>
  # Val_67 = PHI <Val_82(4), Val_90(7)>
  # mask_68 = PHI <mask_81(4), mask_91(7)>
  # pos_69 = PHI <pos_79(4), pos_92(7)>
  # DEBUG pos => pos_69
  # DEBUG mask => mask_68
  # DEBUG Val => Val_67
  # DEBUG valueChanged => valueChanged_66
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_68 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _62 = IntDataPtr_88(D)->trigger;
  _63 = valueChanged_66 | _62;
  IntDataPtr_88(D)->trigger = _63;
  return;

}


Com_EB_Write_08_SX_EL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned short pos.76_41;
  unsigned short _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  sizetype _56;
  uint8 * _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  sizetype _65;
  uint8 * _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_74 = 0;
  # DEBUG valueChanged => valueChanged_74
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_76(D)];
  Val_77 = (uint16) _1;
  # DEBUG Val => Val_77
  # DEBUG BEGIN_STMT
  mask_78 = 255;
  # DEBUG mask => mask_78
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_79(D)->ComSignalPositionInBit;
  row_80 = _2 / 8;
  # DEBUG row => row_80
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_79(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_81 = _4 & 7;
  # DEBUG col => col_81
  # DEBUG BEGIN_STMT
  pos_82 = (sint16) row_80;
  # DEBUG pos => pos_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_78;
  _6 = Com_EB_WritePropPtr_79(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_83 = (uint16) _9;
  # DEBUG mask => mask_83
  # DEBUG BEGIN_STMT
  _10 = (int) mask_83;
  _11 = (int) col_81;
  _12 = _10 << _11;
  mask_84 = (uint16) _12;
  # DEBUG mask => mask_84
  # DEBUG BEGIN_STMT
  _13 = (int) Val_77;
  _14 = (int) col_81;
  _15 = _13 << _14;
  Val_85 = (uint16) _15;
  # DEBUG Val => Val_85
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_82;
  _17 = dataPtr_87(D) + _16;
  _18 = *_17;
  _19 = (sizetype) pos_82;
  _20 = dataPtr_87(D) + _19;
  _21 = *_20;
  _22 = (unsigned char) mask_84;
  _23 = ~_22;
  _24 = _21 & _23;
  _25 = (unsigned char) Val_85;
  _26 = (unsigned char) mask_84;
  _27 = _25 & _26;
  _28 = _24 | _27;
  if (_18 != _28)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_88 = 1;
  # DEBUG valueChanged => valueChanged_88

  <bb 4> :
  # valueChanged_70 = PHI <valueChanged_74(2), valueChanged_88(3)>
  # DEBUG valueChanged => valueChanged_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = (sizetype) pos_82;
  _30 = dataPtr_87(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_84;
  _33 = ~_32;
  _34 = _31 & _33;
  _35 = (unsigned char) Val_85;
  _36 = (unsigned char) mask_84;
  _37 = _35 & _36;
  _38 = (sizetype) pos_82;
  _39 = dataPtr_87(D) + _38;
  _40 = _34 | _37;
  *_39 = _40;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_84 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_90 = Val_85 >> 8;
  # DEBUG Val => Val_90
  # DEBUG BEGIN_STMT
  mask_91 = mask_84 >> 8;
  # DEBUG mask => mask_91
  # DEBUG BEGIN_STMT
  pos.76_41 = (unsigned short) pos_82;
  _42 = pos.76_41 + 1;
  pos_92 = (sint16) _42;
  # DEBUG pos => pos_92
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_92;
  _44 = dataPtr_87(D) + _43;
  _45 = *_44;
  _46 = (sizetype) pos_92;
  _47 = dataPtr_87(D) + _46;
  _48 = *_47;
  _49 = (unsigned char) mask_91;
  _50 = ~_49;
  _51 = _48 & _50;
  _52 = (unsigned char) Val_90;
  _53 = (unsigned char) mask_91;
  _54 = _52 & _53;
  _55 = _51 | _54;
  if (_45 != _55)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_93 = 1;
  # DEBUG valueChanged => valueChanged_93

  <bb 7> :
  # valueChanged_71 = PHI <valueChanged_70(5), valueChanged_93(6)>
  # DEBUG valueChanged => valueChanged_71
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _56 = (sizetype) pos_92;
  _57 = dataPtr_87(D) + _56;
  _58 = *_57;
  _59 = (unsigned char) mask_91;
  _60 = ~_59;
  _61 = _58 & _60;
  _62 = (unsigned char) Val_90;
  _63 = (unsigned char) mask_91;
  _64 = _62 & _63;
  _65 = (sizetype) pos_92;
  _66 = dataPtr_87(D) + _65;
  _67 = _61 | _64;
  *_66 = _67;

  <bb 8> :
  # valueChanged_72 = PHI <valueChanged_70(4), valueChanged_71(7)>
  # DEBUG valueChanged => valueChanged_72
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _68 = IntDataPtr_96(D)->trigger;
  _69 = valueChanged_72 | _68;
  IntDataPtr_96(D)->trigger = _69;
  return;

}


Com_EB_Write_AY_S0_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  const uint8 * _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int ii.77_10;
  short unsigned int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_14 = 0;
  # DEBUG ii => ii_14
  # DEBUG BEGIN_STMT
  U8Ptr_16 = SignalDataPtr_15(D);
  # DEBUG U8Ptr => U8Ptr_16
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> :
  # ii_12 = PHI <ii_14(2), ii_23(3)>
  # DEBUG ii => ii_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_19(D)->ComSignalPositionInBit;
  _2 = Com_EB_WritePropPtr_19(D)->ComSignalBase.ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_12;
  pos_20 = _4 + 65535;
  # DEBUG pos => pos_20
  # DEBUG BEGIN_STMT
  _5 = (sizetype) ii_12;
  _6 = U8Ptr_16 + _5;
  _7 = (sizetype) pos_20;
  _8 = dataPtr_21(D) + _7;
  _9 = *_6;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  ii.77_10 = ii_12;
  ii_23 = ii.77_10 + 1;
  # DEBUG ii => ii_23
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_19(D)->ComSignalBase.ComBitSize;
  if (ii_23 < _11)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_64_SX_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_EL_DUB_DOC_E2 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_32_SX_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  short unsigned int _22;
  unsigned char _23;
  unsigned short pos.78_24;
  unsigned short _25;
  int _26;
  sizetype _27;
  uint8 * _28;
  unsigned char _29;
  unsigned char ssize.79_30;
  unsigned char _31;
  unsigned short pos.80_32;
  unsigned short _33;
  unsigned char _34;
  int _35;
  unsigned int _36;
  sizetype _37;
  uint8 * _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  putvalue_57 = (uint8) Val_56;
  # DEBUG putvalue => putvalue_57
  # DEBUG BEGIN_STMT
  mask_58 = 4294967295;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  space_59 = 8;
  # DEBUG space => space_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_60(D)->ComSignalPositionInBit;
  row_61 = _1 / 8;
  # DEBUG row => row_61
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_60(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_62 = _3 & 7;
  # DEBUG col => col_62
  # DEBUG BEGIN_STMT
  pos_63 = (sint16) row_61;
  # DEBUG pos => pos_63
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_64 = space_59 - col_62;
  # DEBUG space => space_64
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_60(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_65 = mask_58 >> _6;
  # DEBUG mask => mask_65
  # DEBUG BEGIN_STMT
  _7 = (int) col_62;
  mask_66 = mask_65 << _7;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_57;
  _9 = (int) col_62;
  _10 = _8 << _9;
  putvalue_67 = (uint8) _10;
  # DEBUG putvalue => putvalue_67
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = (sizetype) pos_63;
  _12 = dataPtr_69(D) + _11;
  _13 = *_12;
  _14 = (unsigned char) mask_66;
  _15 = ~_14;
  _16 = _13 & _15;
  _17 = (unsigned char) mask_66;
  _18 = putvalue_67 & _17;
  _19 = (sizetype) pos_63;
  _20 = dataPtr_69(D) + _19;
  _21 = _16 | _18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  _22 = Com_EB_WritePropPtr_60(D)->ComSignalBase.ComBitSize;
  _23 = (unsigned char) _22;
  tmp_val_71 = _23 - space_64;
  # DEBUG tmp_val => tmp_val_71
  # DEBUG BEGIN_STMT
  ssize_72 = (sint8) tmp_val_71;
  # DEBUG ssize => ssize_72
  # DEBUG BEGIN_STMT
  pos.78_24 = (unsigned short) pos_63;
  _25 = pos.78_24 + 65535;
  pos_73 = (sint16) _25;
  # DEBUG pos => pos_73
  # DEBUG BEGIN_STMT
  _26 = (int) space_64;
  Val_74 = Val_56 >> _26;
  # DEBUG Val => Val_74
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _27 = (sizetype) pos_51;
  _28 = dataPtr_69(D) + _27;
  _29 = (unsigned char) Val_49;
  *_28 = _29;
  # DEBUG BEGIN_STMT
  Val_81 = Val_49 >> 8;
  # DEBUG Val => Val_81
  # DEBUG BEGIN_STMT
  ssize.79_30 = (unsigned char) ssize_50;
  _31 = ssize.79_30 + 248;
  ssize_82 = (sint8) _31;
  # DEBUG ssize => ssize_82
  # DEBUG BEGIN_STMT
  pos.80_32 = (unsigned short) pos_51;
  _33 = pos.80_32 + 65535;
  pos_83 = (sint16) _33;
  # DEBUG pos => pos_83

  <bb 4> :
  # Val_49 = PHI <Val_74(2), Val_81(3)>
  # ssize_50 = PHI <ssize_72(2), ssize_82(3)>
  # pos_51 = PHI <pos_73(2), pos_83(3)>
  # DEBUG pos => pos_51
  # DEBUG ssize => ssize_50
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  if (ssize_50 > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ssize_50 > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ssize_hlp_75 = (uint8) ssize_50;
  # DEBUG ssize_hlp => ssize_hlp_75
  # DEBUG BEGIN_STMT
  _34 = 8 - ssize_hlp_75;
  _35 = (int) _34;
  _36 = 255 >> _35;
  mask_u8_76 = (uint8) _36;
  # DEBUG mask_u8 => mask_u8_76
  # DEBUG BEGIN_STMT
  mask_77 = (uint32) mask_u8_76;
  # DEBUG mask => mask_77
  # DEBUG BEGIN_STMT
  _37 = (sizetype) pos_51;
  _38 = dataPtr_69(D) + _37;
  _39 = *_38;
  _40 = (unsigned char) mask_77;
  _41 = ~_40;
  _42 = _39 & _41;
  _43 = (unsigned char) Val_49;
  _44 = (unsigned char) mask_77;
  _45 = _43 & _44;
  _46 = (sizetype) pos_51;
  _47 = dataPtr_69(D) + _46;
  _48 = _42 | _45;
  *_47 = _48;

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_16_SX_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  unsigned short pos.81_22;
  unsigned short _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_41(D)];
  Val_42 = (uint32) _1;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  mask_43 = 65535;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_44(D)->ComSignalPositionInBit;
  row_45 = _2 / 8;
  # DEBUG row => row_45
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_44(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_46 = _4 & 7;
  # DEBUG col => col_46
  # DEBUG BEGIN_STMT
  pos_47 = (sint16) row_45;
  # DEBUG pos => pos_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_44(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_48 = mask_43 >> _7;
  # DEBUG mask => mask_48
  # DEBUG BEGIN_STMT
  _8 = (int) col_46;
  mask_49 = mask_48 << _8;
  # DEBUG mask => mask_49
  # DEBUG BEGIN_STMT
  _9 = (int) col_46;
  Val_50 = Val_42 << _9;
  # DEBUG Val => Val_50
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = (sizetype) pos_47;
  _11 = dataPtr_52(D) + _10;
  _12 = *_11;
  _13 = (unsigned char) mask_49;
  _14 = ~_13;
  _15 = _12 & _14;
  _16 = (unsigned char) Val_50;
  _17 = (unsigned char) mask_49;
  _18 = _16 & _17;
  _19 = (sizetype) pos_47;
  _20 = dataPtr_52(D) + _19;
  _21 = _15 | _18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_55 = Val_36 >> 8;
  # DEBUG Val => Val_55
  # DEBUG BEGIN_STMT
  mask_56 = mask_37 >> 8;
  # DEBUG mask => mask_56
  # DEBUG BEGIN_STMT
  pos.81_22 = (unsigned short) pos_38;
  _23 = pos.81_22 + 65535;
  pos_57 = (sint16) _23;
  # DEBUG pos => pos_57
  # DEBUG BEGIN_STMT
  _24 = (sizetype) pos_57;
  _25 = dataPtr_52(D) + _24;
  _26 = *_25;
  _27 = (unsigned char) mask_56;
  _28 = ~_27;
  _29 = _26 & _28;
  _30 = (unsigned char) Val_55;
  _31 = (unsigned char) mask_56;
  _32 = _30 & _31;
  _33 = (sizetype) pos_57;
  _34 = dataPtr_52(D) + _33;
  _35 = _29 | _32;
  *_34 = _35;

  <bb 4> :
  # Val_36 = PHI <Val_50(2), Val_55(3)>
  # mask_37 = PHI <mask_49(2), mask_56(3)>
  # pos_38 = PHI <pos_47(2), pos_57(3)>
  # DEBUG pos => pos_38
  # DEBUG mask => mask_37
  # DEBUG Val => Val_36
  # DEBUG BEGIN_STMT
  if (mask_37 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_08_SX_EL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned short pos.82_28;
  unsigned short _29;
  sizetype _30;
  uint8 * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_44(D)];
  Val_45 = (uint16) _1;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  mask_46 = 255;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_47(D)->ComSignalPositionInBit;
  row_48 = _2 / 8;
  # DEBUG row => row_48
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_47(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_49 = _4 & 7;
  # DEBUG col => col_49
  # DEBUG BEGIN_STMT
  pos_50 = (sint16) row_48;
  # DEBUG pos => pos_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_46;
  _6 = Com_EB_WritePropPtr_47(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_51 = (uint16) _9;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  _10 = (int) mask_51;
  _11 = (int) col_49;
  _12 = _10 << _11;
  mask_52 = (uint16) _12;
  # DEBUG mask => mask_52
  # DEBUG BEGIN_STMT
  _13 = (int) Val_45;
  _14 = (int) col_49;
  _15 = _13 << _14;
  Val_53 = (uint16) _15;
  # DEBUG Val => Val_53
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_50;
  _17 = dataPtr_55(D) + _16;
  _18 = *_17;
  _19 = (unsigned char) mask_52;
  _20 = ~_19;
  _21 = _18 & _20;
  _22 = (unsigned char) Val_53;
  _23 = (unsigned char) mask_52;
  _24 = _22 & _23;
  _25 = (sizetype) pos_50;
  _26 = dataPtr_55(D) + _25;
  _27 = _21 | _24;
  *_26 = _27;
  # DEBUG BEGIN_STMT
  if (mask_52 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_57 = Val_53 >> 8;
  # DEBUG Val => Val_57
  # DEBUG BEGIN_STMT
  mask_58 = mask_52 >> 8;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  pos.82_28 = (unsigned short) pos_50;
  _29 = pos.82_28 + 65535;
  pos_59 = (sint16) _29;
  # DEBUG pos => pos_59
  # DEBUG BEGIN_STMT
  _30 = (sizetype) pos_59;
  _31 = dataPtr_55(D) + _30;
  _32 = *_31;
  _33 = (unsigned char) mask_58;
  _34 = ~_33;
  _35 = _32 & _34;
  _36 = (unsigned char) Val_57;
  _37 = (unsigned char) mask_58;
  _38 = _36 & _37;
  _39 = (sizetype) pos_59;
  _40 = dataPtr_55(D) + _39;
  _41 = _35 | _38;
  *_40 = _41;

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S1_EL_DUB_DOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * DataPtr_Start;
  const uint8 * U8Ptr;
  uint32 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  long unsigned int _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_10 = 0;
  # DEBUG ii => ii_10
  # DEBUG BEGIN_STMT
  U8Ptr_12 = SignalDataPtr_11(D);
  # DEBUG U8Ptr => U8Ptr_12
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_14(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  DataPtr_Start_16 = dataPtr_15(D) + _2;
  # DEBUG DataPtr_Start => DataPtr_Start_16
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = U8Ptr_12 + ii_8;
  _4 = DataPtr_Start_16 + ii_8;
  _5 = *_3;
  *_4 = _5;
  # DEBUG BEGIN_STMT
  ii_21 = ii_8 + 1;
  # DEBUG ii => ii_21

  <bb 4> :
  # ii_8 = PHI <ii_10(2), ii_21(3)>
  # DEBUG ii => ii_8
  # DEBUG BEGIN_STMT
  _6 = IntDataPtr_18(D)->arraySize;
  _7 = (long unsigned int) _6;
  if (ii_8 < _7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S0_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  sizetype _4;
  uint8 * _5;
  unsigned char _6;
  short unsigned int ii.83_7;
  short unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_11 = 0;
  # DEBUG ii => ii_11
  # DEBUG BEGIN_STMT
  U8Ptr_13 = SignalDataPtr_12(D);
  # DEBUG U8Ptr => U8Ptr_13
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> :
  # ii_9 = PHI <ii_11(2), ii_20(3)>
  # DEBUG ii => ii_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_16(D)->ComSignalPositionInBit;
  pos_17 = ii_9 + _1;
  # DEBUG pos => pos_17
  # DEBUG BEGIN_STMT
  _2 = (sizetype) ii_9;
  _3 = U8Ptr_13 + _2;
  _4 = (sizetype) pos_17;
  _5 = dataPtr_18(D) + _4;
  _6 = *_3;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  ii.83_7 = ii_9;
  ii_20 = ii.83_7 + 1;
  # DEBUG ii => ii_20
  # DEBUG BEGIN_STMT
  _8 = Com_EB_WritePropPtr_16(D)->ComSignalBase.ComBitSize;
  if (ii_20 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_64_SX_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_EL_DUB_DOC_E1 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_32_SX_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  short unsigned int _22;
  unsigned char _23;
  unsigned short pos.84_24;
  unsigned short _25;
  int _26;
  sizetype _27;
  uint8 * _28;
  unsigned char _29;
  unsigned char ssize.85_30;
  unsigned char _31;
  unsigned short pos.86_32;
  unsigned short _33;
  unsigned char _34;
  int _35;
  unsigned int _36;
  sizetype _37;
  uint8 * _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  putvalue_57 = (uint8) Val_56;
  # DEBUG putvalue => putvalue_57
  # DEBUG BEGIN_STMT
  mask_58 = 4294967295;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  space_59 = 8;
  # DEBUG space => space_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_60(D)->ComSignalPositionInBit;
  row_61 = _1 / 8;
  # DEBUG row => row_61
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_60(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_62 = _3 & 7;
  # DEBUG col => col_62
  # DEBUG BEGIN_STMT
  pos_63 = (sint16) row_61;
  # DEBUG pos => pos_63
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_64 = space_59 - col_62;
  # DEBUG space => space_64
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_60(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_65 = mask_58 >> _6;
  # DEBUG mask => mask_65
  # DEBUG BEGIN_STMT
  _7 = (int) col_62;
  mask_66 = mask_65 << _7;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_57;
  _9 = (int) col_62;
  _10 = _8 << _9;
  putvalue_67 = (uint8) _10;
  # DEBUG putvalue => putvalue_67
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _11 = (sizetype) pos_63;
  _12 = dataPtr_69(D) + _11;
  _13 = *_12;
  _14 = (unsigned char) mask_66;
  _15 = ~_14;
  _16 = _13 & _15;
  _17 = (unsigned char) mask_66;
  _18 = putvalue_67 & _17;
  _19 = (sizetype) pos_63;
  _20 = dataPtr_69(D) + _19;
  _21 = _16 | _18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  _22 = Com_EB_WritePropPtr_60(D)->ComSignalBase.ComBitSize;
  _23 = (unsigned char) _22;
  tmp_val_71 = _23 - space_64;
  # DEBUG tmp_val => tmp_val_71
  # DEBUG BEGIN_STMT
  ssize_72 = (sint8) tmp_val_71;
  # DEBUG ssize => ssize_72
  # DEBUG BEGIN_STMT
  pos.84_24 = (unsigned short) pos_63;
  _25 = pos.84_24 + 1;
  pos_73 = (sint16) _25;
  # DEBUG pos => pos_73
  # DEBUG BEGIN_STMT
  _26 = (int) space_64;
  Val_74 = Val_56 >> _26;
  # DEBUG Val => Val_74
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _27 = (sizetype) pos_51;
  _28 = dataPtr_69(D) + _27;
  _29 = (unsigned char) Val_49;
  *_28 = _29;
  # DEBUG BEGIN_STMT
  Val_81 = Val_49 >> 8;
  # DEBUG Val => Val_81
  # DEBUG BEGIN_STMT
  ssize.85_30 = (unsigned char) ssize_50;
  _31 = ssize.85_30 + 248;
  ssize_82 = (sint8) _31;
  # DEBUG ssize => ssize_82
  # DEBUG BEGIN_STMT
  pos.86_32 = (unsigned short) pos_51;
  _33 = pos.86_32 + 1;
  pos_83 = (sint16) _33;
  # DEBUG pos => pos_83

  <bb 4> :
  # Val_49 = PHI <Val_74(2), Val_81(3)>
  # ssize_50 = PHI <ssize_72(2), ssize_82(3)>
  # pos_51 = PHI <pos_73(2), pos_83(3)>
  # DEBUG pos => pos_51
  # DEBUG ssize => ssize_50
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  if (ssize_50 > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ssize_50 > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ssize_hlp_75 = (uint8) ssize_50;
  # DEBUG ssize_hlp => ssize_hlp_75
  # DEBUG BEGIN_STMT
  _34 = 8 - ssize_hlp_75;
  _35 = (int) _34;
  _36 = 255 >> _35;
  mask_u8_76 = (uint8) _36;
  # DEBUG mask_u8 => mask_u8_76
  # DEBUG BEGIN_STMT
  mask_77 = (uint32) mask_u8_76;
  # DEBUG mask => mask_77
  # DEBUG BEGIN_STMT
  _37 = (sizetype) pos_51;
  _38 = dataPtr_69(D) + _37;
  _39 = *_38;
  _40 = (unsigned char) mask_77;
  _41 = ~_40;
  _42 = _39 & _41;
  _43 = (unsigned char) Val_49;
  _44 = (unsigned char) mask_77;
  _45 = _43 & _44;
  _46 = (sizetype) pos_51;
  _47 = dataPtr_69(D) + _46;
  _48 = _42 | _45;
  *_47 = _48;

  <bb 7> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_16_SX_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  unsigned short pos.87_22;
  unsigned short _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_41(D)];
  Val_42 = (uint32) _1;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  mask_43 = 65535;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_44(D)->ComSignalPositionInBit;
  row_45 = _2 / 8;
  # DEBUG row => row_45
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_44(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_46 = _4 & 7;
  # DEBUG col => col_46
  # DEBUG BEGIN_STMT
  pos_47 = (sint16) row_45;
  # DEBUG pos => pos_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_44(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_48 = mask_43 >> _7;
  # DEBUG mask => mask_48
  # DEBUG BEGIN_STMT
  _8 = (int) col_46;
  mask_49 = mask_48 << _8;
  # DEBUG mask => mask_49
  # DEBUG BEGIN_STMT
  _9 = (int) col_46;
  Val_50 = Val_42 << _9;
  # DEBUG Val => Val_50
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _10 = (sizetype) pos_47;
  _11 = dataPtr_52(D) + _10;
  _12 = *_11;
  _13 = (unsigned char) mask_49;
  _14 = ~_13;
  _15 = _12 & _14;
  _16 = (unsigned char) Val_50;
  _17 = (unsigned char) mask_49;
  _18 = _16 & _17;
  _19 = (sizetype) pos_47;
  _20 = dataPtr_52(D) + _19;
  _21 = _15 | _18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_55 = Val_36 >> 8;
  # DEBUG Val => Val_55
  # DEBUG BEGIN_STMT
  mask_56 = mask_37 >> 8;
  # DEBUG mask => mask_56
  # DEBUG BEGIN_STMT
  pos.87_22 = (unsigned short) pos_38;
  _23 = pos.87_22 + 1;
  pos_57 = (sint16) _23;
  # DEBUG pos => pos_57
  # DEBUG BEGIN_STMT
  _24 = (sizetype) pos_57;
  _25 = dataPtr_52(D) + _24;
  _26 = *_25;
  _27 = (unsigned char) mask_56;
  _28 = ~_27;
  _29 = _26 & _28;
  _30 = (unsigned char) Val_55;
  _31 = (unsigned char) mask_56;
  _32 = _30 & _31;
  _33 = (sizetype) pos_57;
  _34 = dataPtr_52(D) + _33;
  _35 = _29 | _32;
  *_34 = _35;

  <bb 4> :
  # Val_36 = PHI <Val_50(2), Val_55(3)>
  # mask_37 = PHI <mask_49(2), mask_56(3)>
  # pos_38 = PHI <pos_47(2), pos_57(3)>
  # DEBUG pos => pos_38
  # DEBUG mask => mask_37
  # DEBUG Val => Val_36
  # DEBUG BEGIN_STMT
  if (mask_37 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_08_SX_EL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned short pos.88_28;
  unsigned short _29;
  sizetype _30;
  uint8 * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_44(D)];
  Val_45 = (uint16) _1;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  mask_46 = 255;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_47(D)->ComSignalPositionInBit;
  row_48 = _2 / 8;
  # DEBUG row => row_48
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_47(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_49 = _4 & 7;
  # DEBUG col => col_49
  # DEBUG BEGIN_STMT
  pos_50 = (sint16) row_48;
  # DEBUG pos => pos_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_46;
  _6 = Com_EB_WritePropPtr_47(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_51 = (uint16) _9;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  _10 = (int) mask_51;
  _11 = (int) col_49;
  _12 = _10 << _11;
  mask_52 = (uint16) _12;
  # DEBUG mask => mask_52
  # DEBUG BEGIN_STMT
  _13 = (int) Val_45;
  _14 = (int) col_49;
  _15 = _13 << _14;
  Val_53 = (uint16) _15;
  # DEBUG Val => Val_53
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_50;
  _17 = dataPtr_55(D) + _16;
  _18 = *_17;
  _19 = (unsigned char) mask_52;
  _20 = ~_19;
  _21 = _18 & _20;
  _22 = (unsigned char) Val_53;
  _23 = (unsigned char) mask_52;
  _24 = _22 & _23;
  _25 = (sizetype) pos_50;
  _26 = dataPtr_55(D) + _25;
  _27 = _21 | _24;
  *_26 = _27;
  # DEBUG BEGIN_STMT
  if (mask_52 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_57 = Val_53 >> 8;
  # DEBUG Val => Val_57
  # DEBUG BEGIN_STMT
  mask_58 = mask_52 >> 8;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  pos.88_28 = (unsigned short) pos_50;
  _29 = pos.88_28 + 1;
  pos_59 = (sint16) _29;
  # DEBUG pos => pos_59
  # DEBUG BEGIN_STMT
  _30 = (sizetype) pos_59;
  _31 = dataPtr_55(D) + _30;
  _32 = *_31;
  _33 = (unsigned char) mask_58;
  _34 = ~_33;
  _35 = _32 & _34;
  _36 = (unsigned char) Val_57;
  _37 = (unsigned char) mask_58;
  _38 = _36 & _37;
  _39 = (sizetype) pos_59;
  _40 = dataPtr_55(D) + _39;
  _41 = _35 | _38;
  *_40 = _41;

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S0_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  sizetype _20;
  uint8 * _21;
  unsigned char _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  sizetype _26;
  const uint8 * _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  short unsigned int ii.89_31;
  short unsigned int _32;
  unsigned char _33;
  unsigned char _34;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_39 = 0;
  # DEBUG valueChanged => valueChanged_39
  # DEBUG BEGIN_STMT
  ii_40 = 0;
  # DEBUG ii => ii_40
  # DEBUG BEGIN_STMT
  U8Ptr_42 = SignalDataPtr_41(D);
  # DEBUG U8Ptr => U8Ptr_42
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_44(D)->ComUpdateBitPositionInBit;
  _2 = _1 / 8;
  _3 = (sizetype) _2;
  _4 = dataPtr_45(D) + _3;
  _5 = *_4;
  _6 = Com_EB_WritePropPtr_44(D)->ComUpdateBitPositionInBit;
  _7 = (unsigned int) _6;
  _8 = _7 & 7;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = Com_EB_WritePropPtr_44(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_45(D) + _13;
  _15 = _5 | _10;
  *_14 = _15;

  <bb 3> :
  # valueChanged_35 = PHI <valueChanged_39(2), valueChanged_36(5)>
  # ii_37 = PHI <ii_40(2), ii_50(5)>
  # DEBUG ii => ii_37
  # DEBUG valueChanged => valueChanged_35
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_44(D)->ComSignalPositionInBit;
  _17 = Com_EB_WritePropPtr_44(D)->ComSignalBase.ComBitSize;
  _18 = _16 + _17;
  _19 = _18 - ii_37;
  pos_47 = _19 + 65535;
  # DEBUG pos => pos_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _20 = (sizetype) pos_47;
  _21 = dataPtr_45(D) + _20;
  _22 = *_21;
  _23 = (sizetype) ii_37;
  _24 = U8Ptr_42 + _23;
  _25 = *_24;
  if (_22 != _25)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_48 = 1;
  # DEBUG valueChanged => valueChanged_48

  <bb 5> :
  # valueChanged_36 = PHI <valueChanged_35(3), valueChanged_48(4)>
  # DEBUG valueChanged => valueChanged_36
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = (sizetype) ii_37;
  _27 = U8Ptr_42 + _26;
  _28 = (sizetype) pos_47;
  _29 = dataPtr_45(D) + _28;
  _30 = *_27;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii.89_31 = ii_37;
  ii_50 = ii.89_31 + 1;
  # DEBUG ii => ii_50
  # DEBUG BEGIN_STMT
  _32 = Com_EB_WritePropPtr_44(D)->ComSignalBase.ComBitSize;
  if (ii_50 < _32)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _33 = IntDataPtr_51(D)->trigger;
  _34 = valueChanged_36 | _33;
  IntDataPtr_51(D)->trigger = _34;
  return;

}


Com_EB_Write_64_SX_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E2 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned char _20;
  short unsigned int _21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;
  short unsigned int _49;
  unsigned char _50;
  unsigned short pos.90_51;
  unsigned short _52;
  int _53;
  sizetype _54;
  uint8 * _55;
  unsigned char _56;
  unsigned char _57;
  sizetype _58;
  uint8 * _59;
  unsigned char _60;
  unsigned char ssize.91_61;
  unsigned char _62;
  unsigned short pos.92_63;
  unsigned short _64;
  unsigned char _65;
  int _66;
  unsigned int _67;
  sizetype _68;
  uint8 * _69;
  unsigned char _70;
  sizetype _71;
  uint8 * _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  unsigned char _80;
  sizetype _81;
  uint8 * _82;
  unsigned char _83;
  unsigned char _84;
  unsigned char _85;
  unsigned char _86;
  unsigned char _87;
  unsigned char _88;
  unsigned char _89;
  sizetype _90;
  uint8 * _91;
  unsigned char _92;
  unsigned char _93;
  unsigned char _94;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_105 = 0;
  # DEBUG valueChanged => valueChanged_105
  # DEBUG BEGIN_STMT
  Val_108 = MEM[(const uint32 *)SignalDataPtr_107(D)];
  # DEBUG Val => Val_108
  # DEBUG BEGIN_STMT
  putvalue_109 = (uint8) Val_108;
  # DEBUG putvalue => putvalue_109
  # DEBUG BEGIN_STMT
  mask_110 = 4294967295;
  # DEBUG mask => mask_110
  # DEBUG BEGIN_STMT
  space_111 = 8;
  # DEBUG space => space_111
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_112(D)->ComSignalPositionInBit;
  row_113 = _1 / 8;
  # DEBUG row => row_113
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_112(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_114 = _3 & 7;
  # DEBUG col => col_114
  # DEBUG BEGIN_STMT
  pos_115 = (sint16) row_113;
  # DEBUG pos => pos_115
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_116 = space_111 - col_114;
  # DEBUG space => space_116
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_112(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_117 = mask_110 >> _6;
  # DEBUG mask => mask_117
  # DEBUG BEGIN_STMT
  _7 = (int) col_114;
  mask_118 = mask_117 << _7;
  # DEBUG mask => mask_118
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_109;
  _9 = (int) col_114;
  _10 = _8 << _9;
  putvalue_119 = (uint8) _10;
  # DEBUG putvalue => putvalue_119
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_120(D) + _13;
  _15 = *_14;
  _16 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _17 = (unsigned int) _16;
  _18 = _17 & 7;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _22 = _21 / 8;
  _23 = (sizetype) _22;
  _24 = dataPtr_120(D) + _23;
  _25 = _15 | _20;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = (sizetype) pos_115;
  _27 = dataPtr_120(D) + _26;
  _28 = *_27;
  _29 = (sizetype) pos_115;
  _30 = dataPtr_120(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_118;
  _33 = ~_32;
  _34 = _31 & _33;
  _35 = (unsigned char) mask_118;
  _36 = putvalue_119 & _35;
  _37 = _34 | _36;
  if (_28 != _37)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_122 = 1;
  # DEBUG valueChanged => valueChanged_122

  <bb 4> :
  # valueChanged_95 = PHI <valueChanged_105(2), valueChanged_122(3)>
  # DEBUG valueChanged => valueChanged_95
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = (sizetype) pos_115;
  _39 = dataPtr_120(D) + _38;
  _40 = *_39;
  _41 = (unsigned char) mask_118;
  _42 = ~_41;
  _43 = _40 & _42;
  _44 = (unsigned char) mask_118;
  _45 = putvalue_119 & _44;
  _46 = (sizetype) pos_115;
  _47 = dataPtr_120(D) + _46;
  _48 = _43 | _45;
  *_47 = _48;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _49 = Com_EB_WritePropPtr_112(D)->ComSignalBase.ComBitSize;
  _50 = (unsigned char) _49;
  tmp_val_124 = _50 - space_116;
  # DEBUG tmp_val => tmp_val_124
  # DEBUG BEGIN_STMT
  ssize_125 = (sint8) tmp_val_124;
  # DEBUG ssize => ssize_125
  # DEBUG BEGIN_STMT
  pos.90_51 = (unsigned short) pos_115;
  _52 = pos.90_51 + 65535;
  pos_126 = (sint16) _52;
  # DEBUG pos => pos_126
  # DEBUG BEGIN_STMT
  _53 = (int) space_116;
  Val_127 = Val_108 >> _53;
  # DEBUG Val => Val_127
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _54 = (sizetype) pos_102;
  _55 = dataPtr_120(D) + _54;
  _56 = *_55;
  _57 = (unsigned char) Val_100;
  if (_56 != _57)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_135 = 1;
  # DEBUG valueChanged => valueChanged_135

  <bb 7> :
  # valueChanged_96 = PHI <valueChanged_97(5), valueChanged_135(6)>
  # DEBUG valueChanged => valueChanged_96
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = (sizetype) pos_102;
  _59 = dataPtr_120(D) + _58;
  _60 = (unsigned char) Val_100;
  *_59 = _60;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_137 = Val_100 >> 8;
  # DEBUG Val => Val_137
  # DEBUG BEGIN_STMT
  ssize.91_61 = (unsigned char) ssize_101;
  _62 = ssize.91_61 + 248;
  ssize_138 = (sint8) _62;
  # DEBUG ssize => ssize_138
  # DEBUG BEGIN_STMT
  pos.92_63 = (unsigned short) pos_102;
  _64 = pos.92_63 + 65535;
  pos_139 = (sint16) _64;
  # DEBUG pos => pos_139

  <bb 8> :
  # valueChanged_97 = PHI <valueChanged_95(4), valueChanged_96(7)>
  # Val_100 = PHI <Val_127(4), Val_137(7)>
  # ssize_101 = PHI <ssize_125(4), ssize_138(7)>
  # pos_102 = PHI <pos_126(4), pos_139(7)>
  # DEBUG pos => pos_102
  # DEBUG ssize => ssize_101
  # DEBUG Val => Val_100
  # DEBUG valueChanged => valueChanged_97
  # DEBUG BEGIN_STMT
  if (ssize_101 > 7)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (ssize_101 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ssize_hlp_128 = (uint8) ssize_101;
  # DEBUG ssize_hlp => ssize_hlp_128
  # DEBUG BEGIN_STMT
  _65 = 8 - ssize_hlp_128;
  _66 = (int) _65;
  _67 = 255 >> _66;
  mask_u8_129 = (uint8) _67;
  # DEBUG mask_u8 => mask_u8_129
  # DEBUG BEGIN_STMT
  mask_130 = (uint32) mask_u8_129;
  # DEBUG mask => mask_130
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _68 = (sizetype) pos_102;
  _69 = dataPtr_120(D) + _68;
  _70 = *_69;
  _71 = (sizetype) pos_102;
  _72 = dataPtr_120(D) + _71;
  _73 = *_72;
  _74 = (unsigned char) mask_130;
  _75 = ~_74;
  _76 = _73 & _75;
  _77 = (unsigned char) Val_100;
  _78 = (unsigned char) mask_130;
  _79 = _77 & _78;
  _80 = _76 | _79;
  if (_70 != _80)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  valueChanged_131 = 1;
  # DEBUG valueChanged => valueChanged_131

  <bb 12> :
  # valueChanged_98 = PHI <valueChanged_97(10), valueChanged_131(11)>
  # DEBUG valueChanged => valueChanged_98
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _81 = (sizetype) pos_102;
  _82 = dataPtr_120(D) + _81;
  _83 = *_82;
  _84 = (unsigned char) mask_130;
  _85 = ~_84;
  _86 = _83 & _85;
  _87 = (unsigned char) Val_100;
  _88 = (unsigned char) mask_130;
  _89 = _87 & _88;
  _90 = (sizetype) pos_102;
  _91 = dataPtr_120(D) + _90;
  _92 = _86 | _89;
  *_91 = _92;

  <bb 13> :
  # valueChanged_99 = PHI <valueChanged_97(9), valueChanged_98(12)>
  # DEBUG valueChanged => valueChanged_99
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _93 = IntDataPtr_133(D)->trigger;
  _94 = valueChanged_99 | _93;
  IntDataPtr_133(D)->trigger = _94;
  return;

}


Com_EB_Write_16_SX_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  sizetype _47;
  uint8 * _48;
  unsigned char _49;
  unsigned short pos.93_50;
  unsigned short _51;
  sizetype _52;
  uint8 * _53;
  unsigned char _54;
  sizetype _55;
  uint8 * _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  sizetype _65;
  uint8 * _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  sizetype _74;
  uint8 * _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_86 = 0;
  # DEBUG valueChanged => valueChanged_86
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_88(D)];
  Val_89 = (uint32) _1;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  mask_90 = 65535;
  # DEBUG mask => mask_90
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_91(D)->ComSignalPositionInBit;
  row_92 = _2 / 8;
  # DEBUG row => row_92
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_91(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_93 = _4 & 7;
  # DEBUG col => col_93
  # DEBUG BEGIN_STMT
  pos_94 = (sint16) row_92;
  # DEBUG pos => pos_94
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_91(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_95 = mask_90 >> _7;
  # DEBUG mask => mask_95
  # DEBUG BEGIN_STMT
  _8 = (int) col_93;
  mask_96 = mask_95 << _8;
  # DEBUG mask => mask_96
  # DEBUG BEGIN_STMT
  _9 = (int) col_93;
  Val_97 = Val_89 << _9;
  # DEBUG Val => Val_97
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _11 = _10 / 8;
  _12 = (sizetype) _11;
  _13 = dataPtr_98(D) + _12;
  _14 = *_13;
  _15 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _16 = (unsigned int) _15;
  _17 = _16 & 7;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _20 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _21 = _20 / 8;
  _22 = (sizetype) _21;
  _23 = dataPtr_98(D) + _22;
  _24 = _14 | _19;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_94;
  _26 = dataPtr_98(D) + _25;
  _27 = *_26;
  _28 = (sizetype) pos_94;
  _29 = dataPtr_98(D) + _28;
  _30 = *_29;
  _31 = (unsigned char) mask_96;
  _32 = ~_31;
  _33 = _30 & _32;
  _34 = (unsigned char) Val_97;
  _35 = (unsigned char) mask_96;
  _36 = _34 & _35;
  _37 = _33 | _36;
  if (_27 != _37)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_100 = 1;
  # DEBUG valueChanged => valueChanged_100

  <bb 4> :
  # valueChanged_79 = PHI <valueChanged_86(2), valueChanged_100(3)>
  # DEBUG valueChanged => valueChanged_79
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = (sizetype) pos_94;
  _39 = dataPtr_98(D) + _38;
  _40 = *_39;
  _41 = (unsigned char) mask_96;
  _42 = ~_41;
  _43 = _40 & _42;
  _44 = (unsigned char) Val_97;
  _45 = (unsigned char) mask_96;
  _46 = _44 & _45;
  _47 = (sizetype) pos_94;
  _48 = dataPtr_98(D) + _47;
  _49 = _43 | _46;
  *_48 = _49;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_104 = Val_82 >> 8;
  # DEBUG Val => Val_104
  # DEBUG BEGIN_STMT
  mask_105 = mask_83 >> 8;
  # DEBUG mask => mask_105
  # DEBUG BEGIN_STMT
  pos.93_50 = (unsigned short) pos_84;
  _51 = pos.93_50 + 65535;
  pos_106 = (sint16) _51;
  # DEBUG pos => pos_106
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _52 = (sizetype) pos_106;
  _53 = dataPtr_98(D) + _52;
  _54 = *_53;
  _55 = (sizetype) pos_106;
  _56 = dataPtr_98(D) + _55;
  _57 = *_56;
  _58 = (unsigned char) mask_105;
  _59 = ~_58;
  _60 = _57 & _59;
  _61 = (unsigned char) Val_104;
  _62 = (unsigned char) mask_105;
  _63 = _61 & _62;
  _64 = _60 | _63;
  if (_54 != _64)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_107 = 1;
  # DEBUG valueChanged => valueChanged_107

  <bb 7> :
  # valueChanged_80 = PHI <valueChanged_81(5), valueChanged_107(6)>
  # DEBUG valueChanged => valueChanged_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _65 = (sizetype) pos_106;
  _66 = dataPtr_98(D) + _65;
  _67 = *_66;
  _68 = (unsigned char) mask_105;
  _69 = ~_68;
  _70 = _67 & _69;
  _71 = (unsigned char) Val_104;
  _72 = (unsigned char) mask_105;
  _73 = _71 & _72;
  _74 = (sizetype) pos_106;
  _75 = dataPtr_98(D) + _74;
  _76 = _70 | _73;
  *_75 = _76;

  <bb 8> :
  # valueChanged_81 = PHI <valueChanged_79(4), valueChanged_80(7)>
  # Val_82 = PHI <Val_97(4), Val_104(7)>
  # mask_83 = PHI <mask_96(4), mask_105(7)>
  # pos_84 = PHI <pos_94(4), pos_106(7)>
  # DEBUG pos => pos_84
  # DEBUG mask => mask_83
  # DEBUG Val => Val_82
  # DEBUG valueChanged => valueChanged_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_83 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _77 = IntDataPtr_102(D)->trigger;
  _78 = valueChanged_81 | _77;
  IntDataPtr_102(D)->trigger = _78;
  return;

}


Com_EB_Write_08_SX_DL_EUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  short unsigned int _26;
  short unsigned int _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  sizetype _44;
  uint8 * _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  sizetype _53;
  uint8 * _54;
  unsigned char _55;
  unsigned short pos.94_56;
  unsigned short _57;
  sizetype _58;
  uint8 * _59;
  unsigned char _60;
  sizetype _61;
  uint8 * _62;
  unsigned char _63;
  unsigned char _64;
  unsigned char _65;
  unsigned char _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  sizetype _71;
  uint8 * _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  sizetype _80;
  uint8 * _81;
  unsigned char _82;
  unsigned char _83;
  unsigned char _84;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_89 = 0;
  # DEBUG valueChanged => valueChanged_89
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_91(D)];
  Val_92 = (uint16) _1;
  # DEBUG Val => Val_92
  # DEBUG BEGIN_STMT
  mask_93 = 255;
  # DEBUG mask => mask_93
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_94(D)->ComSignalPositionInBit;
  row_95 = _2 / 8;
  # DEBUG row => row_95
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_94(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_96 = _4 & 7;
  # DEBUG col => col_96
  # DEBUG BEGIN_STMT
  pos_97 = (sint16) row_95;
  # DEBUG pos => pos_97
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_93;
  _6 = Com_EB_WritePropPtr_94(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_98 = (uint16) _9;
  # DEBUG mask => mask_98
  # DEBUG BEGIN_STMT
  _10 = (int) mask_98;
  _11 = (int) col_96;
  _12 = _10 << _11;
  mask_99 = (uint16) _12;
  # DEBUG mask => mask_99
  # DEBUG BEGIN_STMT
  _13 = (int) Val_92;
  _14 = (int) col_96;
  _15 = _13 << _14;
  Val_100 = (uint16) _15;
  # DEBUG Val => Val_100
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _17 = _16 / 8;
  _18 = (sizetype) _17;
  _19 = dataPtr_101(D) + _18;
  _20 = *_19;
  _21 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = 1 << _23;
  _25 = (unsigned char) _24;
  _26 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _27 = _26 / 8;
  _28 = (sizetype) _27;
  _29 = dataPtr_101(D) + _28;
  _30 = _20 | _25;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = (sizetype) pos_97;
  _32 = dataPtr_101(D) + _31;
  _33 = *_32;
  _34 = (sizetype) pos_97;
  _35 = dataPtr_101(D) + _34;
  _36 = *_35;
  _37 = (unsigned char) mask_99;
  _38 = ~_37;
  _39 = _36 & _38;
  _40 = (unsigned char) Val_100;
  _41 = (unsigned char) mask_99;
  _42 = _40 & _41;
  _43 = _39 | _42;
  if (_33 != _43)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_103 = 1;
  # DEBUG valueChanged => valueChanged_103

  <bb 4> :
  # valueChanged_85 = PHI <valueChanged_89(2), valueChanged_103(3)>
  # DEBUG valueChanged => valueChanged_85
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _44 = (sizetype) pos_97;
  _45 = dataPtr_101(D) + _44;
  _46 = *_45;
  _47 = (unsigned char) mask_99;
  _48 = ~_47;
  _49 = _46 & _48;
  _50 = (unsigned char) Val_100;
  _51 = (unsigned char) mask_99;
  _52 = _50 & _51;
  _53 = (sizetype) pos_97;
  _54 = dataPtr_101(D) + _53;
  _55 = _49 | _52;
  *_54 = _55;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_99 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_105 = Val_100 >> 8;
  # DEBUG Val => Val_105
  # DEBUG BEGIN_STMT
  mask_106 = mask_99 >> 8;
  # DEBUG mask => mask_106
  # DEBUG BEGIN_STMT
  pos.94_56 = (unsigned short) pos_97;
  _57 = pos.94_56 + 65535;
  pos_107 = (sint16) _57;
  # DEBUG pos => pos_107
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = (sizetype) pos_107;
  _59 = dataPtr_101(D) + _58;
  _60 = *_59;
  _61 = (sizetype) pos_107;
  _62 = dataPtr_101(D) + _61;
  _63 = *_62;
  _64 = (unsigned char) mask_106;
  _65 = ~_64;
  _66 = _63 & _65;
  _67 = (unsigned char) Val_105;
  _68 = (unsigned char) mask_106;
  _69 = _67 & _68;
  _70 = _66 | _69;
  if (_60 != _70)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_108 = 1;
  # DEBUG valueChanged => valueChanged_108

  <bb 7> :
  # valueChanged_86 = PHI <valueChanged_85(5), valueChanged_108(6)>
  # DEBUG valueChanged => valueChanged_86
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _71 = (sizetype) pos_107;
  _72 = dataPtr_101(D) + _71;
  _73 = *_72;
  _74 = (unsigned char) mask_106;
  _75 = ~_74;
  _76 = _73 & _75;
  _77 = (unsigned char) Val_105;
  _78 = (unsigned char) mask_106;
  _79 = _77 & _78;
  _80 = (sizetype) pos_107;
  _81 = dataPtr_101(D) + _80;
  _82 = _76 | _79;
  *_81 = _82;

  <bb 8> :
  # valueChanged_87 = PHI <valueChanged_85(4), valueChanged_86(7)>
  # DEBUG valueChanged => valueChanged_87
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _83 = IntDataPtr_110(D)->trigger;
  _84 = valueChanged_87 | _83;
  IntDataPtr_110(D)->trigger = _84;
  return;

}


Com_EB_Write_AY_S1_DL_EUB_EOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * DataPtr_Start;
  const uint8 * U8Ptr;
  uint32 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned char _12;
  short unsigned int _13;
  short unsigned int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  uint8 * _18;
  unsigned char _19;
  const uint8 * _20;
  unsigned char _21;
  const uint8 * _22;
  uint8 * _23;
  unsigned char _24;
  short unsigned int _25;
  long unsigned int _26;
  unsigned char _27;
  unsigned char _28;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_33 = 0;
  # DEBUG valueChanged => valueChanged_33
  # DEBUG BEGIN_STMT
  ii_34 = 0;
  # DEBUG ii => ii_34
  # DEBUG BEGIN_STMT
  U8Ptr_36 = SignalDataPtr_35(D);
  # DEBUG U8Ptr => U8Ptr_36
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_38(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  DataPtr_Start_40 = dataPtr_39(D) + _2;
  # DEBUG DataPtr_Start => DataPtr_Start_40
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_38(D)->ComUpdateBitPositionInBit;
  _4 = _3 / 8;
  _5 = (sizetype) _4;
  _6 = dataPtr_39(D) + _5;
  _7 = *_6;
  _8 = Com_EB_WritePropPtr_38(D)->ComUpdateBitPositionInBit;
  _9 = (unsigned int) _8;
  _10 = _9 & 7;
  _11 = 1 << _10;
  _12 = (unsigned char) _11;
  _13 = Com_EB_WritePropPtr_38(D)->ComUpdateBitPositionInBit;
  _14 = _13 / 8;
  _15 = (sizetype) _14;
  _16 = dataPtr_39(D) + _15;
  _17 = _7 | _12;
  *_16 = _17;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _18 = DataPtr_Start_40 + ii_31;
  _19 = *_18;
  _20 = U8Ptr_36 + ii_31;
  _21 = *_20;
  if (_19 != _21)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_44 = 1;
  # DEBUG valueChanged => valueChanged_44

  <bb 5> :
  # valueChanged_29 = PHI <valueChanged_30(3), valueChanged_44(4)>
  # DEBUG valueChanged => valueChanged_29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = U8Ptr_36 + ii_31;
  _23 = DataPtr_Start_40 + ii_31;
  _24 = *_22;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_46 = ii_31 + 1;
  # DEBUG ii => ii_46

  <bb 6> :
  # valueChanged_30 = PHI <valueChanged_33(2), valueChanged_29(5)>
  # ii_31 = PHI <ii_34(2), ii_46(5)>
  # DEBUG ii => ii_31
  # DEBUG valueChanged => valueChanged_30
  # DEBUG BEGIN_STMT
  _25 = IntDataPtr_42(D)->arraySize;
  _26 = (long unsigned int) _25;
  if (ii_31 < _26)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _27 = IntDataPtr_42(D)->trigger;
  _28 = valueChanged_30 | _27;
  IntDataPtr_42(D)->trigger = _28;
  return;

}


Com_EB_Write_AY_S0_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  sizetype _17;
  uint8 * _18;
  unsigned char _19;
  sizetype _20;
  const uint8 * _21;
  unsigned char _22;
  sizetype _23;
  const uint8 * _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  short unsigned int ii.95_28;
  short unsigned int _29;
  unsigned char _30;
  unsigned char _31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_36 = 0;
  # DEBUG valueChanged => valueChanged_36
  # DEBUG BEGIN_STMT
  ii_37 = 0;
  # DEBUG ii => ii_37
  # DEBUG BEGIN_STMT
  U8Ptr_39 = SignalDataPtr_38(D);
  # DEBUG U8Ptr => U8Ptr_39
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_41(D)->ComUpdateBitPositionInBit;
  _2 = _1 / 8;
  _3 = (sizetype) _2;
  _4 = dataPtr_42(D) + _3;
  _5 = *_4;
  _6 = Com_EB_WritePropPtr_41(D)->ComUpdateBitPositionInBit;
  _7 = (unsigned int) _6;
  _8 = _7 & 7;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = Com_EB_WritePropPtr_41(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_42(D) + _13;
  _15 = _5 | _10;
  *_14 = _15;

  <bb 3> :
  # valueChanged_32 = PHI <valueChanged_36(2), valueChanged_33(5)>
  # ii_34 = PHI <ii_37(2), ii_47(5)>
  # DEBUG ii => ii_34
  # DEBUG valueChanged => valueChanged_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_41(D)->ComSignalPositionInBit;
  pos_44 = ii_34 + _16;
  # DEBUG pos => pos_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _17 = (sizetype) pos_44;
  _18 = dataPtr_42(D) + _17;
  _19 = *_18;
  _20 = (sizetype) ii_34;
  _21 = U8Ptr_39 + _20;
  _22 = *_21;
  if (_19 != _22)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_45 = 1;
  # DEBUG valueChanged => valueChanged_45

  <bb 5> :
  # valueChanged_33 = PHI <valueChanged_32(3), valueChanged_45(4)>
  # DEBUG valueChanged => valueChanged_33
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) ii_34;
  _24 = U8Ptr_39 + _23;
  _25 = (sizetype) pos_44;
  _26 = dataPtr_42(D) + _25;
  _27 = *_24;
  *_26 = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii.95_28 = ii_34;
  ii_47 = ii.95_28 + 1;
  # DEBUG ii => ii_47
  # DEBUG BEGIN_STMT
  _29 = Com_EB_WritePropPtr_41(D)->ComSignalBase.ComBitSize;
  if (ii_47 < _29)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _30 = IntDataPtr_48(D)->trigger;
  _31 = valueChanged_33 | _30;
  IntDataPtr_48(D)->trigger = _31;
  return;

}


Com_EB_Write_64_SX_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_EOC_E1 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned char _20;
  short unsigned int _21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;
  short unsigned int _49;
  unsigned char _50;
  unsigned short pos.96_51;
  unsigned short _52;
  int _53;
  sizetype _54;
  uint8 * _55;
  unsigned char _56;
  unsigned char _57;
  sizetype _58;
  uint8 * _59;
  unsigned char _60;
  unsigned char ssize.97_61;
  unsigned char _62;
  unsigned short pos.98_63;
  unsigned short _64;
  unsigned char _65;
  int _66;
  unsigned int _67;
  sizetype _68;
  uint8 * _69;
  unsigned char _70;
  sizetype _71;
  uint8 * _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  unsigned char _80;
  sizetype _81;
  uint8 * _82;
  unsigned char _83;
  unsigned char _84;
  unsigned char _85;
  unsigned char _86;
  unsigned char _87;
  unsigned char _88;
  unsigned char _89;
  sizetype _90;
  uint8 * _91;
  unsigned char _92;
  unsigned char _93;
  unsigned char _94;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_105 = 0;
  # DEBUG valueChanged => valueChanged_105
  # DEBUG BEGIN_STMT
  Val_108 = MEM[(const uint32 *)SignalDataPtr_107(D)];
  # DEBUG Val => Val_108
  # DEBUG BEGIN_STMT
  putvalue_109 = (uint8) Val_108;
  # DEBUG putvalue => putvalue_109
  # DEBUG BEGIN_STMT
  mask_110 = 4294967295;
  # DEBUG mask => mask_110
  # DEBUG BEGIN_STMT
  space_111 = 8;
  # DEBUG space => space_111
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_112(D)->ComSignalPositionInBit;
  row_113 = _1 / 8;
  # DEBUG row => row_113
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_112(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_114 = _3 & 7;
  # DEBUG col => col_114
  # DEBUG BEGIN_STMT
  pos_115 = (sint16) row_113;
  # DEBUG pos => pos_115
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_116 = space_111 - col_114;
  # DEBUG space => space_116
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_112(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_117 = mask_110 >> _6;
  # DEBUG mask => mask_117
  # DEBUG BEGIN_STMT
  _7 = (int) col_114;
  mask_118 = mask_117 << _7;
  # DEBUG mask => mask_118
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_109;
  _9 = (int) col_114;
  _10 = _8 << _9;
  putvalue_119 = (uint8) _10;
  # DEBUG putvalue => putvalue_119
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_120(D) + _13;
  _15 = *_14;
  _16 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _17 = (unsigned int) _16;
  _18 = _17 & 7;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = Com_EB_WritePropPtr_112(D)->ComUpdateBitPositionInBit;
  _22 = _21 / 8;
  _23 = (sizetype) _22;
  _24 = dataPtr_120(D) + _23;
  _25 = _15 | _20;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 = (sizetype) pos_115;
  _27 = dataPtr_120(D) + _26;
  _28 = *_27;
  _29 = (sizetype) pos_115;
  _30 = dataPtr_120(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_118;
  _33 = ~_32;
  _34 = _31 & _33;
  _35 = (unsigned char) mask_118;
  _36 = putvalue_119 & _35;
  _37 = _34 | _36;
  if (_28 != _37)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_122 = 1;
  # DEBUG valueChanged => valueChanged_122

  <bb 4> :
  # valueChanged_95 = PHI <valueChanged_105(2), valueChanged_122(3)>
  # DEBUG valueChanged => valueChanged_95
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = (sizetype) pos_115;
  _39 = dataPtr_120(D) + _38;
  _40 = *_39;
  _41 = (unsigned char) mask_118;
  _42 = ~_41;
  _43 = _40 & _42;
  _44 = (unsigned char) mask_118;
  _45 = putvalue_119 & _44;
  _46 = (sizetype) pos_115;
  _47 = dataPtr_120(D) + _46;
  _48 = _43 | _45;
  *_47 = _48;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _49 = Com_EB_WritePropPtr_112(D)->ComSignalBase.ComBitSize;
  _50 = (unsigned char) _49;
  tmp_val_124 = _50 - space_116;
  # DEBUG tmp_val => tmp_val_124
  # DEBUG BEGIN_STMT
  ssize_125 = (sint8) tmp_val_124;
  # DEBUG ssize => ssize_125
  # DEBUG BEGIN_STMT
  pos.96_51 = (unsigned short) pos_115;
  _52 = pos.96_51 + 1;
  pos_126 = (sint16) _52;
  # DEBUG pos => pos_126
  # DEBUG BEGIN_STMT
  _53 = (int) space_116;
  Val_127 = Val_108 >> _53;
  # DEBUG Val => Val_127
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _54 = (sizetype) pos_102;
  _55 = dataPtr_120(D) + _54;
  _56 = *_55;
  _57 = (unsigned char) Val_100;
  if (_56 != _57)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_135 = 1;
  # DEBUG valueChanged => valueChanged_135

  <bb 7> :
  # valueChanged_96 = PHI <valueChanged_97(5), valueChanged_135(6)>
  # DEBUG valueChanged => valueChanged_96
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = (sizetype) pos_102;
  _59 = dataPtr_120(D) + _58;
  _60 = (unsigned char) Val_100;
  *_59 = _60;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_137 = Val_100 >> 8;
  # DEBUG Val => Val_137
  # DEBUG BEGIN_STMT
  ssize.97_61 = (unsigned char) ssize_101;
  _62 = ssize.97_61 + 248;
  ssize_138 = (sint8) _62;
  # DEBUG ssize => ssize_138
  # DEBUG BEGIN_STMT
  pos.98_63 = (unsigned short) pos_102;
  _64 = pos.98_63 + 1;
  pos_139 = (sint16) _64;
  # DEBUG pos => pos_139

  <bb 8> :
  # valueChanged_97 = PHI <valueChanged_95(4), valueChanged_96(7)>
  # Val_100 = PHI <Val_127(4), Val_137(7)>
  # ssize_101 = PHI <ssize_125(4), ssize_138(7)>
  # pos_102 = PHI <pos_126(4), pos_139(7)>
  # DEBUG pos => pos_102
  # DEBUG ssize => ssize_101
  # DEBUG Val => Val_100
  # DEBUG valueChanged => valueChanged_97
  # DEBUG BEGIN_STMT
  if (ssize_101 > 7)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (ssize_101 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ssize_hlp_128 = (uint8) ssize_101;
  # DEBUG ssize_hlp => ssize_hlp_128
  # DEBUG BEGIN_STMT
  _65 = 8 - ssize_hlp_128;
  _66 = (int) _65;
  _67 = 255 >> _66;
  mask_u8_129 = (uint8) _67;
  # DEBUG mask_u8 => mask_u8_129
  # DEBUG BEGIN_STMT
  mask_130 = (uint32) mask_u8_129;
  # DEBUG mask => mask_130
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _68 = (sizetype) pos_102;
  _69 = dataPtr_120(D) + _68;
  _70 = *_69;
  _71 = (sizetype) pos_102;
  _72 = dataPtr_120(D) + _71;
  _73 = *_72;
  _74 = (unsigned char) mask_130;
  _75 = ~_74;
  _76 = _73 & _75;
  _77 = (unsigned char) Val_100;
  _78 = (unsigned char) mask_130;
  _79 = _77 & _78;
  _80 = _76 | _79;
  if (_70 != _80)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  valueChanged_131 = 1;
  # DEBUG valueChanged => valueChanged_131

  <bb 12> :
  # valueChanged_98 = PHI <valueChanged_97(10), valueChanged_131(11)>
  # DEBUG valueChanged => valueChanged_98
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _81 = (sizetype) pos_102;
  _82 = dataPtr_120(D) + _81;
  _83 = *_82;
  _84 = (unsigned char) mask_130;
  _85 = ~_84;
  _86 = _83 & _85;
  _87 = (unsigned char) Val_100;
  _88 = (unsigned char) mask_130;
  _89 = _87 & _88;
  _90 = (sizetype) pos_102;
  _91 = dataPtr_120(D) + _90;
  _92 = _86 | _89;
  *_91 = _92;

  <bb 13> :
  # valueChanged_99 = PHI <valueChanged_97(9), valueChanged_98(12)>
  # DEBUG valueChanged => valueChanged_99
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _93 = IntDataPtr_133(D)->trigger;
  _94 = valueChanged_99 | _93;
  IntDataPtr_133(D)->trigger = _94;
  return;

}


Com_EB_Write_16_SX_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  sizetype _47;
  uint8 * _48;
  unsigned char _49;
  unsigned short pos.99_50;
  unsigned short _51;
  sizetype _52;
  uint8 * _53;
  unsigned char _54;
  sizetype _55;
  uint8 * _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  sizetype _65;
  uint8 * _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  sizetype _74;
  uint8 * _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_86 = 0;
  # DEBUG valueChanged => valueChanged_86
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_88(D)];
  Val_89 = (uint32) _1;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  mask_90 = 65535;
  # DEBUG mask => mask_90
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_91(D)->ComSignalPositionInBit;
  row_92 = _2 / 8;
  # DEBUG row => row_92
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_91(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_93 = _4 & 7;
  # DEBUG col => col_93
  # DEBUG BEGIN_STMT
  pos_94 = (sint16) row_92;
  # DEBUG pos => pos_94
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_91(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_95 = mask_90 >> _7;
  # DEBUG mask => mask_95
  # DEBUG BEGIN_STMT
  _8 = (int) col_93;
  mask_96 = mask_95 << _8;
  # DEBUG mask => mask_96
  # DEBUG BEGIN_STMT
  _9 = (int) col_93;
  Val_97 = Val_89 << _9;
  # DEBUG Val => Val_97
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _11 = _10 / 8;
  _12 = (sizetype) _11;
  _13 = dataPtr_98(D) + _12;
  _14 = *_13;
  _15 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _16 = (unsigned int) _15;
  _17 = _16 & 7;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _20 = Com_EB_WritePropPtr_91(D)->ComUpdateBitPositionInBit;
  _21 = _20 / 8;
  _22 = (sizetype) _21;
  _23 = dataPtr_98(D) + _22;
  _24 = _14 | _19;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_94;
  _26 = dataPtr_98(D) + _25;
  _27 = *_26;
  _28 = (sizetype) pos_94;
  _29 = dataPtr_98(D) + _28;
  _30 = *_29;
  _31 = (unsigned char) mask_96;
  _32 = ~_31;
  _33 = _30 & _32;
  _34 = (unsigned char) Val_97;
  _35 = (unsigned char) mask_96;
  _36 = _34 & _35;
  _37 = _33 | _36;
  if (_27 != _37)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_100 = 1;
  # DEBUG valueChanged => valueChanged_100

  <bb 4> :
  # valueChanged_79 = PHI <valueChanged_86(2), valueChanged_100(3)>
  # DEBUG valueChanged => valueChanged_79
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = (sizetype) pos_94;
  _39 = dataPtr_98(D) + _38;
  _40 = *_39;
  _41 = (unsigned char) mask_96;
  _42 = ~_41;
  _43 = _40 & _42;
  _44 = (unsigned char) Val_97;
  _45 = (unsigned char) mask_96;
  _46 = _44 & _45;
  _47 = (sizetype) pos_94;
  _48 = dataPtr_98(D) + _47;
  _49 = _43 | _46;
  *_48 = _49;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_104 = Val_82 >> 8;
  # DEBUG Val => Val_104
  # DEBUG BEGIN_STMT
  mask_105 = mask_83 >> 8;
  # DEBUG mask => mask_105
  # DEBUG BEGIN_STMT
  pos.99_50 = (unsigned short) pos_84;
  _51 = pos.99_50 + 1;
  pos_106 = (sint16) _51;
  # DEBUG pos => pos_106
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _52 = (sizetype) pos_106;
  _53 = dataPtr_98(D) + _52;
  _54 = *_53;
  _55 = (sizetype) pos_106;
  _56 = dataPtr_98(D) + _55;
  _57 = *_56;
  _58 = (unsigned char) mask_105;
  _59 = ~_58;
  _60 = _57 & _59;
  _61 = (unsigned char) Val_104;
  _62 = (unsigned char) mask_105;
  _63 = _61 & _62;
  _64 = _60 | _63;
  if (_54 != _64)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_107 = 1;
  # DEBUG valueChanged => valueChanged_107

  <bb 7> :
  # valueChanged_80 = PHI <valueChanged_81(5), valueChanged_107(6)>
  # DEBUG valueChanged => valueChanged_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _65 = (sizetype) pos_106;
  _66 = dataPtr_98(D) + _65;
  _67 = *_66;
  _68 = (unsigned char) mask_105;
  _69 = ~_68;
  _70 = _67 & _69;
  _71 = (unsigned char) Val_104;
  _72 = (unsigned char) mask_105;
  _73 = _71 & _72;
  _74 = (sizetype) pos_106;
  _75 = dataPtr_98(D) + _74;
  _76 = _70 | _73;
  *_75 = _76;

  <bb 8> :
  # valueChanged_81 = PHI <valueChanged_79(4), valueChanged_80(7)>
  # Val_82 = PHI <Val_97(4), Val_104(7)>
  # mask_83 = PHI <mask_96(4), mask_105(7)>
  # pos_84 = PHI <pos_94(4), pos_106(7)>
  # DEBUG pos => pos_84
  # DEBUG mask => mask_83
  # DEBUG Val => Val_82
  # DEBUG valueChanged => valueChanged_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_83 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _77 = IntDataPtr_102(D)->trigger;
  _78 = valueChanged_81 | _77;
  IntDataPtr_102(D)->trigger = _78;
  return;

}


Com_EB_Write_08_SX_DL_EUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  short unsigned int _26;
  short unsigned int _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  sizetype _44;
  uint8 * _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  sizetype _53;
  uint8 * _54;
  unsigned char _55;
  unsigned short pos.100_56;
  unsigned short _57;
  sizetype _58;
  uint8 * _59;
  unsigned char _60;
  sizetype _61;
  uint8 * _62;
  unsigned char _63;
  unsigned char _64;
  unsigned char _65;
  unsigned char _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  sizetype _71;
  uint8 * _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  sizetype _80;
  uint8 * _81;
  unsigned char _82;
  unsigned char _83;
  unsigned char _84;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_89 = 0;
  # DEBUG valueChanged => valueChanged_89
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_91(D)];
  Val_92 = (uint16) _1;
  # DEBUG Val => Val_92
  # DEBUG BEGIN_STMT
  mask_93 = 255;
  # DEBUG mask => mask_93
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_94(D)->ComSignalPositionInBit;
  row_95 = _2 / 8;
  # DEBUG row => row_95
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_94(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_96 = _4 & 7;
  # DEBUG col => col_96
  # DEBUG BEGIN_STMT
  pos_97 = (sint16) row_95;
  # DEBUG pos => pos_97
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_93;
  _6 = Com_EB_WritePropPtr_94(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_98 = (uint16) _9;
  # DEBUG mask => mask_98
  # DEBUG BEGIN_STMT
  _10 = (int) mask_98;
  _11 = (int) col_96;
  _12 = _10 << _11;
  mask_99 = (uint16) _12;
  # DEBUG mask => mask_99
  # DEBUG BEGIN_STMT
  _13 = (int) Val_92;
  _14 = (int) col_96;
  _15 = _13 << _14;
  Val_100 = (uint16) _15;
  # DEBUG Val => Val_100
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _17 = _16 / 8;
  _18 = (sizetype) _17;
  _19 = dataPtr_101(D) + _18;
  _20 = *_19;
  _21 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = 1 << _23;
  _25 = (unsigned char) _24;
  _26 = Com_EB_WritePropPtr_94(D)->ComUpdateBitPositionInBit;
  _27 = _26 / 8;
  _28 = (sizetype) _27;
  _29 = dataPtr_101(D) + _28;
  _30 = _20 | _25;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = (sizetype) pos_97;
  _32 = dataPtr_101(D) + _31;
  _33 = *_32;
  _34 = (sizetype) pos_97;
  _35 = dataPtr_101(D) + _34;
  _36 = *_35;
  _37 = (unsigned char) mask_99;
  _38 = ~_37;
  _39 = _36 & _38;
  _40 = (unsigned char) Val_100;
  _41 = (unsigned char) mask_99;
  _42 = _40 & _41;
  _43 = _39 | _42;
  if (_33 != _43)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_103 = 1;
  # DEBUG valueChanged => valueChanged_103

  <bb 4> :
  # valueChanged_85 = PHI <valueChanged_89(2), valueChanged_103(3)>
  # DEBUG valueChanged => valueChanged_85
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _44 = (sizetype) pos_97;
  _45 = dataPtr_101(D) + _44;
  _46 = *_45;
  _47 = (unsigned char) mask_99;
  _48 = ~_47;
  _49 = _46 & _48;
  _50 = (unsigned char) Val_100;
  _51 = (unsigned char) mask_99;
  _52 = _50 & _51;
  _53 = (sizetype) pos_97;
  _54 = dataPtr_101(D) + _53;
  _55 = _49 | _52;
  *_54 = _55;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_99 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_105 = Val_100 >> 8;
  # DEBUG Val => Val_105
  # DEBUG BEGIN_STMT
  mask_106 = mask_99 >> 8;
  # DEBUG mask => mask_106
  # DEBUG BEGIN_STMT
  pos.100_56 = (unsigned short) pos_97;
  _57 = pos.100_56 + 1;
  pos_107 = (sint16) _57;
  # DEBUG pos => pos_107
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = (sizetype) pos_107;
  _59 = dataPtr_101(D) + _58;
  _60 = *_59;
  _61 = (sizetype) pos_107;
  _62 = dataPtr_101(D) + _61;
  _63 = *_62;
  _64 = (unsigned char) mask_106;
  _65 = ~_64;
  _66 = _63 & _65;
  _67 = (unsigned char) Val_105;
  _68 = (unsigned char) mask_106;
  _69 = _67 & _68;
  _70 = _66 | _69;
  if (_60 != _70)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_108 = 1;
  # DEBUG valueChanged => valueChanged_108

  <bb 7> :
  # valueChanged_86 = PHI <valueChanged_85(5), valueChanged_108(6)>
  # DEBUG valueChanged => valueChanged_86
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _71 = (sizetype) pos_107;
  _72 = dataPtr_101(D) + _71;
  _73 = *_72;
  _74 = (unsigned char) mask_106;
  _75 = ~_74;
  _76 = _73 & _75;
  _77 = (unsigned char) Val_105;
  _78 = (unsigned char) mask_106;
  _79 = _77 & _78;
  _80 = (sizetype) pos_107;
  _81 = dataPtr_101(D) + _80;
  _82 = _76 | _79;
  *_81 = _82;

  <bb 8> :
  # valueChanged_87 = PHI <valueChanged_85(4), valueChanged_86(7)>
  # DEBUG valueChanged => valueChanged_87
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _83 = IntDataPtr_110(D)->trigger;
  _84 = valueChanged_87 | _83;
  IntDataPtr_110(D)->trigger = _84;
  return;

}


Com_EB_Write_AY_S0_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  short unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  sizetype _20;
  const uint8 * _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  short unsigned int ii.101_25;
  short unsigned int _26;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_29 = 0;
  # DEBUG ii => ii_29
  # DEBUG BEGIN_STMT
  U8Ptr_31 = SignalDataPtr_30(D);
  # DEBUG U8Ptr => U8Ptr_31
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_33(D)->ComUpdateBitPositionInBit;
  _2 = _1 / 8;
  _3 = (sizetype) _2;
  _4 = dataPtr_34(D) + _3;
  _5 = *_4;
  _6 = Com_EB_WritePropPtr_33(D)->ComUpdateBitPositionInBit;
  _7 = (unsigned int) _6;
  _8 = _7 & 7;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = Com_EB_WritePropPtr_33(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_34(D) + _13;
  _15 = _5 | _10;
  *_14 = _15;

  <bb 3> :
  # ii_27 = PHI <ii_29(2), ii_38(3)>
  # DEBUG ii => ii_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_33(D)->ComSignalPositionInBit;
  _17 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  _18 = _16 + _17;
  _19 = _18 - ii_27;
  pos_36 = _19 + 65535;
  # DEBUG pos => pos_36
  # DEBUG BEGIN_STMT
  _20 = (sizetype) ii_27;
  _21 = U8Ptr_31 + _20;
  _22 = (sizetype) pos_36;
  _23 = dataPtr_34(D) + _22;
  _24 = *_21;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  ii.101_25 = ii_27;
  ii_38 = ii.101_25 + 1;
  # DEBUG ii => ii_38
  # DEBUG BEGIN_STMT
  _26 = Com_EB_WritePropPtr_33(D)->ComSignalBase.ComBitSize;
  if (ii_38 < _26)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_64_SX_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E2 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned char _20;
  short unsigned int _21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  short unsigned int _37;
  unsigned char _38;
  unsigned short pos.102_39;
  unsigned short _40;
  int _41;
  sizetype _42;
  uint8 * _43;
  unsigned char _44;
  unsigned char ssize.103_45;
  unsigned char _46;
  unsigned short pos.104_47;
  unsigned short _48;
  unsigned char _49;
  int _50;
  unsigned int _51;
  sizetype _52;
  uint8 * _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  sizetype _61;
  uint8 * _62;
  unsigned char _63;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_71 = MEM[(const uint32 *)SignalDataPtr_70(D)];
  # DEBUG Val => Val_71
  # DEBUG BEGIN_STMT
  putvalue_72 = (uint8) Val_71;
  # DEBUG putvalue => putvalue_72
  # DEBUG BEGIN_STMT
  mask_73 = 4294967295;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  space_74 = 8;
  # DEBUG space => space_74
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_75(D)->ComSignalPositionInBit;
  row_76 = _1 / 8;
  # DEBUG row => row_76
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_75(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_77 = _3 & 7;
  # DEBUG col => col_77
  # DEBUG BEGIN_STMT
  pos_78 = (sint16) row_76;
  # DEBUG pos => pos_78
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_79 = space_74 - col_77;
  # DEBUG space => space_79
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_75(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_80 = mask_73 >> _6;
  # DEBUG mask => mask_80
  # DEBUG BEGIN_STMT
  _7 = (int) col_77;
  mask_81 = mask_80 << _7;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_72;
  _9 = (int) col_77;
  _10 = _8 << _9;
  putvalue_82 = (uint8) _10;
  # DEBUG putvalue => putvalue_82
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_83(D) + _13;
  _15 = *_14;
  _16 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _17 = (unsigned int) _16;
  _18 = _17 & 7;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _22 = _21 / 8;
  _23 = (sizetype) _22;
  _24 = dataPtr_83(D) + _23;
  _25 = _15 | _20;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  _26 = (sizetype) pos_78;
  _27 = dataPtr_83(D) + _26;
  _28 = *_27;
  _29 = (unsigned char) mask_81;
  _30 = ~_29;
  _31 = _28 & _30;
  _32 = (unsigned char) mask_81;
  _33 = putvalue_82 & _32;
  _34 = (sizetype) pos_78;
  _35 = dataPtr_83(D) + _34;
  _36 = _31 | _33;
  *_35 = _36;
  # DEBUG BEGIN_STMT
  _37 = Com_EB_WritePropPtr_75(D)->ComSignalBase.ComBitSize;
  _38 = (unsigned char) _37;
  tmp_val_86 = _38 - space_79;
  # DEBUG tmp_val => tmp_val_86
  # DEBUG BEGIN_STMT
  ssize_87 = (sint8) tmp_val_86;
  # DEBUG ssize => ssize_87
  # DEBUG BEGIN_STMT
  pos.102_39 = (unsigned short) pos_78;
  _40 = pos.102_39 + 65535;
  pos_88 = (sint16) _40;
  # DEBUG pos => pos_88
  # DEBUG BEGIN_STMT
  _41 = (int) space_79;
  Val_89 = Val_71 >> _41;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _42 = (sizetype) pos_66;
  _43 = dataPtr_83(D) + _42;
  _44 = (unsigned char) Val_64;
  *_43 = _44;
  # DEBUG BEGIN_STMT
  Val_95 = Val_64 >> 8;
  # DEBUG Val => Val_95
  # DEBUG BEGIN_STMT
  ssize.103_45 = (unsigned char) ssize_65;
  _46 = ssize.103_45 + 248;
  ssize_96 = (sint8) _46;
  # DEBUG ssize => ssize_96
  # DEBUG BEGIN_STMT
  pos.104_47 = (unsigned short) pos_66;
  _48 = pos.104_47 + 65535;
  pos_97 = (sint16) _48;
  # DEBUG pos => pos_97

  <bb 4> :
  # Val_64 = PHI <Val_89(2), Val_95(3)>
  # ssize_65 = PHI <ssize_87(2), ssize_96(3)>
  # pos_66 = PHI <pos_88(2), pos_97(3)>
  # DEBUG pos => pos_66
  # DEBUG ssize => ssize_65
  # DEBUG Val => Val_64
  # DEBUG BEGIN_STMT
  if (ssize_65 > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ssize_65 > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ssize_hlp_90 = (uint8) ssize_65;
  # DEBUG ssize_hlp => ssize_hlp_90
  # DEBUG BEGIN_STMT
  _49 = 8 - ssize_hlp_90;
  _50 = (int) _49;
  _51 = 255 >> _50;
  mask_u8_91 = (uint8) _51;
  # DEBUG mask_u8 => mask_u8_91
  # DEBUG BEGIN_STMT
  mask_92 = (uint32) mask_u8_91;
  # DEBUG mask => mask_92
  # DEBUG BEGIN_STMT
  _52 = (sizetype) pos_66;
  _53 = dataPtr_83(D) + _52;
  _54 = *_53;
  _55 = (unsigned char) mask_92;
  _56 = ~_55;
  _57 = _54 & _56;
  _58 = (unsigned char) Val_64;
  _59 = (unsigned char) mask_92;
  _60 = _58 & _59;
  _61 = (sizetype) pos_66;
  _62 = dataPtr_83(D) + _61;
  _63 = _57 | _60;
  *_62 = _63;

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_16_SX_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned short pos.105_37;
  unsigned short _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  sizetype _48;
  uint8 * _49;
  unsigned char _50;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_56(D)];
  Val_57 = (uint32) _1;
  # DEBUG Val => Val_57
  # DEBUG BEGIN_STMT
  mask_58 = 65535;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  row_60 = _2 / 8;
  # DEBUG row => row_60
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_61 = _4 & 7;
  # DEBUG col => col_61
  # DEBUG BEGIN_STMT
  pos_62 = (sint16) row_60;
  # DEBUG pos => pos_62
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_63 = mask_58 >> _7;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _8 = (int) col_61;
  mask_64 = mask_63 << _8;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  _9 = (int) col_61;
  Val_65 = Val_57 << _9;
  # DEBUG Val => Val_65
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _11 = _10 / 8;
  _12 = (sizetype) _11;
  _13 = dataPtr_66(D) + _12;
  _14 = *_13;
  _15 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _16 = (unsigned int) _15;
  _17 = _16 & 7;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _20 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _21 = _20 / 8;
  _22 = (sizetype) _21;
  _23 = dataPtr_66(D) + _22;
  _24 = _14 | _19;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_62;
  _26 = dataPtr_66(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) mask_64;
  _29 = ~_28;
  _30 = _27 & _29;
  _31 = (unsigned char) Val_65;
  _32 = (unsigned char) mask_64;
  _33 = _31 & _32;
  _34 = (sizetype) pos_62;
  _35 = dataPtr_66(D) + _34;
  _36 = _30 | _33;
  *_35 = _36;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_69 = Val_51 >> 8;
  # DEBUG Val => Val_69
  # DEBUG BEGIN_STMT
  mask_70 = mask_52 >> 8;
  # DEBUG mask => mask_70
  # DEBUG BEGIN_STMT
  pos.105_37 = (unsigned short) pos_53;
  _38 = pos.105_37 + 65535;
  pos_71 = (sint16) _38;
  # DEBUG pos => pos_71
  # DEBUG BEGIN_STMT
  _39 = (sizetype) pos_71;
  _40 = dataPtr_66(D) + _39;
  _41 = *_40;
  _42 = (unsigned char) mask_70;
  _43 = ~_42;
  _44 = _41 & _43;
  _45 = (unsigned char) Val_69;
  _46 = (unsigned char) mask_70;
  _47 = _45 & _46;
  _48 = (sizetype) pos_71;
  _49 = dataPtr_66(D) + _48;
  _50 = _44 | _47;
  *_49 = _50;

  <bb 4> :
  # Val_51 = PHI <Val_65(2), Val_69(3)>
  # mask_52 = PHI <mask_64(2), mask_70(3)>
  # pos_53 = PHI <pos_62(2), pos_71(3)>
  # DEBUG pos => pos_53
  # DEBUG mask => mask_52
  # DEBUG Val => Val_51
  # DEBUG BEGIN_STMT
  if (mask_52 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_08_SX_DL_EUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  short unsigned int _26;
  short unsigned int _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  sizetype _40;
  uint8 * _41;
  unsigned char _42;
  unsigned short pos.106_43;
  unsigned short _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  sizetype _54;
  uint8 * _55;
  unsigned char _56;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_59(D)];
  Val_60 = (uint16) _1;
  # DEBUG Val => Val_60
  # DEBUG BEGIN_STMT
  mask_61 = 255;
  # DEBUG mask => mask_61
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_62(D)->ComSignalPositionInBit;
  row_63 = _2 / 8;
  # DEBUG row => row_63
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_62(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_64 = _4 & 7;
  # DEBUG col => col_64
  # DEBUG BEGIN_STMT
  pos_65 = (sint16) row_63;
  # DEBUG pos => pos_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_61;
  _6 = Com_EB_WritePropPtr_62(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_66 = (uint16) _9;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  _10 = (int) mask_66;
  _11 = (int) col_64;
  _12 = _10 << _11;
  mask_67 = (uint16) _12;
  # DEBUG mask => mask_67
  # DEBUG BEGIN_STMT
  _13 = (int) Val_60;
  _14 = (int) col_64;
  _15 = _13 << _14;
  Val_68 = (uint16) _15;
  # DEBUG Val => Val_68
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _17 = _16 / 8;
  _18 = (sizetype) _17;
  _19 = dataPtr_69(D) + _18;
  _20 = *_19;
  _21 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = 1 << _23;
  _25 = (unsigned char) _24;
  _26 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _27 = _26 / 8;
  _28 = (sizetype) _27;
  _29 = dataPtr_69(D) + _28;
  _30 = _20 | _25;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  _31 = (sizetype) pos_65;
  _32 = dataPtr_69(D) + _31;
  _33 = *_32;
  _34 = (unsigned char) mask_67;
  _35 = ~_34;
  _36 = _33 & _35;
  _37 = (unsigned char) Val_68;
  _38 = (unsigned char) mask_67;
  _39 = _37 & _38;
  _40 = (sizetype) pos_65;
  _41 = dataPtr_69(D) + _40;
  _42 = _36 | _39;
  *_41 = _42;
  # DEBUG BEGIN_STMT
  if (mask_67 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_72 = Val_68 >> 8;
  # DEBUG Val => Val_72
  # DEBUG BEGIN_STMT
  mask_73 = mask_67 >> 8;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  pos.106_43 = (unsigned short) pos_65;
  _44 = pos.106_43 + 65535;
  pos_74 = (sint16) _44;
  # DEBUG pos => pos_74
  # DEBUG BEGIN_STMT
  _45 = (sizetype) pos_74;
  _46 = dataPtr_69(D) + _45;
  _47 = *_46;
  _48 = (unsigned char) mask_73;
  _49 = ~_48;
  _50 = _47 & _49;
  _51 = (unsigned char) Val_72;
  _52 = (unsigned char) mask_73;
  _53 = _51 & _52;
  _54 = (sizetype) pos_74;
  _55 = dataPtr_69(D) + _54;
  _56 = _50 | _53;
  *_55 = _56;

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S1_DL_EUB_DOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * DataPtr_Start;
  const uint8 * U8Ptr;
  uint32 ii;
  short unsigned int _1;
  sizetype _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned char _12;
  short unsigned int _13;
  short unsigned int _14;
  sizetype _15;
  uint8 * _16;
  unsigned char _17;
  const uint8 * _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  long unsigned int _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_25 = 0;
  # DEBUG ii => ii_25
  # DEBUG BEGIN_STMT
  U8Ptr_27 = SignalDataPtr_26(D);
  # DEBUG U8Ptr => U8Ptr_27
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_29(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  DataPtr_Start_31 = dataPtr_30(D) + _2;
  # DEBUG DataPtr_Start => DataPtr_Start_31
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_29(D)->ComUpdateBitPositionInBit;
  _4 = _3 / 8;
  _5 = (sizetype) _4;
  _6 = dataPtr_30(D) + _5;
  _7 = *_6;
  _8 = Com_EB_WritePropPtr_29(D)->ComUpdateBitPositionInBit;
  _9 = (unsigned int) _8;
  _10 = _9 & 7;
  _11 = 1 << _10;
  _12 = (unsigned char) _11;
  _13 = Com_EB_WritePropPtr_29(D)->ComUpdateBitPositionInBit;
  _14 = _13 / 8;
  _15 = (sizetype) _14;
  _16 = dataPtr_30(D) + _15;
  _17 = _7 | _12;
  *_16 = _17;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _18 = U8Ptr_27 + ii_23;
  _19 = DataPtr_Start_31 + ii_23;
  _20 = *_18;
  *_19 = _20;
  # DEBUG BEGIN_STMT
  ii_35 = ii_23 + 1;
  # DEBUG ii => ii_35

  <bb 4> :
  # ii_23 = PHI <ii_25(2), ii_35(3)>
  # DEBUG ii => ii_23
  # DEBUG BEGIN_STMT
  _21 = IntDataPtr_33(D)->arraySize;
  _22 = (long unsigned int) _21;
  if (ii_23 < _22)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


Com_EB_Write_AY_S0_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  sizetype _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  sizetype _17;
  const uint8 * _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  short unsigned int ii.107_22;
  short unsigned int _23;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_26 = 0;
  # DEBUG ii => ii_26
  # DEBUG BEGIN_STMT
  U8Ptr_28 = SignalDataPtr_27(D);
  # DEBUG U8Ptr => U8Ptr_28
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_30(D)->ComUpdateBitPositionInBit;
  _2 = _1 / 8;
  _3 = (sizetype) _2;
  _4 = dataPtr_31(D) + _3;
  _5 = *_4;
  _6 = Com_EB_WritePropPtr_30(D)->ComUpdateBitPositionInBit;
  _7 = (unsigned int) _6;
  _8 = _7 & 7;
  _9 = 1 << _8;
  _10 = (unsigned char) _9;
  _11 = Com_EB_WritePropPtr_30(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_31(D) + _13;
  _15 = _5 | _10;
  *_14 = _15;

  <bb 3> :
  # ii_24 = PHI <ii_26(2), ii_35(3)>
  # DEBUG ii => ii_24
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_30(D)->ComSignalPositionInBit;
  pos_33 = ii_24 + _16;
  # DEBUG pos => pos_33
  # DEBUG BEGIN_STMT
  _17 = (sizetype) ii_24;
  _18 = U8Ptr_28 + _17;
  _19 = (sizetype) pos_33;
  _20 = dataPtr_31(D) + _19;
  _21 = *_18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  ii.107_22 = ii_24;
  ii_35 = ii.107_22 + 1;
  # DEBUG ii => ii_35
  # DEBUG BEGIN_STMT
  _23 = Com_EB_WritePropPtr_30(D)->ComSignalBase.ComBitSize;
  if (ii_35 < _23)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_64_SX_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_EUB_DOC_E1 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned char _20;
  short unsigned int _21;
  short unsigned int _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  sizetype _26;
  uint8 * _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  short unsigned int _37;
  unsigned char _38;
  unsigned short pos.108_39;
  unsigned short _40;
  int _41;
  sizetype _42;
  uint8 * _43;
  unsigned char _44;
  unsigned char ssize.109_45;
  unsigned char _46;
  unsigned short pos.110_47;
  unsigned short _48;
  unsigned char _49;
  int _50;
  unsigned int _51;
  sizetype _52;
  uint8 * _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  sizetype _61;
  uint8 * _62;
  unsigned char _63;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_71 = MEM[(const uint32 *)SignalDataPtr_70(D)];
  # DEBUG Val => Val_71
  # DEBUG BEGIN_STMT
  putvalue_72 = (uint8) Val_71;
  # DEBUG putvalue => putvalue_72
  # DEBUG BEGIN_STMT
  mask_73 = 4294967295;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  space_74 = 8;
  # DEBUG space => space_74
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_75(D)->ComSignalPositionInBit;
  row_76 = _1 / 8;
  # DEBUG row => row_76
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_75(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_77 = _3 & 7;
  # DEBUG col => col_77
  # DEBUG BEGIN_STMT
  pos_78 = (sint16) row_76;
  # DEBUG pos => pos_78
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_79 = space_74 - col_77;
  # DEBUG space => space_79
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_75(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_80 = mask_73 >> _6;
  # DEBUG mask => mask_80
  # DEBUG BEGIN_STMT
  _7 = (int) col_77;
  mask_81 = mask_80 << _7;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_72;
  _9 = (int) col_77;
  _10 = _8 << _9;
  putvalue_82 = (uint8) _10;
  # DEBUG putvalue => putvalue_82
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _12 = _11 / 8;
  _13 = (sizetype) _12;
  _14 = dataPtr_83(D) + _13;
  _15 = *_14;
  _16 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _17 = (unsigned int) _16;
  _18 = _17 & 7;
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = Com_EB_WritePropPtr_75(D)->ComUpdateBitPositionInBit;
  _22 = _21 / 8;
  _23 = (sizetype) _22;
  _24 = dataPtr_83(D) + _23;
  _25 = _15 | _20;
  *_24 = _25;
  # DEBUG BEGIN_STMT
  _26 = (sizetype) pos_78;
  _27 = dataPtr_83(D) + _26;
  _28 = *_27;
  _29 = (unsigned char) mask_81;
  _30 = ~_29;
  _31 = _28 & _30;
  _32 = (unsigned char) mask_81;
  _33 = putvalue_82 & _32;
  _34 = (sizetype) pos_78;
  _35 = dataPtr_83(D) + _34;
  _36 = _31 | _33;
  *_35 = _36;
  # DEBUG BEGIN_STMT
  _37 = Com_EB_WritePropPtr_75(D)->ComSignalBase.ComBitSize;
  _38 = (unsigned char) _37;
  tmp_val_86 = _38 - space_79;
  # DEBUG tmp_val => tmp_val_86
  # DEBUG BEGIN_STMT
  ssize_87 = (sint8) tmp_val_86;
  # DEBUG ssize => ssize_87
  # DEBUG BEGIN_STMT
  pos.108_39 = (unsigned short) pos_78;
  _40 = pos.108_39 + 1;
  pos_88 = (sint16) _40;
  # DEBUG pos => pos_88
  # DEBUG BEGIN_STMT
  _41 = (int) space_79;
  Val_89 = Val_71 >> _41;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _42 = (sizetype) pos_66;
  _43 = dataPtr_83(D) + _42;
  _44 = (unsigned char) Val_64;
  *_43 = _44;
  # DEBUG BEGIN_STMT
  Val_95 = Val_64 >> 8;
  # DEBUG Val => Val_95
  # DEBUG BEGIN_STMT
  ssize.109_45 = (unsigned char) ssize_65;
  _46 = ssize.109_45 + 248;
  ssize_96 = (sint8) _46;
  # DEBUG ssize => ssize_96
  # DEBUG BEGIN_STMT
  pos.110_47 = (unsigned short) pos_66;
  _48 = pos.110_47 + 1;
  pos_97 = (sint16) _48;
  # DEBUG pos => pos_97

  <bb 4> :
  # Val_64 = PHI <Val_89(2), Val_95(3)>
  # ssize_65 = PHI <ssize_87(2), ssize_96(3)>
  # pos_66 = PHI <pos_88(2), pos_97(3)>
  # DEBUG pos => pos_66
  # DEBUG ssize => ssize_65
  # DEBUG Val => Val_64
  # DEBUG BEGIN_STMT
  if (ssize_65 > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ssize_65 > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ssize_hlp_90 = (uint8) ssize_65;
  # DEBUG ssize_hlp => ssize_hlp_90
  # DEBUG BEGIN_STMT
  _49 = 8 - ssize_hlp_90;
  _50 = (int) _49;
  _51 = 255 >> _50;
  mask_u8_91 = (uint8) _51;
  # DEBUG mask_u8 => mask_u8_91
  # DEBUG BEGIN_STMT
  mask_92 = (uint32) mask_u8_91;
  # DEBUG mask => mask_92
  # DEBUG BEGIN_STMT
  _52 = (sizetype) pos_66;
  _53 = dataPtr_83(D) + _52;
  _54 = *_53;
  _55 = (unsigned char) mask_92;
  _56 = ~_55;
  _57 = _54 & _56;
  _58 = (unsigned char) Val_64;
  _59 = (unsigned char) mask_92;
  _60 = _58 & _59;
  _61 = (sizetype) pos_66;
  _62 = dataPtr_83(D) + _61;
  _63 = _57 | _60;
  *_62 = _63;

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_16_SX_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  sizetype _12;
  uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  sizetype _22;
  uint8 * _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  sizetype _34;
  uint8 * _35;
  unsigned char _36;
  unsigned short pos.111_37;
  unsigned short _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  sizetype _48;
  uint8 * _49;
  unsigned char _50;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_56(D)];
  Val_57 = (uint32) _1;
  # DEBUG Val => Val_57
  # DEBUG BEGIN_STMT
  mask_58 = 65535;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  row_60 = _2 / 8;
  # DEBUG row => row_60
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_59(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_61 = _4 & 7;
  # DEBUG col => col_61
  # DEBUG BEGIN_STMT
  pos_62 = (sint16) row_60;
  # DEBUG pos => pos_62
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_59(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_63 = mask_58 >> _7;
  # DEBUG mask => mask_63
  # DEBUG BEGIN_STMT
  _8 = (int) col_61;
  mask_64 = mask_63 << _8;
  # DEBUG mask => mask_64
  # DEBUG BEGIN_STMT
  _9 = (int) col_61;
  Val_65 = Val_57 << _9;
  # DEBUG Val => Val_65
  # DEBUG BEGIN_STMT
  _10 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _11 = _10 / 8;
  _12 = (sizetype) _11;
  _13 = dataPtr_66(D) + _12;
  _14 = *_13;
  _15 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _16 = (unsigned int) _15;
  _17 = _16 & 7;
  _18 = 1 << _17;
  _19 = (unsigned char) _18;
  _20 = Com_EB_WritePropPtr_59(D)->ComUpdateBitPositionInBit;
  _21 = _20 / 8;
  _22 = (sizetype) _21;
  _23 = dataPtr_66(D) + _22;
  _24 = _14 | _19;
  *_23 = _24;
  # DEBUG BEGIN_STMT
  _25 = (sizetype) pos_62;
  _26 = dataPtr_66(D) + _25;
  _27 = *_26;
  _28 = (unsigned char) mask_64;
  _29 = ~_28;
  _30 = _27 & _29;
  _31 = (unsigned char) Val_65;
  _32 = (unsigned char) mask_64;
  _33 = _31 & _32;
  _34 = (sizetype) pos_62;
  _35 = dataPtr_66(D) + _34;
  _36 = _30 | _33;
  *_35 = _36;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_69 = Val_51 >> 8;
  # DEBUG Val => Val_69
  # DEBUG BEGIN_STMT
  mask_70 = mask_52 >> 8;
  # DEBUG mask => mask_70
  # DEBUG BEGIN_STMT
  pos.111_37 = (unsigned short) pos_53;
  _38 = pos.111_37 + 1;
  pos_71 = (sint16) _38;
  # DEBUG pos => pos_71
  # DEBUG BEGIN_STMT
  _39 = (sizetype) pos_71;
  _40 = dataPtr_66(D) + _39;
  _41 = *_40;
  _42 = (unsigned char) mask_70;
  _43 = ~_42;
  _44 = _41 & _43;
  _45 = (unsigned char) Val_69;
  _46 = (unsigned char) mask_70;
  _47 = _45 & _46;
  _48 = (sizetype) pos_71;
  _49 = dataPtr_66(D) + _48;
  _50 = _44 | _47;
  *_49 = _50;

  <bb 4> :
  # Val_51 = PHI <Val_65(2), Val_69(3)>
  # mask_52 = PHI <mask_64(2), mask_70(3)>
  # pos_53 = PHI <pos_62(2), pos_71(3)>
  # DEBUG pos => pos_53
  # DEBUG mask => mask_52
  # DEBUG Val => Val_51
  # DEBUG BEGIN_STMT
  if (mask_52 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_08_SX_DL_EUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _16;
  short unsigned int _17;
  sizetype _18;
  uint8 * _19;
  unsigned char _20;
  short unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned char _25;
  short unsigned int _26;
  short unsigned int _27;
  sizetype _28;
  uint8 * _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  sizetype _40;
  uint8 * _41;
  unsigned char _42;
  unsigned short pos.112_43;
  unsigned short _44;
  sizetype _45;
  uint8 * _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  sizetype _54;
  uint8 * _55;
  unsigned char _56;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_59(D)];
  Val_60 = (uint16) _1;
  # DEBUG Val => Val_60
  # DEBUG BEGIN_STMT
  mask_61 = 255;
  # DEBUG mask => mask_61
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_62(D)->ComSignalPositionInBit;
  row_63 = _2 / 8;
  # DEBUG row => row_63
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_62(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_64 = _4 & 7;
  # DEBUG col => col_64
  # DEBUG BEGIN_STMT
  pos_65 = (sint16) row_63;
  # DEBUG pos => pos_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_61;
  _6 = Com_EB_WritePropPtr_62(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_66 = (uint16) _9;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  _10 = (int) mask_66;
  _11 = (int) col_64;
  _12 = _10 << _11;
  mask_67 = (uint16) _12;
  # DEBUG mask => mask_67
  # DEBUG BEGIN_STMT
  _13 = (int) Val_60;
  _14 = (int) col_64;
  _15 = _13 << _14;
  Val_68 = (uint16) _15;
  # DEBUG Val => Val_68
  # DEBUG BEGIN_STMT
  _16 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _17 = _16 / 8;
  _18 = (sizetype) _17;
  _19 = dataPtr_69(D) + _18;
  _20 = *_19;
  _21 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _22 = (unsigned int) _21;
  _23 = _22 & 7;
  _24 = 1 << _23;
  _25 = (unsigned char) _24;
  _26 = Com_EB_WritePropPtr_62(D)->ComUpdateBitPositionInBit;
  _27 = _26 / 8;
  _28 = (sizetype) _27;
  _29 = dataPtr_69(D) + _28;
  _30 = _20 | _25;
  *_29 = _30;
  # DEBUG BEGIN_STMT
  _31 = (sizetype) pos_65;
  _32 = dataPtr_69(D) + _31;
  _33 = *_32;
  _34 = (unsigned char) mask_67;
  _35 = ~_34;
  _36 = _33 & _35;
  _37 = (unsigned char) Val_68;
  _38 = (unsigned char) mask_67;
  _39 = _37 & _38;
  _40 = (sizetype) pos_65;
  _41 = dataPtr_69(D) + _40;
  _42 = _36 | _39;
  *_41 = _42;
  # DEBUG BEGIN_STMT
  if (mask_67 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_72 = Val_68 >> 8;
  # DEBUG Val => Val_72
  # DEBUG BEGIN_STMT
  mask_73 = mask_67 >> 8;
  # DEBUG mask => mask_73
  # DEBUG BEGIN_STMT
  pos.112_43 = (unsigned short) pos_65;
  _44 = pos.112_43 + 1;
  pos_74 = (sint16) _44;
  # DEBUG pos => pos_74
  # DEBUG BEGIN_STMT
  _45 = (sizetype) pos_74;
  _46 = dataPtr_69(D) + _45;
  _47 = *_46;
  _48 = (unsigned char) mask_73;
  _49 = ~_48;
  _50 = _47 & _49;
  _51 = (unsigned char) Val_72;
  _52 = (unsigned char) mask_73;
  _53 = _51 & _52;
  _54 = (sizetype) pos_74;
  _55 = dataPtr_69(D) + _54;
  _56 = _50 | _53;
  *_55 = _56;

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S0_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  uint8 * _6;
  unsigned char _7;
  sizetype _8;
  const uint8 * _9;
  unsigned char _10;
  sizetype _11;
  const uint8 * _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  short unsigned int ii.113_16;
  short unsigned int _17;
  unsigned char _18;
  unsigned char _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_24 = 0;
  # DEBUG valueChanged => valueChanged_24
  # DEBUG BEGIN_STMT
  ii_25 = 0;
  # DEBUG ii => ii_25
  # DEBUG BEGIN_STMT
  U8Ptr_27 = SignalDataPtr_26(D);
  # DEBUG U8Ptr => U8Ptr_27

  <bb 3> :
  # valueChanged_20 = PHI <valueChanged_24(2), valueChanged_21(5)>
  # ii_22 = PHI <ii_25(2), ii_34(5)>
  # DEBUG ii => ii_22
  # DEBUG valueChanged => valueChanged_20
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_29(D)->ComSignalPositionInBit;
  _2 = Com_EB_WritePropPtr_29(D)->ComSignalBase.ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_22;
  pos_30 = _4 + 65535;
  # DEBUG pos => pos_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_30;
  _6 = dataPtr_31(D) + _5;
  _7 = *_6;
  _8 = (sizetype) ii_22;
  _9 = U8Ptr_27 + _8;
  _10 = *_9;
  if (_7 != _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_32 = 1;
  # DEBUG valueChanged => valueChanged_32

  <bb 5> :
  # valueChanged_21 = PHI <valueChanged_20(3), valueChanged_32(4)>
  # DEBUG valueChanged => valueChanged_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) ii_22;
  _12 = U8Ptr_27 + _11;
  _13 = (sizetype) pos_30;
  _14 = dataPtr_31(D) + _13;
  _15 = *_12;
  *_14 = _15;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii.113_16 = ii_22;
  ii_34 = ii.113_16 + 1;
  # DEBUG ii => ii_34
  # DEBUG BEGIN_STMT
  _17 = Com_EB_WritePropPtr_29(D)->ComSignalBase.ComBitSize;
  if (ii_34 < _17)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _18 = IntDataPtr_35(D)->trigger;
  _19 = valueChanged_21 | _18;
  IntDataPtr_35(D)->trigger = _19;
  return;

}


Com_EB_Write_64_SX_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E2 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  short unsigned int _34;
  unsigned char _35;
  unsigned short pos.114_36;
  unsigned short _37;
  int _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;
  unsigned char _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  unsigned char ssize.115_46;
  unsigned char _47;
  unsigned short pos.116_48;
  unsigned short _49;
  unsigned char _50;
  int _51;
  unsigned int _52;
  sizetype _53;
  uint8 * _54;
  unsigned char _55;
  sizetype _56;
  uint8 * _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  unsigned char _65;
  sizetype _66;
  uint8 * _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  unsigned char _74;
  sizetype _75;
  uint8 * _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_90 = 0;
  # DEBUG valueChanged => valueChanged_90
  # DEBUG BEGIN_STMT
  Val_93 = MEM[(const uint32 *)SignalDataPtr_92(D)];
  # DEBUG Val => Val_93
  # DEBUG BEGIN_STMT
  putvalue_94 = (uint8) Val_93;
  # DEBUG putvalue => putvalue_94
  # DEBUG BEGIN_STMT
  mask_95 = 4294967295;
  # DEBUG mask => mask_95
  # DEBUG BEGIN_STMT
  space_96 = 8;
  # DEBUG space => space_96
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_97(D)->ComSignalPositionInBit;
  row_98 = _1 / 8;
  # DEBUG row => row_98
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_97(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_99 = _3 & 7;
  # DEBUG col => col_99
  # DEBUG BEGIN_STMT
  pos_100 = (sint16) row_98;
  # DEBUG pos => pos_100
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_101 = space_96 - col_99;
  # DEBUG space => space_101
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_97(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_102 = mask_95 >> _6;
  # DEBUG mask => mask_102
  # DEBUG BEGIN_STMT
  _7 = (int) col_99;
  mask_103 = mask_102 << _7;
  # DEBUG mask => mask_103
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_94;
  _9 = (int) col_99;
  _10 = _8 << _9;
  putvalue_104 = (uint8) _10;
  # DEBUG putvalue => putvalue_104
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) pos_100;
  _12 = dataPtr_105(D) + _11;
  _13 = *_12;
  _14 = (sizetype) pos_100;
  _15 = dataPtr_105(D) + _14;
  _16 = *_15;
  _17 = (unsigned char) mask_103;
  _18 = ~_17;
  _19 = _16 & _18;
  _20 = (unsigned char) mask_103;
  _21 = putvalue_104 & _20;
  _22 = _19 | _21;
  if (_13 != _22)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_106 = 1;
  # DEBUG valueChanged => valueChanged_106

  <bb 4> :
  # valueChanged_80 = PHI <valueChanged_90(2), valueChanged_106(3)>
  # DEBUG valueChanged => valueChanged_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_100;
  _24 = dataPtr_105(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_103;
  _27 = ~_26;
  _28 = _25 & _27;
  _29 = (unsigned char) mask_103;
  _30 = putvalue_104 & _29;
  _31 = (sizetype) pos_100;
  _32 = dataPtr_105(D) + _31;
  _33 = _28 | _30;
  *_32 = _33;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = Com_EB_WritePropPtr_97(D)->ComSignalBase.ComBitSize;
  _35 = (unsigned char) _34;
  tmp_val_108 = _35 - space_101;
  # DEBUG tmp_val => tmp_val_108
  # DEBUG BEGIN_STMT
  ssize_109 = (sint8) tmp_val_108;
  # DEBUG ssize => ssize_109
  # DEBUG BEGIN_STMT
  pos.114_36 = (unsigned short) pos_100;
  _37 = pos.114_36 + 65535;
  pos_110 = (sint16) _37;
  # DEBUG pos => pos_110
  # DEBUG BEGIN_STMT
  _38 = (int) space_101;
  Val_111 = Val_93 >> _38;
  # DEBUG Val => Val_111
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _39 = (sizetype) pos_87;
  _40 = dataPtr_105(D) + _39;
  _41 = *_40;
  _42 = (unsigned char) Val_85;
  if (_41 != _42)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_119 = 1;
  # DEBUG valueChanged => valueChanged_119

  <bb 7> :
  # valueChanged_81 = PHI <valueChanged_82(5), valueChanged_119(6)>
  # DEBUG valueChanged => valueChanged_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_87;
  _44 = dataPtr_105(D) + _43;
  _45 = (unsigned char) Val_85;
  *_44 = _45;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_121 = Val_85 >> 8;
  # DEBUG Val => Val_121
  # DEBUG BEGIN_STMT
  ssize.115_46 = (unsigned char) ssize_86;
  _47 = ssize.115_46 + 248;
  ssize_122 = (sint8) _47;
  # DEBUG ssize => ssize_122
  # DEBUG BEGIN_STMT
  pos.116_48 = (unsigned short) pos_87;
  _49 = pos.116_48 + 65535;
  pos_123 = (sint16) _49;
  # DEBUG pos => pos_123

  <bb 8> :
  # valueChanged_82 = PHI <valueChanged_80(4), valueChanged_81(7)>
  # Val_85 = PHI <Val_111(4), Val_121(7)>
  # ssize_86 = PHI <ssize_109(4), ssize_122(7)>
  # pos_87 = PHI <pos_110(4), pos_123(7)>
  # DEBUG pos => pos_87
  # DEBUG ssize => ssize_86
  # DEBUG Val => Val_85
  # DEBUG valueChanged => valueChanged_82
  # DEBUG BEGIN_STMT
  if (ssize_86 > 7)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (ssize_86 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ssize_hlp_112 = (uint8) ssize_86;
  # DEBUG ssize_hlp => ssize_hlp_112
  # DEBUG BEGIN_STMT
  _50 = 8 - ssize_hlp_112;
  _51 = (int) _50;
  _52 = 255 >> _51;
  mask_u8_113 = (uint8) _52;
  # DEBUG mask_u8 => mask_u8_113
  # DEBUG BEGIN_STMT
  mask_114 = (uint32) mask_u8_113;
  # DEBUG mask => mask_114
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _53 = (sizetype) pos_87;
  _54 = dataPtr_105(D) + _53;
  _55 = *_54;
  _56 = (sizetype) pos_87;
  _57 = dataPtr_105(D) + _56;
  _58 = *_57;
  _59 = (unsigned char) mask_114;
  _60 = ~_59;
  _61 = _58 & _60;
  _62 = (unsigned char) Val_85;
  _63 = (unsigned char) mask_114;
  _64 = _62 & _63;
  _65 = _61 | _64;
  if (_55 != _65)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  valueChanged_115 = 1;
  # DEBUG valueChanged => valueChanged_115

  <bb 12> :
  # valueChanged_83 = PHI <valueChanged_82(10), valueChanged_115(11)>
  # DEBUG valueChanged => valueChanged_83
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _66 = (sizetype) pos_87;
  _67 = dataPtr_105(D) + _66;
  _68 = *_67;
  _69 = (unsigned char) mask_114;
  _70 = ~_69;
  _71 = _68 & _70;
  _72 = (unsigned char) Val_85;
  _73 = (unsigned char) mask_114;
  _74 = _72 & _73;
  _75 = (sizetype) pos_87;
  _76 = dataPtr_105(D) + _75;
  _77 = _71 | _74;
  *_76 = _77;

  <bb 13> :
  # valueChanged_84 = PHI <valueChanged_82(9), valueChanged_83(12)>
  # DEBUG valueChanged => valueChanged_84
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _78 = IntDataPtr_117(D)->trigger;
  _79 = valueChanged_84 | _78;
  IntDataPtr_117(D)->trigger = _79;
  return;

}


Com_EB_Write_16_SX_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  sizetype _32;
  uint8 * _33;
  unsigned char _34;
  unsigned short pos.117_35;
  unsigned short _36;
  sizetype _37;
  uint8 * _38;
  unsigned char _39;
  sizetype _40;
  uint8 * _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  sizetype _50;
  uint8 * _51;
  unsigned char _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  sizetype _59;
  uint8 * _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_71 = 0;
  # DEBUG valueChanged => valueChanged_71
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_73(D)];
  Val_74 = (uint32) _1;
  # DEBUG Val => Val_74
  # DEBUG BEGIN_STMT
  mask_75 = 65535;
  # DEBUG mask => mask_75
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_76(D)->ComSignalPositionInBit;
  row_77 = _2 / 8;
  # DEBUG row => row_77
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_76(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_78 = _4 & 7;
  # DEBUG col => col_78
  # DEBUG BEGIN_STMT
  pos_79 = (sint16) row_77;
  # DEBUG pos => pos_79
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_76(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_80 = mask_75 >> _7;
  # DEBUG mask => mask_80
  # DEBUG BEGIN_STMT
  _8 = (int) col_78;
  mask_81 = mask_80 << _8;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  _9 = (int) col_78;
  Val_82 = Val_74 << _9;
  # DEBUG Val => Val_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (sizetype) pos_79;
  _11 = dataPtr_83(D) + _10;
  _12 = *_11;
  _13 = (sizetype) pos_79;
  _14 = dataPtr_83(D) + _13;
  _15 = *_14;
  _16 = (unsigned char) mask_81;
  _17 = ~_16;
  _18 = _15 & _17;
  _19 = (unsigned char) Val_82;
  _20 = (unsigned char) mask_81;
  _21 = _19 & _20;
  _22 = _18 | _21;
  if (_12 != _22)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_84 = 1;
  # DEBUG valueChanged => valueChanged_84

  <bb 4> :
  # valueChanged_64 = PHI <valueChanged_71(2), valueChanged_84(3)>
  # DEBUG valueChanged => valueChanged_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_79;
  _24 = dataPtr_83(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_81;
  _27 = ~_26;
  _28 = _25 & _27;
  _29 = (unsigned char) Val_82;
  _30 = (unsigned char) mask_81;
  _31 = _29 & _30;
  _32 = (sizetype) pos_79;
  _33 = dataPtr_83(D) + _32;
  _34 = _28 | _31;
  *_33 = _34;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_88 = Val_67 >> 8;
  # DEBUG Val => Val_88
  # DEBUG BEGIN_STMT
  mask_89 = mask_68 >> 8;
  # DEBUG mask => mask_89
  # DEBUG BEGIN_STMT
  pos.117_35 = (unsigned short) pos_69;
  _36 = pos.117_35 + 65535;
  pos_90 = (sint16) _36;
  # DEBUG pos => pos_90
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _37 = (sizetype) pos_90;
  _38 = dataPtr_83(D) + _37;
  _39 = *_38;
  _40 = (sizetype) pos_90;
  _41 = dataPtr_83(D) + _40;
  _42 = *_41;
  _43 = (unsigned char) mask_89;
  _44 = ~_43;
  _45 = _42 & _44;
  _46 = (unsigned char) Val_88;
  _47 = (unsigned char) mask_89;
  _48 = _46 & _47;
  _49 = _45 | _48;
  if (_39 != _49)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_91 = 1;
  # DEBUG valueChanged => valueChanged_91

  <bb 7> :
  # valueChanged_65 = PHI <valueChanged_66(5), valueChanged_91(6)>
  # DEBUG valueChanged => valueChanged_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _50 = (sizetype) pos_90;
  _51 = dataPtr_83(D) + _50;
  _52 = *_51;
  _53 = (unsigned char) mask_89;
  _54 = ~_53;
  _55 = _52 & _54;
  _56 = (unsigned char) Val_88;
  _57 = (unsigned char) mask_89;
  _58 = _56 & _57;
  _59 = (sizetype) pos_90;
  _60 = dataPtr_83(D) + _59;
  _61 = _55 | _58;
  *_60 = _61;

  <bb 8> :
  # valueChanged_66 = PHI <valueChanged_64(4), valueChanged_65(7)>
  # Val_67 = PHI <Val_82(4), Val_88(7)>
  # mask_68 = PHI <mask_81(4), mask_89(7)>
  # pos_69 = PHI <pos_79(4), pos_90(7)>
  # DEBUG pos => pos_69
  # DEBUG mask => mask_68
  # DEBUG Val => Val_67
  # DEBUG valueChanged => valueChanged_66
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_68 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _62 = IntDataPtr_86(D)->trigger;
  _63 = valueChanged_66 | _62;
  IntDataPtr_86(D)->trigger = _63;
  return;

}


Com_EB_Write_08_SX_DL_DUB_EOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned short pos.118_41;
  unsigned short _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  sizetype _56;
  uint8 * _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  sizetype _65;
  uint8 * _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_74 = 0;
  # DEBUG valueChanged => valueChanged_74
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_76(D)];
  Val_77 = (uint16) _1;
  # DEBUG Val => Val_77
  # DEBUG BEGIN_STMT
  mask_78 = 255;
  # DEBUG mask => mask_78
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_79(D)->ComSignalPositionInBit;
  row_80 = _2 / 8;
  # DEBUG row => row_80
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_79(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_81 = _4 & 7;
  # DEBUG col => col_81
  # DEBUG BEGIN_STMT
  pos_82 = (sint16) row_80;
  # DEBUG pos => pos_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_78;
  _6 = Com_EB_WritePropPtr_79(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_83 = (uint16) _9;
  # DEBUG mask => mask_83
  # DEBUG BEGIN_STMT
  _10 = (int) mask_83;
  _11 = (int) col_81;
  _12 = _10 << _11;
  mask_84 = (uint16) _12;
  # DEBUG mask => mask_84
  # DEBUG BEGIN_STMT
  _13 = (int) Val_77;
  _14 = (int) col_81;
  _15 = _13 << _14;
  Val_85 = (uint16) _15;
  # DEBUG Val => Val_85
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_82;
  _17 = dataPtr_86(D) + _16;
  _18 = *_17;
  _19 = (sizetype) pos_82;
  _20 = dataPtr_86(D) + _19;
  _21 = *_20;
  _22 = (unsigned char) mask_84;
  _23 = ~_22;
  _24 = _21 & _23;
  _25 = (unsigned char) Val_85;
  _26 = (unsigned char) mask_84;
  _27 = _25 & _26;
  _28 = _24 | _27;
  if (_18 != _28)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_87 = 1;
  # DEBUG valueChanged => valueChanged_87

  <bb 4> :
  # valueChanged_70 = PHI <valueChanged_74(2), valueChanged_87(3)>
  # DEBUG valueChanged => valueChanged_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = (sizetype) pos_82;
  _30 = dataPtr_86(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_84;
  _33 = ~_32;
  _34 = _31 & _33;
  _35 = (unsigned char) Val_85;
  _36 = (unsigned char) mask_84;
  _37 = _35 & _36;
  _38 = (sizetype) pos_82;
  _39 = dataPtr_86(D) + _38;
  _40 = _34 | _37;
  *_39 = _40;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_84 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_89 = Val_85 >> 8;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  mask_90 = mask_84 >> 8;
  # DEBUG mask => mask_90
  # DEBUG BEGIN_STMT
  pos.118_41 = (unsigned short) pos_82;
  _42 = pos.118_41 + 65535;
  pos_91 = (sint16) _42;
  # DEBUG pos => pos_91
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_91;
  _44 = dataPtr_86(D) + _43;
  _45 = *_44;
  _46 = (sizetype) pos_91;
  _47 = dataPtr_86(D) + _46;
  _48 = *_47;
  _49 = (unsigned char) mask_90;
  _50 = ~_49;
  _51 = _48 & _50;
  _52 = (unsigned char) Val_89;
  _53 = (unsigned char) mask_90;
  _54 = _52 & _53;
  _55 = _51 | _54;
  if (_45 != _55)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_92 = 1;
  # DEBUG valueChanged => valueChanged_92

  <bb 7> :
  # valueChanged_71 = PHI <valueChanged_70(5), valueChanged_92(6)>
  # DEBUG valueChanged => valueChanged_71
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _56 = (sizetype) pos_91;
  _57 = dataPtr_86(D) + _56;
  _58 = *_57;
  _59 = (unsigned char) mask_90;
  _60 = ~_59;
  _61 = _58 & _60;
  _62 = (unsigned char) Val_89;
  _63 = (unsigned char) mask_90;
  _64 = _62 & _63;
  _65 = (sizetype) pos_91;
  _66 = dataPtr_86(D) + _65;
  _67 = _61 | _64;
  *_66 = _67;

  <bb 8> :
  # valueChanged_72 = PHI <valueChanged_70(4), valueChanged_71(7)>
  # DEBUG valueChanged => valueChanged_72
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _68 = IntDataPtr_94(D)->trigger;
  _69 = valueChanged_72 | _68;
  IntDataPtr_94(D)->trigger = _69;
  return;

}


Com_EB_Write_AY_S1_DL_DUB_EOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * DataPtr_Start;
  const uint8 * U8Ptr;
  uint32 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  unsigned char _4;
  const uint8 * _5;
  unsigned char _6;
  const uint8 * _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  long unsigned int _11;
  unsigned char _12;
  unsigned char _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_18 = 0;
  # DEBUG valueChanged => valueChanged_18
  # DEBUG BEGIN_STMT
  ii_19 = 0;
  # DEBUG ii => ii_19
  # DEBUG BEGIN_STMT
  U8Ptr_21 = SignalDataPtr_20(D);
  # DEBUG U8Ptr => U8Ptr_21
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_23(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  DataPtr_Start_25 = dataPtr_24(D) + _2;
  # DEBUG DataPtr_Start => DataPtr_Start_25
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = DataPtr_Start_25 + ii_16;
  _4 = *_3;
  _5 = U8Ptr_21 + ii_16;
  _6 = *_5;
  if (_4 != _6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_28 = 1;
  # DEBUG valueChanged => valueChanged_28

  <bb 5> :
  # valueChanged_14 = PHI <valueChanged_15(3), valueChanged_28(4)>
  # DEBUG valueChanged => valueChanged_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _7 = U8Ptr_21 + ii_16;
  _8 = DataPtr_Start_25 + ii_16;
  _9 = *_7;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii_30 = ii_16 + 1;
  # DEBUG ii => ii_30

  <bb 6> :
  # valueChanged_15 = PHI <valueChanged_18(2), valueChanged_14(5)>
  # ii_16 = PHI <ii_19(2), ii_30(5)>
  # DEBUG ii => ii_16
  # DEBUG valueChanged => valueChanged_15
  # DEBUG BEGIN_STMT
  _10 = IntDataPtr_26(D)->arraySize;
  _11 = (long unsigned int) _10;
  if (ii_16 < _11)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _12 = IntDataPtr_26(D)->trigger;
  _13 = valueChanged_15 | _12;
  IntDataPtr_26(D)->trigger = _13;
  return;

}


Com_EB_Write_AY_S0_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  uint8 valueChanged;
  short unsigned int _1;
  sizetype _2;
  uint8 * _3;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  sizetype _8;
  const uint8 * _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  short unsigned int ii.119_13;
  short unsigned int _14;
  unsigned char _15;
  unsigned char _16;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_21 = 0;
  # DEBUG valueChanged => valueChanged_21
  # DEBUG BEGIN_STMT
  ii_22 = 0;
  # DEBUG ii => ii_22
  # DEBUG BEGIN_STMT
  U8Ptr_24 = SignalDataPtr_23(D);
  # DEBUG U8Ptr => U8Ptr_24

  <bb 3> :
  # valueChanged_17 = PHI <valueChanged_21(2), valueChanged_18(5)>
  # ii_19 = PHI <ii_22(2), ii_31(5)>
  # DEBUG ii => ii_19
  # DEBUG valueChanged => valueChanged_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_26(D)->ComSignalPositionInBit;
  pos_27 = ii_19 + _1;
  # DEBUG pos => pos_27
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_27;
  _3 = dataPtr_28(D) + _2;
  _4 = *_3;
  _5 = (sizetype) ii_19;
  _6 = U8Ptr_24 + _5;
  _7 = *_6;
  if (_4 != _7)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  valueChanged_29 = 1;
  # DEBUG valueChanged => valueChanged_29

  <bb 5> :
  # valueChanged_18 = PHI <valueChanged_17(3), valueChanged_29(4)>
  # DEBUG valueChanged => valueChanged_18
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = (sizetype) ii_19;
  _9 = U8Ptr_24 + _8;
  _10 = (sizetype) pos_27;
  _11 = dataPtr_28(D) + _10;
  _12 = *_9;
  *_11 = _12;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ii.119_13 = ii_19;
  ii_31 = ii.119_13 + 1;
  # DEBUG ii => ii_31
  # DEBUG BEGIN_STMT
  _14 = Com_EB_WritePropPtr_26(D)->ComSignalBase.ComBitSize;
  if (ii_31 < _14)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _15 = IntDataPtr_32(D)->trigger;
  _16 = valueChanged_18 | _15;
  IntDataPtr_32(D)->trigger = _16;
  return;

}


Com_EB_Write_64_SX_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_EOC_E1 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  return;

}


Com_EB_Write_32_SX_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  sizetype _14;
  uint8 * _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  sizetype _31;
  uint8 * _32;
  unsigned char _33;
  short unsigned int _34;
  unsigned char _35;
  unsigned short pos.120_36;
  unsigned short _37;
  int _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;
  unsigned char _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  unsigned char ssize.121_46;
  unsigned char _47;
  unsigned short pos.122_48;
  unsigned short _49;
  unsigned char _50;
  int _51;
  unsigned int _52;
  sizetype _53;
  uint8 * _54;
  unsigned char _55;
  sizetype _56;
  uint8 * _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  unsigned char _65;
  sizetype _66;
  uint8 * _67;
  unsigned char _68;
  unsigned char _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  unsigned char _74;
  sizetype _75;
  uint8 * _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_90 = 0;
  # DEBUG valueChanged => valueChanged_90
  # DEBUG BEGIN_STMT
  Val_93 = MEM[(const uint32 *)SignalDataPtr_92(D)];
  # DEBUG Val => Val_93
  # DEBUG BEGIN_STMT
  putvalue_94 = (uint8) Val_93;
  # DEBUG putvalue => putvalue_94
  # DEBUG BEGIN_STMT
  mask_95 = 4294967295;
  # DEBUG mask => mask_95
  # DEBUG BEGIN_STMT
  space_96 = 8;
  # DEBUG space => space_96
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_97(D)->ComSignalPositionInBit;
  row_98 = _1 / 8;
  # DEBUG row => row_98
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_97(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_99 = _3 & 7;
  # DEBUG col => col_99
  # DEBUG BEGIN_STMT
  pos_100 = (sint16) row_98;
  # DEBUG pos => pos_100
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_101 = space_96 - col_99;
  # DEBUG space => space_101
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_97(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_102 = mask_95 >> _6;
  # DEBUG mask => mask_102
  # DEBUG BEGIN_STMT
  _7 = (int) col_99;
  mask_103 = mask_102 << _7;
  # DEBUG mask => mask_103
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_94;
  _9 = (int) col_99;
  _10 = _8 << _9;
  putvalue_104 = (uint8) _10;
  # DEBUG putvalue => putvalue_104
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _11 = (sizetype) pos_100;
  _12 = dataPtr_105(D) + _11;
  _13 = *_12;
  _14 = (sizetype) pos_100;
  _15 = dataPtr_105(D) + _14;
  _16 = *_15;
  _17 = (unsigned char) mask_103;
  _18 = ~_17;
  _19 = _16 & _18;
  _20 = (unsigned char) mask_103;
  _21 = putvalue_104 & _20;
  _22 = _19 | _21;
  if (_13 != _22)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_106 = 1;
  # DEBUG valueChanged => valueChanged_106

  <bb 4> :
  # valueChanged_80 = PHI <valueChanged_90(2), valueChanged_106(3)>
  # DEBUG valueChanged => valueChanged_80
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_100;
  _24 = dataPtr_105(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_103;
  _27 = ~_26;
  _28 = _25 & _27;
  _29 = (unsigned char) mask_103;
  _30 = putvalue_104 & _29;
  _31 = (sizetype) pos_100;
  _32 = dataPtr_105(D) + _31;
  _33 = _28 | _30;
  *_32 = _33;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _34 = Com_EB_WritePropPtr_97(D)->ComSignalBase.ComBitSize;
  _35 = (unsigned char) _34;
  tmp_val_108 = _35 - space_101;
  # DEBUG tmp_val => tmp_val_108
  # DEBUG BEGIN_STMT
  ssize_109 = (sint8) tmp_val_108;
  # DEBUG ssize => ssize_109
  # DEBUG BEGIN_STMT
  pos.120_36 = (unsigned short) pos_100;
  _37 = pos.120_36 + 1;
  pos_110 = (sint16) _37;
  # DEBUG pos => pos_110
  # DEBUG BEGIN_STMT
  _38 = (int) space_101;
  Val_111 = Val_93 >> _38;
  # DEBUG Val => Val_111
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _39 = (sizetype) pos_87;
  _40 = dataPtr_105(D) + _39;
  _41 = *_40;
  _42 = (unsigned char) Val_85;
  if (_41 != _42)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_119 = 1;
  # DEBUG valueChanged => valueChanged_119

  <bb 7> :
  # valueChanged_81 = PHI <valueChanged_82(5), valueChanged_119(6)>
  # DEBUG valueChanged => valueChanged_81
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_87;
  _44 = dataPtr_105(D) + _43;
  _45 = (unsigned char) Val_85;
  *_44 = _45;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Val_121 = Val_85 >> 8;
  # DEBUG Val => Val_121
  # DEBUG BEGIN_STMT
  ssize.121_46 = (unsigned char) ssize_86;
  _47 = ssize.121_46 + 248;
  ssize_122 = (sint8) _47;
  # DEBUG ssize => ssize_122
  # DEBUG BEGIN_STMT
  pos.122_48 = (unsigned short) pos_87;
  _49 = pos.122_48 + 1;
  pos_123 = (sint16) _49;
  # DEBUG pos => pos_123

  <bb 8> :
  # valueChanged_82 = PHI <valueChanged_80(4), valueChanged_81(7)>
  # Val_85 = PHI <Val_111(4), Val_121(7)>
  # ssize_86 = PHI <ssize_109(4), ssize_122(7)>
  # pos_87 = PHI <pos_110(4), pos_123(7)>
  # DEBUG pos => pos_87
  # DEBUG ssize => ssize_86
  # DEBUG Val => Val_85
  # DEBUG valueChanged => valueChanged_82
  # DEBUG BEGIN_STMT
  if (ssize_86 > 7)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (ssize_86 > 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ssize_hlp_112 = (uint8) ssize_86;
  # DEBUG ssize_hlp => ssize_hlp_112
  # DEBUG BEGIN_STMT
  _50 = 8 - ssize_hlp_112;
  _51 = (int) _50;
  _52 = 255 >> _51;
  mask_u8_113 = (uint8) _52;
  # DEBUG mask_u8 => mask_u8_113
  # DEBUG BEGIN_STMT
  mask_114 = (uint32) mask_u8_113;
  # DEBUG mask => mask_114
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _53 = (sizetype) pos_87;
  _54 = dataPtr_105(D) + _53;
  _55 = *_54;
  _56 = (sizetype) pos_87;
  _57 = dataPtr_105(D) + _56;
  _58 = *_57;
  _59 = (unsigned char) mask_114;
  _60 = ~_59;
  _61 = _58 & _60;
  _62 = (unsigned char) Val_85;
  _63 = (unsigned char) mask_114;
  _64 = _62 & _63;
  _65 = _61 | _64;
  if (_55 != _65)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  valueChanged_115 = 1;
  # DEBUG valueChanged => valueChanged_115

  <bb 12> :
  # valueChanged_83 = PHI <valueChanged_82(10), valueChanged_115(11)>
  # DEBUG valueChanged => valueChanged_83
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _66 = (sizetype) pos_87;
  _67 = dataPtr_105(D) + _66;
  _68 = *_67;
  _69 = (unsigned char) mask_114;
  _70 = ~_69;
  _71 = _68 & _70;
  _72 = (unsigned char) Val_85;
  _73 = (unsigned char) mask_114;
  _74 = _72 & _73;
  _75 = (sizetype) pos_87;
  _76 = dataPtr_105(D) + _75;
  _77 = _71 | _74;
  *_76 = _77;

  <bb 13> :
  # valueChanged_84 = PHI <valueChanged_82(9), valueChanged_83(12)>
  # DEBUG valueChanged => valueChanged_84
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _78 = IntDataPtr_117(D)->trigger;
  _79 = valueChanged_84 | _78;
  IntDataPtr_117(D)->trigger = _79;
  return;

}


Com_EB_Write_16_SX_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  uint8 valueChanged;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  sizetype _13;
  uint8 * _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  sizetype _23;
  uint8 * _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  sizetype _32;
  uint8 * _33;
  unsigned char _34;
  unsigned short pos.123_35;
  unsigned short _36;
  sizetype _37;
  uint8 * _38;
  unsigned char _39;
  sizetype _40;
  uint8 * _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  unsigned char _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  sizetype _50;
  uint8 * _51;
  unsigned char _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  sizetype _59;
  uint8 * _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_71 = 0;
  # DEBUG valueChanged => valueChanged_71
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_73(D)];
  Val_74 = (uint32) _1;
  # DEBUG Val => Val_74
  # DEBUG BEGIN_STMT
  mask_75 = 65535;
  # DEBUG mask => mask_75
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_76(D)->ComSignalPositionInBit;
  row_77 = _2 / 8;
  # DEBUG row => row_77
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_76(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_78 = _4 & 7;
  # DEBUG col => col_78
  # DEBUG BEGIN_STMT
  pos_79 = (sint16) row_77;
  # DEBUG pos => pos_79
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_76(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_80 = mask_75 >> _7;
  # DEBUG mask => mask_80
  # DEBUG BEGIN_STMT
  _8 = (int) col_78;
  mask_81 = mask_80 << _8;
  # DEBUG mask => mask_81
  # DEBUG BEGIN_STMT
  _9 = (int) col_78;
  Val_82 = Val_74 << _9;
  # DEBUG Val => Val_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = (sizetype) pos_79;
  _11 = dataPtr_83(D) + _10;
  _12 = *_11;
  _13 = (sizetype) pos_79;
  _14 = dataPtr_83(D) + _13;
  _15 = *_14;
  _16 = (unsigned char) mask_81;
  _17 = ~_16;
  _18 = _15 & _17;
  _19 = (unsigned char) Val_82;
  _20 = (unsigned char) mask_81;
  _21 = _19 & _20;
  _22 = _18 | _21;
  if (_12 != _22)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_84 = 1;
  # DEBUG valueChanged => valueChanged_84

  <bb 4> :
  # valueChanged_64 = PHI <valueChanged_71(2), valueChanged_84(3)>
  # DEBUG valueChanged => valueChanged_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_79;
  _24 = dataPtr_83(D) + _23;
  _25 = *_24;
  _26 = (unsigned char) mask_81;
  _27 = ~_26;
  _28 = _25 & _27;
  _29 = (unsigned char) Val_82;
  _30 = (unsigned char) mask_81;
  _31 = _29 & _30;
  _32 = (sizetype) pos_79;
  _33 = dataPtr_83(D) + _32;
  _34 = _28 | _31;
  *_33 = _34;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_88 = Val_67 >> 8;
  # DEBUG Val => Val_88
  # DEBUG BEGIN_STMT
  mask_89 = mask_68 >> 8;
  # DEBUG mask => mask_89
  # DEBUG BEGIN_STMT
  pos.123_35 = (unsigned short) pos_69;
  _36 = pos.123_35 + 1;
  pos_90 = (sint16) _36;
  # DEBUG pos => pos_90
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _37 = (sizetype) pos_90;
  _38 = dataPtr_83(D) + _37;
  _39 = *_38;
  _40 = (sizetype) pos_90;
  _41 = dataPtr_83(D) + _40;
  _42 = *_41;
  _43 = (unsigned char) mask_89;
  _44 = ~_43;
  _45 = _42 & _44;
  _46 = (unsigned char) Val_88;
  _47 = (unsigned char) mask_89;
  _48 = _46 & _47;
  _49 = _45 | _48;
  if (_39 != _49)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_91 = 1;
  # DEBUG valueChanged => valueChanged_91

  <bb 7> :
  # valueChanged_65 = PHI <valueChanged_66(5), valueChanged_91(6)>
  # DEBUG valueChanged => valueChanged_65
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _50 = (sizetype) pos_90;
  _51 = dataPtr_83(D) + _50;
  _52 = *_51;
  _53 = (unsigned char) mask_89;
  _54 = ~_53;
  _55 = _52 & _54;
  _56 = (unsigned char) Val_88;
  _57 = (unsigned char) mask_89;
  _58 = _56 & _57;
  _59 = (sizetype) pos_90;
  _60 = dataPtr_83(D) + _59;
  _61 = _55 | _58;
  *_60 = _61;

  <bb 8> :
  # valueChanged_66 = PHI <valueChanged_64(4), valueChanged_65(7)>
  # Val_67 = PHI <Val_82(4), Val_88(7)>
  # mask_68 = PHI <mask_81(4), mask_89(7)>
  # pos_69 = PHI <pos_79(4), pos_90(7)>
  # DEBUG pos => pos_69
  # DEBUG mask => mask_68
  # DEBUG Val => Val_67
  # DEBUG valueChanged => valueChanged_66
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_68 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _62 = IntDataPtr_86(D)->trigger;
  _63 = valueChanged_66 | _62;
  IntDataPtr_86(D)->trigger = _63;
  return;

}


Com_EB_Write_08_SX_DL_DUB_EOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  uint8 valueChanged;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  sizetype _29;
  uint8 * _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  sizetype _38;
  uint8 * _39;
  unsigned char _40;
  unsigned short pos.124_41;
  unsigned short _42;
  sizetype _43;
  uint8 * _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  unsigned char _54;
  unsigned char _55;
  sizetype _56;
  uint8 * _57;
  unsigned char _58;
  unsigned char _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _62;
  unsigned char _63;
  unsigned char _64;
  sizetype _65;
  uint8 * _66;
  unsigned char _67;
  unsigned char _68;
  unsigned char _69;

  <bb 2> :
  # DEBUG BEGIN_STMT
  valueChanged_74 = 0;
  # DEBUG valueChanged => valueChanged_74
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_76(D)];
  Val_77 = (uint16) _1;
  # DEBUG Val => Val_77
  # DEBUG BEGIN_STMT
  mask_78 = 255;
  # DEBUG mask => mask_78
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_79(D)->ComSignalPositionInBit;
  row_80 = _2 / 8;
  # DEBUG row => row_80
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_79(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_81 = _4 & 7;
  # DEBUG col => col_81
  # DEBUG BEGIN_STMT
  pos_82 = (sint16) row_80;
  # DEBUG pos => pos_82
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_78;
  _6 = Com_EB_WritePropPtr_79(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_83 = (uint16) _9;
  # DEBUG mask => mask_83
  # DEBUG BEGIN_STMT
  _10 = (int) mask_83;
  _11 = (int) col_81;
  _12 = _10 << _11;
  mask_84 = (uint16) _12;
  # DEBUG mask => mask_84
  # DEBUG BEGIN_STMT
  _13 = (int) Val_77;
  _14 = (int) col_81;
  _15 = _13 << _14;
  Val_85 = (uint16) _15;
  # DEBUG Val => Val_85
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_82;
  _17 = dataPtr_86(D) + _16;
  _18 = *_17;
  _19 = (sizetype) pos_82;
  _20 = dataPtr_86(D) + _19;
  _21 = *_20;
  _22 = (unsigned char) mask_84;
  _23 = ~_22;
  _24 = _21 & _23;
  _25 = (unsigned char) Val_85;
  _26 = (unsigned char) mask_84;
  _27 = _25 & _26;
  _28 = _24 | _27;
  if (_18 != _28)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  valueChanged_87 = 1;
  # DEBUG valueChanged => valueChanged_87

  <bb 4> :
  # valueChanged_70 = PHI <valueChanged_74(2), valueChanged_87(3)>
  # DEBUG valueChanged => valueChanged_70
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = (sizetype) pos_82;
  _30 = dataPtr_86(D) + _29;
  _31 = *_30;
  _32 = (unsigned char) mask_84;
  _33 = ~_32;
  _34 = _31 & _33;
  _35 = (unsigned char) Val_85;
  _36 = (unsigned char) mask_84;
  _37 = _35 & _36;
  _38 = (sizetype) pos_82;
  _39 = dataPtr_86(D) + _38;
  _40 = _34 | _37;
  *_39 = _40;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (mask_84 > 255)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Val_89 = Val_85 >> 8;
  # DEBUG Val => Val_89
  # DEBUG BEGIN_STMT
  mask_90 = mask_84 >> 8;
  # DEBUG mask => mask_90
  # DEBUG BEGIN_STMT
  pos.124_41 = (unsigned short) pos_82;
  _42 = pos.124_41 + 1;
  pos_91 = (sint16) _42;
  # DEBUG pos => pos_91
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _43 = (sizetype) pos_91;
  _44 = dataPtr_86(D) + _43;
  _45 = *_44;
  _46 = (sizetype) pos_91;
  _47 = dataPtr_86(D) + _46;
  _48 = *_47;
  _49 = (unsigned char) mask_90;
  _50 = ~_49;
  _51 = _48 & _50;
  _52 = (unsigned char) Val_89;
  _53 = (unsigned char) mask_90;
  _54 = _52 & _53;
  _55 = _51 | _54;
  if (_45 != _55)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  valueChanged_92 = 1;
  # DEBUG valueChanged => valueChanged_92

  <bb 7> :
  # valueChanged_71 = PHI <valueChanged_70(5), valueChanged_92(6)>
  # DEBUG valueChanged => valueChanged_71
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _56 = (sizetype) pos_91;
  _57 = dataPtr_86(D) + _56;
  _58 = *_57;
  _59 = (unsigned char) mask_90;
  _60 = ~_59;
  _61 = _58 & _60;
  _62 = (unsigned char) Val_89;
  _63 = (unsigned char) mask_90;
  _64 = _62 & _63;
  _65 = (sizetype) pos_91;
  _66 = dataPtr_86(D) + _65;
  _67 = _61 | _64;
  *_66 = _67;

  <bb 8> :
  # valueChanged_72 = PHI <valueChanged_70(4), valueChanged_71(7)>
  # DEBUG valueChanged => valueChanged_72
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _68 = IntDataPtr_94(D)->trigger;
  _69 = valueChanged_72 | _68;
  IntDataPtr_94(D)->trigger = _69;
  return;

}


Com_EB_Write_AY_S0_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  const uint8 * _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int ii.125_10;
  short unsigned int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_14 = 0;
  # DEBUG ii => ii_14
  # DEBUG BEGIN_STMT
  U8Ptr_16 = SignalDataPtr_15(D);
  # DEBUG U8Ptr => U8Ptr_16

  <bb 3> :
  # ii_12 = PHI <ii_14(2), ii_22(3)>
  # DEBUG ii => ii_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_18(D)->ComSignalPositionInBit;
  _2 = Com_EB_WritePropPtr_18(D)->ComSignalBase.ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_12;
  pos_19 = _4 + 65535;
  # DEBUG pos => pos_19
  # DEBUG BEGIN_STMT
  _5 = (sizetype) ii_12;
  _6 = U8Ptr_16 + _5;
  _7 = (sizetype) pos_19;
  _8 = dataPtr_20(D) + _7;
  _9 = *_6;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  ii.125_10 = ii_12;
  ii_22 = ii.125_10 + 1;
  # DEBUG ii => ii_22
  # DEBUG BEGIN_STMT
  _11 = Com_EB_WritePropPtr_18(D)->ComSignalBase.ComBitSize;
  if (ii_22 < _11)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_64_SX_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 65504;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E2 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_32_SX_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  short unsigned int _22;
  unsigned char _23;
  unsigned short pos.126_24;
  unsigned short _25;
  int _26;
  sizetype _27;
  uint8 * _28;
  unsigned char _29;
  unsigned char ssize.127_30;
  unsigned char _31;
  unsigned short pos.128_32;
  unsigned short _33;
  unsigned char _34;
  int _35;
  unsigned int _36;
  sizetype _37;
  uint8 * _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  putvalue_57 = (uint8) Val_56;
  # DEBUG putvalue => putvalue_57
  # DEBUG BEGIN_STMT
  mask_58 = 4294967295;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  space_59 = 8;
  # DEBUG space => space_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_60(D)->ComSignalPositionInBit;
  row_61 = _1 / 8;
  # DEBUG row => row_61
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_60(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_62 = _3 & 7;
  # DEBUG col => col_62
  # DEBUG BEGIN_STMT
  pos_63 = (sint16) row_61;
  # DEBUG pos => pos_63
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_64 = space_59 - col_62;
  # DEBUG space => space_64
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_60(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_65 = mask_58 >> _6;
  # DEBUG mask => mask_65
  # DEBUG BEGIN_STMT
  _7 = (int) col_62;
  mask_66 = mask_65 << _7;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_57;
  _9 = (int) col_62;
  _10 = _8 << _9;
  putvalue_67 = (uint8) _10;
  # DEBUG putvalue => putvalue_67
  # DEBUG BEGIN_STMT
  _11 = (sizetype) pos_63;
  _12 = dataPtr_68(D) + _11;
  _13 = *_12;
  _14 = (unsigned char) mask_66;
  _15 = ~_14;
  _16 = _13 & _15;
  _17 = (unsigned char) mask_66;
  _18 = putvalue_67 & _17;
  _19 = (sizetype) pos_63;
  _20 = dataPtr_68(D) + _19;
  _21 = _16 | _18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  _22 = Com_EB_WritePropPtr_60(D)->ComSignalBase.ComBitSize;
  _23 = (unsigned char) _22;
  tmp_val_70 = _23 - space_64;
  # DEBUG tmp_val => tmp_val_70
  # DEBUG BEGIN_STMT
  ssize_71 = (sint8) tmp_val_70;
  # DEBUG ssize => ssize_71
  # DEBUG BEGIN_STMT
  pos.126_24 = (unsigned short) pos_63;
  _25 = pos.126_24 + 65535;
  pos_72 = (sint16) _25;
  # DEBUG pos => pos_72
  # DEBUG BEGIN_STMT
  _26 = (int) space_64;
  Val_73 = Val_56 >> _26;
  # DEBUG Val => Val_73
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _27 = (sizetype) pos_51;
  _28 = dataPtr_68(D) + _27;
  _29 = (unsigned char) Val_49;
  *_28 = _29;
  # DEBUG BEGIN_STMT
  Val_79 = Val_49 >> 8;
  # DEBUG Val => Val_79
  # DEBUG BEGIN_STMT
  ssize.127_30 = (unsigned char) ssize_50;
  _31 = ssize.127_30 + 248;
  ssize_80 = (sint8) _31;
  # DEBUG ssize => ssize_80
  # DEBUG BEGIN_STMT
  pos.128_32 = (unsigned short) pos_51;
  _33 = pos.128_32 + 65535;
  pos_81 = (sint16) _33;
  # DEBUG pos => pos_81

  <bb 4> :
  # Val_49 = PHI <Val_73(2), Val_79(3)>
  # ssize_50 = PHI <ssize_71(2), ssize_80(3)>
  # pos_51 = PHI <pos_72(2), pos_81(3)>
  # DEBUG pos => pos_51
  # DEBUG ssize => ssize_50
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  if (ssize_50 > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ssize_50 > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ssize_hlp_74 = (uint8) ssize_50;
  # DEBUG ssize_hlp => ssize_hlp_74
  # DEBUG BEGIN_STMT
  _34 = 8 - ssize_hlp_74;
  _35 = (int) _34;
  _36 = 255 >> _35;
  mask_u8_75 = (uint8) _36;
  # DEBUG mask_u8 => mask_u8_75
  # DEBUG BEGIN_STMT
  mask_76 = (uint32) mask_u8_75;
  # DEBUG mask => mask_76
  # DEBUG BEGIN_STMT
  _37 = (sizetype) pos_51;
  _38 = dataPtr_68(D) + _37;
  _39 = *_38;
  _40 = (unsigned char) mask_76;
  _41 = ~_40;
  _42 = _39 & _41;
  _43 = (unsigned char) Val_49;
  _44 = (unsigned char) mask_76;
  _45 = _43 & _44;
  _46 = (sizetype) pos_51;
  _47 = dataPtr_68(D) + _46;
  _48 = _42 | _45;
  *_47 = _48;

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_16_SX_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  unsigned short pos.129_22;
  unsigned short _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_41(D)];
  Val_42 = (uint32) _1;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  mask_43 = 65535;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_44(D)->ComSignalPositionInBit;
  row_45 = _2 / 8;
  # DEBUG row => row_45
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_44(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_46 = _4 & 7;
  # DEBUG col => col_46
  # DEBUG BEGIN_STMT
  pos_47 = (sint16) row_45;
  # DEBUG pos => pos_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_44(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_48 = mask_43 >> _7;
  # DEBUG mask => mask_48
  # DEBUG BEGIN_STMT
  _8 = (int) col_46;
  mask_49 = mask_48 << _8;
  # DEBUG mask => mask_49
  # DEBUG BEGIN_STMT
  _9 = (int) col_46;
  Val_50 = Val_42 << _9;
  # DEBUG Val => Val_50
  # DEBUG BEGIN_STMT
  _10 = (sizetype) pos_47;
  _11 = dataPtr_51(D) + _10;
  _12 = *_11;
  _13 = (unsigned char) mask_49;
  _14 = ~_13;
  _15 = _12 & _14;
  _16 = (unsigned char) Val_50;
  _17 = (unsigned char) mask_49;
  _18 = _16 & _17;
  _19 = (sizetype) pos_47;
  _20 = dataPtr_51(D) + _19;
  _21 = _15 | _18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_53 = Val_36 >> 8;
  # DEBUG Val => Val_53
  # DEBUG BEGIN_STMT
  mask_54 = mask_37 >> 8;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  pos.129_22 = (unsigned short) pos_38;
  _23 = pos.129_22 + 65535;
  pos_55 = (sint16) _23;
  # DEBUG pos => pos_55
  # DEBUG BEGIN_STMT
  _24 = (sizetype) pos_55;
  _25 = dataPtr_51(D) + _24;
  _26 = *_25;
  _27 = (unsigned char) mask_54;
  _28 = ~_27;
  _29 = _26 & _28;
  _30 = (unsigned char) Val_53;
  _31 = (unsigned char) mask_54;
  _32 = _30 & _31;
  _33 = (sizetype) pos_55;
  _34 = dataPtr_51(D) + _33;
  _35 = _29 | _32;
  *_34 = _35;

  <bb 4> :
  # Val_36 = PHI <Val_50(2), Val_53(3)>
  # mask_37 = PHI <mask_49(2), mask_54(3)>
  # pos_38 = PHI <pos_47(2), pos_55(3)>
  # DEBUG pos => pos_38
  # DEBUG mask => mask_37
  # DEBUG Val => Val_36
  # DEBUG BEGIN_STMT
  if (mask_37 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_08_SX_DL_DUB_DOC_E2 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned short pos.130_28;
  unsigned short _29;
  sizetype _30;
  uint8 * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_44(D)];
  Val_45 = (uint16) _1;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  mask_46 = 255;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_47(D)->ComSignalPositionInBit;
  row_48 = _2 / 8;
  # DEBUG row => row_48
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_47(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_49 = _4 & 7;
  # DEBUG col => col_49
  # DEBUG BEGIN_STMT
  pos_50 = (sint16) row_48;
  # DEBUG pos => pos_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_46;
  _6 = Com_EB_WritePropPtr_47(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_51 = (uint16) _9;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  _10 = (int) mask_51;
  _11 = (int) col_49;
  _12 = _10 << _11;
  mask_52 = (uint16) _12;
  # DEBUG mask => mask_52
  # DEBUG BEGIN_STMT
  _13 = (int) Val_45;
  _14 = (int) col_49;
  _15 = _13 << _14;
  Val_53 = (uint16) _15;
  # DEBUG Val => Val_53
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_50;
  _17 = dataPtr_54(D) + _16;
  _18 = *_17;
  _19 = (unsigned char) mask_52;
  _20 = ~_19;
  _21 = _18 & _20;
  _22 = (unsigned char) Val_53;
  _23 = (unsigned char) mask_52;
  _24 = _22 & _23;
  _25 = (sizetype) pos_50;
  _26 = dataPtr_54(D) + _25;
  _27 = _21 | _24;
  *_26 = _27;
  # DEBUG BEGIN_STMT
  if (mask_52 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_56 = Val_53 >> 8;
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  mask_57 = mask_52 >> 8;
  # DEBUG mask => mask_57
  # DEBUG BEGIN_STMT
  pos.130_28 = (unsigned short) pos_50;
  _29 = pos.130_28 + 65535;
  pos_58 = (sint16) _29;
  # DEBUG pos => pos_58
  # DEBUG BEGIN_STMT
  _30 = (sizetype) pos_58;
  _31 = dataPtr_54(D) + _30;
  _32 = *_31;
  _33 = (unsigned char) mask_57;
  _34 = ~_33;
  _35 = _32 & _34;
  _36 = (unsigned char) Val_56;
  _37 = (unsigned char) mask_57;
  _38 = _36 & _37;
  _39 = (sizetype) pos_58;
  _40 = dataPtr_54(D) + _39;
  _41 = _35 | _38;
  *_40 = _41;

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_AY_S1_DL_DUB_DOC_E3 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 * DataPtr_Start;
  const uint8 * U8Ptr;
  uint32 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  uint8 * _4;
  unsigned char _5;
  short unsigned int _6;
  long unsigned int _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_10 = 0;
  # DEBUG ii => ii_10
  # DEBUG BEGIN_STMT
  U8Ptr_12 = SignalDataPtr_11(D);
  # DEBUG U8Ptr => U8Ptr_12
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_14(D)->ComSignalPositionInBit;
  _2 = (sizetype) _1;
  DataPtr_Start_16 = dataPtr_15(D) + _2;
  # DEBUG DataPtr_Start => DataPtr_Start_16
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = U8Ptr_12 + ii_8;
  _4 = DataPtr_Start_16 + ii_8;
  _5 = *_3;
  *_4 = _5;
  # DEBUG BEGIN_STMT
  ii_19 = ii_8 + 1;
  # DEBUG ii => ii_19

  <bb 4> :
  # ii_8 = PHI <ii_10(2), ii_19(3)>
  # DEBUG ii => ii_8
  # DEBUG BEGIN_STMT
  _6 = IntDataPtr_17(D)->arraySize;
  _7 = (long unsigned int) _6;
  if (ii_8 < _7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


Com_EB_Write_AY_S0_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint16 pos;
  const uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  sizetype _4;
  uint8 * _5;
  unsigned char _6;
  short unsigned int ii.131_7;
  short unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_11 = 0;
  # DEBUG ii => ii_11
  # DEBUG BEGIN_STMT
  U8Ptr_13 = SignalDataPtr_12(D);
  # DEBUG U8Ptr => U8Ptr_13

  <bb 3> :
  # ii_9 = PHI <ii_11(2), ii_19(3)>
  # DEBUG ii => ii_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_15(D)->ComSignalPositionInBit;
  pos_16 = ii_9 + _1;
  # DEBUG pos => pos_16
  # DEBUG BEGIN_STMT
  _2 = (sizetype) ii_9;
  _3 = U8Ptr_13 + _2;
  _4 = (sizetype) pos_16;
  _5 = dataPtr_17(D) + _4;
  _6 = *_3;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  ii.131_7 = ii_9;
  ii_19 = ii.131_7 + 1;
  # DEBUG ii => ii_19
  # DEBUG BEGIN_STMT
  _8 = Com_EB_WritePropPtr_15(D)->ComSignalBase.ComBitSize;
  if (ii_19 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_64_SX_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  struct ComTxSignalType Com_EB_WriteProp_loc;
  const struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  const uint32 * _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  const uint32 * _7;
  const uint32 * _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_11 = SignalDataPtr_10(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_11
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc = *Com_EB_WritePropPtr_13(D);
  # DEBUG BEGIN_STMT
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _2 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_2, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_13(D)->ComSignalBase.ComBitSize;
  _4 = _3 + 65504;
  Com_EB_WriteProp_loc.ComSignalBase.ComBitSize = _4;
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_13(D)->ComSignalPositionInBit;
  _6 = _5 + 32;
  Com_EB_WriteProp_loc.ComSignalPositionInBit = _6;
  # DEBUG BEGIN_STMT
  _7 = &SignalDataPtr_loc_11->HiWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_7, dataPtr_14(D), &Com_EB_WriteProp_loc, IntDataPtr_15(D));
  Com_EB_WriteProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _8 = &SignalDataPtr_loc_11->LoWord;
  Com_EB_Write_32_SX_DL_DUB_DOC_E1 (_8, dataPtr_14(D), Com_EB_WritePropPtr_13(D), IntDataPtr_15(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_32_SX_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  uint8 mask_u8;
  uint8 ssize_hlp;
  uint8 tmp_val;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  sint8 ssize;
  uint8 space;
  uint32 mask;
  uint8 putvalue;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  sizetype _11;
  uint8 * _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  short unsigned int _22;
  unsigned char _23;
  unsigned short pos.132_24;
  unsigned short _25;
  int _26;
  sizetype _27;
  uint8 * _28;
  unsigned char _29;
  unsigned char ssize.133_30;
  unsigned char _31;
  unsigned short pos.134_32;
  unsigned short _33;
  unsigned char _34;
  int _35;
  unsigned int _36;
  sizetype _37;
  uint8 * _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  unsigned char _44;
  unsigned char _45;
  sizetype _46;
  uint8 * _47;
  unsigned char _48;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Val_56 = MEM[(const uint32 *)SignalDataPtr_55(D)];
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  putvalue_57 = (uint8) Val_56;
  # DEBUG putvalue => putvalue_57
  # DEBUG BEGIN_STMT
  mask_58 = 4294967295;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  space_59 = 8;
  # DEBUG space => space_59
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_WritePropPtr_60(D)->ComSignalPositionInBit;
  row_61 = _1 / 8;
  # DEBUG row => row_61
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_60(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_62 = _3 & 7;
  # DEBUG col => col_62
  # DEBUG BEGIN_STMT
  pos_63 = (sint16) row_61;
  # DEBUG pos => pos_63
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_64 = space_59 - col_62;
  # DEBUG space => space_64
  # DEBUG BEGIN_STMT
  _4 = Com_EB_WritePropPtr_60(D)->ComSignalBase.ComBitSize;
  _5 = (unsigned int) _4;
  _6 = 32 - _5;
  mask_65 = mask_58 >> _6;
  # DEBUG mask => mask_65
  # DEBUG BEGIN_STMT
  _7 = (int) col_62;
  mask_66 = mask_65 << _7;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  _8 = (int) putvalue_57;
  _9 = (int) col_62;
  _10 = _8 << _9;
  putvalue_67 = (uint8) _10;
  # DEBUG putvalue => putvalue_67
  # DEBUG BEGIN_STMT
  _11 = (sizetype) pos_63;
  _12 = dataPtr_68(D) + _11;
  _13 = *_12;
  _14 = (unsigned char) mask_66;
  _15 = ~_14;
  _16 = _13 & _15;
  _17 = (unsigned char) mask_66;
  _18 = putvalue_67 & _17;
  _19 = (sizetype) pos_63;
  _20 = dataPtr_68(D) + _19;
  _21 = _16 | _18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  _22 = Com_EB_WritePropPtr_60(D)->ComSignalBase.ComBitSize;
  _23 = (unsigned char) _22;
  tmp_val_70 = _23 - space_64;
  # DEBUG tmp_val => tmp_val_70
  # DEBUG BEGIN_STMT
  ssize_71 = (sint8) tmp_val_70;
  # DEBUG ssize => ssize_71
  # DEBUG BEGIN_STMT
  pos.132_24 = (unsigned short) pos_63;
  _25 = pos.132_24 + 1;
  pos_72 = (sint16) _25;
  # DEBUG pos => pos_72
  # DEBUG BEGIN_STMT
  _26 = (int) space_64;
  Val_73 = Val_56 >> _26;
  # DEBUG Val => Val_73
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _27 = (sizetype) pos_51;
  _28 = dataPtr_68(D) + _27;
  _29 = (unsigned char) Val_49;
  *_28 = _29;
  # DEBUG BEGIN_STMT
  Val_79 = Val_49 >> 8;
  # DEBUG Val => Val_79
  # DEBUG BEGIN_STMT
  ssize.133_30 = (unsigned char) ssize_50;
  _31 = ssize.133_30 + 248;
  ssize_80 = (sint8) _31;
  # DEBUG ssize => ssize_80
  # DEBUG BEGIN_STMT
  pos.134_32 = (unsigned short) pos_51;
  _33 = pos.134_32 + 1;
  pos_81 = (sint16) _33;
  # DEBUG pos => pos_81

  <bb 4> :
  # Val_49 = PHI <Val_73(2), Val_79(3)>
  # ssize_50 = PHI <ssize_71(2), ssize_80(3)>
  # pos_51 = PHI <pos_72(2), pos_81(3)>
  # DEBUG pos => pos_51
  # DEBUG ssize => ssize_50
  # DEBUG Val => Val_49
  # DEBUG BEGIN_STMT
  if (ssize_50 > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ssize_50 > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ssize_hlp_74 = (uint8) ssize_50;
  # DEBUG ssize_hlp => ssize_hlp_74
  # DEBUG BEGIN_STMT
  _34 = 8 - ssize_hlp_74;
  _35 = (int) _34;
  _36 = 255 >> _35;
  mask_u8_75 = (uint8) _36;
  # DEBUG mask_u8 => mask_u8_75
  # DEBUG BEGIN_STMT
  mask_76 = (uint32) mask_u8_75;
  # DEBUG mask => mask_76
  # DEBUG BEGIN_STMT
  _37 = (sizetype) pos_51;
  _38 = dataPtr_68(D) + _37;
  _39 = *_38;
  _40 = (unsigned char) mask_76;
  _41 = ~_40;
  _42 = _39 & _41;
  _43 = (unsigned char) Val_49;
  _44 = (unsigned char) mask_76;
  _45 = _43 & _44;
  _46 = (sizetype) pos_51;
  _47 = dataPtr_68(D) + _46;
  _48 = _42 | _45;
  *_47 = _48;

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_16_SX_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 mask;
  uint32 Val;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  int _9;
  sizetype _10;
  uint8 * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  unsigned char _18;
  sizetype _19;
  uint8 * _20;
  unsigned char _21;
  unsigned short pos.135_22;
  unsigned short _23;
  sizetype _24;
  uint8 * _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  sizetype _33;
  uint8 * _34;
  unsigned char _35;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint16 *)SignalDataPtr_41(D)];
  Val_42 = (uint32) _1;
  # DEBUG Val => Val_42
  # DEBUG BEGIN_STMT
  mask_43 = 65535;
  # DEBUG mask => mask_43
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_44(D)->ComSignalPositionInBit;
  row_45 = _2 / 8;
  # DEBUG row => row_45
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_44(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_46 = _4 & 7;
  # DEBUG col => col_46
  # DEBUG BEGIN_STMT
  pos_47 = (sint16) row_45;
  # DEBUG pos => pos_47
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Com_EB_WritePropPtr_44(D)->ComSignalBase.ComBitSize;
  _6 = (unsigned int) _5;
  _7 = 16 - _6;
  mask_48 = mask_43 >> _7;
  # DEBUG mask => mask_48
  # DEBUG BEGIN_STMT
  _8 = (int) col_46;
  mask_49 = mask_48 << _8;
  # DEBUG mask => mask_49
  # DEBUG BEGIN_STMT
  _9 = (int) col_46;
  Val_50 = Val_42 << _9;
  # DEBUG Val => Val_50
  # DEBUG BEGIN_STMT
  _10 = (sizetype) pos_47;
  _11 = dataPtr_51(D) + _10;
  _12 = *_11;
  _13 = (unsigned char) mask_49;
  _14 = ~_13;
  _15 = _12 & _14;
  _16 = (unsigned char) Val_50;
  _17 = (unsigned char) mask_49;
  _18 = _16 & _17;
  _19 = (sizetype) pos_47;
  _20 = dataPtr_51(D) + _19;
  _21 = _15 | _18;
  *_20 = _21;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_53 = Val_36 >> 8;
  # DEBUG Val => Val_53
  # DEBUG BEGIN_STMT
  mask_54 = mask_37 >> 8;
  # DEBUG mask => mask_54
  # DEBUG BEGIN_STMT
  pos.135_22 = (unsigned short) pos_38;
  _23 = pos.135_22 + 1;
  pos_55 = (sint16) _23;
  # DEBUG pos => pos_55
  # DEBUG BEGIN_STMT
  _24 = (sizetype) pos_55;
  _25 = dataPtr_51(D) + _24;
  _26 = *_25;
  _27 = (unsigned char) mask_54;
  _28 = ~_27;
  _29 = _26 & _28;
  _30 = (unsigned char) Val_53;
  _31 = (unsigned char) mask_54;
  _32 = _30 & _31;
  _33 = (sizetype) pos_55;
  _34 = dataPtr_51(D) + _33;
  _35 = _29 | _32;
  *_34 = _35;

  <bb 4> :
  # Val_36 = PHI <Val_50(2), Val_53(3)>
  # mask_37 = PHI <mask_49(2), mask_54(3)>
  # pos_38 = PHI <pos_47(2), pos_55(3)>
  # DEBUG pos => pos_38
  # DEBUG mask => mask_37
  # DEBUG Val => Val_36
  # DEBUG BEGIN_STMT
  if (mask_37 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Write_08_SX_DL_DUB_DOC_E1 (const void * SignalDataPtr, uint8 * dataPtr, const struct ComTxSignalType * Com_EB_WritePropPtr, struct Com_EB_WriteIntDataType * IntDataPtr)
{
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint16 mask;
  uint16 Val;
  unsigned char _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  sizetype _16;
  uint8 * _17;
  unsigned char _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  sizetype _25;
  uint8 * _26;
  unsigned char _27;
  unsigned short pos.136_28;
  unsigned short _29;
  sizetype _30;
  uint8 * _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  unsigned char _36;
  unsigned char _37;
  unsigned char _38;
  sizetype _39;
  uint8 * _40;
  unsigned char _41;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint8 *)SignalDataPtr_44(D)];
  Val_45 = (uint16) _1;
  # DEBUG Val => Val_45
  # DEBUG BEGIN_STMT
  mask_46 = 255;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _2 = Com_EB_WritePropPtr_47(D)->ComSignalPositionInBit;
  row_48 = _2 / 8;
  # DEBUG row => row_48
  # DEBUG BEGIN_STMT
  _3 = Com_EB_WritePropPtr_47(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_49 = _4 & 7;
  # DEBUG col => col_49
  # DEBUG BEGIN_STMT
  pos_50 = (sint16) row_48;
  # DEBUG pos => pos_50
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = (int) mask_46;
  _6 = Com_EB_WritePropPtr_47(D)->ComSignalBase.ComBitSize;
  _7 = (unsigned int) _6;
  _8 = 8 - _7;
  _9 = _5 >> _8;
  mask_51 = (uint16) _9;
  # DEBUG mask => mask_51
  # DEBUG BEGIN_STMT
  _10 = (int) mask_51;
  _11 = (int) col_49;
  _12 = _10 << _11;
  mask_52 = (uint16) _12;
  # DEBUG mask => mask_52
  # DEBUG BEGIN_STMT
  _13 = (int) Val_45;
  _14 = (int) col_49;
  _15 = _13 << _14;
  Val_53 = (uint16) _15;
  # DEBUG Val => Val_53
  # DEBUG BEGIN_STMT
  _16 = (sizetype) pos_50;
  _17 = dataPtr_54(D) + _16;
  _18 = *_17;
  _19 = (unsigned char) mask_52;
  _20 = ~_19;
  _21 = _18 & _20;
  _22 = (unsigned char) Val_53;
  _23 = (unsigned char) mask_52;
  _24 = _22 & _23;
  _25 = (sizetype) pos_50;
  _26 = dataPtr_54(D) + _25;
  _27 = _21 | _24;
  *_26 = _27;
  # DEBUG BEGIN_STMT
  if (mask_52 > 255)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Val_56 = Val_53 >> 8;
  # DEBUG Val => Val_56
  # DEBUG BEGIN_STMT
  mask_57 = mask_52 >> 8;
  # DEBUG mask => mask_57
  # DEBUG BEGIN_STMT
  pos.136_28 = (unsigned short) pos_50;
  _29 = pos.136_28 + 1;
  pos_58 = (sint16) _29;
  # DEBUG pos => pos_58
  # DEBUG BEGIN_STMT
  _30 = (sizetype) pos_58;
  _31 = dataPtr_54(D) + _30;
  _32 = *_31;
  _33 = (unsigned char) mask_57;
  _34 = ~_33;
  _35 = _32 & _34;
  _36 = (unsigned char) Val_56;
  _37 = (unsigned char) mask_57;
  _38 = _36 & _37;
  _39 = (sizetype) pos_58;
  _40 = dataPtr_54(D) + _39;
  _41 = _35 | _38;
  *_40 = _41;

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_ZS (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 11, 1);
  # DEBUG BEGIN_STMT
  *retvalPtr_3(D) = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_DET (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (50, 0, 255, 3);
  # DEBUG BEGIN_STMT
  *retvalPtr_3(D) = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_A1_EL (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 pos;
  uint8 * SignalDataPtrU8;
  sizetype _1;
  const uint8 * _2;
  unsigned char _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrU8_5 = SignalDataPtr_4(D);
  # DEBUG SignalDataPtrU8 => SignalDataPtrU8_5
  # DEBUG BEGIN_STMT
  pos_8 = Com_EB_ReadPropPtr_7(D)->ComSignalPositionInBit;
  # DEBUG pos => pos_8
  # DEBUG BEGIN_STMT
  _1 = (sizetype) pos_8;
  _2 = dataPtr_9(D) + _1;
  _3 = *_2;
  *SignalDataPtrU8_5 = _3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_BO_EL (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 bit;
  const uint16 pos;
  boolean * SignalDataPtrBool;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  sizetype _4;
  const uint8 * _5;
  unsigned char _6;
  int _7;
  int _8;
  unsigned char _9;
  unsigned char _10;
  _Bool _11;
  unsigned char _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrBool_14 = SignalDataPtr_13(D);
  # DEBUG SignalDataPtrBool => SignalDataPtrBool_14
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_16(D)->ComSignalPositionInBit;
  pos_17 = _1 / 8;
  # DEBUG pos => pos_17
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_16(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  bit_18 = _3 & 7;
  # DEBUG bit => bit_18
  # DEBUG BEGIN_STMT
  _4 = (sizetype) pos_17;
  _5 = dataPtr_19(D) + _4;
  _6 = *_5;
  _7 = (int) bit_18;
  _8 = 1 << _7;
  _9 = (unsigned char) _8;
  _10 = _6 & _9;
  _11 = _10 != 0;
  _12 = (unsigned char) _11;
  *SignalDataPtrBool_14 = _12;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_A1_DL (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 pos;
  uint8 * SignalDataPtrU8;
  sizetype _1;
  const uint8 * _2;
  unsigned char _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrU8_5 = SignalDataPtr_4(D);
  # DEBUG SignalDataPtrU8 => SignalDataPtrU8_5
  # DEBUG BEGIN_STMT
  pos_8 = Com_EB_ReadPropPtr_7(D)->ComSignalPositionInBit;
  # DEBUG pos => pos_8
  # DEBUG BEGIN_STMT
  _1 = (sizetype) pos_8;
  _2 = dataPtr_9(D) + _1;
  _3 = *_2;
  *SignalDataPtrU8_5 = _3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_BO_DL (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 bit;
  const uint16 pos;
  boolean * SignalDataPtrBool;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  sizetype _4;
  const uint8 * _5;
  unsigned char _6;
  int _7;
  int _8;
  unsigned char _9;
  unsigned char _10;
  _Bool _11;
  unsigned char _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrBool_14 = SignalDataPtr_13(D);
  # DEBUG SignalDataPtrBool => SignalDataPtrBool_14
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_16(D)->ComSignalPositionInBit;
  pos_17 = _1 / 8;
  # DEBUG pos => pos_17
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_16(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  bit_18 = _3 & 7;
  # DEBUG bit => bit_18
  # DEBUG BEGIN_STMT
  _4 = (sizetype) pos_17;
  _5 = dataPtr_19(D) + _4;
  _6 = *_5;
  _7 = (int) bit_18;
  _8 = 1 << _7;
  _9 = (unsigned char) _8;
  _10 = _6 & _9;
  _11 = _10 != 0;
  _12 = (unsigned char) _11;
  *SignalDataPtrBool_14 = _12;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_32_EL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint32 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint32 * SignalDataPtrU32;
  short unsigned int _1;
  int _2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  long unsigned int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrU32_15 = SignalDataPtr_14(D);
  # DEBUG SignalDataPtrU32 => SignalDataPtrU32_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_17(D)->ComRxSignalFlags;
  index_18 = _1 & 47;
  # DEBUG index => index_18
  # DEBUG BEGIN_STMT
  _2 = (int) index_18;
  fptr_19 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_19 (SignalDataPtr_14(D), dataPtr_20(D), Com_EB_ReadPropPtr_17(D), retvalPtr_21(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = *SignalDataPtrU32_15;
  _4 = Com_EB_ReadPropPtr_17(D)->ComBitSize;
  _5 = (unsigned int) _4;
  _6 = _5 + 4294967295;
  _7 = _3 >> _6;
  MSB_23 = (const boolean) _7;
  # DEBUG MSB => MSB_23
  # DEBUG BEGIN_STMT
  if (MSB_23 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _8 = Com_EB_ReadPropPtr_17(D)->ComBitSize;
  _9 = (unsigned int) _8;
  _10 = _9 + 4294967295;
  sigExtMask_24 = 4294967295 << _10;
  # DEBUG sigExtMask => sigExtMask_24
  # DEBUG BEGIN_STMT
  _11 = *SignalDataPtrU32_15;
  _12 = sigExtMask_24 | _11;
  *SignalDataPtrU32_15 = _12;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_32_DL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint32 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint32 * SignalDataPtrU32;
  short unsigned int _1;
  int _2;
  long unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  long unsigned int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrU32_15 = SignalDataPtr_14(D);
  # DEBUG SignalDataPtrU32 => SignalDataPtrU32_15
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_17(D)->ComRxSignalFlags;
  index_18 = _1 & 39;
  # DEBUG index => index_18
  # DEBUG BEGIN_STMT
  _2 = (int) index_18;
  fptr_19 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_19 (SignalDataPtr_14(D), dataPtr_20(D), Com_EB_ReadPropPtr_17(D), retvalPtr_21(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = *SignalDataPtrU32_15;
  _4 = Com_EB_ReadPropPtr_17(D)->ComBitSize;
  _5 = (unsigned int) _4;
  _6 = _5 + 4294967295;
  _7 = _3 >> _6;
  MSB_23 = (const boolean) _7;
  # DEBUG MSB => MSB_23
  # DEBUG BEGIN_STMT
  if (MSB_23 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _8 = Com_EB_ReadPropPtr_17(D)->ComBitSize;
  _9 = (unsigned int) _8;
  _10 = _9 + 4294967295;
  sigExtMask_24 = 4294967295 << _10;
  # DEBUG sigExtMask => sigExtMask_24
  # DEBUG BEGIN_STMT
  _11 = *SignalDataPtrU32_15;
  _12 = sigExtMask_24 | _11;
  *SignalDataPtrU32_15 = _12;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_16_EL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint16 * SignalDataPtrU16;
  short unsigned int _1;
  int _2;
  short unsigned int _3;
  int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrU16_17 = SignalDataPtr_16(D);
  # DEBUG SignalDataPtrU16 => SignalDataPtrU16_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_19(D)->ComRxSignalFlags;
  index_20 = _1 & 47;
  # DEBUG index => index_20
  # DEBUG BEGIN_STMT
  _2 = (int) index_20;
  fptr_21 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_21 (SignalDataPtr_16(D), dataPtr_22(D), Com_EB_ReadPropPtr_19(D), retvalPtr_23(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = *SignalDataPtrU16_17;
  _4 = (int) _3;
  _5 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  _6 = (unsigned int) _5;
  _7 = _6 + 4294967295;
  _8 = _4 >> _7;
  MSB_25 = (const boolean) _8;
  # DEBUG MSB => MSB_25
  # DEBUG BEGIN_STMT
  if (MSB_25 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _9 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  _10 = (unsigned int) _9;
  _11 = _10 + 4294967295;
  _12 = 65535 << _11;
  sigExtMask_26 = (const uint16) _12;
  # DEBUG sigExtMask => sigExtMask_26
  # DEBUG BEGIN_STMT
  _13 = *SignalDataPtrU16_17;
  _14 = sigExtMask_26 | _13;
  *SignalDataPtrU16_17 = _14;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_16_DL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint16 * SignalDataPtrU16;
  short unsigned int _1;
  int _2;
  short unsigned int _3;
  int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  short unsigned int _13;
  short unsigned int _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrU16_17 = SignalDataPtr_16(D);
  # DEBUG SignalDataPtrU16 => SignalDataPtrU16_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_19(D)->ComRxSignalFlags;
  index_20 = _1 & 39;
  # DEBUG index => index_20
  # DEBUG BEGIN_STMT
  _2 = (int) index_20;
  fptr_21 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_21 (SignalDataPtr_16(D), dataPtr_22(D), Com_EB_ReadPropPtr_19(D), retvalPtr_23(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = *SignalDataPtrU16_17;
  _4 = (int) _3;
  _5 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  _6 = (unsigned int) _5;
  _7 = _6 + 4294967295;
  _8 = _4 >> _7;
  MSB_25 = (const boolean) _8;
  # DEBUG MSB => MSB_25
  # DEBUG BEGIN_STMT
  if (MSB_25 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _9 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  _10 = (unsigned int) _9;
  _11 = _10 + 4294967295;
  _12 = 65535 << _11;
  sigExtMask_26 = (const uint16) _12;
  # DEBUG sigExtMask => sigExtMask_26
  # DEBUG BEGIN_STMT
  _13 = *SignalDataPtrU16_17;
  _14 = sigExtMask_26 | _13;
  *SignalDataPtrU16_17 = _14;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_08_EL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 * SignalDataPtrU8;
  short unsigned int _1;
  int _2;
  unsigned char _3;
  int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  unsigned char _13;
  unsigned char _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrU8_17 = SignalDataPtr_16(D);
  # DEBUG SignalDataPtrU8 => SignalDataPtrU8_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_19(D)->ComRxSignalFlags;
  index_20 = _1 & 47;
  # DEBUG index => index_20
  # DEBUG BEGIN_STMT
  _2 = (int) index_20;
  fptr_21 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_21 (SignalDataPtr_16(D), dataPtr_22(D), Com_EB_ReadPropPtr_19(D), retvalPtr_23(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = *SignalDataPtrU8_17;
  _4 = (int) _3;
  _5 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  _6 = (unsigned int) _5;
  _7 = _6 + 4294967295;
  _8 = _4 >> _7;
  MSB_25 = (const boolean) _8;
  # DEBUG MSB => MSB_25
  # DEBUG BEGIN_STMT
  if (MSB_25 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _9 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  _10 = (unsigned int) _9;
  _11 = _10 + 4294967295;
  _12 = 255 << _11;
  sigExtMask_26 = (const uint8) _12;
  # DEBUG sigExtMask => sigExtMask_26
  # DEBUG BEGIN_STMT
  _13 = *SignalDataPtrU8_17;
  _14 = sigExtMask_26 | _13;
  *SignalDataPtrU8_17 = _14;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_08_DL_SignExt (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 sigExtMask;
  const boolean MSB;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 * SignalDataPtrU8;
  short unsigned int _1;
  int _2;
  unsigned char _3;
  int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  short unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  unsigned char _13;
  unsigned char _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtrU8_17 = SignalDataPtr_16(D);
  # DEBUG SignalDataPtrU8 => SignalDataPtrU8_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_19(D)->ComRxSignalFlags;
  index_20 = _1 & 39;
  # DEBUG index => index_20
  # DEBUG BEGIN_STMT
  _2 = (int) index_20;
  fptr_21 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_21
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_21 (SignalDataPtr_16(D), dataPtr_22(D), Com_EB_ReadPropPtr_19(D), retvalPtr_23(D));
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = *SignalDataPtrU8_17;
  _4 = (int) _3;
  _5 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  _6 = (unsigned int) _5;
  _7 = _6 + 4294967295;
  _8 = _4 >> _7;
  MSB_25 = (const boolean) _8;
  # DEBUG MSB => MSB_25
  # DEBUG BEGIN_STMT
  if (MSB_25 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _9 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  _10 = (unsigned int) _9;
  _11 = _10 + 4294967295;
  _12 = 255 << _11;
  sigExtMask_26 = (const uint8) _12;
  # DEBUG sigExtMask => sigExtMask_26
  # DEBUG BEGIN_STMT
  _13 = *SignalDataPtrU8_17;
  _14 = sigExtMask_26 | _13;
  *SignalDataPtrU8_17 = _14;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_AY_EL_E3 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 * const valPtr;
  ComSignalDescBitType startbyte;
  sizetype _1;
  short unsigned int _2;
  long unsigned int _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  startbyte_6 = Com_EB_ReadPropPtr_5(D)->ComSignalPositionInBit;
  # DEBUG startbyte => startbyte_6
  # DEBUG BEGIN_STMT
  _1 = (sizetype) startbyte_6;
  valPtr_8 = dataPtr_7(D) + _1;
  # DEBUG valPtr => valPtr_8
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_5(D)->ComBitSize;
  _3 = (long unsigned int) _2;
  TS_MemCpy32 (SignalDataPtr_10(D), valPtr_8, _3);
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_AY_DL_E3 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 * const valPtr;
  ComSignalDescBitType startbyte;
  sizetype _1;
  short unsigned int _2;
  long unsigned int _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  startbyte_6 = Com_EB_ReadPropPtr_5(D)->ComSignalPositionInBit;
  # DEBUG startbyte => startbyte_6
  # DEBUG BEGIN_STMT
  _1 = (sizetype) startbyte_6;
  valPtr_8 = dataPtr_7(D) + _1;
  # DEBUG valPtr => valPtr_8
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_5(D)->ComBitSize;
  _3 = (long unsigned int) _2;
  TS_MemCpy32 (SignalDataPtr_9(D), valPtr_8, _3);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_AY_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  uint16 pos;
  uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  const uint8 * _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int ii.1_10;
  short unsigned int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_14 = 0;
  # DEBUG ii => ii_14
  # DEBUG BEGIN_STMT
  U8Ptr_16 = SignalDataPtr_15(D);
  # DEBUG U8Ptr => U8Ptr_16
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> :
  # ii_12 = PHI <ii_14(2), ii_23(3)>
  # DEBUG ii => ii_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_19(D)->ComSignalPositionInBit;
  _2 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_12;
  pos_20 = _4 + 65535;
  # DEBUG pos => pos_20
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_20;
  _6 = dataPtr_21(D) + _5;
  _7 = (sizetype) ii_12;
  _8 = U8Ptr_16 + _7;
  _9 = *_6;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  ii.1_10 = ii_12;
  ii_23 = ii.1_10 + 1;
  # DEBUG ii => ii_23
  # DEBUG BEGIN_STMT
  _11 = Com_EB_ReadPropPtr_19(D)->ComBitSize;
  if (ii_23 < _11)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_64_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  struct ComSignalBaseType Com_EB_ReadProp_loc;
  struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  uint32 * _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  uint32 * _9;
  uint32 * _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_13 = SignalDataPtr_12(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_13
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc = *Com_EB_ReadPropPtr_15(D);
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  _3 = _2 + 65504;
  Com_EB_ReadProp_loc.ComBitSize = _3;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _4 = &SignalDataPtr_loc_13->HiWord;
  Com_EB_Read_32_DL_E2 (_4, dataPtr_16(D), &Com_EB_ReadProp_loc, retvalPtr_17(D));
  # DEBUG BEGIN_STMT
  _5 = Com_EB_ReadPropPtr_15(D)->ComSignalPositionInBit;
  _6 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  _7 = _5 + _6;
  _8 = _7 + 65504;
  Com_EB_ReadProp_loc.ComSignalPositionInBit = _8;
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _9 = &SignalDataPtr_loc_13->LoWord;
  Com_EB_Read_32_DL_E2 (_9, dataPtr_16(D), &Com_EB_ReadProp_loc, retvalPtr_17(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_ReadProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _10 = &SignalDataPtr_loc_13->LoWord;
  Com_EB_Read_32_EL_E2 (_10, dataPtr_16(D), Com_EB_ReadPropPtr_15(D), retvalPtr_17(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_32_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 tmp_val;
  const uint8 mask;
  const uint8 space;
  ComSignalBitSizeType size;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 value;
  uint32 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  int _6;
  sizetype _7;
  const uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  unsigned short pos.2_14;
  unsigned short _15;
  short unsigned int _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  long unsigned int _20;
  unsigned short pos.3_21;
  unsigned short _22;
  int _23;
  sizetype _24;
  const uint8 * _25;
  unsigned char _26;
  long unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  long unsigned int _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_36 = SignalDataPtr_35(D);
  # DEBUG retPtr => retPtr_36
  # DEBUG BEGIN_STMT
  value_37 = 0;
  # DEBUG value => value_37
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _1 / 8;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_41 = _3 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  pos_42 = (sint16) row_40;
  # DEBUG pos => pos_42
  # DEBUG BEGIN_STMT
  size_43 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  # DEBUG size => size_43
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (col_41 != 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  space_45 = col_41 + 1;
  # DEBUG space => space_45
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) col_41;
  _5 = 7 - _4;
  _6 = 255 >> _5;
  mask_46 = (const uint8) _6;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _7 = (sizetype) pos_42;
  _8 = dataPtr_47(D) + _7;
  _9 = *_8;
  tmp_val_48 = mask_46 & _9;
  # DEBUG tmp_val => tmp_val_48
  # DEBUG BEGIN_STMT
  value_49 = (uint32) tmp_val_48;
  # DEBUG value => value_49
  # DEBUG BEGIN_STMT
  _10 = (short unsigned int) space_45;
  if (size_43 <= _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _11 = (int) space_45;
  _12 = (int) size_43;
  _13 = _11 - _12;
  value_52 = value_49 >> _13;
  # DEBUG value => value_52
  # DEBUG BEGIN_STMT
  size_53 = 0;
  # DEBUG size => size_53
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  pos.2_14 = (unsigned short) pos_42;
  _15 = pos.2_14 + 1;
  pos_50 = (sint16) _15;
  # DEBUG pos => pos_50
  # DEBUG BEGIN_STMT
  _16 = (short unsigned int) space_45;
  size_51 = size_43 - _16;
  # DEBUG size => size_51
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  value_58 = value_31 << 8;
  # DEBUG value => value_58
  # DEBUG BEGIN_STMT
  _17 = (sizetype) pos_33;
  _18 = dataPtr_47(D) + _17;
  _19 = *_18;
  _20 = (long unsigned int) _19;
  value_59 = value_58 + _20;
  # DEBUG value => value_59
  # DEBUG BEGIN_STMT
  size_60 = size_34 + 65528;
  # DEBUG size => size_60
  # DEBUG BEGIN_STMT
  pos.3_21 = (unsigned short) pos_33;
  _22 = pos.3_21 + 1;
  pos_61 = (sint16) _22;
  # DEBUG pos => pos_61

  <bb 7> :
  # value_31 = PHI <value_52(4), value_59(6), value_37(2), value_49(5)>
  # pos_33 = PHI <pos_42(4), pos_61(6), pos_42(2), pos_50(5)>
  # size_34 = PHI <size_53(4), size_60(6), size_43(2), size_51(5)>
  # DEBUG size => size_34
  # DEBUG pos => pos_33
  # DEBUG value => value_31
  # DEBUG BEGIN_STMT
  if (size_34 > 7)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (size_34 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _23 = (int) size_34;
  value_54 = value_31 << _23;
  # DEBUG value => value_54
  # DEBUG BEGIN_STMT
  _24 = (sizetype) pos_33;
  _25 = dataPtr_47(D) + _24;
  _26 = *_25;
  _27 = (long unsigned int) _26;
  _28 = (unsigned int) size_34;
  _29 = 8 - _28;
  _30 = _27 >> _29;
  value_55 = value_54 + _30;
  # DEBUG value => value_55

  <bb 10> :
  # value_32 = PHI <value_31(8), value_55(9)>
  # DEBUG value => value_32
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  *retPtr_36 = value_32;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_16_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 mask;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 tmpval;
  sint8 ssize;
  uint8 bitsread;
  uint16 value;
  uint16 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  unsigned char ssize.4_8;
  unsigned char _9;
  unsigned char ssize.5_10;
  unsigned char _11;
  unsigned short pos.6_12;
  unsigned short _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  long unsigned int _17;
  int _18;
  short unsigned int _19;
  int _20;
  int _21;
  long unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  unsigned char ssize.7_26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.8_29;
  unsigned char _30;
  unsigned short pos.9_31;
  unsigned short _32;
  sizetype _33;
  const uint8 * _34;
  unsigned char _35;
  long unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  short unsigned int _40;
  unsigned char _41;
  unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  long unsigned int _45;
  short unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  unsigned int _49;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_60 = SignalDataPtr_59(D);
  # DEBUG retPtr => retPtr_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  bitsread_61 = 0;
  # DEBUG bitsread => bitsread_61
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  ssize_64 = (sint8) _1;
  # DEBUG ssize => ssize_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  row_65 = _2 / 8;
  # DEBUG row => row_65
  # DEBUG BEGIN_STMT
  _3 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_66 = _4 & 7;
  # DEBUG col => col_66
  # DEBUG BEGIN_STMT
  pos_67 = (sint16) row_65;
  # DEBUG pos => pos_67
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (col_66 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  bitsread_78 = 8;
  # DEBUG bitsread => bitsread_78
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_67;
  _6 = dataPtr_69(D) + _5;
  _7 = *_6;
  tmpval_79 = (uint32) _7;
  # DEBUG tmpval => tmpval_79
  # DEBUG BEGIN_STMT
  ssize.4_8 = (unsigned char) ssize_64;
  _9 = ssize.4_8 + 248;
  ssize_80 = (sint8) _9;
  # DEBUG ssize => ssize_80
  # DEBUG BEGIN_STMT
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  bitsread_82 = bitsread_51 + 8;
  # DEBUG bitsread => bitsread_82
  # DEBUG BEGIN_STMT
  ssize.5_10 = (unsigned char) ssize_53;
  _11 = ssize.5_10 + 248;
  ssize_83 = (sint8) _11;
  # DEBUG ssize => ssize_83
  # DEBUG BEGIN_STMT
  tmpval_84 = tmpval_55 << 8;
  # DEBUG tmpval => tmpval_84
  # DEBUG BEGIN_STMT
  pos.6_12 = (unsigned short) pos_57;
  _13 = pos.6_12 + 1;
  pos_85 = (sint16) _13;
  # DEBUG pos => pos_85
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_85;
  _15 = dataPtr_69(D) + _14;
  _16 = *_15;
  _17 = (long unsigned int) _16;
  tmpval_86 = tmpval_84 | _17;
  # DEBUG tmpval => tmpval_86

  <bb 5> :
  # bitsread_51 = PHI <bitsread_78(3), bitsread_82(4)>
  # ssize_53 = PHI <ssize_80(3), ssize_83(4)>
  # tmpval_55 = PHI <tmpval_79(3), tmpval_86(4)>
  # pos_57 = PHI <pos_67(3), pos_85(4)>
  # DEBUG pos => pos_57
  # DEBUG tmpval => tmpval_55
  # DEBUG ssize => ssize_53
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  if (ssize_53 > 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _18 = (int) bitsread_51;
  _19 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _20 = (int) _19;
  _21 = _18 - _20;
  _22 = tmpval_55 >> _21;
  value_81 = (uint16) _22;
  # DEBUG value => value_81
  goto <bb 11>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_67;
  _24 = dataPtr_69(D) + _23;
  _25 = *_24;
  tmpval_70 = (uint32) _25;
  # DEBUG tmpval => tmpval_70
  # DEBUG BEGIN_STMT
  ssize.7_26 = (unsigned char) ssize_64;
  _27 = ssize.7_26 - col_66;
  _28 = _27 + 255;
  ssize_71 = (sint8) _28;
  # DEBUG ssize => ssize_71
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  bitsread_73 = bitsread_52 + 8;
  # DEBUG bitsread => bitsread_73
  # DEBUG BEGIN_STMT
  ssize.8_29 = (unsigned char) ssize_54;
  _30 = ssize.8_29 + 248;
  ssize_74 = (sint8) _30;
  # DEBUG ssize => ssize_74
  # DEBUG BEGIN_STMT
  tmpval_75 = tmpval_56 << 8;
  # DEBUG tmpval => tmpval_75
  # DEBUG BEGIN_STMT
  pos.9_31 = (unsigned short) pos_58;
  _32 = pos.9_31 + 1;
  pos_76 = (sint16) _32;
  # DEBUG pos => pos_76
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_76;
  _34 = dataPtr_69(D) + _33;
  _35 = *_34;
  _36 = (long unsigned int) _35;
  tmpval_77 = tmpval_75 | _36;
  # DEBUG tmpval => tmpval_77

  <bb 9> :
  # bitsread_52 = PHI <bitsread_61(7), bitsread_73(8)>
  # ssize_54 = PHI <ssize_71(7), ssize_74(8)>
  # tmpval_56 = PHI <tmpval_70(7), tmpval_77(8)>
  # pos_58 = PHI <pos_67(7), pos_76(8)>
  # DEBUG pos => pos_58
  # DEBUG tmpval => tmpval_56
  # DEBUG ssize => ssize_54
  # DEBUG bitsread => bitsread_52
  # DEBUG BEGIN_STMT
  if (ssize_54 > 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _37 = (unsigned int) col_66;
  _38 = (unsigned int) bitsread_52;
  _39 = _37 + _38;
  _40 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _41 = (unsigned char) _40;
  _42 = (unsigned int) _41;
  _43 = _39 - _42;
  _44 = _43 + 1;
  _45 = tmpval_56 >> _44;
  value_72 = (uint16) _45;
  # DEBUG value => value_72

  <bb 11> :
  # value_50 = PHI <value_81(6), value_72(10)>
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _46 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _47 = (unsigned int) _46;
  _48 = 16 - _47;
  _49 = 65535 >> _48;
  mask_88 = (const uint16) _49;
  # DEBUG mask => mask_88
  # DEBUG BEGIN_STMT
  value_89 = value_50 & mask_88;
  # DEBUG value => value_89
  # DEBUG BEGIN_STMT
  *retPtr_60 = value_89;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_08_EL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 mask;
  uint8 bitsread;
  const uint8 space;
  uint16 tmpval;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint8 value;
  uint8 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  sizetype _4;
  const uint8 * _5;
  unsigned char _6;
  int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  short unsigned int _12;
  short unsigned int _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  unsigned short pos.10_17;
  unsigned short _18;
  sizetype _19;
  const uint8 * _20;
  unsigned char _21;
  short unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  short unsigned int _30;
  unsigned char _31;
  unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  int _35;
  short unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_46 = SignalDataPtr_45(D);
  # DEBUG retPtr => retPtr_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_48(D)->ComSignalPositionInBit;
  row_49 = _1 / 8;
  # DEBUG row => row_49
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_48(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_50 = _3 & 7;
  # DEBUG col => col_50
  # DEBUG BEGIN_STMT
  pos_51 = (sint16) row_49;
  # DEBUG pos => pos_51
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_52 = col_50 + 1;
  # DEBUG space => space_52
  # DEBUG BEGIN_STMT
  bitsread_53 = 0;
  # DEBUG bitsread => bitsread_53
  # DEBUG BEGIN_STMT
  if (col_50 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = (sizetype) pos_51;
  _5 = dataPtr_54(D) + _4;
  _6 = *_5;
  tmpval_64 = (uint16) _6;
  # DEBUG tmpval => tmpval_64
  # DEBUG BEGIN_STMT
  _7 = (int) tmpval_64;
  _8 = Com_EB_ReadPropPtr_48(D)->ComBitSize;
  _9 = (unsigned int) _8;
  _10 = 8 - _9;
  _11 = _7 >> _10;
  value_65 = (uint8) _11;
  # DEBUG value => value_65
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _12 = (short unsigned int) space_52;
  _13 = Com_EB_ReadPropPtr_48(D)->ComBitSize;
  if (_12 < _13)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_51;
  _15 = dataPtr_54(D) + _14;
  _16 = *_15;
  tmpval_57 = (uint16) _16;
  # DEBUG tmpval => tmpval_57
  # DEBUG BEGIN_STMT
  bitsread_58 = bitsread_53 + 8;
  # DEBUG bitsread => bitsread_58
  # DEBUG BEGIN_STMT
  tmpval_59 = tmpval_57 << 8;
  # DEBUG tmpval => tmpval_59
  # DEBUG BEGIN_STMT
  pos.10_17 = (unsigned short) pos_51;
  _18 = pos.10_17 + 1;
  pos_60 = (sint16) _18;
  # DEBUG pos => pos_60
  # DEBUG BEGIN_STMT
  _19 = (sizetype) pos_60;
  _20 = dataPtr_54(D) + _19;
  _21 = *_20;
  _22 = (short unsigned int) _21;
  tmpval_61 = tmpval_59 | _22;
  # DEBUG tmpval => tmpval_61
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_51;
  _24 = dataPtr_54(D) + _23;
  _25 = *_24;
  tmpval_55 = (uint16) _25;
  # DEBUG tmpval => tmpval_55

  <bb 7> :
  # tmpval_41 = PHI <tmpval_61(5), tmpval_55(6)>
  # bitsread_42 = PHI <bitsread_58(5), bitsread_53(6)>
  # DEBUG bitsread => bitsread_42
  # DEBUG tmpval => tmpval_41
  # DEBUG BEGIN_STMT
  _26 = (int) tmpval_41;
  _27 = (unsigned int) col_50;
  _28 = (unsigned int) bitsread_42;
  _29 = _27 + _28;
  _30 = Com_EB_ReadPropPtr_48(D)->ComBitSize;
  _31 = (unsigned char) _30;
  _32 = (unsigned int) _31;
  _33 = _29 - _32;
  _34 = _33 + 1;
  _35 = _26 >> _34;
  value_63 = (uint8) _35;
  # DEBUG value => value_63

  <bb 8> :
  # value_40 = PHI <value_65(3), value_63(7)>
  # DEBUG value => value_40
  # DEBUG BEGIN_STMT
  _36 = Com_EB_ReadPropPtr_48(D)->ComBitSize;
  _37 = (unsigned int) _36;
  _38 = 8 - _37;
  _39 = 255 >> _38;
  mask_66 = (const uint8) _39;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  value_67 = value_40 & mask_66;
  # DEBUG value => value_67
  # DEBUG BEGIN_STMT
  *retPtr_46 = value_67;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_AY_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  uint16 pos;
  uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  sizetype _4;
  uint8 * _5;
  unsigned char _6;
  short unsigned int ii.11_7;
  short unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_11 = 0;
  # DEBUG ii => ii_11
  # DEBUG BEGIN_STMT
  U8Ptr_13 = SignalDataPtr_12(D);
  # DEBUG U8Ptr => U8Ptr_13
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();

  <bb 3> :
  # ii_9 = PHI <ii_11(2), ii_20(3)>
  # DEBUG ii => ii_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_16(D)->ComSignalPositionInBit;
  pos_17 = ii_9 + _1;
  # DEBUG pos => pos_17
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_17;
  _3 = dataPtr_18(D) + _2;
  _4 = (sizetype) ii_9;
  _5 = U8Ptr_13 + _4;
  _6 = *_3;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  ii.11_7 = ii_9;
  ii_20 = ii.11_7 + 1;
  # DEBUG ii => ii_20
  # DEBUG BEGIN_STMT
  _8 = Com_EB_ReadPropPtr_16(D)->ComBitSize;
  if (ii_20 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_64_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  struct ComSignalBaseType Com_EB_ReadProp_loc;
  struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  uint32 * _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  uint32 * _9;
  uint32 * _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_13 = SignalDataPtr_12(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_13
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc = *Com_EB_ReadPropPtr_15(D);
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  _3 = _2 + 65504;
  Com_EB_ReadProp_loc.ComBitSize = _3;
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _4 = &SignalDataPtr_loc_13->HiWord;
  Com_EB_Read_32_DL_E1 (_4, dataPtr_16(D), &Com_EB_ReadProp_loc, retvalPtr_17(D));
  # DEBUG BEGIN_STMT
  _5 = Com_EB_ReadPropPtr_15(D)->ComSignalPositionInBit;
  _6 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  _7 = _5 - _6;
  _8 = _7 + 32;
  Com_EB_ReadProp_loc.ComSignalPositionInBit = _8;
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _9 = &SignalDataPtr_loc_13->LoWord;
  Com_EB_Read_32_DL_E1 (_9, dataPtr_16(D), &Com_EB_ReadProp_loc, retvalPtr_17(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  Com_EB_ReadProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _10 = &SignalDataPtr_loc_13->LoWord;
  Com_EB_Read_32_EL_E1 (_10, dataPtr_16(D), Com_EB_ReadPropPtr_15(D), retvalPtr_17(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_32_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 tmp_val;
  const uint8 mask;
  const uint8 space;
  ComSignalBitSizeType size;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 value;
  uint32 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  int _6;
  sizetype _7;
  const uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  unsigned short pos.12_14;
  unsigned short _15;
  short unsigned int _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  long unsigned int _20;
  unsigned short pos.13_21;
  unsigned short _22;
  int _23;
  sizetype _24;
  const uint8 * _25;
  unsigned char _26;
  long unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  long unsigned int _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_36 = SignalDataPtr_35(D);
  # DEBUG retPtr => retPtr_36
  # DEBUG BEGIN_STMT
  value_37 = 0;
  # DEBUG value => value_37
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _1 / 8;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_41 = _3 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  pos_42 = (sint16) row_40;
  # DEBUG pos => pos_42
  # DEBUG BEGIN_STMT
  size_43 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  # DEBUG size => size_43
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (col_41 != 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  space_45 = col_41 + 1;
  # DEBUG space => space_45
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) col_41;
  _5 = 7 - _4;
  _6 = 255 >> _5;
  mask_46 = (const uint8) _6;
  # DEBUG mask => mask_46
  # DEBUG BEGIN_STMT
  _7 = (sizetype) pos_42;
  _8 = dataPtr_47(D) + _7;
  _9 = *_8;
  tmp_val_48 = mask_46 & _9;
  # DEBUG tmp_val => tmp_val_48
  # DEBUG BEGIN_STMT
  value_49 = (uint32) tmp_val_48;
  # DEBUG value => value_49
  # DEBUG BEGIN_STMT
  _10 = (short unsigned int) space_45;
  if (size_43 <= _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _11 = (int) space_45;
  _12 = (int) size_43;
  _13 = _11 - _12;
  value_52 = value_49 >> _13;
  # DEBUG value => value_52
  # DEBUG BEGIN_STMT
  size_53 = 0;
  # DEBUG size => size_53
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  pos.12_14 = (unsigned short) pos_42;
  _15 = pos.12_14 + 65535;
  pos_50 = (sint16) _15;
  # DEBUG pos => pos_50
  # DEBUG BEGIN_STMT
  _16 = (short unsigned int) space_45;
  size_51 = size_43 - _16;
  # DEBUG size => size_51
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  value_58 = value_31 << 8;
  # DEBUG value => value_58
  # DEBUG BEGIN_STMT
  _17 = (sizetype) pos_33;
  _18 = dataPtr_47(D) + _17;
  _19 = *_18;
  _20 = (long unsigned int) _19;
  value_59 = value_58 + _20;
  # DEBUG value => value_59
  # DEBUG BEGIN_STMT
  size_60 = size_34 + 65528;
  # DEBUG size => size_60
  # DEBUG BEGIN_STMT
  pos.13_21 = (unsigned short) pos_33;
  _22 = pos.13_21 + 65535;
  pos_61 = (sint16) _22;
  # DEBUG pos => pos_61

  <bb 7> :
  # value_31 = PHI <value_52(4), value_59(6), value_37(2), value_49(5)>
  # pos_33 = PHI <pos_42(4), pos_61(6), pos_42(2), pos_50(5)>
  # size_34 = PHI <size_53(4), size_60(6), size_43(2), size_51(5)>
  # DEBUG size => size_34
  # DEBUG pos => pos_33
  # DEBUG value => value_31
  # DEBUG BEGIN_STMT
  if (size_34 > 7)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (size_34 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _23 = (int) size_34;
  value_54 = value_31 << _23;
  # DEBUG value => value_54
  # DEBUG BEGIN_STMT
  _24 = (sizetype) pos_33;
  _25 = dataPtr_47(D) + _24;
  _26 = *_25;
  _27 = (long unsigned int) _26;
  _28 = (unsigned int) size_34;
  _29 = 8 - _28;
  _30 = _27 >> _29;
  value_55 = value_54 + _30;
  # DEBUG value => value_55

  <bb 10> :
  # value_32 = PHI <value_31(8), value_55(9)>
  # DEBUG value => value_32
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  *retPtr_36 = value_32;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_16_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 mask;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 tmpval;
  sint8 ssize;
  uint8 bitsread;
  uint16 value;
  uint16 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  unsigned char ssize.14_8;
  unsigned char _9;
  unsigned char ssize.15_10;
  unsigned char _11;
  unsigned short pos.16_12;
  unsigned short _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  long unsigned int _17;
  int _18;
  short unsigned int _19;
  int _20;
  int _21;
  long unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  unsigned char ssize.17_26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.18_29;
  unsigned char _30;
  unsigned short pos.19_31;
  unsigned short _32;
  sizetype _33;
  const uint8 * _34;
  unsigned char _35;
  long unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  short unsigned int _40;
  unsigned char _41;
  unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  long unsigned int _45;
  short unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  unsigned int _49;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_60 = SignalDataPtr_59(D);
  # DEBUG retPtr => retPtr_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  bitsread_61 = 0;
  # DEBUG bitsread => bitsread_61
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  ssize_64 = (sint8) _1;
  # DEBUG ssize => ssize_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  row_65 = _2 / 8;
  # DEBUG row => row_65
  # DEBUG BEGIN_STMT
  _3 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_66 = _4 & 7;
  # DEBUG col => col_66
  # DEBUG BEGIN_STMT
  pos_67 = (sint16) row_65;
  # DEBUG pos => pos_67
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (col_66 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  bitsread_78 = 8;
  # DEBUG bitsread => bitsread_78
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_67;
  _6 = dataPtr_69(D) + _5;
  _7 = *_6;
  tmpval_79 = (uint32) _7;
  # DEBUG tmpval => tmpval_79
  # DEBUG BEGIN_STMT
  ssize.14_8 = (unsigned char) ssize_64;
  _9 = ssize.14_8 + 248;
  ssize_80 = (sint8) _9;
  # DEBUG ssize => ssize_80
  # DEBUG BEGIN_STMT
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  bitsread_82 = bitsread_51 + 8;
  # DEBUG bitsread => bitsread_82
  # DEBUG BEGIN_STMT
  ssize.15_10 = (unsigned char) ssize_53;
  _11 = ssize.15_10 + 248;
  ssize_83 = (sint8) _11;
  # DEBUG ssize => ssize_83
  # DEBUG BEGIN_STMT
  tmpval_84 = tmpval_55 << 8;
  # DEBUG tmpval => tmpval_84
  # DEBUG BEGIN_STMT
  pos.16_12 = (unsigned short) pos_57;
  _13 = pos.16_12 + 65535;
  pos_85 = (sint16) _13;
  # DEBUG pos => pos_85
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_85;
  _15 = dataPtr_69(D) + _14;
  _16 = *_15;
  _17 = (long unsigned int) _16;
  tmpval_86 = tmpval_84 | _17;
  # DEBUG tmpval => tmpval_86

  <bb 5> :
  # bitsread_51 = PHI <bitsread_78(3), bitsread_82(4)>
  # ssize_53 = PHI <ssize_80(3), ssize_83(4)>
  # tmpval_55 = PHI <tmpval_79(3), tmpval_86(4)>
  # pos_57 = PHI <pos_67(3), pos_85(4)>
  # DEBUG pos => pos_57
  # DEBUG tmpval => tmpval_55
  # DEBUG ssize => ssize_53
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  if (ssize_53 > 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _18 = (int) bitsread_51;
  _19 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _20 = (int) _19;
  _21 = _18 - _20;
  _22 = tmpval_55 >> _21;
  value_81 = (uint16) _22;
  # DEBUG value => value_81
  goto <bb 11>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_67;
  _24 = dataPtr_69(D) + _23;
  _25 = *_24;
  tmpval_70 = (uint32) _25;
  # DEBUG tmpval => tmpval_70
  # DEBUG BEGIN_STMT
  ssize.17_26 = (unsigned char) ssize_64;
  _27 = ssize.17_26 - col_66;
  _28 = _27 + 255;
  ssize_71 = (sint8) _28;
  # DEBUG ssize => ssize_71
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  bitsread_73 = bitsread_52 + 8;
  # DEBUG bitsread => bitsread_73
  # DEBUG BEGIN_STMT
  ssize.18_29 = (unsigned char) ssize_54;
  _30 = ssize.18_29 + 248;
  ssize_74 = (sint8) _30;
  # DEBUG ssize => ssize_74
  # DEBUG BEGIN_STMT
  tmpval_75 = tmpval_56 << 8;
  # DEBUG tmpval => tmpval_75
  # DEBUG BEGIN_STMT
  pos.19_31 = (unsigned short) pos_58;
  _32 = pos.19_31 + 65535;
  pos_76 = (sint16) _32;
  # DEBUG pos => pos_76
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_76;
  _34 = dataPtr_69(D) + _33;
  _35 = *_34;
  _36 = (long unsigned int) _35;
  tmpval_77 = tmpval_75 | _36;
  # DEBUG tmpval => tmpval_77

  <bb 9> :
  # bitsread_52 = PHI <bitsread_61(7), bitsread_73(8)>
  # ssize_54 = PHI <ssize_71(7), ssize_74(8)>
  # tmpval_56 = PHI <tmpval_70(7), tmpval_77(8)>
  # pos_58 = PHI <pos_67(7), pos_76(8)>
  # DEBUG pos => pos_58
  # DEBUG tmpval => tmpval_56
  # DEBUG ssize => ssize_54
  # DEBUG bitsread => bitsread_52
  # DEBUG BEGIN_STMT
  if (ssize_54 > 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _37 = (unsigned int) col_66;
  _38 = (unsigned int) bitsread_52;
  _39 = _37 + _38;
  _40 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _41 = (unsigned char) _40;
  _42 = (unsigned int) _41;
  _43 = _39 - _42;
  _44 = _43 + 1;
  _45 = tmpval_56 >> _44;
  value_72 = (uint16) _45;
  # DEBUG value => value_72

  <bb 11> :
  # value_50 = PHI <value_81(6), value_72(10)>
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _46 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _47 = (unsigned int) _46;
  _48 = 16 - _47;
  _49 = 65535 >> _48;
  mask_88 = (const uint16) _49;
  # DEBUG mask => mask_88
  # DEBUG BEGIN_STMT
  value_89 = value_50 & mask_88;
  # DEBUG value => value_89
  # DEBUG BEGIN_STMT
  *retPtr_60 = value_89;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_08_EL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 mask;
  uint8 bitsread;
  const uint8 space;
  uint16 tmpval;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint8 value;
  uint8 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  sizetype _4;
  const uint8 * _5;
  unsigned char _6;
  int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  short unsigned int _12;
  short unsigned int _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  unsigned short pos.20_17;
  unsigned short _18;
  sizetype _19;
  const uint8 * _20;
  unsigned char _21;
  short unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  short unsigned int _30;
  unsigned char _31;
  unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  int _35;
  short unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_46 = SignalDataPtr_45(D);
  # DEBUG retPtr => retPtr_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_48(D)->ComSignalPositionInBit;
  row_49 = _1 / 8;
  # DEBUG row => row_49
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_48(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_50 = _3 & 7;
  # DEBUG col => col_50
  # DEBUG BEGIN_STMT
  pos_51 = (sint16) row_49;
  # DEBUG pos => pos_51
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_52 = col_50 + 1;
  # DEBUG space => space_52
  # DEBUG BEGIN_STMT
  bitsread_53 = 0;
  # DEBUG bitsread => bitsread_53
  # DEBUG BEGIN_STMT
  if (col_50 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = (sizetype) pos_51;
  _5 = dataPtr_54(D) + _4;
  _6 = *_5;
  tmpval_64 = (uint16) _6;
  # DEBUG tmpval => tmpval_64
  # DEBUG BEGIN_STMT
  _7 = (int) tmpval_64;
  _8 = Com_EB_ReadPropPtr_48(D)->ComBitSize;
  _9 = (unsigned int) _8;
  _10 = 8 - _9;
  _11 = _7 >> _10;
  value_65 = (uint8) _11;
  # DEBUG value => value_65
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _12 = (short unsigned int) space_52;
  _13 = Com_EB_ReadPropPtr_48(D)->ComBitSize;
  if (_12 < _13)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_51;
  _15 = dataPtr_54(D) + _14;
  _16 = *_15;
  tmpval_57 = (uint16) _16;
  # DEBUG tmpval => tmpval_57
  # DEBUG BEGIN_STMT
  bitsread_58 = bitsread_53 + 8;
  # DEBUG bitsread => bitsread_58
  # DEBUG BEGIN_STMT
  tmpval_59 = tmpval_57 << 8;
  # DEBUG tmpval => tmpval_59
  # DEBUG BEGIN_STMT
  pos.20_17 = (unsigned short) pos_51;
  _18 = pos.20_17 + 65535;
  pos_60 = (sint16) _18;
  # DEBUG pos => pos_60
  # DEBUG BEGIN_STMT
  _19 = (sizetype) pos_60;
  _20 = dataPtr_54(D) + _19;
  _21 = *_20;
  _22 = (short unsigned int) _21;
  tmpval_61 = tmpval_59 | _22;
  # DEBUG tmpval => tmpval_61
  # DEBUG BEGIN_STMT
  SchM_Exit_Com_SCHM_COM_EXCLUSIVE_AREA_0 ();
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_51;
  _24 = dataPtr_54(D) + _23;
  _25 = *_24;
  tmpval_55 = (uint16) _25;
  # DEBUG tmpval => tmpval_55

  <bb 7> :
  # tmpval_41 = PHI <tmpval_61(5), tmpval_55(6)>
  # bitsread_42 = PHI <bitsread_58(5), bitsread_53(6)>
  # DEBUG bitsread => bitsread_42
  # DEBUG tmpval => tmpval_41
  # DEBUG BEGIN_STMT
  _26 = (int) tmpval_41;
  _27 = (unsigned int) col_50;
  _28 = (unsigned int) bitsread_42;
  _29 = _27 + _28;
  _30 = Com_EB_ReadPropPtr_48(D)->ComBitSize;
  _31 = (unsigned char) _30;
  _32 = (unsigned int) _31;
  _33 = _29 - _32;
  _34 = _33 + 1;
  _35 = _26 >> _34;
  value_63 = (uint8) _35;
  # DEBUG value => value_63

  <bb 8> :
  # value_40 = PHI <value_65(3), value_63(7)>
  # DEBUG value => value_40
  # DEBUG BEGIN_STMT
  _36 = Com_EB_ReadPropPtr_48(D)->ComBitSize;
  _37 = (unsigned int) _36;
  _38 = 8 - _37;
  _39 = 255 >> _38;
  mask_66 = (const uint8) _39;
  # DEBUG mask => mask_66
  # DEBUG BEGIN_STMT
  value_67 = value_40 & mask_66;
  # DEBUG value => value_67
  # DEBUG BEGIN_STMT
  *retPtr_46 = value_67;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_AY_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  uint16 pos;
  uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  sizetype _5;
  const uint8 * _6;
  sizetype _7;
  uint8 * _8;
  unsigned char _9;
  short unsigned int ii.21_10;
  short unsigned int _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_14 = 0;
  # DEBUG ii => ii_14
  # DEBUG BEGIN_STMT
  U8Ptr_16 = SignalDataPtr_15(D);
  # DEBUG U8Ptr => U8Ptr_16

  <bb 3> :
  # ii_12 = PHI <ii_14(2), ii_22(3)>
  # DEBUG ii => ii_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_18(D)->ComSignalPositionInBit;
  _2 = Com_EB_ReadPropPtr_18(D)->ComBitSize;
  _3 = _1 + _2;
  _4 = _3 - ii_12;
  pos_19 = _4 + 65535;
  # DEBUG pos => pos_19
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_19;
  _6 = dataPtr_20(D) + _5;
  _7 = (sizetype) ii_12;
  _8 = U8Ptr_16 + _7;
  _9 = *_6;
  *_8 = _9;
  # DEBUG BEGIN_STMT
  ii.21_10 = ii_12;
  ii_22 = ii.21_10 + 1;
  # DEBUG ii => ii_22
  # DEBUG BEGIN_STMT
  _11 = Com_EB_ReadPropPtr_18(D)->ComBitSize;
  if (ii_22 < _11)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_64_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  struct ComSignalBaseType Com_EB_ReadProp_loc;
  struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  uint32 * _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  uint32 * _9;
  uint32 * _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_13 = SignalDataPtr_12(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_13
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc = *Com_EB_ReadPropPtr_15(D);
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  _3 = _2 + 65504;
  Com_EB_ReadProp_loc.ComBitSize = _3;
  # DEBUG BEGIN_STMT
  _4 = &SignalDataPtr_loc_13->HiWord;
  Com_EB_Read_32_DL_E2 (_4, dataPtr_16(D), &Com_EB_ReadProp_loc, retvalPtr_17(D));
  # DEBUG BEGIN_STMT
  _5 = Com_EB_ReadPropPtr_15(D)->ComSignalPositionInBit;
  _6 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  _7 = _5 + _6;
  _8 = _7 + 65504;
  Com_EB_ReadProp_loc.ComSignalPositionInBit = _8;
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _9 = &SignalDataPtr_loc_13->LoWord;
  Com_EB_Read_32_DL_E2 (_9, dataPtr_16(D), &Com_EB_ReadProp_loc, retvalPtr_17(D));
  Com_EB_ReadProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _10 = &SignalDataPtr_loc_13->LoWord;
  Com_EB_Read_32_DL_E2 (_10, dataPtr_16(D), Com_EB_ReadPropPtr_15(D), retvalPtr_17(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_32_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 tmp_val;
  const uint8 mask;
  const uint8 space;
  ComSignalBitSizeType size;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 value;
  uint32 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  int _6;
  sizetype _7;
  const uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  unsigned short pos.22_14;
  unsigned short _15;
  short unsigned int _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  long unsigned int _20;
  unsigned short pos.23_21;
  unsigned short _22;
  int _23;
  sizetype _24;
  const uint8 * _25;
  unsigned char _26;
  long unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  long unsigned int _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_36 = SignalDataPtr_35(D);
  # DEBUG retPtr => retPtr_36
  # DEBUG BEGIN_STMT
  value_37 = 0;
  # DEBUG value => value_37
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _1 / 8;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_41 = _3 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  pos_42 = (sint16) row_40;
  # DEBUG pos => pos_42
  # DEBUG BEGIN_STMT
  size_43 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  # DEBUG size => size_43
  # DEBUG BEGIN_STMT
  if (col_41 != 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  space_44 = col_41 + 1;
  # DEBUG space => space_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) col_41;
  _5 = 7 - _4;
  _6 = 255 >> _5;
  mask_45 = (const uint8) _6;
  # DEBUG mask => mask_45
  # DEBUG BEGIN_STMT
  _7 = (sizetype) pos_42;
  _8 = dataPtr_46(D) + _7;
  _9 = *_8;
  tmp_val_47 = mask_45 & _9;
  # DEBUG tmp_val => tmp_val_47
  # DEBUG BEGIN_STMT
  value_48 = (uint32) tmp_val_47;
  # DEBUG value => value_48
  # DEBUG BEGIN_STMT
  _10 = (short unsigned int) space_44;
  if (size_43 <= _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _11 = (int) space_44;
  _12 = (int) size_43;
  _13 = _11 - _12;
  value_51 = value_48 >> _13;
  # DEBUG value => value_51
  # DEBUG BEGIN_STMT
  size_52 = 0;
  # DEBUG size => size_52
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  pos.22_14 = (unsigned short) pos_42;
  _15 = pos.22_14 + 1;
  pos_49 = (sint16) _15;
  # DEBUG pos => pos_49
  # DEBUG BEGIN_STMT
  _16 = (short unsigned int) space_44;
  size_50 = size_43 - _16;
  # DEBUG size => size_50
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  value_56 = value_31 << 8;
  # DEBUG value => value_56
  # DEBUG BEGIN_STMT
  _17 = (sizetype) pos_33;
  _18 = dataPtr_46(D) + _17;
  _19 = *_18;
  _20 = (long unsigned int) _19;
  value_57 = value_56 + _20;
  # DEBUG value => value_57
  # DEBUG BEGIN_STMT
  size_58 = size_34 + 65528;
  # DEBUG size => size_58
  # DEBUG BEGIN_STMT
  pos.23_21 = (unsigned short) pos_33;
  _22 = pos.23_21 + 1;
  pos_59 = (sint16) _22;
  # DEBUG pos => pos_59

  <bb 7> :
  # value_31 = PHI <value_51(4), value_57(6), value_37(2), value_48(5)>
  # pos_33 = PHI <pos_42(4), pos_59(6), pos_42(2), pos_49(5)>
  # size_34 = PHI <size_52(4), size_58(6), size_43(2), size_50(5)>
  # DEBUG size => size_34
  # DEBUG pos => pos_33
  # DEBUG value => value_31
  # DEBUG BEGIN_STMT
  if (size_34 > 7)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (size_34 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _23 = (int) size_34;
  value_53 = value_31 << _23;
  # DEBUG value => value_53
  # DEBUG BEGIN_STMT
  _24 = (sizetype) pos_33;
  _25 = dataPtr_46(D) + _24;
  _26 = *_25;
  _27 = (long unsigned int) _26;
  _28 = (unsigned int) size_34;
  _29 = 8 - _28;
  _30 = _27 >> _29;
  value_54 = value_53 + _30;
  # DEBUG value => value_54

  <bb 10> :
  # value_32 = PHI <value_31(8), value_54(9)>
  # DEBUG value => value_32
  # DEBUG BEGIN_STMT
  *retPtr_36 = value_32;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_16_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 mask;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 tmpval;
  sint8 ssize;
  uint8 bitsread;
  uint16 value;
  uint16 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  unsigned char ssize.24_8;
  unsigned char _9;
  unsigned char ssize.25_10;
  unsigned char _11;
  unsigned short pos.26_12;
  unsigned short _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  long unsigned int _17;
  int _18;
  short unsigned int _19;
  int _20;
  int _21;
  long unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  unsigned char ssize.27_26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.28_29;
  unsigned char _30;
  unsigned short pos.29_31;
  unsigned short _32;
  sizetype _33;
  const uint8 * _34;
  unsigned char _35;
  long unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  short unsigned int _40;
  unsigned char _41;
  unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  long unsigned int _45;
  short unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  unsigned int _49;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_60 = SignalDataPtr_59(D);
  # DEBUG retPtr => retPtr_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  bitsread_61 = 0;
  # DEBUG bitsread => bitsread_61
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  ssize_64 = (sint8) _1;
  # DEBUG ssize => ssize_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  row_65 = _2 / 8;
  # DEBUG row => row_65
  # DEBUG BEGIN_STMT
  _3 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_66 = _4 & 7;
  # DEBUG col => col_66
  # DEBUG BEGIN_STMT
  pos_67 = (sint16) row_65;
  # DEBUG pos => pos_67
  # DEBUG BEGIN_STMT
  if (col_66 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  bitsread_77 = 8;
  # DEBUG bitsread => bitsread_77
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_67;
  _6 = dataPtr_68(D) + _5;
  _7 = *_6;
  tmpval_78 = (uint32) _7;
  # DEBUG tmpval => tmpval_78
  # DEBUG BEGIN_STMT
  ssize.24_8 = (unsigned char) ssize_64;
  _9 = ssize.24_8 + 248;
  ssize_79 = (sint8) _9;
  # DEBUG ssize => ssize_79
  # DEBUG BEGIN_STMT
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  bitsread_81 = bitsread_51 + 8;
  # DEBUG bitsread => bitsread_81
  # DEBUG BEGIN_STMT
  ssize.25_10 = (unsigned char) ssize_53;
  _11 = ssize.25_10 + 248;
  ssize_82 = (sint8) _11;
  # DEBUG ssize => ssize_82
  # DEBUG BEGIN_STMT
  tmpval_83 = tmpval_55 << 8;
  # DEBUG tmpval => tmpval_83
  # DEBUG BEGIN_STMT
  pos.26_12 = (unsigned short) pos_57;
  _13 = pos.26_12 + 1;
  pos_84 = (sint16) _13;
  # DEBUG pos => pos_84
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_84;
  _15 = dataPtr_68(D) + _14;
  _16 = *_15;
  _17 = (long unsigned int) _16;
  tmpval_85 = tmpval_83 | _17;
  # DEBUG tmpval => tmpval_85

  <bb 5> :
  # bitsread_51 = PHI <bitsread_77(3), bitsread_81(4)>
  # ssize_53 = PHI <ssize_79(3), ssize_82(4)>
  # tmpval_55 = PHI <tmpval_78(3), tmpval_85(4)>
  # pos_57 = PHI <pos_67(3), pos_84(4)>
  # DEBUG pos => pos_57
  # DEBUG tmpval => tmpval_55
  # DEBUG ssize => ssize_53
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  if (ssize_53 > 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _18 = (int) bitsread_51;
  _19 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _20 = (int) _19;
  _21 = _18 - _20;
  _22 = tmpval_55 >> _21;
  value_80 = (uint16) _22;
  # DEBUG value => value_80
  goto <bb 11>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_67;
  _24 = dataPtr_68(D) + _23;
  _25 = *_24;
  tmpval_69 = (uint32) _25;
  # DEBUG tmpval => tmpval_69
  # DEBUG BEGIN_STMT
  ssize.27_26 = (unsigned char) ssize_64;
  _27 = ssize.27_26 - col_66;
  _28 = _27 + 255;
  ssize_70 = (sint8) _28;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  bitsread_72 = bitsread_52 + 8;
  # DEBUG bitsread => bitsread_72
  # DEBUG BEGIN_STMT
  ssize.28_29 = (unsigned char) ssize_54;
  _30 = ssize.28_29 + 248;
  ssize_73 = (sint8) _30;
  # DEBUG ssize => ssize_73
  # DEBUG BEGIN_STMT
  tmpval_74 = tmpval_56 << 8;
  # DEBUG tmpval => tmpval_74
  # DEBUG BEGIN_STMT
  pos.29_31 = (unsigned short) pos_58;
  _32 = pos.29_31 + 1;
  pos_75 = (sint16) _32;
  # DEBUG pos => pos_75
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_75;
  _34 = dataPtr_68(D) + _33;
  _35 = *_34;
  _36 = (long unsigned int) _35;
  tmpval_76 = tmpval_74 | _36;
  # DEBUG tmpval => tmpval_76

  <bb 9> :
  # bitsread_52 = PHI <bitsread_61(7), bitsread_72(8)>
  # ssize_54 = PHI <ssize_70(7), ssize_73(8)>
  # tmpval_56 = PHI <tmpval_69(7), tmpval_76(8)>
  # pos_58 = PHI <pos_67(7), pos_75(8)>
  # DEBUG pos => pos_58
  # DEBUG tmpval => tmpval_56
  # DEBUG ssize => ssize_54
  # DEBUG bitsread => bitsread_52
  # DEBUG BEGIN_STMT
  if (ssize_54 > 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _37 = (unsigned int) col_66;
  _38 = (unsigned int) bitsread_52;
  _39 = _37 + _38;
  _40 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _41 = (unsigned char) _40;
  _42 = (unsigned int) _41;
  _43 = _39 - _42;
  _44 = _43 + 1;
  _45 = tmpval_56 >> _44;
  value_71 = (uint16) _45;
  # DEBUG value => value_71

  <bb 11> :
  # value_50 = PHI <value_80(6), value_71(10)>
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  _46 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _47 = (unsigned int) _46;
  _48 = 16 - _47;
  _49 = 65535 >> _48;
  mask_86 = (const uint16) _49;
  # DEBUG mask => mask_86
  # DEBUG BEGIN_STMT
  value_87 = value_50 & mask_86;
  # DEBUG value => value_87
  # DEBUG BEGIN_STMT
  *retPtr_60 = value_87;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_08_DL_E2 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 mask;
  uint8 bitsread;
  const uint8 space;
  uint16 tmpval;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint8 value;
  uint8 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  sizetype _4;
  const uint8 * _5;
  unsigned char _6;
  int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  sizetype _12;
  const uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  short unsigned int _16;
  unsigned short pos.30_17;
  unsigned short _18;
  sizetype _19;
  const uint8 * _20;
  unsigned char _21;
  short unsigned int _22;
  int _23;
  unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  short unsigned int _27;
  unsigned char _28;
  unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  int _32;
  short unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  unsigned int _36;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_41 = SignalDataPtr_40(D);
  # DEBUG retPtr => retPtr_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _1 / 8;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_43(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_45 = _3 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  pos_46 = (sint16) row_44;
  # DEBUG pos => pos_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_47 = col_45 + 1;
  # DEBUG space => space_47
  # DEBUG BEGIN_STMT
  bitsread_48 = 0;
  # DEBUG bitsread => bitsread_48
  # DEBUG BEGIN_STMT
  if (col_45 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = (sizetype) pos_46;
  _5 = dataPtr_49(D) + _4;
  _6 = *_5;
  tmpval_56 = (uint16) _6;
  # DEBUG tmpval => tmpval_56
  # DEBUG BEGIN_STMT
  _7 = (int) tmpval_56;
  _8 = Com_EB_ReadPropPtr_43(D)->ComBitSize;
  _9 = (unsigned int) _8;
  _10 = 8 - _9;
  _11 = _7 >> _10;
  value_57 = (uint8) _11;
  # DEBUG value => value_57
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _12 = (sizetype) pos_46;
  _13 = dataPtr_49(D) + _12;
  _14 = *_13;
  tmpval_50 = (uint16) _14;
  # DEBUG tmpval => tmpval_50
  # DEBUG BEGIN_STMT
  _15 = (short unsigned int) space_47;
  _16 = Com_EB_ReadPropPtr_43(D)->ComBitSize;
  if (_15 < _16)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  bitsread_51 = bitsread_48 + 8;
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  tmpval_52 = tmpval_50 << 8;
  # DEBUG tmpval => tmpval_52
  # DEBUG BEGIN_STMT
  pos.30_17 = (unsigned short) pos_46;
  _18 = pos.30_17 + 1;
  pos_53 = (sint16) _18;
  # DEBUG pos => pos_53
  # DEBUG BEGIN_STMT
  _19 = (sizetype) pos_53;
  _20 = dataPtr_49(D) + _19;
  _21 = *_20;
  _22 = (short unsigned int) _21;
  tmpval_54 = tmpval_52 | _22;
  # DEBUG tmpval => tmpval_54

  <bb 6> :
  # tmpval_38 = PHI <tmpval_50(4), tmpval_54(5)>
  # bitsread_39 = PHI <bitsread_48(4), bitsread_51(5)>
  # DEBUG bitsread => bitsread_39
  # DEBUG tmpval => tmpval_38
  # DEBUG BEGIN_STMT
  _23 = (int) tmpval_38;
  _24 = (unsigned int) col_45;
  _25 = (unsigned int) bitsread_39;
  _26 = _24 + _25;
  _27 = Com_EB_ReadPropPtr_43(D)->ComBitSize;
  _28 = (unsigned char) _27;
  _29 = (unsigned int) _28;
  _30 = _26 - _29;
  _31 = _30 + 1;
  _32 = _23 >> _31;
  value_55 = (uint8) _32;
  # DEBUG value => value_55

  <bb 7> :
  # value_37 = PHI <value_57(3), value_55(6)>
  # DEBUG value => value_37
  # DEBUG BEGIN_STMT
  _33 = Com_EB_ReadPropPtr_43(D)->ComBitSize;
  _34 = (unsigned int) _33;
  _35 = 8 - _34;
  _36 = 255 >> _35;
  mask_58 = (const uint8) _36;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  value_59 = value_37 & mask_58;
  # DEBUG value => value_59
  # DEBUG BEGIN_STMT
  *retPtr_41 = value_59;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_AY_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  uint16 pos;
  uint8 * U8Ptr;
  uint16 ii;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  sizetype _4;
  uint8 * _5;
  unsigned char _6;
  short unsigned int ii.31_7;
  short unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ii_11 = 0;
  # DEBUG ii => ii_11
  # DEBUG BEGIN_STMT
  U8Ptr_13 = SignalDataPtr_12(D);
  # DEBUG U8Ptr => U8Ptr_13

  <bb 3> :
  # ii_9 = PHI <ii_11(2), ii_19(3)>
  # DEBUG ii => ii_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_15(D)->ComSignalPositionInBit;
  pos_16 = ii_9 + _1;
  # DEBUG pos => pos_16
  # DEBUG BEGIN_STMT
  _2 = (sizetype) pos_16;
  _3 = dataPtr_17(D) + _2;
  _4 = (sizetype) ii_9;
  _5 = U8Ptr_13 + _4;
  _6 = *_3;
  *_5 = _6;
  # DEBUG BEGIN_STMT
  ii.31_7 = ii_9;
  ii_19 = ii.31_7 + 1;
  # DEBUG ii => ii_19
  # DEBUG BEGIN_STMT
  _8 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  if (ii_19 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_64_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  struct ComSignalBaseType Com_EB_ReadProp_loc;
  struct ComEmu64Type * SignalDataPtr_loc;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  uint32 * _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  uint32 * _9;
  uint32 * _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SignalDataPtr_loc_13 = SignalDataPtr_12(D);
  # DEBUG SignalDataPtr_loc => SignalDataPtr_loc_13
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  if (_1 > 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc = *Com_EB_ReadPropPtr_15(D);
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  _3 = _2 + 65504;
  Com_EB_ReadProp_loc.ComBitSize = _3;
  # DEBUG BEGIN_STMT
  _4 = &SignalDataPtr_loc_13->HiWord;
  Com_EB_Read_32_DL_E1 (_4, dataPtr_16(D), &Com_EB_ReadProp_loc, retvalPtr_17(D));
  # DEBUG BEGIN_STMT
  _5 = Com_EB_ReadPropPtr_15(D)->ComSignalPositionInBit;
  _6 = Com_EB_ReadPropPtr_15(D)->ComBitSize;
  _7 = _5 - _6;
  _8 = _7 + 32;
  Com_EB_ReadProp_loc.ComSignalPositionInBit = _8;
  # DEBUG BEGIN_STMT
  Com_EB_ReadProp_loc.ComBitSize = 32;
  # DEBUG BEGIN_STMT
  _9 = &SignalDataPtr_loc_13->LoWord;
  Com_EB_Read_32_DL_E1 (_9, dataPtr_16(D), &Com_EB_ReadProp_loc, retvalPtr_17(D));
  Com_EB_ReadProp_loc ={v} {CLOBBER};
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _10 = &SignalDataPtr_loc_13->LoWord;
  Com_EB_Read_32_DL_E1 (_10, dataPtr_16(D), Com_EB_ReadPropPtr_15(D), retvalPtr_17(D));

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_32_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 tmp_val;
  const uint8 mask;
  const uint8 space;
  ComSignalBitSizeType size;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 value;
  uint32 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  int _6;
  sizetype _7;
  const uint8 * _8;
  unsigned char _9;
  short unsigned int _10;
  int _11;
  int _12;
  int _13;
  unsigned short pos.32_14;
  unsigned short _15;
  short unsigned int _16;
  sizetype _17;
  const uint8 * _18;
  unsigned char _19;
  long unsigned int _20;
  unsigned short pos.33_21;
  unsigned short _22;
  int _23;
  sizetype _24;
  const uint8 * _25;
  unsigned char _26;
  long unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  long unsigned int _30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_36 = SignalDataPtr_35(D);
  # DEBUG retPtr => retPtr_36
  # DEBUG BEGIN_STMT
  value_37 = 0;
  # DEBUG value => value_37
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  row_40 = _1 / 8;
  # DEBUG row => row_40
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_39(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_41 = _3 & 7;
  # DEBUG col => col_41
  # DEBUG BEGIN_STMT
  pos_42 = (sint16) row_40;
  # DEBUG pos => pos_42
  # DEBUG BEGIN_STMT
  size_43 = Com_EB_ReadPropPtr_39(D)->ComBitSize;
  # DEBUG size => size_43
  # DEBUG BEGIN_STMT
  if (col_41 != 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  space_44 = col_41 + 1;
  # DEBUG space => space_44
  # DEBUG BEGIN_STMT
  _4 = (unsigned int) col_41;
  _5 = 7 - _4;
  _6 = 255 >> _5;
  mask_45 = (const uint8) _6;
  # DEBUG mask => mask_45
  # DEBUG BEGIN_STMT
  _7 = (sizetype) pos_42;
  _8 = dataPtr_46(D) + _7;
  _9 = *_8;
  tmp_val_47 = mask_45 & _9;
  # DEBUG tmp_val => tmp_val_47
  # DEBUG BEGIN_STMT
  value_48 = (uint32) tmp_val_47;
  # DEBUG value => value_48
  # DEBUG BEGIN_STMT
  _10 = (short unsigned int) space_44;
  if (size_43 <= _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _11 = (int) space_44;
  _12 = (int) size_43;
  _13 = _11 - _12;
  value_51 = value_48 >> _13;
  # DEBUG value => value_51
  # DEBUG BEGIN_STMT
  size_52 = 0;
  # DEBUG size => size_52
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  pos.32_14 = (unsigned short) pos_42;
  _15 = pos.32_14 + 65535;
  pos_49 = (sint16) _15;
  # DEBUG pos => pos_49
  # DEBUG BEGIN_STMT
  _16 = (short unsigned int) space_44;
  size_50 = size_43 - _16;
  # DEBUG size => size_50
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  value_56 = value_31 << 8;
  # DEBUG value => value_56
  # DEBUG BEGIN_STMT
  _17 = (sizetype) pos_33;
  _18 = dataPtr_46(D) + _17;
  _19 = *_18;
  _20 = (long unsigned int) _19;
  value_57 = value_56 + _20;
  # DEBUG value => value_57
  # DEBUG BEGIN_STMT
  size_58 = size_34 + 65528;
  # DEBUG size => size_58
  # DEBUG BEGIN_STMT
  pos.33_21 = (unsigned short) pos_33;
  _22 = pos.33_21 + 65535;
  pos_59 = (sint16) _22;
  # DEBUG pos => pos_59

  <bb 7> :
  # value_31 = PHI <value_51(4), value_57(6), value_37(2), value_48(5)>
  # pos_33 = PHI <pos_42(4), pos_59(6), pos_42(2), pos_49(5)>
  # size_34 = PHI <size_52(4), size_58(6), size_43(2), size_50(5)>
  # DEBUG size => size_34
  # DEBUG pos => pos_33
  # DEBUG value => value_31
  # DEBUG BEGIN_STMT
  if (size_34 > 7)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (size_34 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _23 = (int) size_34;
  value_53 = value_31 << _23;
  # DEBUG value => value_53
  # DEBUG BEGIN_STMT
  _24 = (sizetype) pos_33;
  _25 = dataPtr_46(D) + _24;
  _26 = *_25;
  _27 = (long unsigned int) _26;
  _28 = (unsigned int) size_34;
  _29 = 8 - _28;
  _30 = _27 >> _29;
  value_54 = value_53 + _30;
  # DEBUG value => value_54

  <bb 10> :
  # value_32 = PHI <value_31(8), value_54(9)>
  # DEBUG value => value_32
  # DEBUG BEGIN_STMT
  *retPtr_36 = value_32;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_16_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint16 mask;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint32 tmpval;
  sint8 ssize;
  uint8 bitsread;
  uint16 value;
  uint16 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  unsigned char _4;
  sizetype _5;
  const uint8 * _6;
  unsigned char _7;
  unsigned char ssize.34_8;
  unsigned char _9;
  unsigned char ssize.35_10;
  unsigned char _11;
  unsigned short pos.36_12;
  unsigned short _13;
  sizetype _14;
  const uint8 * _15;
  unsigned char _16;
  long unsigned int _17;
  int _18;
  short unsigned int _19;
  int _20;
  int _21;
  long unsigned int _22;
  sizetype _23;
  const uint8 * _24;
  unsigned char _25;
  unsigned char ssize.37_26;
  unsigned char _27;
  unsigned char _28;
  unsigned char ssize.38_29;
  unsigned char _30;
  unsigned short pos.39_31;
  unsigned short _32;
  sizetype _33;
  const uint8 * _34;
  unsigned char _35;
  long unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  short unsigned int _40;
  unsigned char _41;
  unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  long unsigned int _45;
  short unsigned int _46;
  unsigned int _47;
  unsigned int _48;
  unsigned int _49;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_60 = SignalDataPtr_59(D);
  # DEBUG retPtr => retPtr_60
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  bitsread_61 = 0;
  # DEBUG bitsread => bitsread_61
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  ssize_64 = (sint8) _1;
  # DEBUG ssize => ssize_64
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  row_65 = _2 / 8;
  # DEBUG row => row_65
  # DEBUG BEGIN_STMT
  _3 = Com_EB_ReadPropPtr_63(D)->ComSignalPositionInBit;
  _4 = (unsigned char) _3;
  col_66 = _4 & 7;
  # DEBUG col => col_66
  # DEBUG BEGIN_STMT
  pos_67 = (sint16) row_65;
  # DEBUG pos => pos_67
  # DEBUG BEGIN_STMT
  if (col_66 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  bitsread_77 = 8;
  # DEBUG bitsread => bitsread_77
  # DEBUG BEGIN_STMT
  _5 = (sizetype) pos_67;
  _6 = dataPtr_68(D) + _5;
  _7 = *_6;
  tmpval_78 = (uint32) _7;
  # DEBUG tmpval => tmpval_78
  # DEBUG BEGIN_STMT
  ssize.34_8 = (unsigned char) ssize_64;
  _9 = ssize.34_8 + 248;
  ssize_79 = (sint8) _9;
  # DEBUG ssize => ssize_79
  # DEBUG BEGIN_STMT
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  bitsread_81 = bitsread_51 + 8;
  # DEBUG bitsread => bitsread_81
  # DEBUG BEGIN_STMT
  ssize.35_10 = (unsigned char) ssize_53;
  _11 = ssize.35_10 + 248;
  ssize_82 = (sint8) _11;
  # DEBUG ssize => ssize_82
  # DEBUG BEGIN_STMT
  tmpval_83 = tmpval_55 << 8;
  # DEBUG tmpval => tmpval_83
  # DEBUG BEGIN_STMT
  pos.36_12 = (unsigned short) pos_57;
  _13 = pos.36_12 + 65535;
  pos_84 = (sint16) _13;
  # DEBUG pos => pos_84
  # DEBUG BEGIN_STMT
  _14 = (sizetype) pos_84;
  _15 = dataPtr_68(D) + _14;
  _16 = *_15;
  _17 = (long unsigned int) _16;
  tmpval_85 = tmpval_83 | _17;
  # DEBUG tmpval => tmpval_85

  <bb 5> :
  # bitsread_51 = PHI <bitsread_77(3), bitsread_81(4)>
  # ssize_53 = PHI <ssize_79(3), ssize_82(4)>
  # tmpval_55 = PHI <tmpval_78(3), tmpval_85(4)>
  # pos_57 = PHI <pos_67(3), pos_84(4)>
  # DEBUG pos => pos_57
  # DEBUG tmpval => tmpval_55
  # DEBUG ssize => ssize_53
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  if (ssize_53 > 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _18 = (int) bitsread_51;
  _19 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _20 = (int) _19;
  _21 = _18 - _20;
  _22 = tmpval_55 >> _21;
  value_80 = (uint16) _22;
  # DEBUG value => value_80
  goto <bb 11>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _23 = (sizetype) pos_67;
  _24 = dataPtr_68(D) + _23;
  _25 = *_24;
  tmpval_69 = (uint32) _25;
  # DEBUG tmpval => tmpval_69
  # DEBUG BEGIN_STMT
  ssize.37_26 = (unsigned char) ssize_64;
  _27 = ssize.37_26 - col_66;
  _28 = _27 + 255;
  ssize_70 = (sint8) _28;
  # DEBUG ssize => ssize_70
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  bitsread_72 = bitsread_52 + 8;
  # DEBUG bitsread => bitsread_72
  # DEBUG BEGIN_STMT
  ssize.38_29 = (unsigned char) ssize_54;
  _30 = ssize.38_29 + 248;
  ssize_73 = (sint8) _30;
  # DEBUG ssize => ssize_73
  # DEBUG BEGIN_STMT
  tmpval_74 = tmpval_56 << 8;
  # DEBUG tmpval => tmpval_74
  # DEBUG BEGIN_STMT
  pos.39_31 = (unsigned short) pos_58;
  _32 = pos.39_31 + 65535;
  pos_75 = (sint16) _32;
  # DEBUG pos => pos_75
  # DEBUG BEGIN_STMT
  _33 = (sizetype) pos_75;
  _34 = dataPtr_68(D) + _33;
  _35 = *_34;
  _36 = (long unsigned int) _35;
  tmpval_76 = tmpval_74 | _36;
  # DEBUG tmpval => tmpval_76

  <bb 9> :
  # bitsread_52 = PHI <bitsread_61(7), bitsread_72(8)>
  # ssize_54 = PHI <ssize_70(7), ssize_73(8)>
  # tmpval_56 = PHI <tmpval_69(7), tmpval_76(8)>
  # pos_58 = PHI <pos_67(7), pos_75(8)>
  # DEBUG pos => pos_58
  # DEBUG tmpval => tmpval_56
  # DEBUG ssize => ssize_54
  # DEBUG bitsread => bitsread_52
  # DEBUG BEGIN_STMT
  if (ssize_54 > 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _37 = (unsigned int) col_66;
  _38 = (unsigned int) bitsread_52;
  _39 = _37 + _38;
  _40 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _41 = (unsigned char) _40;
  _42 = (unsigned int) _41;
  _43 = _39 - _42;
  _44 = _43 + 1;
  _45 = tmpval_56 >> _44;
  value_71 = (uint16) _45;
  # DEBUG value => value_71

  <bb 11> :
  # value_50 = PHI <value_80(6), value_71(10)>
  # DEBUG value => value_50
  # DEBUG BEGIN_STMT
  _46 = Com_EB_ReadPropPtr_63(D)->ComBitSize;
  _47 = (unsigned int) _46;
  _48 = 16 - _47;
  _49 = 65535 >> _48;
  mask_86 = (const uint16) _49;
  # DEBUG mask => mask_86
  # DEBUG BEGIN_STMT
  value_87 = value_50 & mask_86;
  # DEBUG value => value_87
  # DEBUG BEGIN_STMT
  *retPtr_60 = value_87;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_Read_08_DL_E1 (void * SignalDataPtr, const uint8 * dataPtr, const struct ComSignalBaseType * Com_EB_ReadPropPtr, uint8 * retvalPtr)
{
  const uint8 mask;
  uint8 bitsread;
  const uint8 space;
  uint16 tmpval;
  sint16 pos;
  uint8 col;
  ComSignalDescBitType row;
  uint8 value;
  uint8 * retPtr;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  sizetype _4;
  const uint8 * _5;
  unsigned char _6;
  int _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  int _11;
  sizetype _12;
  const uint8 * _13;
  unsigned char _14;
  short unsigned int _15;
  short unsigned int _16;
  unsigned short pos.40_17;
  unsigned short _18;
  sizetype _19;
  const uint8 * _20;
  unsigned char _21;
  short unsigned int _22;
  int _23;
  unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  short unsigned int _27;
  unsigned char _28;
  unsigned int _29;
  unsigned int _30;
  unsigned int _31;
  int _32;
  short unsigned int _33;
  unsigned int _34;
  unsigned int _35;
  unsigned int _36;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retPtr_41 = SignalDataPtr_40(D);
  # DEBUG retPtr => retPtr_41
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_43(D)->ComSignalPositionInBit;
  row_44 = _1 / 8;
  # DEBUG row => row_44
  # DEBUG BEGIN_STMT
  _2 = Com_EB_ReadPropPtr_43(D)->ComSignalPositionInBit;
  _3 = (unsigned char) _2;
  col_45 = _3 & 7;
  # DEBUG col => col_45
  # DEBUG BEGIN_STMT
  pos_46 = (sint16) row_44;
  # DEBUG pos => pos_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  space_47 = col_45 + 1;
  # DEBUG space => space_47
  # DEBUG BEGIN_STMT
  bitsread_48 = 0;
  # DEBUG bitsread => bitsread_48
  # DEBUG BEGIN_STMT
  if (col_45 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = (sizetype) pos_46;
  _5 = dataPtr_49(D) + _4;
  _6 = *_5;
  tmpval_56 = (uint16) _6;
  # DEBUG tmpval => tmpval_56
  # DEBUG BEGIN_STMT
  _7 = (int) tmpval_56;
  _8 = Com_EB_ReadPropPtr_43(D)->ComBitSize;
  _9 = (unsigned int) _8;
  _10 = 8 - _9;
  _11 = _7 >> _10;
  value_57 = (uint8) _11;
  # DEBUG value => value_57
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _12 = (sizetype) pos_46;
  _13 = dataPtr_49(D) + _12;
  _14 = *_13;
  tmpval_50 = (uint16) _14;
  # DEBUG tmpval => tmpval_50
  # DEBUG BEGIN_STMT
  _15 = (short unsigned int) space_47;
  _16 = Com_EB_ReadPropPtr_43(D)->ComBitSize;
  if (_15 < _16)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  bitsread_51 = bitsread_48 + 8;
  # DEBUG bitsread => bitsread_51
  # DEBUG BEGIN_STMT
  tmpval_52 = tmpval_50 << 8;
  # DEBUG tmpval => tmpval_52
  # DEBUG BEGIN_STMT
  pos.40_17 = (unsigned short) pos_46;
  _18 = pos.40_17 + 65535;
  pos_53 = (sint16) _18;
  # DEBUG pos => pos_53
  # DEBUG BEGIN_STMT
  _19 = (sizetype) pos_53;
  _20 = dataPtr_49(D) + _19;
  _21 = *_20;
  _22 = (short unsigned int) _21;
  tmpval_54 = tmpval_52 | _22;
  # DEBUG tmpval => tmpval_54

  <bb 6> :
  # tmpval_38 = PHI <tmpval_50(4), tmpval_54(5)>
  # bitsread_39 = PHI <bitsread_48(4), bitsread_51(5)>
  # DEBUG bitsread => bitsread_39
  # DEBUG tmpval => tmpval_38
  # DEBUG BEGIN_STMT
  _23 = (int) tmpval_38;
  _24 = (unsigned int) col_45;
  _25 = (unsigned int) bitsread_39;
  _26 = _24 + _25;
  _27 = Com_EB_ReadPropPtr_43(D)->ComBitSize;
  _28 = (unsigned char) _27;
  _29 = (unsigned int) _28;
  _30 = _26 - _29;
  _31 = _30 + 1;
  _32 = _23 >> _31;
  value_55 = (uint8) _32;
  # DEBUG value => value_55

  <bb 7> :
  # value_37 = PHI <value_57(3), value_55(6)>
  # DEBUG value => value_37
  # DEBUG BEGIN_STMT
  _33 = Com_EB_ReadPropPtr_43(D)->ComBitSize;
  _34 = (unsigned int) _33;
  _35 = 8 - _34;
  _36 = 255 >> _35;
  mask_58 = (const uint8) _36;
  # DEBUG mask => mask_58
  # DEBUG BEGIN_STMT
  value_59 = value_37 & mask_58;
  # DEBUG value => value_59
  # DEBUG BEGIN_STMT
  *retPtr_41 = value_59;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Com_IsValidConfig (const void * ConfigPtr)
{
  const struct Com_ConfigType * const TmpCfgPtr;
  Std_ReturnType retval;
  long unsigned int _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int Com_LcfgSignature.0_5;
  long unsigned int _6;
  Std_ReturnType _15;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retval_9 = 1;
  # DEBUG retval => retval_9
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ConfigPtr_10(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  TmpCfgPtr_12 = ConfigPtr_10(D);
  # DEBUG TmpCfgPtr => TmpCfgPtr_12
  # DEBUG BEGIN_STMT
  _1 = TmpCfgPtr_12->ComPlatformSignature;
  _2 = TS_PlatformSigIsValid (_1);
  if (_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = TmpCfgPtr_12->ComCfgSignature;
  if (_3 == 1285855334)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = TmpCfgPtr_12->ComLcfgSignature;
  Com_LcfgSignature.0_5 = Com_LcfgSignature;
  if (_4 == Com_LcfgSignature.0_5)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _6 = TmpCfgPtr_12->ComPublicInfoSignature;
  if (_6 == 698836561)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  retval_14 = 0;
  # DEBUG retval => retval_14

  <bb 8> :
  # retval_7 = PHI <retval_9(2), retval_9(3), retval_9(4), retval_9(5), retval_9(6), retval_14(7)>
  # DEBUG retval => retval_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = retval_7;
  return _15;

}


Com_EB_CbkTxPrepDummyCbk ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_TxDMDummyCbk ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  return;

}


Com_ResetFilerOneEveryN (ComFilterRefType ComFilterRef)
{
  ComFilterOneEveryNSizeType * occurrencebase;
  const struct ComFilterOneEveryNType * ComFilterOneEveryNPtr;
  const struct Com_ConfigType * Com_gConfigPtr.365_1;
  const struct Com_ConfigType * Com_gConfigPtr.366_2;
  long unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  sizetype _6;
  uint8 * Com_gDataMemPtr.367_7;
  const struct Com_ConfigType * Com_gConfigPtr.368_8;
  short unsigned int _9;
  sizetype _10;
  short unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  ComFilterOneEveryNSizeType * _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Com_gConfigPtr.365_1 = Com_gConfigPtr;
  Com_gConfigPtr.366_2 = Com_gConfigPtr;
  _3 = Com_gConfigPtr.366_2->ComFilterOneEveryNRef;
  _4 = (unsigned int) ComFilterRef_16(D);
  _5 = _4 * 6;
  _6 = _3 + _5;
  ComFilterOneEveryNPtr_17 = Com_gConfigPtr.365_1 + _6;
  # DEBUG ComFilterOneEveryNPtr => ComFilterOneEveryNPtr_17
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.367_7 = Com_gDataMemPtr;
  Com_gConfigPtr.368_8 = Com_gConfigPtr;
  _9 = Com_gConfigPtr.368_8->ComFilterOneEveryNBase;
  _10 = (sizetype) _9;
  occurrencebase_18 = Com_gDataMemPtr.367_7 + _10;
  # DEBUG occurrencebase => occurrencebase_18
  # DEBUG BEGIN_STMT
  _11 = ComFilterOneEveryNPtr_17->ComFilterOccurrence;
  _12 = (unsigned int) _11;
  _13 = _12 * 2;
  _14 = occurrencebase_18 + _13;
  *_14 = 0;
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_SetBuffer (const struct ComSignalBaseType * Com_EB_ReadPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  sint32 sint32Val;
  sint32 * const bufferBaseSint32;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  sint16 sint16Val;
  sint16 * const bufferBaseSint16;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  sint8 sint8Val;
  sint8 * const bufferBaseSint8;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  uint32 uint32Val;
  uint32 * const bufferBaseUint32;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  uint16 uint16Val;
  uint16 * const bufferBaseUint16;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  uint8 uint8Val;
  uint8 * const bufferBaseUint8;
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  boolean boolVal;
  uint8 * const bufferBaseBool;
  const ComSignalBufferRefType ValueRef;
  const Com_TS_SignalTypeType SignalType;
  const uint8 * const dataPtr;
  uint8 * Com_gDataMemPtr.343_1;
  short unsigned int _2;
  sizetype _3;
  short unsigned int _4;
  short unsigned int _5;
  unsigned char _6;
  int _7;
  uint8 * Com_gDataMemPtr.344_8;
  const struct Com_ConfigType * Com_gConfigPtr.345_9;
  short unsigned int _10;
  sizetype _11;
  short unsigned int _12;
  int _13;
  unsigned char boolVal.346_14;
  short unsigned int _15;
  sizetype _16;
  uint8 * _17;
  long unsigned int _18;
  long unsigned int _19;
  short unsigned int _20;
  sizetype _21;
  uint8 * _22;
  long unsigned int _23;
  long unsigned int _24;
  uint8 * Com_gDataMemPtr.347_25;
  const struct Com_ConfigType * Com_gConfigPtr.348_26;
  short unsigned int _27;
  sizetype _28;
  short unsigned int _29;
  int _30;
  sizetype _31;
  uint8 * _32;
  unsigned char uint8Val.349_33;
  uint8 * Com_gDataMemPtr.350_34;
  const struct Com_ConfigType * Com_gConfigPtr.351_35;
  short unsigned int _36;
  sizetype _37;
  short unsigned int _38;
  int _39;
  unsigned int _40;
  unsigned int _41;
  uint16 * _42;
  short unsigned int uint16Val.352_43;
  uint8 * Com_gDataMemPtr.353_44;
  const struct Com_ConfigType * Com_gConfigPtr.354_45;
  short unsigned int _46;
  sizetype _47;
  short unsigned int _48;
  int _49;
  unsigned int _50;
  unsigned int _51;
  uint32 * _52;
  long unsigned int uint32Val.355_53;
  uint8 * Com_gDataMemPtr.356_54;
  const struct Com_ConfigType * Com_gConfigPtr.357_55;
  short unsigned int _56;
  sizetype _57;
  short unsigned int _58;
  int _59;
  sizetype _60;
  sint8 * _61;
  signed char sint8Val.358_62;
  uint8 * Com_gDataMemPtr.359_63;
  const struct Com_ConfigType * Com_gConfigPtr.360_64;
  short unsigned int _65;
  sizetype _66;
  short unsigned int _67;
  int _68;
  unsigned int _69;
  unsigned int _70;
  sint16 * _71;
  short int sint16Val.361_72;
  uint8 * Com_gDataMemPtr.362_73;
  const struct Com_ConfigType * Com_gConfigPtr.363_74;
  short unsigned int _75;
  sizetype _76;
  short unsigned int _77;
  int _78;
  unsigned int _79;
  unsigned int _80;
  sint32 * _81;
  long int sint32Val.364_82;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.343_1 = Com_gDataMemPtr;
  _2 = Com_EB_ReadPropPtr_86(D)->ComBufferRef;
  _3 = (sizetype) _2;
  dataPtr_87 = Com_gDataMemPtr.343_1 + _3;
  # DEBUG dataPtr => dataPtr_87
  # DEBUG BEGIN_STMT
  _4 = Com_EB_ReadPropPtr_86(D)->ComRxSignalFlags;
  _5 = _4 >> 7;
  _6 = (unsigned char) _5;
  SignalType_88 = _6 & 15;
  # DEBUG SignalType => SignalType_88
  # DEBUG BEGIN_STMT
  ValueRef_89 = Com_EB_ReadPropPtr_86(D)->ComFilterConf.ComFilterSignalValueRef;
  # DEBUG ValueRef => ValueRef_89
  # DEBUG BEGIN_STMT
  _7 = (int) SignalType_88;
  switch (_7) <default: <L16> [INV], case 0: <L0> [INV], case 1: <L8> [INV], case 2: <L9> [INV], case 3: <L7> [INV], case 4: <L5> [INV], case 5: <L6> [INV], case 6: <L4> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.344_8 = Com_gDataMemPtr;
  Com_gConfigPtr.345_9 = Com_gConfigPtr;
  _10 = Com_gConfigPtr.345_9->ComBufferBaseBool;
  _11 = (sizetype) _10;
  bufferBaseBool_138 = Com_gDataMemPtr.344_8 + _11;
  # DEBUG bufferBaseBool => bufferBaseBool_138
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_ReadPropPtr_86(D)->ComRxSignalFlags;
  index_140 = _12 & 63;
  # DEBUG index => index_140
  # DEBUG BEGIN_STMT
  _13 = (int) index_140;
  fptr_141 = Com_ReadFuncs[_13].Read;
  # DEBUG fptr => fptr_141
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_141 (&boolVal, dataPtr_87, Com_EB_ReadPropPtr_86(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  boolVal.346_14 = boolVal;
  if (boolVal.346_14 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _15 = ValueRef_89 / 8;
  _16 = (sizetype) _15;
  _17 = bufferBaseBool_138 + _16;
  _18 = (long unsigned int) ValueRef_89;
  _19 = _18 & 7;
  TS_AtomicSetBit_8 (_17, _19);
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _20 = ValueRef_89 / 8;
  _21 = (sizetype) _20;
  _22 = bufferBaseBool_138 + _21;
  _23 = (long unsigned int) ValueRef_89;
  _24 = _23 & 7;
  TS_AtomicClearBit_8 (_22, _24);

  <bb 6> :
  boolVal ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.347_25 = Com_gDataMemPtr;
  Com_gConfigPtr.348_26 = Com_gConfigPtr;
  _27 = Com_gConfigPtr.348_26->ComBufferBaseUInt8;
  _28 = (sizetype) _27;
  bufferBaseUint8_90 = Com_gDataMemPtr.347_25 + _28;
  # DEBUG bufferBaseUint8 => bufferBaseUint8_90
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _29 = Com_EB_ReadPropPtr_86(D)->ComRxSignalFlags;
  index_92 = _29 & 63;
  # DEBUG index => index_92
  # DEBUG BEGIN_STMT
  _30 = (int) index_92;
  fptr_93 = Com_ReadFuncs[_30].Read;
  # DEBUG fptr => fptr_93
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_93 (&uint8Val, dataPtr_87, Com_EB_ReadPropPtr_86(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _31 = (sizetype) ValueRef_89;
  _32 = bufferBaseUint8_90 + _31;
  uint8Val.349_33 = uint8Val;
  *_32 = uint8Val.349_33;
  uint8Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.350_34 = Com_gDataMemPtr;
  Com_gConfigPtr.351_35 = Com_gConfigPtr;
  _36 = Com_gConfigPtr.351_35->ComBufferBaseUInt16;
  _37 = (sizetype) _36;
  bufferBaseUint16_106 = Com_gDataMemPtr.350_34 + _37;
  # DEBUG bufferBaseUint16 => bufferBaseUint16_106
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _38 = Com_EB_ReadPropPtr_86(D)->ComRxSignalFlags;
  index_108 = _38 & 63;
  # DEBUG index => index_108
  # DEBUG BEGIN_STMT
  _39 = (int) index_108;
  fptr_109 = Com_ReadFuncs[_39].Read;
  # DEBUG fptr => fptr_109
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_109 (&uint16Val, dataPtr_87, Com_EB_ReadPropPtr_86(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _40 = (unsigned int) ValueRef_89;
  _41 = _40 * 2;
  _42 = bufferBaseUint16_106 + _41;
  uint16Val.352_43 = uint16Val;
  *_42 = uint16Val.352_43;
  uint16Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.353_44 = Com_gDataMemPtr;
  Com_gConfigPtr.354_45 = Com_gConfigPtr;
  _46 = Com_gConfigPtr.354_45->ComBufferBaseUInt32;
  _47 = (sizetype) _46;
  bufferBaseUint32_98 = Com_gDataMemPtr.353_44 + _47;
  # DEBUG bufferBaseUint32 => bufferBaseUint32_98
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _48 = Com_EB_ReadPropPtr_86(D)->ComRxSignalFlags;
  index_100 = _48 & 63;
  # DEBUG index => index_100
  # DEBUG BEGIN_STMT
  _49 = (int) index_100;
  fptr_101 = Com_ReadFuncs[_49].Read;
  # DEBUG fptr => fptr_101
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_101 (&uint32Val, dataPtr_87, Com_EB_ReadPropPtr_86(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _50 = (unsigned int) ValueRef_89;
  _51 = _50 * 4;
  _52 = bufferBaseUint32_98 + _51;
  uint32Val.355_53 = uint32Val;
  *_52 = uint32Val.355_53;
  uint32Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.356_54 = Com_gDataMemPtr;
  Com_gConfigPtr.357_55 = Com_gConfigPtr;
  _56 = Com_gConfigPtr.357_55->ComBufferBaseSInt8;
  _57 = (sizetype) _56;
  bufferBaseSint8_114 = Com_gDataMemPtr.356_54 + _57;
  # DEBUG bufferBaseSint8 => bufferBaseSint8_114
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _58 = Com_EB_ReadPropPtr_86(D)->ComRxSignalFlags;
  index_116 = _58 & 63;
  # DEBUG index => index_116
  # DEBUG BEGIN_STMT
  _59 = (int) index_116;
  fptr_117 = Com_ReadFuncs[_59].Read;
  # DEBUG fptr => fptr_117
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_117 (&sint8Val, dataPtr_87, Com_EB_ReadPropPtr_86(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _60 = (sizetype) ValueRef_89;
  _61 = bufferBaseSint8_114 + _60;
  sint8Val.358_62 = sint8Val;
  *_61 = sint8Val.358_62;
  sint8Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 11> :
<L8>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.359_63 = Com_gDataMemPtr;
  Com_gConfigPtr.360_64 = Com_gConfigPtr;
  _65 = Com_gConfigPtr.360_64->ComBufferBaseSInt16;
  _66 = (sizetype) _65;
  bufferBaseSint16_130 = Com_gDataMemPtr.359_63 + _66;
  # DEBUG bufferBaseSint16 => bufferBaseSint16_130
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _67 = Com_EB_ReadPropPtr_86(D)->ComRxSignalFlags;
  index_132 = _67 & 63;
  # DEBUG index => index_132
  # DEBUG BEGIN_STMT
  _68 = (int) index_132;
  fptr_133 = Com_ReadFuncs[_68].Read;
  # DEBUG fptr => fptr_133
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_133 (&sint16Val, dataPtr_87, Com_EB_ReadPropPtr_86(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _69 = (unsigned int) ValueRef_89;
  _70 = _69 * 2;
  _71 = bufferBaseSint16_130 + _70;
  sint16Val.361_72 = sint16Val;
  *_71 = sint16Val.361_72;
  sint16Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT
  goto <bb 13>; [INV]

  <bb 12> :
<L9>:
  # DEBUG BEGIN_STMT
  Com_gDataMemPtr.362_73 = Com_gDataMemPtr;
  Com_gConfigPtr.363_74 = Com_gConfigPtr;
  _75 = Com_gConfigPtr.363_74->ComBufferBaseSInt32;
  _76 = (sizetype) _75;
  bufferBaseSint32_122 = Com_gDataMemPtr.362_73 + _76;
  # DEBUG bufferBaseSint32 => bufferBaseSint32_122
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _77 = Com_EB_ReadPropPtr_86(D)->ComRxSignalFlags;
  index_124 = _77 & 63;
  # DEBUG index => index_124
  # DEBUG BEGIN_STMT
  _78 = (int) index_124;
  fptr_125 = Com_ReadFuncs[_78].Read;
  # DEBUG fptr => fptr_125
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_125 (&sint32Val, dataPtr_87, Com_EB_ReadPropPtr_86(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _79 = (unsigned int) ValueRef_89;
  _80 = _79 * 4;
  _81 = bufferBaseSint32_122 + _80;
  sint32Val.364_82 = sint32Val;
  *_81 = sint32Val.364_82;
  sint32Val ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  # DEBUG BEGIN_STMT

  <bb 13> :
<L16>:
  # DEBUG BEGIN_STMT
  return;

}


Com_EB_CalculateFilter (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  const Com_TS_SignalTypeType SignalType;
  boolean FilterResult;
  short unsigned int _1;
  short unsigned int _2;
  unsigned char _3;
  int _4;
  boolean _31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  FilterResult_7 = 0;
  # DEBUG FilterResult => FilterResult_7
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_9(D)->ComRxSignalFlags;
  _2 = _1 >> 7;
  _3 = (unsigned char) _2;
  SignalType_10 = _3 & 15;
  # DEBUG SignalType => SignalType_10
  # DEBUG BEGIN_STMT
  _4 = (int) SignalType_10;
  switch (_4) <default: <L12> [INV], case 0: <L0> [INV], case 1: <L5> [INV], case 2: <L6> [INV], case 3: <L4> [INV], case 4: <L2> [INV], case 5: <L3> [INV], case 6: <L1> [INV], case 9: <L8> [INV], case 10: <L7> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  FilterResult_30 = Com_EB_CalculateFilter_Bool (Com_EB_ReadPropPtr_9(D), dataPtr_11(D), ComFilterPropPtr_12(D));
  # DEBUG FilterResult => FilterResult_30
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  FilterResult_18 = Com_EB_CalculateFilter_Uint8 (Com_EB_ReadPropPtr_9(D), dataPtr_11(D), ComFilterPropPtr_12(D));
  # DEBUG FilterResult => FilterResult_18
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  FilterResult_22 = Com_EB_CalculateFilter_Uint16 (Com_EB_ReadPropPtr_9(D), dataPtr_11(D), ComFilterPropPtr_12(D));
  # DEBUG FilterResult => FilterResult_22
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  FilterResult_20 = Com_EB_CalculateFilter_Uint32 (Com_EB_ReadPropPtr_9(D), dataPtr_11(D), ComFilterPropPtr_12(D));
  # DEBUG FilterResult => FilterResult_20
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  FilterResult_24 = Com_EB_CalculateFilter_Sint8 (Com_EB_ReadPropPtr_9(D), dataPtr_11(D), ComFilterPropPtr_12(D));
  # DEBUG FilterResult => FilterResult_24
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  FilterResult_28 = Com_EB_CalculateFilter_Sint16 (Com_EB_ReadPropPtr_9(D), dataPtr_11(D), ComFilterPropPtr_12(D));
  # DEBUG FilterResult => FilterResult_28
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  FilterResult_26 = Com_EB_CalculateFilter_Sint32 (Com_EB_ReadPropPtr_9(D), dataPtr_11(D), ComFilterPropPtr_12(D));
  # DEBUG FilterResult => FilterResult_26
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  FilterResult_14 = Com_EB_CalculateFilter_Sint64 (Com_EB_ReadPropPtr_9(D), dataPtr_11(D), ComFilterPropPtr_12(D));
  # DEBUG FilterResult => FilterResult_14
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 11> :
<L8>:
  # DEBUG BEGIN_STMT
  FilterResult_16 = Com_EB_CalculateFilter_Uint64 (Com_EB_ReadPropPtr_9(D), dataPtr_11(D), ComFilterPropPtr_12(D));
  # DEBUG FilterResult => FilterResult_16
  # DEBUG BEGIN_STMT

  <bb 12> :
  # FilterResult_5 = PHI <FilterResult_30(3), FilterResult_18(4), FilterResult_22(5), FilterResult_20(6), FilterResult_24(7), FilterResult_28(8), FilterResult_26(9), FilterResult_14(10), FilterResult_16(11), FilterResult_7(2)>
<L12>:
  # DEBUG FilterResult => FilterResult_5
  # DEBUG BEGIN_STMT
  _31 = FilterResult_5;
  return _31;

}


Com_EB_CalculateFilter_Sint64 (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  struct ComEmu64Type value;
  short unsigned int _1;
  int _2;
  boolean _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_5(D)->ComRxSignalFlags;
  index_6 = _1 & 63;
  # DEBUG index => index_6
  # DEBUG BEGIN_STMT
  _2 = (int) index_6;
  fptr_7 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_7 (&value, dataPtr_8(D), Com_EB_ReadPropPtr_5(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_FilterSint64 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  return _12;

}


Com_EB_CalculateFilter_Uint64 (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  struct ComEmu64Type value;
  short unsigned int _1;
  int _2;
  boolean _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_5(D)->ComRxSignalFlags;
  index_6 = _1 & 63;
  # DEBUG index => index_6
  # DEBUG BEGIN_STMT
  _2 = (int) index_6;
  fptr_7 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_7 (&value, dataPtr_8(D), Com_EB_ReadPropPtr_5(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_FilterUint64 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  return _12;

}


Com_EB_CalculateFilter_Sint32 (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  sint32 value;
  short unsigned int _1;
  int _2;
  boolean _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_5(D)->ComRxSignalFlags;
  index_6 = _1 & 63;
  # DEBUG index => index_6
  # DEBUG BEGIN_STMT
  _2 = (int) index_6;
  fptr_7 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_7 (&value, dataPtr_8(D), Com_EB_ReadPropPtr_5(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_FilterSint32 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  return _12;

}


Com_EB_CalculateFilter_Sint16 (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  sint16 value;
  short unsigned int _1;
  int _2;
  boolean _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_5(D)->ComRxSignalFlags;
  index_6 = _1 & 63;
  # DEBUG index => index_6
  # DEBUG BEGIN_STMT
  _2 = (int) index_6;
  fptr_7 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_7 (&value, dataPtr_8(D), Com_EB_ReadPropPtr_5(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_FilterSint16 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  return _12;

}


Com_EB_CalculateFilter_Sint8 (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  sint8 value;
  short unsigned int _1;
  int _2;
  boolean _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_5(D)->ComRxSignalFlags;
  index_6 = _1 & 63;
  # DEBUG index => index_6
  # DEBUG BEGIN_STMT
  _2 = (int) index_6;
  fptr_7 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_7 (&value, dataPtr_8(D), Com_EB_ReadPropPtr_5(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_FilterSint8 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  return _12;

}


Com_EB_CalculateFilter_Uint32 (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  uint32 value;
  short unsigned int _1;
  int _2;
  boolean _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_5(D)->ComRxSignalFlags;
  index_6 = _1 & 63;
  # DEBUG index => index_6
  # DEBUG BEGIN_STMT
  _2 = (int) index_6;
  fptr_7 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_7 (&value, dataPtr_8(D), Com_EB_ReadPropPtr_5(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_FilterUint32 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  return _12;

}


Com_EB_CalculateFilter_Uint16 (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  uint16 value;
  short unsigned int _1;
  int _2;
  boolean _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_5(D)->ComRxSignalFlags;
  index_6 = _1 & 63;
  # DEBUG index => index_6
  # DEBUG BEGIN_STMT
  _2 = (int) index_6;
  fptr_7 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_7 (&value, dataPtr_8(D), Com_EB_ReadPropPtr_5(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_FilterUint16 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  return _12;

}


Com_EB_CalculateFilter_Uint8 (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  const uint16 index;
  void (*<T694>) (void *, const uint8 *, const struct ComSignalBaseType *, uint8 *) fptr;
  uint8 retval;
  uint8 value;
  short unsigned int _1;
  int _2;
  boolean _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  retval = 128;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Com_EB_ReadPropPtr_5(D)->ComRxSignalFlags;
  index_6 = _1 & 63;
  # DEBUG index => index_6
  # DEBUG BEGIN_STMT
  _2 = (int) index_6;
  fptr_7 = Com_ReadFuncs[_2].Read;
  # DEBUG fptr => fptr_7
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  fptr_7 (&value, dataPtr_8(D), Com_EB_ReadPropPtr_5(D), &retval);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _12 = Com_EB_FilterUint8 (ComFilterPropPtr_10(D), &value);
  value ={v} {CLOBBER};
  retval ={v} {CLOBBER};
  return _12;

}


Com_EB_CalculateFilter_Bool (const struct ComSignalBaseType * Com_EB_ReadPropPtr, const uint8 * dataPtr, const struct ComFilterConfType * ComFilterPropPtr)
{
  uint8 tmp_val;
  uint8 MSB;
  const ComSignalDescBitType ComSignalPosition;
  short unsigned int _1;
  sizetype _2;
  const uint8 * _3;
  unsigned char _4;
  unsigned char tmp_val.578_5;
  int _6;
  unsigned int _7;
  unsigned int _8;
  int _9;
  unsigned char _10;
  unsigned char _11;
  boolean _20;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ComSignalPosition_14 = Com_EB_ReadPropPtr_13(D)->ComSignalPositionInBit;
  # DEBUG ComSignalPosition => ComSignalPosition_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = ComSignalPosition_14 / 8;
  _2 = (sizetype) _1;
  _3 = dataPtr_15(D) + _2;
  _4 = *_3;
  tmp_val = _4;
  # DEBUG BEGIN_STMT
  tmp_val.578_5 = tmp_val;
  _6 = (int) tmp_val.578_5;
  _7 = (unsigned int) ComSignalPosition_14;
  _8 = _7 & 7;
  _9 = _6 >> _8;
  _10 = (unsigned char) _9;
  _11 = _10 & 1;
  MSB = _11;
  # DEBUG BEGIN_STMT
  _20 = Com_EB_FilterBoolean (ComFilterPropPtr_18(D), &MSB);
  MSB ={v} {CLOBBER};
  tmp_val ={v} {CLOBBER};
  return _20;

}


