__attribute__((target ("general-regs-only")))
OS_StartTaskIntLockTiming (const struct os_task_t * tp, os_intlocktype_t locktype)
{
  os_tick_t OS_hwtStartDelta;
  os_tick_t remaining;
  os_tick_t used;
  os_tick_t locktime;
  struct os_taskaccounting_t * acc;
  struct os_kerneldata_t * const kernel_data;
  const struct os_hwt_t * _1;
  const struct os_hwtdrv_t * _2;
  void (*<T521>) (const struct os_hwt_t *) _3;
  const struct os_hwt_t * _4;
  unsigned int _5;
  unsigned int _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  struct os_taskaccounting_t * _10;
  unsigned int _11;
  unsigned int _12;
  struct os_taskaccounting_t * _13;
  unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  unsigned char _21;
  unsigned int _22;
  unsigned int _23;
  unsigned char _24;
  unsigned int _25;
  unsigned int _26;
  const struct os_hwt_t * _27;
  unsigned int _28;
  const struct os_hwt_t * _29;
  const struct os_hwt_t * _30;
  const struct os_hwtdrv_t * _31;
  os_boolean_t (*<T52b>) (const struct os_hwt_t *, os_timervalue_t, os_tick_t) _32;
  const struct os_hwt_t * _33;
  unsigned int _34;
  const os_tick_t iftmp.0_37;
  const os_tick_t iftmp.0_47;
  const os_tick_t iftmp.0_48;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_42 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_42
  # DEBUG BEGIN_STMT
  acc_45 = tp_44(D)->accounting;
  # DEBUG acc => acc_45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (locktype_46(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.0_48 = tp_44(D)->osLockTime;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0_47 = tp_44(D)->allLockTime;

  <bb 5> :
  # iftmp.0_37 = PHI <iftmp.0_48(3), iftmp.0_47(4)>
  locktime_49 = iftmp.0_37;
  # DEBUG locktime => locktime_49
  # DEBUG BEGIN_STMT
  if (locktime_49 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _1 = OS_executionTimer[0];
  _2 = _1->driver;
  _3 = _2->hwtStop;
  _4 = OS_executionTimer[0];
  _3 (_4);
  # DEBUG BEGIN_STMT
  used_52 = OS_GetTimeUsed ();
  # DEBUG used => used_52
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.accounting.etUsed;
  _6 = used_52 + _5;
  OS_kernelData.accounting.etUsed = _6;
  # DEBUG BEGIN_STMT
  _7 = tp_44(D)->flags;
  _8 = (unsigned int) _7;
  _9 = _8 & 64;
  if (_9 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _10 = tp_44(D)->accounting;
  _11 = _10->etMax;
  _12 = OS_kernelData.accounting.etUsed;
  if (_11 < _12)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _13 = tp_44(D)->accounting;
  _14 = OS_kernelData.accounting.etUsed;
  _13->etMax = _14;

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _15 = OS_kernelData.accounting.etLimit;
  if (_15 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _16 = OS_kernelData.accounting.etUsed;
  _17 = OS_kernelData.accounting.etLimit;
  if (_16 >= _17)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_ExceedExecTime ();
  goto <bb 24>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _18 = OS_kernelData.accounting.etLimit;
  if (_18 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  remaining_57 = 4294967295;
  # DEBUG remaining => remaining_57
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _19 = OS_kernelData.accounting.etLimit;
  _20 = OS_kernelData.accounting.etUsed;
  remaining_56 = _19 - _20;
  # DEBUG remaining => remaining_56

  <bb 15> :
  # remaining_35 = PHI <remaining_57(13), remaining_56(14)>
  # DEBUG remaining => remaining_35
  # DEBUG BEGIN_STMT
  if (locktype_46(D) == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _21 = OS_kernelData.accounting.etType;
  acc_45->osSaveType = _21;
  # DEBUG BEGIN_STMT
  _22 = OS_kernelData.accounting.etUsed;
  acc_45->osSaveUsed = _22;
  # DEBUG BEGIN_STMT
  _23 = OS_kernelData.accounting.etLimit;
  acc_45->osSaveLimit = _23;
  goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _24 = OS_kernelData.accounting.etType;
  acc_45->allSaveType = _24;
  # DEBUG BEGIN_STMT
  _25 = OS_kernelData.accounting.etUsed;
  acc_45->allSaveUsed = _25;
  # DEBUG BEGIN_STMT
  _26 = OS_kernelData.accounting.etLimit;
  acc_45->allSaveLimit = _26;

  <bb 18> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etUsed = 0;
  # DEBUG BEGIN_STMT
  if (locktime_49 >= remaining_35)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etLimit = remaining_35;
  goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etLimit = locktime_49;
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.inFunction = 1;
  # DEBUG BEGIN_STMT
  OS_kernelData.accounting.etType = 3;

  <bb 21> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_hwtStartDelta_69 = OS_kernelData.accounting.etLimit;
  # DEBUG OS_hwtStartDelta => OS_hwtStartDelta_69
  # DEBUG BEGIN_STMT
  _27 = OS_executionTimer[0];
  _28 = _27->maxDelta;
  if (OS_hwtStartDelta_69 > _28)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  _29 = OS_executionTimer[0];
  OS_hwtStartDelta_70 = _29->defDelta;
  # DEBUG OS_hwtStartDelta => OS_hwtStartDelta_70

  <bb 23> :
  # OS_hwtStartDelta_36 = PHI <OS_hwtStartDelta_69(21), OS_hwtStartDelta_70(22)>
  # DEBUG OS_hwtStartDelta => OS_hwtStartDelta_36
  # DEBUG BEGIN_STMT
  _30 = OS_executionTimer[0];
  _31 = _30->driver;
  _32 = _31->hwtStart;
  _33 = OS_executionTimer[0];
  _34 = OS_kernelData.accounting.frc;
  _32 (_33, _34, OS_hwtStartDelta_36);

  <bb 24> :
  # DEBUG BEGIN_STMT
  return;

}


