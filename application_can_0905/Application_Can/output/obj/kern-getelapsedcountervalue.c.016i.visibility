
Marking local functions:


Marking externally visible functions: OS_KernGetElapsedCounterValue


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_GetCount/10 (OS_GetCount) @06cfed20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetElapsedCounterValue/0 
  Calls: 
OS_AppIsAccessible/9 (OS_AppIsAccessible) @06cfec40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetElapsedCounterValue/0 
  Calls: 
OS_counterTableBase/8 (OS_counterTableBase) @06d33558
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetElapsedCounterValue/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nCounters/7 (OS_nCounters) @06d334c8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetElapsedCounterValue/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_CanWrite/6 (OS_CanWrite) @06cfeb60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetElapsedCounterValue/0 OS_KernGetElapsedCounterValue/0 
  Calls: 
OS_iecMode/5 (OS_iecMode) @06d33318
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetElapsedCounterValue/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_GetElapsedCounterValue/4 (OS_svc_GetElapsedCounterValue) @06d332d0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetElapsedCounterValue/0 (addr)OS_KernGetElapsedCounterValue/0 (addr)OS_KernGetElapsedCounterValue/0 (addr)OS_KernGetElapsedCounterValue/0 (addr)OS_KernGetElapsedCounterValue/0 (addr)OS_KernGetElapsedCounterValue/0 (addr)OS_KernGetElapsedCounterValue/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/3 (OS_Error) @06cfea80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernGetElapsedCounterValue/0 OS_KernGetElapsedCounterValue/0 OS_KernGetElapsedCounterValue/0 OS_KernGetElapsedCounterValue/0 OS_KernGetElapsedCounterValue/0 OS_KernGetElapsedCounterValue/0 OS_KernGetElapsedCounterValue/0 
  Calls: 
OS_permittedContext/2 (OS_permittedContext) @06d33240
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetElapsedCounterValue/0 (read)OS_KernGetElapsedCounterValue/0 (read)OS_KernGetElapsedCounterValue/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06d331f8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernGetElapsedCounterValue/0 (read)OS_KernGetElapsedCounterValue/0 (read)OS_KernGetElapsedCounterValue/0 (read)OS_KernGetElapsedCounterValue/0 (read)OS_KernGetElapsedCounterValue/0 (read)OS_KernGetElapsedCounterValue/0 (read)
  Availability: not_available
  Varpool flags:
OS_KernGetElapsedCounterValue/0 (OS_KernGetElapsedCounterValue) @06cfe620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_permittedContext/2 (read)OS_kernelData/1 (read)OS_svc_GetElapsedCounterValue/4 (addr)OS_iecMode/5 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_GetElapsedCounterValue/4 (addr)OS_svc_GetElapsedCounterValue/4 (addr)OS_svc_GetElapsedCounterValue/4 (addr)OS_nCounters/7 (read)OS_svc_GetElapsedCounterValue/4 (addr)OS_counterTableBase/8 (read)OS_svc_GetElapsedCounterValue/4 (addr)OS_svc_GetElapsedCounterValue/4 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Error/3 OS_GetCount/10 OS_AppIsAccessible/9 OS_Error/3 OS_Error/3 OS_Error/3 OS_CanWrite/6 OS_Error/3 OS_CanWrite/6 OS_Error/3 OS_Error/3 
__attribute__((target ("general-regs-only")))
OS_KernGetElapsedCounterValue (os_counterid_t c, os_tick_t * last, os_tick_t * out)
{
  os_tick_t count;
  os_paramtype_t p[3];
  const struct os_counter_t * cs;
  os_result_t r;
  os_errorresult_t e;
  os_result_t D.7459;
  os_tick_t iftmp.10;
  int iftmp.3;
  _Bool iftmp.2;

  <bb 2> :
  # DEBUG BEGIN_STMT
  e = 0;
  # DEBUG BEGIN_STMT
  r = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) c;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  last.0_2 = (unsigned int) last;
  p[1] = last.0_2;
  # DEBUG BEGIN_STMT
  out.1_3 = (unsigned int) out;
  p[2] = out.1_3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _4 = OS_kernelData.inFunction;
  if (_4 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.4_5 = OS_permittedContext;
  _6 = OS_permittedContext.4_5 + 34;
  _7 = *_6;
  _8 = (unsigned int) _7;
  _9 = _8 & 1024;
  if (_9 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.5_10 = OS_permittedContext;
  _11 = OS_permittedContext.5_10 + 34;
  _12 = *_11;
  _13 = OS_kernelData.errorStatus.calledFrom;
  _14 = (int) _13;
  _15 = 1 << _14;
  _16 = (short unsigned int) _15;
  _17 = _12 & _16;
  if (_17 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.3 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.3 = 0;

  <bb 7> :
  iftmp.2 = iftmp.3 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.6_18 = OS_permittedContext;
  _19 = OS_permittedContext.6_18 + 34;
  _20 = *_19;
  _21 = OS_kernelData.inFunction;
  _22 = (int) _21;
  _23 = 1 << _22;
  _24 = (short unsigned int) _23;
  _25 = _20 & _24;
  iftmp.2 = _25 == 0;

  <bb 9> :
  if (iftmp.2 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetElapsedCounterValue, 12, &p);
  goto <bb 33>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_iecMode.7_26 = OS_iecMode;
  if (OS_iecMode.7_26 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  _27 = OS_kernelData.inFunction;
  if (_27 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _28 = OS_kernelData.taskCurrent;
  _29 = _28->dynamic;
  _30 = BIT_FIELD_REF <MEM[(void *)_29], 16, 160>;
  _31 = _30;
  if (_31 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _32 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _33 = _32;
  if (_33 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetElapsedCounterValue, 55, &p);
  goto <bb 33>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _34 = OS_CanWrite (last, 4);
  if (_34 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetElapsedCounterValue, 6, &p);
  goto <bb 33>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _35 = OS_CanWrite (out, 4);
  if (_35 == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetElapsedCounterValue, 6, &p);
  goto <bb 33>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  OS_nCounters.8_36 = OS_nCounters;
  if (c >= OS_nCounters.8_36)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetElapsedCounterValue, 17, &p);
  goto <bb 33>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  OS_counterTableBase.9_37 = OS_counterTableBase;
  _38 = (unsigned int) c;
  _39 = _38 * 32;
  cs = OS_counterTableBase.9_37 + _39;
  # DEBUG BEGIN_STMT
  _40 = *last;
  _41 = cs->maxallowedvalue;
  if (_40 > _41)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetElapsedCounterValue, 19, &p);
  goto <bb 33>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  count = 0;
  # DEBUG BEGIN_STMT
  _42 = cs->app;
  _43 = OS_AppIsAccessible (_42);
  if (_43 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  # DEBUG BEGIN_STMT
  e = 154;
  goto <bb 27>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  count = OS_GetCount (cs);

  <bb 27> :
  # DEBUG BEGIN_STMT
  if (e == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  _44 = *last;
  if (count < _44)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  _45 = *last;
  _46 = count - _45;
  _47 = cs->maxallowedvalue;
  _48 = _46 + _47;
  iftmp.10 = _48 + 1;
  goto <bb 31>; [INV]

  <bb 30> :
  _49 = *last;
  iftmp.10 = count - _49;

  <bb 31> :
  *out = iftmp.10;
  # DEBUG BEGIN_STMT
  *last = count;
  goto <bb 33>; [INV]

  <bb 32> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_GetElapsedCounterValue, e, &p);

  <bb 33> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7459 = r;
  p = {CLOBBER};
  return D.7459;

}


