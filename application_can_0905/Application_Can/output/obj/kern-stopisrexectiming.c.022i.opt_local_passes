__attribute__((target ("general-regs-only")))
OS_StopIsrExecTiming (const struct os_isr_t * isr)
{
  os_tick_t used;
  struct os_israccounting_t * acc;
  struct os_kerneldata_t * const kernel_data;
  const struct os_hwt_t * _1;
  const struct os_hwtdrv_t * _2;
  void (*<T521>) (const struct os_hwt_t *) _3;
  const struct os_hwt_t * _4;
  unsigned int _5;
  unsigned int _6;
  unsigned char _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_14 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_14
  # DEBUG BEGIN_STMT
  acc_17 = isr_16(D)->accounting;
  # DEBUG acc => acc_17
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_executionTimer[0];
  _2 = _1->driver;
  _3 = _2->hwtStop;
  _4 = OS_executionTimer[0];
  _3 (_4);
  # DEBUG BEGIN_STMT
  if (acc_17 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  used_20 = OS_GetTimeUsed ();
  # DEBUG used => used_20
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.accounting.etUsed;
  _6 = used_20 + _5;
  OS_kernelData.accounting.etUsed = _6;
  # DEBUG BEGIN_STMT
  _7 = isr_16(D)->flags;
  _8 = (unsigned int) _7;
  _9 = _8 & 64;
  if (_9 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _10 = OS_kernelData.accounting.etUsed;
  _11 = acc_17->etMax;
  if (_10 > _11)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _12 = OS_kernelData.accounting.etUsed;
  acc_17->etMax = _12;

  <bb 6> :
  return;

}


