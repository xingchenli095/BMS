__attribute__((target ("general-regs-only")))
OS_KernChainScheduleTable (os_scheduleid_t sc, os_scheduleid_t sn)
{
  os_errorresult_t e;
  const struct os_schedule_t * const sns;
  const struct os_schedule_t * const scs;
  const struct os_appcontext_t * const app;
  os_paramtype_t p[3];
  os_result_t r;
  os_result_t D.7465;
  const struct os_appcontext_t * iftmp.11;
  const struct os_appcontext_t * iftmp.9;
  const struct os_appcontext_t * iftmp.8;
  int iftmp.1;
  _Bool iftmp.0;

  <bb 2> :
  # DEBUG BEGIN_STMT
  r = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) sc;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  _2 = (unsigned int) sn;
  p[1] = _2;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = OS_kernelData.inFunction;
  if (_3 == 10)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  OS_permittedContext.2_4 = OS_permittedContext;
  _5 = OS_permittedContext.2_4 + 20;
  _6 = *_5;
  _7 = (unsigned int) _6;
  _8 = _7 & 1024;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  OS_permittedContext.3_9 = OS_permittedContext;
  _10 = OS_permittedContext.3_9 + 20;
  _11 = *_10;
  _12 = OS_kernelData.errorStatus.calledFrom;
  _13 = (int) _12;
  _14 = 1 << _13;
  _15 = (short unsigned int) _14;
  _16 = _11 & _15;
  if (_16 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1 = 0;

  <bb 7> :
  iftmp.0 = iftmp.1 == 0;
  goto <bb 9>; [INV]

  <bb 8> :
  OS_permittedContext.4_17 = OS_permittedContext;
  _18 = OS_permittedContext.4_17 + 20;
  _19 = *_18;
  _20 = OS_kernelData.inFunction;
  _21 = (int) _20;
  _22 = 1 << _21;
  _23 = (short unsigned int) _22;
  _24 = _19 & _23;
  iftmp.0 = _24 == 0;

  <bb 9> :
  if (iftmp.0 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainScheduleTable, 12, &p);
  goto <bb 38>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_iecMode.5_25 = OS_iecMode;
  if (OS_iecMode.5_25 > 1)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  _26 = OS_kernelData.inFunction;
  if (_26 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _27 = OS_kernelData.taskCurrent;
  _28 = _27->dynamic;
  _29 = BIT_FIELD_REF <MEM[(void *)_28], 16, 160>;
  _30 = _29;
  if (_30 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _31 = BIT_FIELD_REF <MEM[(void *)&OS_kernelData], 16, 320>;
  _32 = _31;
  if (_32 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainScheduleTable, 55, &p);
  goto <bb 38>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_nSchedules.6_33 = OS_nSchedules;
  if (sc >= OS_nSchedules.6_33)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  OS_nSchedules.7_34 = OS_nSchedules;
  if (sn >= OS_nSchedules.7_34)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainScheduleTable, 40, &p);
  goto <bb 38>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _35 = OS_kernelData.inFunction;
  if (_35 == 1)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _36 = OS_kernelData.taskCurrent;
  iftmp.8 = _36->app;
  goto <bb 30>; [INV]

  <bb 21> :
  _37 = OS_kernelData.inFunction;
  if (_37 == 3)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  OS_isrTableBase.10_38 = OS_isrTableBase;
  _39 = OS_kernelData.isrCurrent;
  _40 = (unsigned int) _39;
  _41 = _40 * 68;
  _42 = OS_isrTableBase.10_38 + _41;
  iftmp.9 = _42->app;
  goto <bb 29>; [INV]

  <bb 23> :
  _43 = OS_kernelData.inFunction;
  if (_43 == 10)
    goto <bb 26>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  _44 = OS_kernelData.inFunction;
  if (_44 == 8)
    goto <bb 26>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  _45 = OS_kernelData.inFunction;
  if (_45 == 9)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  iftmp.11 = OS_kernelData.hookApp;
  goto <bb 28>; [INV]

  <bb 27> :
  iftmp.11 = 0B;

  <bb 28> :
  iftmp.9 = iftmp.11;

  <bb 29> :
  iftmp.8 = iftmp.9;

  <bb 30> :
  app = iftmp.8;
  # DEBUG BEGIN_STMT
  OS_scheduleTableBase.12_46 = OS_scheduleTableBase;
  _47 = (unsigned int) sc;
  _48 = _47 * 36;
  scs = OS_scheduleTableBase.12_46 + _48;
  # DEBUG BEGIN_STMT
  OS_scheduleTableBase.13_49 = OS_scheduleTableBase;
  _50 = (unsigned int) sn;
  _51 = _50 * 36;
  sns = OS_scheduleTableBase.13_49 + _51;
  # DEBUG BEGIN_STMT
  if (app != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 31> :
  _52 = app->permissionBit;
  _53 = scs->permissions;
  _54 = _52 & _53;
  if (_54 == 0)
    goto <bb 33>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  _55 = app->permissionBit;
  _56 = sns->permissions;
  _57 = _55 & _56;
  if (_57 == 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainScheduleTable, 37, &p);
  goto <bb 38>; [INV]

  <bb 34> :
  # DEBUG BEGIN_STMT
  OS_alarmTableBase.14_58 = OS_alarmTableBase;
  _59 = scs->alarm;
  _60 = (unsigned int) _59;
  _61 = _60 * 28;
  _62 = OS_alarmTableBase.14_58 + _61;
  _63 = _62->counter;
  OS_alarmTableBase.15_64 = OS_alarmTableBase;
  _65 = sns->alarm;
  _66 = (unsigned int) _65;
  _67 = _66 * 28;
  _68 = OS_alarmTableBase.15_64 + _67;
  _69 = _68->counter;
  if (_63 != _69)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainScheduleTable, 68, &p);
  goto <bb 38>; [INV]

  <bb 36> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  e = OS_LocalChainScheduleTable (sc, sn);
  # DEBUG BEGIN_STMT
  if (e != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainScheduleTable, e, &p);

  <bb 38> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7465 = r;
  p = {CLOBBER};
  return D.7465;

}


