
Marking local functions:


Marking externally visible functions: OS_ErrorMinimal


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

ErrorHook/4 (ErrorHook) @06c68e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_ErrorMinimal/0 
  Calls: 
OS_CORTEXM_IntSetDisablingLevel/3 (OS_CORTEXM_IntSetDisablingLevel) @06c68c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_ErrorMinimal/0 OS_ErrorMinimal/0 
  Calls: 
OS_kernDisableLevel/2 (OS_kernDisableLevel) @06c43948
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_ErrorMinimal/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06c43900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_ErrorMinimal/0 (addr)OS_ErrorMinimal/0 (read)OS_ErrorMinimal/0 (write)OS_ErrorMinimal/0 (read)OS_ErrorMinimal/0 (write)OS_ErrorMinimal/0 (write)OS_ErrorMinimal/0 (write)
  Availability: not_available
  Varpool flags:
OS_ErrorMinimal/0 (OS_ErrorMinimal) @06c68a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernDisableLevel/2 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_CORTEXM_IntSetDisablingLevel/3 ErrorHook/4 OS_CORTEXM_IntSetDisablingLevel/3 
__attribute__((target ("general-regs-only")))
OS_ErrorMinimal (os_result_t e)
{
  os_intstatus_t is;
  os_uint8_t oldInFunction;
  struct os_kerneldata_t * const kernel_data;
  os_result_t D.7415;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.errorHookNesting;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_2 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.0_2);
  # DEBUG BEGIN_STMT
  OS_kernelData.errorHookNesting = 1;
  # DEBUG BEGIN_STMT
  oldInFunction = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 10;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ErrorHook (e);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = oldInFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.errorHookNesting = 0;
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.7415 = e;
  return D.7415;

}


