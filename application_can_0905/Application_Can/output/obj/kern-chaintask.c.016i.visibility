
Marking local functions:


Marking externally visible functions: OS_KernChainTask


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_LocalActivateTask/11 (OS_LocalActivateTask) @06dd79a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernChainTask/0 OS_KernChainTask/0 
  Calls: 
OS_DoTerminateTask/10 (OS_DoTerminateTask) @06dd78c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernChainTask/0 OS_KernChainTask/0 
  Calls: 
OS_CORTEXM_IntSetDisablingLevel/9 (OS_CORTEXM_IntSetDisablingLevel) @06dd77e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernChainTask/0 OS_KernChainTask/0 
  Calls: 
OS_kernDisableLevel/8 (OS_kernDisableLevel) @06e13a68
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernChainTask/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_isrTableBase/7 (OS_isrTableBase) @06e139d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_taskTableBase/6 (OS_taskTableBase) @06e13990
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernChainTask/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_iecMode/5 (OS_iecMode) @06e13870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernChainTask/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nTasks/4 (OS_nTasks) @06e137e0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernChainTask/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_svc_ChainTask/3 (OS_svc_ChainTask) @06e13798
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernChainTask/0 (addr)OS_KernChainTask/0 (addr)OS_KernChainTask/0 (addr)OS_KernChainTask/0 (addr)OS_KernChainTask/0 (addr)OS_KernChainTask/0 (addr)OS_KernChainTask/0 (addr)
  Availability: not_available
  Varpool flags: read-only
OS_Error/2 (OS_Error) @06dd7620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernChainTask/0 OS_KernChainTask/0 OS_KernChainTask/0 OS_KernChainTask/0 OS_KernChainTask/0 OS_KernChainTask/0 OS_KernChainTask/0 
  Calls: 
OS_kernelData/1 (OS_kernelData) @06e13708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernChainTask/0 (addr)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)OS_KernChainTask/0 (read)
  Availability: not_available
  Varpool flags:
OS_KernChainTask/0 (OS_KernChainTask) @06dd72a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_svc_ChainTask/3 (addr)OS_nTasks/4 (read)OS_svc_ChainTask/3 (addr)OS_kernelData/1 (read)OS_iecMode/5 (read)OS_svc_ChainTask/3 (addr)OS_svc_ChainTask/3 (addr)OS_svc_ChainTask/3 (addr)OS_taskTableBase/6 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_isrTableBase/7 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_isrTableBase/7 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_svc_ChainTask/3 (addr)OS_kernDisableLevel/8 (read)OS_svc_ChainTask/3 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Error/2 OS_DoTerminateTask/10 OS_LocalActivateTask/11 OS_CORTEXM_IntSetDisablingLevel/9 OS_LocalActivateTask/11 OS_DoTerminateTask/10 OS_CORTEXM_IntSetDisablingLevel/9 OS_Error/2 OS_Error/2 OS_Error/2 OS_Error/2 OS_Error/2 OS_Error/2 
__attribute__((target ("general-regs-only")))
OS_KernChainTask (os_taskid_t t)
{
  os_errorresult_t e;
  os_paramtype_t p[3];
  os_intstatus_t is;
  os_result_t r;
  const struct os_task_t * ntp;
  struct os_taskdynamic_t * otd;
  const struct os_task_t * otp;
  struct os_kerneldata_t * const kernel_data;
  os_result_t D.7477;
  const struct os_appcontext_t * iftmp.8;
  const struct os_appcontext_t * iftmp.6;
  const struct os_appcontext_t * iftmp.5;
  int iftmp.4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  r = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned int) t;
  p[0] = _1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = OS_kernelData.inFunction;
  if (_2 != 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainTask, 12, &p);
  goto <bb 46>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_nTasks.0_3 = OS_nTasks;
  if (t >= OS_nTasks.0_3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainTask, 2, &p);
  goto <bb 46>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  otp = OS_kernelData.taskCurrent;
  # DEBUG BEGIN_STMT
  otd = otp->dynamic;
  # DEBUG BEGIN_STMT
  OS_iecMode.1_4 = OS_iecMode;
  if (OS_iecMode.1_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _5 = BIT_FIELD_REF <MEM[(void *)otd], 16, 160>;
  _6 = _5;
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainTask, 55, 0B);
  goto <bb 46>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _7 = otd->lastLock;
  if (_7 != 4294967295)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _8 = otd->lastLock;
  _9 = _8 >> 24;
  if (_9 == 9)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainTask, 156, &p);
  goto <bb 46>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainTask, 13, &p);
  goto <bb 46>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  OS_taskTableBase.2_10 = OS_taskTableBase;
  _11 = (unsigned int) t;
  _12 = _11 * 76;
  ntp = OS_taskTableBase.2_10 + _12;
  # DEBUG BEGIN_STMT
  _13 = OS_kernelData.inFunction;
  if (_13 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _14 = OS_kernelData.taskCurrent;
  _15 = _14->app;
  if (_15 != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 15> :
  _16 = OS_kernelData.inFunction;
  if (_16 == 3)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  OS_isrTableBase.3_17 = OS_isrTableBase;
  _18 = OS_kernelData.isrCurrent;
  _19 = (unsigned int) _18;
  _20 = _19 * 68;
  _21 = OS_isrTableBase.3_17 + _20;
  _22 = _21->app;
  if (_22 != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 17> :
  _23 = OS_kernelData.inFunction;
  if (_23 == 10)
    goto <bb 20>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _24 = OS_kernelData.inFunction;
  if (_24 == 8)
    goto <bb 20>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  _25 = OS_kernelData.inFunction;
  if (_25 == 9)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  _26 = OS_kernelData.hookApp;
  if (_26 != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  iftmp.4 = 1;
  goto <bb 23>; [INV]

  <bb 22> :
  iftmp.4 = 0;

  <bb 23> :
  _27 = (_Bool) iftmp.4;
  if (_27 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 24> :
  _28 = OS_kernelData.inFunction;
  if (_28 == 1)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _29 = OS_kernelData.taskCurrent;
  iftmp.5 = _29->app;
  goto <bb 35>; [INV]

  <bb 26> :
  _30 = OS_kernelData.inFunction;
  if (_30 == 3)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  OS_isrTableBase.7_31 = OS_isrTableBase;
  _32 = OS_kernelData.isrCurrent;
  _33 = (unsigned int) _32;
  _34 = _33 * 68;
  _35 = OS_isrTableBase.7_31 + _34;
  iftmp.6 = _35->app;
  goto <bb 34>; [INV]

  <bb 28> :
  _36 = OS_kernelData.inFunction;
  if (_36 == 10)
    goto <bb 31>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _37 = OS_kernelData.inFunction;
  if (_37 == 8)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _38 = OS_kernelData.inFunction;
  if (_38 == 9)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  iftmp.8 = OS_kernelData.hookApp;
  goto <bb 33>; [INV]

  <bb 32> :
  iftmp.8 = 0B;

  <bb 33> :
  iftmp.6 = iftmp.8;

  <bb 34> :
  iftmp.5 = iftmp.6;

  <bb 35> :
  _39 = iftmp.5->permissionBit;
  _40 = ntp->permissions;
  _41 = _39 & _40;
  if (_41 == 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainTask, 37, &p);
  goto <bb 46>; [INV]

  <bb 37> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ntp == otp)
    goto <bb 38>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 38> :
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.9_42 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.9_42);
  # DEBUG BEGIN_STMT
  _43 = otd->state;
  if (_43 == 5)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  # DEBUG BEGIN_STMT
  OS_DoTerminateTask (otp, otd);
  # DEBUG BEGIN_STMT
  e = OS_LocalActivateTask (ntp);
  goto <bb 41>; [INV]

  <bb 40> :
  # DEBUG BEGIN_STMT
  e = 0;

  <bb 41> :
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  goto <bb 44>; [INV]

  <bb 42> :
  # DEBUG BEGIN_STMT
  e = OS_LocalActivateTask (ntp);
  # DEBUG BEGIN_STMT
  if (e == 0)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  # DEBUG BEGIN_STMT
  _44 = otp->dynamic;
  OS_DoTerminateTask (otp, _44);

  <bb 44> :
  # DEBUG BEGIN_STMT
  if (e != 0)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  # DEBUG BEGIN_STMT
  r = OS_Error (&OS_svc_ChainTask, e, &p);

  <bb 46> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7477 = r;
  p = {CLOBBER};
  return D.7477;

}


