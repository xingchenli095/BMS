__attribute__((target ("general-regs-only")))
OS_GetTimeStampGeneric (struct os_timestamp_t * out)
{
  volatile struct os_timestamp_t * const ptimeStampValue;
  volatile os_timervalue_t * const plastTimeStampTime;
  os_timervalue_t localLastTimeStampTime;
  struct os_timestamp_t timeStampValue2;
  struct os_timestamp_t timeStampValue1;
  os_timervalue_t diff;
  os_timervalue_t newTmrVal;
  const struct os_hwt_t * const ptimeStampTimer;
  const struct os_hwtdrv_t * _1;
  os_timervalue_t (*<T526>) (const struct os_hwt_t *) _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  unsigned int _15;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ptimeStampTimer_20 = OS_timeStampTimer;
  # DEBUG ptimeStampTimer => ptimeStampTimer_20
  # DEBUG BEGIN_STMT
  if (ptimeStampTimer_20 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  plastTimeStampTime_21 = &OS_lastTimeStampTime;
  # DEBUG plastTimeStampTime => plastTimeStampTime_21
  # DEBUG BEGIN_STMT
  ptimeStampValue_22 = &OS_timeStampValue;
  # DEBUG ptimeStampValue => ptimeStampValue_22

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  timeStampValue1 ={v} OS_timeStampValue;
  # DEBUG BEGIN_STMT
  _1 = ptimeStampTimer_20->driver;
  _2 = _1->hwtRead;
  newTmrVal_25 = _2 (ptimeStampTimer_20);
  # DEBUG newTmrVal => newTmrVal_25
  # DEBUG BEGIN_STMT
  localLastTimeStampTime_26 ={v} OS_lastTimeStampTime;
  # DEBUG localLastTimeStampTime => localLastTimeStampTime_26
  # DEBUG BEGIN_STMT
  timeStampValue2 ={v} OS_timeStampValue;
  # DEBUG BEGIN_STMT
  _3 = timeStampValue1.tsHi;
  _4 = timeStampValue2.tsHi;
  if (_3 != _4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _5 = timeStampValue1.tsLo;
  _6 = timeStampValue2.tsLo;
  if (_5 != _6)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = newTmrVal_25 - localLastTimeStampTime_26;
  _8 = ptimeStampTimer_20->wrapMask;
  diff_28 = _7 & _8;
  # DEBUG diff => diff_28
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _9 = timeStampValue2.tsHi;
  out_29(D)->tsHi = _9;
  # DEBUG BEGIN_STMT
  _10 = timeStampValue2.tsLo;
  _11 = ~diff_28;
  if (_10 > _11)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _12 = out_29(D)->tsHi;
  _13 = _12 + 1;
  out_29(D)->tsHi = _13;

  <bb 8> :
  # DEBUG BEGIN_STMT
  _14 = timeStampValue2.tsLo;
  _15 = diff_28 + _14;
  out_29(D)->tsLo = _15;
  # DEBUG BEGIN_STMT
  timeStampValue1 ={v} {CLOBBER};
  timeStampValue2 ={v} {CLOBBER};

  <bb 9> :
  return;

}


