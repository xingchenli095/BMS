Dem_UpdatePID01value (const Dem_EventIdType EventId, const uint16 ReadinessGroup, const boolean ReadinessGroupChecked, uint8 * PID01value)
{
  boolean Result;
  boolean D.7214;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = ReadinessGroupChecked;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ReadinessGroupChecked == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = ReadinessGroup / 8;
  _2 = (unsigned int) _1;
  _3 = 2 - _2;
  _4 = PID01value + _3;
  _5 = *_4;
  _6 = (unsigned int) ReadinessGroup;
  _7 = _6 & 7;
  _8 = 1 << _7;
  _9 = (unsigned char) _8;
  _10 = ReadinessGroup / 8;
  _11 = (unsigned int) _10;
  _12 = 2 - _11;
  _13 = PID01value + _12;
  _14 = _5 | _9;
  *_13 = _14;
  # DEBUG BEGIN_STMT
  _15 = (int) EventId;
  _16 = Dem_NvData.DTCStatusMask[_15];
  _17 = (unsigned int) _16;
  _18 = _17 & 20;
  if (_18 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _19 = ReadinessGroup / 8;
  _20 = (unsigned int) _19;
  _21 = _20 * 2;
  _22 = 3 - _21;
  _23 = PID01value + _22;
  _24 = *_23;
  _25 = (unsigned int) ReadinessGroup;
  _26 = ReadinessGroup / 8;
  _27 = (unsigned int) _26;
  _28 = _27 * 4;
  _29 = _25 - _28;
  _30 = 1 << _29;
  _31 = (unsigned char) _30;
  _32 = ReadinessGroup / 8;
  _33 = (unsigned int) _32;
  _34 = _33 * 2;
  _35 = 3 - _34;
  _36 = PID01value + _35;
  _37 = _24 | _31;
  *_36 = _37;
  # DEBUG BEGIN_STMT
  Result = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  _38 = (int) EventId;
  _39 = Dem_NvData.DTCStatusMask[_38];
  _40 = (unsigned int) _39;
  _41 = _40 & 8;
  if (_41 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _42 = ReadinessGroup / 8;
  _43 = (unsigned int) _42;
  _44 = _43 * 2;
  _45 = 3 - _44;
  _46 = PID01value + _45;
  _47 = *_46;
  _48 = (unsigned int) ReadinessGroup;
  _49 = ReadinessGroup / 8;
  _50 = (unsigned int) _49;
  _51 = _50 * 4;
  _52 = _48 - _51;
  _53 = 1 << _52;
  _54 = (unsigned char) _53;
  _55 = ~_54;
  _56 = ReadinessGroup / 8;
  _57 = (unsigned int) _56;
  _58 = _57 * 2;
  _59 = 3 - _58;
  _60 = PID01value + _59;
  _61 = _47 & _55;
  *_60 = _61;
  # DEBUG BEGIN_STMT
  Result = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7214 = Result;
  return D.7214;

}


Dem_DcmGetDTRData (uint8 Obdmid, uint8 TIDindex, uint8 * TIDvalue, uint8 * UaSID, uint16 * Testvalue, uint16 * Lowlimvalue, uint16 * Upplimvalue)
{
  Std_ReturnType Result;
  Std_ReturnType D.7356;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.30_1 = Dem_InitializationState;
  if (Dem_InitializationState.30_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 165, 32);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (TIDvalue == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (UaSID == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (Testvalue == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (Lowlimvalue == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (Upplimvalue == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 165, 17);

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7356 = Result;
  return D.7356;

}


Dem_DcmGetNumTIDsOfOBDMID (uint8 Obdmid, uint8 * numberOfTIDs)
{
  Std_ReturnType Result;
  Std_ReturnType D.7344;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.29_1 = Dem_InitializationState;
  if (Dem_InitializationState.29_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 164, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (numberOfTIDs == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 164, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7344 = Result;
  return D.7344;

}


Dem_DcmGetAvailableOBDMIDs (uint8 Obdmid, uint32 * Obdmidvalue)
{
  Std_ReturnType Result;
  Std_ReturnType D.7336;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.28_1 = Dem_InitializationState;
  if (Dem_InitializationState.28_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 163, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (Obdmidvalue == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 163, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7336 = Result;
  return D.7336;

}


Dem_DcmGetDTCOfOBDFreezeFrame (uint8 FrameNumber, uint32 * DTC, Dem_DTCFormatType DTCFormat)
{
  uint32 DtcTempValue;
  Dem_SizeEvMemEntryType SelectedEntryIndex;
  boolean EntryFound;
  Dem_EventIdType StoredOBDFFEventId;
  Std_ReturnType Result;
  Std_ReturnType D.7328;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.26_1 = Dem_InitializationState;
  if (Dem_InitializationState.26_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 83, 32);
  goto <bb 16>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (DTC == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 83, 17);
  goto <bb 16>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (DTCFormat > 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 83, 18);
  goto <bb 16>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (FrameNumber == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (DTCFormat <= 1)
    goto <bb 10>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  StoredOBDFFEventId = 0;
  # DEBUG BEGIN_STMT
  EntryFound = 0;
  # DEBUG BEGIN_STMT
  SelectedEntryIndex = 0;
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  EntryFound = Dem_SelectEntryOfOBDFreezeFrameEvent (&SelectedEntryIndex, 1);
  # DEBUG BEGIN_STMT
  if (EntryFound == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _2 = Dem_EventMem[0];
  SelectedEntryIndex.27_3 = SelectedEntryIndex;
  _4 = (unsigned int) SelectedEntryIndex.27_3;
  _5 = _4 * 16;
  _6 = _2 + _5;
  StoredOBDFFEventId = _6->EventId;

  <bb 12> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (EntryFound == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  DtcTempValue = 0;
  # DEBUG BEGIN_STMT
  DtcTempValue = Dem_GetVisibleCmbDTC (DTCFormat, StoredOBDFFEventId);
  # DEBUG BEGIN_STMT
  if (DtcTempValue != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  *DTC = DtcTempValue;
  # DEBUG BEGIN_STMT
  Result = 0;

  <bb 15> :
  SelectedEntryIndex = {CLOBBER};

  <bb 16> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7328 = Result;
  return D.7328;

}


Dem_DcmReadDataOfOBDFreezeFrame (uint8 PID, uint8 DataElementIndexOfPID, uint8 * DestBuffer, uint16 * BufSize)
{
  const Dem_SizeEntryDataType ObdFFDataIdx;
  Dem_EntryDataType * OBDFFStoredData;
  Dem_SizeEntryDataType StartByte;
  uint8_least PidClassIterator;
  boolean EntryFound;
  Dem_SizeEvMemEntryType SelectedEntryIndex;
  Std_ReturnType Result;
  Std_ReturnType D.7306;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.24_1 = Dem_InitializationState;
  if (Dem_InitializationState.24_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 82, 32);
  goto <bb 19>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (DestBuffer == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 82, 17);
  goto <bb 19>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (BufSize == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 82, 17);
  goto <bb 19>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  SelectedEntryIndex = 0;
  # DEBUG BEGIN_STMT
  EntryFound = 0;
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  EntryFound = Dem_SelectEntryOfOBDFreezeFrameEvent (&SelectedEntryIndex, 1);
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (EntryFound == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  StartByte = 0;
  # DEBUG BEGIN_STMT
  PidClassIterator = 0;
  goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = Dem_PidClass[PidClassIterator].ParameterId;
  if (PID == _2)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  _3 = Dem_PidClass[PidClassIterator].ParameterId;
  if (_3 != 255)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _4 = Dem_PidClass[PidClassIterator].NumSegDataElements;
  if (DataElementIndexOfPID < _4)
    goto <bb 15>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _5 = Dem_PidClass[PidClassIterator].Size;
  _6 = (short unsigned int) _5;
  StartByte = StartByte + _6;
  # DEBUG BEGIN_STMT
  PidClassIterator = PidClassIterator + 1;

  <bb 14> :
  # DEBUG BEGIN_STMT
  if (PidClassIterator <= 1)
    goto <bb 10>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (PidClassIterator <= 1)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _7 = *BufSize;
  _8 = Dem_PidClass[PidClassIterator].ObdFFPidDataElementSize;
  _9 = (sizetype) DataElementIndexOfPID;
  _10 = _8 + _9;
  _11 = *_10;
  _12 = (short unsigned int) _11;
  if (_7 >= _12)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _13 = Dem_PidClass[PidClassIterator].ObdFFPidDataElementOffset;
  _14 = (sizetype) DataElementIndexOfPID;
  _15 = _13 + _14;
  _16 = *_15;
  _17 = (short unsigned int) _16;
  ObdFFDataIdx = StartByte + _17;
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  SelectedEntryIndex.25_18 = SelectedEntryIndex;
  _19 = (int) SelectedEntryIndex.25_18;
  OBDFFStoredData = &Dem_EntryOBDFF[_19].OBDFFData;
  # DEBUG BEGIN_STMT
  _20 = (sizetype) ObdFFDataIdx;
  _21 = OBDFFStoredData + _20;
  _22 = Dem_PidClass[PidClassIterator].ObdFFPidDataElementSize;
  _23 = (sizetype) DataElementIndexOfPID;
  _24 = _22 + _23;
  _25 = *_24;
  _26 = (long unsigned int) _25;
  TS_MemCpy32 (DestBuffer, _21, _26);
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _27 = Dem_PidClass[PidClassIterator].ObdFFPidDataElementSize;
  _28 = (sizetype) DataElementIndexOfPID;
  _29 = _27 + _28;
  _30 = *_29;
  _31 = (short unsigned int) _30;
  *BufSize = _31;
  # DEBUG BEGIN_STMT
  Result = 0;

  <bb 18> :
  SelectedEntryIndex = {CLOBBER};

  <bb 19> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7306 = Result;
  return D.7306;

}


Dem_DcmReadDataOfPID91 (uint8 * PID91value)
{
  Std_ReturnType Result;
  Std_ReturnType D.7284;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.23_1 = Dem_InitializationState;
  if (Dem_InitializationState.23_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 106, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID91value == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 106, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7284 = Result;
  return D.7284;

}


Dem_DcmReadDataOfPID1C (uint8 * PID1Cvalue)
{
  Std_ReturnType Result;
  Std_ReturnType D.7276;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.21_1 = Dem_InitializationState;
  if (Dem_InitializationState.21_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 99, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID1Cvalue == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 99, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Dem_ObdCompliancyPID1CByte.22_2 = Dem_ObdCompliancyPID1CByte;
  *PID1Cvalue = Dem_ObdCompliancyPID1CByte.22_2;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7276 = Result;
  return D.7276;

}


Dem_DcmReadDataOfPID4E (uint8 * PID4Evalue)
{
  Std_ReturnType Result;
  Std_ReturnType D.7268;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.20_1 = Dem_InitializationState;
  if (Dem_InitializationState.20_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 105, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID4Evalue == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 105, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7268 = Result;
  return D.7268;

}


Dem_DcmReadDataOfPID4D (uint8 * PID4Dvalue)
{
  Std_ReturnType Result;
  Std_ReturnType D.7260;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.19_1 = Dem_InitializationState;
  if (Dem_InitializationState.19_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 104, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID4Dvalue == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 104, 17);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7260 = Result;
  return D.7260;

}


Dem_DcmReadDataOfPID41 (uint8 * PID41value)
{
  const Dem_EventOBDReadinessGroupType ReadinessGroup;
  Dem_EventIdType EvId;
  uint8 PID41[4];
  Std_ReturnType Result;
  Std_ReturnType D.7252;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.16_1 = Dem_InitializationState;
  if (Dem_InitializationState.16_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 103, 32);
  goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID41value == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 103, 17);
  goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  PID41 = "\x00";
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_ObdReadinessPID41ByteB.17_2 = Dem_ObdReadinessPID41ByteB;
  PID41[1] = Dem_ObdReadinessPID41ByteB.17_2;
  # DEBUG BEGIN_STMT
  EvId = 1;
  goto <bb 13>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ReadinessGroup = Dem_GbiOBDReadinessGroup (EvId);
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (ReadinessGroup <= 10)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _3 = Dem_NvData.ReadinessEnableStatus;
  _4 = (int) ReadinessGroup;
  _5 = _3 >> _4;
  _6 = _5 & 1;
  if (_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _7 = ReadinessGroup / 8;
  _8 = (unsigned int) _7;
  _9 = 2 - _8;
  _10 = PID41[_9];
  _11 = (unsigned int) ReadinessGroup;
  _12 = _11 & 7;
  _13 = 1 << _12;
  _14 = (unsigned char) _13;
  _15 = ReadinessGroup / 8;
  _16 = (unsigned int) _15;
  _17 = 2 - _16;
  _18 = _10 | _14;
  PID41[_17] = _18;

  <bb 10> :
  # DEBUG BEGIN_STMT
  _19 = (int) EvId;
  _20 = Dem_NvData.DTCStatusMask[_19];
  _21 = (unsigned int) _20;
  _22 = _21 & 64;
  if (_22 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _23 = ReadinessGroup / 8;
  _24 = (unsigned int) _23;
  _25 = _24 * 2;
  _26 = 3 - _25;
  _27 = PID41[_26];
  _28 = (unsigned int) ReadinessGroup;
  _29 = ReadinessGroup / 8;
  _30 = (unsigned int) _29;
  _31 = _30 * 4;
  _32 = _28 - _31;
  _33 = 1 << _32;
  _34 = (unsigned char) _33;
  _35 = ReadinessGroup / 8;
  _36 = (unsigned int) _35;
  _37 = _36 * 2;
  _38 = 3 - _37;
  _39 = _27 | _34;
  PID41[_38] = _39;

  <bb 12> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  EvId = EvId + 1;

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (EvId <= 14)
    goto <bb 7>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _40 = PID41[1];
  Dem_ObdReadinessForceCompleteMask.18_41 = Dem_ObdReadinessForceCompleteMask;
  _42 = _40 & Dem_ObdReadinessForceCompleteMask.18_41;
  PID41[1] = _42;
  # DEBUG BEGIN_STMT
  TS_MemCpy32 (PID41value, &PID41[0], 4);
  PID41 = {CLOBBER};

  <bb 15> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7252 = Result;
  return D.7252;

}


Dem_DcmReadDataOfPID31 (uint8 * PID31value)
{
  Std_ReturnType D.7238;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.15_1 = Dem_InitializationState;
  if (Dem_InitializationState.15_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 102, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID31value == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 102, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  *PID31value = 0;
  # DEBUG BEGIN_STMT
  _2 = PID31value + 1;
  *_2 = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7238 = 0;
  return D.7238;

}


Dem_DcmReadDataOfPID30 (uint8 * PID30value)
{
  Std_ReturnType Result;
  Std_ReturnType D.7230;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.14_1 = Dem_InitializationState;
  if (Dem_InitializationState.14_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 101, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID30value == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 101, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  *PID30value = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7230 = Result;
  return D.7230;

}


Dem_DcmReadDataOfPID21 (uint8 * PID21value)
{
  Std_ReturnType D.7222;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.13_1 = Dem_InitializationState;
  if (Dem_InitializationState.13_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 100, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID21value == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 100, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  *PID21value = 0;
  # DEBUG BEGIN_STMT
  _2 = PID21value + 1;
  *_2 = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7222 = 0;
  return D.7222;

}


Dem_DcmReadDataOfPID01 (uint8 * PID01value)
{
  const uint32 ObdDtc;
  const uint8 ObdReadinessEngineTypeMask;
  uint8 PID01[4];
  Dem_EventIdType EventId;
  Dem_EventOBDReadinessGroupType ReadinessGroup;
  boolean ReadinessGroupChecked[11];
  Std_ReturnType Result;
  Std_ReturnType D.7206;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.10_1 = Dem_InitializationState;
  if (Dem_InitializationState.10_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 97, 32);
  goto <bb 24>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PID01value == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 97, 17);
  goto <bb 24>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  PID01 = "\x00";
  # DEBUG BEGIN_STMT
  ObdReadinessEngineTypeMask = 8;
  # DEBUG BEGIN_STMT
  PID01[1] = 8;
  # DEBUG BEGIN_STMT
  ReadinessGroup = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _2 = (int) ReadinessGroup;
  ReadinessGroupChecked[_2] = 0;
  # DEBUG BEGIN_STMT
  ReadinessGroup.11_3 = ReadinessGroup;
  ReadinessGroup = ReadinessGroup.11_3 + 1;

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (ReadinessGroup <= 10)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _4 = Dem_InternalGetIndicatorStatus (0, 1);
  if (_4 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _5 = PID01[0];
  _6 = _5 | 128;
  PID01[0] = _6;

  <bb 11> :
  # DEBUG BEGIN_STMT
  EventId = 1;
  goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  ReadinessGroup = Dem_GbiOBDReadinessGroup (EventId);
  # DEBUG BEGIN_STMT
  if (ReadinessGroup <= 10)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _7 = (short unsigned int) ReadinessGroup;
  _8 = (int) ReadinessGroup;
  _9 = ReadinessGroupChecked[_8];
  _10 = (int) ReadinessGroup;
  _11 = Dem_UpdatePID01value (EventId, _7, _9, &PID01);
  ReadinessGroupChecked[_10] = _11;

  <bb 14> :
  # DEBUG BEGIN_STMT
  EventId = EventId + 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (EventId <= 14)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  EventId = 1;
  goto <bb 22>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  ObdDtc = Dem_GetVisibleObdDTC (EventId);
  # DEBUG BEGIN_STMT
  if (ObdDtc != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _12 = (int) EventId;
  _13 = Dem_NvData.DTCStatusMask[_12];
  _14 = (unsigned int) _13;
  _15 = _14 & 8;
  if (_15 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _16 = PID01[0];
  _17 = (unsigned int) _16;
  _18 = _17 & 127;
  if (_18 <= 126)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  _19 = PID01[0];
  _20 = _19;
  _21 = _20 + 1;
  PID01[0] = _21;

  <bb 21> :
  # DEBUG BEGIN_STMT
  EventId = EventId + 1;

  <bb 22> :
  # DEBUG BEGIN_STMT
  if (EventId <= 14)
    goto <bb 17>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  _22 = PID01[1];
  Dem_ObdReadinessForceCompleteMask.12_23 = Dem_ObdReadinessForceCompleteMask;
  _24 = _22 & Dem_ObdReadinessForceCompleteMask.12_23;
  PID01[1] = _24;
  # DEBUG BEGIN_STMT
  TS_MemCpy32 (PID01value, &PID01[0], 4);
  ReadinessGroupChecked = {CLOBBER};
  PID01 = {CLOBBER};

  <bb 24> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7206 = Result;
  return D.7206;

}


Dem_DcmGetInfoTypeValue0B (Dcm_OpStatusType OpStatus, uint8 * Iumprdata0B, uint8 * Iumprdata0BBufferSize)
{
  Std_ReturnType Result;
  Std_ReturnType D.7188;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.9_1 = Dem_InitializationState;
  if (Dem_InitializationState.9_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 108, 32);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (OpStatus != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 108, 18);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Iumprdata0B == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (Iumprdata0BBufferSize == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 108, 17);

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7188 = Result;
  return D.7188;

}


Dem_DcmGetInfoTypeValue08 (Dcm_OpStatusType OpStatus, uint8 * Iumprdata08, uint8 * Iumprdata08BufferSize)
{
  Std_ReturnType Result;
  Std_ReturnType D.7177;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.8_1 = Dem_InitializationState;
  if (Dem_InitializationState.8_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 107, 32);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (OpStatus != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 107, 18);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (Iumprdata08 == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (Iumprdata08BufferSize == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 107, 17);

  <bb 9> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7177 = Result;
  return D.7177;

}


Dem_RepIUMPRDenRelease (Dem_RatioIdType RatioID)
{
  Std_ReturnType Result;
  Std_ReturnType D.7166;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.7_1 = Dem_InitializationState;
  if (Dem_InitializationState.7_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 114, 32);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7166 = Result;
  return D.7166;

}


Dem_RepIUMPRDenLock (Dem_RatioIdType RatioID)
{
  Std_ReturnType Result;
  Std_ReturnType D.7161;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.6_1 = Dem_InitializationState;
  if (Dem_InitializationState.6_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 113, 32);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7161 = Result;
  return D.7161;

}


Dem_RepIUMPRFaultDetect (Dem_RatioIdType RatioID)
{
  Std_ReturnType Result;
  Std_ReturnType D.7156;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.5_1 = Dem_InitializationState;
  if (Dem_InitializationState.5_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 115, 32);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7156 = Result;
  return D.7156;

}


Dem_ResetReadiness ()
{
  Dem_DTCStatusMaskType * EventDTCStatusPtr;
  Dem_DTCStatusMaskType NewDTCStatusMask;
  Dem_DTCStatusMaskType OldDTCStatusMask;
  const Dem_EventOBDReadinessGroupType ReadinessGroup;
  Dem_EventIdType EvId;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.4_1 = Dem_InitializationState;
  if (Dem_InitializationState.4_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 172, 32);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  EvId = 1;
  goto <bb 10>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ReadinessGroup = Dem_GbiOBDReadinessGroup (EvId);
  # DEBUG BEGIN_STMT
  if (ReadinessGroup <= 10)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = (int) EvId;
  EventDTCStatusPtr = &Dem_NvData.DTCStatusMask[_2];
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  OldDTCStatusMask = *EventDTCStatusPtr;
  # DEBUG BEGIN_STMT
  NewDTCStatusMask = OldDTCStatusMask;
  # DEBUG BEGIN_STMT
  _3 = (unsigned int) OldDTCStatusMask;
  _4 = _3 & 12;
  if (_4 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NewDTCStatusMask = NewDTCStatusMask | 16;
  # DEBUG BEGIN_STMT
  *EventDTCStatusPtr = NewDTCStatusMask;

  <bb 8> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();

  <bb 9> :
  # DEBUG BEGIN_STMT
  EvId = EvId + 1;

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (EvId <= 14)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  return;

}


Dem_GetPfcCycleQualified (boolean * isqualified)
{
  Std_ReturnType Result;
  Std_ReturnType D.7144;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.3_1 = Dem_InitializationState;
  if (Dem_InitializationState.3_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 171, 32);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (isqualified == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 171, 17);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = Dem_NvData.PfcStatus;
  *isqualified = _2;

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7144 = Result;
  return D.7144;

}


Dem_SetPfcCycleQualified ()
{
  Std_ReturnType Result;
  Std_ReturnType D.7136;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.2_1 = Dem_InitializationState;
  if (Dem_InitializationState.2_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 170, 32);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Dem_NvData.PfcStatus = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7136 = Result;
  return D.7136;

}


Dem_SetPtoStatus (boolean PtoStatus)
{
  Std_ReturnType Result;
  Std_ReturnType D.7131;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.1_1 = Dem_InitializationState;
  if (Dem_InitializationState.1_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 121, 32);
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (PtoStatus > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 121, 18);

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7131 = Result;
  return D.7131;

}


Dem_SetEventDisabled (Dem_EventIdType EventId)
{
  const Dem_EventOBDReadinessGroupType ReadinessGroup;
  Std_ReturnType Result;
  Std_ReturnType D.7123;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Dem_InitializationState.0_1 = Dem_InitializationState;
  if (Dem_InitializationState.0_1 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 81, 32);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (EventId == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 81, 18);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (EventId > 14)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (54, 0, 81, 16);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  ReadinessGroup = Dem_GbiOBDReadinessGroup (EventId);
  # DEBUG BEGIN_STMT
  if (ReadinessGroup <= 10)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = Dem_NvData.ReadinessEnableStatus;
  _3 = (int) ReadinessGroup;
  _4 = 1 << _3;
  _5 = ~_4;
  _6 = _2 & _5;
  Dem_NvData.ReadinessEnableStatus = _6;
  # DEBUG BEGIN_STMT
  SchM_Exit_Dem_SCHM_DEM_EXCLUSIVE_AREA_0 ();

  <bb 10> :
  # DEBUG BEGIN_STMT
  Result = 0;

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7123 = Result;
  return D.7123;

}


