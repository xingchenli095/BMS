
Marking local functions:


Marking externally visible functions: Csm_Process Csm_RandomSeed Csm_MacVerify Csm_MacGenerate Csm_KeySetValid Csm_KeyGenerate Csm_KeyExchangeCalcSecret Csm_KeyExchangeCalcPubVal Csm_KeyElementSet Csm_KeyElementGet Csm_KeyElementCopy Csm_KeyDerive Csm_KeyCopy Csm_Init Csm_CertificateVerify Csm_CertificateParse Csm_CancelJob Csm_CallbackNotification


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Csm_QueuePushJob/42 (Csm_QueuePushJob) @06d7ce00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_Process/18 Csm_Process/18 
  Calls: 
CryIf_ProcessJob/41 (CryIf_ProcessJob) @06d7cd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_Process/18 Csm_Process/18 Csm_Process/18 
  Calls: 
CryIf_RandomSeed/40 (CryIf_RandomSeed) @06d7c8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_RandomSeed/17 
  Calls: 
CryIf_KeySetValid/39 (CryIf_KeySetValid) @06d7c380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_KeySetValid/14 
  Calls: 
CryIf_KeyGenerate/38 (CryIf_KeyGenerate) @06d7c1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_KeyGenerate/13 
  Calls: 
CryIf_KeyExchangeCalcSecret/37 (CryIf_KeyExchangeCalcSecret) @06d7c000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_KeyExchangeCalcSecret/12 
  Calls: 
CryIf_KeyExchangeCalcPubVal/36 (CryIf_KeyExchangeCalcPubVal) @06d6aee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_KeyExchangeCalcPubVal/11 
  Calls: 
CryIf_KeyElementSet/35 (CryIf_KeyElementSet) @06d6ad20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_KeyElementSet/10 
  Calls: 
CryIf_KeyElementGet/34 (CryIf_KeyElementGet) @06d6ab60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_KeyElementGet/9 
  Calls: 
CryIf_KeyElementCopy/33 (CryIf_KeyElementCopy) @06d6a9a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_KeyElementCopy/8 
  Calls: 
CryIf_KeyDerive/32 (CryIf_KeyDerive) @06d6a7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_KeyDerive/7 
  Calls: 
CryIf_KeyCopy/31 (CryIf_KeyCopy) @06d6a620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_KeyCopy/6 
  Calls: 
CryIf_CertificateVerify/30 (CryIf_CertificateVerify) @06d6a2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_CertificateVerify/4 
  Calls: 
CryIf_CertificateParse/29 (CryIf_CertificateParse) @06d6a0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_CertificateParse/3 
  Calls: 
Csm_Keys/28 (Csm_Keys) @06d36438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Csm_CertificateParse/3 (read)Csm_CertificateVerify/4 (read)Csm_CertificateVerify/4 (read)Csm_KeyCopy/6 (read)Csm_KeyCopy/6 (read)Csm_KeyDerive/7 (read)Csm_KeyDerive/7 (read)Csm_KeyElementCopy/8 (read)Csm_KeyElementCopy/8 (read)Csm_KeyElementGet/9 (read)Csm_KeyElementSet/10 (read)Csm_KeyExchangeCalcPubVal/11 (read)Csm_KeyExchangeCalcSecret/12 (read)Csm_KeyGenerate/13 (read)Csm_KeySetValid/14 (read)Csm_RandomSeed/17 (read)
  Availability: not_available
  Varpool flags: read-only
CryIf_CancelJob/27 (CryIf_CancelJob) @06d29e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_CancelJob/2 Csm_CancelJob/2 
  Calls: 
Csm_QueueDelJob/26 (Csm_QueueDelJob) @06d29ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_CancelJob/2 
  Calls: 
Csm_JobConfigurations/25 (Csm_JobConfigurations) @06d31e10
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Csm_CancelJob/2 (read)Csm_CancelJob/2 (addr)Csm_CancelJob/2 (addr)Csm_CancelJob/2 (addr)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (write)Csm_MacGenerate/15 (read)Csm_MacVerify/16 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (write)Csm_Process/18 (addr)Csm_Process/18 (read)Csm_Process/18 (write)Csm_Process/18 (addr)Csm_Process/18 (addr)Csm_Process/18 (write)Csm_Process/18 (addr)Csm_Process/18 (read)Csm_Process/18 (write)Csm_Process/18 (addr)
  Availability: not_available
  Varpool flags:
SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/24 (SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0) @06d29d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_Process/18 Csm_Process/18 Csm_Process/18 Csm_Process/18 Csm_CancelJob/2 Csm_CancelJob/2 Csm_CancelJob/2 
  Calls: 
SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/23 (SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0) @06d29c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_Process/18 Csm_Process/18 Csm_Process/18 Csm_Process/18 Csm_CancelJob/2 Csm_CancelJob/2 Csm_CancelJob/2 
  Calls: 
Csm_Int_CallbackNotification/22 (Csm_Int_CallbackNotification) @06d299a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_CallbackNotification/1 
  Calls: 
Csm_JobExtraData/21 (Csm_JobExtraData) @06d31318
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Csm_CallbackNotification/1 (write)Csm_CancelJob/2 (read)Csm_CancelJob/2 (write)Csm_CancelJob/2 (read)Csm_CancelJob/2 (read)Csm_CancelJob/2 (read)Csm_CancelJob/2 (write)Csm_CancelJob/2 (write)Csm_Init/5 (write)Csm_Process/18 (read)Csm_Process/18 (write)Csm_Process/18 (read)Csm_Process/18 (write)Csm_Process/18 (write)Csm_Process/18 (write)Csm_Process/18 (read)Csm_Process/18 (write)
  Availability: not_available
  Varpool flags:
Csm_JobExtraCnfg/20 (Csm_JobExtraCnfg) @06d312d0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Csm_CallbackNotification/1 (read)Csm_CallbackNotification/1 (read)Csm_CancelJob/2 (read)Csm_CancelJob/2 (read)Csm_CancelJob/2 (read)Csm_CancelJob/2 (read)Csm_CancelJob/2 (read)Csm_Init/5 (read)Csm_Init/5 (read)Csm_Init/5 (read)Csm_Init/5 (read)Csm_Init/5 (read)Csm_Init/5 (read)Csm_Init/5 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (read)Csm_Process/18 (read)
  Availability: not_available
  Varpool flags: read-only
Det_ASR40_ReportError/19 (Det_ASR40_ReportError) @06d298c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Csm_RandomSeed/17 Csm_RandomSeed/17 Csm_RandomSeed/17 Csm_MacVerify/16 Csm_MacVerify/16 Csm_MacVerify/16 Csm_MacVerify/16 Csm_MacVerify/16 Csm_MacVerify/16 Csm_MacGenerate/15 Csm_MacGenerate/15 Csm_MacGenerate/15 Csm_MacGenerate/15 Csm_MacGenerate/15 Csm_MacGenerate/15 Csm_MacGenerate/15 Csm_KeySetValid/14 Csm_KeySetValid/14 Csm_KeyGenerate/13 Csm_KeyGenerate/13 Csm_KeyExchangeCalcSecret/12 Csm_KeyExchangeCalcSecret/12 Csm_KeyExchangeCalcSecret/12 Csm_KeyExchangeCalcSecret/12 Csm_KeyExchangeCalcPubVal/11 Csm_KeyExchangeCalcPubVal/11 Csm_KeyExchangeCalcPubVal/11 Csm_KeyExchangeCalcPubVal/11 Csm_KeyExchangeCalcPubVal/11 Csm_KeyElementSet/10 Csm_KeyElementSet/10 Csm_KeyElementSet/10 Csm_KeyElementGet/9 Csm_KeyElementGet/9 Csm_KeyElementGet/9 Csm_KeyElementGet/9 Csm_KeyElementGet/9 Csm_KeyElementCopy/8 Csm_KeyElementCopy/8 Csm_KeyElementCopy/8 Csm_KeyDerive/7 Csm_KeyDerive/7 Csm_KeyDerive/7 Csm_KeyCopy/6 Csm_KeyCopy/6 Csm_KeyCopy/6 Csm_Init/5 Csm_CertificateVerify/4 Csm_CertificateVerify/4 Csm_CertificateVerify/4 Csm_CertificateVerify/4 Csm_CertificateParse/3 Csm_CertificateParse/3 Csm_CancelJob/2 Csm_CancelJob/2 Csm_CallbackNotification/1 Csm_CallbackNotification/1 
  Calls: 
Csm_Process/18 (Csm_Process) @06d29700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_JobExtraData/21 (read)Csm_JobExtraData/21 (write)Csm_JobConfigurations/25 (read)Csm_JobConfigurations/25 (read)Csm_JobConfigurations/25 (write)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (addr)Csm_JobConfigurations/25 (read)Csm_JobExtraData/21 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (write)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (addr)Csm_JobExtraData/21 (write)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (addr)Csm_JobExtraData/21 (write)Csm_JobConfigurations/25 (write)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (addr)Csm_JobExtraData/21 (write)Csm_JobExtraData/21 (read)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (write)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (addr)Csm_JobExtraData/21 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Csm_MacVerify/16 Csm_MacGenerate/15 
  Calls: SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/24 SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/23 CryIf_ProcessJob/41 SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/24 Csm_QueuePushJob/42 SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/23 SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/24 Csm_QueuePushJob/42 SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/23 CryIf_ProcessJob/41 CryIf_ProcessJob/41 SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/24 SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/23 
Csm_RandomSeed/17 (Csm_RandomSeed) @06d29460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: CryIf_RandomSeed/40 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_MacVerify/16 (Csm_MacVerify) @06d292a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_JobConfigurations/25 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Csm_Process/18 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_MacGenerate/15 (Csm_MacGenerate) @06d29000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_JobConfigurations/25 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/19 Csm_Process/18 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_KeySetValid/14 (Csm_KeySetValid) @06cbed20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: CryIf_KeySetValid/39 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_KeyGenerate/13 (Csm_KeyGenerate) @06cbeb60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: CryIf_KeyGenerate/38 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_KeyExchangeCalcSecret/12 (Csm_KeyExchangeCalcSecret) @06cbe9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/19 CryIf_KeyExchangeCalcSecret/37 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_KeyExchangeCalcPubVal/11 (Csm_KeyExchangeCalcPubVal) @06cbe7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/19 CryIf_KeyExchangeCalcPubVal/36 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_KeyElementSet/10 (Csm_KeyElementSet) @06cbe620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: CryIf_KeyElementSet/35 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_KeyElementGet/9 (Csm_KeyElementGet) @06cbe460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/19 CryIf_KeyElementGet/34 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_KeyElementCopy/8 (Csm_KeyElementCopy) @06cbe2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: CryIf_KeyElementCopy/33 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_KeyDerive/7 (Csm_KeyDerive) @06cbe0e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: CryIf_KeyDerive/32 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_KeyCopy/6 (Csm_KeyCopy) @06c98b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: CryIf_KeyCopy/31 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_Init/5 (Csm_Init) @06c989a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobConfigurations/25 (write)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraData/21 (write)Csm_Initialized/0 (write)Csm_Initialized/0 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/19 
Csm_CertificateVerify/4 (Csm_CertificateVerify) @06c987e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: CryIf_CertificateVerify/30 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_CertificateParse/3 (Csm_CertificateParse) @06c98620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_Keys/28 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: CryIf_CertificateParse/29 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
Csm_CancelJob/2 (Csm_CancelJob) @06c98460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_JobExtraData/21 (read)Csm_JobExtraData/21 (write)Csm_JobConfigurations/25 (read)Csm_JobExtraData/21 (read)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (addr)Csm_JobExtraData/21 (read)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (addr)Csm_JobExtraData/21 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraData/21 (write)Csm_JobExtraCnfg/20 (read)Csm_JobConfigurations/25 (addr)Csm_JobExtraData/21 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/24 SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/23 CryIf_CancelJob/27 CryIf_CancelJob/27 SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/24 Csm_QueueDelJob/26 SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/23 SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/24 SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0/23 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
   Indirect call
Csm_CallbackNotification/1 (Csm_CallbackNotification) @06c98e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Csm_Initialized/0 (read)Csm_JobExtraCnfg/20 (read)Csm_JobExtraData/21 (write)Csm_JobExtraCnfg/20 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Csm_Int_CallbackNotification/22 Det_ASR40_ReportError/19 Det_ASR40_ReportError/19 
   Indirect call
Csm_Initialized/0 (Csm_Initialized) @06c79900
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Csm_CallbackNotification/1 (read)Csm_CancelJob/2 (read)Csm_CertificateParse/3 (read)Csm_CertificateVerify/4 (read)Csm_Init/5 (write)Csm_Init/5 (write)Csm_Init/5 (read)Csm_KeyCopy/6 (read)Csm_KeyDerive/7 (read)Csm_KeyElementCopy/8 (read)Csm_KeyElementGet/9 (read)Csm_KeyElementSet/10 (read)Csm_KeyExchangeCalcPubVal/11 (read)Csm_KeyExchangeCalcSecret/12 (read)Csm_KeyGenerate/13 (read)Csm_KeySetValid/14 (read)Csm_MacGenerate/15 (read)Csm_MacVerify/16 (read)Csm_RandomSeed/17 (read)
  Availability: available
  Varpool flags: initialized
Csm_Process (uint32 jobId, struct Crypto_JobPrimitiveInputOutputType * jobPrimitiveInputOutput)
{
  boolean run;
  Std_ReturnType result;
  Std_ReturnType D.6555;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  run = 0;
  # DEBUG BEGIN_STMT
  SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = Csm_JobExtraData[jobId].csmLockFlag;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Csm_JobExtraData[jobId].csmLockFlag = 1;
  # DEBUG BEGIN_STMT
  run = 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (run == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _2 = Csm_JobConfigurations[jobId].jobState;
  if (_2 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _3 = jobPrimitiveInputOutput->mode;
  _4 = (unsigned int) _3;
  _5 = _4 & 1;
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  result = 2;
  goto <bb 33>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = Csm_JobConfigurations[jobId].jobState;
  if (_6 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[jobId].jobPrimitiveInputOutput = *jobPrimitiveInputOutput;
  # DEBUG BEGIN_STMT
  _7 = Csm_JobExtraCnfg[jobId].csmQueue;
  _8 = _7->cryIfChannelId;
  _9 = &Csm_JobConfigurations[jobId];
  result = CryIf_ProcessJob (_8, _9);
  goto <bb 33>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _10 = Csm_JobConfigurations[jobId].jobPrimitiveInfo;
  _11 = _10->processingType;
  if (_11 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _12 = jobPrimitiveInputOutput->mode;
  _13 = (unsigned int) _12;
  _14 = _13 & 1;
  if (_14 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 12> :
  _15 = Csm_JobExtraData[jobId].csmQueueLevel;
  if (_15 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _16 = Csm_JobExtraCnfg[jobId].csmQueue;
  _17 = _16->currentSize;
  _18 = Csm_JobExtraCnfg[jobId].csmQueue;
  _19 = _18->maxSize;
  if (_17 >= _19)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  result = 5;
  goto <bb 33>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _20 = Csm_JobExtraCnfg[jobId].csmQueue;
  _21 = _20->currentSize;
  if (_21 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[jobId].jobPrimitiveInputOutput = *jobPrimitiveInputOutput;
  # DEBUG BEGIN_STMT
  _22 = Csm_JobExtraCnfg[jobId].csmQueue;
  _23 = _22->cryIfChannelId;
  _24 = &Csm_JobConfigurations[jobId];
  result = CryIf_ProcessJob (_23, _24);
  # DEBUG BEGIN_STMT
  if (result == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  Csm_JobExtraData[jobId].csmQueueLevel = 2;
  goto <bb 33>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  if (result == 2)
    goto <bb 20>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (result == 5)
    goto <bb 20>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _25 = Csm_JobExtraCnfg[jobId].csmQueue;
  _26 = &Csm_JobConfigurations[jobId];
  result = Csm_QueuePushJob (_25, _26);
  # DEBUG BEGIN_STMT
  if (result == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  Csm_JobExtraData[jobId].csmQueueLevel = 1;

  <bb 22> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  goto <bb 33>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[jobId].jobPrimitiveInputOutput = *jobPrimitiveInputOutput;
  # DEBUG BEGIN_STMT
  SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _27 = Csm_JobExtraCnfg[jobId].csmQueue;
  _28 = &Csm_JobConfigurations[jobId];
  result = Csm_QueuePushJob (_27, _28);
  # DEBUG BEGIN_STMT
  if (result == 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  Csm_JobExtraData[jobId].csmQueueLevel = 1;

  <bb 25> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  goto <bb 33>; [INV]

  <bb 26> :
  # DEBUG BEGIN_STMT
  _29 = jobPrimitiveInputOutput->mode;
  _30 = (unsigned int) _29;
  _31 = _30 & 1;
  if (_31 == 0)
    goto <bb 27>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 27> :
  _32 = Csm_JobExtraData[jobId].csmQueueLevel;
  if (_32 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 28> :
  # DEBUG BEGIN_STMT
  result = 2;
  goto <bb 33>; [INV]

  <bb 29> :
  # DEBUG BEGIN_STMT
  _33 = Csm_JobExtraCnfg[jobId].csmQueue;
  _34 = _33->head;
  if (_34 == 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  _35 = Csm_JobConfigurations[jobId].jobInfo;
  _36 = _35->jobPriority;
  _37 = Csm_JobExtraCnfg[jobId].csmQueue;
  _38 = _37->head;
  _39 = _38->job;
  _40 = _39->jobInfo;
  _41 = _40->jobPriority;
  if (_36 > _41)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  # DEBUG BEGIN_STMT
  _42 = Csm_JobExtraCnfg[jobId].csmQueue;
  _42->lockMainQueueDelJob = 1;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[jobId].jobPrimitiveInputOutput = *jobPrimitiveInputOutput;
  # DEBUG BEGIN_STMT
  _43 = Csm_JobExtraCnfg[jobId].csmQueue;
  _44 = _43->cryIfChannelId;
  _45 = &Csm_JobConfigurations[jobId];
  result = CryIf_ProcessJob (_44, _45);
  goto <bb 33>; [INV]

  <bb 32> :
  # DEBUG BEGIN_STMT
  result = 2;

  <bb 33> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Csm_JobExtraData[jobId].csmLockFlag = 0;
  # DEBUG BEGIN_STMT
  SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  goto <bb 35>; [INV]

  <bb 34> :
  # DEBUG BEGIN_STMT
  result = 2;

  <bb 35> :
  # DEBUG BEGIN_STMT
  D.6555 = result;
  return D.6555;

}


Csm_RandomSeed (uint32 keyId, const uint8 * seedPtr, uint32 seedLength)
{
  Std_ReturnType result;
  Std_ReturnType D.6509;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.16_1 = Csm_Initialized;
  if (Csm_Initialized.16_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 105, 5);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 105, 4);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (seedPtr == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 105, 1);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  result = CryIf_RandomSeed (_2, seedPtr, seedLength);

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.6509 = result;
  return D.6509;

}


Csm_MacVerify (uint32 jobId, Crypto_OperationModeType mode, const uint8 * dataPtr, uint32 dataLength, const uint8 * macPtr, uint32 macLength, Crypto_VerifyResultType * verifyPtr)
{
  struct Crypto_JobPrimitiveInputOutputType jobPrimitiveInputOutput;
  Std_ReturnType result;
  Std_ReturnType D.6497;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput = {};
  jobPrimitiveInputOutput.mode = 7;
  # DEBUG BEGIN_STMT
  Csm_Initialized.15_1 = Csm_Initialized;
  if (Csm_Initialized.15_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 97, 5);
  goto <bb 19>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (jobId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 97, 4);
  goto <bb 19>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = Csm_JobConfigurations[jobId].jobPrimitiveInfo;
  _3 = _2->primitiveInfo;
  _4 = _3->service;
  if (_4 != 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 97, 225);
  goto <bb 19>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (dataPtr == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 97, 1);
  goto <bb 19>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (macPtr == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 97, 1);
  goto <bb 19>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (verifyPtr == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 97, 1);
  goto <bb 19>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) mode;
  _6 = _5 & 7;
  if (_6 == 5)
    goto <bb 17>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _7 = (unsigned int) mode;
  _8 = _7 & 7;
  if (_8 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  if (mode > 7)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  result = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.mode = mode;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.inputPtr = dataPtr;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.inputLength = dataLength;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.secondaryInputPtr = macPtr;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.secondaryInputLength = macLength;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.verifyPtr = verifyPtr;
  # DEBUG BEGIN_STMT
  result = Csm_Process (jobId, &jobPrimitiveInputOutput);

  <bb 19> :
  # DEBUG BEGIN_STMT
  D.6497 = result;
  jobPrimitiveInputOutput = {CLOBBER};
  return D.6497;

}


Csm_MacGenerate (uint32 jobId, Crypto_OperationModeType mode, const uint8 * dataPtr, uint32 dataLength, uint8 * macPtr, uint32 * macLengthPtr)
{
  struct Crypto_JobPrimitiveInputOutputType jobPrimitiveInputOutput;
  Std_ReturnType result;
  Std_ReturnType D.6471;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput = {};
  jobPrimitiveInputOutput.mode = 7;
  # DEBUG BEGIN_STMT
  Csm_Initialized.14_1 = Csm_Initialized;
  if (Csm_Initialized.14_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 96, 5);
  goto <bb 19>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (jobId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 96, 4);
  goto <bb 19>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = Csm_JobConfigurations[jobId].jobPrimitiveInfo;
  _3 = _2->primitiveInfo;
  _4 = _3->service;
  if (_4 != 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 96, 225);
  goto <bb 19>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (dataPtr == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 96, 1);
  goto <bb 19>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (macPtr == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 96, 1);
  goto <bb 19>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (macLengthPtr == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 96, 1);
  goto <bb 19>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _5 = (unsigned int) mode;
  _6 = _5 & 7;
  if (_6 == 5)
    goto <bb 17>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _7 = (unsigned int) mode;
  _8 = _7 & 7;
  if (_8 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  if (mode > 7)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  result = 1;
  goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.mode = mode;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.inputPtr = dataPtr;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.inputLength = dataLength;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.outputPtr = macPtr;
  # DEBUG BEGIN_STMT
  jobPrimitiveInputOutput.outputLengthPtr = macLengthPtr;
  # DEBUG BEGIN_STMT
  result = Csm_Process (jobId, &jobPrimitiveInputOutput);

  <bb 19> :
  # DEBUG BEGIN_STMT
  if (result == 3)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 96, 3);

  <bb 21> :
  # DEBUG BEGIN_STMT
  D.6471 = result;
  jobPrimitiveInputOutput = {CLOBBER};
  return D.6471;

}


Csm_KeySetValid (uint32 keyId)
{
  Std_ReturnType result;
  Std_ReturnType D.6444;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.13_1 = Csm_Initialized;
  if (Csm_Initialized.13_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 103, 5);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 103, 4);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  result = CryIf_KeySetValid (_2);

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.6444 = result;
  return D.6444;

}


Csm_KeyGenerate (uint32 keyId)
{
  Std_ReturnType result;
  Std_ReturnType D.6436;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.12_1 = Csm_Initialized;
  if (Csm_Initialized.12_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 106, 5);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 106, 4);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  result = CryIf_KeyGenerate (_2);

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.6436 = result;
  return D.6436;

}


Csm_KeyExchangeCalcSecret (uint32 keyId, const uint8 * partnerPublicValuePtr, uint32 partnerPublicValueLength)
{
  Std_ReturnType result;
  Std_ReturnType D.6428;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.11_1 = Csm_Initialized;
  if (Csm_Initialized.11_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 109, 5);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 109, 4);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (partnerPublicValuePtr == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 109, 1);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  result = CryIf_KeyExchangeCalcSecret (_2, partnerPublicValuePtr, partnerPublicValueLength);

  <bb 9> :
  # DEBUG BEGIN_STMT
  if (result == 3)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 109, 3);

  <bb 11> :
  # DEBUG BEGIN_STMT
  D.6428 = result;
  return D.6428;

}


Csm_KeyExchangeCalcPubVal (uint32 keyId, uint8 * publicValuePtr, uint32 * publicValueLengthPtr)
{
  Std_ReturnType result;
  Std_ReturnType D.6415;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.10_1 = Csm_Initialized;
  if (Csm_Initialized.10_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 108, 5);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 108, 4);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (publicValuePtr == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 108, 1);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (publicValueLengthPtr == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 108, 1);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  result = CryIf_KeyExchangeCalcPubVal (_2, publicValuePtr, publicValueLengthPtr);

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (result == 3)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 108, 3);

  <bb 13> :
  # DEBUG BEGIN_STMT
  D.6415 = result;
  return D.6415;

}


Csm_KeyElementSet (uint32 keyId, uint32 keyElementId, const uint8 * keyPtr, uint32 keyLength)
{
  Std_ReturnType result;
  Std_ReturnType D.6399;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.9_1 = Csm_Initialized;
  if (Csm_Initialized.9_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 120, 5);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 120, 4);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (keyPtr == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 120, 1);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  result = CryIf_KeyElementSet (_2, keyElementId, keyPtr, keyLength);

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.6399 = result;
  return D.6399;

}


Csm_KeyElementGet (uint32 keyId, uint32 keyElementId, uint8 * keyPtr, uint32 * keyLengthPtr)
{
  Std_ReturnType result;
  Std_ReturnType D.6388;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.8_1 = Csm_Initialized;
  if (Csm_Initialized.8_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 104, 5);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 104, 4);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (keyPtr == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 104, 1);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (keyLengthPtr == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 104, 1);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  result = CryIf_KeyElementGet (_2, keyElementId, keyPtr, keyLengthPtr);

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (result == 3)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 104, 3);

  <bb 13> :
  # DEBUG BEGIN_STMT
  D.6388 = result;
  return D.6388;

}


Csm_KeyElementCopy (uint32 keyId, uint32 keyElementId, uint32 targetKeyId, uint32 targetKeyElementId)
{
  Std_ReturnType result;
  Std_ReturnType D.6372;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.7_1 = Csm_Initialized;
  if (Csm_Initialized.7_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 113, 5);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 113, 4);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (targetKeyId > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 113, 4);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  _3 = Csm_Keys[targetKeyId];
  result = CryIf_KeyElementCopy (_2, keyElementId, _3, targetKeyElementId);

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.6372 = result;
  return D.6372;

}


Csm_KeyDerive (uint32 keyId, uint32 targetKeyId)
{
  Std_ReturnType result;
  Std_ReturnType D.6361;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.6_1 = Csm_Initialized;
  if (Csm_Initialized.6_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 107, 5);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 107, 4);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (targetKeyId > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 107, 4);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  _3 = Csm_Keys[targetKeyId];
  result = CryIf_KeyDerive (_2, _3);

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.6361 = result;
  return D.6361;

}


Csm_KeyCopy (uint32 keyId, uint32 targetKeyId)
{
  Std_ReturnType result;
  Std_ReturnType D.6350;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.5_1 = Csm_Initialized;
  if (Csm_Initialized.5_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 115, 5);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 115, 4);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (targetKeyId > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 115, 4);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  _3 = Csm_Keys[targetKeyId];
  result = CryIf_KeyCopy (_2, _3);

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.6350 = result;
  return D.6350;

}


Csm_Init ()
{
  uint32 j;
  uint32 i;

  <bb 2> :
  # DEBUG BEGIN_STMT
  i = 0;
  # DEBUG BEGIN_STMT
  j = 0;
  # DEBUG BEGIN_STMT
  Csm_Initialized = 0;
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobState = 0;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].cryptoKeyId = 4294967295;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.inputPtr = 0B;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.inputLength = 0;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.secondaryInputPtr = 0B;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.secondaryInputLength = 0;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.tertiaryInputPtr = 0B;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.tertiaryInputLength = 0;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.outputPtr = 0B;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.outputLengthPtr = 0B;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.secondaryOutputPtr = 0B;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.secondaryOutputLengthPtr = 0B;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.verifyPtr = 0B;
  # DEBUG BEGIN_STMT
  Csm_JobConfigurations[i].jobPrimitiveInputOutput.mode = 7;
  # DEBUG BEGIN_STMT
  _1 = Csm_JobExtraCnfg[i].csmQueue;
  _1->lockMainQueueDelJob = 0;
  # DEBUG BEGIN_STMT
  _2 = Csm_JobExtraCnfg[i].csmQueue;
  _2->lockMainProcessJob = 0;
  # DEBUG BEGIN_STMT
  _3 = Csm_JobExtraCnfg[i].csmQueue;
  _3->currentSize = 0;
  # DEBUG BEGIN_STMT
  _4 = Csm_JobExtraCnfg[i].csmQueue;
  _4->head = 0B;
  # DEBUG BEGIN_STMT
  j = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = Csm_JobExtraCnfg[i].csmQueue;
  _6 = _5->data;
  _7 = j * 8;
  _8 = _6 + _7;
  _8->job = 0B;
  # DEBUG BEGIN_STMT
  _9 = Csm_JobExtraCnfg[i].csmQueue;
  _10 = _9->data;
  _11 = j * 8;
  _12 = _10 + _11;
  _12->next = 0B;
  # DEBUG BEGIN_STMT
  j = j + 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  _13 = Csm_JobExtraCnfg[i].csmQueue;
  _14 = _13->maxSize;
  if (j < _14)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Csm_JobExtraData[i].csmQueueLevel = 0;
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (i <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Csm_Initialized = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.4_15 = Csm_Initialized;
  if (Csm_Initialized.4_15 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 0, 7);

  <bb 10> :
  return;

}


Csm_CertificateVerify (uint32 keyId, uint32 verifyCryIfKeyId, Crypto_VerifyResultType * verifyPtr)
{
  Std_ReturnType result;
  Std_ReturnType D.6337;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.3_1 = Csm_Initialized;
  if (Csm_Initialized.3_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 116, 5);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 116, 4);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (verifyCryIfKeyId > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 116, 4);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (verifyPtr == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 116, 1);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  _3 = Csm_Keys[verifyCryIfKeyId];
  result = CryIf_CertificateVerify (_2, _3, verifyPtr);

  <bb 11> :
  # DEBUG BEGIN_STMT
  D.6337 = result;
  return D.6337;

}


Csm_CertificateParse (uint32 keyId)
{
  Std_ReturnType result;
  Std_ReturnType D.6323;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.2_1 = Csm_Initialized;
  if (Csm_Initialized.2_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 110, 5);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (keyId > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 110, 4);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = Csm_Keys[keyId];
  result = CryIf_CertificateParse (_2);

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.6323 = result;
  return D.6323;

}


Csm_CancelJob (uint32 job, Crypto_OperationModeType mode)
{
  boolean run;
  Std_ReturnType result;
  Std_ReturnType D.6315;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 1;
  # DEBUG BEGIN_STMT
  Csm_Initialized.1_1 = Csm_Initialized;
  if (Csm_Initialized.1_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 111, 5);
  goto <bb 22>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (job > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 111, 4);
  goto <bb 22>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  run = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _2 = Csm_JobExtraData[job].csmLockFlag;
  if (_2 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Csm_JobExtraData[job].csmLockFlag = 1;
  # DEBUG BEGIN_STMT
  run = 1;

  <bb 8> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  if (run == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _3 = Csm_JobConfigurations[job].jobPrimitiveInfo;
  _4 = _3->processingType;
  if (_4 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _5 = Csm_JobExtraData[job].csmQueueLevel;
  if (_5 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _6 = Csm_JobExtraCnfg[job].csmQueue;
  _7 = &Csm_JobConfigurations[job];
  result = Csm_QueueDelJob (_6, _7);
  # DEBUG BEGIN_STMT
  SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  goto <bb 14>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _8 = Csm_JobExtraData[job].csmQueueLevel;
  if (_8 == 2)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _9 = Csm_JobExtraCnfg[job].csmQueue;
  _10 = _9->cryIfChannelId;
  _11 = &Csm_JobConfigurations[job];
  result = CryIf_CancelJob (_10, _11);

  <bb 14> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (result == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _12 = Csm_JobExtraData[job].csmQueueLevel;
  if (_12 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _13 = Csm_JobExtraCnfg[job].csmSWCCallback;
  if (_13 != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  _14 = Csm_JobExtraCnfg[job].csmSWCCallback;
  _14 (12);

  <bb 18> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Csm_JobExtraData[job].csmQueueLevel = 0;
  goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  _15 = Csm_JobExtraCnfg[job].csmQueue;
  _16 = _15->cryIfChannelId;
  _17 = &Csm_JobConfigurations[job];
  result = CryIf_CancelJob (_16, _17);

  <bb 20> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  Csm_JobExtraData[job].csmLockFlag = 0;
  # DEBUG BEGIN_STMT
  SchM_Exit_Csm_SCHM_CSM_EXCLUSIVE_AREA_0 ();
  goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  result = 1;

  <bb 22> :
  # DEBUG BEGIN_STMT
  D.6315 = result;
  return D.6315;

}


Csm_CallbackNotification (const struct Crypto_JobType * job, Std_ReturnType result)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Csm_Initialized.0_1 = Csm_Initialized;
  if (Csm_Initialized.0_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 112, 5);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (job == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (110, 0, 112, 1);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = job->jobId;
  _3 = Csm_JobExtraCnfg[_2].csmSWCCallback;
  if (_3 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _4 = job->jobId;
  Csm_JobExtraData[_4].callbackSWCResult = result;
  # DEBUG BEGIN_STMT
  _5 = job->jobId;
  _6 = Csm_JobExtraCnfg[_5].internalTrigger;
  _6 ();
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Csm_Int_CallbackNotification (job, result);

  <bb 9> :
  return;

}


