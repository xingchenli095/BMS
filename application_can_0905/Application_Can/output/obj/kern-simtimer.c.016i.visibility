
Marking local functions:


Marking externally visible functions: OS_KernSimTimerAdvance OS_SimTimerSetup


Marking externally visible variables: OS_simTimerDriver


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_isrTableBase/10 (OS_isrTableBase) @06dcb480
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_SimTimerSetup/6 (read)OS_KernSimTimerAdvance/7 (read)
  Availability: not_available
  Varpool flags: read-only
OS_nInterrupts/9 (OS_nInterrupts) @06dcb438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_SimTimerSetup/6 (read)
  Availability: not_available
  Varpool flags: read-only
OS_ShutdownNoHooks/8 (OS_ShutdownNoHooks) @06da1540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_SimTimerInit/2 OS_SimTimerInit/2 
  Calls: 
OS_KernSimTimerAdvance/7 (OS_KernSimTimerAdvance) @06da10e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_simTimer/0 (addr)OS_isrTableBase/10 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
   Indirect call
OS_SimTimerSetup/6 (OS_SimTimerSetup) @06cf2ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_nInterrupts/9 (read)OS_isrTableBase/10 (read)OS_simTimer/0 (write)OS_simTimer/0 (write)OS_simTimer/0 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
OS_SimTimerStop/5 (OS_SimTimerStop) @06cf2d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: OS_simTimer/0 (addr)
  Referring: OS_simTimerDriver/1 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
OS_SimTimerStart/4 (OS_SimTimerStart) @06cf2b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: OS_simTimer/0 (addr)
  Referring: OS_simTimerDriver/1 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
OS_SimTimerRead/3 (OS_SimTimerRead) @06cf29a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: OS_simTimer/0 (addr)
  Referring: OS_simTimerDriver/1 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
OS_SimTimerInit/2 (OS_SimTimerInit) @06cf27e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: OS_simTimer/0 (addr)
  Referring: OS_simTimerDriver/1 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_ShutdownNoHooks/8 OS_ShutdownNoHooks/8 
OS_simTimerDriver/1 (OS_simTimerDriver) @06cbf480
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: OS_SimTimerInit/2 (addr)OS_SimTimerRead/3 (addr)OS_SimTimerStart/4 (addr)OS_SimTimerStop/5 (addr)
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
OS_simTimer/0 (OS_simTimer) @06cbf3f0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly section:.bss.shared.os.OS_simTimer
  References: 
  Referring: OS_SimTimerStop/5 (addr)OS_SimTimerStart/4 (addr)OS_SimTimerRead/3 (addr)OS_SimTimerInit/2 (addr)OS_SimTimerSetup/6 (write)OS_SimTimerSetup/6 (write)OS_SimTimerSetup/6 (write)OS_KernSimTimerAdvance/7 (addr)
  Availability: available
  Varpool flags:
__attribute__((target ("general-regs-only")))
OS_KernSimTimerAdvance (os_unsigned_t tmr, os_tick_t incr)
{
  os_unsigned_t c;
  os_timervalue_t old;
  struct os_simtimer_t * tmrp;
  os_result_t result;
  os_result_t D.7514;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (tmr > 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  result = 3;
  goto <bb 16>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  tmrp = &OS_simTimer[tmr];
  # DEBUG BEGIN_STMT
  _1 = tmrp->mask;
  if (incr > _1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  result = 8;
  goto <bb 16>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  old = tmrp->count;
  # DEBUG BEGIN_STMT
  _2 = tmrp->count;
  _3 = incr + _2;
  _4 = tmrp->mask;
  _5 = _3 & _4;
  tmrp->count = _5;
  # DEBUG BEGIN_STMT
  c = 0;
  goto <bb 15>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _6 = tmrp->channel[c].control;
  _7 = (unsigned int) _6;
  _8 = _7 & 2;
  if (_8 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _9 = tmrp->channel[c].compare;
  _10 = _9 - old;
  _11 = tmrp->mask;
  _12 = _10 & _11;
  if (incr >= _12)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _13 = tmrp->channel[c].control;
  _14 = (unsigned int) _13;
  _15 = _14 & 1;
  if (_15 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _16 = tmrp->channel[c].isr;
  if (_16 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.2_17 = OS_isrTableBase;
  _18 = tmrp->channel[c].isr;
  _19 = (unsigned int) _18;
  _20 = _19 * 68;
  _21 = _20 + 4294967228;
  _22 = OS_isrTableBase.2_17 + _21;
  _23 = _22->func;
  _23 ();

  <bb 12> :
  # DEBUG BEGIN_STMT
  _24 = tmrp->channel[c].control;
  _25 = _24 & 253;
  tmrp->channel[c].control = _25;
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _26 = tmrp->channel[c].control;
  _27 = _26 | 2;
  tmrp->channel[c].control = _27;

  <bb 14> :
  # DEBUG BEGIN_STMT
  c = c + 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (c <= 1)
    goto <bb 7>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  D.7514 = result;
  return D.7514;

}


__attribute__((target ("general-regs-only")))
OS_SimTimerSetup (os_unsigned_t tmr, os_unsigned_t chan, os_isrid_t isrId)
{
  os_result_t result;
  os_result_t D.7498;

  <bb 2> :
  # DEBUG BEGIN_STMT
  result = 0;
  # DEBUG BEGIN_STMT
  if (tmr > 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  result = 3;
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (chan > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  result = 3;
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  OS_nInterrupts.0_1 = OS_nInterrupts;
  if (isrId >= OS_nInterrupts.0_1)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  OS_isrTableBase.1_2 = OS_isrTableBase;
  _3 = (unsigned int) isrId;
  _4 = _3 * 68;
  _5 = OS_isrTableBase.1_2 + _4;
  _6 = _5->flags;
  _7 = (unsigned int) _6;
  _8 = _7 & 3;
  if (_8 != 2)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  result = 8;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _9 = isrId + 1;
  OS_simTimer[tmr].channel[chan].isr = _9;
  # DEBUG BEGIN_STMT
  OS_simTimer[tmr].channel[chan].compare = 0;
  # DEBUG BEGIN_STMT
  OS_simTimer[tmr].channel[chan].control = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7498 = result;
  return D.7498;

}


__attribute__((target ("general-regs-only")))
OS_SimTimerStop (const struct os_hwt_t * td)
{
  struct os_simtimer_t * tmr;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = td->major;
  _2 = (int) _1;
  tmr = &OS_simTimer[_2];
  # DEBUG BEGIN_STMT
  _3 = td->minor;
  _4 = (int) _3;
  tmr->channel[_4].control = 0;
  return;

}


__attribute__((target ("general-regs-only")))
OS_SimTimerStart (const struct os_hwt_t * td, os_timervalue_t old, os_tick_t delta)
{
  struct os_simtimer_t * tmr;
  os_boolean_t D.7476;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = td->major;
  _2 = (int) _1;
  tmr = &OS_simTimer[_2];
  # DEBUG BEGIN_STMT
  _3 = old + delta;
  _4 = tmr->mask;
  _5 = td->minor;
  _6 = (int) _5;
  _7 = _3 & _4;
  tmr->channel[_6].compare = _7;
  # DEBUG BEGIN_STMT
  _8 = td->minor;
  _9 = (int) _8;
  _10 = tmr->channel[_9].control;
  _11 = td->minor;
  _12 = (int) _11;
  _13 = _10 | 1;
  tmr->channel[_12].control = _13;
  # DEBUG BEGIN_STMT
  D.7476 = 0;
  return D.7476;

}


__attribute__((target ("general-regs-only")))
OS_SimTimerRead (const struct os_hwt_t * td)
{
  struct os_simtimer_t * tmr;
  os_timervalue_t D.7478;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = td->major;
  _2 = (int) _1;
  tmr = &OS_simTimer[_2];
  # DEBUG BEGIN_STMT
  D.7478 = tmr->count;
  return D.7478;

}


__attribute__((target ("general-regs-only")))
OS_SimTimerInit (const struct os_hwt_t * td)
{
  os_timervalue_t mask;
  struct os_simtimer_t * tmr;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = td->major;
  _2 = (int) _1;
  tmr = &OS_simTimer[_2];
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = tmr->mask;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  mask = td->wrapMask;
  # DEBUG BEGIN_STMT
  tmr->mask = mask;
  # DEBUG BEGIN_STMT
  _4 = mask + 1;
  _5 = mask & _4;
  if (_5 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_ShutdownNoHooks ();
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _6 = tmr->mask;
  _7 = td->wrapMask;
  if (_6 != _7)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  OS_ShutdownNoHooks ();

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 = td->minor;
  _9 = (int) _8;
  tmr->channel[_9].compare = 0;
  # DEBUG BEGIN_STMT
  _10 = td->minor;
  _11 = (int) _10;
  tmr->channel[_11].control = 0;
  return;

}


