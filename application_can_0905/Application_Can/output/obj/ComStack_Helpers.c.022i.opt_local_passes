ComStack_FindNextOne (const void * const bitfield, const uint32 prev)
{
  uint32 x;
  const uint32 m4;
  const uint32 m2;
  const uint32 m1;
  const uint32 rep32;
  uint32 z;
  uint8_least y;
  uint32 result;
  register BF_type bits;
  register const BF_type * const bf;
  register uint32 ofs;
  uint32 bit;
  const uint32 start;
  const uint32 BF_MASK;
  long unsigned int _1;
  const BF_type * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  const BF_type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  uint32 _46;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BF_MASK_22 = 31;
  # DEBUG BF_MASK => BF_MASK_22
  # DEBUG BEGIN_STMT
  start_24 = prev_23(D) + 1;
  # DEBUG start => start_24
  # DEBUG BEGIN_STMT
  bit_25 = start_24 & 31;
  # DEBUG bit => bit_25
  # DEBUG BEGIN_STMT
  ofs_26 = start_24 >> 5;
  # DEBUG ofs => ofs_26
  # DEBUG BEGIN_STMT
  bf_28 = bitfield_27(D);
  # DEBUG bf => bf_28
  # DEBUG BEGIN_STMT
  _1 = ofs_26 * 4;
  _2 = bf_28 + _1;
  _3 = *_2;
  _4 = 4294967295 << bit_25;
  bits_30 = _3 & _4;
  # DEBUG bits => bits_30
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ofs_47 = ofs_20 + 1;
  # DEBUG ofs => ofs_47
  # DEBUG BEGIN_STMT
  _5 = ofs_47 * 4;
  _6 = bf_28 + _5;
  bits_48 = *_6;
  # DEBUG bits => bits_48

  <bb 4> :
  # ofs_20 = PHI <ofs_26(2), ofs_47(3)>
  # bits_21 = PHI <bits_30(2), bits_48(3)>
  # DEBUG bits => bits_21
  # DEBUG ofs => ofs_20
  # DEBUG BEGIN_STMT
  if (bits_21 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  z_31 = bits_21;
  # DEBUG z => z_31
  # DEBUG BEGIN_STMT
  _7 = z_31 + 4294967295;
  z_32 = z_31 ^ _7;
  # DEBUG z => z_32
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  rep32_33 = 16843009;
  # DEBUG rep32 => rep32_33
  # DEBUG BEGIN_STMT
  m1_34 = 1431655765;
  # DEBUG m1 => m1_34
  # DEBUG BEGIN_STMT
  m2_35 = 858993459;
  # DEBUG m2 => m2_35
  # DEBUG BEGIN_STMT
  m4_36 = 252645135;
  # DEBUG m4 => m4_36
  # DEBUG BEGIN_STMT
  x_37 = z_32;
  # DEBUG x => x_37
  # DEBUG BEGIN_STMT
  _8 = x_37 & 1431655765;
  _9 = x_37 >> 1;
  _10 = _9 & 1431655765;
  x_38 = _8 + _10;
  # DEBUG x => x_38
  # DEBUG BEGIN_STMT
  _11 = x_38 & 858993459;
  _12 = x_38 >> 2;
  _13 = _12 & 858993459;
  x_39 = _11 + _13;
  # DEBUG x => x_39
  # DEBUG BEGIN_STMT
  _14 = x_39 & 252645135;
  _15 = x_39 >> 4;
  _16 = _15 & 252645135;
  x_40 = _14 + _16;
  # DEBUG x => x_40
  # DEBUG BEGIN_STMT
  _17 = x_40 << 16;
  x_41 = x_40 + _17;
  # DEBUG x => x_41
  # DEBUG BEGIN_STMT
  _18 = x_41 << 8;
  x_42 = x_41 + _18;
  # DEBUG x => x_42
  # DEBUG BEGIN_STMT
  y_43 = x_42 >> 24;
  # DEBUG y => y_43
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  result_44 = y_43 + 4294967295;
  # DEBUG result => result_44
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _19 = ofs_20 * 32;
  result_45 = result_44 | _19;
  # DEBUG result => result_45
  # DEBUG BEGIN_STMT
  _46 = result_45;
  return _46;

}


