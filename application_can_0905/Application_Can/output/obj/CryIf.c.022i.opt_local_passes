CryIf_CertificateVerify (uint32 cryIfKeyId, uint32 verifyCryIfKeyId, Crypto_VerifyResultType * verifyPtr)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.22_1;
  Std_ReturnType (*<T568>) (uint32, uint32, Crypto_VerifyResultType *) _2;
  Std_ReturnType (*<T568>) (uint32, uint32, Crypto_VerifyResultType *) _3;
  Std_ReturnType (*<T568>) (uint32, uint32, Crypto_VerifyResultType *) _4;
  long unsigned int _5;
  long unsigned int _6;
  Std_ReturnType _21;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_9 = 1;
  # DEBUG RetVal => RetVal_9
  # DEBUG BEGIN_STMT
  CryIf_Initialized.22_1 = CryIf_Initialized;
  if (CryIf_Initialized.22_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 17, 0);
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_11(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 17, 3);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (verifyCryIfKeyId_12(D) > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 17, 3);
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (verifyPtr_13(D) == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 17, 2);
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = CryIf_CertificateVerifyJumpTable[cryIfKeyId_11(D)];
  _3 = CryIf_CertificateVerifyJumpTable[verifyCryIfKeyId_12(D)];
  if (_2 != _3)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 17, 3);
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _4 = CryIf_CertificateVerifyJumpTable[cryIfKeyId_11(D)];
  _5 = CryIf_Keys[cryIfKeyId_11(D)];
  _6 = CryIf_Keys[verifyCryIfKeyId_12(D)];
  RetVal_15 = _4 (_5, _6, verifyPtr_13(D));
  # DEBUG RetVal => RetVal_15

  <bb 13> :
  # RetVal_7 = PHI <RetVal_9(3), RetVal_9(5), RetVal_9(7), RetVal_9(9), RetVal_9(11), RetVal_15(12)>
  # DEBUG RetVal => RetVal_7
  # DEBUG BEGIN_STMT
  _21 = RetVal_7;
  return _21;

}


CryIf_CertificateParse (uint32 cryIfKeyId)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.21_1;
  Std_ReturnType (*<T550>) (uint32) _2;
  long unsigned int _3;
  Std_ReturnType _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_6 = 1;
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  CryIf_Initialized.21_1 = CryIf_Initialized;
  if (CryIf_Initialized.21_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 12, 0);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_8(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 12, 3);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = CryIf_CertificateParseJumpTable[cryIfKeyId_8(D)];
  _3 = CryIf_Keys[cryIfKeyId_8(D)];
  RetVal_10 = _2 (_3);
  # DEBUG RetVal => RetVal_10

  <bb 7> :
  # RetVal_4 = PHI <RetVal_6(3), RetVal_6(5), RetVal_10(6)>
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  _13 = RetVal_4;
  return _13;

}


CryIf_KeyExchangeCalcSecret (uint32 cryIfKeyId, const uint8 * partnerPublicValuePtr, uint32 partnerPublicValueLength)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.20_1;
  Std_ReturnType (*<T55c>) (uint32, const uint8 *, uint32) _2;
  long unsigned int _3;
  Std_ReturnType _17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_6 = 1;
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  CryIf_Initialized.20_1 = CryIf_Initialized;
  if (CryIf_Initialized.20_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 11, 0);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_8(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 11, 3);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (partnerPublicValuePtr_9(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 11, 2);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (partnerPublicValueLength_10(D) == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 11, 4);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = CryIf_KeyExchangeCalcSecretJumpTable[cryIfKeyId_8(D)];
  _3 = CryIf_Keys[cryIfKeyId_8(D)];
  RetVal_12 = _2 (_3, partnerPublicValuePtr_9(D), partnerPublicValueLength_10(D));
  # DEBUG RetVal => RetVal_12

  <bb 11> :
  # RetVal_4 = PHI <RetVal_6(3), RetVal_6(5), RetVal_6(7), RetVal_6(9), RetVal_12(10)>
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  _17 = RetVal_4;
  return _17;

}


CryIf_KeyExchangeCalcPubVal (uint32 cryIfKeyId, uint8 * publicValuePtr, uint32 * publicValueLengthPtr)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.19_1;
  long unsigned int _2;
  Std_ReturnType (*<T563>) (uint32, uint8 *, uint32 *) _3;
  long unsigned int _4;
  Std_ReturnType _19;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_7 = 1;
  # DEBUG RetVal => RetVal_7
  # DEBUG BEGIN_STMT
  CryIf_Initialized.19_1 = CryIf_Initialized;
  if (CryIf_Initialized.19_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 10, 0);
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_9(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 10, 3);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (publicValuePtr_10(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 10, 2);
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (publicValueLengthPtr_11(D) == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 10, 2);
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = *publicValueLengthPtr_11(D);
  if (_2 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 10, 4);
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _3 = CryIf_KeyExchangeCalcPubValJumpTable[cryIfKeyId_9(D)];
  _4 = CryIf_Keys[cryIfKeyId_9(D)];
  RetVal_13 = _3 (_4, publicValuePtr_10(D), publicValueLengthPtr_11(D));
  # DEBUG RetVal => RetVal_13

  <bb 13> :
  # RetVal_5 = PHI <RetVal_7(3), RetVal_7(5), RetVal_7(7), RetVal_7(9), RetVal_7(11), RetVal_13(12)>
  # DEBUG RetVal => RetVal_5
  # DEBUG BEGIN_STMT
  _19 = RetVal_5;
  return _19;

}


CryIf_KeyDerive (uint32 cryIfKeyId, uint32 targetCryIfKeyId)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.18_1;
  Std_ReturnType (*<T560>) (uint32, uint32) _2;
  Std_ReturnType (*<T560>) (uint32, uint32) _3;
  Std_ReturnType (*<T560>) (uint32, uint32) _4;
  long unsigned int _5;
  long unsigned int _6;
  Std_ReturnType _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_9 = 1;
  # DEBUG RetVal => RetVal_9
  # DEBUG BEGIN_STMT
  CryIf_Initialized.18_1 = CryIf_Initialized;
  if (CryIf_Initialized.18_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 9, 0);
  goto <bb 10>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_11(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 9, 3);
  goto <bb 10>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (targetCryIfKeyId_12(D) > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 9, 3);
  goto <bb 10>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = CryIf_KeyDeriveJumpTable[cryIfKeyId_11(D)];
  _3 = CryIf_KeyDeriveJumpTable[targetCryIfKeyId_12(D)];
  if (_2 == _3)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _4 = CryIf_KeyDeriveJumpTable[cryIfKeyId_11(D)];
  _5 = CryIf_Keys[cryIfKeyId_11(D)];
  _6 = CryIf_Keys[targetCryIfKeyId_12(D)];
  RetVal_14 = _4 (_5, _6);
  # DEBUG RetVal => RetVal_14

  <bb 10> :
  # RetVal_7 = PHI <RetVal_9(3), RetVal_9(5), RetVal_9(7), RetVal_9(8), RetVal_14(9)>
  # DEBUG RetVal => RetVal_7
  # DEBUG BEGIN_STMT
  _18 = RetVal_7;
  return _18;

}


CryIf_KeyGenerate (uint32 cryIfKeyId)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.17_1;
  Std_ReturnType (*<T550>) (uint32) _2;
  long unsigned int _3;
  Std_ReturnType _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_6 = 1;
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  CryIf_Initialized.17_1 = CryIf_Initialized;
  if (CryIf_Initialized.17_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 8, 0);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_8(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 8, 3);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = CryIf_KeyGenerateJumpTable[cryIfKeyId_8(D)];
  _3 = CryIf_Keys[cryIfKeyId_8(D)];
  RetVal_10 = _2 (_3);
  # DEBUG RetVal => RetVal_10

  <bb 7> :
  # RetVal_4 = PHI <RetVal_6(3), RetVal_6(5), RetVal_10(6)>
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  _13 = RetVal_4;
  return _13;

}


CryIf_RandomSeed (uint32 cryIfKeyId, const uint8 * seedPtr, uint32 seedLength)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.16_1;
  Std_ReturnType (*<T55c>) (uint32, const uint8 *, uint32) _2;
  long unsigned int _3;
  Std_ReturnType _17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_6 = 1;
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  CryIf_Initialized.16_1 = CryIf_Initialized;
  if (CryIf_Initialized.16_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 7, 0);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_8(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 7, 3);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (seedPtr_9(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 7, 2);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (seedLength_10(D) == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 7, 4);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = CryIf_RandomSeedJumpTable[cryIfKeyId_8(D)];
  _3 = CryIf_Keys[cryIfKeyId_8(D)];
  RetVal_12 = _2 (_3, seedPtr_9(D), seedLength_10(D));
  # DEBUG RetVal => RetVal_12

  <bb 11> :
  # RetVal_4 = PHI <RetVal_6(3), RetVal_6(5), RetVal_6(7), RetVal_6(9), RetVal_12(10)>
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  _17 = RetVal_4;
  return _17;

}


CryIf_KeyCopy (uint32 cryIfKeyId, uint32 targetCryIfKeyId)
{
  uint32 i;
  uint32 KeyElementTargetLength;
  uint32 KeyElementLength;
  uint8 KeyElementBuffer[1];
  uint32 KeyElementIdsLength;
  uint32 KeyElementIds[2];
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.9_1;
  Std_ReturnType (*<T560>) (uint32, uint32) _2;
  Std_ReturnType (*<T560>) (uint32, uint32) _3;
  Std_ReturnType (*<T560>) (uint32, uint32) _4;
  long unsigned int _5;
  long unsigned int _6;
  Std_ReturnType (*<T559>) (uint32, uint32 *, uint32 *) _7;
  long unsigned int _8;
  Std_ReturnType (*<T553>) (uint32, uint32, uint8 *, uint32 *) _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int KeyElementLength.10_12;
  Std_ReturnType (*<T553>) (uint32, uint32, uint8 *, uint32 *) _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int KeyElementTargetLength.11_16;
  long unsigned int KeyElementLength.12_17;
  long unsigned int KeyElementIdsLength.13_18;
  Std_ReturnType (*<T553>) (uint32, uint32, uint8 *, uint32 *) _19;
  long unsigned int _20;
  long unsigned int _21;
  Std_ReturnType (*<T54d>) (uint32, uint32, const uint8 *, uint32) _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int KeyElementLength.14_25;
  long unsigned int KeyElementIdsLength.15_26;
  Std_ReturnType _78;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_40 = 1;
  # DEBUG RetVal => RetVal_40
  # DEBUG BEGIN_STMT
  CryIf_Initialized.9_1 = CryIf_Initialized;
  if (CryIf_Initialized.9_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 16, 0);
  goto <bb 25>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_42(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 16, 3);
  goto <bb 25>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (targetCryIfKeyId_43(D) > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 16, 3);
  goto <bb 25>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  KeyElementIds = {};
  # DEBUG BEGIN_STMT
  KeyElementIdsLength = 2;
  # DEBUG BEGIN_STMT
  KeyElementBuffer = "";
  # DEBUG BEGIN_STMT
  KeyElementLength = 0;
  # DEBUG BEGIN_STMT
  KeyElementTargetLength = 0;
  # DEBUG BEGIN_STMT
  i_49 = 0;
  # DEBUG i => i_49
  # DEBUG BEGIN_STMT
  _2 = CryIf_KeyCopyJumpTable[cryIfKeyId_42(D)];
  _3 = CryIf_KeyCopyJumpTable[targetCryIfKeyId_43(D)];
  if (_2 == _3)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _4 = CryIf_KeyCopyJumpTable[cryIfKeyId_42(D)];
  _5 = CryIf_Keys[cryIfKeyId_42(D)];
  _6 = CryIf_Keys[targetCryIfKeyId_43(D)];
  RetVal_68 = _4 (_5, _6);
  # DEBUG RetVal => RetVal_68
  goto <bb 22>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _7 = CryIf_KeyElementIdsGetJumpTable[cryIfKeyId_42(D)];
  _8 = CryIf_Keys[cryIfKeyId_42(D)];
  RetVal_51 = _7 (_8, &KeyElementIds[0], &KeyElementIdsLength);
  # DEBUG RetVal => RetVal_51
  # DEBUG BEGIN_STMT
  i_52 = 0;
  # DEBUG i => i_52
  goto <bb 16>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  KeyElementLength = 1;
  # DEBUG BEGIN_STMT
  _9 = CryIf_KeyElementGetJumpTable[cryIfKeyId_42(D)];
  _10 = CryIf_Keys[cryIfKeyId_42(D)];
  _11 = KeyElementIds[i_32];
  RetVal_55 = _9 (_10, _11, &KeyElementBuffer, &KeyElementLength);
  # DEBUG RetVal => RetVal_55
  # DEBUG BEGIN_STMT
  if (RetVal_55 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  KeyElementLength.10_12 = KeyElementLength;
  KeyElementTargetLength = KeyElementLength.10_12;
  # DEBUG BEGIN_STMT
  _13 = CryIf_KeyElementGetJumpTable[targetCryIfKeyId_43(D)];
  _14 = CryIf_Keys[targetCryIfKeyId_43(D)];
  _15 = KeyElementIds[i_32];
  RetVal_58 = _13 (_14, _15, &KeyElementBuffer, &KeyElementTargetLength);
  # DEBUG RetVal => RetVal_58
  # DEBUG BEGIN_STMT
  KeyElementTargetLength.11_16 = KeyElementTargetLength;
  KeyElementLength.12_17 = KeyElementLength;
  if (KeyElementTargetLength.11_16 != KeyElementLength.12_17)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  if (RetVal_58 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  RetVal_59 = 10;
  # DEBUG RetVal => RetVal_59

  <bb 15> :
  # RetVal_27 = PHI <RetVal_55(11), RetVal_58(12), RetVal_58(13), RetVal_59(14)>
  # DEBUG RetVal => RetVal_27
  # DEBUG BEGIN_STMT
  i_60 = i_32 + 1;
  # DEBUG i => i_60

  <bb 16> :
  # RetVal_28 = PHI <RetVal_51(10), RetVal_27(15)>
  # i_32 = PHI <i_52(10), i_60(15)>
  # DEBUG i => i_32
  # DEBUG RetVal => RetVal_28
  # DEBUG BEGIN_STMT
  KeyElementIdsLength.13_18 = KeyElementIdsLength;
  if (i_32 < KeyElementIdsLength.13_18)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  if (RetVal_28 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  i_61 = 0;
  # DEBUG i => i_61
  goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  KeyElementLength = 1;
  # DEBUG BEGIN_STMT
  _19 = CryIf_KeyElementGetJumpTable[cryIfKeyId_42(D)];
  _20 = CryIf_Keys[cryIfKeyId_42(D)];
  _21 = KeyElementIds[i_33];
  _19 (_20, _21, &KeyElementBuffer, &KeyElementLength);
  # DEBUG BEGIN_STMT
  _22 = CryIf_KeyElementSetJumpTable[targetCryIfKeyId_43(D)];
  _23 = CryIf_Keys[targetCryIfKeyId_43(D)];
  _24 = KeyElementIds[i_33];
  KeyElementLength.14_25 = KeyElementLength;
  RetVal_65 = _22 (_23, _24, &KeyElementBuffer, KeyElementLength.14_25);
  # DEBUG RetVal => RetVal_65
  # DEBUG BEGIN_STMT
  i_66 = i_33 + 1;
  # DEBUG i => i_66

  <bb 20> :
  # RetVal_29 = PHI <RetVal_28(18), RetVal_65(19)>
  # i_33 = PHI <i_61(18), i_66(19)>
  # DEBUG i => i_33
  # DEBUG RetVal => RetVal_29
  # DEBUG BEGIN_STMT
  KeyElementIdsLength.15_26 = KeyElementIdsLength;
  if (i_33 < KeyElementIdsLength.15_26)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  if (RetVal_29 == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  # RetVal_30 = PHI <RetVal_68(9), RetVal_29(20), RetVal_29(21)>
  # DEBUG RetVal => RetVal_30
  # DEBUG BEGIN_STMT
  if (RetVal_30 == 10)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 15, 5);

  <bb 24> :
  KeyElementIds ={v} {CLOBBER};
  KeyElementIdsLength ={v} {CLOBBER};
  KeyElementBuffer ={v} {CLOBBER};
  KeyElementLength ={v} {CLOBBER};
  KeyElementTargetLength ={v} {CLOBBER};

  <bb 25> :
  # RetVal_31 = PHI <RetVal_40(3), RetVal_40(5), RetVal_40(7), RetVal_30(24)>
  # DEBUG RetVal => RetVal_31
  # DEBUG BEGIN_STMT
  _78 = RetVal_31;
  return _78;

}


CryIf_KeyElementCopy (uint32 cryIfKeyId, uint32 keyElementId, uint32 targetCryIfKeyId, uint32 targetKeyElementId)
{
  uint32 KeyElementLength;
  uint8 KeyElementBuffer[1];
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.7_1;
  Std_ReturnType (*<T556>) (uint32, uint32, uint32, uint32) _2;
  Std_ReturnType (*<T556>) (uint32, uint32, uint32, uint32) _3;
  Std_ReturnType (*<T556>) (uint32, uint32, uint32, uint32) _4;
  long unsigned int _5;
  long unsigned int _6;
  Std_ReturnType (*<T553>) (uint32, uint32, uint8 *, uint32 *) _7;
  long unsigned int _8;
  Std_ReturnType (*<T54d>) (uint32, uint32, const uint8 *, uint32) _9;
  long unsigned int _10;
  long unsigned int KeyElementLength.8_11;
  Std_ReturnType _34;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_16 = 1;
  # DEBUG RetVal => RetVal_16
  # DEBUG BEGIN_STMT
  KeyElementBuffer = "";
  # DEBUG BEGIN_STMT
  KeyElementLength = 1;
  # DEBUG BEGIN_STMT
  CryIf_Initialized.7_1 = CryIf_Initialized;
  if (CryIf_Initialized.7_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 15, 0);
  goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_20(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 15, 3);
  goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (targetCryIfKeyId_21(D) > 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 15, 3);
  goto <bb 14>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = CryIf_KeyElementCopyJumpTable[cryIfKeyId_20(D)];
  _3 = CryIf_KeyElementCopyJumpTable[targetCryIfKeyId_21(D)];
  if (_2 == _3)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _4 = CryIf_KeyElementCopyJumpTable[cryIfKeyId_20(D)];
  _5 = CryIf_Keys[cryIfKeyId_20(D)];
  _6 = CryIf_Keys[targetCryIfKeyId_21(D)];
  RetVal_29 = _4 (_5, keyElementId_22(D), _6, targetKeyElementId_25(D));
  # DEBUG RetVal => RetVal_29
  goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _7 = CryIf_KeyElementGetJumpTable[cryIfKeyId_20(D)];
  _8 = CryIf_Keys[cryIfKeyId_20(D)];
  RetVal_24 = _7 (_8, keyElementId_22(D), &KeyElementBuffer, &KeyElementLength);
  # DEBUG RetVal => RetVal_24
  # DEBUG BEGIN_STMT
  if (RetVal_24 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _9 = CryIf_KeyElementSetJumpTable[targetCryIfKeyId_21(D)];
  _10 = CryIf_Keys[targetCryIfKeyId_21(D)];
  KeyElementLength.8_11 = KeyElementLength;
  RetVal_27 = _9 (_10, targetKeyElementId_25(D), &KeyElementBuffer, KeyElementLength.8_11);
  # DEBUG RetVal => RetVal_27

  <bb 12> :
  # RetVal_12 = PHI <RetVal_29(9), RetVal_24(10), RetVal_27(11)>
  # DEBUG RetVal => RetVal_12
  # DEBUG BEGIN_STMT
  if (RetVal_12 == 10)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 15, 5);

  <bb 14> :
  # RetVal_13 = PHI <RetVal_16(3), RetVal_16(5), RetVal_16(7), RetVal_12(12), RetVal_12(13)>
  # DEBUG RetVal => RetVal_13
  # DEBUG BEGIN_STMT
  _34 = RetVal_13;
  KeyElementBuffer ={v} {CLOBBER};
  KeyElementLength ={v} {CLOBBER};
  return _34;

}


CryIf_KeyElementGet (uint32 cryIfKeyId, uint32 keyElementId, uint8 * resultPtr, uint32 * resultLengthPtr)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.6_1;
  long unsigned int _2;
  Std_ReturnType (*<T553>) (uint32, uint32, uint8 *, uint32 *) _3;
  long unsigned int _4;
  Std_ReturnType _20;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_7 = 1;
  # DEBUG RetVal => RetVal_7
  # DEBUG BEGIN_STMT
  CryIf_Initialized.6_1 = CryIf_Initialized;
  if (CryIf_Initialized.6_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 6, 0);
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_9(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 6, 3);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (resultPtr_10(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 6, 2);
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (resultLengthPtr_11(D) == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 6, 2);
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = *resultLengthPtr_11(D);
  if (_2 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 6, 4);
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _3 = CryIf_KeyElementGetJumpTable[cryIfKeyId_9(D)];
  _4 = CryIf_Keys[cryIfKeyId_9(D)];
  RetVal_14 = _3 (_4, keyElementId_12(D), resultPtr_10(D), resultLengthPtr_11(D));
  # DEBUG RetVal => RetVal_14

  <bb 13> :
  # RetVal_5 = PHI <RetVal_7(3), RetVal_7(5), RetVal_7(7), RetVal_7(9), RetVal_7(11), RetVal_14(12)>
  # DEBUG RetVal => RetVal_5
  # DEBUG BEGIN_STMT
  _20 = RetVal_5;
  return _20;

}


CryIf_KeySetValid (uint32 cryIfKeyId)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.5_1;
  Std_ReturnType (*<T550>) (uint32) _2;
  long unsigned int _3;
  Std_ReturnType _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_6 = 1;
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  CryIf_Initialized.5_1 = CryIf_Initialized;
  if (CryIf_Initialized.5_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 5, 0);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_8(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 5, 3);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = CryIf_KeySetValidJumpTable[cryIfKeyId_8(D)];
  _3 = CryIf_Keys[cryIfKeyId_8(D)];
  RetVal_10 = _2 (_3);
  # DEBUG RetVal => RetVal_10

  <bb 7> :
  # RetVal_4 = PHI <RetVal_6(3), RetVal_6(5), RetVal_10(6)>
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  _13 = RetVal_4;
  return _13;

}


CryIf_KeyElementSet (uint32 cryIfKeyId, uint32 keyElementId, const uint8 * keyPtr, uint32 keyLength)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.4_1;
  Std_ReturnType (*<T54d>) (uint32, uint32, const uint8 *, uint32) _2;
  long unsigned int _3;
  Std_ReturnType _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_6 = 1;
  # DEBUG RetVal => RetVal_6
  # DEBUG BEGIN_STMT
  CryIf_Initialized.4_1 = CryIf_Initialized;
  if (CryIf_Initialized.4_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 4, 0);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (cryIfKeyId_8(D) > 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 4, 3);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (keyPtr_9(D) == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 4, 2);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (keyLength_10(D) == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 4, 4);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _2 = CryIf_KeyElementSetJumpTable[cryIfKeyId_8(D)];
  _3 = CryIf_Keys[cryIfKeyId_8(D)];
  RetVal_13 = _2 (_3, keyElementId_11(D), keyPtr_9(D), keyLength_10(D));
  # DEBUG RetVal => RetVal_13

  <bb 11> :
  # RetVal_4 = PHI <RetVal_6(3), RetVal_6(5), RetVal_6(7), RetVal_6(9), RetVal_13(10)>
  # DEBUG RetVal => RetVal_4
  # DEBUG BEGIN_STMT
  _18 = RetVal_4;
  return _18;

}


CryIf_CallbackNotification (const struct Crypto_JobType * job, Std_ReturnType result)
{
  unsigned char CryIf_Initialized.3_1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CryIf_Initialized.3_1 = CryIf_Initialized;
  if (CryIf_Initialized.3_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 13, 0);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (job_4(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 13, 2);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Csm_CallbackNotification (job_4(D), result_5(D));

  <bb 7> :
  return;

}


CryIf_CancelJob (uint32 channelId, struct Crypto_JobType * job)
{
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.2_1;
  const struct Crypto_JobPrimitiveInfoType * _2;
  long unsigned int _3;
  long unsigned int _4;
  const struct Crypto_JobPrimitiveInfoType * _5;
  long unsigned int _6;
  const struct Crypto_JobPrimitiveInfoType * _7;
  const struct Crypto_PrimitiveInfoType * _8;
  unsigned char _9;
  const struct Crypto_JobPrimitiveInfoType * _10;
  const struct Crypto_PrimitiveInfoType * _11;
  unsigned char _12;
  const struct Crypto_JobPrimitiveInfoType * _13;
  const struct Crypto_PrimitiveInfoType * _14;
  unsigned char _15;
  const struct Crypto_JobPrimitiveInfoType * _16;
  long unsigned int _17;
  long unsigned int _18;
  Std_ReturnType (*<T522>) (uint32, struct Crypto_JobType *) _19;
  long unsigned int _20;
  Std_ReturnType _35;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_24 = 1;
  # DEBUG RetVal => RetVal_24
  # DEBUG BEGIN_STMT
  CryIf_Initialized.2_1 = CryIf_Initialized;
  if (CryIf_Initialized.2_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 13, 0);
  goto <bb 16>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (job_26(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 3, 2);
  goto <bb 16>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (channelId_27(D) != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 3, 3);
  goto <bb 16>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = job_26(D)->jobPrimitiveInfo;
  _3 = _2->cryIfKeyId;
  _4 = _3 + 4294967294;
  if (_4 > 4294967292)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _5 = job_26(D)->jobPrimitiveInfo;
  _6 = _5->cryIfKeyId;
  if (_6 != 4294967295)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  _7 = job_26(D)->jobPrimitiveInfo;
  _8 = _7->primitiveInfo;
  _9 = _8->service;
  if (_9 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _10 = job_26(D)->jobPrimitiveInfo;
  _11 = _10->primitiveInfo;
  _12 = _11->service;
  if (_12 != 10)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  _13 = job_26(D)->jobPrimitiveInfo;
  _14 = _13->primitiveInfo;
  _15 = _14->service;
  if (_15 != 9)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _16 = job_26(D)->jobPrimitiveInfo;
  _17 = _16->cryIfKeyId;
  _18 = CryIf_Keys[_17];
  job_26(D)->cryptoKeyId = _18;
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  job_26(D)->cryptoKeyId = 4294967295;

  <bb 15> :
  # DEBUG BEGIN_STMT
  _19 = CryIf_CancelJobJumpTable[channelId_27(D)];
  _20 = CryIf_Channels[channelId_27(D)];
  RetVal_31 = _19 (_20, job_26(D));
  # DEBUG RetVal => RetVal_31

  <bb 16> :
  # RetVal_21 = PHI <RetVal_24(3), RetVal_24(5), RetVal_24(7), RetVal_24(8), RetVal_31(15)>
  # DEBUG RetVal => RetVal_21
  # DEBUG BEGIN_STMT
  _35 = RetVal_21;
  return _35;

}


CryIf_ProcessJob (uint32 channelId, struct Crypto_JobType * job)
{
  boolean cryIfKeyIdOk;
  Std_ReturnType RetVal;
  unsigned char CryIf_Initialized.1_1;
  const struct Crypto_JobPrimitiveInfoType * _2;
  const struct Crypto_PrimitiveInfoType * _3;
  unsigned char _4;
  unsigned char _5;
  const struct Crypto_JobPrimitiveInfoType * _6;
  const struct Crypto_PrimitiveInfoType * _7;
  unsigned char _8;
  const struct Crypto_JobPrimitiveInfoType * _9;
  const struct Crypto_PrimitiveInfoType * _10;
  unsigned char _11;
  const struct Crypto_JobPrimitiveInfoType * _12;
  const struct Crypto_PrimitiveInfoType * _13;
  unsigned char _14;
  const struct Crypto_JobPrimitiveInfoType * _15;
  const struct Crypto_PrimitiveInfoType * _16;
  unsigned char _17;
  const struct Crypto_JobPrimitiveInfoType * _18;
  const struct Crypto_PrimitiveInfoType * _19;
  unsigned char _20;
  const struct Crypto_JobPrimitiveInfoType * _21;
  long unsigned int _22;
  const struct Crypto_JobPrimitiveInfoType * _23;
  long unsigned int _24;
  long unsigned int _25;
  const struct Crypto_JobPrimitiveInfoType * _26;
  const struct Crypto_PrimitiveInfoType * _27;
  unsigned char _28;
  const struct Crypto_JobPrimitiveInfoType * _29;
  const struct Crypto_PrimitiveInfoType * _30;
  unsigned char _31;
  const struct Crypto_JobPrimitiveInfoType * _32;
  const struct Crypto_PrimitiveInfoType * _33;
  unsigned char _34;
  const struct Crypto_JobPrimitiveInfoType * _35;
  long unsigned int _36;
  long unsigned int _37;
  const struct Crypto_JobPrimitiveInfoType * _38;
  long unsigned int _39;
  const struct Crypto_JobPrimitiveInfoType * _40;
  long unsigned int _41;
  long unsigned int _42;
  Std_ReturnType (*<T522>) (uint32, struct Crypto_JobType *) _43;
  long unsigned int _44;
  Std_ReturnType _66;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal_51 = 1;
  # DEBUG RetVal => RetVal_51
  # DEBUG BEGIN_STMT
  cryIfKeyIdOk_52 = 0;
  # DEBUG cryIfKeyIdOk => cryIfKeyIdOk_52
  # DEBUG BEGIN_STMT
  CryIf_Initialized.1_1 = CryIf_Initialized;
  if (CryIf_Initialized.1_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 3, 0);
  goto <bb 25>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (job_54(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 3, 2);
  goto <bb 25>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (channelId_55(D) != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 3, 3);
  goto <bb 25>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _2 = job_54(D)->jobPrimitiveInfo;
  _3 = _2->primitiveInfo;
  _4 = _3->service;
  _5 = _4 + 253;
  if (_5 <= 3)
    goto <bb 14>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _6 = job_54(D)->jobPrimitiveInfo;
  _7 = _6->primitiveInfo;
  _8 = _7->service;
  if (_8 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _9 = job_54(D)->jobPrimitiveInfo;
  _10 = _9->primitiveInfo;
  _11 = _10->service;
  if (_11 == 2)
    goto <bb 14>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _12 = job_54(D)->jobPrimitiveInfo;
  _13 = _12->primitiveInfo;
  _14 = _13->service;
  if (_14 == 7)
    goto <bb 14>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _15 = job_54(D)->jobPrimitiveInfo;
  _16 = _15->primitiveInfo;
  _17 = _16->service;
  if (_17 == 8)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _18 = job_54(D)->jobPrimitiveInfo;
  _19 = _18->primitiveInfo;
  _20 = _19->service;
  if (_20 == 11)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _21 = job_54(D)->jobPrimitiveInfo;
  _22 = _21->cryIfKeyId;
  if (_22 <= 1)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  cryIfKeyIdOk_56 = 1;
  # DEBUG cryIfKeyIdOk => cryIfKeyIdOk_56
  # DEBUG BEGIN_STMT
  _23 = job_54(D)->jobPrimitiveInfo;
  _24 = _23->cryIfKeyId;
  _25 = CryIf_Keys[_24];
  job_54(D)->cryptoKeyId = _25;

  <bb 16> :
  # cryIfKeyIdOk_46 = PHI <cryIfKeyIdOk_52(13), cryIfKeyIdOk_52(14), cryIfKeyIdOk_56(15)>
  # DEBUG cryIfKeyIdOk => cryIfKeyIdOk_46
  # DEBUG BEGIN_STMT
  _26 = job_54(D)->jobPrimitiveInfo;
  _27 = _26->primitiveInfo;
  _28 = _27->service;
  if (_28 == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _29 = job_54(D)->jobPrimitiveInfo;
  _30 = _29->primitiveInfo;
  _31 = _30->service;
  if (_31 == 10)
    goto <bb 19>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  _32 = job_54(D)->jobPrimitiveInfo;
  _33 = _32->primitiveInfo;
  _34 = _33->service;
  if (_34 == 9)
    goto <bb 19>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 19> :
  _35 = job_54(D)->jobPrimitiveInfo;
  _36 = _35->cryIfKeyId;
  _37 = _36 + 4294967294;
  if (_37 > 4294967292)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  # DEBUG BEGIN_STMT
  cryIfKeyIdOk_58 = 1;
  # DEBUG cryIfKeyIdOk => cryIfKeyIdOk_58
  # DEBUG BEGIN_STMT
  _38 = job_54(D)->jobPrimitiveInfo;
  _39 = _38->cryIfKeyId;
  if (_39 != 4294967295)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  # DEBUG BEGIN_STMT
  _40 = job_54(D)->jobPrimitiveInfo;
  _41 = _40->cryIfKeyId;
  _42 = CryIf_Keys[_41];
  job_54(D)->cryptoKeyId = _42;
  goto <bb 23>; [INV]

  <bb 22> :
  # DEBUG BEGIN_STMT
  job_54(D)->cryptoKeyId = 4294967295;

  <bb 23> :
  # cryIfKeyIdOk_47 = PHI <cryIfKeyIdOk_46(18), cryIfKeyIdOk_46(19), cryIfKeyIdOk_58(21), cryIfKeyIdOk_58(22)>
  # DEBUG cryIfKeyIdOk => cryIfKeyIdOk_47
  # DEBUG BEGIN_STMT
  if (cryIfKeyIdOk_47 == 1)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  # DEBUG BEGIN_STMT
  _43 = CryIf_ProcessJobJumpTable[channelId_55(D)];
  _44 = CryIf_Channels[channelId_55(D)];
  RetVal_62 = _43 (_44, job_54(D));
  # DEBUG RetVal => RetVal_62

  <bb 25> :
  # RetVal_45 = PHI <RetVal_51(3), RetVal_51(5), RetVal_51(7), RetVal_51(23), RetVal_62(24)>
  # DEBUG RetVal => RetVal_45
  # DEBUG BEGIN_STMT
  _66 = RetVal_45;
  return _66;

}


CryIf_Init ()
{
  unsigned char CryIf_Initialized.0_1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CryIf_Initialized = 1;
  # DEBUG BEGIN_STMT
  CryIf_Initialized.0_1 = CryIf_Initialized;
  if (CryIf_Initialized.0_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (112, 0, 0, 1);

  <bb 4> :
  return;

}


