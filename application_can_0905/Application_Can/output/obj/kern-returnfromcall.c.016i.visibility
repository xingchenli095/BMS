
Marking local functions:


Marking externally visible functions: OS_KernReturnFromCall


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_ShutdownNoHooks/5 (OS_ShutdownNoHooks) @06c5c000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernReturnFromCall/0 
  Calls: 
OS_Panic/4 (OS_Panic) @06c5ce00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernReturnFromCall/0 OS_KernReturnFromCall/0 OS_KernReturnFromCall/0 
  Calls: 
OS_KillCalledContext/3 (OS_KillCalledContext) @06c5cd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KernReturnFromCall/0 OS_KernReturnFromCall/0 OS_KernReturnFromCall/0 OS_KernReturnFromCall/0 
  Calls: 
OS_isrTableBase/2 (OS_isrTableBase) @06c34d38
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernReturnFromCall/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06c34cf0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KernReturnFromCall/0 (addr)OS_KernReturnFromCall/0 (read)OS_KernReturnFromCall/0 (read)OS_KernReturnFromCall/0 (read)OS_KernReturnFromCall/0 (read)OS_KernReturnFromCall/0 (addr)OS_KernReturnFromCall/0 (read)OS_KernReturnFromCall/0 (read)OS_KernReturnFromCall/0 (addr)OS_KernReturnFromCall/0 (read)OS_KernReturnFromCall/0 (read)OS_KernReturnFromCall/0 (addr)
  Availability: not_available
  Varpool flags:
OS_KernReturnFromCall/0 (OS_KernReturnFromCall) @06c5ca80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_isrTableBase/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (addr)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_Panic/4 OS_KillCalledContext/3 OS_ShutdownNoHooks/5 OS_KillCalledContext/3 OS_Panic/4 OS_KillCalledContext/3 OS_Panic/4 OS_KillCalledContext/3 
__attribute__((target ("general-regs-only")))
OS_KernReturnFromCall ()
{
  struct os_isrdynamic_t * isrDynamic;
  struct os_kerneldata_t * const kernel_data;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = OS_kernelData.inFunction;
  if (_1 == 3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  OS_isrTableBase.0_2 = OS_isrTableBase;
  _3 = OS_kernelData.isrCurrent;
  _4 = (unsigned int) _3;
  _5 = _4 * 68;
  _6 = OS_isrTableBase.0_2 + _5;
  isrDynamic = _6->dynamic;
  # DEBUG BEGIN_STMT
  _7 = &isrDynamic->c;
  _8 = OS_KillCalledContext (_7);
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  OS_Panic (11);
  goto <bb 17>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _9 = OS_kernelData.inFunction;
  if (_9 == 8)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _10 = OS_kernelData.hookApp;
  if (_10 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _11 = OS_KillCalledContext (&OS_kernelData.sHookContext.c);
  if (_11 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  OS_Panic (12);
  goto <bb 17>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _12 = OS_kernelData.inFunction;
  if (_12 == 9)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _13 = OS_kernelData.hookApp;
  if (_13 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _14 = OS_KillCalledContext (&OS_kernelData.sHookContext.c);
  if (_14 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  OS_ShutdownNoHooks ();
  goto <bb 17>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _15 = OS_kernelData.inFunction;
  if (_15 == 10)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _16 = OS_kernelData.hookApp;
  if (_16 != 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _17 = OS_KillCalledContext (&OS_kernelData.eHookContext.c);
  if (_17 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  OS_Panic (12);

  <bb 17> :
  # DEBUG BEGIN_STMT
  return;

}


