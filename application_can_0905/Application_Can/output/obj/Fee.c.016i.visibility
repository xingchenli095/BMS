
Marking local functions: Fee_GetClusterLength Fee_EraseCluster Fee_WriteToFls Fee_ReadFromFls Fee_JobErrorSchedule Fee_ReservedAreaWritable Fee_JobScheduleAfterSwapClusterVldDone Fee_JobSchedule Fee_JobWriteHdr Fee_JobInternalSwapDataWrite Fee_JobInternalSwapDataRead Fee_JobInternalSwapBlockVld Fee_JobInternalScanClusterHdrParse Fee_JobInternalScanClusterHdrDone Fee_JobInternalScanClusterHdrRead Fee_JobInternalScanBlockHdrParse Fee_UpdateBlockRuntimeInfo Fee_IsBlockMatchedConfig Fee_JobInternalScanClusterErase Fee_JobInternalScanBlockHdrRead Fee_JobInternalSwap Fee_GetNextClusterToSwap Fee_JobInternalSwapClusterErase Fee_JobInternalSwapClusterVld Fee_SerializeFlag Fee_CopyDataToPageBuffer Fee_AlignToVirtualPageSize Fee_GetBlockImmediate Fee_GetBlockNumber Fee_GetBlockSize Fee_GetBlockIndex Fee_SerializeClusterHdr Fee_DeserializeClusterHdr Fee_DeserializeBlockHdr Fee_DeserializeFlag Fee_BlankCheck Fee_SerializeBlockHdr Fee_GetBlockClusterGrp


Marking externally visible functions: Fee_ForceSwapOnNextWrite Fee_GetRunTimeInfo Fee_MainFunction Fee_JobErrorNotification Fee_JobEndNotification Fee_EraseImmediateBlock Fee_GetVersionInfo Fee_InvalidateBlock Fee_GetJobResult Fee_GetStatus Fee_Cancel Fee_Write Fee_Read Fee_SetMode Fee_Init


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Fls_Erase/116 (Fls_Erase) @070702a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_EraseCluster/80 
  Calls: 
Fls_Read/115 (Fls_Read) @0703a540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_JobInternalScanClusterHdrRead/55 Fee_ReadFromFls/78 
  Calls: 
Fls_Write/114 (Fls_Write) @0703a000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_WriteToFls/79 
  Calls: 
Fee_ClrGrps/113 (Fee_ClrGrps) @07034480
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Fee_JobInternalSwapClusterVldDone/63 (read)Fee_GetClusterLength/81 (read)Fee_JobInternalSwapClusterVld/41 (read)Fee_JobInternalSwapClusterFmt/43 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmt/50 (read)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrDone/57 (read)Fee_JobInternalScanClusterHdrRead/55 (read)Fee_JobInternalScanCluster/49 (read)Fee_EraseCluster/80 (read)Fee_ReservedAreaWritable/76 (read)Fee_GetNextClusterToSwap/45 (read)
  Availability: not_available
  Varpool flags: read-only
Fls_SetMode/112 (Fls_SetMode) @0687f700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_JobSetModeTransfer/69 
  Calls: 
Fls_GetStatus/111 (Fls_GetStatus) @0687f620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_JobSetModeTransfer/69 
  Calls: 
NvM_JobErrorNotification/110 (NvM_JobErrorNotification) @0687f2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_MainFunction/94 Fee_JobErrorSchedule/77 Fee_JobErrorSchedule/77 Fee_JobEndNotification/92 
  Calls: 
NvM_JobEndNotification/109 (NvM_JobEndNotification) @0687f1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_MainFunction/94 Fee_JobEndNotification/92 Fee_JobEndNotification/92 
  Calls: 
Fls_GetJobResult/108 (Fls_GetJobResult) @0687f000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_JobErrorSchedule/77 Fee_JobErrorSchedule/77 Fee_JobEndNotification/92 
  Calls: 
SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_03/107 (SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_03) @0702ee00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_EraseImmediateBlock/91 
  Calls: 
SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_03/106 (SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_03) @0702ec40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_EraseImmediateBlock/91 
  Calls: 
SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_02/105 (SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_02) @0702e9a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_InvalidateBlock/89 
  Calls: 
SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_02/104 (SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_02) @0702e7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_InvalidateBlock/89 
  Calls: 
SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_01/103 (SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_01) @0702e380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_Write/85 
  Calls: 
SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_01/102 (SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_01) @0702e1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_Write/85 
  Calls: 
SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_00/101 (SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_00) @07021ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_Read/84 
  Calls: 
Fee_BlockConfig/100 (Fee_BlockConfig) @0702c438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Fee_Read/84 (read)Fee_Read/84 (read)Fee_GetBlockIndex/34 (read)Fee_GetBlockIndex/34 (read)Fee_EraseImmediateBlock/91 (read)Fee_GetBlockClusterGrp/27 (read)Fee_GetBlockSize/35 (read)Fee_GetBlockImmediate/37 (read)Fee_GetBlockNumber/36 (read)Fee_IsBlockMatchedConfig/52 (read)Fee_IsBlockMatchedConfig/52 (read)Fee_IsBlockMatchedConfig/52 (read)Fee_JobEraseImmediateBlock/73 (read)Fee_JobWriteBlockUnalignedData/67 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteHdr/64 (read)Fee_JobWriteHdr/64 (read)Fee_JobWriteHdr/64 (read)Fee_JobWriteHdr/64 (read)
  Availability: not_available
  Varpool flags: read-only
SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_00/99 (SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_00) @07021e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_Read/84 
  Calls: 
Det_ASR43_ReportRuntimeError/98 (Det_ASR43_ReportRuntimeError) @070219a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_ForceSwapOnNextWrite/96 Fee_GetRunTimeInfo/95 Fee_JobSetModeTransfer/69 Fee_EraseImmediateBlock/91 Fee_InvalidateBlock/89 Fee_Write/85 Fee_Read/84 Fee_SetMode/83 Fee_Init/82 
  Calls: 
Det_ASR40_ReportError/97 (Det_ASR40_ReportError) @070218c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Fee_ForceSwapOnNextWrite/96 Fee_ForceSwapOnNextWrite/96 Fee_GetRunTimeInfo/95 Fee_GetRunTimeInfo/95 Fee_GetRunTimeInfo/95 Fee_JobErrorNotification/93 Fee_JobEndNotification/92 Fee_EraseImmediateBlock/91 Fee_EraseImmediateBlock/91 Fee_EraseImmediateBlock/91 Fee_GetVersionInfo/90 Fee_InvalidateBlock/89 Fee_InvalidateBlock/89 Fee_GetJobResult/88 Fee_Cancel/86 Fee_Write/85 Fee_Write/85 Fee_Write/85 Fee_Read/84 Fee_Read/84 Fee_Read/84 Fee_Read/84 Fee_Read/84 Fee_SetMode/83 Fee_Init/82 
  Calls: 
Fee_ForceSwapOnNextWrite/96 (Fee_ForceSwapOnNextWrite) @07021700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_eModuleStatus/12 (read)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/97 Det_ASR43_ReportRuntimeError/98 Det_ASR40_ReportError/97 
Fee_GetRunTimeInfo/95 (Fee_GetRunTimeInfo) @07021540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_eModuleStatus/12 (read)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_GetClusterLength/81 Det_ASR40_ReportError/97 Det_ASR43_ReportRuntimeError/98 Det_ASR40_ReportError/97 Det_ASR40_ReportError/97 
Fee_MainFunction/94 (Fee_MainFunction) @07021380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eJobResult/13 (read)Fee_eJob/9 (read)Fee_eJobResult/13 (write)Fee_eJobResult/13 (read)Fee_eJobResult/13 (read)Fee_eModuleStatus/12 (write)Fee_eModuleStatus/12 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: NvM_JobErrorNotification/110 NvM_JobEndNotification/109 Fee_JobSchedule/74 
Fee_JobErrorNotification/93 (Fee_JobErrorNotification) @070211c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_eJobResult/13 (read)Fee_eJob/9 (read)Fee_eJobResult/13 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_JobErrorSchedule/77 Det_ASR40_ReportError/97 
Fee_JobEndNotification/92 (Fee_JobEndNotification) @07021000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_eJobResult/13 (read)Fee_eJob/9 (read)Fee_eJob/9 (read)Fee_eJobResult/13 (write)Fee_eModuleStatus/12 (write)Fee_eJobResult/13 (write)Fee_eJobResult/13 (read)Fee_eModuleStatus/12 (write)Fee_eJobResult/13 (read)Fee_eModuleStatus/12 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: NvM_JobErrorNotification/110 NvM_JobEndNotification/109 Fee_JobSchedule/74 NvM_JobEndNotification/109 Fls_GetJobResult/108 Det_ASR40_ReportError/97 
Fee_EraseImmediateBlock/91 (Fee_EraseImmediateBlock) @0701be00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_BlockConfig/100 (read)Fee_eModuleStatus/12 (read)Fee_uJobBlockIndex/7 (write)Fee_eJob/9 (write)Fee_eModuleStatus/12 (write)Fee_eJobResult/13 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_03/107 Det_ASR43_ReportRuntimeError/98 Det_ASR40_ReportError/97 Det_ASR40_ReportError/97 Det_ASR40_ReportError/97 SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_03/106 Fee_GetBlockIndex/34 
Fee_GetVersionInfo/90 (Fee_GetVersionInfo) @0701bc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/97 
Fee_InvalidateBlock/89 (Fee_InvalidateBlock) @0701ba80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_eModuleStatus/12 (read)Fee_uJobBlockIndex/7 (write)Fee_eJob/9 (write)Fee_eModuleStatus/12 (write)Fee_eJobResult/13 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_02/105 Det_ASR43_ReportRuntimeError/98 Det_ASR40_ReportError/97 Det_ASR40_ReportError/97 SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_02/104 Fee_GetBlockIndex/34 
Fee_GetJobResult/88 (Fee_GetJobResult) @0701b8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eJobResult/13 (read)Fee_eModuleStatus/12 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/97 
Fee_GetStatus/87 (Fee_GetStatus) @0701b700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
Fee_Cancel/86 (Fee_Cancel) @0701b540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/97 
Fee_Write/85 (Fee_Write) @0701b380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_eModuleStatus/12 (read)Fee_uJobBlockIndex/7 (write)Fee_pJobWriteDataDestPtr/3 (write)Fee_eJob/9 (write)Fee_eModuleStatus/12 (write)Fee_eJobResult/13 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_01/103 Det_ASR40_ReportError/97 Det_ASR40_ReportError/97 Det_ASR43_ReportRuntimeError/98 Det_ASR40_ReportError/97 SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_01/102 Fee_GetBlockIndex/34 
Fee_Read/84 (Fee_Read) @0701b1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_eModuleStatus/12 (read)Fee_BlockConfig/100 (read)Fee_BlockConfig/100 (read)Fee_uJobBlockIndex/7 (write)Fee_uJobBlockOffset/14 (write)Fee_uJobBlockLength/15 (write)Fee_pJobReadDataDestPtr/2 (write)Fee_eJob/9 (write)Fee_eModuleStatus/12 (write)Fee_eJobResult/13 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_00/101 Det_ASR40_ReportError/97 Det_ASR40_ReportError/97 Det_ASR40_ReportError/97 Det_ASR40_ReportError/97 Det_ASR43_ReportRuntimeError/98 Det_ASR40_ReportError/97 SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_00/99 Fee_GetBlockIndex/34 
Fee_SetMode/83 (Fee_SetMode) @0701b000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_eModuleStatus/12 (read)Fee_eJob/9 (write)Fee_eMode/11 (write)Fee_eJobResult/13 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR43_ReportRuntimeError/98 Det_ASR40_ReportError/97 
Fee_Init/82 (Fee_Init) @06fc1e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Fee_eModuleStatus/12 (read)Fee_aBlockInfo/19 (write)Fee_aBlockInfo/19 (write)Fee_aBlockInfo/19 (write)Fee_aClrGrpInfo/20 (write)Fee_eJob/9 (write)Fee_eJobResult/13 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR43_ReportRuntimeError/98 Det_ASR40_ReportError/97 
Fee_GetClusterLength/81 (Fee_GetClusterLength) @06fc1c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_ClrGrps/113 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_GetRunTimeInfo/95 Fee_EraseCluster/80 Fee_JobInternalScanCluster/49 Fee_JobInternalScanClusterHdrParse/58 Fee_JobInternalScanClusterFmt/50 Fee_JobInternalScanClusterFmtDone/51 Fee_JobInternalSwapClusterFmt/43 Fee_JobInternalSwapClusterVldDone/63 
  Calls: 
Fee_EraseCluster/80 (Fee_EraseCluster) @06fc1a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_ClrGrps/113 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalSwapClusterErase/44 Fee_JobInternalScanClusterErase/48 
  Calls: Fls_Erase/116 Fee_GetClusterLength/81 
Fee_WriteToFls/79 (Fee_WriteToFls) @06fc18c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobWriteHdr/64 Fee_JobWriteBlockData/65 Fee_JobWriteBlockUnalignedData/67 Fee_JobWriteBlockValidate/68 Fee_JobInvalidateBlock/71 Fee_JobInternalScanClusterFmt/50 Fee_JobInternalSwapClusterFmt/43 Fee_JobInternalSwapClusterVld/41 Fee_JobInternalSwapBlock/42 Fee_JobInternalSwapBlockVld/60 Fee_JobInternalSwapDataWrite/62 
  Calls: Fls_Write/114 
Fee_ReadFromFls/78 (Fee_ReadFromFls) @06fc1700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobReadBlock/59 Fee_JobInternalScanBlockHdrRead/47 Fee_JobInternalSwapDataRead/61 
  Calls: Fls_Read/115 
Fee_JobErrorSchedule/77 (Fee_JobErrorSchedule) @06fc1540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_eJob/9 (read)Fee_eJobResult/13 (write)Fee_eJobResult/13 (write)Fee_eJobResult/13 (write)Fee_uJobBlockIndex/7 (read)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (write)Fee_eJobResult/13 (write)Fee_eModuleStatus/12 (write)Fee_eJobResult/13 (write)Fee_eModuleStatus/12 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobErrorNotification/93 
  Calls: NvM_JobErrorNotification/110 Fls_GetJobResult/108 NvM_JobErrorNotification/110 Fls_GetJobResult/108 Fee_GetBlockClusterGrp/27 Fee_JobInternalSwapDataWrite/62 Fee_JobInternalScanClusterHdrParse/58 Fee_JobInternalScanBlockHdrParse/54 
Fee_ReservedAreaWritable/76 (Fee_ReservedAreaWritable) @06fc1380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobBlockIndex/7 (read)Fee_ClrGrps/113 (read)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (read)Fee_uJobBlockIndex/7 (read)Fee_uJobBlockIndex/7 (read)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobWriteHdr/64 Fee_JobEraseImmediateBlock/73 
  Calls: Fee_GetBlockImmediate/37 Fee_AlignToVirtualPageSize/38 Fee_GetBlockSize/35 Fee_GetBlockClusterGrp/27 
Fee_JobScheduleAfterSwapClusterVldDone/75 (Fee_JobScheduleAfterSwapClusterVldDone) @06fc11c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_eJob/9 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalSwapClusterVldDone/63 
  Calls: Fee_JobEraseImmediateBlock/73 Fee_JobWriteBlock/66 
Fee_JobSchedule/74 (Fee_JobSchedule) @06fc1000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_eJob/9 (read)Fee_JobScheduleLookupTable/26 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_MainFunction/94 Fee_JobEndNotification/92 
  Calls: 
   Indirect call
Fee_JobEraseImmediateBlock/73 (Fee_JobEraseImmediateBlock) @06fbce00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobBlockIndex/7 (read)Fee_BlockConfig/100 (read)Fee_uJobIntClrGrpIt/5 (write)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: Fee_JobScheduleAfterSwapClusterVldDone/75 
  Calls: Fee_JobInternalSwap/46 Fee_ReservedAreaWritable/76 
Fee_JobInvalidateBlockDone/72 (Fee_JobInvalidateBlockDone) @06fbcc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (write)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
Fee_JobInvalidateBlock/71 (Fee_JobInvalidateBlock) @06fbca80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)Fee_eJob/9 (write)Fee_aDataBuffer/4 (addr)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_WriteToFls/79 Fee_SerializeFlag/40 
Fee_JobWriteBlockDone/70 (Fee_JobWriteBlockDone) @06fbc8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (write)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
Fee_JobSetModeTransfer/69 (Fee_JobSetModeTransfer) @06fbc700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_eModuleStatus/12 (write)Fee_eMode/11 (read)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR43_ReportRuntimeError/98 Fls_SetMode/112 Fls_GetStatus/111 
Fee_JobWriteBlockValidate/68 (Fee_JobWriteBlockValidate) @06fbc540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_aDataBuffer/4 (addr)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_WriteToFls/79 Fee_SerializeFlag/40 
Fee_JobWriteBlockUnalignedData/67 (Fee_JobWriteBlockUnalignedData) @06fbc380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobBlockIndex/7 (read)Fee_BlockConfig/100 (read)Fee_pJobWriteDataDestPtr/3 (read)Fee_aDataBuffer/4 (addr)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_WriteToFls/79 Fee_CopyDataToPageBuffer/39 
Fee_JobWriteBlock/66 (Fee_JobWriteBlock) @06fbc1c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_eJob/9 (read)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: Fee_JobScheduleAfterSwapClusterVldDone/75 
  Calls: Fee_JobWriteHdr/64 
Fee_JobWriteBlockData/65 (Fee_JobWriteBlockData) @06fbc000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobBlockIndex/7 (read)Fee_BlockConfig/100 (read)Fee_uJobBlockIndex/7 (read)Fee_BlockConfig/100 (read)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (read)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (write)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (write)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (write)Fee_uJobBlockIndex/7 (read)Fee_BlockConfig/100 (read)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (write)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (write)Fee_pJobWriteDataDestPtr/3 (read)Fee_aDataBuffer/4 (addr)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)Fee_pJobWriteDataDestPtr/3 (read)Fee_eJob/9 (write)Fee_eJob/9 (write)Fee_aClrGrpInfo/20 (read)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_WriteToFls/79 Fee_CopyDataToPageBuffer/39 Fee_AlignToVirtualPageSize/38 
Fee_JobWriteHdr/64 (Fee_JobWriteHdr) @06fafe00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobBlockIndex/7 (read)Fee_BlockConfig/100 (read)Fee_uJobBlockIndex/7 (read)Fee_BlockConfig/100 (read)Fee_uJobBlockIndex/7 (read)Fee_BlockConfig/100 (read)Fee_uJobBlockIndex/7 (read)Fee_BlockConfig/100 (read)Fee_uJobIntClrGrpIt/5 (write)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (read)Fee_aDataBuffer/4 (addr)Fee_aDataBuffer/4 (addr)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobWriteBlock/66 
  Calls: Fee_WriteToFls/79 Fee_SerializeBlockHdr/28 Fee_JobInternalSwap/46 Fee_ReservedAreaWritable/76 Fee_AlignToVirtualPageSize/38 
Fee_JobInternalSwapClusterVldDone/63 (Fee_JobInternalSwapClusterVldDone) @06fafc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_aBlockInfo/19 (read)Fee_aBlockInfo/19 (read)Fee_aBlockInfo/19 (read)Fee_aBlockInfo/19 (write)Fee_aBlockInfo/19 (read)Fee_aBlockInfo/19 (write)Fee_aBlockInfo/19 (write)Fee_aBlockInfo/19 (read)Fee_aBlockInfo/19 (write)Fee_aBlockInfo/19 (write)Fee_aBlockInfo/19 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (write)Fee_eJobIntOriginalJob/10 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrGrpIt/5 (write)Fee_eModuleStatus/12 (write)Fee_eJobIntOriginalJob/10 (read)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_JobScheduleAfterSwapClusterVldDone/75 Fee_AlignToVirtualPageSize/38 Fee_GetBlockSize/35 Fee_AlignToVirtualPageSize/38 Fee_GetBlockSize/35 Fee_GetBlockClusterGrp/27 Fee_GetClusterLength/81 
Fee_JobInternalSwapDataWrite/62 (Fee_JobInternalSwapDataWrite) @06fafa80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntAddrIt/16 (read)Fee_uJobBlockLength/15 (read)Fee_aDataBuffer/4 (addr)Fee_uJobIntAddrIt/16 (read)Fee_uJobBlockLength/15 (read)Fee_uJobIntAddrIt/16 (write)Fee_eJob/9 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobErrorSchedule/77 Fee_JobInternalSwapDataWrite_Wrapper/24 
  Calls: Fee_JobInternalSwapDataRead/61 Fee_WriteToFls/79 
Fee_JobInternalSwapDataRead/61 (Fee_JobInternalSwapDataRead) @06faf8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntBlockIt/8 (read)Fee_uJobIntDataAddr/18 (read)Fee_uJobIntAddrIt/16 (read)Fee_uJobBlockLength/15 (write)Fee_uJobIntBlockIt/8 (read)Fee_aBlockInfo/19 (write)Fee_uJobIntBlockIt/8 (read)Fee_uJobIntBlockIt/8 (write)Fee_uJobBlockLength/15 (read)Fee_uJobIntBlockIt/8 (read)Fee_uJobIntBlockIt/8 (write)Fee_uJobBlockLength/15 (read)Fee_uJobBlockLength/15 (write)Fee_uJobIntBlockIt/8 (read)Fee_aBlockInfo/19 (read)Fee_uJobIntAddrIt/16 (read)Fee_uJobIntDataAddr/18 (read)Fee_uJobBlockLength/15 (read)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalSwapDataRead_Wrapper/23 Fee_JobInternalSwapDataWrite/62 
  Calls: Fee_ReadFromFls/78 Fee_JobInternalSwapBlockVld/60 Fee_JobInternalSwapBlock/42 Fee_AlignToVirtualPageSize/38 Fee_GetBlockSize/35 
Fee_JobInternalSwapBlockVld/60 (Fee_JobInternalSwapBlockVld) @06faf700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_aDataBuffer/4 (addr)Fee_uJobIntHdrAddr/17 (read)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalSwapDataRead/61 
  Calls: Fee_WriteToFls/79 Fee_SerializeFlag/40 
Fee_JobReadBlock/59 (Fee_JobReadBlock) @06faf540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)Fee_uJobBlockIndex/7 (read)Fee_aBlockInfo/19 (read)Fee_uJobBlockOffset/14 (read)Fee_pJobReadDataDestPtr/2 (read)Fee_uJobBlockLength/15 (read)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_ReadFromFls/78 
Fee_JobInternalScanClusterHdrParse/58 (Fee_JobInternalScanClusterHdrParse) @06faf380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_aDataBuffer/4 (addr)Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobErrorSchedule/77 Fee_JobInternalScanClusterHdrParse_Wrapper/21 
  Calls: Fee_JobInternalScanClusterHdrRead/55 Fee_JobInternalScanCluster/49 Fee_JobInternalScanClusterHdrDone/57 Fee_GetClusterLength/81 Fee_DeserializeClusterHdr/32 
Fee_JobInternalScanClusterHdrDone/57 (Fee_JobInternalScanClusterHdrDone) @06faf1c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrIt/6 (write)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrGrpIt/5 (write)Fee_uJobIntClrIt/6 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrGrpIt/5 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScanClusterHdrParse/58 
  Calls: 
Fee_JobInternalScan/56 (Fee_JobInternalScan) @06faf000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobIntClrGrpIt/5 (write)Fee_uJobIntClrIt/6 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_JobInternalScanClusterHdrRead/55 
Fee_JobInternalScanClusterHdrRead/55 (Fee_JobInternalScanClusterHdrRead) @06fa7e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)Fee_uJobIntClrIt/6 (read)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScan/56 Fee_JobInternalScanClusterHdrParse/58 
  Calls: Fls_Read/115 
Fee_JobInternalScanBlockHdrParse/54 (Fee_JobInternalScanBlockHdrParse) @06fa7c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_aDataBuffer/4 (addr)Fee_uJobBlockIndex/7 (write)Fee_uJobIntAddrIt/16 (read)Fee_uJobIntAddrIt/16 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntAddrIt/16 (read)Fee_aClrGrpInfo/20 (write)bSwapToBePerformed/1 (write)bSwapToBePerformed/1 (read)bSwapToBePerformed/1 (write)Fee_uJobIntAddrIt/16 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrGrpIt/5 (write)bSwapToBePerformed/1 (write)Fee_uJobIntAddrIt/16 (read)Fee_uJobIntAddrIt/16 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntAddrIt/16 (read)Fee_aClrGrpInfo/20 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobErrorSchedule/77 Fee_JobInternalScanBlockHdrParse_Wrapper/22 
  Calls: Fee_JobInternalScanBlockHdrRead/47 Fee_UpdateBlockRuntimeInfo/53 Fee_IsBlockMatchedConfig/52 Fee_GetBlockIndex/34 Fee_JobInternalScanCluster/49 Fee_JobInternalScanBlockHdrRead/47 Fee_DeserializeBlockHdr/31 
Fee_UpdateBlockRuntimeInfo/53 (Fee_UpdateBlockRuntimeInfo) @06fa7a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_aBlockInfo/19 (write)Fee_aBlockInfo/19 (write)Fee_uJobIntAddrIt/16 (read)Fee_aBlockInfo/19 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScanBlockHdrParse/54 
  Calls: 
Fee_IsBlockMatchedConfig/52 (Fee_IsBlockMatchedConfig) @06fa78c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (read)Fee_BlockConfig/100 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_BlockConfig/100 (read)Fee_BlockConfig/100 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScanBlockHdrParse/54 
  Calls: Fee_AlignToVirtualPageSize/38 
Fee_JobInternalScanClusterFmtDone/51 (Fee_JobInternalScanClusterFmtDone) @06fa7700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrGrpIt/5 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_JobInternalScanCluster/49 Fee_GetClusterLength/81 
Fee_JobInternalScanClusterFmt/50 (Fee_JobInternalScanClusterFmt) @06fa7540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)Fee_uJobIntClrIt/6 (read)Fee_aDataBuffer/4 (addr)Fee_aDataBuffer/4 (addr)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_WriteToFls/79 Fee_SerializeFlag/40 Fee_SerializeClusterHdr/33 Fee_GetClusterLength/81 
Fee_JobInternalScanCluster/49 (Fee_JobInternalScanCluster) @06fa7380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_eJob/9 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (read)Fee_uJobIntClrIt/6 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)Fee_uJobIntAddrIt/16 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntAddrIt/16 (read)Fee_aClrGrpInfo/20 (write)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: Fee_JobInternalScanClusterHdrParse/58 Fee_JobInternalScanClusterFmtDone/51 Fee_JobInternalScanBlockHdrParse/54 
  Calls: Fee_JobInternalScanBlockHdrRead/47 Fee_GetClusterLength/81 Fee_JobInternalScanClusterErase/48 
Fee_JobInternalScanClusterErase/48 (Fee_JobInternalScanClusterErase) @06fa71c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_eJob/9 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScanCluster/49 
  Calls: Fee_EraseCluster/80 
Fee_JobInternalScanBlockHdrRead/47 (Fee_JobInternalScanBlockHdrRead) @06fa7000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntAddrIt/16 (read)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScanCluster/49 Fee_JobInternalScanBlockHdrParse/54 Fee_JobInternalScanBlockHdrParse/54 
  Calls: Fee_ReadFromFls/78 
Fee_JobInternalSwap/46 (Fee_JobInternalSwap) @06f6ce00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (read)Fee_uJobIntClrIt/6 (write)Fee_eJob/9 (read)Fee_eJobIntOriginalJob/10 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobWriteHdr/64 Fee_JobEraseImmediateBlock/73 
  Calls: Fee_JobInternalSwapClusterErase/44 Fee_GetNextClusterToSwap/45 
Fee_GetNextClusterToSwap/45 (Fee_GetNextClusterToSwap) @06f6cc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalSwap/46 
  Calls: 
Fee_JobInternalSwapClusterErase/44 (Fee_JobInternalSwapClusterErase) @06f6ca80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_eJob/9 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalSwap/46 
  Calls: Fee_EraseCluster/80 
Fee_JobInternalSwapClusterFmt/43 (Fee_JobInternalSwapClusterFmt) @06f6c8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)Fee_uJobIntClrIt/6 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_aClrGrpInfo/20 (read)Fee_aDataBuffer/4 (addr)Fee_aDataBuffer/4 (addr)Fee_uJobIntHdrAddr/17 (write)Fee_uJobIntDataAddr/18 (write)Fee_uJobIntBlockIt/8 (write)Fee_eJob/9 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_WriteToFls/79 Fee_SerializeClusterHdr/33 Fee_GetClusterLength/81 
Fee_JobInternalSwapBlock/42 (Fee_JobInternalSwapBlock) @06f6c700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Fee_uJobIntBlockIt/8 (read)Fee_uJobIntClrGrpIt/5 (read)Fee_uJobIntBlockIt/8 (read)Fee_aBlockInfo/19 (read)Fee_uJobIntBlockIt/8 (read)Fee_aBlockInfo/19 (read)Fee_uJobIntBlockIt/8 (read)Fee_aBlockInfo/19 (read)Fee_uJobIntBlockIt/8 (read)Fee_uJobIntBlockIt/8 (write)Fee_uJobIntBlockIt/8 (read)Fee_uJobIntBlockIt/8 (read)Fee_uJobIntBlockIt/8 (read)Fee_uJobIntBlockIt/8 (read)Fee_uJobIntBlockIt/8 (read)Fee_uJobIntBlockIt/8 (read)Fee_aBlockInfo/19 (read)Fee_uJobIntDataAddr/18 (read)Fee_uJobIntDataAddr/18 (write)Fee_uJobIntAddrIt/16 (write)Fee_aDataBuffer/4 (addr)Fee_uJobIntBlockIt/8 (read)Fee_aBlockInfo/19 (read)Fee_eJob/9 (write)Fee_uJobIntBlockIt/8 (read)Fee_uJobIntBlockIt/8 (write)Fee_eJob/9 (write)Fee_uJobIntHdrAddr/17 (read)Fee_aDataBuffer/4 (addr)Fee_uJobIntHdrAddr/17 (read)Fee_uJobIntHdrAddr/17 (write)
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: Fee_JobInternalSwapDataRead/61 
  Calls: Fee_WriteToFls/79 Fee_SerializeBlockHdr/28 Fee_AlignToVirtualPageSize/38 Fee_GetBlockNumber/36 Fee_GetBlockImmediate/37 Fee_GetBlockSize/35 Fee_JobInternalSwapClusterVld/41 Fee_GetBlockClusterGrp/27 
Fee_JobInternalSwapClusterVld/41 (Fee_JobInternalSwapClusterVld) @06f6c540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_uJobIntClrGrpIt/5 (read)Fee_ClrGrps/113 (read)Fee_uJobIntClrIt/6 (read)Fee_aDataBuffer/4 (addr)Fee_aDataBuffer/4 (addr)Fee_eJob/9 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalSwapBlock/42 
  Calls: Fee_WriteToFls/79 Fee_SerializeFlag/40 
Fee_SerializeFlag/40 (Fee_SerializeFlag) @06f6c380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobWriteBlockValidate/68 Fee_JobInvalidateBlock/71 Fee_JobInternalScanClusterFmt/50 Fee_JobInternalSwapClusterVld/41 Fee_JobInternalSwapBlockVld/60 
  Calls: 
Fee_CopyDataToPageBuffer/39 (Fee_CopyDataToPageBuffer) @06f6c1c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobWriteBlockData/65 Fee_JobWriteBlockUnalignedData/67 
  Calls: 
Fee_AlignToVirtualPageSize/38 (Fee_AlignToVirtualPageSize) @06f6c000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobWriteHdr/64 Fee_JobWriteBlockData/65 Fee_ReservedAreaWritable/76 Fee_IsBlockMatchedConfig/52 Fee_JobInternalSwapBlock/42 Fee_JobInternalSwapDataRead/61 Fee_JobInternalSwapClusterVldDone/63 Fee_JobInternalSwapClusterVldDone/63 
  Calls: 
Fee_GetBlockImmediate/37 (Fee_GetBlockImmediate) @06f5de00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_BlockConfig/100 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_ReservedAreaWritable/76 Fee_JobInternalSwapBlock/42 
  Calls: 
Fee_GetBlockNumber/36 (Fee_GetBlockNumber) @06f5dc40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_BlockConfig/100 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalSwapBlock/42 
  Calls: 
Fee_GetBlockSize/35 (Fee_GetBlockSize) @06f5da80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_BlockConfig/100 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_ReservedAreaWritable/76 Fee_JobInternalSwapBlock/42 Fee_JobInternalSwapDataRead/61 Fee_JobInternalSwapClusterVldDone/63 Fee_JobInternalSwapClusterVldDone/63 
  Calls: 
Fee_GetBlockIndex/34 (Fee_GetBlockIndex) @06f5d8c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_BlockConfig/100 (read)Fee_BlockConfig/100 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScanBlockHdrParse/54 Fee_EraseImmediateBlock/91 Fee_InvalidateBlock/89 Fee_Write/85 Fee_Read/84 
  Calls: 
Fee_SerializeClusterHdr/33 (Fee_SerializeClusterHdr) @06f5d700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScanClusterFmt/50 Fee_JobInternalSwapClusterFmt/43 
  Calls: 
Fee_DeserializeClusterHdr/32 (Fee_DeserializeClusterHdr) @06f5d540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScanClusterHdrParse/58 
  Calls: Fee_DeserializeFlag/30 Fee_DeserializeFlag/30 Fee_BlankCheck/29 
Fee_DeserializeBlockHdr/31 (Fee_DeserializeBlockHdr) @06f5d380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobInternalScanBlockHdrParse/54 
  Calls: Fee_DeserializeFlag/30 Fee_DeserializeFlag/30 Fee_BlankCheck/29 Fee_BlankCheck/29 
Fee_DeserializeFlag/30 (Fee_DeserializeFlag) @06f5d1c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_DeserializeClusterHdr/32 Fee_DeserializeClusterHdr/32 Fee_DeserializeBlockHdr/31 Fee_DeserializeBlockHdr/31 
  Calls: Fee_BlankCheck/29 
Fee_BlankCheck/29 (Fee_BlankCheck) @06f5d000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_DeserializeClusterHdr/32 Fee_DeserializeFlag/30 Fee_DeserializeBlockHdr/31 Fee_DeserializeBlockHdr/31 
  Calls: 
Fee_SerializeBlockHdr/28 (Fee_SerializeBlockHdr) @06f59e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobWriteHdr/64 Fee_JobInternalSwapBlock/42 
  Calls: 
Fee_GetBlockClusterGrp/27 (Fee_GetBlockClusterGrp) @06f59c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_BlockConfig/100 (read)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Fee_JobErrorSchedule/77 Fee_ReservedAreaWritable/76 Fee_JobInternalSwapBlock/42 Fee_JobInternalSwapClusterVldDone/63 
  Calls: 
Fee_JobScheduleLookupTable/26 (Fee_JobScheduleLookupTable) @06e9fee8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: Fee_JobReadBlock/59 (addr)Fee_JobWriteBlock/66 (addr)Fee_JobWriteBlockData/65 (addr)Fee_JobWriteBlockUnalignedData/67 (addr)Fee_JobWriteBlockValidate/68 (addr)Fee_JobWriteBlockDone/70 (addr)Fee_JobInvalidateBlock/71 (addr)Fee_JobInvalidateBlockDone/72 (addr)Fee_JobEraseImmediateBlock/73 (addr)Fee_JobInternalScan/56 (addr)Fee_JobInternalScanCluster/49 (addr)Fee_JobInternalScanClusterHdrParse_Wrapper/21 (addr)Fee_JobInternalScanClusterFmt/50 (addr)Fee_JobInternalScanClusterFmtDone/51 (addr)Fee_JobInternalScanBlockHdrParse_Wrapper/22 (addr)Fee_JobInternalSwapClusterFmt/43 (addr)Fee_JobInternalSwapBlock/42 (addr)Fee_JobInternalSwapDataRead_Wrapper/23 (addr)Fee_JobInternalSwapDataWrite_Wrapper/24 (addr)Fee_JobInternalSwapClusterVldDone/63 (addr)Fee_JobSystemDone/25 (addr)Fee_JobSetModeTransfer/69 (addr)
  Referring: Fee_JobSchedule/74 (read)
  Availability: available
  Varpool flags: initialized
Fee_JobSystemDone/25 (Fee_JobSystemDone) @06f59540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
Fee_JobInternalSwapDataWrite_Wrapper/24 (Fee_JobInternalSwapDataWrite_Wrapper) @06f59380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_JobInternalSwapDataWrite/62 
Fee_JobInternalSwapDataRead_Wrapper/23 (Fee_JobInternalSwapDataRead_Wrapper) @06f591c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_JobInternalSwapDataRead/61 
Fee_JobInternalScanBlockHdrParse_Wrapper/22 (Fee_JobInternalScanBlockHdrParse_Wrapper) @06f59000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_JobInternalScanBlockHdrParse/54 
Fee_JobInternalScanClusterHdrParse_Wrapper/21 (Fee_JobInternalScanClusterHdrParse_Wrapper) @06ecde00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Fee_JobScheduleLookupTable/26 (addr)
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Fee_JobInternalScanClusterHdrParse/58 
Fee_aClrGrpInfo/20 (Fee_aClrGrpInfo) @06e9fcf0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Init/82 (write)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapClusterFmt/43 (read)Fee_JobInternalScanBlockHdrParse/54 (write)Fee_JobInternalScanBlockHdrParse/54 (write)Fee_JobInternalScanBlockHdrParse/54 (write)Fee_IsBlockMatchedConfig/52 (read)Fee_IsBlockMatchedConfig/52 (read)Fee_UpdateBlockRuntimeInfo/53 (write)Fee_JobInternalScanClusterFmtDone/51 (write)Fee_JobInternalScanClusterFmtDone/51 (write)Fee_JobInternalScanClusterFmtDone/51 (write)Fee_JobInternalScanClusterFmtDone/51 (write)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrParse/58 (write)Fee_JobInternalScanClusterHdrParse/58 (write)Fee_JobInternalScanCluster/49 (read)Fee_JobInternalScanCluster/49 (read)Fee_JobInternalScanCluster/49 (write)Fee_JobInternalScanCluster/49 (write)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_JobInternalSwap/46 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (write)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (write)Fee_JobWriteBlockData/65 (read)Fee_JobWriteHdr/64 (read)Fee_JobWriteHdr/64 (read)Fee_JobErrorSchedule/77 (read)Fee_JobErrorSchedule/77 (write)Fee_GetRunTimeInfo/95 (read)Fee_GetRunTimeInfo/95 (read)Fee_GetRunTimeInfo/95 (read)Fee_GetRunTimeInfo/95 (read)Fee_ForceSwapOnNextWrite/96 (read)Fee_ForceSwapOnNextWrite/96 (write)
  Availability: available
  Varpool flags:
Fee_aBlockInfo/19 (Fee_aBlockInfo) @06e9fca8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Init/82 (write)Fee_Init/82 (write)Fee_Init/82 (write)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapDataRead/61 (write)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_UpdateBlockRuntimeInfo/53 (write)Fee_UpdateBlockRuntimeInfo/53 (write)Fee_UpdateBlockRuntimeInfo/53 (write)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_JobInvalidateBlockDone/72 (write)Fee_JobInvalidateBlock/71 (read)Fee_JobInvalidateBlock/71 (read)Fee_JobWriteBlockDone/70 (write)Fee_JobWriteBlockValidate/68 (read)Fee_JobWriteBlockUnalignedData/67 (read)Fee_JobWriteBlockData/65 (write)Fee_JobWriteBlockData/65 (write)Fee_JobWriteBlockData/65 (write)Fee_JobReadBlock/59 (read)Fee_JobReadBlock/59 (read)
  Availability: available
  Varpool flags:
Fee_uJobIntDataAddr/18 (Fee_uJobIntDataAddr) @06e9fc60
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (write)Fee_JobInternalSwapClusterFmt/43 (write)
  Availability: available
  Varpool flags:
Fee_uJobIntHdrAddr/17 (Fee_uJobIntHdrAddr) @06e9fc18
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_JobInternalSwapBlockVld/60 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (write)Fee_JobInternalSwapClusterFmt/43 (write)
  Availability: available
  Varpool flags:
Fee_uJobIntAddrIt/16 (Fee_uJobIntAddrIt) @06e9fbd0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_JobInternalSwapDataWrite/62 (read)Fee_JobInternalSwapDataWrite/62 (read)Fee_JobInternalSwapDataWrite/62 (write)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapBlock/42 (write)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_JobInternalScanBlockHdrParse/54 (write)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_JobInternalScanBlockHdrParse/54 (write)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_UpdateBlockRuntimeInfo/53 (read)Fee_JobInternalScanBlockHdrRead/47 (read)Fee_JobInternalScanCluster/49 (write)Fee_JobInternalScanCluster/49 (read)
  Availability: available
  Varpool flags:
Fee_uJobBlockLength/15 (Fee_uJobBlockLength) @06e9fb88
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Read/84 (write)Fee_JobInternalSwapDataWrite/62 (read)Fee_JobInternalSwapDataWrite/62 (read)Fee_JobInternalSwapDataRead/61 (write)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapDataRead/61 (write)Fee_JobInternalSwapDataRead/61 (read)Fee_JobReadBlock/59 (read)
  Availability: available
  Varpool flags:
Fee_uJobBlockOffset/14 (Fee_uJobBlockOffset) @06e9fb40
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Read/84 (write)Fee_JobReadBlock/59 (read)
  Availability: available
  Varpool flags:
Fee_eJobResult/13 (Fee_eJobResult) @06e9faf8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Init/82 (write)Fee_SetMode/83 (write)Fee_Read/84 (write)Fee_Write/85 (write)Fee_GetJobResult/88 (read)Fee_InvalidateBlock/89 (write)Fee_EraseImmediateBlock/91 (write)Fee_JobEndNotification/92 (read)Fee_JobEndNotification/92 (write)Fee_JobEndNotification/92 (write)Fee_JobEndNotification/92 (read)Fee_JobEndNotification/92 (read)Fee_JobErrorNotification/93 (read)Fee_JobErrorNotification/93 (read)Fee_JobErrorSchedule/77 (write)Fee_JobErrorSchedule/77 (write)Fee_JobErrorSchedule/77 (write)Fee_JobErrorSchedule/77 (write)Fee_JobErrorSchedule/77 (write)Fee_MainFunction/94 (read)Fee_MainFunction/94 (write)Fee_MainFunction/94 (read)Fee_MainFunction/94 (read)
  Availability: available
  Varpool flags: initialized
Fee_eModuleStatus/12 (Fee_eModuleStatus) @06e9fab0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Init/82 (read)Fee_SetMode/83 (read)Fee_SetMode/83 (read)Fee_Read/84 (read)Fee_Read/84 (read)Fee_Read/84 (write)Fee_Write/85 (read)Fee_Write/85 (read)Fee_Write/85 (write)Fee_GetStatus/87 (read)Fee_GetJobResult/88 (read)Fee_InvalidateBlock/89 (read)Fee_InvalidateBlock/89 (read)Fee_InvalidateBlock/89 (write)Fee_EraseImmediateBlock/91 (read)Fee_EraseImmediateBlock/91 (read)Fee_EraseImmediateBlock/91 (write)Fee_JobEndNotification/92 (read)Fee_JobEndNotification/92 (write)Fee_JobEndNotification/92 (write)Fee_JobEndNotification/92 (write)Fee_JobSetModeTransfer/69 (write)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobErrorNotification/93 (read)Fee_JobErrorSchedule/77 (write)Fee_JobErrorSchedule/77 (write)Fee_MainFunction/94 (write)Fee_MainFunction/94 (write)Fee_GetRunTimeInfo/95 (read)Fee_GetRunTimeInfo/95 (read)Fee_ForceSwapOnNextWrite/96 (read)Fee_ForceSwapOnNextWrite/96 (read)
  Availability: available
  Varpool flags: initialized
Fee_eMode/11 (Fee_eMode) @06e9fa68
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_SetMode/83 (write)Fee_JobSetModeTransfer/69 (read)
  Availability: available
  Varpool flags: initialized
Fee_eJobIntOriginalJob/10 (Fee_eJobIntOriginalJob) @06e9fa20
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwap/46 (write)
  Availability: available
  Varpool flags: initialized
Fee_eJob/9 (Fee_eJob) @06e9f9d8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Init/82 (write)Fee_SetMode/83 (write)Fee_Read/84 (write)Fee_Write/85 (write)Fee_InvalidateBlock/89 (write)Fee_EraseImmediateBlock/91 (write)Fee_JobEndNotification/92 (read)Fee_JobEndNotification/92 (read)Fee_JobSchedule/74 (read)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobScheduleAfterSwapClusterVldDone/75 (read)Fee_JobInternalSwapDataWrite/62 (write)Fee_JobInternalSwapDataRead/61 (write)Fee_JobInternalSwapBlockVld/60 (write)Fee_JobInternalSwapBlock/42 (write)Fee_JobInternalSwapBlock/42 (write)Fee_JobInternalSwapClusterVld/41 (write)Fee_JobInternalSwapClusterFmt/43 (write)Fee_JobInternalScanBlockHdrRead/47 (write)Fee_JobInternalScanClusterFmt/50 (write)Fee_JobInternalScanClusterHdrRead/55 (write)Fee_JobInternalScanCluster/49 (write)Fee_JobInternalScanClusterErase/48 (write)Fee_JobEraseImmediateBlock/73 (write)Fee_JobInternalSwap/46 (read)Fee_JobInternalSwapClusterErase/44 (write)Fee_JobInvalidateBlockDone/72 (write)Fee_JobInvalidateBlock/71 (write)Fee_JobInvalidateBlock/71 (write)Fee_JobWriteBlockDone/70 (write)Fee_JobWriteBlockValidate/68 (write)Fee_JobWriteBlockUnalignedData/67 (write)Fee_JobWriteBlockData/65 (write)Fee_JobWriteBlockData/65 (write)Fee_JobWriteBlockData/65 (write)Fee_JobWriteBlock/66 (read)Fee_JobWriteBlock/66 (write)Fee_JobReadBlock/59 (write)Fee_JobErrorNotification/93 (read)Fee_JobErrorSchedule/77 (read)Fee_MainFunction/94 (read)
  Availability: available
  Varpool flags: initialized
Fee_uJobIntBlockIt/8 (Fee_uJobIntBlockIt) @06e9f990
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapDataRead/61 (write)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapDataRead/61 (write)Fee_JobInternalSwapDataRead/61 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (write)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapBlock/42 (write)Fee_JobInternalSwapClusterFmt/43 (write)
  Availability: available
  Varpool flags:
Fee_uJobBlockIndex/7 (Fee_uJobBlockIndex) @06e9f948
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Read/84 (write)Fee_Write/85 (write)Fee_InvalidateBlock/89 (write)Fee_EraseImmediateBlock/91 (write)Fee_JobInternalScanBlockHdrParse/54 (write)Fee_JobEraseImmediateBlock/73 (read)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_ReservedAreaWritable/76 (read)Fee_JobInvalidateBlockDone/72 (read)Fee_JobInvalidateBlock/71 (read)Fee_JobInvalidateBlock/71 (read)Fee_JobWriteBlockDone/70 (read)Fee_JobWriteBlockValidate/68 (read)Fee_JobWriteBlockUnalignedData/67 (read)Fee_JobWriteBlockUnalignedData/67 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteHdr/64 (read)Fee_JobWriteHdr/64 (read)Fee_JobWriteHdr/64 (read)Fee_JobWriteHdr/64 (read)Fee_JobReadBlock/59 (read)Fee_JobReadBlock/59 (read)Fee_JobErrorSchedule/77 (read)
  Availability: available
  Varpool flags:
Fee_uJobIntClrIt/6 (Fee_uJobIntClrIt) @06e9f900
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVld/41 (read)Fee_JobInternalSwapClusterFmt/43 (read)Fee_JobInternalSwapClusterFmt/43 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmt/50 (read)Fee_JobInternalScanClusterFmt/50 (read)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrDone/57 (read)Fee_JobInternalScanClusterHdrDone/57 (write)Fee_JobInternalScanClusterHdrDone/57 (read)Fee_JobInternalScanClusterHdrDone/57 (write)Fee_JobInternalScanClusterHdrRead/55 (read)Fee_JobInternalScanCluster/49 (write)Fee_JobInternalScanClusterErase/48 (read)Fee_JobInternalScan/56 (write)Fee_JobInternalSwap/46 (write)Fee_JobInternalSwapClusterErase/44 (read)
  Availability: available
  Varpool flags:
Fee_uJobIntClrGrpIt/5 (Fee_uJobIntClrGrpIt) @06e9f8b8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (read)Fee_JobInternalSwapClusterVldDone/63 (write)Fee_JobInternalSwapBlock/42 (read)Fee_JobInternalSwapClusterVld/41 (read)Fee_JobInternalSwapClusterFmt/43 (read)Fee_JobInternalSwapClusterFmt/43 (read)Fee_JobInternalSwapClusterFmt/43 (read)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_JobInternalScanBlockHdrParse/54 (write)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_IsBlockMatchedConfig/52 (read)Fee_IsBlockMatchedConfig/52 (read)Fee_IsBlockMatchedConfig/52 (read)Fee_UpdateBlockRuntimeInfo/53 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmtDone/51 (read)Fee_JobInternalScanClusterFmtDone/51 (write)Fee_JobInternalScanClusterFmt/50 (read)Fee_JobInternalScanClusterFmt/50 (read)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrParse/58 (read)Fee_JobInternalScanClusterHdrDone/57 (read)Fee_JobInternalScanClusterHdrDone/57 (read)Fee_JobInternalScanClusterHdrDone/57 (write)Fee_JobInternalScanClusterHdrDone/57 (read)Fee_JobInternalScanClusterHdrDone/57 (write)Fee_JobInternalScanClusterHdrRead/55 (read)Fee_JobInternalScanCluster/49 (read)Fee_JobInternalScanCluster/49 (read)Fee_JobInternalScanCluster/49 (read)Fee_JobInternalScanCluster/49 (read)Fee_JobInternalScanCluster/49 (read)Fee_JobInternalScanCluster/49 (read)Fee_JobInternalScanCluster/49 (read)Fee_JobInternalScanClusterErase/48 (read)Fee_JobInternalScan/56 (write)Fee_JobEraseImmediateBlock/73 (write)Fee_JobInternalSwap/46 (read)Fee_GetNextClusterToSwap/45 (read)Fee_JobInternalSwapClusterErase/44 (read)Fee_JobWriteHdr/64 (write)
  Availability: available
  Varpool flags:
Fee_aDataBuffer/4 (Fee_aDataBuffer) @06e9f870
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_JobInternalSwapDataWrite/62 (addr)Fee_JobInternalSwapDataRead/61 (addr)Fee_JobInternalSwapBlockVld/60 (addr)Fee_JobInternalSwapBlockVld/60 (addr)Fee_JobInternalSwapBlock/42 (addr)Fee_JobInternalSwapBlock/42 (addr)Fee_JobInternalSwapClusterVld/41 (addr)Fee_JobInternalSwapClusterVld/41 (addr)Fee_JobInternalSwapClusterFmt/43 (addr)Fee_JobInternalSwapClusterFmt/43 (addr)Fee_JobInternalScanBlockHdrParse/54 (addr)Fee_JobInternalScanBlockHdrRead/47 (addr)Fee_JobInternalScanClusterFmt/50 (addr)Fee_JobInternalScanClusterFmt/50 (addr)Fee_JobInternalScanClusterFmt/50 (addr)Fee_JobInternalScanClusterHdrParse/58 (addr)Fee_JobInternalScanClusterHdrRead/55 (addr)Fee_JobInvalidateBlock/71 (addr)Fee_JobInvalidateBlock/71 (addr)Fee_JobWriteBlockValidate/68 (addr)Fee_JobWriteBlockValidate/68 (addr)Fee_JobWriteBlockUnalignedData/67 (addr)Fee_JobWriteBlockUnalignedData/67 (addr)Fee_JobWriteBlockData/65 (addr)Fee_JobWriteBlockData/65 (addr)Fee_JobWriteHdr/64 (addr)Fee_JobWriteHdr/64 (addr)
  Availability: available
  Varpool flags: initialized
Fee_pJobWriteDataDestPtr/3 (Fee_pJobWriteDataDestPtr) @06e9f828
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Write/85 (write)Fee_JobWriteBlockUnalignedData/67 (read)Fee_JobWriteBlockData/65 (read)Fee_JobWriteBlockData/65 (read)
  Availability: available
  Varpool flags: initialized
Fee_pJobReadDataDestPtr/2 (Fee_pJobReadDataDestPtr) @06e9f7e0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_Read/84 (write)Fee_JobReadBlock/59 (read)
  Availability: available
  Varpool flags: initialized
bSwapToBePerformed/1 (bSwapToBePerformed) @06e9f798
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Fee_JobInternalScanBlockHdrParse/54 (write)Fee_JobInternalScanBlockHdrParse/54 (read)Fee_JobInternalScanBlockHdrParse/54 (write)Fee_JobInternalScanBlockHdrParse/54 (write)
  Availability: available
  Varpool flags:
Fee_ForceSwapOnNextWrite (uint8 ClrGrpIndex)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.10115;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.199_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.199_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 20, 1);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.200_2 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.200_2 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (21, 0, 20, 6);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (ClrGrpIndex != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 20, 11);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _3 = (int) ClrGrpIndex;
  _4 = Fee_aClrGrpInfo[_3].HdrAddrIt;
  _5 = (int) ClrGrpIndex;
  _6 = _4 + 192;
  Fee_aClrGrpInfo[_5].DataAddrIt = _6;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.10115 = RetVal;
  return D.10115;

}


Fee_GetRunTimeInfo (uint8 ClrGrpIndex, struct Fee_ClusterGroupRuntimeInfoType * ClrGrpRTInfo)
{
  uint8 ActiveClrIndex;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.197_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.197_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 19, 1);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ClrGrpRTInfo == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 19, 4);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.198_2 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.198_2 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (21, 0, 19, 6);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (ClrGrpIndex != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 19, 11);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _3 = (int) ClrGrpIndex;
  ActiveClrIndex = Fee_aClrGrpInfo[_3].ActClr;
  # DEBUG BEGIN_STMT
  _4 = Fee_GetClusterLength (ClrGrpIndex, ActiveClrIndex);
  ClrGrpRTInfo->ClusterTotalSpace = _4;
  # DEBUG BEGIN_STMT
  _5 = (int) ClrGrpIndex;
  _6 = Fee_aClrGrpInfo[_5].DataAddrIt;
  _7 = (int) ClrGrpIndex;
  _8 = Fee_aClrGrpInfo[_7].HdrAddrIt;
  _9 = _6 - _8;
  _10 = _9 + 4294967200;
  ClrGrpRTInfo->ClusterFreeSpace = _10;
  # DEBUG BEGIN_STMT
  ClrGrpRTInfo->BlockHeaderOverhead = 96;
  # DEBUG BEGIN_STMT
  ClrGrpRTInfo->VirtualPageSize = 32;
  # DEBUG BEGIN_STMT
  _11 = (int) ClrGrpIndex;
  _12 = Fee_aClrGrpInfo[_11].ActClrID;
  _13 = _12 + 4294967295;
  ClrGrpRTInfo->NumberOfSwap = _13;

  <bb 11> :
  # DEBUG BEGIN_STMT
  return;

}


Fee_MainFunction ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Fee_eJobResult.193_1 = Fee_eJobResult;
  if (Fee_eJobResult.193_1 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_eJob.194_2 = Fee_eJob;
  switch (Fee_eJob.194_2) <default: <L32> [INV], case 0 ... 1: <L1> [INV], case 6: <L1> [INV], case 8 ... 9: <L1> [INV], case 21: <L1> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _3 = Fee_JobSchedule ();
  Fee_eJobResult = _3;
  # DEBUG BEGIN_STMT

  <bb 5> :
<L32>:
  # DEBUG BEGIN_STMT
  Fee_eJobResult.195_4 = Fee_eJobResult;
  if (Fee_eJobResult.195_4 == 2)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_eJobResult.196_5 = Fee_eJobResult;
  if (Fee_eJobResult.196_5 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_JobEndNotification ();
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_JobErrorNotification ();

  <bb 9> :
  return;

}


Fee_JobErrorNotification ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.187_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.187_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  Fee_eJobResult.188_2 = Fee_eJobResult;
  if (Fee_eJobResult.188_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  Fee_eJob.189_3 = Fee_eJob;
  if (Fee_eJob.189_3 == 20)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 17, 1);
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_eJobResult.190_4 = Fee_eJobResult;
  if (Fee_eJobResult.190_4 == 3)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fee_JobErrorSchedule ();

  <bb 8> :
  return;

}


Fee_JobEndNotification ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.12_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.12_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  Fee_eJobResult.13_2 = Fee_eJobResult;
  if (Fee_eJobResult.13_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  Fee_eJob.14_3 = Fee_eJob;
  if (Fee_eJob.14_3 == 20)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 16, 1);
  goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_eJob.15_4 = Fee_eJob;
  if (Fee_eJob.15_4 == 20)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _5 = Fls_GetJobResult ();
  Fee_eJobResult = _5;
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_JobEndNotification ();
  goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = Fee_JobSchedule ();
  Fee_eJobResult = _6;
  # DEBUG BEGIN_STMT
  Fee_eJobResult.16_7 = Fee_eJobResult;
  if (Fee_eJobResult.16_7 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_JobEndNotification ();
  goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Fee_eJobResult.17_8 = Fee_eJobResult;
  if (Fee_eJobResult.17_8 == 2)
    goto <bb 12>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_JobErrorNotification ();

  <bb 12> :
  return;

}


Fee_EraseImmediateBlock (uint16 BlockNumber)
{
  uint16 BlockIndex;
  Std_ReturnType RetVal;
  Std_ReturnType D.9703;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BlockIndex = Fee_GetBlockIndex (BlockNumber);
  # DEBUG BEGIN_STMT
  SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_03 ();
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.10_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.10_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 9, 1);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (BlockIndex == 65535)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 9, 2);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = (int) BlockIndex;
  _3 = Fee_BlockConfig[_2].ImmediateData;
  if (_3 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 9, 2);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.11_4 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.11_4 == 2)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (21, 0, 9, 6);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex = BlockIndex;
  # DEBUG BEGIN_STMT
  Fee_eJob = 8;
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 2;
  # DEBUG BEGIN_STMT
  Fee_eJobResult = 2;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 11> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_03 ();
  # DEBUG BEGIN_STMT
  D.9703 = RetVal;
  return D.9703;

}


Fee_GetVersionInfo (struct Std_VersionInfoType * VersionInfoPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  if (VersionInfoPtr == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 8, 4);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  VersionInfoPtr->moduleID = 21;
  # DEBUG BEGIN_STMT
  VersionInfoPtr->vendorID = 43;
  # DEBUG BEGIN_STMT
  VersionInfoPtr->sw_major_version = 2;
  # DEBUG BEGIN_STMT
  VersionInfoPtr->sw_minor_version = 0;
  # DEBUG BEGIN_STMT
  VersionInfoPtr->sw_patch_version = 1;

  <bb 5> :
  return;

}


Fee_InvalidateBlock (uint16 BlockNumber)
{
  uint16 BlockIndex;
  Std_ReturnType RetVal;
  Std_ReturnType D.9686;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  BlockIndex = Fee_GetBlockIndex (BlockNumber);
  # DEBUG BEGIN_STMT
  SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_02 ();
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.8_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.8_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 7, 1);
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (BlockIndex == 65535)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 7, 2);
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.9_2 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.9_2 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (21, 0, 7, 6);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex = BlockIndex;
  # DEBUG BEGIN_STMT
  Fee_eJob = 6;
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 2;
  # DEBUG BEGIN_STMT
  Fee_eJobResult = 2;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_02 ();
  # DEBUG BEGIN_STMT
  D.9686 = RetVal;
  return D.9686;

}


Fee_GetJobResult ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9675;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = Fee_eJobResult;
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.7_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.7_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 6, 1);
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.9675 = RetVal;
  return D.9675;

}


Fee_GetStatus ()
{
  MemIf_StatusType D.9671;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.9671 = Fee_eModuleStatus;
  return D.9671;

}


Fee_Cancel ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 4, 10);
  return;

}


Fee_Write (uint16 BlockNumber, const uint8 * DataBufferPtr)
{
  uint16 BlockIndex;
  Std_ReturnType RetVal;
  Std_ReturnType D.9669;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  BlockIndex = Fee_GetBlockIndex (BlockNumber);
  # DEBUG BEGIN_STMT
  SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_01 ();
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.5_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.5_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 3, 1);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.6_2 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.6_2 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (21, 0, 3, 6);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (BlockIndex == 65535)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 3, 2);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (DataBufferPtr == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 3, 4);
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex = BlockIndex;
  # DEBUG BEGIN_STMT
  Fee_pJobWriteDataDestPtr = DataBufferPtr;
  # DEBUG BEGIN_STMT
  Fee_eJob = 1;
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 2;
  # DEBUG BEGIN_STMT
  Fee_eJobResult = 2;

  <bb 11> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_01 ();
  # DEBUG BEGIN_STMT
  D.9669 = RetVal;
  return D.9669;

}


Fee_Read (uint16 BlockNumber, uint16 BlockOffset, uint8 * DataBufferPtr, uint16 Length)
{
  uint16 BlockIndex;
  boolean bCheck;
  Std_ReturnType RetVal;
  Std_ReturnType D.9647;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  bCheck = 0;
  # DEBUG BEGIN_STMT
  BlockIndex = Fee_GetBlockIndex (BlockNumber);
  # DEBUG BEGIN_STMT
  SchM_Enter_Fee_FEE_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.3_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.3_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 2, 1);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.4_2 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.4_2 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (21, 0, 2, 6);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (BlockIndex == 65535)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 2, 2);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _3 = (int) BlockIndex;
  _4 = Fee_BlockConfig[_3].BlockSize;
  if (BlockOffset >= _4)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 2, 3);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  bCheck = 1;

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (bCheck == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (Length == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _5 = (int) BlockOffset;
  _6 = (int) Length;
  _7 = _5 + _6;
  _8 = (int) BlockIndex;
  _9 = Fee_BlockConfig[_8].BlockSize;
  _10 = (int) _9;
  if (_7 > _10)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 2, 5);
  goto <bb 18>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (DataBufferPtr == 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 2, 4);
  goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex = BlockIndex;
  # DEBUG BEGIN_STMT
  _11 = (long unsigned int) BlockOffset;
  Fee_uJobBlockOffset = _11;
  # DEBUG BEGIN_STMT
  _12 = (long unsigned int) Length;
  Fee_uJobBlockLength = _12;
  # DEBUG BEGIN_STMT
  Fee_pJobReadDataDestPtr = DataBufferPtr;
  # DEBUG BEGIN_STMT
  Fee_eJob = 0;
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 2;
  # DEBUG BEGIN_STMT
  Fee_eJobResult = 2;
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 18> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Fee_FEE_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  D.9647 = RetVal;
  return D.9647;

}


Fee_SetMode (MemIf_ModeType Mode)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.1_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.1_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 1, 1);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.2_2 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.2_2 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (21, 0, 1, 6);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 21;
  # DEBUG BEGIN_STMT
  Fee_eMode = Mode;
  # DEBUG BEGIN_STMT
  Fee_eJobResult = 2;

  <bb 7> :
  return;

}


Fee_Init (const struct Fee_ConfigType * ConfigPtr)
{
  uint32 InvalIndex;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ConfigPtr != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (21, 0, 0, 9);
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus.0_1 = Fee_eModuleStatus;
  if (Fee_eModuleStatus.0_1 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (21, 0, 0, 6);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  InvalIndex = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fee_aBlockInfo[InvalIndex].BlockStatus = 1;
  # DEBUG BEGIN_STMT
  Fee_aBlockInfo[InvalIndex].DataAddr = 0;
  # DEBUG BEGIN_STMT
  Fee_aBlockInfo[InvalIndex].InvalidAddr = 0;
  # DEBUG BEGIN_STMT
  InvalIndex = InvalIndex + 1;

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (InvalIndex <= 10)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  InvalIndex = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Fee_aClrGrpInfo[InvalIndex].ActClrID = 0;
  # DEBUG BEGIN_STMT
  InvalIndex = InvalIndex + 1;

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (InvalIndex == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 9;
  # DEBUG BEGIN_STMT
  Fee_eJobResult = 2;

  <bb 13> :
  return;

}


Fee_GetClusterLength (uint8 ClrGrpIt, uint8 ClrIt)
{
  Fls_LengthType D.9745;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) ClrGrpIt;
  _2 = Fee_ClrGrps[_1].ClrPtr;
  _3 = (unsigned int) ClrIt;
  _4 = _3 * 8;
  _5 = _2 + _4;
  D.9745 = _5->Length;
  return D.9745;

}


Fee_EraseCluster (uint8 ClrGrpIt, uint8 ClrIt)
{
  Fls_LengthType ClusterLength;
  Fls_AddressType clusterAddress;
  Std_ReturnType D.9980;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) ClrGrpIt;
  _2 = Fee_ClrGrps[_1].ClrPtr;
  _3 = (unsigned int) ClrIt;
  _4 = _3 * 8;
  _5 = _2 + _4;
  clusterAddress = _5->StartAddr;
  # DEBUG BEGIN_STMT
  ClusterLength = Fee_GetClusterLength (ClrGrpIt, ClrIt);
  # DEBUG BEGIN_STMT
  D.9980 = Fls_Erase (clusterAddress, ClusterLength);
  return D.9980;

}


Fee_WriteToFls (Fls_AddressType TargetAddress, const uint8 * SourceAddressPtr, Fls_LengthType Length)
{
  Std_ReturnType D.9769;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.9769 = Fls_Write (TargetAddress, SourceAddressPtr, Length);
  return D.9769;

}


Fee_ReadFromFls (Fls_AddressType SourceAddress, uint8 * TargetAddressPtr, Fls_LengthType Length)
{
  Std_ReturnType D.9790;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.9790 = Fls_Read (SourceAddress, TargetAddressPtr, Length);
  return D.9790;

}


Fee_JobErrorSchedule ()
{
  uint8 ClrGrpIndex;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_eJob.191_1 = Fee_eJob;
  switch (Fee_eJob.191_1) <default: <L9> [INV], case 1 ... 5: <L3> [INV], case 8: <L3> [INV], case 11: <L1> [INV], case 14: <L0> [INV], case 18: <L2> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _2 = Fee_JobInternalScanBlockHdrParse (0);
  Fee_eJobResult = _2;
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _3 = Fee_JobInternalScanClusterHdrParse (0);
  Fee_eJobResult = _3;
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  _4 = Fee_JobInternalSwapDataWrite (0);
  Fee_eJobResult = _4;
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.192_5 = Fee_uJobBlockIndex;
  ClrGrpIndex = Fee_GetBlockClusterGrp (Fee_uJobBlockIndex.192_5);
  # DEBUG BEGIN_STMT
  _6 = (int) ClrGrpIndex;
  _7 = Fee_aClrGrpInfo[_6].HdrAddrIt;
  _8 = (int) ClrGrpIndex;
  _9 = _7 + 192;
  Fee_aClrGrpInfo[_8].DataAddrIt = _9;
  # DEBUG BEGIN_STMT
  _10 = Fls_GetJobResult ();
  Fee_eJobResult = _10;
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_JobErrorNotification ();
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 7> :
<L9>:
  # DEBUG BEGIN_STMT
  _11 = Fls_GetJobResult ();
  Fee_eJobResult = _11;
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_JobErrorNotification ();
  # DEBUG BEGIN_STMT

  <bb 8> :
  return;

}


Fee_ReservedAreaWritable ()
{
  boolean ImmediateData;
  uint32 ReservedSpace;
  uint8 ClrGrpIndex;
  Fls_LengthType AvailClrSpace;
  uint16 AlignedBlockSize;
  uint16 BlockSize;
  boolean RetVal;
  boolean D.10003;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.149_1 = Fee_uJobBlockIndex;
  ClrGrpIndex = Fee_GetBlockClusterGrp (Fee_uJobBlockIndex.149_1);
  # DEBUG BEGIN_STMT
  _2 = (int) ClrGrpIndex;
  ReservedSpace = Fee_ClrGrps[_2].ReservedSize;
  # DEBUG BEGIN_STMT
  _3 = (int) ClrGrpIndex;
  _4 = Fee_aClrGrpInfo[_3].DataAddrIt;
  _5 = (int) ClrGrpIndex;
  _6 = Fee_aClrGrpInfo[_5].HdrAddrIt;
  AvailClrSpace = _4 - _6;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.150_7 = Fee_uJobBlockIndex;
  BlockSize = Fee_GetBlockSize (Fee_uJobBlockIndex.150_7);
  # DEBUG BEGIN_STMT
  AlignedBlockSize = Fee_AlignToVirtualPageSize (BlockSize);
  # DEBUG BEGIN_STMT
  _8 = (long unsigned int) AlignedBlockSize;
  _9 = _8 + 192;
  if (AvailClrSpace < _9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _10 = (long unsigned int) AlignedBlockSize;
  _11 = ReservedSpace + _10;
  _12 = _11 + 192;
  if (AvailClrSpace < _12)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.151_13 = Fee_uJobBlockIndex;
  ImmediateData = Fee_GetBlockImmediate (Fee_uJobBlockIndex.151_13);
  # DEBUG BEGIN_STMT
  if (ImmediateData == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.152_14 = Fee_uJobBlockIndex;
  _15 = (int) Fee_uJobBlockIndex.152_14;
  _16 = Fee_aBlockInfo[_15].DataAddr;
  if (_16 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Fee_uJobBlockIndex.153_17 = Fee_uJobBlockIndex;
  _18 = (int) Fee_uJobBlockIndex.153_17;
  _19 = Fee_aBlockInfo[_18].InvalidAddr;
  if (_19 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _20 = ReservedSpace + 96;
  Fee_uJobBlockIndex.154_21 = Fee_uJobBlockIndex;
  _22 = (int) Fee_uJobBlockIndex.154_21;
  _23 = Fee_aBlockInfo[_22].DataAddr;
  Fee_uJobBlockIndex.155_24 = Fee_uJobBlockIndex;
  _25 = (int) Fee_uJobBlockIndex.155_24;
  _26 = Fee_aBlockInfo[_25].InvalidAddr;
  _27 = _23 - _26;
  _28 = _27 + 4294967264;
  if (_20 <= _28)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 13>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 13> :
  # DEBUG BEGIN_STMT
  D.10003 = RetVal;
  return D.10003;

}


Fee_JobScheduleAfterSwapClusterVldDone ()
{
  MemIf_JobResultType eRetVal;
  MemIf_JobResultType D.9756;

  <bb 2> :
  # DEBUG BEGIN_STMT
  eRetVal = 1;
  # DEBUG BEGIN_STMT
  Fee_eJob.35_1 = Fee_eJob;
  switch (Fee_eJob.35_1) <default: <L5> [INV], case 1: <L0> [INV], case 8: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  eRetVal = Fee_JobWriteBlock ();
  # DEBUG BEGIN_STMT
  goto <bb 5>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  eRetVal = Fee_JobEraseImmediateBlock ();
  # DEBUG BEGIN_STMT

  <bb 5> :
<L5>:
  # DEBUG BEGIN_STMT
  D.9756 = eRetVal;
  return D.9756;

}


Fee_JobSchedule ()
{
  MemIf_JobResultType D.9719;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Fee_eJob.18_1 = Fee_eJob;
  _2 = Fee_JobScheduleLookupTable[Fee_eJob.18_1];
  D.9719 = _2 ();
  return D.9719;

}


Fee_JobEraseImmediateBlock ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9987;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  _1 = Fee_ReservedAreaWritable ();
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.148_2 = Fee_uJobBlockIndex;
  _3 = (int) Fee_uJobBlockIndex.148_2;
  _4 = Fee_BlockConfig[_3].ClrGrp;
  Fee_uJobIntClrGrpIt = _4;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalSwap ();
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 20;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.9987 = RetVal;
  return D.9987;

}


Fee_JobInvalidateBlockDone ()
{
  MemIf_JobResultType D.10016;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.162_1 = Fee_uJobBlockIndex;
  _2 = (int) Fee_uJobBlockIndex.162_1;
  Fee_aBlockInfo[_2].BlockStatus = 1;
  # DEBUG BEGIN_STMT
  Fee_eJob = 20;
  # DEBUG BEGIN_STMT
  D.10016 = 0;
  return D.10016;

}


Fee_JobInvalidateBlock ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.10024;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.163_1 = Fee_uJobBlockIndex;
  _2 = (int) Fee_uJobBlockIndex.163_1;
  _3 = Fee_aBlockInfo[_2].BlockStatus;
  if (_3 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 20;
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_SerializeFlag (&Fee_aDataBuffer, 24);
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.164_4 = Fee_uJobBlockIndex;
  _5 = (int) Fee_uJobBlockIndex.164_4;
  _6 = Fee_aBlockInfo[_5].InvalidAddr;
  _7 = Fee_WriteToFls (_6, &Fee_aDataBuffer, 32);
  if (_7 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 7;

  <bb 8> :
  # DEBUG BEGIN_STMT
  D.10024 = RetVal;
  return D.10024;

}


Fee_JobWriteBlockDone ()
{
  MemIf_JobResultType D.10026;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.165_1 = Fee_uJobBlockIndex;
  _2 = (int) Fee_uJobBlockIndex.165_1;
  Fee_aBlockInfo[_2].BlockStatus = 0;
  # DEBUG BEGIN_STMT
  Fee_eJob = 20;
  # DEBUG BEGIN_STMT
  D.10026 = 0;
  return D.10026;

}


Fee_JobSetModeTransfer ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9724;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  _1 = Fls_GetStatus ();
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 2;
  # DEBUG BEGIN_STMT
  Fee_eMode.19_2 = Fee_eMode;
  Fls_SetMode (Fee_eMode.19_2);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  Det_ASR43_ReportRuntimeError (21, 0, 1, 6);

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.9724 = RetVal;
  return D.9724;

}


Fee_JobWriteBlockValidate ()
{
  Fls_AddressType HdrAddr;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.10031;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_SerializeFlag (&Fee_aDataBuffer, 129);
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.166_1 = Fee_uJobBlockIndex;
  _2 = (int) Fee_uJobBlockIndex.166_1;
  _3 = Fee_aBlockInfo[_2].InvalidAddr;
  HdrAddr = _3 + 4294967264;
  # DEBUG BEGIN_STMT
  _4 = Fee_WriteToFls (HdrAddr, &Fee_aDataBuffer, 32);
  if (_4 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 5;
  # DEBUG BEGIN_STMT
  D.10031 = RetVal;
  return D.10031;

}


Fee_JobWriteBlockUnalignedData ()
{
  uint16 BlockSize;
  uint16 WriteLength;
  uint16 WriteOffset;
  Fls_AddressType DataAddr;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.10036;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.167_1 = Fee_uJobBlockIndex;
  _2 = (int) Fee_uJobBlockIndex.167_1;
  BlockSize = Fee_BlockConfig[_2].BlockSize;
  # DEBUG BEGIN_STMT
  _3 = BlockSize / 32;
  WriteOffset = _3 * 32;
  # DEBUG BEGIN_STMT
  WriteLength = BlockSize & 31;
  # DEBUG BEGIN_STMT
  Fee_pJobWriteDataDestPtr.168_4 = Fee_pJobWriteDataDestPtr;
  _5 = (sizetype) WriteOffset;
  _6 = Fee_pJobWriteDataDestPtr.168_4 + _5;
  Fee_CopyDataToPageBuffer (_6, &Fee_aDataBuffer, WriteLength);
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.169_7 = Fee_uJobBlockIndex;
  _8 = (int) Fee_uJobBlockIndex.169_7;
  DataAddr = Fee_aBlockInfo[_8].DataAddr;
  # DEBUG BEGIN_STMT
  _9 = (long unsigned int) WriteOffset;
  _10 = DataAddr + _9;
  _11 = Fee_WriteToFls (_10, &Fee_aDataBuffer, 32);
  if (_11 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 4;
  # DEBUG BEGIN_STMT
  D.10036 = RetVal;
  return D.10036;

}


Fee_JobWriteBlock ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.10052;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobWriteHdr ();
  # DEBUG BEGIN_STMT
  Fee_eJob.177_1 = Fee_eJob;
  if (Fee_eJob.177_1 == 15)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 2;

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.10052 = RetVal;
  return D.10052;

}


Fee_JobWriteBlockData ()
{
  uint8 ClrGrpIndex;
  Fls_AddressType HdrAddr;
  const uint8 * WriteDataPtr;
  uint8 ClrGrp;
  Fls_LengthType WriteLength;
  uint16 AlignedBlockSize;
  uint16 BlockSize;
  MemIf_JobResultType RetVal;
  Fls_AddressType DataAddr;
  MemIf_JobResultType D.10047;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.170_1 = Fee_uJobBlockIndex;
  _2 = (int) Fee_uJobBlockIndex.170_1;
  BlockSize = Fee_BlockConfig[_2].BlockSize;
  # DEBUG BEGIN_STMT
  AlignedBlockSize = Fee_AlignToVirtualPageSize (BlockSize);
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.171_3 = Fee_uJobBlockIndex;
  _4 = (int) Fee_uJobBlockIndex.171_3;
  ClrGrpIndex = Fee_BlockConfig[_4].ClrGrp;
  # DEBUG BEGIN_STMT
  _5 = (int) ClrGrpIndex;
  _6 = Fee_aClrGrpInfo[_5].DataAddrIt;
  _7 = (long unsigned int) AlignedBlockSize;
  DataAddr = _6 - _7;
  # DEBUG BEGIN_STMT
  _8 = (int) ClrGrpIndex;
  HdrAddr = Fee_aClrGrpInfo[_8].HdrAddrIt;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.172_9 = Fee_uJobBlockIndex;
  _10 = (int) Fee_uJobBlockIndex.172_9;
  Fee_aBlockInfo[_10].DataAddr = DataAddr;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.173_11 = Fee_uJobBlockIndex;
  _12 = (int) Fee_uJobBlockIndex.173_11;
  _13 = HdrAddr + 64;
  Fee_aBlockInfo[_12].InvalidAddr = _13;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.174_14 = Fee_uJobBlockIndex;
  _15 = (int) Fee_uJobBlockIndex.174_14;
  Fee_aBlockInfo[_15].BlockStatus = 2;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.175_16 = Fee_uJobBlockIndex;
  _17 = (int) Fee_uJobBlockIndex.175_16;
  ClrGrp = Fee_BlockConfig[_17].ClrGrp;
  # DEBUG BEGIN_STMT
  _18 = (int) ClrGrp;
  _19 = Fee_aClrGrpInfo[_18].HdrAddrIt;
  _20 = (int) ClrGrp;
  _21 = _19 + 96;
  Fee_aClrGrpInfo[_20].HdrAddrIt = _21;
  # DEBUG BEGIN_STMT
  _22 = (int) ClrGrp;
  _23 = Fee_aClrGrpInfo[_22].DataAddrIt;
  _24 = (long unsigned int) AlignedBlockSize;
  _25 = (int) ClrGrp;
  _26 = _23 - _24;
  Fee_aClrGrpInfo[_25].DataAddrIt = _26;
  # DEBUG BEGIN_STMT
  if (BlockSize <= 31)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_pJobWriteDataDestPtr.176_27 = Fee_pJobWriteDataDestPtr;
  Fee_CopyDataToPageBuffer (Fee_pJobWriteDataDestPtr.176_27, &Fee_aDataBuffer, BlockSize);
  # DEBUG BEGIN_STMT
  WriteDataPtr = &Fee_aDataBuffer;
  # DEBUG BEGIN_STMT
  WriteLength = 32;
  # DEBUG BEGIN_STMT
  Fee_eJob = 4;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  WriteDataPtr = Fee_pJobWriteDataDestPtr;
  # DEBUG BEGIN_STMT
  if (AlignedBlockSize == BlockSize)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  WriteLength = (Fls_LengthType) BlockSize;
  # DEBUG BEGIN_STMT
  Fee_eJob = 4;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _28 = (long unsigned int) AlignedBlockSize;
  WriteLength = _28 + 4294967264;
  # DEBUG BEGIN_STMT
  Fee_eJob = 3;

  <bb 7> :
  # DEBUG BEGIN_STMT
  _29 = (int) ClrGrp;
  DataAddr = Fee_aClrGrpInfo[_29].DataAddrIt;
  # DEBUG BEGIN_STMT
  _30 = Fee_WriteToFls (DataAddr, WriteDataPtr, WriteLength);
  if (_30 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 10> :
  # DEBUG BEGIN_STMT
  D.10047 = RetVal;
  return D.10047;

}


Fee_JobWriteHdr ()
{
  Fls_AddressType HdrAddr;
  Fls_AddressType DataAddr;
  uint8 ClrGrpIndex;
  uint16 AlignedBlockSize;
  struct Fee_BlockType BlockHder;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.10060;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.178_1 = Fee_uJobBlockIndex;
  _2 = (int) Fee_uJobBlockIndex.178_1;
  ClrGrpIndex = Fee_BlockConfig[_2].ClrGrp;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.179_3 = Fee_uJobBlockIndex;
  _4 = (int) Fee_uJobBlockIndex.179_3;
  _5 = Fee_BlockConfig[_4].BlockSize;
  BlockHder.Length = _5;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.180_6 = Fee_uJobBlockIndex;
  _7 = (int) Fee_uJobBlockIndex.180_6;
  _8 = Fee_BlockConfig[_7].BlockNumber;
  BlockHder.BlockNumber = _8;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.181_9 = Fee_uJobBlockIndex;
  _10 = (int) Fee_uJobBlockIndex.181_9;
  _11 = Fee_BlockConfig[_10].ImmediateData;
  BlockHder.ImmediateBlock = _11;
  # DEBUG BEGIN_STMT
  _12 = BlockHder.Length;
  AlignedBlockSize = Fee_AlignToVirtualPageSize (_12);
  # DEBUG BEGIN_STMT
  _13 = Fee_ReservedAreaWritable ();
  if (_13 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt = ClrGrpIndex;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalSwap ();
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _14 = (int) ClrGrpIndex;
  _15 = Fee_aClrGrpInfo[_14].DataAddrIt;
  _16 = (long unsigned int) AlignedBlockSize;
  DataAddr = _15 - _16;
  # DEBUG BEGIN_STMT
  _17 = (int) ClrGrpIndex;
  HdrAddr = Fee_aClrGrpInfo[_17].HdrAddrIt;
  # DEBUG BEGIN_STMT
  Fee_SerializeBlockHdr (&BlockHder, DataAddr, &Fee_aDataBuffer);
  # DEBUG BEGIN_STMT
  _18 = Fee_WriteToFls (HdrAddr, &Fee_aDataBuffer, 32);
  if (_18 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 2;

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.10060 = RetVal;
  BlockHder = {CLOBBER};
  return D.10060;

}


Fee_JobInternalSwapClusterVldDone ()
{
  uint8 BlockClusterGrp;
  uint16 AlignedBlockSize;
  uint16 BlockSize;
  Fls_AddressType DataAddrIt;
  Fls_AddressType HdrAddrIt;
  uint16 BlockIt;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9743;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.20_1 = Fee_uJobIntClrGrpIt;
  _2 = (int) Fee_uJobIntClrGrpIt.20_1;
  _3 = Fee_ClrGrps[_2].ClrPtr;
  Fee_uJobIntClrIt.21_4 = Fee_uJobIntClrIt;
  _5 = (unsigned int) Fee_uJobIntClrIt.21_4;
  _6 = _5 * 8;
  _7 = _3 + _6;
  HdrAddrIt = _7->StartAddr;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.22_8 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrIt.23_9 = Fee_uJobIntClrIt;
  _10 = Fee_GetClusterLength (Fee_uJobIntClrGrpIt.22_8, Fee_uJobIntClrIt.23_9);
  DataAddrIt = HdrAddrIt + _10;
  # DEBUG BEGIN_STMT
  HdrAddrIt = HdrAddrIt + 96;
  # DEBUG BEGIN_STMT
  BlockIt = 0;
  goto <bb 15>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  BlockClusterGrp = Fee_GetBlockClusterGrp (BlockIt);
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.24_11 = Fee_uJobIntClrGrpIt;
  if (BlockClusterGrp == Fee_uJobIntClrGrpIt.24_11)
    goto <bb 4>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _12 = (int) BlockIt;
  _13 = Fee_aBlockInfo[_12].BlockStatus;
  if (_13 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _14 = (int) BlockIt;
  _15 = Fee_aBlockInfo[_14].BlockStatus;
  if (_15 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _16 = (int) BlockIt;
  _17 = Fee_aBlockInfo[_16].BlockStatus;
  if (_17 == 6)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _18 = (int) BlockIt;
  _19 = HdrAddrIt + 64;
  Fee_aBlockInfo[_18].InvalidAddr = _19;
  # DEBUG BEGIN_STMT
  _20 = (int) BlockIt;
  _21 = Fee_aBlockInfo[_20].BlockStatus;
  if (_21 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  BlockSize = Fee_GetBlockSize (BlockIt);
  # DEBUG BEGIN_STMT
  AlignedBlockSize = Fee_AlignToVirtualPageSize (BlockSize);
  # DEBUG BEGIN_STMT
  _22 = (long unsigned int) AlignedBlockSize;
  DataAddrIt = DataAddrIt - _22;
  # DEBUG BEGIN_STMT
  _23 = (int) BlockIt;
  Fee_aBlockInfo[_23].DataAddr = DataAddrIt;
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _24 = (int) BlockIt;
  Fee_aBlockInfo[_24].DataAddr = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  _25 = (int) BlockIt;
  _26 = Fee_aBlockInfo[_25].BlockStatus;
  if (_26 == 6)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  BlockSize = Fee_GetBlockSize (BlockIt);
  # DEBUG BEGIN_STMT
  AlignedBlockSize = Fee_AlignToVirtualPageSize (BlockSize);
  # DEBUG BEGIN_STMT
  _27 = (long unsigned int) AlignedBlockSize;
  DataAddrIt = DataAddrIt - _27;
  # DEBUG BEGIN_STMT
  _28 = (int) BlockIt;
  Fee_aBlockInfo[_28].BlockStatus = 2;

  <bb 12> :
  # DEBUG BEGIN_STMT
  HdrAddrIt = HdrAddrIt + 96;
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _29 = (int) BlockIt;
  Fee_aBlockInfo[_29].DataAddr = 0;
  # DEBUG BEGIN_STMT
  _30 = (int) BlockIt;
  Fee_aBlockInfo[_30].InvalidAddr = 0;

  <bb 14> :
  # DEBUG BEGIN_STMT
  BlockIt.25_31 = BlockIt;
  BlockIt = BlockIt.25_31 + 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (BlockIt <= 10)
    goto <bb 3>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.26_32 = Fee_uJobIntClrGrpIt;
  _33 = (int) Fee_uJobIntClrGrpIt.26_32;
  Fee_uJobIntClrIt.27_34 = Fee_uJobIntClrIt;
  Fee_aClrGrpInfo[_33].ActClr = Fee_uJobIntClrIt.27_34;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.28_35 = Fee_uJobIntClrGrpIt;
  _36 = (int) Fee_uJobIntClrGrpIt.28_35;
  _37 = Fee_aClrGrpInfo[_36].ActClrID;
  _38 = _37 + 1;
  Fee_aClrGrpInfo[_36].ActClrID = _38;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.29_39 = Fee_uJobIntClrGrpIt;
  _40 = (int) Fee_uJobIntClrGrpIt.29_39;
  Fee_aClrGrpInfo[_40].HdrAddrIt = HdrAddrIt;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.30_41 = Fee_uJobIntClrGrpIt;
  _42 = (int) Fee_uJobIntClrGrpIt.30_41;
  Fee_aClrGrpInfo[_42].DataAddrIt = DataAddrIt;
  # DEBUG BEGIN_STMT
  Fee_eJobIntOriginalJob.31_43 = Fee_eJobIntOriginalJob;
  if (Fee_eJobIntOriginalJob.31_43 == 10)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.32_44 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrGrpIt.33_45 = Fee_uJobIntClrGrpIt.32_44;
  _46 = Fee_uJobIntClrGrpIt.33_45 + 1;
  Fee_uJobIntClrGrpIt = _46;

  <bb 18> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_eModuleStatus = 2;
  # DEBUG BEGIN_STMT
  Fee_eJobIntOriginalJob.34_47 = Fee_eJobIntOriginalJob;
  Fee_eJob = Fee_eJobIntOriginalJob.34_47;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobScheduleAfterSwapClusterVldDone ();
  # DEBUG BEGIN_STMT
  D.9743 = RetVal;
  return D.9743;

}


Fee_JobInternalSwapDataWrite (const boolean BufferValid)
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9767;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  if (BufferValid == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntAddrIt.36_1 = Fee_uJobIntAddrIt;
  Fee_uJobBlockLength.37_2 = Fee_uJobBlockLength;
  _3 = Fee_WriteToFls (Fee_uJobIntAddrIt.36_1, &Fee_aDataBuffer, Fee_uJobBlockLength.37_2);
  if (_3 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntAddrIt.38_4 = Fee_uJobIntAddrIt;
  Fee_uJobBlockLength.39_5 = Fee_uJobBlockLength;
  _6 = Fee_uJobIntAddrIt.38_4 + Fee_uJobBlockLength.39_5;
  Fee_uJobIntAddrIt = _6;
  # DEBUG BEGIN_STMT
  Fee_eJob = 17;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalSwapDataRead (0);

  <bb 8> :
  # DEBUG BEGIN_STMT
  D.9767 = RetVal;
  return D.9767;

}


Fee_JobInternalSwapDataRead (const boolean BufferValid)
{
  uint16 BlockSize;
  uint16 AlignedBlockSize;
  Fls_AddressType ReadAddr;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9783;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.40_1 = Fee_uJobIntBlockIt;
  BlockSize = Fee_GetBlockSize (Fee_uJobIntBlockIt.40_1);
  # DEBUG BEGIN_STMT
  AlignedBlockSize = Fee_AlignToVirtualPageSize (BlockSize);
  # DEBUG BEGIN_STMT
  _2 = (long unsigned int) AlignedBlockSize;
  Fee_uJobIntDataAddr.41_3 = Fee_uJobIntDataAddr;
  _4 = _2 + Fee_uJobIntDataAddr.41_3;
  Fee_uJobIntAddrIt.42_5 = Fee_uJobIntAddrIt;
  _6 = _4 - Fee_uJobIntAddrIt.42_5;
  Fee_uJobBlockLength = _6;
  # DEBUG BEGIN_STMT
  if (BufferValid == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.43_7 = Fee_uJobIntBlockIt;
  _8 = (int) Fee_uJobIntBlockIt.43_7;
  Fee_aBlockInfo[_8].BlockStatus = 6;
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.44_9 = Fee_uJobIntBlockIt;
  Fee_uJobIntBlockIt.45_10 = Fee_uJobIntBlockIt.44_9;
  _11 = Fee_uJobIntBlockIt.45_10 + 1;
  Fee_uJobIntBlockIt = _11;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalSwapBlock ();
  goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockLength.46_12 = Fee_uJobBlockLength;
  if (Fee_uJobBlockLength.46_12 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.47_13 = Fee_uJobIntBlockIt;
  Fee_uJobIntBlockIt.48_14 = Fee_uJobIntBlockIt.47_13;
  _15 = Fee_uJobIntBlockIt.48_14 + 1;
  Fee_uJobIntBlockIt = _15;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalSwapBlockVld ();
  goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockLength.49_16 = Fee_uJobBlockLength;
  if (Fee_uJobBlockLength.49_16 > 96)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockLength = 96;

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.50_17 = Fee_uJobIntBlockIt;
  _18 = (int) Fee_uJobIntBlockIt.50_17;
  _19 = Fee_aBlockInfo[_18].DataAddr;
  Fee_uJobIntAddrIt.51_20 = Fee_uJobIntAddrIt;
  _21 = _19 + Fee_uJobIntAddrIt.51_20;
  Fee_uJobIntDataAddr.52_22 = Fee_uJobIntDataAddr;
  ReadAddr = _21 - Fee_uJobIntDataAddr.52_22;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockLength.53_23 = Fee_uJobBlockLength;
  _24 = Fee_ReadFromFls (ReadAddr, &Fee_aDataBuffer, Fee_uJobBlockLength.53_23);
  if (_24 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  RetVal = 2;

  <bb 11> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 18;

  <bb 12> :
  # DEBUG BEGIN_STMT
  D.9783 = RetVal;
  return D.9783;

}


Fee_JobInternalSwapBlockVld ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9788;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  Fee_SerializeFlag (&Fee_aDataBuffer, 129);
  # DEBUG BEGIN_STMT
  Fee_uJobIntHdrAddr.54_1 = Fee_uJobIntHdrAddr;
  _2 = Fee_uJobIntHdrAddr.54_1 + 4294967232;
  _3 = Fee_WriteToFls (_2, &Fee_aDataBuffer, 32);
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 2;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 16;
  # DEBUG BEGIN_STMT
  D.9788 = RetVal;
  return D.9788;

}


Fee_JobReadBlock ()
{
  Fls_AddressType BlockAddress;
  Fee_BlockStatusType BlockStatus;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.10075;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  BlockStatus = 0;
  # DEBUG BEGIN_STMT
  BlockAddress = 0;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.182_1 = Fee_uJobBlockIndex;
  _2 = (int) Fee_uJobBlockIndex.182_1;
  BlockStatus = Fee_aBlockInfo[_2].BlockStatus;
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex.183_3 = Fee_uJobBlockIndex;
  _4 = (int) Fee_uJobBlockIndex.183_3;
  BlockAddress = Fee_aBlockInfo[_4].DataAddr;
  # DEBUG BEGIN_STMT
  if (BlockStatus == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockOffset.184_5 = Fee_uJobBlockOffset;
  _6 = BlockAddress + Fee_uJobBlockOffset.184_5;
  Fee_pJobReadDataDestPtr.185_7 = Fee_pJobReadDataDestPtr;
  Fee_uJobBlockLength.186_8 = Fee_uJobBlockLength;
  _9 = Fee_ReadFromFls (_6, Fee_pJobReadDataDestPtr.185_7, Fee_uJobBlockLength.186_8);
  if (_9 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 11>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (BlockStatus == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  RetVal = 5;
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (BlockStatus == 2)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (BlockStatus == 6)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  RetVal = 4;

  <bb 11> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 20;
  # DEBUG BEGIN_STMT
  D.10075 = RetVal;
  return D.10075;

}


Fee_JobInternalScanClusterHdrParse (const boolean BufferValid)
{
  boolean bScanClusterDone;
  Fls_LengthType CfgClrSize;
  struct Fee_ClusterHeaderType ClrHdr;
  Fls_AddressType CfgStartAddr;
  Fee_ClusterStatusType ClrStatus;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9934;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  bScanClusterDone = 0;
  # DEBUG BEGIN_STMT
  ClrStatus = Fee_DeserializeClusterHdr (&ClrHdr, &Fee_aDataBuffer);
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.119_1 = Fee_uJobIntClrGrpIt;
  _2 = (int) Fee_uJobIntClrGrpIt.119_1;
  _3 = Fee_ClrGrps[_2].ClrPtr;
  Fee_uJobIntClrIt.120_4 = Fee_uJobIntClrIt;
  _5 = (unsigned int) Fee_uJobIntClrIt.120_4;
  _6 = _5 * 8;
  _7 = _3 + _6;
  CfgStartAddr = _7->StartAddr;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.121_8 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrIt.122_9 = Fee_uJobIntClrIt;
  CfgClrSize = Fee_GetClusterLength (Fee_uJobIntClrGrpIt.121_8, Fee_uJobIntClrIt.122_9);
  # DEBUG BEGIN_STMT
  if (BufferValid == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  if (ClrStatus == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  _10 = ClrHdr.StartAddr;
  if (CfgStartAddr == _10)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _11 = ClrHdr.Length;
  if (CfgClrSize == _11)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _12 = ClrHdr.ClrID;
  Fee_uJobIntClrGrpIt.123_13 = Fee_uJobIntClrGrpIt;
  _14 = (int) Fee_uJobIntClrGrpIt.123_13;
  _15 = Fee_aClrGrpInfo[_14].ActClrID;
  if (_12 > _15)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.124_16 = Fee_uJobIntClrGrpIt;
  _17 = (int) Fee_uJobIntClrGrpIt.124_16;
  Fee_uJobIntClrIt.125_18 = Fee_uJobIntClrIt;
  Fee_aClrGrpInfo[_17].ActClr = Fee_uJobIntClrIt.125_18;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.126_19 = Fee_uJobIntClrGrpIt;
  _20 = (int) Fee_uJobIntClrGrpIt.126_19;
  _21 = ClrHdr.ClrID;
  Fee_aClrGrpInfo[_20].ActClrID = _21;

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  bScanClusterDone = Fee_JobInternalScanClusterHdrDone ();
  # DEBUG BEGIN_STMT
  if (bScanClusterDone == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalScanCluster ();
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalScanClusterHdrRead ();

  <bb 11> :
  # DEBUG BEGIN_STMT
  D.9934 = RetVal;
  ClrHdr = {CLOBBER};
  return D.9934;

}


Fee_JobInternalScanClusterHdrDone ()
{
  boolean RetVal;
  boolean D.9960;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrIt.129_1 = Fee_uJobIntClrIt;
  Fee_uJobIntClrIt.130_2 = Fee_uJobIntClrIt.129_1;
  _3 = Fee_uJobIntClrIt.130_2 + 1;
  Fee_uJobIntClrIt = _3;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrIt.131_4 = Fee_uJobIntClrIt;
  _5 = (long unsigned int) Fee_uJobIntClrIt.131_4;
  Fee_uJobIntClrGrpIt.132_6 = Fee_uJobIntClrGrpIt;
  _7 = (int) Fee_uJobIntClrGrpIt.132_6;
  _8 = Fee_ClrGrps[_7].ClrCount;
  if (_5 == _8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.133_9 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrGrpIt.134_10 = Fee_uJobIntClrGrpIt.133_9;
  _11 = Fee_uJobIntClrGrpIt.134_10 + 1;
  Fee_uJobIntClrGrpIt = _11;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrIt = 0;

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.135_12 = Fee_uJobIntClrGrpIt;
  if (Fee_uJobIntClrGrpIt.135_12 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt = 0;
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.9960 = RetVal;
  return D.9960;

}


Fee_JobInternalScan ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9982;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt = 0;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrIt = 0;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalScanClusterHdrRead ();
  # DEBUG BEGIN_STMT
  D.9982 = RetVal;
  return D.9982;

}


Fee_JobInternalScanClusterHdrRead ()
{
  Fls_AddressType ReadAddress;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9965;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.136_1 = Fee_uJobIntClrGrpIt;
  _2 = (int) Fee_uJobIntClrGrpIt.136_1;
  _3 = Fee_ClrGrps[_2].ClrPtr;
  Fee_uJobIntClrIt.137_4 = Fee_uJobIntClrIt;
  _5 = (unsigned int) Fee_uJobIntClrIt.137_4;
  _6 = _5 * 8;
  _7 = _3 + _6;
  ReadAddress = _7->StartAddr;
  # DEBUG BEGIN_STMT
  _8 = Fls_Read (ReadAddress, &Fee_aDataBuffer, 96);
  if (_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 2;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 11;
  # DEBUG BEGIN_STMT
  D.9965 = RetVal;
  return D.9965;

}


Fee_JobInternalScanBlockHdrParse (const boolean BufferValid)
{
  uint16 BlockRuntimeInfoIndex;
  uint16 BlockIndex;
  Fls_AddressType DataAddr;
  struct Fee_BlockType BlockHder;
  Fee_BlockStatusType BlockStatus;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9850;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  BlockRuntimeInfoIndex = 65535;
  # DEBUG BEGIN_STMT
  BlockStatus = Fee_DeserializeBlockHdr (&BlockHder, &DataAddr, &Fee_aDataBuffer);
  # DEBUG BEGIN_STMT
  if (BlockStatus == 3)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (BufferValid == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_uJobBlockIndex = 65535;
  # DEBUG BEGIN_STMT
  Fee_uJobIntAddrIt.81_1 = Fee_uJobIntAddrIt;
  _2 = Fee_uJobIntAddrIt.81_1 + 96;
  Fee_uJobIntAddrIt = _2;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.82_3 = Fee_uJobIntClrGrpIt;
  _4 = (int) Fee_uJobIntClrGrpIt.82_3;
  Fee_uJobIntAddrIt.83_5 = Fee_uJobIntAddrIt;
  Fee_aClrGrpInfo[_4].HdrAddrIt = Fee_uJobIntAddrIt.83_5;
  # DEBUG BEGIN_STMT
  bSwapToBePerformed = 1;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalScanBlockHdrRead ();
  goto <bb 16>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (BlockStatus == 5)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  bSwapToBePerformed.84_6 = bSwapToBePerformed;
  if (bSwapToBePerformed.84_6 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  bSwapToBePerformed = 0;
  # DEBUG BEGIN_STMT
  Fee_uJobIntAddrIt.85_7 = Fee_uJobIntAddrIt;
  Fee_uJobIntClrGrpIt.86_8 = Fee_uJobIntClrGrpIt;
  _9 = (int) Fee_uJobIntClrGrpIt.86_8;
  _10 = Fee_uJobIntAddrIt.85_7 + 192;
  Fee_aClrGrpInfo[_9].DataAddrIt = _10;

  <bb 8> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.87_11 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrGrpIt.88_12 = Fee_uJobIntClrGrpIt.87_11;
  _13 = Fee_uJobIntClrGrpIt.88_12 + 1;
  Fee_uJobIntClrGrpIt = _13;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalScanCluster ();
  goto <bb 16>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _14 = BlockHder.BlockNumber;
  BlockIndex = Fee_GetBlockIndex (_14);
  # DEBUG BEGIN_STMT
  if (RetVal == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  DataAddr.89_15 = DataAddr;
  _16 = Fee_IsBlockMatchedConfig (BlockIndex, BlockRuntimeInfoIndex, &BlockHder, DataAddr.89_15);
  if (_16 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (BlockRuntimeInfoIndex == 65535)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  BlockRuntimeInfoIndex = BlockIndex;

  <bb 13> :
  # DEBUG BEGIN_STMT
  DataAddr.90_17 = DataAddr;
  _18 = BlockHder.ImmediateBlock;
  Fee_UpdateBlockRuntimeInfo (BlockRuntimeInfoIndex, BlockStatus, DataAddr.90_17, _18);
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  bSwapToBePerformed = 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntAddrIt.91_19 = Fee_uJobIntAddrIt;
  _20 = Fee_uJobIntAddrIt.91_19 + 96;
  Fee_uJobIntAddrIt = _20;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.92_21 = Fee_uJobIntClrGrpIt;
  _22 = (int) Fee_uJobIntClrGrpIt.92_21;
  Fee_uJobIntAddrIt.93_23 = Fee_uJobIntAddrIt;
  Fee_aClrGrpInfo[_22].HdrAddrIt = Fee_uJobIntAddrIt.93_23;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalScanBlockHdrRead ();

  <bb 16> :
  # DEBUG BEGIN_STMT
  D.9850 = RetVal;
  BlockHder = {CLOBBER};
  DataAddr = {CLOBBER};
  return D.9850;

}


Fee_UpdateBlockRuntimeInfo (uint16 BlockRuntimeInfoIndex, Fee_BlockStatusType BlockStatus, Fls_AddressType DataAddr, boolean ImmediateBlock)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) BlockRuntimeInfoIndex;
  Fee_aBlockInfo[_1].BlockStatus = BlockStatus;
  # DEBUG BEGIN_STMT
  _2 = (int) BlockRuntimeInfoIndex;
  Fee_aBlockInfo[_2].DataAddr = DataAddr;
  # DEBUG BEGIN_STMT
  Fee_uJobIntAddrIt.101_3 = Fee_uJobIntAddrIt;
  _4 = (int) BlockRuntimeInfoIndex;
  _5 = Fee_uJobIntAddrIt.101_3 + 64;
  Fee_aBlockInfo[_4].InvalidAddr = _5;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.102_6 = Fee_uJobIntClrGrpIt;
  _7 = (int) Fee_uJobIntClrGrpIt.102_6;
  Fee_aClrGrpInfo[_7].DataAddrIt = DataAddr;
  return;

}


Fee_IsBlockMatchedConfig (uint16 BlockIndex, uint16 BlockRuntimeInfoIndex, const struct Fee_BlockType * BlockHder, Fls_AddressType DataAddr)
{
  uint16 AlignedBlockSize;
  boolean RetVal;
  boolean D.9903;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (BlockIndex != 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (BlockRuntimeInfoIndex != 65535)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 = BlockHder->Length;
  AlignedBlockSize = Fee_AlignToVirtualPageSize (_1);
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.98_2 = Fee_uJobIntClrGrpIt;
  _3 = (int) Fee_uJobIntClrGrpIt.98_2;
  _4 = Fee_aClrGrpInfo[_3].DataAddrIt;
  _5 = (long unsigned int) AlignedBlockSize;
  _6 = _4 - _5;
  if (DataAddr <= _6)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 5> :
  Fee_uJobIntClrGrpIt.99_7 = Fee_uJobIntClrGrpIt;
  _8 = (int) Fee_uJobIntClrGrpIt.99_7;
  _9 = Fee_aClrGrpInfo[_8].HdrAddrIt;
  _10 = _9 + 192;
  if (DataAddr >= _10)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (BlockRuntimeInfoIndex == 65535)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _11 = (int) BlockIndex;
  _12 = Fee_BlockConfig[_11].ClrGrp;
  Fee_uJobIntClrGrpIt.100_13 = Fee_uJobIntClrGrpIt;
  if (_12 != Fee_uJobIntClrGrpIt.100_13)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _14 = (int) BlockIndex;
  _15 = Fee_BlockConfig[_14].BlockSize;
  _16 = BlockHder->Length;
  if (_15 != _16)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _17 = (int) BlockIndex;
  _18 = Fee_BlockConfig[_17].ImmediateData;
  _19 = BlockHder->ImmediateBlock;
  if (_18 != _19)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 13>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  RetVal = 0;

  <bb 13> :
  # DEBUG BEGIN_STMT
  D.9903 = RetVal;
  return D.9903;

}


Fee_JobInternalScanClusterFmtDone ()
{
  Fls_LengthType ClrLength;
  Fls_AddressType ClrStartAddr;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9910;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.104_1 = Fee_uJobIntClrGrpIt;
  _2 = (int) Fee_uJobIntClrGrpIt.104_1;
  Fee_uJobIntClrIt.105_3 = Fee_uJobIntClrIt;
  Fee_aClrGrpInfo[_2].ActClr = Fee_uJobIntClrIt.105_3;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.106_4 = Fee_uJobIntClrGrpIt;
  _5 = (int) Fee_uJobIntClrGrpIt.106_4;
  Fee_aClrGrpInfo[_5].ActClrID = 1;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.107_6 = Fee_uJobIntClrGrpIt;
  _7 = (int) Fee_uJobIntClrGrpIt.107_6;
  _8 = Fee_ClrGrps[_7].ClrPtr;
  Fee_uJobIntClrIt.108_9 = Fee_uJobIntClrIt;
  _10 = (unsigned int) Fee_uJobIntClrIt.108_9;
  _11 = _10 * 8;
  _12 = _8 + _11;
  ClrStartAddr = _12->StartAddr;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.109_13 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrIt.110_14 = Fee_uJobIntClrIt;
  ClrLength = Fee_GetClusterLength (Fee_uJobIntClrGrpIt.109_13, Fee_uJobIntClrIt.110_14);
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.111_15 = Fee_uJobIntClrGrpIt;
  _16 = (int) Fee_uJobIntClrGrpIt.111_15;
  _17 = ClrStartAddr + 96;
  Fee_aClrGrpInfo[_16].HdrAddrIt = _17;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.112_18 = Fee_uJobIntClrGrpIt;
  _19 = (int) Fee_uJobIntClrGrpIt.112_18;
  _20 = ClrStartAddr + ClrLength;
  Fee_aClrGrpInfo[_19].DataAddrIt = _20;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.113_21 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrGrpIt.114_22 = Fee_uJobIntClrGrpIt.113_21;
  _23 = Fee_uJobIntClrGrpIt.114_22 + 1;
  Fee_uJobIntClrGrpIt = _23;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalScanCluster ();
  # DEBUG BEGIN_STMT
  D.9910 = RetVal;
  return D.9910;

}


Fee_JobInternalScanClusterFmt ()
{
  Fls_LengthType ClusterLength;
  struct Fee_ClusterHeaderType ClrHdr;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9915;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.115_1 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrIt.116_2 = Fee_uJobIntClrIt;
  ClusterLength = Fee_GetClusterLength (Fee_uJobIntClrGrpIt.115_1, Fee_uJobIntClrIt.116_2);
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.117_3 = Fee_uJobIntClrGrpIt;
  _4 = (int) Fee_uJobIntClrGrpIt.117_3;
  _5 = Fee_ClrGrps[_4].ClrPtr;
  Fee_uJobIntClrIt.118_6 = Fee_uJobIntClrIt;
  _7 = (unsigned int) Fee_uJobIntClrIt.118_6;
  _8 = _7 * 8;
  _9 = _5 + _8;
  _10 = _9->StartAddr;
  ClrHdr.StartAddr = _10;
  # DEBUG BEGIN_STMT
  ClrHdr.Length = ClusterLength;
  # DEBUG BEGIN_STMT
  ClrHdr.ClrID = 1;
  # DEBUG BEGIN_STMT
  Fee_SerializeClusterHdr (&ClrHdr, &Fee_aDataBuffer);
  # DEBUG BEGIN_STMT
  Fee_SerializeFlag (&Fee_aDataBuffer[32], 129);
  # DEBUG BEGIN_STMT
  _11 = ClrHdr.StartAddr;
  _12 = Fee_WriteToFls (_11, &Fee_aDataBuffer, 64);
  if (_12 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 13;
  # DEBUG BEGIN_STMT
  D.9915 = RetVal;
  ClrHdr = {CLOBBER};
  return D.9915;

}


Fee_JobInternalScanCluster ()
{
  Fls_LengthType ClrLength;
  Fls_AddressType ClrStartAddr;
  uint8 ClrIndex;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9973;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.138_1 = Fee_uJobIntClrGrpIt;
  if (Fee_uJobIntClrGrpIt.138_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 20;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.139_2 = Fee_uJobIntClrGrpIt;
  _3 = (int) Fee_uJobIntClrGrpIt.139_2;
  _4 = Fee_aClrGrpInfo[_3].ActClrID;
  if (_4 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrIt = 0;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalScanClusterErase ();
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.140_5 = Fee_uJobIntClrGrpIt;
  _6 = (int) Fee_uJobIntClrGrpIt.140_5;
  ClrIndex = Fee_aClrGrpInfo[_6].ActClr;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.141_7 = Fee_uJobIntClrGrpIt;
  _8 = (int) Fee_uJobIntClrGrpIt.141_7;
  _9 = Fee_ClrGrps[_8].ClrPtr;
  _10 = (unsigned int) ClrIndex;
  _11 = _10 * 8;
  _12 = _9 + _11;
  ClrStartAddr = _12->StartAddr;
  # DEBUG BEGIN_STMT
  _13 = ClrStartAddr + 96;
  Fee_uJobIntAddrIt = _13;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.142_14 = Fee_uJobIntClrGrpIt;
  _15 = (int) Fee_uJobIntClrGrpIt.142_14;
  Fee_uJobIntAddrIt.143_16 = Fee_uJobIntAddrIt;
  Fee_aClrGrpInfo[_15].HdrAddrIt = Fee_uJobIntAddrIt.143_16;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.144_17 = Fee_uJobIntClrGrpIt;
  ClrLength = Fee_GetClusterLength (Fee_uJobIntClrGrpIt.144_17, ClrIndex);
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.145_18 = Fee_uJobIntClrGrpIt;
  _19 = (int) Fee_uJobIntClrGrpIt.145_18;
  _20 = ClrStartAddr + ClrLength;
  Fee_aClrGrpInfo[_19].DataAddrIt = _20;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalScanBlockHdrRead ();

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.9973 = RetVal;
  return D.9973;

}


Fee_JobInternalScanClusterErase ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9978;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.146_1 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrIt.147_2 = Fee_uJobIntClrIt;
  _3 = Fee_EraseCluster (Fee_uJobIntClrGrpIt.146_1, Fee_uJobIntClrIt.147_2);
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 12;
  # DEBUG BEGIN_STMT
  D.9978 = RetVal;
  return D.9978;

}


Fee_JobInternalScanBlockHdrRead ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9908;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  Fee_uJobIntAddrIt.103_1 = Fee_uJobIntAddrIt;
  _2 = Fee_ReadFromFls (Fee_uJobIntAddrIt.103_1, &Fee_aDataBuffer, 96);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 2;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 14;
  # DEBUG BEGIN_STMT
  D.9908 = RetVal;
  return D.9908;

}


Fee_JobInternalSwap ()
{
  uint8 NextCluster;
  uint8 CurrentCluster;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.10005;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.156_1 = Fee_uJobIntClrGrpIt;
  _2 = (int) Fee_uJobIntClrGrpIt.156_1;
  CurrentCluster = Fee_aClrGrpInfo[_2].ActClr;
  # DEBUG BEGIN_STMT
  NextCluster = Fee_GetNextClusterToSwap (CurrentCluster);
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrIt = NextCluster;
  # DEBUG BEGIN_STMT
  Fee_eJob.157_3 = Fee_eJob;
  Fee_eJobIntOriginalJob = Fee_eJob.157_3;
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalSwapClusterErase ();
  # DEBUG BEGIN_STMT
  D.10005 = RetVal;
  return D.10005;

}


Fee_GetNextClusterToSwap (uint8 CurrentCluster)
{
  uint8 NextCluster;
  uint8 D.10009;

  <bb 2> :
  # DEBUG BEGIN_STMT
  NextCluster = CurrentCluster;
  # DEBUG BEGIN_STMT
  NextCluster.158_1 = NextCluster;
  NextCluster = NextCluster.158_1 + 1;
  # DEBUG BEGIN_STMT
  _2 = (long unsigned int) NextCluster;
  Fee_uJobIntClrGrpIt.159_3 = Fee_uJobIntClrGrpIt;
  _4 = (int) Fee_uJobIntClrGrpIt.159_3;
  _5 = Fee_ClrGrps[_4].ClrCount;
  if (_2 == _5)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NextCluster = 0;

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.10009 = NextCluster;
  return D.10009;

}


Fee_JobInternalSwapClusterErase ()
{
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.10014;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.160_1 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrIt.161_2 = Fee_uJobIntClrIt;
  _3 = Fee_EraseCluster (Fee_uJobIntClrGrpIt.160_1, Fee_uJobIntClrIt.161_2);
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 15;
  # DEBUG BEGIN_STMT
  D.10014 = RetVal;
  return D.10014;

}


Fee_JobInternalSwapClusterFmt ()
{
  Fls_LengthType ClusterLength;
  struct Fee_ClusterHeaderType ClrHdr;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9829;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.76_1 = Fee_uJobIntClrGrpIt;
  Fee_uJobIntClrIt.77_2 = Fee_uJobIntClrIt;
  ClusterLength = Fee_GetClusterLength (Fee_uJobIntClrGrpIt.76_1, Fee_uJobIntClrIt.77_2);
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.78_3 = Fee_uJobIntClrGrpIt;
  _4 = (int) Fee_uJobIntClrGrpIt.78_3;
  _5 = Fee_ClrGrps[_4].ClrPtr;
  Fee_uJobIntClrIt.79_6 = Fee_uJobIntClrIt;
  _7 = (unsigned int) Fee_uJobIntClrIt.79_6;
  _8 = _7 * 8;
  _9 = _5 + _8;
  _10 = _9->StartAddr;
  ClrHdr.StartAddr = _10;
  # DEBUG BEGIN_STMT
  ClrHdr.Length = ClusterLength;
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.80_11 = Fee_uJobIntClrGrpIt;
  _12 = (int) Fee_uJobIntClrGrpIt.80_11;
  _13 = Fee_aClrGrpInfo[_12].ActClrID;
  _14 = _13 + 1;
  ClrHdr.ClrID = _14;
  # DEBUG BEGIN_STMT
  Fee_SerializeClusterHdr (&ClrHdr, &Fee_aDataBuffer);
  # DEBUG BEGIN_STMT
  _15 = ClrHdr.StartAddr;
  _16 = Fee_WriteToFls (_15, &Fee_aDataBuffer, 32);
  if (_16 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  _17 = ClrHdr.StartAddr;
  _18 = _17 + 96;
  Fee_uJobIntHdrAddr = _18;
  # DEBUG BEGIN_STMT
  _19 = ClrHdr.StartAddr;
  _20 = ClrHdr.Length;
  _21 = _19 + _20;
  Fee_uJobIntDataAddr = _21;
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt = 0;
  # DEBUG BEGIN_STMT
  Fee_eJob = 16;
  # DEBUG BEGIN_STMT
  D.9829 = RetVal;
  ClrHdr = {CLOBBER};
  return D.9829;

}


Fee_JobInternalSwapBlock ()
{
  uint8 BlockClusterGrp;
  uint16 AlignedBlockSize;
  struct Fee_BlockType BlockHder;
  Fls_AddressType DataAddr;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9811;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.55_1 = Fee_uJobIntBlockIt;
  BlockClusterGrp = Fee_GetBlockClusterGrp (Fee_uJobIntBlockIt.55_1);
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.56_2 = Fee_uJobIntClrGrpIt;
  if (BlockClusterGrp == Fee_uJobIntClrGrpIt.56_2)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  Fee_uJobIntBlockIt.57_3 = Fee_uJobIntBlockIt;
  _4 = (int) Fee_uJobIntBlockIt.57_3;
  _5 = Fee_aBlockInfo[_4].BlockStatus;
  if (_5 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Fee_uJobIntBlockIt.58_6 = Fee_uJobIntBlockIt;
  _7 = (int) Fee_uJobIntBlockIt.58_6;
  _8 = Fee_aBlockInfo[_7].BlockStatus;
  if (_8 == 2)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  Fee_uJobIntBlockIt.59_9 = Fee_uJobIntBlockIt;
  _10 = (int) Fee_uJobIntBlockIt.59_9;
  _11 = Fee_aBlockInfo[_10].BlockStatus;
  if (_11 == 6)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.60_12 = Fee_uJobIntBlockIt;
  Fee_uJobIntBlockIt.61_13 = Fee_uJobIntBlockIt.60_12;
  _14 = Fee_uJobIntBlockIt.61_13 + 1;
  Fee_uJobIntBlockIt = _14;

  <bb 8> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.62_15 = Fee_uJobIntBlockIt;
  if (Fee_uJobIntBlockIt.62_15 <= 10)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.63_16 = Fee_uJobIntBlockIt;
  if (Fee_uJobIntBlockIt.63_16 == 11)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  RetVal = Fee_JobInternalSwapClusterVld ();
  goto <bb 21>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.64_17 = Fee_uJobIntBlockIt;
  _18 = Fee_GetBlockSize (Fee_uJobIntBlockIt.64_17);
  BlockHder.Length = _18;
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.65_19 = Fee_uJobIntBlockIt;
  _20 = Fee_GetBlockImmediate (Fee_uJobIntBlockIt.65_19);
  BlockHder.ImmediateBlock = _20;
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.66_21 = Fee_uJobIntBlockIt;
  _22 = Fee_GetBlockNumber (Fee_uJobIntBlockIt.66_21);
  BlockHder.BlockNumber = _22;
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.67_23 = Fee_uJobIntBlockIt;
  _24 = (int) Fee_uJobIntBlockIt.67_23;
  _25 = Fee_aBlockInfo[_24].BlockStatus;
  if (_25 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _26 = BlockHder.Length;
  AlignedBlockSize = Fee_AlignToVirtualPageSize (_26);
  # DEBUG BEGIN_STMT
  Fee_uJobIntDataAddr.68_27 = Fee_uJobIntDataAddr;
  _28 = (long unsigned int) AlignedBlockSize;
  DataAddr = Fee_uJobIntDataAddr.68_27 - _28;
  # DEBUG BEGIN_STMT
  Fee_uJobIntDataAddr = DataAddr;
  # DEBUG BEGIN_STMT
  Fee_uJobIntAddrIt = DataAddr;
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  DataAddr = 0;

  <bb 14> :
  # DEBUG BEGIN_STMT
  Fee_SerializeBlockHdr (&BlockHder, DataAddr, &Fee_aDataBuffer);
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.69_29 = Fee_uJobIntBlockIt;
  _30 = (int) Fee_uJobIntBlockIt.69_29;
  _31 = Fee_aBlockInfo[_30].BlockStatus;
  if (_31 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 17;
  goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntBlockIt.70_32 = Fee_uJobIntBlockIt;
  Fee_uJobIntBlockIt.71_33 = Fee_uJobIntBlockIt.70_32;
  _34 = Fee_uJobIntBlockIt.71_33 + 1;
  Fee_uJobIntBlockIt = _34;
  # DEBUG BEGIN_STMT
  Fee_eJob = 16;

  <bb 17> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntHdrAddr.72_35 = Fee_uJobIntHdrAddr;
  _36 = Fee_WriteToFls (Fee_uJobIntHdrAddr.72_35, &Fee_aDataBuffer, 32);
  if (_36 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  goto <bb 20>; [INV]

  <bb 19> :
  # DEBUG BEGIN_STMT
  RetVal = 2;

  <bb 20> :
  # DEBUG BEGIN_STMT
  Fee_uJobIntHdrAddr.73_37 = Fee_uJobIntHdrAddr;
  _38 = Fee_uJobIntHdrAddr.73_37 + 96;
  Fee_uJobIntHdrAddr = _38;

  <bb 21> :
  # DEBUG BEGIN_STMT
  D.9811 = RetVal;
  BlockHder = {CLOBBER};
  return D.9811;

}


Fee_JobInternalSwapClusterVld ()
{
  Fls_AddressType StartAddr;
  MemIf_JobResultType RetVal;
  MemIf_JobResultType D.9817;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fee_uJobIntClrGrpIt.74_1 = Fee_uJobIntClrGrpIt;
  _2 = (int) Fee_uJobIntClrGrpIt.74_1;
  _3 = Fee_ClrGrps[_2].ClrPtr;
  Fee_uJobIntClrIt.75_4 = Fee_uJobIntClrIt;
  _5 = (unsigned int) Fee_uJobIntClrIt.75_4;
  _6 = _5 * 8;
  _7 = _3 + _6;
  StartAddr = _7->StartAddr;
  # DEBUG BEGIN_STMT
  Fee_SerializeFlag (&Fee_aDataBuffer, 129);
  # DEBUG BEGIN_STMT
  _8 = StartAddr + 32;
  _9 = Fee_WriteToFls (_8, &Fee_aDataBuffer, 32);
  if (_9 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  Fee_eJob = 19;
  # DEBUG BEGIN_STMT
  D.9817 = RetVal;
  return D.9817;

}


Fee_SerializeFlag (uint8 * TargetPtr, const uint8 FlagPattern)
{
  uint8 * TempPtr;
  const uint8 * TargetEndPtr;

  <bb 2> :
  # DEBUG BEGIN_STMT
  TargetEndPtr = TargetPtr + 32;
  # DEBUG BEGIN_STMT
  TempPtr = TargetPtr;
  # DEBUG BEGIN_STMT
  *TempPtr = FlagPattern;
  # DEBUG BEGIN_STMT
  TempPtr = TempPtr + 1;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  *TempPtr = 255;
  # DEBUG BEGIN_STMT
  TempPtr = TempPtr + 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (TempPtr < TargetEndPtr)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


Fee_CopyDataToPageBuffer (const uint8 * SourcePtr, uint8 * TargetPtr, const uint16 Length)
{
  const uint8 * TempSourcePtr;
  uint8 * TempTargetPtr;
  const uint8 * PageEndPtr;
  const uint8 * TargetEndPtr;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (sizetype) Length;
  TargetEndPtr = TargetPtr + _1;
  # DEBUG BEGIN_STMT
  PageEndPtr = TargetPtr + 32;
  # DEBUG BEGIN_STMT
  TempTargetPtr = TargetPtr;
  # DEBUG BEGIN_STMT
  TempSourcePtr = SourcePtr;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _2 = *TempSourcePtr;
  *TempTargetPtr = _2;
  # DEBUG BEGIN_STMT
  TempSourcePtr = TempSourcePtr + 1;
  # DEBUG BEGIN_STMT
  TempTargetPtr = TempTargetPtr + 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (TempTargetPtr < TargetEndPtr)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  *TempTargetPtr = 255;
  # DEBUG BEGIN_STMT
  TempTargetPtr = TempTargetPtr + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (TempTargetPtr < PageEndPtr)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


Fee_AlignToVirtualPageSize (uint16 BlockSize)
{
  uint16 Retval;
  uint16 D.9754;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Retval = 0;
  # DEBUG BEGIN_STMT
  _1 = BlockSize & 31;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Retval = BlockSize;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _2 = BlockSize / 32;
  _3 = _2 + 1;
  Retval = _3 * 32;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.9754 = Retval;
  return D.9754;

}


Fee_GetBlockImmediate (const uint16 BlockRuntimeInfoIndex)
{
  boolean Immediate;
  boolean D.9819;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) BlockRuntimeInfoIndex;
  Immediate = Fee_BlockConfig[_1].ImmediateData;
  # DEBUG BEGIN_STMT
  D.9819 = Immediate;
  return D.9819;

}


Fee_GetBlockNumber (const uint16 BlockRuntimeInfoIndex)
{
  uint16 BlockNumber;
  uint16 D.9821;

  <bb 2> :
  # DEBUG BEGIN_STMT
  BlockNumber = 0;
  # DEBUG BEGIN_STMT
  _1 = (int) BlockRuntimeInfoIndex;
  BlockNumber = Fee_BlockConfig[_1].BlockNumber;
  # DEBUG BEGIN_STMT
  D.9821 = BlockNumber;
  return D.9821;

}


Fee_GetBlockSize (const uint16 BlockRuntimeInfoIndex)
{
  uint16 BlockSize;
  uint16 D.9749;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) BlockRuntimeInfoIndex;
  BlockSize = Fee_BlockConfig[_1].BlockSize;
  # DEBUG BEGIN_STMT
  D.9749 = BlockSize;
  return D.9749;

}


Fee_GetBlockIndex (const uint16 BlockNumber)
{
  uint16 RetVal;
  sint32 Middle;
  sint32 High;
  sint32 Low;
  uint16 D.9655;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Low = 0;
  # DEBUG BEGIN_STMT
  High = 10;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  RetVal = 65535;
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = High - Low;
  _2 = _1 / 2;
  Middle = Low + _2;
  # DEBUG BEGIN_STMT
  _3 = Fee_BlockConfig[Middle].BlockNumber;
  if (BlockNumber < _3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  High = Middle + -1;
  goto <bb 8>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _4 = Fee_BlockConfig[Middle].BlockNumber;
  if (BlockNumber > _4)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Low = Middle + 1;
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  RetVal = (uint16) Middle;
  # DEBUG BEGIN_STMT
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  if (Low <= High)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.9655 = RetVal;
  return D.9655;

}


Fee_SerializeClusterHdr (const struct Fee_ClusterHeaderType * ClrHdr, uint8 * ClrHdrPtr)
{
  uint8 * TempClrHdrPtr;
  const uint8 * TargetEndPtr;
  uint32 CheckSum;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = ClrHdrPtr;
  # DEBUG BEGIN_STMT
  TargetEndPtr = ClrHdrPtr + 96;
  # DEBUG BEGIN_STMT
  _1 = ClrHdr->ClrID;
  _2 = ClrHdr->StartAddr;
  _3 = _1 + _2;
  _4 = ClrHdr->Length;
  CheckSum = _3 + _4;
  # DEBUG BEGIN_STMT
  _5 = ClrHdr->ClrID;
  MEM[(uint32 *)TempClrHdrPtr] = _5;
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = TempClrHdrPtr + 4;
  # DEBUG BEGIN_STMT
  _6 = ClrHdr->StartAddr;
  MEM[(Fls_AddressType *)TempClrHdrPtr] = _6;
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = TempClrHdrPtr + 4;
  # DEBUG BEGIN_STMT
  _7 = ClrHdr->Length;
  MEM[(Fls_LengthType *)TempClrHdrPtr] = _7;
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = TempClrHdrPtr + 4;
  # DEBUG BEGIN_STMT
  MEM[(uint32 *)TempClrHdrPtr] = CheckSum;
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = TempClrHdrPtr + 4;
  # DEBUG BEGIN_STMT
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  *TempClrHdrPtr = 255;
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = TempClrHdrPtr + 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (TempClrHdrPtr < TargetEndPtr)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


Fee_DeserializeClusterHdr (struct Fee_ClusterHeaderType * ClrHdr, const uint8 * ClrHdrPtr)
{
  const uint8 * TempClrHdrPtr;
  const uint8 * TargetEndPtr;
  boolean FlagInvalid;
  boolean FlagValid;
  uint32 CheckSumCal;
  uint32 CheckSumHdr;
  Fee_ClusterStatusType RetVal;
  Fee_ClusterStatusType D.9952;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  FlagValid = 0;
  # DEBUG BEGIN_STMT
  FlagInvalid = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = ClrHdrPtr;
  # DEBUG BEGIN_STMT
  TargetEndPtr = ClrHdrPtr + 32;
  # DEBUG BEGIN_STMT
  _1 = MEM[(const uint32 *)TempClrHdrPtr];
  ClrHdr->ClrID = _1;
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = TempClrHdrPtr + 4;
  # DEBUG BEGIN_STMT
  _2 = MEM[(const Fls_AddressType *)TempClrHdrPtr];
  ClrHdr->StartAddr = _2;
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = TempClrHdrPtr + 4;
  # DEBUG BEGIN_STMT
  _3 = MEM[(const Fls_LengthType *)TempClrHdrPtr];
  ClrHdr->Length = _3;
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = TempClrHdrPtr + 4;
  # DEBUG BEGIN_STMT
  _4 = ClrHdr->ClrID;
  _5 = ClrHdr->StartAddr;
  _6 = _4 + _5;
  _7 = ClrHdr->Length;
  CheckSumCal = _6 + _7;
  # DEBUG BEGIN_STMT
  CheckSumHdr = MEM[(const uint32 *)TempClrHdrPtr];
  # DEBUG BEGIN_STMT
  TempClrHdrPtr = TempClrHdrPtr + 4;
  # DEBUG BEGIN_STMT
  if (CheckSumCal != CheckSumHdr)
    goto <bb 11>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _8 = Fee_BlankCheck (TempClrHdrPtr, TargetEndPtr);
  if (_8 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _9 = Fee_DeserializeFlag (TargetEndPtr, 129, &FlagValid);
  if (_9 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = TargetEndPtr + 32;
  _11 = Fee_DeserializeFlag (_10, 24, &FlagInvalid);
  if (_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  FlagInvalid.127_12 = FlagInvalid;
  if (FlagInvalid.127_12 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  FlagValid.128_13 = FlagValid;
  if (FlagValid.128_13 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  RetVal = 2;
  goto <bb 11>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 11> :
  # DEBUG BEGIN_STMT
  D.9952 = RetVal;
  FlagValid = {CLOBBER};
  FlagInvalid = {CLOBBER};
  return D.9952;

}


Fee_DeserializeBlockHdr (struct Fee_BlockType * const BlockHder, Fls_AddressType * const TargetAddress, const uint8 * BlockHdrPtr)
{
  uint8 ReservedSpace;
  boolean FlagInvalid;
  boolean FlagValid;
  const uint8 * TempBlockHdrPtr;
  const uint8 * TargetEndPtr;
  uint32 CalcCheckSum;
  uint32 ReadCheckSum;
  Fee_BlockStatusType RetVal;
  Fee_BlockStatusType D.9872;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = BlockHdrPtr;
  # DEBUG BEGIN_STMT
  FlagValid = 0;
  # DEBUG BEGIN_STMT
  FlagInvalid = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = BlockHdrPtr + 96;
  _2 = Fee_BlankCheck (BlockHdrPtr, _1);
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetVal = 5;
  goto <bb 17>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  TargetEndPtr = BlockHdrPtr + 32;
  # DEBUG BEGIN_STMT
  _3 = MEM[(const uint16 *)TempBlockHdrPtr];
  BlockHder->BlockNumber = _3;
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 2;
  # DEBUG BEGIN_STMT
  _4 = MEM[(const uint16 *)TempBlockHdrPtr];
  BlockHder->Length = _4;
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 2;
  # DEBUG BEGIN_STMT
  _5 = MEM[(const Fls_AddressType *)TempBlockHdrPtr];
  *TargetAddress = _5;
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 4;
  # DEBUG BEGIN_STMT
  ReadCheckSum = MEM[(const uint32 *)TempBlockHdrPtr];
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 4;
  # DEBUG BEGIN_STMT
  ReservedSpace = *TempBlockHdrPtr;
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _6 = BlockHder->Length;
  _7 = (long unsigned int) _6;
  _8 = *TargetAddress;
  _9 = _7 + _8;
  _10 = BlockHder->BlockNumber;
  _11 = (long unsigned int) _10;
  CalcCheckSum = _9 + _11;
  # DEBUG BEGIN_STMT
  ReadCheckSum.94_12 = (signed int) ReadCheckSum;
  if (ReadCheckSum.94_12 >= 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  BlockHder->ImmediateBlock = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  BlockHder->ImmediateBlock = 1;
  # DEBUG BEGIN_STMT
  CalcCheckSum = CalcCheckSum + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  _13 = ReadCheckSum ^ CalcCheckSum;
  _14 = _13 & 2147483647;
  if (_14 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _15 = Fee_BlankCheck (TempBlockHdrPtr, TargetEndPtr);
  if (_15 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _16 = Fee_DeserializeFlag (TargetEndPtr, 129, &FlagValid);
  if (_16 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _17 = TargetEndPtr + 32;
  _18 = Fee_DeserializeFlag (_17, 24, &FlagInvalid);
  if (_18 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  RetVal = 3;
  goto <bb 17>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  FlagValid.95_19 = FlagValid;
  if (FlagValid.95_19 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  FlagInvalid.96_20 = FlagInvalid;
  if (FlagInvalid.96_20 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  goto <bb 17>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  FlagInvalid.97_21 = FlagInvalid;
  if (FlagInvalid.97_21 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  RetVal = 2;

  <bb 17> :
  # DEBUG BEGIN_STMT
  D.9872 = RetVal;
  FlagValid = {CLOBBER};
  FlagInvalid = {CLOBBER};
  return D.9872;

}


Fee_DeserializeFlag (const uint8 * const TargetPtr, const uint8 FlagPattern, boolean * pFlagValue)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.9887;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = *TargetPtr;
  if (FlagPattern == _1)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _2 = *TargetPtr;
  if (_2 == 255)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = *TargetPtr;
  if (FlagPattern == _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  *pFlagValue = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  *pFlagValue = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  _4 = TargetPtr + 1;
  _5 = TargetPtr + 32;
  RetVal = Fee_BlankCheck (_4, _5);
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  RetVal = 1;

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.9887 = RetVal;
  return D.9887;

}


Fee_BlankCheck (const uint8 * TargetPtr, const uint8 * const TargetEndPtr)
{
  const uint8 * TempTargetPtr;
  Std_ReturnType RetVal;
  Std_ReturnType D.9878;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetVal = 0;
  # DEBUG BEGIN_STMT
  TempTargetPtr = TargetPtr;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = *TempTargetPtr;
  if (_1 == 255)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetVal = 1;
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TempTargetPtr = TempTargetPtr + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (TempTargetPtr < TargetEndPtr)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.9878 = RetVal;
  return D.9878;

}


Fee_SerializeBlockHdr (const struct Fee_BlockType * BlockHder, const Fls_AddressType TargetAddress, uint8 * BlockHdrPtr)
{
  uint8 * TempBlockHdrPtr;
  const uint8 * TargetEndPtr;
  uint32 CheckSum;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CheckSum = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = BlockHdrPtr;
  # DEBUG BEGIN_STMT
  TargetEndPtr = BlockHdrPtr + 96;
  # DEBUG BEGIN_STMT
  _1 = BlockHder->BlockNumber;
  _2 = (long unsigned int) _1;
  _3 = BlockHder->Length;
  _4 = (long unsigned int) _3;
  _5 = _2 + _4;
  CheckSum = TargetAddress + _5;
  # DEBUG BEGIN_STMT
  _6 = BlockHder->ImmediateBlock;
  if (_6 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CheckSum = CheckSum + 1;
  # DEBUG BEGIN_STMT
  CheckSum = CheckSum | 2147483648;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CheckSum = CheckSum & 2147483647;

  <bb 5> :
  # DEBUG BEGIN_STMT
  _7 = BlockHder->BlockNumber;
  MEM[(uint16 *)TempBlockHdrPtr] = _7;
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 2;
  # DEBUG BEGIN_STMT
  _8 = BlockHder->Length;
  MEM[(uint16 *)TempBlockHdrPtr] = _8;
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 2;
  # DEBUG BEGIN_STMT
  MEM[(Fls_AddressType *)TempBlockHdrPtr] = TargetAddress;
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 4;
  # DEBUG BEGIN_STMT
  MEM[(uint32 *)TempBlockHdrPtr] = CheckSum;
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 4;
  # DEBUG BEGIN_STMT
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  *TempBlockHdrPtr = 255;
  # DEBUG BEGIN_STMT
  TempBlockHdrPtr = TempBlockHdrPtr + 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (TempBlockHdrPtr < TargetEndPtr)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


Fee_GetBlockClusterGrp (const uint16 BlockRuntimeInfoIndex)
{
  uint8 BlockClusterGrp;
  uint8 D.9747;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (int) BlockRuntimeInfoIndex;
  BlockClusterGrp = Fee_BlockConfig[_1].ClrGrp;
  # DEBUG BEGIN_STMT
  D.9747 = BlockClusterGrp;
  return D.9747;

}


Fee_JobSystemDone ()
{
  MemIf_JobResultType D.9726;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.9726 = 1;
  return D.9726;

}


Fee_JobInternalSwapDataWrite_Wrapper ()
{
  MemIf_JobResultType D.9759;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.9759 = Fee_JobInternalSwapDataWrite (1);
  return D.9759;

}


Fee_JobInternalSwapDataRead_Wrapper ()
{
  MemIf_JobResultType D.9792;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.9792 = Fee_JobInternalSwapDataRead (1);
  return D.9792;

}


Fee_JobInternalScanBlockHdrParse_Wrapper ()
{
  MemIf_JobResultType D.9832;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.9832 = Fee_JobInternalScanBlockHdrParse (1);
  return D.9832;

}


Fee_JobInternalScanClusterHdrParse_Wrapper ()
{
  MemIf_JobResultType D.9918;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.9918 = Fee_JobInternalScanClusterHdrParse (1);
  return D.9918;

}


