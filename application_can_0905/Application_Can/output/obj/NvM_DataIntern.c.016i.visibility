
Marking local functions: NvM_FatalError


Marking externally visible functions: NvM_CheckCondEraseNvBlock NvM_CheckCondInvalidateNvBlock NvM_CheckCondCancelJobs NvM_CheckCondRestorePRAMBlockDefaults NvM_CheckCondWritePRAMBlock NvM_CheckCondReadPRAMBlock NvM_CheckCondRestoreBlockDefaults NvM_CheckCondWriteBlock NvM_CheckCondReadBlock NvM_InsertRestoreBlockJob NvM_CheckBlockStatus NvM_MirrorCopy NvM_GetDataAddress NvM_GetBufferAddress NvM_GetBlockLength NvM_GetBlockCRCLength NvM_CheckDataSetRomBlock NvM_CheckWriteProtection NvM_InvokeSingleBlockCallback NvM_MultiPostService_Function NvM_PostService_Function NvM_PreService_Function NvM_MultiRequestFinishedSingleBlock NvM_ResetRedundantBlockDataIndex NvM_GetMergedBlockNumber NvM_GetUserRamBlockAddress NvM_SetPermanentRamBlockChanged NvM_SetPermanentRamBlockUnchanged NvM_SetPermanentRamBlockValid NvM_SetPermanentRamBlockInvalid NvM_GetBlockIndexForValidId


Marking externally visible variables: NvM_CurrentFunctionPtr NvM_CurrentBlockDescriptorPtr NvM_GlobalBlockNumber NvM_TempRamBlockAddress NvM_InternalBuffer NvM_GlobalWorkingStatus NvM_RamBlockCrcCalcCount NvM_CrcQueue NvM_MirrorRetryCount NvM_CurrentServiceId NvM_GlobalGenericStatus NvM_WriteRetryCount NvM_GlobalCallLevel NvM_GlobalErrorStatus NvM_ConfigurationId NvM_AdminBlockTable


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Det_ASR40_ReportError/58 (Det_ASR40_ReportError) @07252000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: NvM_CheckCondEraseNvBlock/47 NvM_CheckCondEraseNvBlock/47 NvM_CheckCondEraseNvBlock/47 NvM_CheckCondEraseNvBlock/47 NvM_CheckCondEraseNvBlock/47 NvM_CheckCondInvalidateNvBlock/46 NvM_CheckCondInvalidateNvBlock/46 NvM_CheckCondInvalidateNvBlock/46 NvM_CheckCondInvalidateNvBlock/46 NvM_CheckCondCancelJobs/45 NvM_CheckCondCancelJobs/45 NvM_CheckCondRestorePRAMBlockDefaults/44 NvM_CheckCondRestorePRAMBlockDefaults/44 NvM_CheckCondRestorePRAMBlockDefaults/44 NvM_CheckCondRestorePRAMBlockDefaults/44 NvM_CheckCondRestorePRAMBlockDefaults/44 NvM_CheckCondWritePRAMBlock/43 NvM_CheckCondWritePRAMBlock/43 NvM_CheckCondWritePRAMBlock/43 NvM_CheckCondWritePRAMBlock/43 NvM_CheckCondWritePRAMBlock/43 NvM_CheckCondReadPRAMBlock/42 NvM_CheckCondReadPRAMBlock/42 NvM_CheckCondReadPRAMBlock/42 NvM_CheckCondReadPRAMBlock/42 NvM_CheckCondRestoreBlockDefaults/41 NvM_CheckCondRestoreBlockDefaults/41 NvM_CheckCondRestoreBlockDefaults/41 NvM_CheckCondRestoreBlockDefaults/41 NvM_CheckCondRestoreBlockDefaults/41 NvM_CheckCondWriteBlock/40 NvM_CheckCondWriteBlock/40 NvM_CheckCondWriteBlock/40 NvM_CheckCondWriteBlock/40 NvM_CheckCondWriteBlock/40 NvM_CheckCondReadBlock/39 NvM_CheckCondReadBlock/39 NvM_CheckCondReadBlock/39 NvM_CheckCondReadBlock/39 
  Calls: 
NvM_Queue_InsertStandard/57 (NvM_Queue_InsertStandard) @07242ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: NvM_InsertRestoreBlockJob/38 
  Calls: 
NvM_RestoreBlockDefaults_Asc/56 (NvM_RestoreBlockDefaults_Asc) @07242d20
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: NvM_InsertRestoreBlockJob/38 (addr)
  Availability: not_available
  Function flags: optimize_size
  Called by: 
  Calls: 
NvM_RestorePRAMBlockDefaults_Asc/55 (NvM_RestorePRAMBlockDefaults_Asc) @07242c40
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: NvM_InsertRestoreBlockJob/38 (addr)
  Availability: not_available
  Function flags: optimize_size
  Called by: 
  Calls: 
NvM_CalcCrc_RemoveElement/54 (NvM_CalcCrc_RemoveElement) @072428c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: NvM_MirrorCopy/36 
  Calls: 
NvM_StateMachine_TerminateCurrentLevel/53 (NvM_StateMachine_TerminateCurrentLevel) @072420e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: NvM_MirrorCopy/36 NvM_MultiPostService_Function/28 
  Calls: 
Fee_SetMode/52 (Fee_SetMode) @07242000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: NvM_MultiPostService_Function/28 
  Calls: 
SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0/51 (SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0) @07232c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: NvM_InsertRestoreBlockJob/38 NvM_CheckBlockStatus/37 NvM_PostService_Function/27 
  Calls: 
SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0/50 (SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0) @07232e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: NvM_InsertRestoreBlockJob/38 NvM_CheckBlockStatus/37 NvM_PostService_Function/27 
  Calls: 
NvM_BlockDescriptorTable/49 (NvM_BlockDescriptorTable) @0722fc18
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: NvM_GetUserRamBlockAddress/22 (read)NvM_GetMergedBlockNumber/23 (read)NvM_PreService_Function/26 (addr)NvM_MultiPostService_Function/28 (addr)NvM_InvokeSingleBlockCallback/29 (read)NvM_InvokeSingleBlockCallback/29 (read)NvM_CheckDataSetRomBlock/31 (read)NvM_CheckDataSetRomBlock/31 (read)NvM_InsertRestoreBlockJob/38 (read)NvM_InsertRestoreBlockJob/38 (read)NvM_InsertRestoreBlockJob/38 (read)NvM_InsertRestoreBlockJob/38 (read)NvM_InsertRestoreBlockJob/38 (read)NvM_CheckCondReadBlock/39 (read)NvM_CheckCondReadBlock/39 (read)NvM_CheckCondWriteBlock/40 (read)NvM_CheckCondWriteBlock/40 (read)NvM_CheckCondRestoreBlockDefaults/41 (read)NvM_CheckCondRestoreBlockDefaults/41 (read)NvM_CheckCondRestoreBlockDefaults/41 (read)NvM_CheckCondRestoreBlockDefaults/41 (read)NvM_CheckCondReadPRAMBlock/42 (read)NvM_CheckCondReadPRAMBlock/42 (read)NvM_CheckCondWritePRAMBlock/43 (read)NvM_CheckCondWritePRAMBlock/43 (read)NvM_CheckCondRestorePRAMBlockDefaults/44 (read)NvM_CheckCondRestorePRAMBlockDefaults/44 (read)NvM_CheckCondRestorePRAMBlockDefaults/44 (read)NvM_CheckCondRestorePRAMBlockDefaults/44 (read)NvM_CheckCondEraseNvBlock/47 (read)
  Availability: not_available
  Varpool flags: read-only
NvM_FatalError/48 (NvM_FatalError) @07232000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: NvM_GlobalCallLevel/4 (write)NvM_GlobalErrorStatus/3 (write)
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: NvM_GetUserRamBlockAddress/22 
  Calls: 
NvM_CheckCondEraseNvBlock/47 (NvM_CheckCondEraseNvBlock) @0722ee00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalGenericStatus/6 (read)NvM_AdminBlockTable/1 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 NvM_GetBlockIndexForValidId/17 
NvM_CheckCondInvalidateNvBlock/46 (NvM_CheckCondInvalidateNvBlock) @0722e700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalGenericStatus/6 (read)NvM_AdminBlockTable/1 (read)NvM_AdminBlockTable/1 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 NvM_GetBlockIndexForValidId/17 
NvM_CheckCondCancelJobs/45 (NvM_CheckCondCancelJobs) @0722e0e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalGenericStatus/6 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 NvM_GetBlockIndexForValidId/17 
NvM_CheckCondRestorePRAMBlockDefaults/44 (NvM_CheckCondRestorePRAMBlockDefaults) @07209c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalGenericStatus/6 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 NvM_GetBlockIndexForValidId/17 
NvM_CheckCondWritePRAMBlock/43 (NvM_CheckCondWritePRAMBlock) @07209460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalGenericStatus/6 (read)NvM_AdminBlockTable/1 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 NvM_GetBlockIndexForValidId/17 
NvM_CheckCondReadPRAMBlock/42 (NvM_CheckCondReadPRAMBlock) @07205c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalGenericStatus/6 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 NvM_GetBlockIndexForValidId/17 
NvM_CheckCondRestoreBlockDefaults/41 (NvM_CheckCondRestoreBlockDefaults) @07205540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalGenericStatus/6 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 NvM_GetBlockIndexForValidId/17 
NvM_CheckCondWriteBlock/40 (NvM_CheckCondWriteBlock) @07201d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalGenericStatus/6 (read)NvM_AdminBlockTable/1 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 NvM_GetBlockIndexForValidId/17 
NvM_CheckCondReadBlock/39 (NvM_CheckCondReadBlock) @07201540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalGenericStatus/6 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 Det_ASR40_ReportError/58 NvM_GetBlockIndexForValidId/17 
NvM_InsertRestoreBlockJob/38 (NvM_InsertRestoreBlockJob) @071f9e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_RestorePRAMBlockDefaults_Asc/55 (addr)NvM_RestoreBlockDefaults_Asc/56 (addr)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)NvM_AdminBlockTable/1 (read)NvM_AdminBlockTable/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0/51 NvM_Queue_InsertStandard/57 SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0/50 
NvM_CheckBlockStatus/37 (NvM_CheckBlockStatus) @071f9b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (read)NvM_GlobalGenericStatus/6 (read)NvM_GlobalGenericStatus/6 (write)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (read)NvM_GlobalGenericStatus/6 (read)NvM_GlobalGenericStatus/6 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0/51 SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0/50 
NvM_MirrorCopy/36 (NvM_MirrorCopy) @071f99a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_MirrorRetryCount/8 (write)NvM_GlobalErrorStatus/3 (write)NvM_CurrentServiceId/7 (read)NvM_MirrorRetryCount/8 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: NvM_StateMachine_TerminateCurrentLevel/53 NvM_CalcCrc_RemoveElement/54 
   Indirect call
   Indirect call
NvM_GetDataAddress/35 (NvM_GetDataAddress) @071f97e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: NvM_GetBufferAddress/34 
NvM_GetBufferAddress/34 (NvM_GetBufferAddress) @071f9620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_CurrentBlockDescriptorPtr/15 (read)NvM_GlobalWorkingStatus/11 (read)NvM_InternalBuffer/12 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: NvM_GetDataAddress/35 
  Calls: NvM_GetUserRamBlockAddress/22 
NvM_GetBlockLength/33 (NvM_GetBlockLength) @071f9380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
NvM_GetBlockCRCLength/32 (NvM_GetBlockCRCLength) @071f91c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
NvM_CheckDataSetRomBlock/31 (NvM_CheckDataSetRomBlock) @071f3d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_BlockDescriptorTable/49 (read)NvM_AdminBlockTable/1 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: NvM_CheckWriteProtection/30 
  Calls: 
NvM_CheckWriteProtection/30 (NvM_CheckWriteProtection) @071f3a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_AdminBlockTable/1 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: NvM_CheckDataSetRomBlock/31 
NvM_InvokeSingleBlockCallback/29 (NvM_InvokeSingleBlockCallback) @071f38c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_BlockDescriptorTable/49 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: NvM_MultiRequestFinishedSingleBlock/25 
  Calls: 
   Indirect call
NvM_MultiPostService_Function/28 (NvM_MultiPostService_Function) @071f3700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalBlockNumber/14 (write)NvM_CurrentBlockDescriptorPtr/15 (write)NvM_BlockDescriptorTable/49 (addr)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: NvM_StateMachine_TerminateCurrentLevel/53 Fee_SetMode/52 
NvM_PostService_Function/27 (NvM_PostService_Function) @071f3540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalWorkingStatus/11 (read)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (write)NvM_GlobalGenericStatus/6 (read)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (read)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (write)NvM_GlobalGenericStatus/6 (read)NvM_GlobalGenericStatus/6 (write)NvM_GlobalGenericStatus/6 (read)NvM_GlobalGenericStatus/6 (read)NvM_GlobalGenericStatus/6 (write)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (write)NvM_GlobalGenericStatus/6 (read)NvM_GlobalGenericStatus/6 (read)NvM_GlobalGenericStatus/6 (write)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (write)NvM_GlobalBlockNumber/14 (read)NvM_GlobalErrorStatus/3 (read)NvM_AdminBlockTable/1 (write)NvM_TempRamBlockAddress/13 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: NvM_MultiRequestFinishedSingleBlock/25 
  Calls: SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0/51 SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0/50 
NvM_PreService_Function/26 (NvM_PreService_Function) @071efd20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalBlockNumber/14 (read)NvM_BlockDescriptorTable/49 (addr)NvM_CurrentBlockDescriptorPtr/15 (write)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (read)NvM_GlobalWorkingStatus/11 (write)NvM_GlobalWorkingStatus/11 (read)NvM_GlobalWorkingStatus/11 (write)NvM_TempRamBlockAddress/13 (read)NvM_GlobalWorkingStatus/11 (read)NvM_GlobalWorkingStatus/11 (write)NvM_CurrentBlockDescriptorPtr/15 (read)NvM_GlobalWorkingStatus/11 (read)NvM_GlobalWorkingStatus/11 (write)NvM_GlobalWorkingStatus/11 (read)NvM_GlobalWorkingStatus/11 (write)NvM_CurrentBlockDescriptorPtr/15 (read)NvM_GlobalWorkingStatus/11 (read)NvM_GlobalWorkingStatus/11 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
NvM_MultiRequestFinishedSingleBlock/25 (NvM_MultiRequestFinishedSingleBlock) @071ef9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalBlockNumber/14 (read)NvM_CurrentServiceId/7 (read)NvM_GlobalErrorStatus/3 (read)NvM_GlobalErrorStatus/3 (read)NvM_GlobalErrorStatus/3 (read)NvM_GlobalErrorStatus/3 (read)NvM_AdminBlockTable/1 (write)NvM_GlobalCallLevel/4 (read)NvM_CurrentFunctionPtr/16 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: NvM_InvokeSingleBlockCallback/29 NvM_PostService_Function/27 
NvM_ResetRedundantBlockDataIndex/24 (NvM_ResetRedundantBlockDataIndex) @071ef7e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_CurrentBlockDescriptorPtr/15 (read)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
NvM_GetMergedBlockNumber/23 (NvM_GetMergedBlockNumber) @071ef540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalBlockNumber/14 (read)NvM_BlockDescriptorTable/49 (read)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
NvM_GetUserRamBlockAddress/22 (NvM_GetUserRamBlockAddress) @071ef380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalWorkingStatus/11 (read)NvM_InternalBuffer/12 (addr)NvM_TempRamBlockAddress/13 (read)NvM_TempRamBlockAddress/13 (read)NvM_CurrentBlockDescriptorPtr/15 (read)NvM_GlobalBlockNumber/14 (read)NvM_BlockDescriptorTable/49 (read)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: NvM_GetBufferAddress/34 
  Calls: NvM_FatalError/48 
NvM_SetPermanentRamBlockChanged/21 (NvM_SetPermanentRamBlockChanged) @071ef0e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalWorkingStatus/11 (read)NvM_GlobalWorkingStatus/11 (read)NvM_GlobalWorkingStatus/11 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
NvM_SetPermanentRamBlockUnchanged/20 (NvM_SetPermanentRamBlockUnchanged) @071abd20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalWorkingStatus/11 (read)NvM_GlobalWorkingStatus/11 (read)NvM_GlobalWorkingStatus/11 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
NvM_SetPermanentRamBlockValid/19 (NvM_SetPermanentRamBlockValid) @071ab8c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalWorkingStatus/11 (read)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
NvM_SetPermanentRamBlockInvalid/18 (NvM_SetPermanentRamBlockInvalid) @071ab540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: NvM_GlobalWorkingStatus/11 (read)NvM_GlobalBlockNumber/14 (read)NvM_AdminBlockTable/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
NvM_GetBlockIndexForValidId/17 (NvM_GetBlockIndexForValidId) @071ab1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: NvM_CheckCondEraseNvBlock/47 NvM_CheckCondInvalidateNvBlock/46 NvM_CheckCondCancelJobs/45 NvM_CheckCondRestorePRAMBlockDefaults/44 NvM_CheckCondWritePRAMBlock/43 NvM_CheckCondReadPRAMBlock/42 NvM_CheckCondRestoreBlockDefaults/41 NvM_CheckCondWriteBlock/40 NvM_CheckCondReadBlock/39 
  Calls: 
NvM_CurrentFunctionPtr/16 (NvM_CurrentFunctionPtr) @07181708
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_MultiRequestFinishedSingleBlock/25 (write)
  Availability: available
  Varpool flags: initialized
NvM_CurrentBlockDescriptorPtr/15 (NvM_CurrentBlockDescriptorPtr) @07181678
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_GetUserRamBlockAddress/22 (read)NvM_ResetRedundantBlockDataIndex/24 (read)NvM_PreService_Function/26 (write)NvM_PreService_Function/26 (read)NvM_PreService_Function/26 (read)NvM_MultiPostService_Function/28 (write)NvM_GetBufferAddress/34 (read)
  Availability: available
  Varpool flags: initialized
NvM_GlobalBlockNumber/14 (NvM_GlobalBlockNumber) @07181630
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_SetPermanentRamBlockInvalid/18 (read)NvM_SetPermanentRamBlockValid/19 (read)NvM_GetUserRamBlockAddress/22 (read)NvM_GetMergedBlockNumber/23 (read)NvM_GetMergedBlockNumber/23 (read)NvM_ResetRedundantBlockDataIndex/24 (read)NvM_MultiRequestFinishedSingleBlock/25 (read)NvM_PreService_Function/26 (read)NvM_PreService_Function/26 (read)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (read)NvM_MultiPostService_Function/28 (write)NvM_CheckBlockStatus/37 (read)NvM_CheckBlockStatus/37 (read)
  Availability: available
  Varpool flags: initialized
NvM_TempRamBlockAddress/13 (NvM_TempRamBlockAddress) @071815e8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_GetUserRamBlockAddress/22 (read)NvM_GetUserRamBlockAddress/22 (read)NvM_PreService_Function/26 (read)NvM_PostService_Function/27 (write)
  Availability: available
  Varpool flags: initialized
NvM_InternalBuffer/12 (NvM_InternalBuffer) @071815a0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_GetUserRamBlockAddress/22 (addr)NvM_GetBufferAddress/34 (addr)
  Availability: available
  Varpool flags:
NvM_GlobalWorkingStatus/11 (NvM_GlobalWorkingStatus) @07181558
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_SetPermanentRamBlockInvalid/18 (read)NvM_SetPermanentRamBlockValid/19 (read)NvM_SetPermanentRamBlockUnchanged/20 (read)NvM_SetPermanentRamBlockUnchanged/20 (read)NvM_SetPermanentRamBlockUnchanged/20 (write)NvM_SetPermanentRamBlockChanged/21 (read)NvM_SetPermanentRamBlockChanged/21 (read)NvM_SetPermanentRamBlockChanged/21 (write)NvM_GetUserRamBlockAddress/22 (read)NvM_PreService_Function/26 (write)NvM_PreService_Function/26 (read)NvM_PreService_Function/26 (write)NvM_PreService_Function/26 (read)NvM_PreService_Function/26 (write)NvM_PreService_Function/26 (read)NvM_PreService_Function/26 (write)NvM_PreService_Function/26 (read)NvM_PreService_Function/26 (write)NvM_PreService_Function/26 (read)NvM_PreService_Function/26 (write)NvM_PostService_Function/27 (read)NvM_GetBufferAddress/34 (read)
  Availability: available
  Varpool flags:
NvM_RamBlockCrcCalcCount/10 (NvM_RamBlockCrcCalcCount) @07181510
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Varpool flags:
NvM_CrcQueue/9 (NvM_CrcQueue) @071814c8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized
NvM_MirrorRetryCount/8 (NvM_MirrorRetryCount) @07181480
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_MirrorCopy/36 (write)NvM_MirrorCopy/36 (write)
  Availability: available
  Varpool flags:
NvM_CurrentServiceId/7 (NvM_CurrentServiceId) @07181438
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_MultiRequestFinishedSingleBlock/25 (read)NvM_MirrorCopy/36 (read)
  Availability: available
  Varpool flags:
NvM_GlobalGenericStatus/6 (NvM_GlobalGenericStatus) @071813f0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (write)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (write)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (write)NvM_CheckBlockStatus/37 (read)NvM_CheckBlockStatus/37 (write)NvM_CheckBlockStatus/37 (read)NvM_CheckBlockStatus/37 (write)NvM_CheckCondReadBlock/39 (read)NvM_CheckCondWriteBlock/40 (read)NvM_CheckCondRestoreBlockDefaults/41 (read)NvM_CheckCondReadPRAMBlock/42 (read)NvM_CheckCondWritePRAMBlock/43 (read)NvM_CheckCondRestorePRAMBlockDefaults/44 (read)NvM_CheckCondCancelJobs/45 (read)NvM_CheckCondInvalidateNvBlock/46 (read)NvM_CheckCondEraseNvBlock/47 (read)
  Availability: available
  Varpool flags: initialized
NvM_WriteRetryCount/5 (NvM_WriteRetryCount) @071813a8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized
NvM_GlobalCallLevel/4 (NvM_GlobalCallLevel) @07181360
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_FatalError/48 (write)NvM_MultiRequestFinishedSingleBlock/25 (read)
  Availability: available
  Varpool flags: initialized
NvM_GlobalErrorStatus/3 (NvM_GlobalErrorStatus) @07181318
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_FatalError/48 (write)NvM_MultiRequestFinishedSingleBlock/25 (read)NvM_MultiRequestFinishedSingleBlock/25 (read)NvM_MultiRequestFinishedSingleBlock/25 (read)NvM_MultiRequestFinishedSingleBlock/25 (read)NvM_PostService_Function/27 (read)NvM_MirrorCopy/36 (write)
  Availability: available
  Varpool flags: initialized
NvM_ConfigurationId/2 (NvM_ConfigurationId) @071812d0
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized
NvM_AdminBlockTable/1 (NvM_AdminBlockTable) @07181288
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: NvM_SetPermanentRamBlockInvalid/18 (write)NvM_SetPermanentRamBlockValid/19 (write)NvM_GetMergedBlockNumber/23 (read)NvM_ResetRedundantBlockDataIndex/24 (write)NvM_MultiRequestFinishedSingleBlock/25 (write)NvM_PreService_Function/26 (read)NvM_PostService_Function/27 (write)NvM_PostService_Function/27 (read)NvM_PostService_Function/27 (write)NvM_PostService_Function/27 (write)NvM_PostService_Function/27 (write)NvM_PostService_Function/27 (write)NvM_CheckWriteProtection/30 (read)NvM_CheckDataSetRomBlock/31 (read)NvM_CheckBlockStatus/37 (read)NvM_CheckBlockStatus/37 (read)NvM_InsertRestoreBlockJob/38 (read)NvM_InsertRestoreBlockJob/38 (read)NvM_InsertRestoreBlockJob/38 (read)NvM_InsertRestoreBlockJob/38 (write)NvM_CheckCondReadBlock/39 (read)NvM_CheckCondWriteBlock/40 (read)NvM_CheckCondWriteBlock/40 (read)NvM_CheckCondRestoreBlockDefaults/41 (read)NvM_CheckCondReadPRAMBlock/42 (read)NvM_CheckCondWritePRAMBlock/43 (read)NvM_CheckCondWritePRAMBlock/43 (read)NvM_CheckCondRestorePRAMBlockDefaults/44 (read)NvM_CheckCondInvalidateNvBlock/46 (read)NvM_CheckCondInvalidateNvBlock/46 (read)NvM_CheckCondEraseNvBlock/47 (read)NvM_CheckCondEraseNvBlock/47 (read)
  Availability: available
  Varpool flags: initialized
NvM_FatalError ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel = 0;
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 1;
  return;

}


NvM_CheckCondEraseNvBlock (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  uint16 D.11442;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = NvM_GetBlockIndexForValidId (BlockId);
  # DEBUG BEGIN_STMT
  ConditionValid = 1;
  # DEBUG BEGIN_STMT
  if (RetBlockIndex == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 10);
  goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.62_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.62_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 20);
  goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 21);
  goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex;
  _7 = NvM_AdminBlockTable[_6].NvMDynStatus;
  _8 = (int) _7;
  _9 = _8 & 8;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 25);
  goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _10 = (int) RetBlockIndex;
  _11 = NvM_BlockDescriptorTable[_10].blockJobPriority;
  if (_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 9, 24);

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (ConditionValid == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 14> :
  # DEBUG BEGIN_STMT
  D.11442 = RetBlockIndex;
  return D.11442;

}


NvM_CheckCondInvalidateNvBlock (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  uint16 D.11423;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = NvM_GetBlockIndexForValidId (BlockId);
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  if (RetBlockIndex == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 11, 10);
  goto <bb 11>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.61_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.61_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 11, 20);
  goto <bb 11>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 11, 21);
  goto <bb 11>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex;
  _7 = NvM_AdminBlockTable[_6].NvMDynStatus;
  _8 = (int) _7;
  _9 = _8 & 8;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 11, 25);
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  ConditionValid = 1;

  <bb 11> :
  # DEBUG BEGIN_STMT
  if (ConditionValid == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 13> :
  # DEBUG BEGIN_STMT
  D.11423 = RetBlockIndex;
  return D.11423;

}


NvM_CheckCondCancelJobs (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  uint16 D.11407;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = NvM_GetBlockIndexForValidId (BlockId);
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  if (RetBlockIndex == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 16, 10);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.60_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.60_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 16, 20);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ConditionValid = 1;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (ConditionValid == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.11407 = RetBlockIndex;
  return D.11407;

}


NvM_CheckCondRestorePRAMBlockDefaults (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  uint16 D.11397;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = NvM_GetBlockIndexForValidId (BlockId);
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  if (RetBlockIndex == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 10);
  goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.59_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.59_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 20);
  goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 21);
  goto <bb 15>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex;
  _7 = NvM_BlockDescriptorTable[_6].ramBlockDataAddress;
  if (_7 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _8 = (int) RetBlockIndex;
  _9 = NvM_BlockDescriptorTable[_8].blockDesc;
  _10 = _9 & 131072;
  if (_10 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 13);
  goto <bb 15>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _11 = (int) RetBlockIndex;
  _12 = NvM_BlockDescriptorTable[_11].romBlockDataAddress;
  if (_12 == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  _13 = (int) RetBlockIndex;
  _14 = NvM_BlockDescriptorTable[_13].initBlockCallback;
  if (_14 == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 24, 17);
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ConditionValid = 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (ConditionValid == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 17> :
  # DEBUG BEGIN_STMT
  D.11397 = RetBlockIndex;
  return D.11397;

}


NvM_CheckCondWritePRAMBlock (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  uint16 D.11376;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = NvM_GetBlockIndexForValidId (BlockId);
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  if (RetBlockIndex == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 10);
  goto <bb 14>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.58_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.58_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 20);
  goto <bb 14>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 21);
  goto <bb 14>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex;
  _7 = NvM_AdminBlockTable[_6].NvMDynStatus;
  _8 = (int) _7;
  _9 = _8 & 8;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 25);
  goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _10 = (int) RetBlockIndex;
  _11 = NvM_BlockDescriptorTable[_10].ramBlockDataAddress;
  if (_11 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  _12 = (int) RetBlockIndex;
  _13 = NvM_BlockDescriptorTable[_12].blockDesc;
  _14 = _13 & 131072;
  if (_14 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 23, 13);
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  ConditionValid = 1;

  <bb 14> :
  # DEBUG BEGIN_STMT
  if (ConditionValid == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 16> :
  # DEBUG BEGIN_STMT
  D.11376 = RetBlockIndex;
  return D.11376;

}


NvM_CheckCondReadPRAMBlock (NvM_BlockIdType BlockId)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  uint16 D.11356;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = NvM_GetBlockIndexForValidId (BlockId);
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  if (RetBlockIndex == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 22, 10);
  goto <bb 12>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.57_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.57_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 22, 20);
  goto <bb 12>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 22, 21);
  goto <bb 12>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex;
  _7 = NvM_BlockDescriptorTable[_6].ramBlockDataAddress;
  if (_7 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _8 = (int) RetBlockIndex;
  _9 = NvM_BlockDescriptorTable[_8].blockDesc;
  _10 = _9 & 131072;
  if (_10 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 22, 13);
  goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  ConditionValid = 1;

  <bb 12> :
  # DEBUG BEGIN_STMT
  if (ConditionValid == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 14> :
  # DEBUG BEGIN_STMT
  D.11356 = RetBlockIndex;
  return D.11356;

}


NvM_CheckCondRestoreBlockDefaults (NvM_BlockIdType BlockId, void * NvM_DstPtr)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  uint16 D.11339;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = NvM_GetBlockIndexForValidId (BlockId);
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  if (RetBlockIndex == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 10);
  goto <bb 16>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.56_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.56_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 20);
  goto <bb 16>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 21);
  goto <bb 16>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex;
  _7 = NvM_BlockDescriptorTable[_6].ramBlockDataAddress;
  if (_7 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _8 = (int) RetBlockIndex;
  _9 = NvM_BlockDescriptorTable[_8].blockDesc;
  _10 = _9 & 131072;
  if (_10 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  if (NvM_DstPtr == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 13);
  goto <bb 16>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _11 = (int) RetBlockIndex;
  _12 = NvM_BlockDescriptorTable[_11].romBlockDataAddress;
  if (_12 == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  _13 = (int) RetBlockIndex;
  _14 = NvM_BlockDescriptorTable[_13].initBlockCallback;
  if (_14 == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 8, 17);
  goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  ConditionValid = 1;

  <bb 16> :
  # DEBUG BEGIN_STMT
  if (ConditionValid == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 18> :
  # DEBUG BEGIN_STMT
  D.11339 = RetBlockIndex;
  return D.11339;

}


NvM_CheckCondWriteBlock (NvM_BlockIdType BlockId, const void * NvM_SrcPtr)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  uint16 D.11317;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = NvM_GetBlockIndexForValidId (BlockId);
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  if (RetBlockIndex == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 10);
  goto <bb 15>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.55_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.55_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 20);
  goto <bb 15>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 21);
  goto <bb 15>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex;
  _7 = NvM_AdminBlockTable[_6].NvMDynStatus;
  _8 = (int) _7;
  _9 = _8 & 8;
  if (_9 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 25);
  goto <bb 15>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _10 = (int) RetBlockIndex;
  _11 = NvM_BlockDescriptorTable[_10].ramBlockDataAddress;
  if (_11 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _12 = (int) RetBlockIndex;
  _13 = NvM_BlockDescriptorTable[_12].blockDesc;
  _14 = _13 & 131072;
  if (_14 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  if (NvM_SrcPtr == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 7, 13);
  goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  ConditionValid = 1;

  <bb 15> :
  # DEBUG BEGIN_STMT
  if (ConditionValid == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 17> :
  # DEBUG BEGIN_STMT
  D.11317 = RetBlockIndex;
  return D.11317;

}


NvM_CheckCondReadBlock (NvM_BlockIdType BlockId, void * NvM_DstPtr)
{
  boolean ConditionValid;
  uint16 RetBlockIndex;
  uint16 D.11296;

  <bb 2> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = NvM_GetBlockIndexForValidId (BlockId);
  # DEBUG BEGIN_STMT
  ConditionValid = 0;
  # DEBUG BEGIN_STMT
  if (RetBlockIndex == 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 6, 10);
  goto <bb 13>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.54_1 = NvM_GlobalGenericStatus;
  _2 = (unsigned int) NvM_GlobalGenericStatus.54_1;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 6, 20);
  goto <bb 13>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (int) RetBlockIndex;
  _5 = NvM_AdminBlockTable[_4].NvMResult;
  if (_5 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 6, 21);
  goto <bb 13>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _6 = (int) RetBlockIndex;
  _7 = NvM_BlockDescriptorTable[_6].ramBlockDataAddress;
  if (_7 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _8 = (int) RetBlockIndex;
  _9 = NvM_BlockDescriptorTable[_8].blockDesc;
  _10 = _9 & 131072;
  if (_10 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  if (NvM_DstPtr == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  Det_ASR40_ReportError (20, 0, 6, 13);
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  ConditionValid = 1;

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (ConditionValid == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 15> :
  # DEBUG BEGIN_STMT
  D.11296 = RetBlockIndex;
  return D.11296;

}


NvM_InsertRestoreBlockJob (boolean PRAM, uint16 BlockId, uint16 BlockIndex, void * NvM_DestPtr)
{
  uint8 CurrentServiceId;
  void (*NvM_CurrentFunctionPtrType) (void) StateMachineFunction;
  Std_ReturnType Result;
  Std_ReturnType D.11278;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (PRAM != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  StateMachineFunction = NvM_RestorePRAMBlockDefaults_Asc;
  # DEBUG BEGIN_STMT
  CurrentServiceId = 24;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  StateMachineFunction = NvM_RestoreBlockDefaults_Asc;
  # DEBUG BEGIN_STMT
  CurrentServiceId = 8;

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  _1 = (int) BlockIndex;
  _2 = NvM_BlockDescriptorTable[_1].blockDesc;
  _3 = _2 >> 7;
  _4 = (unsigned char) _3;
  _5 = (unsigned int) _4;
  _6 = _5 & 3;
  if (_6 == 2)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  _7 = (int) BlockIndex;
  _8 = NvM_BlockDescriptorTable[_7].romBlockNum;
  if (_8 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _9 = (int) BlockIndex;
  _10 = NvM_AdminBlockTable[_9].NvMDatasetBlockIndex;
  _11 = (int) BlockIndex;
  _12 = NvM_BlockDescriptorTable[_11].nvBlockNum;
  if (_10 < _12)
    goto <bb 12>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _13 = (int) BlockIndex;
  _14 = NvM_AdminBlockTable[_13].NvMDatasetBlockIndex;
  _15 = (int) _14;
  _16 = (int) BlockIndex;
  _17 = NvM_BlockDescriptorTable[_16].romBlockNum;
  _18 = (int) _17;
  _19 = (int) BlockIndex;
  _20 = NvM_BlockDescriptorTable[_19].nvBlockNum;
  _21 = (int) _20;
  _22 = _18 + _21;
  if (_15 >= _22)
    goto <bb 12>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _23 = (int) BlockIndex;
  _24 = NvM_AdminBlockTable[_23].NvMResult;
  if (_24 != 2)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  Result = NvM_Queue_InsertStandard (BlockIndex, NvM_DestPtr, StateMachineFunction);
  # DEBUG BEGIN_STMT
  if (Result == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _25 = (int) BlockIndex;
  NvM_AdminBlockTable[_25].NvMCurrentServiceId = CurrentServiceId;

  <bb 12> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.11278 = Result;
  return D.11278;

}


NvM_CheckBlockStatus ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.50_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.50_1;
  _3 = NvM_AdminBlockTable[_2].NvMResult;
  if (_3 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.51_4 = NvM_GlobalGenericStatus;
  _5 = NvM_GlobalGenericStatus.51_4 | 32;
  NvM_GlobalGenericStatus = _5;

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.52_6 = NvM_GlobalBlockNumber;
  _7 = (int) NvM_GlobalBlockNumber.52_6;
  _8 = NvM_AdminBlockTable[_7].NvMResult;
  if (_8 == 6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.53_9 = NvM_GlobalGenericStatus;
  _10 = NvM_GlobalGenericStatus.53_9 | 64;
  NvM_GlobalGenericStatus = _10;

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  return;

}


NvM_MirrorCopy (Std_ReturnType (*NvM_NvToRamCopyCallbackType) (const void *) ReadCallback, Std_ReturnType (*NvM_RamToNvCopyCallbackType) (void *) WriteCallback, uint8 * DataBufPtr)
{
  Std_ReturnType ReturnVal;
  Std_ReturnType D.11259;

  <bb 2> :
  # DEBUG BEGIN_STMT
  ReturnVal = 1;
  # DEBUG BEGIN_STMT
  if (ReadCallback != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ReturnVal = ReadCallback (DataBufPtr);
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  ReturnVal = WriteCallback (DataBufPtr);

  <bb 5> :
  # DEBUG BEGIN_STMT
  if (ReturnVal != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_MirrorRetryCount = 0;
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus = 1;
  # DEBUG BEGIN_STMT
  NvM_CurrentServiceId.49_1 = NvM_CurrentServiceId;
  if (NvM_CurrentServiceId.49_1 == 5)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_CalcCrc_RemoveElement ();

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  NvM_MirrorRetryCount = 0;

  <bb 10> :
  # DEBUG BEGIN_STMT
  D.11259 = ReturnVal;
  return D.11259;

}


NvM_GetDataAddress ()
{
  uint8 * DataBufPtr;
  uint8 * D.11249;

  <bb 2> :
  # DEBUG BEGIN_STMT
  DataBufPtr = NvM_GetBufferAddress ();
  # DEBUG BEGIN_STMT
  D.11249 = DataBufPtr;
  return D.11249;

}


NvM_GetBufferAddress ()
{
  uint8 * DataBufPtr;
  uint8 * D.11247;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.47_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.47_1->blockDesc;
  _3 = _2 & 8192;
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  NvM_GlobalWorkingStatus.48_4 = NvM_GlobalWorkingStatus;
  _5 = (unsigned int) NvM_GlobalWorkingStatus.48_4;
  _6 = _5 & 4096;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  DataBufPtr = &NvM_InternalBuffer;
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DataBufPtr = NvM_GetUserRamBlockAddress ();

  <bb 6> :
  # DEBUG BEGIN_STMT
  D.11247 = DataBufPtr;
  return D.11247;

}


NvM_GetBlockLength (uint32 BlockDesc, uint16 BlkLength)
{
  uint16 Length;
  uint16 D.11241;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Length = BlkLength;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.11241 = Length;
  return D.11241;

}


NvM_GetBlockCRCLength (uint32 BlockDesc)
{
  uint8 NvMCrcLength;
  uint8 D.11239;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned char) BlockDesc;
  _2 = (unsigned int) _1;
  _3 = _2 & 7;
  if (_3 == 3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvMCrcLength = 4;
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) BlockDesc;
  _5 = (unsigned int) _4;
  _6 = _5 & 7;
  if (_6 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvMCrcLength = 2;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _7 = (unsigned char) BlockDesc;
  _8 = (unsigned int) _7;
  _9 = _8 & 7;
  if (_9 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvMCrcLength = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvMCrcLength = 0;

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.11239 = NvMCrcLength;
  return D.11239;

}


NvM_CheckDataSetRomBlock (uint16 BlockIndex)
{
  boolean Result;
  boolean D.11228;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 0;
  # DEBUG BEGIN_STMT
  _1 = (int) BlockIndex;
  _2 = NvM_BlockDescriptorTable[_1].blockDesc;
  _3 = _2 >> 7;
  _4 = (unsigned char) _3;
  _5 = (unsigned int) _4;
  _6 = _5 & 3;
  if (_6 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _7 = (int) BlockIndex;
  _8 = NvM_AdminBlockTable[_7].NvMDatasetBlockIndex;
  _9 = (int) BlockIndex;
  _10 = NvM_BlockDescriptorTable[_9].nvBlockNum;
  if (_8 >= _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Result = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.11228 = Result;
  return D.11228;

}


NvM_CheckWriteProtection (uint16 BlockIndex)
{
  boolean Result;
  boolean D.11222;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Result = 0;
  # DEBUG BEGIN_STMT
  _1 = (int) BlockIndex;
  _2 = NvM_AdminBlockTable[_1].NvMDynStatus;
  _3 = (unsigned int) _2;
  _4 = _3 & 34;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Result = 1;
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = NvM_CheckDataSetRomBlock (BlockIndex);
  if (_5 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Result = 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.11222 = Result;
  return D.11222;

}


NvM_InvokeSingleBlockCallback (uint16 BlockIndex, uint8 ServiceId, uint8 ErrorStatus)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (int) BlockIndex;
  _2 = NvM_BlockDescriptorTable[_1].singleBlockCallback;
  if (_2 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _3 = (int) BlockIndex;
  _4 = NvM_BlockDescriptorTable[_3].singleBlockCallback;
  _4 (ServiceId, ErrorStatus);

  <bb 4> :
  return;

}


NvM_MultiPostService_Function ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Fee_SetMode (0);
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber = 0;
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr = &NvM_BlockDescriptorTable[0];
  # DEBUG BEGIN_STMT
  NvM_StateMachine_TerminateCurrentLevel ();
  return;

}


NvM_PostService_Function ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  SchM_Enter_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.33_1 = NvM_GlobalWorkingStatus;
  NvM_GlobalBlockNumber.34_2 = NvM_GlobalBlockNumber;
  _3 = (int) NvM_GlobalBlockNumber.34_2;
  _4 = NvM_GlobalWorkingStatus.33_1 & 33023;
  NvM_AdminBlockTable[_3].NvMDynStatus = _4;
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.35_5 = NvM_GlobalGenericStatus;
  _6 = (unsigned int) NvM_GlobalGenericStatus.35_5;
  _7 = _6 & 128;
  if (_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.36_8 = NvM_GlobalBlockNumber;
  _9 = (int) NvM_GlobalBlockNumber.36_8;
  _10 = NvM_AdminBlockTable[_9].NvMDynStatus;
  NvM_GlobalBlockNumber.37_11 = NvM_GlobalBlockNumber;
  _12 = (int) NvM_GlobalBlockNumber.37_11;
  _13 = _10 | 8193;
  NvM_AdminBlockTable[_12].NvMDynStatus = _13;
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.38_14 = NvM_GlobalGenericStatus;
  _15 = NvM_GlobalGenericStatus.38_14 & 65407;
  NvM_GlobalGenericStatus = _15;

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.39_16 = NvM_GlobalGenericStatus;
  _17 = (unsigned int) NvM_GlobalGenericStatus.39_16;
  _18 = _17 & 96;
  if (_18 == 32)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.40_19 = NvM_GlobalGenericStatus;
  _20 = NvM_GlobalGenericStatus.40_19 & 65503;
  NvM_GlobalGenericStatus = _20;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.41_21 = NvM_GlobalBlockNumber;
  _22 = (int) NvM_GlobalBlockNumber.41_21;
  NvM_AdminBlockTable[_22].NvMResult = 2;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.42_23 = NvM_GlobalGenericStatus;
  _24 = (unsigned int) NvM_GlobalGenericStatus.42_23;
  _25 = _24 & 64;
  if (_25 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_GlobalGenericStatus.43_26 = NvM_GlobalGenericStatus;
  _27 = NvM_GlobalGenericStatus.43_26 & 65471;
  NvM_GlobalGenericStatus = _27;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.44_28 = NvM_GlobalBlockNumber;
  _29 = (int) NvM_GlobalBlockNumber.44_28;
  NvM_AdminBlockTable[_29].NvMResult = 6;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.45_30 = NvM_GlobalBlockNumber;
  _31 = (int) NvM_GlobalBlockNumber.45_30;
  NvM_GlobalErrorStatus.46_32 = NvM_GlobalErrorStatus;
  NvM_AdminBlockTable[_31].NvMResult = NvM_GlobalErrorStatus.46_32;

  <bb 9> :
  # DEBUG BEGIN_STMT
  SchM_Exit_NvM_SCHM_NVM_EXCLUSIVE_AREA_0 ();
  # DEBUG BEGIN_STMT
  NvM_TempRamBlockAddress = 0B;
  return;

}


NvM_PreService_Function ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.23_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.23_1;
  _3 = &NvM_BlockDescriptorTable[_2];
  NvM_CurrentBlockDescriptorPtr = _3;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.24_4 = NvM_GlobalBlockNumber;
  _5 = (int) NvM_GlobalBlockNumber.24_4;
  _6 = NvM_AdminBlockTable[_5].NvMDynStatus;
  NvM_GlobalWorkingStatus = _6;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.25_7 = NvM_GlobalWorkingStatus;
  _8 = NvM_GlobalWorkingStatus.25_7 & 47275;
  NvM_GlobalWorkingStatus = _8;
  # DEBUG BEGIN_STMT
  NvM_TempRamBlockAddress.26_9 = NvM_TempRamBlockAddress;
  if (NvM_TempRamBlockAddress.26_9 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.27_10 = NvM_GlobalWorkingStatus;
  _11 = NvM_GlobalWorkingStatus.27_10 & 65023;
  NvM_GlobalWorkingStatus = _11;
  goto <bb 8>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.28_12 = NvM_CurrentBlockDescriptorPtr;
  _13 = NvM_CurrentBlockDescriptorPtr.28_12->blockDesc;
  _14 = _13 & 131072;
  if (_14 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.29_15 = NvM_GlobalWorkingStatus;
  _16 = NvM_GlobalWorkingStatus.29_15 | 4096;
  NvM_GlobalWorkingStatus = _16;
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.30_17 = NvM_GlobalWorkingStatus;
  _18 = NvM_GlobalWorkingStatus.30_17 & 65023;
  NvM_GlobalWorkingStatus = _18;
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.31_19 = NvM_CurrentBlockDescriptorPtr;
  _20 = NvM_CurrentBlockDescriptorPtr.31_19->ramBlockDataAddress;
  if (_20 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.32_21 = NvM_GlobalWorkingStatus;
  _22 = NvM_GlobalWorkingStatus.32_21 | 512;
  NvM_GlobalWorkingStatus = _22;

  <bb 8> :
  return;

}


NvM_MultiRequestFinishedSingleBlock (void (*NvM_CurrentFunctionPtrType) (void) NextState)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_PostService_Function ();
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.16_1 = NvM_GlobalBlockNumber;
  NvM_CurrentServiceId.17_2 = NvM_CurrentServiceId;
  NvM_GlobalErrorStatus.18_3 = NvM_GlobalErrorStatus;
  NvM_InvokeSingleBlockCallback (NvM_GlobalBlockNumber.16_1, NvM_CurrentServiceId.17_2, NvM_GlobalErrorStatus.18_3);
  # DEBUG BEGIN_STMT
  NvM_GlobalErrorStatus.19_4 = NvM_GlobalErrorStatus;
  if (NvM_GlobalErrorStatus.19_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  NvM_GlobalErrorStatus.20_5 = NvM_GlobalErrorStatus;
  if (NvM_GlobalErrorStatus.20_5 != 4)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  NvM_GlobalErrorStatus.21_6 = NvM_GlobalErrorStatus;
  if (NvM_GlobalErrorStatus.21_6 != 5)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  NvM_AdminBlockTable[0].NvMDatasetBlockIndex = 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_GlobalCallLevel.22_7 = NvM_GlobalCallLevel;
  _8 = (int) NvM_GlobalCallLevel.22_7;
  NvM_CurrentFunctionPtr[_8] = NextState;
  return;

}


NvM_ResetRedundantBlockDataIndex ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.14_1 = NvM_CurrentBlockDescriptorPtr;
  _2 = NvM_CurrentBlockDescriptorPtr.14_1->blockDesc;
  _3 = _2 >> 7;
  _4 = (unsigned char) _3;
  _5 = (unsigned int) _4;
  _6 = _5 & 3;
  if (_6 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.15_7 = NvM_GlobalBlockNumber;
  _8 = (int) NvM_GlobalBlockNumber.15_7;
  NvM_AdminBlockTable[_8].NvMDatasetBlockIndex = 0;

  <bb 4> :
  return;

}


NvM_GetMergedBlockNumber ()
{
  uint16 ret;
  uint16 D.11188;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.12_1 = NvM_GlobalBlockNumber;
  _2 = (int) NvM_GlobalBlockNumber.12_1;
  _3 = NvM_BlockDescriptorTable[_2].nvBlockBaseNum;
  NvM_GlobalBlockNumber.13_4 = NvM_GlobalBlockNumber;
  _5 = (int) NvM_GlobalBlockNumber.13_4;
  _6 = NvM_AdminBlockTable[_5].NvMDatasetBlockIndex;
  _7 = (short unsigned int) _6;
  ret = _3 | _7;
  # DEBUG BEGIN_STMT
  D.11188 = ret;
  return D.11188;

}


NvM_GetUserRamBlockAddress ()
{
  uint8 * UserRamBlockAddress;
  uint8 * D.11186;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.8_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.8_1;
  _3 = _2 & 4096;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  UserRamBlockAddress = &NvM_InternalBuffer;
  goto <bb 9>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  NvM_TempRamBlockAddress.9_4 = NvM_TempRamBlockAddress;
  if (NvM_TempRamBlockAddress.9_4 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  UserRamBlockAddress = NvM_TempRamBlockAddress;
  goto <bb 9>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  NvM_CurrentBlockDescriptorPtr.10_5 = NvM_CurrentBlockDescriptorPtr;
  _6 = NvM_CurrentBlockDescriptorPtr.10_5->ramBlockDataAddress;
  if (_6 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.11_7 = NvM_GlobalBlockNumber;
  _8 = (int) NvM_GlobalBlockNumber.11_7;
  UserRamBlockAddress = NvM_BlockDescriptorTable[_8].ramBlockDataAddress;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  UserRamBlockAddress = 0B;
  # DEBUG BEGIN_STMT
  NvM_FatalError ();

  <bb 9> :
  # DEBUG BEGIN_STMT
  D.11186 = UserRamBlockAddress;
  return D.11186;

}


NvM_SetPermanentRamBlockChanged ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.6_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.6_1;
  _3 = _2 & 4608;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.7_4 = NvM_GlobalWorkingStatus;
  _5 = NvM_GlobalWorkingStatus.7_4 | 1;
  NvM_GlobalWorkingStatus = _5;

  <bb 4> :
  return;

}


NvM_SetPermanentRamBlockUnchanged ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.4_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.4_1;
  _3 = _2 & 4608;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.5_4 = NvM_GlobalWorkingStatus;
  _5 = NvM_GlobalWorkingStatus.5_4 & 65534;
  NvM_GlobalWorkingStatus = _5;

  <bb 4> :
  return;

}


NvM_SetPermanentRamBlockValid ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.2_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.2_1;
  _3 = _2 & 4608;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.3_4 = NvM_GlobalBlockNumber;
  _5 = (int) NvM_GlobalBlockNumber.3_4;
  NvM_AdminBlockTable[_5].NvMValid = 165;

  <bb 4> :
  return;

}


NvM_SetPermanentRamBlockInvalid ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  NvM_GlobalWorkingStatus.0_1 = NvM_GlobalWorkingStatus;
  _2 = (unsigned int) NvM_GlobalWorkingStatus.0_1;
  _3 = _2 & 4608;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  NvM_GlobalBlockNumber.1_4 = NvM_GlobalBlockNumber;
  _5 = (int) NvM_GlobalBlockNumber.1_4;
  NvM_AdminBlockTable[_5].NvMValid = 255;

  <bb 4> :
  return;

}


NvM_GetBlockIndexForValidId (const NvM_BlockIdType BlockId)
{
  uint16 RetBlockIndex;
  uint16 D.11167;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = BlockId + 65535;
  if (_1 <= 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = BlockId;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  RetBlockIndex = 9;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.11167 = RetBlockIndex;
  return D.11167;

}


