Symbol table:

Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall.part.0/141 (Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall.part.0) @071a7700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Clock_Ip_apfFreqTableRtcClkSrc/5 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/126 (365072224 (estimated locally),0.34 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_PLL_CLK_Frequency.part.0/140 (Clock_Ip_Get_PLL_CLK_Frequency.part.0) @071a7380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Clock_Ip_u32PllChecksum/8 (read)Clock_Ip_u32PllChecksum/8 (write)Clock_Ip_u32PllFreq/9 (write)Clock_Ip_u32PllFreq/9 (read)
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_Get_PLL_CLK_Frequency/19 (536870912 (estimated locally),0.50 per call) 
  Calls: Clock_Ip_PLL_VCO/134 (524845004 (estimated locally),0.49 per call) 
Clock_Ip_apfTableDividerValue.9134/138 (Clock_Ip_apfTableDividerValue) @070dad38
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency/20 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_GetFreq/137 (Clock_Ip_GetFreq) @070e72a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_apfFreqTable/6 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_SetExternalSignalFrequency/136 (Clock_Ip_SetExternalSignalFrequency) @070e70e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_axExtSignalFreqEntries/7 (read)Clock_Ip_axExtSignalFreqEntries/7 (write)
  Referring: 
  Availability: available
  Function flags: count:397250652 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_SetExternalOscillatorFrequency/135 (Clock_Ip_SetExternalOscillatorFrequency) @070e1ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_u32Fxosc/10 (write)Clock_Ip_u32Sxosc/11 (write)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_PLL_VCO/134 (Clock_Ip_PLL_VCO) @070e1d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Clock_Ip_Get_PLL_CLK_Frequency.part.0/140 (524845004 (estimated locally),0.49 per call) 
  Calls: Clock_Ip_Get_FXOSC_CLK_Frequency/17 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_TRACE_CLK_Frequency/133 (Clock_Ip_Get_TRACE_CLK_Frequency) @070e1b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_STM1_CLK_Frequency/132 (Clock_Ip_Get_STM1_CLK_Frequency) @070e19a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_STMB_CLK_Frequency/131 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_STMB_CLK_Frequency/131 (Clock_Ip_Get_STMB_CLK_Frequency) @070e17e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_STM1_CLK_Frequency/132 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_STM0_CLK_Frequency/130 (Clock_Ip_Get_STM0_CLK_Frequency) @070e1620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_STMA_CLK_Frequency/129 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_STMA_CLK_Frequency/129 (Clock_Ip_Get_STMA_CLK_Frequency) @070e1460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_STM0_CLK_Frequency/130 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_RTC0_CLK_Frequency/128 (Clock_Ip_Get_RTC0_CLK_Frequency) @070e12a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/126 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_RTC_CLK_Frequency/127 (Clock_Ip_Get_RTC_CLK_Frequency) @070e10e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/126 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/126 (Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall) @070dcee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_RTC0_CLK_Frequency/128 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_RTC_CLK_Frequency/127 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall.part.0/141 (365072224 (estimated locally),0.34 per call) 
Clock_Ip_Get_QSPI0_SFCK_CLK_Frequency/125 (Clock_Ip_Get_QSPI0_SFCK_CLK_Frequency) @070dcd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/124 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/124 (Clock_Ip_Get_QSPI_SFCK_CLK_Frequency) @070dcb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_QSPI0_SFCK_CLK_Frequency/125 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_FLEXCAN3_CLK_Frequency/123 (Clock_Ip_Get_FLEXCAN3_CLK_Frequency) @070dc9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANB_CLK_Frequency/122 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_FLEXCANB_CLK_Frequency/122 (Clock_Ip_Get_FLEXCANB_CLK_Frequency) @070dc7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_FLEXCAN3_CLK_Frequency/123 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_FLEXCAN2_CLK_Frequency/121 (Clock_Ip_Get_FLEXCAN2_CLK_Frequency) @070dc620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANA_CLK_Frequency/118 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_FLEXCAN1_CLK_Frequency/120 (Clock_Ip_Get_FLEXCAN1_CLK_Frequency) @070dc460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANA_CLK_Frequency/118 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_FLEXCAN0_CLK_Frequency/119 (Clock_Ip_Get_FLEXCAN0_CLK_Frequency) @070dc2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANA_CLK_Frequency/118 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_FLEXCANA_CLK_Frequency/118 (Clock_Ip_Get_FLEXCANA_CLK_Frequency) @070dc0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_FLEXCAN2_CLK_Frequency/121 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_FLEXCAN1_CLK_Frequency/120 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_FLEXCAN0_CLK_Frequency/119 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EMAC0_TX_CLK_Frequency/117 (Clock_Ip_Get_EMAC0_TX_CLK_Frequency) @070d2ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_EMAC_TX_CLK_Frequency/116 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EMAC_TX_CLK_Frequency/116 (Clock_Ip_Get_EMAC_TX_CLK_Frequency) @070d2d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_EMAC0_TX_CLK_Frequency/117 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EMAC0_TS_CLK_Frequency/115 (Clock_Ip_Get_EMAC0_TS_CLK_Frequency) @070d2b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_EMAC_TS_CLK_Frequency/114 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EMAC_TS_CLK_Frequency/114 (Clock_Ip_Get_EMAC_TS_CLK_Frequency) @070d29a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_EMAC0_TS_CLK_Frequency/115 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EMAC0_RX_CLK_Frequency/113 (Clock_Ip_Get_EMAC0_RX_CLK_Frequency) @070d27e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_EMAC_RX_CLK_Frequency/112 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EMAC_RX_CLK_Frequency/112 (Clock_Ip_Get_EMAC_RX_CLK_Frequency) @070d2620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_EMAC0_RX_CLK_Frequency/113 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/111 (Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency) @070d2460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_SWT0_CLK_Frequency/110 (Clock_Ip_Get_SWT0_CLK_Frequency) @070d22a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_SIUL0_CLK_Frequency/109 (Clock_Ip_Get_SIUL0_CLK_Frequency) @070d20e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency/108 (Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency) @070ceee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/107 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/107 (Clock_Ip_Get_QSPI0_RAM_CLK_Frequency) @070ced20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency/108 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_SEMA42_CLK_Frequency/106 (Clock_Ip_Get_SEMA42_CLK_Frequency) @070ceb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_MSCM_CLK_Frequency/105 (Clock_Ip_Get_MSCM_CLK_Frequency) @070ce9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_INTM_CLK_Frequency/104 (Clock_Ip_Get_INTM_CLK_Frequency) @070ce7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_I3C0_CLK_Frequency/103 (Clock_Ip_Get_I3C0_CLK_Frequency) @070ce620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_FLEXIO0_CLK_Frequency/102 (Clock_Ip_Get_FLEXIO0_CLK_Frequency) @070ce460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_CRC0_CLK_Frequency/101 (Clock_Ip_Get_CRC0_CLK_Frequency) @070ce2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_WKPU0_CLK_Frequency/100 (Clock_Ip_Get_WKPU0_CLK_Frequency) @070ce0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_TSENSE0_CLK_Frequency/99 (Clock_Ip_Get_TSENSE0_CLK_Frequency) @070c9ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_TRGMUX0_CLK_Frequency/98 (Clock_Ip_Get_TRGMUX0_CLK_Frequency) @070c9d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_SAI1_CLK_Frequency/97 (Clock_Ip_Get_SAI1_CLK_Frequency) @070c9b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_SAI0_CLK_Frequency/96 (Clock_Ip_Get_SAI0_CLK_Frequency) @070c99a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_PIT2_CLK_Frequency/95 (Clock_Ip_Get_PIT2_CLK_Frequency) @070c97e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_PIT1_CLK_Frequency/94 (Clock_Ip_Get_PIT1_CLK_Frequency) @070c9620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_PIT0_CLK_Frequency/93 (Clock_Ip_Get_PIT0_CLK_Frequency) @070c9460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPUART3_CLK_Frequency/92 (Clock_Ip_Get_LPUART3_CLK_Frequency) @070c92a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPUART2_CLK_Frequency/91 (Clock_Ip_Get_LPUART2_CLK_Frequency) @070c90e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPUART1_CLK_Frequency/90 (Clock_Ip_Get_LPUART1_CLK_Frequency) @070c5ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPUART0_CLK_Frequency/89 (Clock_Ip_Get_LPUART0_CLK_Frequency) @070c5d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPSPI3_CLK_Frequency/88 (Clock_Ip_Get_LPSPI3_CLK_Frequency) @070c5b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPSPI2_CLK_Frequency/87 (Clock_Ip_Get_LPSPI2_CLK_Frequency) @070c59a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPSPI1_CLK_Frequency/86 (Clock_Ip_Get_LPSPI1_CLK_Frequency) @070c57e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPSPI0_CLK_Frequency/85 (Clock_Ip_Get_LPSPI0_CLK_Frequency) @070c5620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPI2C1_CLK_Frequency/84 (Clock_Ip_Get_LPI2C1_CLK_Frequency) @070c5460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LPI2C0_CLK_Frequency/83 (Clock_Ip_Get_LPI2C0_CLK_Frequency) @070c52a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_ERM0_CLK_Frequency/82 (Clock_Ip_Get_ERM0_CLK_Frequency) @070c50e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EIM_CLK_Frequency/81 (Clock_Ip_Get_EIM_CLK_Frequency) @070bfee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_CMP1_CLK_Frequency/80 (Clock_Ip_Get_CMP1_CLK_Frequency) @070bfd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_CMP0_CLK_Frequency/79 (Clock_Ip_Get_CMP0_CLK_Frequency) @070bfb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_TEMPSENSE_CLK_Frequency/78 (Clock_Ip_Get_TEMPSENSE_CLK_Frequency) @070bf9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_TCM_CM7_0_CLK_Frequency/77 (Clock_Ip_Get_TCM_CM7_0_CLK_Frequency) @070bf7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LCU1_CLK_Frequency/76 (Clock_Ip_Get_LCU1_CLK_Frequency) @070bf620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LCU0_CLK_Frequency/75 (Clock_Ip_Get_LCU0_CLK_Frequency) @070bf460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EMIOS1_CLK_Frequency/74 (Clock_Ip_Get_EMIOS1_CLK_Frequency) @070bf2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EMIOS0_CLK_Frequency/73 (Clock_Ip_Get_EMIOS0_CLK_Frequency) @070bf0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/72 (Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency) @070bbee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/71 (Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency) @070bbd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/70 (Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency) @070bbb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/69 (Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency) @070bb9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/68 (Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency) @070bb7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/67 (Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency) @070bb620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/66 (Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency) @070bb460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/65 (Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency) @070bb2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/64 (Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency) @070bb0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/63 (Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency) @070b4ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/62 (Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency) @070b4d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/61 (Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency) @070b4b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/60 (Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency) @070b49a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/59 (Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency) @070b47e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/58 (Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency) @070b4620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/57 (Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency) @070b4460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/56 (Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency) @070b42a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/55 (Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency) @070b40e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/54 (Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency) @0709bee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/53 (Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency) @0709bd20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/52 (Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency) @0709bb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/51 (Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency) @0709b9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/50 (Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency) @0709b7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/49 (Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency) @0709b620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/48 (Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency) @0709b460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/47 (Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency) @0709b2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/46 (Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency) @0709b0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/45 (Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency) @07096ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/44 (Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency) @07096d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/43 (Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency) @07096b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/42 (Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency) @070969a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/41 (Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency) @070967e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_EDMA0_CLK_Frequency/40 (Clock_Ip_Get_EDMA0_CLK_Frequency) @07096620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_DMAMUX1_CLK_Frequency/39 (Clock_Ip_Get_DMAMUX1_CLK_Frequency) @07096460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_DMAMUX0_CLK_Frequency/38 (Clock_Ip_Get_DMAMUX0_CLK_Frequency) @070962a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_BCTU0_CLK_Frequency/37 (Clock_Ip_Get_BCTU0_CLK_Frequency) @070960e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_ADC1_CLK_Frequency/36 (Clock_Ip_Get_ADC1_CLK_Frequency) @0707eee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_ADC0_CLK_Frequency/35 (Clock_Ip_Get_ADC0_CLK_Frequency) @0707ed20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/27 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/34 (Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency) @0707eb60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/4 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_QSPI_MEM_CLK_Frequency/33 (Clock_Ip_Get_QSPI_MEM_CLK_Frequency) @0707e9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableProducerClkSrc/3 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_LBIST_CLK_Frequency/32 (Clock_Ip_Get_LBIST_CLK_Frequency) @0707e7e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableProducerClkSrc/3 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_DCM_CLK_Frequency/31 (Clock_Ip_Get_DCM_CLK_Frequency) @0707e620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableProducerClkSrc/3 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_HSE_CLK_Frequency/30 (Clock_Ip_Get_HSE_CLK_Frequency) @0707e460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableProducerClkSrc/3 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (Clock_Ip_Get_AIPS_SLOW_CLK_Frequency) @0707e2a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableProducerClkSrc/3 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_SWT0_CLK_Frequency/110 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_SIUL0_CLK_Frequency/109 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_I3C0_CLK_Frequency/103 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_WKPU0_CLK_Frequency/100 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_TSENSE0_CLK_Frequency/99 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_TRGMUX0_CLK_Frequency/98 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_SAI1_CLK_Frequency/97 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_SAI0_CLK_Frequency/96 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_PIT2_CLK_Frequency/95 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_PIT1_CLK_Frequency/94 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_PIT0_CLK_Frequency/93 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPUART3_CLK_Frequency/92 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPUART2_CLK_Frequency/91 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPUART1_CLK_Frequency/90 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPSPI3_CLK_Frequency/88 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPSPI2_CLK_Frequency/87 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPSPI1_CLK_Frequency/86 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPI2C1_CLK_Frequency/84 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPI2C0_CLK_Frequency/83 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_ERM0_CLK_Frequency/82 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EIM_CLK_Frequency/81 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_CMP1_CLK_Frequency/80 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_CMP0_CLK_Frequency/79 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (Clock_Ip_Get_AIPS_PLAT_CLK_Frequency) @0707e0e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableProducerClkSrc/3 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/107 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_SEMA42_CLK_Frequency/106 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_MSCM_CLK_Frequency/105 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_INTM_CLK_Frequency/104 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_FLEXIO0_CLK_Frequency/102 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_CRC0_CLK_Frequency/101 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPUART0_CLK_Frequency/89 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LPSPI0_CLK_Frequency/85 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_CORE_CLK_Frequency/27 (Clock_Ip_Get_CORE_CLK_Frequency) @07079ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableProducerClkSrc/3 (read)Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_TEMPSENSE_CLK_Frequency/78 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_TCM_CM7_0_CLK_Frequency/77 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LCU1_CLK_Frequency/76 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_LCU0_CLK_Frequency/75 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EMIOS1_CLK_Frequency/74 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EMIOS0_CLK_Frequency/73 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/72 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/71 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/70 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/69 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/68 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/67 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/66 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/65 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/64 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/63 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/62 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/61 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/60 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/59 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/58 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/57 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/56 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/55 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/54 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/53 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/52 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/51 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/50 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/49 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/48 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/47 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/46 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/45 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/44 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/43 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/42 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/41 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_EDMA0_CLK_Frequency/40 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_DMAMUX1_CLK_Frequency/39 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_DMAMUX0_CLK_Frequency/38 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_BCTU0_CLK_Frequency/37 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_ADC1_CLK_Frequency/36 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_ADC0_CLK_Frequency/35 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_SCS_CLK_Frequency/26 (Clock_Ip_Get_SCS_CLK_Frequency) @07079d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableProducerClkSrc/3 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
   Indirect call(1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_emac_mii_rmii_tx_Frequency/25 (Clock_Ip_Get_emac_mii_rmii_tx_Frequency) @07079b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_axExtSignalFreqEntries/7 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_Get_emac_mii_rx_Frequency/24 (Clock_Ip_Get_emac_mii_rx_Frequency) @070799a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_axExtSignalFreqEntries/7 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_Get_PLL_PHI1_Frequency/23 (Clock_Ip_Get_PLL_PHI1_Frequency) @070797e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/21 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_PLL_PHI0_Frequency/22 (Clock_Ip_Get_PLL_PHI0_Frequency) @07079620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableDivider/1 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfTableProducerClkSrc/3 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/21 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/21 (Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency) @07079460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_PLL_PHI0_Frequency/22 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_PLL_PHI1_Frequency/23 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_Get_PLL_CLK_Frequency/19 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency/20 (Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency) @070792a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableDividerValue.9134/138 (read)
  Referring: Clock_Ip_apfFreqTableRtcClkSrc/5 (addr)Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfTableProducerClkSrc/3 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_FIRC_CLK_Frequency/13 (1073741824 (estimated locally),1.00 per call) Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/14 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_Get_PLL_CLK_Frequency/19 (Clock_Ip_Get_PLL_CLK_Frequency) @070790e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/21 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_Get_PLL_CLK_Frequency.part.0/140 (536870912 (estimated locally),0.50 per call) 
Clock_Ip_Get_SXOSC_CLK_Frequency/18 (Clock_Ip_Get_SXOSC_CLK_Frequency) @07075ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32Sxosc/11 (read)Clock_Ip_u32EnableClock/0 (read)
  Referring: Clock_Ip_apfFreqTableRtcClkSrc/5 (addr)Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_Get_FXOSC_CLK_Frequency/17 (Clock_Ip_Get_FXOSC_CLK_Frequency) @07075d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32Fxosc/10 (read)Clock_Ip_u32EnableClock/0 (read)
  Referring: Clock_Ip_apfFreqTableRtcClkSrc/5 (addr)Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_PLL_VCO/134 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency/16 (Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency) @07075b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableClock/0 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_Get_SIRC_CLK_Frequency/15 (Clock_Ip_Get_SIRC_CLK_Frequency) @070759a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTableRtcClkSrc/5 (addr)Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/14 (Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency) @070757e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableClock/0 (read)
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency/20 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_FIRC_CLK_Frequency/13 (Clock_Ip_Get_FIRC_CLK_Frequency) @07075620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTable/6 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency/20 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_Get_Zero_Frequency/12 (Clock_Ip_Get_Zero_Frequency) @07075460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTable/6 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfFreqTableClkSrc/4 (addr)Clock_Ip_apfTableProducerClkSrc/3 (addr)Clock_Ip_apfTableProducerClkSrc/3 (addr)Clock_Ip_apfTableProducerClkSrc/3 (addr)Clock_Ip_apfTableProducerClkSrc/3 (addr)Clock_Ip_apfTableProducerClkSrc/3 (addr)Clock_Ip_apfTableProducerClkSrc/3 (addr)Clock_Ip_apfTableProducerClkSrc/3 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_u32Sxosc/11 (Clock_Ip_u32Sxosc) @0704d288
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_SXOSC_CLK_Frequency/18 (read)Clock_Ip_SetExternalOscillatorFrequency/135 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_u32Fxosc/10 (Clock_Ip_u32Fxosc) @0704d240
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_FXOSC_CLK_Frequency/17 (read)Clock_Ip_SetExternalOscillatorFrequency/135 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_u32PllFreq/9 (Clock_Ip_u32PllFreq) @0704d1f8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_PLL_CLK_Frequency.part.0/140 (write)Clock_Ip_Get_PLL_CLK_Frequency.part.0/140 (read)
  Availability: available
  Varpool flags: initialized
Clock_Ip_u32PllChecksum/8 (Clock_Ip_u32PllChecksum) @0704d1b0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_PLL_CLK_Frequency.part.0/140 (read)Clock_Ip_Get_PLL_CLK_Frequency.part.0/140 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_axExtSignalFreqEntries/7 (Clock_Ip_axExtSignalFreqEntries) @0704d168
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_emac_mii_rmii_tx_Frequency/25 (read)Clock_Ip_Get_emac_mii_rx_Frequency/24 (read)Clock_Ip_SetExternalSignalFrequency/136 (read)Clock_Ip_SetExternalSignalFrequency/136 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_apfFreqTable/6 (Clock_Ip_apfFreqTable) @0704d120
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_FIRC_CLK_Frequency/13 (addr)Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/14 (addr)Clock_Ip_Get_SIRC_CLK_Frequency/15 (addr)Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency/16 (addr)Clock_Ip_Get_FXOSC_CLK_Frequency/17 (addr)Clock_Ip_Get_SXOSC_CLK_Frequency/18 (addr)Clock_Ip_Get_PLL_CLK_Frequency/19 (addr)Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency/20 (addr)Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/21 (addr)Clock_Ip_Get_PLL_PHI0_Frequency/22 (addr)Clock_Ip_Get_PLL_PHI1_Frequency/23 (addr)Clock_Ip_Get_emac_mii_rx_Frequency/24 (addr)Clock_Ip_Get_emac_mii_rmii_tx_Frequency/25 (addr)Clock_Ip_Get_SCS_CLK_Frequency/26 (addr)Clock_Ip_Get_CORE_CLK_Frequency/27 (addr)Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (addr)Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (addr)Clock_Ip_Get_HSE_CLK_Frequency/30 (addr)Clock_Ip_Get_DCM_CLK_Frequency/31 (addr)Clock_Ip_Get_LBIST_CLK_Frequency/32 (addr)Clock_Ip_Get_QSPI_MEM_CLK_Frequency/33 (addr)Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/34 (addr)Clock_Ip_Get_ADC0_CLK_Frequency/35 (addr)Clock_Ip_Get_ADC1_CLK_Frequency/36 (addr)Clock_Ip_Get_BCTU0_CLK_Frequency/37 (addr)Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/111 (addr)Clock_Ip_Get_CMP0_CLK_Frequency/79 (addr)Clock_Ip_Get_CMP1_CLK_Frequency/80 (addr)Clock_Ip_Get_CRC0_CLK_Frequency/101 (addr)Clock_Ip_Get_DCM_CLK_Frequency/31 (addr)Clock_Ip_Get_DMAMUX0_CLK_Frequency/38 (addr)Clock_Ip_Get_DMAMUX1_CLK_Frequency/39 (addr)Clock_Ip_Get_EDMA0_CLK_Frequency/40 (addr)Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/41 (addr)Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/42 (addr)Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/43 (addr)Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/44 (addr)Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/45 (addr)Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/46 (addr)Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/47 (addr)Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/48 (addr)Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/49 (addr)Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/50 (addr)Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/51 (addr)Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/52 (addr)Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/53 (addr)Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/54 (addr)Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/55 (addr)Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/56 (addr)Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/57 (addr)Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/58 (addr)Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/59 (addr)Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/60 (addr)Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/61 (addr)Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/62 (addr)Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/63 (addr)Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/64 (addr)Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/65 (addr)Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/66 (addr)Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/67 (addr)Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/68 (addr)Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/69 (addr)Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/70 (addr)Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/71 (addr)Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/72 (addr)Clock_Ip_Get_EIM_CLK_Frequency/81 (addr)Clock_Ip_Get_EMAC_RX_CLK_Frequency/112 (addr)Clock_Ip_Get_EMAC0_RX_CLK_Frequency/113 (addr)Clock_Ip_Get_EMAC_TS_CLK_Frequency/114 (addr)Clock_Ip_Get_EMAC0_TS_CLK_Frequency/115 (addr)Clock_Ip_Get_EMAC_TX_CLK_Frequency/116 (addr)Clock_Ip_Get_EMAC0_TX_CLK_Frequency/117 (addr)Clock_Ip_Get_EMIOS0_CLK_Frequency/73 (addr)Clock_Ip_Get_EMIOS1_CLK_Frequency/74 (addr)Clock_Ip_Get_ERM0_CLK_Frequency/82 (addr)Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (addr)Clock_Ip_Get_FLEXCANA_CLK_Frequency/118 (addr)Clock_Ip_Get_FLEXCAN0_CLK_Frequency/119 (addr)Clock_Ip_Get_FLEXCAN1_CLK_Frequency/120 (addr)Clock_Ip_Get_FLEXCAN2_CLK_Frequency/121 (addr)Clock_Ip_Get_FLEXCANB_CLK_Frequency/122 (addr)Clock_Ip_Get_FLEXCAN3_CLK_Frequency/123 (addr)Clock_Ip_Get_FLEXIO0_CLK_Frequency/102 (addr)Clock_Ip_Get_I3C0_CLK_Frequency/103 (addr)Clock_Ip_Get_INTM_CLK_Frequency/104 (addr)Clock_Ip_Get_LCU0_CLK_Frequency/75 (addr)Clock_Ip_Get_LCU1_CLK_Frequency/76 (addr)Clock_Ip_Get_LPI2C0_CLK_Frequency/83 (addr)Clock_Ip_Get_LPI2C1_CLK_Frequency/84 (addr)Clock_Ip_Get_LPSPI0_CLK_Frequency/85 (addr)Clock_Ip_Get_LPSPI1_CLK_Frequency/86 (addr)Clock_Ip_Get_LPSPI2_CLK_Frequency/87 (addr)Clock_Ip_Get_LPSPI3_CLK_Frequency/88 (addr)Clock_Ip_Get_LPUART0_CLK_Frequency/89 (addr)Clock_Ip_Get_LPUART1_CLK_Frequency/90 (addr)Clock_Ip_Get_LPUART2_CLK_Frequency/91 (addr)Clock_Ip_Get_LPUART3_CLK_Frequency/92 (addr)Clock_Ip_Get_MSCM_CLK_Frequency/105 (addr)Clock_Ip_Get_PIT0_CLK_Frequency/93 (addr)Clock_Ip_Get_PIT1_CLK_Frequency/94 (addr)Clock_Ip_Get_PIT2_CLK_Frequency/95 (addr)Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/107 (addr)Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/124 (addr)Clock_Ip_Get_QSPI0_SFCK_CLK_Frequency/125 (addr)Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency/108 (addr)Clock_Ip_Get_RTC_CLK_Frequency/127 (addr)Clock_Ip_Get_RTC0_CLK_Frequency/128 (addr)Clock_Ip_Get_SAI0_CLK_Frequency/96 (addr)Clock_Ip_Get_SAI1_CLK_Frequency/97 (addr)Clock_Ip_Get_SEMA42_CLK_Frequency/106 (addr)Clock_Ip_Get_SIUL0_CLK_Frequency/109 (addr)Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (addr)Clock_Ip_Get_STMA_CLK_Frequency/129 (addr)Clock_Ip_Get_STM0_CLK_Frequency/130 (addr)Clock_Ip_Get_STMB_CLK_Frequency/131 (addr)Clock_Ip_Get_STM1_CLK_Frequency/132 (addr)Clock_Ip_Get_SWT0_CLK_Frequency/110 (addr)Clock_Ip_Get_TCM_CM7_0_CLK_Frequency/77 (addr)Clock_Ip_Get_TEMPSENSE_CLK_Frequency/78 (addr)Clock_Ip_Get_TRACE_CLK_Frequency/133 (addr)Clock_Ip_Get_TRGMUX0_CLK_Frequency/98 (addr)Clock_Ip_Get_TSENSE0_CLK_Frequency/99 (addr)Clock_Ip_Get_WKPU0_CLK_Frequency/100 (addr)
  Referring: Clock_Ip_GetFreq/137 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_apfFreqTableRtcClkSrc/5 (Clock_Ip_apfFreqTableRtcClkSrc) @0704d090
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_Get_SXOSC_CLK_Frequency/18 (addr)Clock_Ip_Get_SIRC_CLK_Frequency/15 (addr)Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency/20 (addr)Clock_Ip_Get_FXOSC_CLK_Frequency/17 (addr)
  Referring: Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall.part.0/141 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_apfFreqTableClkSrc/4 (Clock_Ip_apfFreqTableClkSrc) @0704d048
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency/20 (addr)Clock_Ip_Get_SIRC_CLK_Frequency/15 (addr)Clock_Ip_Get_FXOSC_CLK_Frequency/17 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_SXOSC_CLK_Frequency/18 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_PLL_PHI0_Frequency/22 (addr)Clock_Ip_Get_PLL_PHI1_Frequency/23 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_CORE_CLK_Frequency/27 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_HSE_CLK_Frequency/30 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (addr)Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (addr)Clock_Ip_Get_emac_mii_rmii_tx_Frequency/25 (addr)Clock_Ip_Get_emac_mii_rx_Frequency/24 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)
  Referring: Clock_Ip_Get_STMA_CLK_Frequency/129 (read)Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/124 (read)Clock_Ip_Get_FLEXCANB_CLK_Frequency/122 (read)Clock_Ip_Get_FLEXCANA_CLK_Frequency/118 (read)Clock_Ip_Get_EMAC_TX_CLK_Frequency/116 (read)Clock_Ip_Get_EMAC_TS_CLK_Frequency/114 (read)Clock_Ip_Get_EMAC_RX_CLK_Frequency/112 (read)Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/111 (read)Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/34 (read)Clock_Ip_Get_STMB_CLK_Frequency/131 (read)Clock_Ip_Get_TRACE_CLK_Frequency/133 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_apfTableProducerClkSrc/3 (Clock_Ip_apfTableProducerClkSrc) @06f97f78
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency/20 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_Zero_Frequency/12 (addr)Clock_Ip_Get_PLL_PHI0_Frequency/22 (addr)
  Referring: Clock_Ip_Get_DCM_CLK_Frequency/31 (read)Clock_Ip_Get_HSE_CLK_Frequency/30 (read)Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (read)Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (read)Clock_Ip_Get_CORE_CLK_Frequency/27 (read)Clock_Ip_Get_SCS_CLK_Frequency/26 (read)Clock_Ip_Get_LBIST_CLK_Frequency/32 (read)Clock_Ip_Get_QSPI_MEM_CLK_Frequency/33 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_u32EnableGate/2 (Clock_Ip_u32EnableGate) @06f97f30
  Type: variable definition analyzed alias
  Visibility: prevailing_def_ironly
  References: Clock_Ip_u32EnableClock/0 (alias)
  Referring: Clock_Ip_Get_STM0_CLK_Frequency/130 (read)Clock_Ip_Get_TRGMUX0_CLK_Frequency/98 (read)Clock_Ip_Get_SAI1_CLK_Frequency/97 (read)Clock_Ip_Get_SAI0_CLK_Frequency/96 (read)Clock_Ip_Get_LCU1_CLK_Frequency/76 (read)Clock_Ip_Get_LCU0_CLK_Frequency/75 (read)Clock_Ip_Get_RTC0_CLK_Frequency/128 (read)Clock_Ip_Get_QSPI0_SFCK_CLK_Frequency/125 (read)Clock_Ip_Get_FLEXCAN3_CLK_Frequency/123 (read)Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/107 (read)Clock_Ip_Get_INTM_CLK_Frequency/104 (read)Clock_Ip_Get_PIT2_CLK_Frequency/95 (read)Clock_Ip_Get_PIT1_CLK_Frequency/94 (read)Clock_Ip_Get_STM1_CLK_Frequency/132 (read)Clock_Ip_Get_SEMA42_CLK_Frequency/106 (read)Clock_Ip_Get_FLEXCAN2_CLK_Frequency/121 (read)Clock_Ip_Get_MSCM_CLK_Frequency/105 (read)Clock_Ip_Get_PIT0_CLK_Frequency/93 (read)Clock_Ip_Get_LPUART3_CLK_Frequency/92 (read)Clock_Ip_Get_LPUART2_CLK_Frequency/91 (read)Clock_Ip_Get_I3C0_CLK_Frequency/103 (read)Clock_Ip_Get_LPUART1_CLK_Frequency/90 (read)Clock_Ip_Get_LPUART0_CLK_Frequency/89 (read)Clock_Ip_Get_LPSPI3_CLK_Frequency/88 (read)Clock_Ip_Get_LPSPI2_CLK_Frequency/87 (read)Clock_Ip_Get_LPSPI1_CLK_Frequency/86 (read)Clock_Ip_Get_LPSPI0_CLK_Frequency/85 (read)Clock_Ip_Get_LPI2C1_CLK_Frequency/84 (read)Clock_Ip_Get_LPI2C0_CLK_Frequency/83 (read)Clock_Ip_Get_ERM0_CLK_Frequency/82 (read)Clock_Ip_Get_EIM_CLK_Frequency/81 (read)Clock_Ip_Get_EMIOS1_CLK_Frequency/74 (read)Clock_Ip_Get_EMIOS0_CLK_Frequency/73 (read)Clock_Ip_Get_FLEXIO0_CLK_Frequency/102 (read)Clock_Ip_Get_CRC0_CLK_Frequency/101 (read)Clock_Ip_Get_WKPU0_CLK_Frequency/100 (read)Clock_Ip_Get_FLEXCAN1_CLK_Frequency/120 (read)Clock_Ip_Get_FLEXCAN0_CLK_Frequency/119 (read)Clock_Ip_Get_EMAC0_TX_CLK_Frequency/117 (read)Clock_Ip_Get_EMAC0_TS_CLK_Frequency/115 (read)Clock_Ip_Get_CMP1_CLK_Frequency/80 (read)Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/72 (read)Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/71 (read)Clock_Ip_Get_EMAC0_RX_CLK_Frequency/113 (read)Clock_Ip_Get_SWT0_CLK_Frequency/110 (read)Clock_Ip_Get_SIUL0_CLK_Frequency/109 (read)Clock_Ip_Get_CMP0_CLK_Frequency/79 (read)Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/70 (read)Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/69 (read)Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/68 (read)Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/67 (read)Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/66 (read)Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/65 (read)Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/64 (read)Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/63 (read)Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/62 (read)Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/61 (read)Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/60 (read)Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/59 (read)Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/58 (read)Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/57 (read)Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/56 (read)Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/55 (read)Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/54 (read)Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/53 (read)Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/52 (read)Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/51 (read)Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/50 (read)Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/49 (read)Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/48 (read)Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/47 (read)Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/46 (read)Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/45 (read)Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/44 (read)Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/43 (read)Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/42 (read)Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/41 (read)Clock_Ip_Get_EDMA0_CLK_Frequency/40 (read)Clock_Ip_Get_DMAMUX1_CLK_Frequency/39 (read)Clock_Ip_Get_DMAMUX0_CLK_Frequency/38 (read)Clock_Ip_Get_BCTU0_CLK_Frequency/37 (read)Clock_Ip_Get_ADC1_CLK_Frequency/36 (read)Clock_Ip_Get_TSENSE0_CLK_Frequency/99 (read)Clock_Ip_Get_TEMPSENSE_CLK_Frequency/78 (read)Clock_Ip_Get_TCM_CM7_0_CLK_Frequency/77 (read)Clock_Ip_Get_ADC0_CLK_Frequency/35 (read)Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/126 (read)
  Availability: available
  Varpool flags: read-only const-value-known
Clock_Ip_u32EnableDivider/1 (Clock_Ip_u32EnableDivider) @06f97ee8
  Type: variable definition analyzed alias
  Visibility: prevailing_def_ironly
  References: Clock_Ip_u32EnableClock/0 (alias)
  Referring: Clock_Ip_Get_STMA_CLK_Frequency/129 (read)Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/124 (read)Clock_Ip_Get_FLEXCANB_CLK_Frequency/122 (read)Clock_Ip_Get_FLEXCANA_CLK_Frequency/118 (read)Clock_Ip_Get_EMAC_TX_CLK_Frequency/116 (read)Clock_Ip_Get_EMAC_TS_CLK_Frequency/114 (read)Clock_Ip_Get_EMAC_RX_CLK_Frequency/112 (read)Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/111 (read)Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/34 (read)Clock_Ip_Get_QSPI_MEM_CLK_Frequency/33 (read)Clock_Ip_Get_LBIST_CLK_Frequency/32 (read)Clock_Ip_Get_DCM_CLK_Frequency/31 (read)Clock_Ip_Get_HSE_CLK_Frequency/30 (read)Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/29 (read)Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/28 (read)Clock_Ip_Get_CORE_CLK_Frequency/27 (read)Clock_Ip_Get_PLL_PHI1_Frequency/23 (read)Clock_Ip_Get_TRACE_CLK_Frequency/133 (read)Clock_Ip_Get_STMB_CLK_Frequency/131 (read)Clock_Ip_Get_PLL_PHI0_Frequency/22 (read)
  Availability: available
  Varpool flags: read-only const-value-known
Clock_Ip_u32EnableClock/0 (Clock_Ip_u32EnableClock) @06f97ea0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Clock_Ip_u32EnableGate/2 (alias)Clock_Ip_u32EnableDivider/1 (alias)Clock_Ip_Get_SXOSC_CLK_Frequency/18 (read)Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency/16 (read)Clock_Ip_Get_FXOSC_CLK_Frequency/17 (read)Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/14 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall.part.0 ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;

  <bb 4> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct RTC_Type *)1076396032B].RTCC;
  _2 = _1 >> 12;
  _3 = _2 & 3;
  _4 = Clock_Ip_apfFreqTableRtcClkSrc[_3];
  Frequency_5 = _4 ();
  # DEBUG Frequency => Frequency_5

  <bb 3> [local count: 1073741824]:
  # Frequency_6 = PHI <Frequency_5(2)>
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  return Frequency_6;

}


Clock_Ip_Get_PLL_CLK_Frequency.part.0 ()
{
  uint32 Frequency;
  uint32 PLLDivider;
  uint32 PLLFractionalDivider;
  long unsigned int _3;
  long unsigned int Clock_Ip_u32PllChecksum.2_4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int iftmp.3_8;

  <bb 7> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  PLLDivider_1 ={v} MEM[(struct PLL_Type *)1076756480B].PLLDV;
  # DEBUG PLLDivider => PLLDivider_1
  # DEBUG BEGIN_STMT
  PLLFractionalDivider_2 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFD;
  # DEBUG PLLFractionalDivider => PLLFractionalDivider_2
  # DEBUG BEGIN_STMT
  _3 = PLLDivider_1 ^ PLLFractionalDivider_2;
  Clock_Ip_u32PllChecksum.2_4 = Clock_Ip_u32PllChecksum;
  if (_3 != Clock_Ip_u32PllChecksum.2_4)
    goto <bb 3>; [48.88%]
  else
    goto <bb 4>; [51.12%]

  <bb 3> [local count: 524845004]:
  # DEBUG BEGIN_STMT
  Clock_Ip_u32PllChecksum = _3;
  # DEBUG BEGIN_STMT
  _5 = Clock_Ip_PLL_VCO (1076756480B);
  Clock_Ip_u32PllFreq = _5;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _6 ={v} MEM[(struct PLL_Type *)1076756480B].PLLSR;
  _7 = _6 & 4;
  if (_7 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  iftmp.3_8 = Clock_Ip_u32PllFreq;

  <bb 6> [local count: 1073741824]:
  # Frequency_9 = PHI <0(4), iftmp.3_8(5)>
  # DEBUG Frequency => Frequency_9
  # DEBUG BEGIN_STMT
  return Frequency_9;

}


Clock_Ip_GetFreq (Clock_Ip_NameType ClockName)
{
  uint32 (*<Taec>) (void) _1;
  uint32 _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_apfFreqTable[ClockName_3(D)];
  _5 = _1 ();
  return _5;

}


Clock_Ip_SetExternalSignalFrequency (Clock_Ip_NameType SignalName, uint32 Frequency)
{
  uint32 Index;
  <unnamed type> _1;

  <bb 2> [local count: 397250652]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 6>; [100.00%]

  <bb 3> [local count: 715863675]:
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_axExtSignalFreqEntries[Index_2].Name;
  if (_1 == SignalName_6(D))
    goto <bb 4>; [5.50%]
  else
    goto <bb 5>; [94.50%]

  <bb 4> [local count: 39372502]:
  # Index_4 = PHI <Index_2(3)>
  # DEBUG BEGIN_STMT
  Clock_Ip_axExtSignalFreqEntries[Index_4].Frequency = Frequency_8(D);
  # DEBUG BEGIN_STMT
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 676491173]:
  # DEBUG BEGIN_STMT
  Index_7 = Index_2 + 1;
  # DEBUG Index => Index_7

  <bb 6> [local count: 1073741824]:
  # Index_2 = PHI <0(2), Index_7(5)>
  # DEBUG Index => Index_2
  # DEBUG BEGIN_STMT
  if (Index_2 != 2)
    goto <bb 3>; [66.67%]
  else
    goto <bb 7>; [33.33%]

  <bb 7> [local count: 397250652]:
  return;

}


Clock_Ip_SetExternalOscillatorFrequency (Clock_Ip_NameType ExtOscName, uint32 Frequency)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  switch (ExtOscName_2(D)) <default: <L4> [33.33%], case 5: <L0> [33.33%], case 6: <L1> [33.33%]>

  <bb 3> [local count: 357878150]:
<L0>:
  # DEBUG BEGIN_STMT
  Clock_Ip_u32Fxosc = Frequency_4(D);
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 357878150]:
<L1>:
  # DEBUG BEGIN_STMT
  Clock_Ip_u32Sxosc = Frequency_4(D);
  # DEBUG BEGIN_STMT

  <bb 5> [local count: 1073634451]:
<L4>:
  return;

}


Clock_Ip_PLL_VCO (const struct PLL_Type * Base)
{
  uint32 Var4;
  uint32 Var3;
  uint32 Var1;
  uint32 Fout;
  uint32 Mfn;
  uint32 Mfi;
  uint32 Rdiv;
  uint32 Fin;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _26;
  long unsigned int _27;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Fin_14 = Clock_Ip_Get_FXOSC_CLK_Frequency ();
  # DEBUG Fin => Fin_14
  # DEBUG BEGIN_STMT
  _1 ={v} Base_15(D)->PLLDV;
  _2 = _1 >> 12;
  Rdiv_16 = _2 & 7;
  # DEBUG Rdiv => Rdiv_16
  # DEBUG BEGIN_STMT
  _3 ={v} Base_15(D)->PLLDV;
  Mfi_17 = _3 & 255;
  # DEBUG Mfi => Mfi_17
  # DEBUG BEGIN_STMT
  _4 ={v} Base_15(D)->PLLFD;
  Mfn_18 = _4 & 32767;
  # DEBUG Mfn => Mfn_18
  # DEBUG BEGIN_STMT
  Var1_19 = Mfi_17 / Rdiv_16;
  # DEBUG Var1 => Var1_19
  # DEBUG BEGIN_STMT
  _26 = Mfi_17 % Rdiv_16;
  # DEBUG Var2 => _26
  # DEBUG BEGIN_STMT
  _5 = Rdiv_16 << 14;
  _6 = Rdiv_16 << 11;
  Var3_20 = _5 + _6;
  # DEBUG Var3 => Var3_20
  # DEBUG BEGIN_STMT
  Var4_21 = Fin_14 / Var3_20;
  # DEBUG Var4 => Var4_21
  # DEBUG BEGIN_STMT
  _27 = Fin_14 % Var3_20;
  # DEBUG Var5 => _27
  # DEBUG BEGIN_STMT
  Fout_22 = Fin_14 * Var1_19;
  # DEBUG Fout => Fout_22
  # DEBUG BEGIN_STMT
  _7 = Fin_14 / Rdiv_16;
  _8 = _7 * _26;
  Fout_23 = _8 + Fout_22;
  # DEBUG Fout => Fout_23
  # DEBUG BEGIN_STMT
  _9 = Mfn_18 * Var4_21;
  Fout_24 = _9 + Fout_23;
  # DEBUG Fout => Fout_24
  # DEBUG BEGIN_STMT
  _10 = Mfn_18 * _27;
  _11 = _10 / Var3_20;
  Fout_25 = _11 + Fout_24;
  # DEBUG Fout => Fout_25
  # DEBUG BEGIN_STMT
  return Fout_25;

}


Clock_Ip_Get_TRACE_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_11_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_11_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_11_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 7;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_STM1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_STMB_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 29;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_STMB_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 31;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 1;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_STM0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_STMA_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 29;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_STMA_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 31;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 1;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_RTC0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Clock_Ip_Get_RTC_CLK_Frequency
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Frequency_7 = Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall ();
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  # DEBUG Frequency => NULL
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _2 = _1 >> 2;
  _3 = _2 & 1;
  _5 = Clock_Ip_u32EnableGate[_3];
  Frequency_6 = _5 & Frequency_7;
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  return Frequency_6;

}


Clock_Ip_Get_RTC_CLK_Frequency ()
{
  uint32 Frequency;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Frequency_3 = Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall ();
  # DEBUG Frequency => Frequency_3
  # DEBUG BEGIN_STMT
  return Frequency_3;

}


Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall ()
{
  uint32 Frequency;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _3 = _2 >> 2;
  _4 = _3 & 1;
  _5 = Clock_Ip_u32EnableGate[_4];
  if (_5 == 4294967295)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  Frequency_1 = Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall.part.0 ();

  <bb 4> [local count: 1073741824]:
  # Frequency_7 = PHI <Frequency_1(3), 0(2)>
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_QSPI0_SFCK_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_QSPI_SFCK_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_STAT;
  _2 = _1 >> 19;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_QSPI_SFCK_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 7;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_FLEXCAN3_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_FLEXCANB_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 4;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_FLEXCANB_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 31;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 3;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_FLEXCAN2_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_FLEXCANA_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 3;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_FLEXCAN1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_FLEXCANA_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 2;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_FLEXCAN0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_FLEXCANA_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 1;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_FLEXCANA_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 31;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 3;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_EMAC0_TX_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_EMAC_TX_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_STAT;
  _2 = _1 & 1;
  _6 = Clock_Ip_u32EnableGate[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_EMAC_TX_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 31;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 63;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_EMAC0_TS_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_EMAC_TS_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_STAT;
  _2 = _1 & 1;
  _6 = Clock_Ip_u32EnableGate[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_EMAC_TS_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 31;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 63;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_EMAC0_RX_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_EMAC_RX_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_STAT;
  _2 = _1 & 1;
  _6 = Clock_Ip_u32EnableGate[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_EMAC_RX_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 31;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 63;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 63;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 7;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_SWT0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 28;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_SIUL0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _2 = _1 >> 10;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency ()
{
  uint32 retval.130;

  <bb 2> [local count: 1073741824]:
  retval.130_3 = Clock_Ip_Get_QSPI0_RAM_CLK_Frequency (); [tail call]
  return retval.130_3;

}


Clock_Ip_Get_QSPI0_RAM_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_STAT;
  _2 = _1 >> 19;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_SEMA42_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 24;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_MSCM_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 24;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_INTM_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 31;
  _6 = Clock_Ip_u32EnableGate[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_I3C0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 16;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_FLEXIO0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 9;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_CRC0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB3_STAT;
  _2 = _1 & 1;
  _6 = Clock_Ip_u32EnableGate[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_WKPU0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _2 = _1 >> 13;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_TSENSE0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _2 = _1 >> 17;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_TRGMUX0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 & 1;
  _6 = Clock_Ip_u32EnableGate[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_SAI1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_STAT;
  _2 = _1 >> 23;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_SAI0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 27;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_PIT2_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _2 = _1 >> 31;
  _6 = Clock_Ip_u32EnableGate[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_PIT1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 13;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_PIT0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 12;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPUART3_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 13;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPUART2_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 12;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPUART1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 11;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPUART0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 10;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPSPI3_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 25;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPSPI2_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 24;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPSPI1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 23;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPSPI0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 22;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPI2C1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 21;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LPI2C0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 20;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_ERM0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 23;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EIM_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 22;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_CMP1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 29;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_CMP0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 28;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_TEMPSENSE_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _2 = _1 >> 31;
  _6 = Clock_Ip_u32EnableGate[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_TCM_CM7_0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_STAT;
  _2 = _1 >> 30;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LCU1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 7;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_LCU0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 6;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EMIOS1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 3;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EMIOS0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 2;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 23;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 22;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 21;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 20;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 19;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 18;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 17;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 16;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 15;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 14;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 13;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 12;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 11;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 10;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 9;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 8;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 7;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 6;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 5;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _2 = _1 >> 4;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 15;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 14;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 13;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 12;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 11;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 10;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 9;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 8;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 7;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 6;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 5;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 4;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_EDMA0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _2 = _1 >> 3;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_DMAMUX1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _2 = _1 >> 1;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_DMAMUX0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _2 = _1 & 1;
  _6 = Clock_Ip_u32EnableGate[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_BCTU0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 1;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_ADC1_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 9;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_ADC0_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _2 = _1 >> 8;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = Frequency_6 & _7;
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  return Frequency_8;

}


Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 63;
  _4 = Clock_Ip_apfFreqTableClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 63;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_QSPI_MEM_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfTableProducerClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6;
  _8 = _7 >> 16;
  _9 = _8 & 7;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_LBIST_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfTableProducerClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5;
  _8 = _7 >> 16;
  _9 = _8 & 7;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_DCM_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfTableProducerClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4;
  _8 = _7 >> 16;
  _9 = _8 & 7;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_HSE_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfTableProducerClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3;
  _8 = _7 >> 16;
  _9 = _8 & 7;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfTableProducerClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2;
  _8 = _7 >> 16;
  _9 = _8 & 15;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfTableProducerClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1;
  _8 = _7 >> 16;
  _9 = _8 & 7;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_CORE_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfTableProducerClkSrc[_3];
  Frequency_12 = _4 ();
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0;
  _6 = _5 >> 31;
  _13 = Clock_Ip_u32EnableDivider[_6];
  Frequency_14 = Frequency_12 & _13;
  # DEBUG Frequency => Frequency_14
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0;
  _8 = _7 >> 16;
  _9 = _8 & 7;
  _15 = _9 + 1;
  Frequency_16 = Frequency_14 / _15;
  # DEBUG Frequency => Frequency_16
  # DEBUG BEGIN_STMT
  return Frequency_16;

}


Clock_Ip_Get_SCS_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 (*<Taec>) (void) _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _2 = _1 >> 24;
  _3 = _2 & 15;
  _4 = Clock_Ip_apfTableProducerClkSrc[_3];
  Frequency_7 = _4 ();
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_emac_mii_rmii_tx_Frequency ()
{
  uint32 _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _2 = Clock_Ip_axExtSignalFreqEntries[1].Frequency;
  return _2;

}


Clock_Ip_Get_emac_mii_rx_Frequency ()
{
  uint32 _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _2 = Clock_Ip_axExtSignalFreqEntries[0].Frequency;
  return _2;

}


Clock_Ip_Get_PLL_PHI1_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _9;
  long unsigned int _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_8 = Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency ();
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[1];
  _2 = _1 >> 31;
  _9 = Clock_Ip_u32EnableDivider[_2];
  Frequency_10 = Frequency_8 & _9;
  # DEBUG Frequency => Frequency_10
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[1];
  _4 = _3 >> 16;
  _5 = _4 & 15;
  _11 = _5 + 1;
  Frequency_12 = Frequency_10 / _11;
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  return Frequency_12;

}


Clock_Ip_Get_PLL_PHI0_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _9;
  long unsigned int _11;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_8 = Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency ();
  # DEBUG Frequency => Frequency_8
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[0];
  _2 = _1 >> 31;
  _9 = Clock_Ip_u32EnableDivider[_2];
  Frequency_10 = Frequency_8 & _9;
  # DEBUG Frequency => Frequency_10
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[0];
  _4 = _3 >> 16;
  _5 = _4 & 15;
  _11 = _5 + 1;
  Frequency_12 = Frequency_10 / _11;
  # DEBUG Frequency => Frequency_12
  # DEBUG BEGIN_STMT
  return Frequency_12;

}


Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency ()
{
  uint32 DividerValue;
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int iftmp.1_3;
  long unsigned int iftmp.1_8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_6 = Clock_Ip_Get_PLL_CLK_Frequency ();
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct PLL_Type *)1076756480B].PLLDV;
  _2 = _1 >> 25;
  DividerValue_7 = _2 & 63;
  # DEBUG DividerValue => DividerValue_7
  # DEBUG BEGIN_STMT
  if (DividerValue_7 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  iftmp.1_8 = Frequency_6 / DividerValue_7;

  <bb 4> [local count: 1073741824]:
  # iftmp.1_3 = PHI <iftmp.1_8(3), 0(2)>
  # DEBUG Frequency => iftmp.1_3
  # DEBUG BEGIN_STMT
  return iftmp.1_3;

}


Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency ()
{
  static const uint32 Clock_Ip_apfTableDividerValue[4] = {2, 2, 16, 1};
  uint32 DividerValue;
  uint32 Divider;
  long unsigned int _1;
  long unsigned int iftmp.0_2;
  long unsigned int iftmp.0_6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG Frequency => 48000000
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct CONFIGURATION_GPR_Type *)1077526528B].CONFIG_REG_GPR;
  Divider_4 = _1 & 3;
  # DEBUG Divider => Divider_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  DividerValue_5 = Clock_Ip_apfTableDividerValue[Divider_4];
  # DEBUG DividerValue => DividerValue_5
  # DEBUG BEGIN_STMT
  if (DividerValue_5 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  iftmp.0_6 = 48000000 / DividerValue_5;

  <bb 4> [local count: 1073741824]:
  # iftmp.0_2 = PHI <iftmp.0_6(3), 0(2)>
  # DEBUG Frequency => iftmp.0_2
  # DEBUG BEGIN_STMT
  return iftmp.0_2;

}


Clock_Ip_Get_PLL_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _3 = _2 & 16777216;
  if (_3 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870912]:
  Frequency_6 = Clock_Ip_Get_PLL_CLK_Frequency.part.0 ();

  <bb 4> [local count: 1073741824]:
  # Frequency_5 = PHI <Frequency_6(3), 0(2)>
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  return Frequency_5;

}


Clock_Ip_Get_SXOSC_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_7 = Clock_Ip_u32Sxosc;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _2 = _1 & 524288;
  if (_2 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct SXOSC_Type *)1076674560B].SXOSC_CTRL;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableClock[_4];
  Frequency_9 = Frequency_7 & _8;
  # DEBUG Frequency => Frequency_9

  <bb 4> [local count: 1073741824]:
  # Frequency_5 = PHI <Frequency_9(3), 0(2)>
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  return Frequency_5;

}


Clock_Ip_Get_FXOSC_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_7 = Clock_Ip_u32Fxosc;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _2 = _1 & 2097152;
  if (_2 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableClock[_4];
  Frequency_9 = Frequency_7 & _8;
  # DEBUG Frequency => Frequency_9

  <bb 4> [local count: 1073741824]:
  # Frequency_5 = PHI <Frequency_9(3), 0(2)>
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  return Frequency_5;

}


Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY NULL
  # DEBUG BEGIN_STMT
  # DEBUG Frequency => 32000
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SIRC_Type *)1076658176B].MISCELLANEOUS_IN;
  _2 = _1 >> 8;
  _3 = _2 & 1;
  _5 = Clock_Ip_u32EnableClock[_3];
  Frequency_6 = _5 & 32000;
  # DEBUG Frequency => Frequency_6
  # DEBUG BEGIN_STMT
  return Frequency_6;

}


Clock_Ip_Get_SIRC_CLK_Frequency ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return 32000;

}


Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency ()
{
  uint32 Frequency;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Frequency_5 = Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency ();
  # DEBUG Frequency => Frequency_5
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct FIRC_Type *)1076690944B].STDBY_ENABLE;
  _2 = _1 & 1;
  _6 = Clock_Ip_u32EnableClock[_2];
  Frequency_7 = Frequency_5 & _6;
  # DEBUG Frequency => Frequency_7
  # DEBUG BEGIN_STMT
  return Frequency_7;

}


Clock_Ip_Get_FIRC_CLK_Frequency ()
{
  uint32 _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _3 = Clock_Ip_Get_FIRC_POSTDIV_CLK_Frequency ();
  return _3;

}


Clock_Ip_Get_Zero_Frequency ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return 0;

}


