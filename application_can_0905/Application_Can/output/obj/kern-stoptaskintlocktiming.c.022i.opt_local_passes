__attribute__((target ("general-regs-only")))
OS_StopTaskIntLockTiming (const struct os_task_t * tp, os_intlocktype_t locktype)
{
  os_tick_t OS_hwtStartDelta;
  os_tick_t used;
  os_tick_t locktime;
  struct os_taskaccounting_t * acc;
  struct os_kerneldata_t * const kernel_data;
  const struct os_hwt_t * _1;
  const struct os_hwtdrv_t * _2;
  void (*<T521>) (const struct os_hwt_t *) _3;
  const struct os_hwt_t * _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  unsigned char _16;
  unsigned char _17;
  unsigned int _18;
  unsigned int _19;
  struct os_taskaccounting_t * _20;
  unsigned int _21;
  unsigned int _22;
  struct os_taskaccounting_t * _23;
  unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  const struct os_hwt_t * _30;
  unsigned int _31;
  const struct os_hwt_t * _32;
  const struct os_hwt_t * _33;
  const struct os_hwtdrv_t * _34;
  os_boolean_t (*<T52b>) (const struct os_hwt_t *, os_timervalue_t, os_tick_t) _35;
  const struct os_hwt_t * _36;
  unsigned int _37;
  const os_tick_t iftmp.0_39;
  const os_tick_t iftmp.0_48;
  const os_tick_t iftmp.0_49;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data_43 = &OS_kernelData;
  # DEBUG kernel_data => kernel_data_43
  # DEBUG BEGIN_STMT
  acc_46 = tp_45(D)->accounting;
  # DEBUG acc => acc_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (locktype_47(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.0_49 = tp_45(D)->osLockTime;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0_48 = tp_45(D)->allLockTime;

  <bb 5> :
  # iftmp.0_39 = PHI <iftmp.0_49(3), iftmp.0_48(4)>
  locktime_50 = iftmp.0_39;
  # DEBUG locktime => locktime_50
  # DEBUG BEGIN_STMT
  if (locktime_50 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _1 = OS_executionTimer[0];
  _2 = _1->driver;
  _3 = _2->hwtStop;
  _4 = OS_executionTimer[0];
  _3 (_4);
  # DEBUG BEGIN_STMT
  used_53 = OS_GetTimeUsed ();
  # DEBUG used => used_53
  # DEBUG BEGIN_STMT
  if (locktype_47(D) == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.accounting.etUsed;
  _6 = acc_46->osSaveUsed;
  _7 = used_53 + _6;
  _8 = _5 + _7;
  OS_kernelData.accounting.etUsed = _8;
  # DEBUG BEGIN_STMT
  _9 = acc_46->osSaveLimit;
  OS_kernelData.accounting.etLimit = _9;
  # DEBUG BEGIN_STMT
  _10 = acc_46->osSaveType;
  OS_kernelData.accounting.etType = _10;
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  _11 = OS_kernelData.accounting.etUsed;
  _12 = acc_46->allSaveUsed;
  _13 = used_53 + _12;
  _14 = _11 + _13;
  OS_kernelData.accounting.etUsed = _14;
  # DEBUG BEGIN_STMT
  _15 = acc_46->allSaveLimit;
  OS_kernelData.accounting.etLimit = _15;
  # DEBUG BEGIN_STMT
  _16 = acc_46->allSaveType;
  OS_kernelData.accounting.etType = _16;

  <bb 9> :
  # DEBUG BEGIN_STMT
  _17 = tp_45(D)->flags;
  _18 = (unsigned int) _17;
  _19 = _18 & 64;
  if (_19 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _20 = tp_45(D)->accounting;
  _21 = _20->etMax;
  _22 = OS_kernelData.accounting.etUsed;
  if (_21 < _22)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _23 = tp_45(D)->accounting;
  _24 = OS_kernelData.accounting.etUsed;
  _23->etMax = _24;

  <bb 12> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _25 = OS_kernelData.accounting.etLimit;
  if (_25 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _26 = OS_kernelData.accounting.etUsed;
  _27 = OS_kernelData.accounting.etLimit;
  if (_26 >= _27)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  OS_ExceedExecTime ();
  goto <bb 18>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _28 = OS_kernelData.accounting.etLimit;
  _29 = OS_kernelData.accounting.etUsed;
  OS_hwtStartDelta_61 = _28 - _29;
  # DEBUG OS_hwtStartDelta => OS_hwtStartDelta_61
  # DEBUG BEGIN_STMT
  _30 = OS_executionTimer[0];
  _31 = _30->maxDelta;
  if (OS_hwtStartDelta_61 > _31)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _32 = OS_executionTimer[0];
  OS_hwtStartDelta_62 = _32->defDelta;
  # DEBUG OS_hwtStartDelta => OS_hwtStartDelta_62

  <bb 17> :
  # OS_hwtStartDelta_38 = PHI <OS_hwtStartDelta_61(15), OS_hwtStartDelta_62(16)>
  # DEBUG OS_hwtStartDelta => OS_hwtStartDelta_38
  # DEBUG BEGIN_STMT
  _33 = OS_executionTimer[0];
  _34 = _33->driver;
  _35 = _34->hwtStart;
  _36 = OS_executionTimer[0];
  _37 = OS_kernelData.accounting.frc;
  _35 (_36, _37, OS_hwtStartDelta_38);

  <bb 18> :
  # DEBUG BEGIN_STMT
  return;

}


