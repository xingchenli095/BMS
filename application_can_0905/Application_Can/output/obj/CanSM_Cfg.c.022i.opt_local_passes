CanSM_CtrlIdxFromCtrlId (uint8 ctrlID)
{
  uint8 ctrlNwIdx;
  uint8 ctrlIdx;
  uint8 ctrlIdxRet;
  uint8 nwidx;
  const struct CanSM_ConfigType * CanSM_ConfigPtr.11_1;
  const struct CanSMNetworkType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct CanSMNetworkType * _5;
  const struct CanSMControllerType * _6;
  sizetype _7;
  const struct CanSMControllerType * _8;
  unsigned char _9;
  unsigned char ctrlNwIdx.12_10;
  const struct CanSM_ConfigType * CanSM_ConfigPtr.13_11;
  const struct CanSMNetworkType * _12;
  unsigned int _13;
  unsigned int _14;
  const struct CanSMNetworkType * _15;
  unsigned char _16;
  unsigned char nwidx.14_17;
  uint8 _36;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ctrlIdxRet_25 = 1;
  # DEBUG ctrlIdxRet => ctrlIdxRet_25
  # DEBUG BEGIN_STMT
  ctrlIdx_26 = 0;
  # DEBUG ctrlIdx => ctrlIdx_26
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  nwidx_27 = 0;
  # DEBUG nwidx => nwidx_27
  goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ctrlNwIdx_28 = 0;
  # DEBUG ctrlNwIdx => ctrlNwIdx_28
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanSM_ConfigPtr.11_1 = CanSM_ConfigPtr;
  _2 = CanSM_ConfigPtr.11_1->NetRef;
  _3 = (unsigned int) nwidx_18;
  _4 = _3 * 20;
  _5 = _2 + _4;
  _6 = _5->CtrlRef;
  _7 = (sizetype) ctrlNwIdx_24;
  _8 = _6 + _7;
  _9 = _8->ControllerId;
  if (ctrlID_30(D) == _9)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ctrlIdx_32 = ctrlIdx_23 + ctrlNwIdx_24;
  # DEBUG ctrlIdx => ctrlIdx_32
  # DEBUG BEGIN_STMT
  ctrlIdxRet_33 = ctrlIdx_32;
  # DEBUG ctrlIdxRet => ctrlIdxRet_33
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ctrlNwIdx.12_10 = ctrlNwIdx_24;
  ctrlNwIdx_31 = ctrlNwIdx.12_10 + 1;
  # DEBUG ctrlNwIdx => ctrlNwIdx_31

  <bb 7> :
  # ctrlNwIdx_24 = PHI <ctrlNwIdx_28(3), ctrlNwIdx_31(6)>
  # DEBUG ctrlNwIdx => ctrlNwIdx_24
  # DEBUG BEGIN_STMT
  CanSM_ConfigPtr.13_11 = CanSM_ConfigPtr;
  _12 = CanSM_ConfigPtr.13_11->NetRef;
  _13 = (unsigned int) nwidx_18;
  _14 = _13 * 20;
  _15 = _12 + _14;
  _16 = _15->NumNwCtrl;
  if (ctrlNwIdx_24 < _16)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # ctrlIdxRet_19 = PHI <ctrlIdxRet_33(5), ctrlIdxRet_20(7)>
  # ctrlIdx_22 = PHI <ctrlIdx_32(5), ctrlIdx_23(7)>
  # DEBUG ctrlIdx => ctrlIdx_22
  # DEBUG ctrlIdxRet => ctrlIdxRet_19
  # DEBUG BEGIN_STMT
  ctrlIdx_34 = ctrlIdx_22 + ctrlNwIdx_24;
  # DEBUG ctrlIdx => ctrlIdx_34
  # DEBUG BEGIN_STMT
  if (ctrlIdxRet_19 != 1)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  nwidx.14_17 = nwidx_18;
  nwidx_35 = nwidx.14_17 + 1;
  # DEBUG nwidx => nwidx_35

  <bb 10> :
  # nwidx_18 = PHI <nwidx_27(2), nwidx_35(9)>
  # ctrlIdxRet_20 = PHI <ctrlIdxRet_25(2), ctrlIdxRet_19(9)>
  # ctrlIdx_23 = PHI <ctrlIdx_26(2), ctrlIdx_34(9)>
  # DEBUG ctrlIdx => ctrlIdx_23
  # DEBUG ctrlIdxRet => ctrlIdxRet_20
  # DEBUG nwidx => nwidx_18
  # DEBUG BEGIN_STMT
  if (nwidx_18 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # ctrlIdxRet_21 = PHI <ctrlIdxRet_19(8), ctrlIdxRet_20(10)>
  # DEBUG ctrlIdxRet => ctrlIdxRet_21
  # DEBUG BEGIN_STMT
  _36 = ctrlIdxRet_21;
  return _36;

}


CanSM_NwIdxFromCtrlId (uint8 ctrlID)
{
  uint8 ctrlIdx;
  CanSM_NetworkIndexType nwidxret;
  CanSM_NetworkIndexType nwidx;
  const struct CanSM_ConfigType * CanSM_ConfigPtr.7_1;
  const struct CanSMNetworkType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct CanSMNetworkType * _5;
  const struct CanSMControllerType * _6;
  sizetype _7;
  const struct CanSMControllerType * _8;
  unsigned char _9;
  unsigned char ctrlIdx.8_10;
  const struct CanSM_ConfigType * CanSM_ConfigPtr.9_11;
  const struct CanSMNetworkType * _12;
  unsigned int _13;
  unsigned int _14;
  const struct CanSMNetworkType * _15;
  unsigned char _16;
  unsigned char nwidx.10_17;
  CanSM_NetworkIndexType _31;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  nwidxret_23 = 1;
  # DEBUG nwidxret => nwidxret_23
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  nwidx_24 = 0;
  # DEBUG nwidx => nwidx_24
  goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ctrlIdx_25 = 0;
  # DEBUG ctrlIdx => ctrlIdx_25
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  CanSM_ConfigPtr.7_1 = CanSM_ConfigPtr;
  _2 = CanSM_ConfigPtr.7_1->NetRef;
  _3 = (unsigned int) nwidx_18;
  _4 = _3 * 20;
  _5 = _2 + _4;
  _6 = _5->CtrlRef;
  _7 = (sizetype) ctrlIdx_22;
  _8 = _6 + _7;
  _9 = _8->ControllerId;
  if (ctrlID_27(D) == _9)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  nwidxret_29 = nwidx_18;
  # DEBUG nwidxret => nwidxret_29
  # DEBUG BEGIN_STMT
  goto <bb 8>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  ctrlIdx.8_10 = ctrlIdx_22;
  ctrlIdx_28 = ctrlIdx.8_10 + 1;
  # DEBUG ctrlIdx => ctrlIdx_28

  <bb 7> :
  # ctrlIdx_22 = PHI <ctrlIdx_25(3), ctrlIdx_28(6)>
  # DEBUG ctrlIdx => ctrlIdx_22
  # DEBUG BEGIN_STMT
  CanSM_ConfigPtr.9_11 = CanSM_ConfigPtr;
  _12 = CanSM_ConfigPtr.9_11->NetRef;
  _13 = (unsigned int) nwidx_18;
  _14 = _13 * 20;
  _15 = _12 + _14;
  _16 = _15->NumNwCtrl;
  if (ctrlIdx_22 < _16)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # nwidxret_19 = PHI <nwidxret_29(5), nwidxret_20(7)>
  # DEBUG nwidxret => nwidxret_19
  # DEBUG BEGIN_STMT
  if (nwidxret_19 != 1)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  nwidx.10_17 = nwidx_18;
  nwidx_30 = nwidx.10_17 + 1;
  # DEBUG nwidx => nwidx_30

  <bb 10> :
  # nwidx_18 = PHI <nwidx_24(2), nwidx_30(9)>
  # nwidxret_20 = PHI <nwidxret_23(2), nwidxret_19(9)>
  # DEBUG nwidxret => nwidxret_20
  # DEBUG nwidx => nwidx_18
  # DEBUG BEGIN_STMT
  if (nwidx_18 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # nwidxret_21 = PHI <nwidxret_19(8), nwidxret_20(10)>
  # DEBUG nwidxret => nwidxret_21
  # DEBUG BEGIN_STMT
  _31 = nwidxret_21;
  return _31;

}


CanSM_NwIdxFromTrcvId (uint8 trcvID)
{
  CanSM_NetworkIndexType nwidx;
  const struct CanSM_ConfigType * CanSM_ConfigPtr.5_1;
  const struct CanSMNetworkType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct CanSMNetworkType * _5;
  unsigned char _6;
  unsigned char nwidx.6_7;
  CanSM_NetworkIndexType _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  nwidx_9 = 0;
  # DEBUG nwidx => nwidx_9
  goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanSM_ConfigPtr.5_1 = CanSM_ConfigPtr;
  _2 = CanSM_ConfigPtr.5_1->NetRef;
  _3 = (unsigned int) nwidx_8;
  _4 = _3 * 20;
  _5 = _2 + _4;
  _6 = _5->TrcvId;
  if (trcvID_11(D) == _6)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  nwidx.6_7 = nwidx_8;
  nwidx_12 = nwidx.6_7 + 1;
  # DEBUG nwidx => nwidx_12

  <bb 5> :
  # nwidx_8 = PHI <nwidx_9(2), nwidx_12(4)>
  # DEBUG nwidx => nwidx_8
  # DEBUG BEGIN_STMT
  if (nwidx_8 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _13 = nwidx_8;
  return _13;

}


CanSM_NetworkHandleIsValid (NetworkHandleType nw)
{
  boolean ret;
  CanSM_NetworkIndexType nwidx;
  const struct CanSM_ConfigType * CanSM_ConfigPtr.3_1;
  const struct CanSMNetworkType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct CanSMNetworkType * _5;
  unsigned char _6;
  unsigned char nwidx.4_7;
  _Bool _8;
  int _9;
  boolean _17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  nwidx_11 = 0;
  # DEBUG nwidx => nwidx_11
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  nwidx_12 = 0;
  # DEBUG nwidx => nwidx_12
  goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanSM_ConfigPtr.3_1 = CanSM_ConfigPtr;
  _2 = CanSM_ConfigPtr.3_1->NetRef;
  _3 = (unsigned int) nwidx_10;
  _4 = _3 * 20;
  _5 = _2 + _4;
  _6 = _5->ComMChId;
  if (nw_14(D) == _6)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  nwidx.4_7 = nwidx_10;
  nwidx_15 = nwidx.4_7 + 1;
  # DEBUG nwidx => nwidx_15

  <bb 5> :
  # nwidx_10 = PHI <nwidx_12(2), nwidx_15(4)>
  # DEBUG nwidx => nwidx_10
  # DEBUG BEGIN_STMT
  if (nwidx_10 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _8 = nwidx_10 != 1;
  _9 = (int) _8;
  ret_16 = (boolean) _9;
  # DEBUG ret => ret_16
  # DEBUG BEGIN_STMT
  _17 = ret_16;
  return _17;

}


CanSM_GetNetworkHandleFromIndex (CanSM_NetworkIndexType nwidx)
{
  NetworkHandleType ret;
  const struct CanSM_ConfigType * CanSM_ConfigPtr.2_1;
  const struct CanSMNetworkType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct CanSMNetworkType * _5;
  NetworkHandleType _9;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CanSM_ConfigPtr.2_1 = CanSM_ConfigPtr;
  _2 = CanSM_ConfigPtr.2_1->NetRef;
  _3 = (unsigned int) nwidx_7(D);
  _4 = _3 * 20;
  _5 = _2 + _4;
  ret_8 = _5->ComMChId;
  # DEBUG ret => ret_8
  # DEBUG BEGIN_STMT
  _9 = ret_8;
  return _9;

}


CanSM_GetNetworkIndexFromHandle (NetworkHandleType nw)
{
  CanSM_NetworkIndexType nwidx;
  const struct CanSM_ConfigType * CanSM_ConfigPtr.0_1;
  const struct CanSMNetworkType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct CanSMNetworkType * _5;
  unsigned char _6;
  unsigned char nwidx.1_7;
  CanSM_NetworkIndexType _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  nwidx_9 = 0;
  # DEBUG nwidx => nwidx_9
  # DEBUG BEGIN_STMT
  nwidx_10 = 0;
  # DEBUG nwidx => nwidx_10
  goto <bb 5>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  CanSM_ConfigPtr.0_1 = CanSM_ConfigPtr;
  _2 = CanSM_ConfigPtr.0_1->NetRef;
  _3 = (unsigned int) nwidx_8;
  _4 = _3 * 20;
  _5 = _2 + _4;
  _6 = _5->ComMChId;
  if (nw_12(D) == _6)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  nwidx.1_7 = nwidx_8;
  nwidx_13 = nwidx.1_7 + 1;
  # DEBUG nwidx => nwidx_13

  <bb 5> :
  # nwidx_8 = PHI <nwidx_10(2), nwidx_13(4)>
  # DEBUG nwidx => nwidx_8
  # DEBUG BEGIN_STMT
  if (nwidx_8 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _14 = nwidx_8;
  return _14;

}


