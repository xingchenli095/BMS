
Marking local functions:


Marking externally visible functions: OS_KillTask


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_ptrPostTaskHook/7 (OS_ptrPostTaskHook) @06c18e58
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KillTask/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_stopTaskExecTimingFp/6 (OS_stopTaskExecTimingFp) @06c18d80
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KillTask/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/5 (OS_kernelData) @06c18d38
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KillTask/0 (read)OS_KillTask/0 (read)OS_KillTask/0 (addr)OS_KillTask/0 (read)OS_KillTask/0 (write)OS_KillTask/0 (write)
  Availability: not_available
  Varpool flags:
OS_DequeueAll/4 (OS_DequeueAll) @06c3de00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KillTask/0 OS_KillTask/0 OS_KillTask/0 
  Calls: 
OS_ReleaseLocks/3 (OS_ReleaseLocks) @06c3dd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KillTask/0 
  Calls: 
OS_CORTEXM_IntSetDisablingLevel/2 (OS_CORTEXM_IntSetDisablingLevel) @06c3dc40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: OS_KillTask/0 OS_KillTask/0 
  Calls: 
OS_kernDisableLevel/1 (OS_kernDisableLevel) @06c18c18
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_KillTask/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_KillTask/0 (OS_KillTask) @06c3da80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernDisableLevel/1 (read)OS_kernelData/5 (read)OS_kernelData/5 (read)OS_stopTaskExecTimingFp/6 (read)OS_kernelData/5 (addr)OS_kernelData/5 (read)OS_kernelData/5 (write)OS_ptrPostTaskHook/7 (read)OS_kernelData/5 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: OS_CORTEXM_IntSetDisablingLevel/2 OS_DequeueAll/4 OS_DequeueAll/4 OS_DequeueAll/4 OS_ReleaseLocks/3 OS_CORTEXM_IntSetDisablingLevel/2 
   Indirect call
   Indirect call
__attribute__((target ("general-regs-only")))
OS_KillTask (const struct os_task_t * t, os_taskstate_t ts)
{
  os_uint8_t Os_CallHookTmp;
  struct os_kerneldata_t * const OS_kd;
  os_result_t result;
  os_intstatus_t is;
  struct os_taskdynamic_t * td;
  os_result_t D.7429;

  <bb 2> :
  # DEBUG BEGIN_STMT
  td = t->dynamic;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  result = 0;
  # DEBUG BEGIN_STMT
  OS_kernDisableLevel.0_1 = OS_kernDisableLevel;
  is = OS_CORTEXM_IntSetDisablingLevel (OS_kernDisableLevel.0_1);
  # DEBUG BEGIN_STMT
  _2 = td->lastLock;
  OS_ReleaseLocks (_2);
  # DEBUG BEGIN_STMT
  td->lastLock = 4294967295;
  # DEBUG BEGIN_STMT
  td->nestSuspendOs = 0;
  # DEBUG BEGIN_STMT
  td->nestSuspendAll = 0;
  # DEBUG BEGIN_STMT
  _3 = td->state;
  _4 = (int) _3;
  switch (_4) <default: <L14> [INV], case 0: <L9> [INV], case 1: <L10> [INV], case 2: <L0> [INV], case 3 ... 4: <L6> [INV], case 5: <L1> [INV], case 6: <L8> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  OS_DequeueAll (t);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td->state = ts;
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _5 = OS_kernelData.accounting.taskTimingNesting;
  if (_5 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _6 = OS_kernelData.accounting.inFunction;
  if (_6 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_stopTaskExecTimingFp.1_7 = OS_stopTaskExecTimingFp;
  OS_stopTaskExecTimingFp.1_7 (t);

  <bb 7> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kd = &OS_kernelData;
  # DEBUG BEGIN_STMT
  Os_CallHookTmp = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 12;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_ptrPostTaskHook.2_8 = OS_ptrPostTaskHook;
  OS_ptrPostTaskHook.2_8 ();
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = Os_CallHookTmp;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_DequeueAll (t);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td->state = ts;
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 8> :
<L6>:
  # DEBUG BEGIN_STMT
  OS_DequeueAll (t);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td->state = ts;
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 9> :
<L8>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td->state = ts;
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 10> :
<L9>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td->state = ts;
  # DEBUG BEGIN_STMT
  goto <bb 12>; [INV]

  <bb 11> :
<L10>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  td->state = ts;
  # DEBUG BEGIN_STMT

  <bb 12> :
<L14>:
  # DEBUG BEGIN_STMT
  OS_CORTEXM_IntSetDisablingLevel (is);
  # DEBUG BEGIN_STMT
  D.7429 = result;
  return D.7429;

}


