
Marking local functions:


Marking externally visible functions: OS_Cat1Entry


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

OS_isrTableBase/2 (OS_isrTableBase) @06c54750
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_Cat1Entry/0 (read)
  Availability: not_available
  Varpool flags: read-only
OS_kernelData/1 (OS_kernelData) @06c54708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: OS_Cat1Entry/0 (addr)OS_Cat1Entry/0 (read)OS_Cat1Entry/0 (read)OS_Cat1Entry/0 (write)OS_Cat1Entry/0 (read)OS_Cat1Entry/0 (write)OS_Cat1Entry/0 (write)OS_Cat1Entry/0 (write)
  Availability: not_available
  Varpool flags:
OS_Cat1Entry/0 (OS_Cat1Entry) @06c7aa80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: OS_kernelData/1 (addr)OS_isrTableBase/2 (read)OS_kernelData/1 (read)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (read)OS_kernelData/1 (write)OS_kernelData/1 (write)OS_kernelData/1 (write)
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: 
   Indirect call
__attribute__((target ("general-regs-only")))
OS_Cat1Entry (os_isrid_t iid)
{
  os_isrid_t oldIsr;
  os_uint8_t inFunction;
  os_uint8_t inKernel;
  void (*os_isrfunc_t) (void) f;
  const struct os_isr_t * isr;
  struct os_kerneldata_t * const kernel_data;
  os_uint8_t D.7416;

  <bb 2> :
  # DEBUG BEGIN_STMT
  kernel_data = &OS_kernelData;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OS_isrTableBase.0_1 = OS_isrTableBase;
  _2 = (unsigned int) iid;
  _3 = _2 * 68;
  isr = OS_isrTableBase.0_1 + _3;
  # DEBUG BEGIN_STMT
  f = isr->func;
  # DEBUG BEGIN_STMT
  inKernel = OS_kernelData.inKernel;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  inFunction = OS_kernelData.inFunction;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = 2;
  # DEBUG BEGIN_STMT
  oldIsr = OS_kernelData.isrCurrent;
  # DEBUG BEGIN_STMT
  OS_kernelData.isrCurrent = iid;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  f ();
  # DEBUG BEGIN_STMT
  OS_kernelData.isrCurrent = oldIsr;
  # DEBUG BEGIN_STMT
  OS_kernelData.inFunction = inFunction;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.7416 = inKernel;
  return D.7416;

}


